okt 24 14:36:24 Desktop-Ubuntu mopidy[11252]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 12, "result": []}'
okt 24 14:36:24 Desktop-Ubuntu mopidy[11252]: ERROR    [LocalBackend-3 (_actor_loop)] mopidy_local.library Lookup error for local:track:test.mp3: no such table: tracks
okt 24 14:36:24 Desktop-Ubuntu mopidy[11252]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.add","params":{"uris":["local:track:test.mp3"],"at_position":0},"jsonrpc":"2.0","id":12}'
okt 24 14:36:22 Desktop-Ubuntu mopidy[11252]: DEBUG    [HttpServer] mopidy_iris.core {'id': 166661498295183, 'jsonrpc': '2.0', 'method': 'get_version', 'result': {'version': {'current': '3.64.1', 'latest': '3.64.1', 'is_root': False, 'upgrade_available': False}}, 'recipient': 'SB9UNOD5HRAJ'}
okt 24 14:36:22 Desktop-Ubuntu mopidy[11252]: DEBUG    [HttpServer] mopidy_iris.handlers Iris websocket message received: {"jsonrpc":"2.0","id":166661498295183,"method":"get_version"}
okt 24 14:36:22 Desktop-Ubuntu mopidy[11252]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 11, "result": null}'
okt 24 14:36:22 Desktop-Ubuntu mopidy[11252]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.playback.get_stream_title","params":{},"jsonrpc":"2.0","id":11}'
okt 24 14:36:22 Desktop-Ubuntu mopidy[11252]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 10, "result": ["file", "http", "https", "local", "m3u", "rtsp"]}'
okt 24 14:36:22 Desktop-Ubuntu mopidy[11252]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.get_uri_schemes","params":{},"jsonrpc":"2.0","id":10}'
okt 24 14:36:22 Desktop-Ubuntu mopidy[11252]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 9, "result": 0}'
okt 24 14:36:22 Desktop-Ubuntu mopidy[11252]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.playback.get_time_position","params":{},"jsonrpc":"2.0","id":9}'
okt 24 14:36:22 Desktop-Ubuntu mopidy[11252]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 8, "result": []}'
okt 24 14:36:22 Desktop-Ubuntu mopidy[11252]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_tl_tracks","params":{},"jsonrpc":"2.0","id":8}'
okt 24 14:36:22 Desktop-Ubuntu mopidy[11252]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 7, "result": false}'
okt 24 14:36:22 Desktop-Ubuntu mopidy[11252]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_repeat","params":{},"jsonrpc":"2.0","id":7}'
okt 24 14:36:22 Desktop-Ubuntu mopidy[11252]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 6, "result": false}'
okt 24 14:36:22 Desktop-Ubuntu mopidy[11252]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_random","params":{},"jsonrpc":"2.0","id":6}'
okt 24 14:36:22 Desktop-Ubuntu mopidy[11252]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 5, "result": false}'
okt 24 14:36:22 Desktop-Ubuntu mopidy[11252]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_consume","params":{},"jsonrpc":"2.0","id":5}'
okt 24 14:36:22 Desktop-Ubuntu mopidy[11252]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 4, "result": false}'
okt 24 14:36:22 Desktop-Ubuntu mopidy[11252]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.mixer.get_mute","params":{},"jsonrpc":"2.0","id":4}'
okt 24 14:36:22 Desktop-Ubuntu mopidy[11252]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 3, "result": 100}'
okt 24 14:36:22 Desktop-Ubuntu mopidy[11252]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.mixer.get_volume","params":{},"jsonrpc":"2.0","id":3}'
okt 24 14:36:22 Desktop-Ubuntu mopidy[11252]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 2, "result": "stopped"}'
okt 24 14:36:22 Desktop-Ubuntu mopidy[11252]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.playback.get_state","params":{},"jsonrpc":"2.0","id":2}'
okt 24 14:36:22 Desktop-Ubuntu mopidy[11252]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 1, "result": null}'
okt 24 14:36:22 Desktop-Ubuntu mopidy[11252]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.playback.get_current_tl_track","params":{},"jsonrpc":"2.0","id":1}'
okt 24 14:36:22 Desktop-Ubuntu mopidy[11252]: DEBUG    [HttpServer] mopidy_iris.core {'id': 166661498245027, 'jsonrpc': '2.0', 'method': 'get_queue_metadata', 'result': {'queue_metadata': {}}, 'recipient': 'SB9UNOD5HRAJ'}
okt 24 14:36:22 Desktop-Ubuntu mopidy[11252]: DEBUG    [HttpServer] mopidy_iris.handlers Iris websocket message received: {"jsonrpc":"2.0","id":166661498245027,"method":"get_queue_metadata"}
okt 24 14:36:22 Desktop-Ubuntu mopidy[11252]: DEBUG    [HttpServer] mopidy_iris.core {'id': 166661498244914, 'jsonrpc': '2.0', 'method': 'get_pinned', 'result': {'pinned': []}, 'recipient': 'SB9UNOD5HRAJ'}
okt 24 14:36:22 Desktop-Ubuntu mopidy[11252]: DEBUG    [HttpServer] mopidy_iris.handlers Iris websocket message received: {"jsonrpc":"2.0","id":166661498244914,"method":"get_pinned"}
okt 24 14:36:22 Desktop-Ubuntu mopidy[11252]: DEBUG    [HttpServer] mopidy_iris.core {'id': 166661498244813, 'jsonrpc': '2.0', 'method': 'get_commands', 'result': {'commands': {}}, 'recipient': 'SB9UNOD5HRAJ'}
okt 24 14:36:22 Desktop-Ubuntu mopidy[11252]: DEBUG    [HttpServer] mopidy_iris.handlers Iris websocket message received: {"jsonrpc":"2.0","id":166661498244813,"method":"get_commands"}
okt 24 14:36:22 Desktop-Ubuntu mopidy[11252]: DEBUG    [HttpServer] mopidy_iris.core {'id': 16666149824463, 'jsonrpc': '2.0', 'method': 'get_radio', 'result': {'radio': {'enabled': 0, 'seed_artists': [], 'seed_genres': [], 'seed_tracks': [], 'results': []}}, 'recipient': 'SB9UNOD5HRAJ'}
okt 24 14:36:22 Desktop-Ubuntu mopidy[11252]: DEBUG    [HttpServer] mopidy_iris.handlers Iris websocket message received: {"jsonrpc":"2.0","id":16666149824463,"method":"get_radio"}
okt 24 14:36:22 Desktop-Ubuntu mopidy[11252]: DEBUG    [HttpServer] mopidy_iris.core {'id': 166661498244616, 'jsonrpc': '2.0', 'method': 'get_shared_config', 'result': {'shared_config': {}}, 'recipient': 'SB9UNOD5HRAJ'}
okt 24 14:36:22 Desktop-Ubuntu mopidy[11252]: DEBUG    [HttpServer] mopidy_iris.handlers Iris websocket message received: {"jsonrpc":"2.0","id":166661498244616,"method":"get_shared_config"}
okt 24 14:36:22 Desktop-Ubuntu mopidy[11252]: DEBUG    [HttpServer] mopidy_iris.core {'id': 166661498244469, 'jsonrpc': '2.0', 'method': 'get_config', 'result': {'config': {'is_root': False, 'spotify_username': False, 'country': 'NZ', 'locale': 'en_NZ', 'snapcast_enabled': True, 'snapcast_host': 'localhost', 'snapcast_port': '1780', 'snapcast_ssl': False, 'snapcast_stream': 'Default', 'spotify_authorization_url': 'https://jamesbarnsley.co.nz/iris/auth_spotify.php', 'lastfm_authorization_url': 'https://jamesbarnsley.co.nz/iris/auth_lastfm.php', 'genius_authorization_url': 'https://jamesbarnsley.co.nz/iris/auth_genius.php', 'shared_config': {}}}, 'recipient': 'SB9UNOD5HRAJ'}
okt 24 14:36:22 Desktop-Ubuntu mopidy[11252]: DEBUG    [HttpServer] mopidy_iris.handlers Iris websocket message received: {"jsonrpc":"2.0","id":166661498244469,"method":"get_config"}
okt 24 14:36:22 Desktop-Ubuntu mopidy[11252]: DEBUG    [HttpServer] mopidy_iris.core {'id': 166661498244254, 'jsonrpc': '2.0', 'method': 'update_connection', 'result': {'connection': {'connection_id': 'SB9UNOD5HRAJ', 'ip': '127.0.0.1', 'created': '2022-10-24 14:36:22', 'username': 166656148284185, 'client_id': 166656148284193}}, 'recipient': 'SB9UNOD5HRAJ'}
okt 24 14:36:22 Desktop-Ubuntu mopidy[11252]: DEBUG    [HttpServer] mopidy_iris.core {'method': 'connection_changed', 'params': {'connection': {'connection_id': 'SB9UNOD5HRAJ', 'ip': '127.0.0.1', 'created': '2022-10-24 14:36:22', 'username': 166656148284185, 'client_id': 166656148284193}}}
okt 24 14:36:22 Desktop-Ubuntu mopidy[11252]: DEBUG    [HttpServer] mopidy_iris.handlers Iris websocket message received: {"jsonrpc":"2.0","id":166661498244254,"method":"update_connection","params":{"username":166656148284185,"client_id":166656148284193}}
okt 24 14:36:22 Desktop-Ubuntu mopidy[11252]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 0, "result": {"core.get_uri_schemes": {"description": "Get list of URI schemes we can handle", "params": []}, "core.get_version": {"description": "Get version of the Mopidy core API", "params": []}, "core.history.get_history": {"description": "Get the track history.\\n\\nThe timestamps are milliseconds since epoch.\\n\\n:returns: the track history\\n:rtype: list of (timestamp, :class:`mopidy.models.Ref`) tuples", "params": []}, "core.history.get_length": {"description": "Get the number of tracks in the history.\\n\\n:returns: the history length\\n:rtype: int", "params": []}, "core.library.browse": {"description": "Browse directories and tracks at the given ``uri``.\\n\\n``uri`` is a string which represents some directory belonging to a\\nbackend. To get the intial root directories for backends pass\\n:class:`None` as the URI.\\n\\nReturns a list of :class:`mopidy.models.Ref` objects for the\\ndirectories and tracks at the given ``uri``.\\n\\nThe :class:`~mopidy.models.Ref` objects representing tracks keep the\\ntrack\'s original URI. A matching pair of objects can look like this::\\n\\n    Track(uri=\'dummy:/foo.mp3\', name=\'foo\', artists=..., album=...)\\n    Ref.track(uri=\'dummy:/foo.mp3\', name=\'foo\')\\n\\nThe :class:`~mopidy.models.Ref` objects representing directories have\\nbackend specific URIs. These are opaque values, so no one but the\\nbackend that created them should try and derive any meaning from them.\\nThe only valid exception to this is checking the scheme, as it is used\\nto route browse requests to the correct backend.\\n\\nFor example, the dummy library\'s ``/bar`` directory could be returned\\nlike this::\\n\\n    Ref.directory(uri=\'dummy:directory:/bar\', name=\'bar\')\\n\\n:param string uri: URI to browse\\n:rtype: list of :class:`mopidy.models.Ref`\\n\\n.. versionadded:: 0.18", "params": [{"name": "uri"}]}, "core.library.get_distinct": {"description": "List distinct values for a given field from the library.\\n\\nThis has mainly been added to support the list commands the MPD\\nprotocol supports in a more sane fashion. Other frontends are not\\nrecommended to use this method.\\n\\n:param string field: Any one of ``uri``, ``track_name``, ``album``,\\n    ``artist``, ``albumartist``, ``composer``, ``performer``,\\n    ``track_no``, ``genre``, ``date``, ``comment``, ``disc_no``,\\n    ``musicbrainz_albumid``, ``musicbrainz_artistid``, or\\n    ``musicbrainz_trackid``.\\n:param dict query: Query to use for limiting results, see\\n    :meth:`search` for details about the query format.\\n:rtype: set of values corresponding to the requested field type.\\n\\n.. versionadded:: 1.0", "params": [{"name": "field"}, {"name": "query", "default": null}]}, "core.library.get_images": {"description": "Lookup the images for the given URIs\\n\\nBackends can use this to return image URIs for any URI they know about\\nbe it tracks, albums, playlists. The lookup result is a dictionary\\nmapping the provided URIs to lists of images.\\n\\nUnknown URIs or URIs the corresponding backend couldn\'t find anything\\nfor will simply return an empty list for that URI.\\n\\n:param uris: list of URIs to find images for\\n:type uris: list of string\\n:rtype: {uri: tuple of :class:`mopidy.models.Image`}\\n\\n.. versionadded:: 1.0", "params": [{"name": "uris"}]}, "core.library.lookup": {"description": "Lookup the given URIs.\\n\\nIf the URI expands to multiple tracks, the returned list will contain\\nthem all.\\n\\n:param uris: track URIs\\n:type uris: list of string\\n:rtype: {uri: list of :class:`mopidy.models.Track`}", "params": [{"name": "uris"}]}, "core.library.refresh": {"description": "Refresh library. Limit to URI and below if an URI is given.\\n\\n:param uri: directory or track URI\\n:type uri: string", "params": [{"name": "uri", "default": null}]}, "core.library.search": {"description": "Search the library for tracks where ``field`` contains ``values``.\\n\\n``field`` can be one of ``uri``, ``track_name``, ``album``, ``artist``,\\n``albumartist``, ``composer``, ``performer``, ``track_no``, ``genre``,\\n``date``, ``comment``, ``disc_no``, ``musicbrainz_albumid``,\\n``musicbrainz_artistid``, ``musicbrainz_trackid`` or ``any``.\\n\\nIf ``uris`` is given, the search is limited to results from within the\\nURI roots. For example passing ``uris=[\'file:\']`` will limit the search\\nto the local backend.\\n\\nExamples::\\n\\n    # Returns results matching \'a\' in any backend\\n    search({\'any\': [\'a\']})\\n\\n    # Returns results matching artist \'xyz\' in any backend\\n    search({\'artist\': [\'xyz\']})\\n\\n    # Returns results matching \'a\' and \'b\' and artist \'xyz\' in any\\n    # backend\\n    search({\'any\': [\'a\', \'b\'], \'artist\': [\'xyz\']})\\n\\n    # Returns results matching \'a\' if within the given URI roots\\n    # \\"file:///media/music\\" and \\"spotify:\\"\\n    search({\'any\': [\'a\']}, uris=[\'file:///media/music\', \'spotify:\'])\\n\\n    # Returns results matching artist \'xyz\' and \'abc\' in any backend\\n    search({\'artist\': [\'xyz\', \'abc\']})\\n\\n:param query: one or more queries to search for\\n:type query: dict\\n:param uris: zero or more URI roots to limit the search to\\n:type uris: list of string or :class:`None`\\n:param exact: if the search should use exact matching\\n:type exact: :class:`bool`\\n:rtype: list of :class:`mopidy.models.SearchResult`\\n\\n.. versionadded:: 1.0\\n    The ``exact`` keyword argument.", "params": [{"name": "query"}, {"name": "uris", "default": null}, {"name": "exact", "default": false}]}, "core.mixer.get_mute": {"description": "Get mute state.\\n\\n:class:`True` if muted, :class:`False` unmuted, :class:`None` if\\nunknown.", "params": []}, "core.mixer.get_volume": {"description": "Get the volume.\\n\\nInteger in range [0..100] or :class:`None` if unknown.\\n\\nThe volume scale is linear.", "params": []}, "core.mixer.set_mute": {"description": "Set mute state.\\n\\n:class:`True` to mute, :class:`False` to unmute.\\n\\nReturns :class:`True` if call is successful, otherwise :class:`False`.", "params": [{"name": "mute"}]}, "core.mixer.set_volume": {"description": "Set the volume.\\n\\nThe volume is defined as an integer in range [0..100].\\n\\nThe volume scale is linear.\\n\\nReturns :class:`True` if call is successful, otherwise :class:`False`.", "params": [{"name": "volume"}]}, "core.playback.get_current_tl_track": {"description": "Get the currently playing or selected track.\\n\\nReturns a :class:`mopidy.models.TlTrack` or :class:`None`.", "params": []}, "core.playback.get_current_tlid": {"description": "Get the currently playing or selected TLID.\\n\\nExtracted from :meth:`get_current_tl_track` for convenience.\\n\\nReturns a :class:`int` or :class:`None`.\\n\\n.. versionadded:: 1.1", "params": []}, "core.playback.get_current_track": {"description": "Get the currently playing or selected track.\\n\\nExtracted from :meth:`get_current_tl_track` for convenience.\\n\\nReturns a :class:`mopidy.models.Track` or :class:`None`.", "params": []}, "core.playback.get_state": {"description": "Get The playback state.", "params": []}, "core.playback.get_stream_title": {"description": "Get the current stream title or :class:`None`.", "params": []}, "core.playback.get_time_position": {"description": "Get time position in milliseconds.", "params": []}, "core.playback.next": {"description": "Change to the next track.\\n\\nThe current playback state will be kept. If it was playing, playing\\nwill continue. If it was paused, it will still be paused, etc.", "params": []}, "core.playback.pause": {"description": "Pause playback.", "params": []}, "core.playback.play": {"description": "Play the given track, or if the given tl_track and tlid is\\n:class:`None`, play the currently active track.\\n\\nNote that the track **must** already be in the tracklist.\\n\\n.. deprecated:: 3.0\\n    The ``tl_track`` argument. Use ``tlid`` instead.\\n\\n:param tl_track: track to play\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:param tlid: TLID of the track to play\\n:type tlid: :class:`int` or :class:`None`", "params": [{"name": "tl_track", "default": null}, {"name": "tlid", "default": null}]}, "core.playback.previous": {"description": "Change to the previous track.\\n\\nThe current playback state will be kept. If it was playing, playing\\nwill continue. If it was paused, it will still be paused, etc.", "params": []}, "core.playback.resume": {"description": "If paused, resume playing the current track.", "params": []}, "core.playback.seek": {"description": "Seeks to time position given in milliseconds.\\n\\n:param time_position: time position in milliseconds\\n:type time_position: int\\n:rtype: :class:`True` if successful, else :class:`False`", "params": [{"name": "time_position"}]}, "core.playback.set_state": {"description": "Set the playback state.\\n\\nMust be :attr:`PLAYING`, :attr:`PAUSED`, or :attr:`STOPPED`.\\n\\nPossible states and transitions:\\n\\n.. digraph:: state_transitions\\n\\n    \\"STOPPED\\" -> \\"PLAYING\\" [ label=\\"play\\" ]\\n    \\"STOPPED\\" -> \\"PAUSED\\" [ label=\\"pause\\" ]\\n    \\"PLAYING\\" -> \\"STOPPED\\" [ label=\\"stop\\" ]\\n    \\"PLAYING\\" -> \\"PAUSED\\" [ label=\\"pause\\" ]\\n    \\"PLAYING\\" -> \\"PLAYING\\" [ label=\\"play\\" ]\\n    \\"PAUSED\\" -> \\"PLAYING\\" [ label=\\"resume\\" ]\\n    \\"PAUSED\\" -> \\"STOPPED\\" [ label=\\"stop\\" ]", "params": [{"name": "new_state"}]}, "core.playback.stop": {"description": "Stop playing.", "params": []}, "core.playlists.as_list": {"description": "Get a list of the currently available playlists.\\n\\nReturns a list of :class:`~mopidy.models.Ref` objects referring to the\\nplaylists. In other words, no information about the playlists\' content\\nis given.\\n\\n:rtype: list of :class:`mopidy.models.Ref`\\n\\n.. versionadded:: 1.0", "params": []}, "core.playlists.create": {"description": "Create a new playlist.\\n\\nIf ``uri_scheme`` matches an URI scheme handled by a current backend,\\nthat backend is asked to create the playlist. If ``uri_scheme`` is\\n:class:`None` or doesn\'t match a current backend, the first backend is\\nasked to create the playlist.\\n\\nAll new playlists must be created by calling this method, and **not**\\nby creating new instances of :class:`mopidy.models.Playlist`.\\n\\n:param name: name of the new playlist\\n:type name: string\\n:param uri_scheme: use the backend matching the URI scheme\\n:type uri_scheme: string\\n:rtype: :class:`mopidy.models.Playlist` or :class:`None`", "params": [{"name": "name"}, {"name": "uri_scheme", "default": null}]}, "core.playlists.delete": {"description": "Delete playlist identified by the URI.\\n\\nIf the URI doesn\'t match the URI schemes handled by the current\\nbackends, nothing happens.\\n\\nReturns :class:`True` if deleted, :class:`False` otherwise.\\n\\n:param uri: URI of the playlist to delete\\n:type uri: string\\n:rtype: :class:`bool`\\n\\n.. versionchanged:: 2.2\\n    Return type defined.", "params": [{"name": "uri"}]}, "core.playlists.get_items": {"description": "Get the items in a playlist specified by ``uri``.\\n\\nReturns a list of :class:`~mopidy.models.Ref` objects referring to the\\nplaylist\'s items.\\n\\nIf a playlist with the given ``uri`` doesn\'t exist, it returns\\n:class:`None`.\\n\\n:rtype: list of :class:`mopidy.models.Ref`, or :class:`None`\\n\\n.. versionadded:: 1.0", "params": [{"name": "uri"}]}, "core.playlists.get_uri_schemes": {"description": "Get the list of URI schemes that support playlists.\\n\\n:rtype: list of string\\n\\n.. versionadded:: 2.0", "params": []}, "core.playlists.lookup": {"description": "Lookup playlist with given URI in both the set of playlists and in any\\nother playlist sources. Returns :class:`None` if not found.\\n\\n:param uri: playlist URI\\n:type uri: string\\n:rtype: :class:`mopidy.models.Playlist` or :class:`None`", "params": [{"name": "uri"}]}, "core.playlists.refresh": {"description": "Refresh the playlists in :attr:`playlists`.\\n\\nIf ``uri_scheme`` is :class:`None`, all backends are asked to refresh.\\nIf ``uri_scheme`` is an URI scheme handled by a backend, only that\\nbackend is asked to refresh. If ``uri_scheme`` doesn\'t match any\\ncurrent backend, nothing happens.\\n\\n:param uri_scheme: limit to the backend matching the URI scheme\\n:type uri_scheme: string", "params": [{"name": "uri_scheme", "default": null}]}, "core.playlists.save": {"description": "Save the playlist.\\n\\nFor a playlist to be saveable, it must have the ``uri`` attribute set.\\nYou must not set the ``uri`` atribute yourself, but use playlist\\nobjects returned by :meth:`create` or retrieved from :attr:`playlists`,\\nwhich will always give you saveable playlists.\\n\\nThe method returns the saved playlist. The return playlist may differ\\nfrom the saved playlist. E.g. if the playlist name was changed, the\\nreturned playlist may have a different URI. The caller of this method\\nmust throw away the playlist sent to this method, and use the\\nreturned playlist instead.\\n\\nIf the playlist\'s URI isn\'t set or doesn\'t match the URI scheme of a\\ncurrent backend, nothing is done and :class:`None` is returned.\\n\\n:param playlist: the playlist\\n:type playlist: :class:`mopidy.models.Playlist`\\n:rtype: :class:`mopidy.models.Playlist` or :class:`None`", "params": [{"name": "playlist"}]}, "core.tracklist.add": {"description": "Add tracks to the tracklist.\\n\\nIf ``uris`` is given instead of ``tracks``, the URIs are\\nlooked up in the library and the resulting tracks are added to the\\ntracklist.\\n\\nIf ``at_position`` is given, the tracks are inserted at the given\\nposition in the tracklist. If ``at_position`` is not given, the tracks\\nare appended to the end of the tracklist.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.\\n\\n:param tracks: tracks to add\\n:type tracks: list of :class:`mopidy.models.Track` or :class:`None`\\n:param at_position: position in tracklist to add tracks\\n:type at_position: int or :class:`None`\\n:param uris: list of URIs for tracks to add\\n:type uris: list of string or :class:`None`\\n:rtype: list of :class:`mopidy.models.TlTrack`\\n\\n.. versionadded:: 1.0\\n    The ``uris`` argument.\\n\\n.. deprecated:: 1.0\\n    The ``tracks`` argument. Use ``uris``.", "params": [{"name": "tracks", "default": null}, {"name": "at_position", "default": null}, {"name": "uris", "default": null}]}, "core.tracklist.clear": {"description": "Clear the tracklist.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.", "params": []}, "core.tracklist.eot_track": {"description": "The track that will be played after the given track.\\n\\nNot necessarily the same track as :meth:`next_track`.\\n\\n.. deprecated:: 3.0\\n    Use :meth:`get_eot_tlid` instead.\\n\\n:param tl_track: the reference track\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:rtype: :class:`mopidy.models.TlTrack` or :class:`None`", "params": [{"name": "tl_track"}]}, "core.tracklist.filter": {"description": "Filter the tracklist by the given criteria.\\n\\nEach rule in the criteria consists of a model field and a list of\\nvalues to compare it against. If the model field matches any of the\\nvalues, it may be returned.\\n\\nOnly tracks that match all the given criteria are returned.\\n\\nExamples::\\n\\n    # Returns tracks with TLIDs 1, 2, 3, or 4 (tracklist ID)\\n    filter({\'tlid\': [1, 2, 3, 4]})\\n\\n    # Returns track with URIs \'xyz\' or \'abc\'\\n    filter({\'uri\': [\'xyz\', \'abc\']})\\n\\n    # Returns track with a matching TLIDs (1, 3 or 6) and a\\n    # matching URI (\'xyz\' or \'abc\')\\n    filter({\'tlid\': [1, 3, 6], \'uri\': [\'xyz\', \'abc\']})\\n\\n:param criteria: one or more rules to match by\\n:type criteria: dict, of (string, list) pairs\\n:rtype: list of :class:`mopidy.models.TlTrack`", "params": [{"name": "criteria"}]}, "core.tracklist.get_consume": {"description": "Get consume mode.\\n\\n:class:`True`\\n    Tracks are removed from the tracklist when they have been played.\\n:class:`False`\\n    Tracks are not removed from the tracklist.", "params": []}, "core.tracklist.get_eot_tlid": {"description": "The TLID of the track that will be played after the current track.\\n\\nNot necessarily the same TLID as returned by :meth:`get_next_tlid`.\\n\\n:rtype: :class:`int` or :class:`None`\\n\\n.. versionadded:: 1.1", "params": []}, "core.tracklist.get_length": {"description": "Get length of the tracklist.", "params": []}, "core.tracklist.get_next_tlid": {"description": "The tlid of the track that will be played if calling\\n:meth:`mopidy.core.PlaybackController.next()`.\\n\\nFor normal playback this is the next track in the tracklist. If repeat\\nis enabled the next track can loop around the tracklist. When random is\\nenabled this should be a random track, all tracks should be played once\\nbefore the tracklist repeats.\\n\\n:rtype: :class:`int` or :class:`None`\\n\\n.. versionadded:: 1.1", "params": []}, "core.tracklist.get_previous_tlid": {"description": "Returns the TLID of the track that will be played if calling\\n:meth:`mopidy.core.PlaybackController.previous()`.\\n\\nFor normal playback this is the previous track in the tracklist. If\\nrandom and/or consume is enabled it should return the current track\\ninstead.\\n\\n:rtype: :class:`int` or :class:`None`\\n\\n.. versionadded:: 1.1", "params": []}, "core.tracklist.get_random": {"description": "Get random mode.\\n\\n:class:`True`\\n    Tracks are selected at random from the tracklist.\\n:class:`False`\\n    Tracks are played in the order of the tracklist.", "params": []}, "core.tracklist.get_repeat": {"description": "Get repeat mode.\\n\\n:class:`True`\\n    The tracklist is played repeatedly.\\n:class:`False`\\n    The tracklist is played once.", "params": []}, "core.tracklist.get_single": {"description": "Get single mode.\\n\\n:class:`True`\\n    Playback is stopped after current song, unless in ``repeat`` mode.\\n:class:`False`\\n    Playback continues after current song.", "params": []}, "core.tracklist.get_tl_tracks": {"description": "Get tracklist as list of :class:`mopidy.models.TlTrack`.", "params": []}, "core.tracklist.get_tracks": {"description": "Get tracklist as list of :class:`mopidy.models.Track`.", "params": []}, "core.tracklist.get_version": {"description": "Get the tracklist version.\\n\\nInteger which is increased every time the tracklist is changed. Is not\\nreset before Mopidy is restarted.", "params": []}, "core.tracklist.index": {"description": "The position of the given track in the tracklist.\\n\\nIf neither *tl_track* or *tlid* is given we return the index of\\nthe currently playing track.\\n\\n:param tl_track: the track to find the index of\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:param tlid: TLID of the track to find the index of\\n:type tlid: :class:`int` or :class:`None`\\n:rtype: :class:`int` or :class:`None`\\n\\n.. versionadded:: 1.1\\n    The *tlid* parameter", "params": [{"name": "tl_track", "default": null}, {"name": "tlid", "default": null}]}, "core.tracklist.move": {"description": "Move the tracks in the slice ``[start:end]`` to ``to_position``.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.\\n\\n:param start: position of first track to move\\n:type start: int\\n:param end: position after last track to move\\n:type end: int\\n:param to_position: new position for the tracks\\n:type to_position: int", "params": [{"name": "start"}, {"name": "end"}, {"name": "to_position"}]}, "core.tracklist.next_track": {"description": "The track that will be played if calling\\n:meth:`mopidy.core.PlaybackController.next()`.\\n\\nFor normal playback this is the next track in the tracklist. If repeat\\nis enabled the next track can loop around the tracklist. When random is\\nenabled this should be a random track, all tracks should be played once\\nbefore the tracklist repeats.\\n\\n.. deprecated:: 3.0\\n    Use :meth:`get_next_tlid` instead.\\n\\n:param tl_track: the reference track\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:rtype: :class:`mopidy.models.TlTrack` or :class:`None`", "params": [{"name": "tl_track"}]}, "core.tracklist.previous_track": {"description": "Returns the track that will be played if calling\\n:meth:`mopidy.core.PlaybackController.previous()`.\\n\\nFor normal playback this is the previous track in the tracklist. If\\nrandom and/or consume is enabled it should return the current track\\ninstead.\\n\\n.. deprecated:: 3.0\\n    Use :meth:`get_previous_tlid` instead.\\n\\n:param tl_track: the reference track\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:rtype: :class:`mopidy.models.TlTrack` or :class:`None`", "params": [{"name": "tl_track"}]}, "core.tracklist.remove": {"description": "Remove the matching tracks from the tracklist.\\n\\nUses :meth:`filter()` to lookup the tracks to remove.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.\\n\\n:param criteria: one or more rules to match by\\n:type criteria: dict, of (string, list) pairs\\n:rtype: list of :class:`mopidy.models.TlTrack` that were removed", "params": [{"name": "criteria"}]}, "core.tracklist.set_consume": {"description": "Set consume mode.\\n\\n:class:`True`\\n    Tracks are removed from the tracklist when they have been played.\\n:class:`False`\\n    Tracks are not removed from the tracklist.", "params": [{"name": "value"}]}, "core.tracklist.set_random": {"description": "Set random mode.\\n\\n:class:`True`\\n    Tracks are selected at random from the tracklist.\\n:class:`False`\\n    Tracks are played in the order of the tracklist.", "params": [{"name": "value"}]}, "core.tracklist.set_repeat": {"description": "Set repeat mode.\\n\\nTo repeat a single track, set both ``repeat`` and ``single``.\\n\\n:class:`True`\\n    The tracklist is played repeatedly.\\n:class:`False`\\n    The tracklist is played once.", "params": [{"name": "value"}]}, "core.tracklist.set_single": {"description": "Set single mode.\\n\\n:class:`True`\\n    Playback is stopped after current song, unless in ``repeat`` mode.\\n:class:`False`\\n    Playback continues after current song.", "params": [{"name": "value"}]}, "core.tracklist.shuffle": {"description": "Shuffles the entire tracklist. If ``start`` and ``end`` is given only\\nshuffles the slice ``[start:end]``.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.\\n\\n:param start: position of first track to shuffle\\n:type start: int or :class:`None`\\n:param end: position after last track to shuffle\\n:type end: int or :class:`None`", "params": [{"name": "start", "default": null}, {"name": "end", "default": null}]}, "core.tracklist.slice": {"description": "Returns a slice of the tracklist, limited by the given start and end\\npositions.\\n\\n:param start: position of first track to include in slice\\n:type start: int\\n:param end: position after last track to include in slice\\n:type end: int\\n:rtype: :class:`mopidy.models.TlTrack`", "params": [{"name": "start"}, {"name": "end"}]}}}'
okt 24 14:36:22 Desktop-Ubuntu mopidy[11252]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.describe","jsonrpc":"2.0","id":0}'
okt 24 14:36:22 Desktop-Ubuntu mopidy[11252]: INFO     [HttpServer] tornado.access 200 GET /iris/assets/favicon.png (127.0.0.1) 0.73ms
okt 24 14:36:22 Desktop-Ubuntu mopidy[11252]: DEBUG    [HttpServer] mopidy_iris.core {'method': 'connection_added', 'params': {'connection': {'connection_id': 'SB9UNOD5HRAJ', 'ip': '127.0.0.1', 'created': '2022-10-24 14:36:22'}}}
okt 24 14:36:22 Desktop-Ubuntu mopidy[11252]: DEBUG    [HttpServer] mopidy_iris.core <mopidy_iris.handlers.WebsocketHandler object at 0x7fcf695917e0>
okt 24 14:36:22 Desktop-Ubuntu mopidy[11252]: DEBUG    [HttpServer] mopidy_iris.core Connection added
okt 24 14:36:22 Desktop-Ubuntu mopidy[11252]: INFO     [HttpServer] tornado.access 101 GET /iris/ws/ (127.0.0.1) 0.50ms
okt 24 14:36:22 Desktop-Ubuntu mopidy[11252]: DEBUG    [HttpServer] mopidy.http.handlers New WebSocket connection from 127.0.0.1
okt 24 14:36:22 Desktop-Ubuntu mopidy[11252]: INFO     [HttpServer] tornado.access 101 GET /mopidy/ws/ (127.0.0.1) 0.55ms
okt 24 14:36:21 Desktop-Ubuntu mopidy[11252]: INFO     [HttpServer] tornado.access 200 GET /iris/library/null (127.0.0.1) 0.66ms
okt 24 14:36:21 Desktop-Ubuntu mopidy[11252]: INFO     [HttpServer] tornado.access 200 GET /iris/app.min.js?v=1666559547 (127.0.0.1) 10.36ms
okt 24 14:36:21 Desktop-Ubuntu mopidy[11252]: INFO     [HttpServer] tornado.access 200 GET /iris/app.min.css?v=1666559547 (127.0.0.1) 4.89ms
okt 24 14:36:21 Desktop-Ubuntu mopidy[11252]: INFO     [HttpServer] tornado.access 200 GET /iris/assets/app-icon.svg (127.0.0.1) 0.71ms
okt 24 14:36:21 Desktop-Ubuntu mopidy[11252]: DEBUG    [HttpServer] mopidy_iris.core {'method': 'connection_removed', 'params': {'connection': {'connection_id': '5K61LM02IDL8', 'ip': '127.0.0.1', 'created': '2022-10-24 14:32:24', 'username': 166656148284185, 'client_id': 166656148284193}}}
okt 24 14:36:21 Desktop-Ubuntu mopidy[11252]: DEBUG    [HttpServer] mopidy.http.handlers Closed WebSocket connection from 127.0.0.1
okt 24 14:36:20 Desktop-Ubuntu mopidy[11252]: INFO     [HttpServer] tornado.access 200 GET /iris/library/tracks (127.0.0.1) 6.04ms
okt 24 14:32:25 Desktop-Ubuntu mopidy[11252]: DEBUG    [HttpServer] mopidy_iris.core {'id': 166661474503435, 'jsonrpc': '2.0', 'method': 'get_version', 'result': {'version': {'current': '3.64.1', 'latest': '3.64.1', 'is_root': False, 'upgrade_available': False}}, 'recipient': '5K61LM02IDL8'}
okt 24 14:32:25 Desktop-Ubuntu mopidy[11252]: DEBUG    [HttpServer] mopidy_iris.handlers Iris websocket message received: {"jsonrpc":"2.0","id":166661474503435,"method":"get_version"}
okt 24 14:32:24 Desktop-Ubuntu mopidy[11252]: DEBUG    [HttpServer] mopidy_iris.core {'id': 166661474453312, 'jsonrpc': '2.0', 'method': 'get_queue_metadata', 'result': {'queue_metadata': {}}, 'recipient': '5K61LM02IDL8'}
okt 24 14:32:24 Desktop-Ubuntu mopidy[11252]: DEBUG    [HttpServer] mopidy_iris.handlers Iris websocket message received: {"jsonrpc":"2.0","id":166661474453312,"method":"get_queue_metadata"}
okt 24 14:32:24 Desktop-Ubuntu mopidy[11252]: DEBUG    [HttpServer] mopidy_iris.core {'id': 166661474453223, 'jsonrpc': '2.0', 'method': 'get_pinned', 'result': {'pinned': []}, 'recipient': '5K61LM02IDL8'}
okt 24 14:32:24 Desktop-Ubuntu mopidy[11252]: DEBUG    [HttpServer] mopidy_iris.handlers Iris websocket message received: {"jsonrpc":"2.0","id":166661474453223,"method":"get_pinned"}
okt 24 14:32:24 Desktop-Ubuntu mopidy[11252]: DEBUG    [HttpServer] mopidy_iris.core {'id': 166661474453168, 'jsonrpc': '2.0', 'method': 'get_commands', 'result': {'commands': {}}, 'recipient': '5K61LM02IDL8'}
okt 24 14:32:24 Desktop-Ubuntu mopidy[11252]: DEBUG    [HttpServer] mopidy_iris.handlers Iris websocket message received: {"jsonrpc":"2.0","id":166661474453168,"method":"get_commands"}
okt 24 14:32:24 Desktop-Ubuntu mopidy[11252]: DEBUG    [HttpServer] mopidy_iris.core {'id': 166661474453063, 'jsonrpc': '2.0', 'method': 'get_radio', 'result': {'radio': {'enabled': 0, 'seed_artists': [], 'seed_genres': [], 'seed_tracks': [], 'results': []}}, 'recipient': '5K61LM02IDL8'}
okt 24 14:32:24 Desktop-Ubuntu mopidy[11252]: DEBUG    [HttpServer] mopidy_iris.handlers Iris websocket message received: {"jsonrpc":"2.0","id":166661474453063,"method":"get_radio"}
okt 24 14:32:24 Desktop-Ubuntu mopidy[11252]: DEBUG    [HttpServer] mopidy_iris.core {'id': 166661474453053, 'jsonrpc': '2.0', 'method': 'get_shared_config', 'result': {'shared_config': {}}, 'recipient': '5K61LM02IDL8'}
okt 24 14:32:24 Desktop-Ubuntu mopidy[11252]: DEBUG    [HttpServer] mopidy_iris.handlers Iris websocket message received: {"jsonrpc":"2.0","id":166661474453053,"method":"get_shared_config"}
okt 24 14:32:24 Desktop-Ubuntu mopidy[11252]: DEBUG    [HttpServer] mopidy_iris.core {'id': 166661474452925, 'jsonrpc': '2.0', 'method': 'get_config', 'result': {'config': {'is_root': False, 'spotify_username': False, 'country': 'NZ', 'locale': 'en_NZ', 'snapcast_enabled': True, 'snapcast_host': 'localhost', 'snapcast_port': '1780', 'snapcast_ssl': False, 'snapcast_stream': 'Default', 'spotify_authorization_url': 'https://jamesbarnsley.co.nz/iris/auth_spotify.php', 'lastfm_authorization_url': 'https://jamesbarnsley.co.nz/iris/auth_lastfm.php', 'genius_authorization_url': 'https://jamesbarnsley.co.nz/iris/auth_genius.php', 'shared_config': {}}}, 'recipient': '5K61LM02IDL8'}
okt 24 14:32:24 Desktop-Ubuntu mopidy[11252]: DEBUG    [HttpServer] mopidy_iris.handlers Iris websocket message received: {"jsonrpc":"2.0","id":166661474452925,"method":"get_config"}
okt 24 14:32:24 Desktop-Ubuntu mopidy[11252]: DEBUG    [HttpServer] mopidy_iris.core {'id': 166661474452763, 'jsonrpc': '2.0', 'method': 'update_connection', 'result': {'connection': {'connection_id': '5K61LM02IDL8', 'ip': '127.0.0.1', 'created': '2022-10-24 14:32:24', 'username': 166656148284185, 'client_id': 166656148284193}}, 'recipient': '5K61LM02IDL8'}
okt 24 14:32:24 Desktop-Ubuntu mopidy[11252]: DEBUG    [HttpServer] mopidy_iris.core {'method': 'connection_changed', 'params': {'connection': {'connection_id': '5K61LM02IDL8', 'ip': '127.0.0.1', 'created': '2022-10-24 14:32:24', 'username': 166656148284185, 'client_id': 166656148284193}}}
okt 24 14:32:24 Desktop-Ubuntu mopidy[11252]: DEBUG    [HttpServer] mopidy_iris.handlers Iris websocket message received: {"jsonrpc":"2.0","id":166661474452763,"method":"update_connection","params":{"username":166656148284185,"client_id":166656148284193}}
okt 24 14:32:24 Desktop-Ubuntu mopidy[11252]: DEBUG    [HttpServer] mopidy_iris.core {'method': 'connection_added', 'params': {'connection': {'connection_id': '5K61LM02IDL8', 'ip': '127.0.0.1', 'created': '2022-10-24 14:32:24'}}}
okt 24 14:32:24 Desktop-Ubuntu mopidy[11252]: DEBUG    [HttpServer] mopidy_iris.core <mopidy_iris.handlers.WebsocketHandler object at 0x7fcf6b7c3220>
okt 24 14:32:24 Desktop-Ubuntu mopidy[11252]: DEBUG    [HttpServer] mopidy_iris.core Connection added
okt 24 14:32:24 Desktop-Ubuntu mopidy[11252]: INFO     [HttpServer] tornado.access 101 GET /iris/ws/ (127.0.0.1) 0.51ms
okt 24 14:32:20 Desktop-Ubuntu mopidy[11252]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 58, "result": null}'
okt 24 14:32:20 Desktop-Ubuntu mopidy[11252]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.playback.get_stream_title","params":{},"jsonrpc":"2.0","id":58}'
okt 24 14:32:20 Desktop-Ubuntu mopidy[11252]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 57, "result": ["file", "http", "https", "local", "m3u", "rtsp"]}'
okt 24 14:32:20 Desktop-Ubuntu mopidy[11252]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.get_uri_schemes","params":{},"jsonrpc":"2.0","id":57}'
okt 24 14:32:20 Desktop-Ubuntu mopidy[11252]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 56, "result": 0}'
okt 24 14:32:20 Desktop-Ubuntu mopidy[11252]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.playback.get_time_position","params":{},"jsonrpc":"2.0","id":56}'
okt 24 14:32:20 Desktop-Ubuntu mopidy[11252]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 55, "result": []}'
okt 24 14:32:20 Desktop-Ubuntu mopidy[11252]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_tl_tracks","params":{},"jsonrpc":"2.0","id":55}'
okt 24 14:32:20 Desktop-Ubuntu mopidy[11252]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 54, "result": false}'
okt 24 14:32:20 Desktop-Ubuntu mopidy[11252]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_repeat","params":{},"jsonrpc":"2.0","id":54}'
okt 24 14:32:20 Desktop-Ubuntu mopidy[11252]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 53, "result": false}'
okt 24 14:32:20 Desktop-Ubuntu mopidy[11252]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_random","params":{},"jsonrpc":"2.0","id":53}'
okt 24 14:32:20 Desktop-Ubuntu mopidy[11252]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 52, "result": false}'
okt 24 14:32:20 Desktop-Ubuntu mopidy[11252]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_consume","params":{},"jsonrpc":"2.0","id":52}'
okt 24 14:32:20 Desktop-Ubuntu mopidy[11252]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 51, "result": false}'
okt 24 14:32:20 Desktop-Ubuntu mopidy[11252]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.mixer.get_mute","params":{},"jsonrpc":"2.0","id":51}'
okt 24 14:32:20 Desktop-Ubuntu mopidy[11252]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 50, "result": 100}'
okt 24 14:32:20 Desktop-Ubuntu mopidy[11252]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.mixer.get_volume","params":{},"jsonrpc":"2.0","id":50}'
okt 24 14:32:20 Desktop-Ubuntu mopidy[11252]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 49, "result": "stopped"}'
okt 24 14:32:20 Desktop-Ubuntu mopidy[11252]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.playback.get_state","params":{},"jsonrpc":"2.0","id":49}'
okt 24 14:32:20 Desktop-Ubuntu mopidy[11252]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 48, "result": null}'
okt 24 14:32:20 Desktop-Ubuntu mopidy[11252]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.playback.get_current_tl_track","params":{},"jsonrpc":"2.0","id":48}'
okt 24 14:32:20 Desktop-Ubuntu mopidy[11252]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 47, "result": {"core.get_uri_schemes": {"description": "Get list of URI schemes we can handle", "params": []}, "core.get_version": {"description": "Get version of the Mopidy core API", "params": []}, "core.history.get_history": {"description": "Get the track history.\\n\\nThe timestamps are milliseconds since epoch.\\n\\n:returns: the track history\\n:rtype: list of (timestamp, :class:`mopidy.models.Ref`) tuples", "params": []}, "core.history.get_length": {"description": "Get the number of tracks in the history.\\n\\n:returns: the history length\\n:rtype: int", "params": []}, "core.library.browse": {"description": "Browse directories and tracks at the given ``uri``.\\n\\n``uri`` is a string which represents some directory belonging to a\\nbackend. To get the intial root directories for backends pass\\n:class:`None` as the URI.\\n\\nReturns a list of :class:`mopidy.models.Ref` objects for the\\ndirectories and tracks at the given ``uri``.\\n\\nThe :class:`~mopidy.models.Ref` objects representing tracks keep the\\ntrack\'s original URI. A matching pair of objects can look like this::\\n\\n    Track(uri=\'dummy:/foo.mp3\', name=\'foo\', artists=..., album=...)\\n    Ref.track(uri=\'dummy:/foo.mp3\', name=\'foo\')\\n\\nThe :class:`~mopidy.models.Ref` objects representing directories have\\nbackend specific URIs. These are opaque values, so no one but the\\nbackend that created them should try and derive any meaning from them.\\nThe only valid exception to this is checking the scheme, as it is used\\nto route browse requests to the correct backend.\\n\\nFor example, the dummy library\'s ``/bar`` directory could be returned\\nlike this::\\n\\n    Ref.directory(uri=\'dummy:directory:/bar\', name=\'bar\')\\n\\n:param string uri: URI to browse\\n:rtype: list of :class:`mopidy.models.Ref`\\n\\n.. versionadded:: 0.18", "params": [{"name": "uri"}]}, "core.library.get_distinct": {"description": "List distinct values for a given field from the library.\\n\\nThis has mainly been added to support the list commands the MPD\\nprotocol supports in a more sane fashion. Other frontends are not\\nrecommended to use this method.\\n\\n:param string field: Any one of ``uri``, ``track_name``, ``album``,\\n    ``artist``, ``albumartist``, ``composer``, ``performer``,\\n    ``track_no``, ``genre``, ``date``, ``comment``, ``disc_no``,\\n    ``musicbrainz_albumid``, ``musicbrainz_artistid``, or\\n    ``musicbrainz_trackid``.\\n:param dict query: Query to use for limiting results, see\\n    :meth:`search` for details about the query format.\\n:rtype: set of values corresponding to the requested field type.\\n\\n.. versionadded:: 1.0", "params": [{"name": "field"}, {"name": "query", "default": null}]}, "core.library.get_images": {"description": "Lookup the images for the given URIs\\n\\nBackends can use this to return image URIs for any URI they know about\\nbe it tracks, albums, playlists. The lookup result is a dictionary\\nmapping the provided URIs to lists of images.\\n\\nUnknown URIs or URIs the corresponding backend couldn\'t find anything\\nfor will simply return an empty list for that URI.\\n\\n:param uris: list of URIs to find images for\\n:type uris: list of string\\n:rtype: {uri: tuple of :class:`mopidy.models.Image`}\\n\\n.. versionadded:: 1.0", "params": [{"name": "uris"}]}, "core.library.lookup": {"description": "Lookup the given URIs.\\n\\nIf the URI expands to multiple tracks, the returned list will contain\\nthem all.\\n\\n:param uris: track URIs\\n:type uris: list of string\\n:rtype: {uri: list of :class:`mopidy.models.Track`}", "params": [{"name": "uris"}]}, "core.library.refresh": {"description": "Refresh library. Limit to URI and below if an URI is given.\\n\\n:param uri: directory or track URI\\n:type uri: string", "params": [{"name": "uri", "default": null}]}, "core.library.search": {"description": "Search the library for tracks where ``field`` contains ``values``.\\n\\n``field`` can be one of ``uri``, ``track_name``, ``album``, ``artist``,\\n``albumartist``, ``composer``, ``performer``, ``track_no``, ``genre``,\\n``date``, ``comment``, ``disc_no``, ``musicbrainz_albumid``,\\n``musicbrainz_artistid``, ``musicbrainz_trackid`` or ``any``.\\n\\nIf ``uris`` is given, the search is limited to results from within the\\nURI roots. For example passing ``uris=[\'file:\']`` will limit the search\\nto the local backend.\\n\\nExamples::\\n\\n    # Returns results matching \'a\' in any backend\\n    search({\'any\': [\'a\']})\\n\\n    # Returns results matching artist \'xyz\' in any backend\\n    search({\'artist\': [\'xyz\']})\\n\\n    # Returns results matching \'a\' and \'b\' and artist \'xyz\' in any\\n    # backend\\n    search({\'any\': [\'a\', \'b\'], \'artist\': [\'xyz\']})\\n\\n    # Returns results matching \'a\' if within the given URI roots\\n    # \\"file:///media/music\\" and \\"spotify:\\"\\n    search({\'any\': [\'a\']}, uris=[\'file:///media/music\', \'spotify:\'])\\n\\n    # Returns results matching artist \'xyz\' and \'abc\' in any backend\\n    search({\'artist\': [\'xyz\', \'abc\']})\\n\\n:param query: one or more queries to search for\\n:type query: dict\\n:param uris: zero or more URI roots to limit the search to\\n:type uris: list of string or :class:`None`\\n:param exact: if the search should use exact matching\\n:type exact: :class:`bool`\\n:rtype: list of :class:`mopidy.models.SearchResult`\\n\\n.. versionadded:: 1.0\\n    The ``exact`` keyword argument.", "params": [{"name": "query"}, {"name": "uris", "default": null}, {"name": "exact", "default": false}]}, "core.mixer.get_mute": {"description": "Get mute state.\\n\\n:class:`True` if muted, :class:`False` unmuted, :class:`None` if\\nunknown.", "params": []}, "core.mixer.get_volume": {"description": "Get the volume.\\n\\nInteger in range [0..100] or :class:`None` if unknown.\\n\\nThe volume scale is linear.", "params": []}, "core.mixer.set_mute": {"description": "Set mute state.\\n\\n:class:`True` to mute, :class:`False` to unmute.\\n\\nReturns :class:`True` if call is successful, otherwise :class:`False`.", "params": [{"name": "mute"}]}, "core.mixer.set_volume": {"description": "Set the volume.\\n\\nThe volume is defined as an integer in range [0..100].\\n\\nThe volume scale is linear.\\n\\nReturns :class:`True` if call is successful, otherwise :class:`False`.", "params": [{"name": "volume"}]}, "core.playback.get_current_tl_track": {"description": "Get the currently playing or selected track.\\n\\nReturns a :class:`mopidy.models.TlTrack` or :class:`None`.", "params": []}, "core.playback.get_current_tlid": {"description": "Get the currently playing or selected TLID.\\n\\nExtracted from :meth:`get_current_tl_track` for convenience.\\n\\nReturns a :class:`int` or :class:`None`.\\n\\n.. versionadded:: 1.1", "params": []}, "core.playback.get_current_track": {"description": "Get the currently playing or selected track.\\n\\nExtracted from :meth:`get_current_tl_track` for convenience.\\n\\nReturns a :class:`mopidy.models.Track` or :class:`None`.", "params": []}, "core.playback.get_state": {"description": "Get The playback state.", "params": []}, "core.playback.get_stream_title": {"description": "Get the current stream title or :class:`None`.", "params": []}, "core.playback.get_time_position": {"description": "Get time position in milliseconds.", "params": []}, "core.playback.next": {"description": "Change to the next track.\\n\\nThe current playback state will be kept. If it was playing, playing\\nwill continue. If it was paused, it will still be paused, etc.", "params": []}, "core.playback.pause": {"description": "Pause playback.", "params": []}, "core.playback.play": {"description": "Play the given track, or if the given tl_track and tlid is\\n:class:`None`, play the currently active track.\\n\\nNote that the track **must** already be in the tracklist.\\n\\n.. deprecated:: 3.0\\n    The ``tl_track`` argument. Use ``tlid`` instead.\\n\\n:param tl_track: track to play\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:param tlid: TLID of the track to play\\n:type tlid: :class:`int` or :class:`None`", "params": [{"name": "tl_track", "default": null}, {"name": "tlid", "default": null}]}, "core.playback.previous": {"description": "Change to the previous track.\\n\\nThe current playback state will be kept. If it was playing, playing\\nwill continue. If it was paused, it will still be paused, etc.", "params": []}, "core.playback.resume": {"description": "If paused, resume playing the current track.", "params": []}, "core.playback.seek": {"description": "Seeks to time position given in milliseconds.\\n\\n:param time_position: time position in milliseconds\\n:type time_position: int\\n:rtype: :class:`True` if successful, else :class:`False`", "params": [{"name": "time_position"}]}, "core.playback.set_state": {"description": "Set the playback state.\\n\\nMust be :attr:`PLAYING`, :attr:`PAUSED`, or :attr:`STOPPED`.\\n\\nPossible states and transitions:\\n\\n.. digraph:: state_transitions\\n\\n    \\"STOPPED\\" -> \\"PLAYING\\" [ label=\\"play\\" ]\\n    \\"STOPPED\\" -> \\"PAUSED\\" [ label=\\"pause\\" ]\\n    \\"PLAYING\\" -> \\"STOPPED\\" [ label=\\"stop\\" ]\\n    \\"PLAYING\\" -> \\"PAUSED\\" [ label=\\"pause\\" ]\\n    \\"PLAYING\\" -> \\"PLAYING\\" [ label=\\"play\\" ]\\n    \\"PAUSED\\" -> \\"PLAYING\\" [ label=\\"resume\\" ]\\n    \\"PAUSED\\" -> \\"STOPPED\\" [ label=\\"stop\\" ]", "params": [{"name": "new_state"}]}, "core.playback.stop": {"description": "Stop playing.", "params": []}, "core.playlists.as_list": {"description": "Get a list of the currently available playlists.\\n\\nReturns a list of :class:`~mopidy.models.Ref` objects referring to the\\nplaylists. In other words, no information about the playlists\' content\\nis given.\\n\\n:rtype: list of :class:`mopidy.models.Ref`\\n\\n.. versionadded:: 1.0", "params": []}, "core.playlists.create": {"description": "Create a new playlist.\\n\\nIf ``uri_scheme`` matches an URI scheme handled by a current backend,\\nthat backend is asked to create the playlist. If ``uri_scheme`` is\\n:class:`None` or doesn\'t match a current backend, the first backend is\\nasked to create the playlist.\\n\\nAll new playlists must be created by calling this method, and **not**\\nby creating new instances of :class:`mopidy.models.Playlist`.\\n\\n:param name: name of the new playlist\\n:type name: string\\n:param uri_scheme: use the backend matching the URI scheme\\n:type uri_scheme: string\\n:rtype: :class:`mopidy.models.Playlist` or :class:`None`", "params": [{"name": "name"}, {"name": "uri_scheme", "default": null}]}, "core.playlists.delete": {"description": "Delete playlist identified by the URI.\\n\\nIf the URI doesn\'t match the URI schemes handled by the current\\nbackends, nothing happens.\\n\\nReturns :class:`True` if deleted, :class:`False` otherwise.\\n\\n:param uri: URI of the playlist to delete\\n:type uri: string\\n:rtype: :class:`bool`\\n\\n.. versionchanged:: 2.2\\n    Return type defined.", "params": [{"name": "uri"}]}, "core.playlists.get_items": {"description": "Get the items in a playlist specified by ``uri``.\\n\\nReturns a list of :class:`~mopidy.models.Ref` objects referring to the\\nplaylist\'s items.\\n\\nIf a playlist with the given ``uri`` doesn\'t exist, it returns\\n:class:`None`.\\n\\n:rtype: list of :class:`mopidy.models.Ref`, or :class:`None`\\n\\n.. versionadded:: 1.0", "params": [{"name": "uri"}]}, "core.playlists.get_uri_schemes": {"description": "Get the list of URI schemes that support playlists.\\n\\n:rtype: list of string\\n\\n.. versionadded:: 2.0", "params": []}, "core.playlists.lookup": {"description": "Lookup playlist with given URI in both the set of playlists and in any\\nother playlist sources. Returns :class:`None` if not found.\\n\\n:param uri: playlist URI\\n:type uri: string\\n:rtype: :class:`mopidy.models.Playlist` or :class:`None`", "params": [{"name": "uri"}]}, "core.playlists.refresh": {"description": "Refresh the playlists in :attr:`playlists`.\\n\\nIf ``uri_scheme`` is :class:`None`, all backends are asked to refresh.\\nIf ``uri_scheme`` is an URI scheme handled by a backend, only that\\nbackend is asked to refresh. If ``uri_scheme`` doesn\'t match any\\ncurrent backend, nothing happens.\\n\\n:param uri_scheme: limit to the backend matching the URI scheme\\n:type uri_scheme: string", "params": [{"name": "uri_scheme", "default": null}]}, "core.playlists.save": {"description": "Save the playlist.\\n\\nFor a playlist to be saveable, it must have the ``uri`` attribute set.\\nYou must not set the ``uri`` atribute yourself, but use playlist\\nobjects returned by :meth:`create` or retrieved from :attr:`playlists`,\\nwhich will always give you saveable playlists.\\n\\nThe method returns the saved playlist. The return playlist may differ\\nfrom the saved playlist. E.g. if the playlist name was changed, the\\nreturned playlist may have a different URI. The caller of this method\\nmust throw away the playlist sent to this method, and use the\\nreturned playlist instead.\\n\\nIf the playlist\'s URI isn\'t set or doesn\'t match the URI scheme of a\\ncurrent backend, nothing is done and :class:`None` is returned.\\n\\n:param playlist: the playlist\\n:type playlist: :class:`mopidy.models.Playlist`\\n:rtype: :class:`mopidy.models.Playlist` or :class:`None`", "params": [{"name": "playlist"}]}, "core.tracklist.add": {"description": "Add tracks to the tracklist.\\n\\nIf ``uris`` is given instead of ``tracks``, the URIs are\\nlooked up in the library and the resulting tracks are added to the\\ntracklist.\\n\\nIf ``at_position`` is given, the tracks are inserted at the given\\nposition in the tracklist. If ``at_position`` is not given, the tracks\\nare appended to the end of the tracklist.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.\\n\\n:param tracks: tracks to add\\n:type tracks: list of :class:`mopidy.models.Track` or :class:`None`\\n:param at_position: position in tracklist to add tracks\\n:type at_position: int or :class:`None`\\n:param uris: list of URIs for tracks to add\\n:type uris: list of string or :class:`None`\\n:rtype: list of :class:`mopidy.models.TlTrack`\\n\\n.. versionadded:: 1.0\\n    The ``uris`` argument.\\n\\n.. deprecated:: 1.0\\n    The ``tracks`` argument. Use ``uris``.", "params": [{"name": "tracks", "default": null}, {"name": "at_position", "default": null}, {"name": "uris", "default": null}]}, "core.tracklist.clear": {"description": "Clear the tracklist.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.", "params": []}, "core.tracklist.eot_track": {"description": "The track that will be played after the given track.\\n\\nNot necessarily the same track as :meth:`next_track`.\\n\\n.. deprecated:: 3.0\\n    Use :meth:`get_eot_tlid` instead.\\n\\n:param tl_track: the reference track\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:rtype: :class:`mopidy.models.TlTrack` or :class:`None`", "params": [{"name": "tl_track"}]}, "core.tracklist.filter": {"description": "Filter the tracklist by the given criteria.\\n\\nEach rule in the criteria consists of a model field and a list of\\nvalues to compare it against. If the model field matches any of the\\nvalues, it may be returned.\\n\\nOnly tracks that match all the given criteria are returned.\\n\\nExamples::\\n\\n    # Returns tracks with TLIDs 1, 2, 3, or 4 (tracklist ID)\\n    filter({\'tlid\': [1, 2, 3, 4]})\\n\\n    # Returns track with URIs \'xyz\' or \'abc\'\\n    filter({\'uri\': [\'xyz\', \'abc\']})\\n\\n    # Returns track with a matching TLIDs (1, 3 or 6) and a\\n    # matching URI (\'xyz\' or \'abc\')\\n    filter({\'tlid\': [1, 3, 6], \'uri\': [\'xyz\', \'abc\']})\\n\\n:param criteria: one or more rules to match by\\n:type criteria: dict, of (string, list) pairs\\n:rtype: list of :class:`mopidy.models.TlTrack`", "params": [{"name": "criteria"}]}, "core.tracklist.get_consume": {"description": "Get consume mode.\\n\\n:class:`True`\\n    Tracks are removed from the tracklist when they have been played.\\n:class:`False`\\n    Tracks are not removed from the tracklist.", "params": []}, "core.tracklist.get_eot_tlid": {"description": "The TLID of the track that will be played after the current track.\\n\\nNot necessarily the same TLID as returned by :meth:`get_next_tlid`.\\n\\n:rtype: :class:`int` or :class:`None`\\n\\n.. versionadded:: 1.1", "params": []}, "core.tracklist.get_length": {"description": "Get length of the tracklist.", "params": []}, "core.tracklist.get_next_tlid": {"description": "The tlid of the track that will be played if calling\\n:meth:`mopidy.core.PlaybackController.next()`.\\n\\nFor normal playback this is the next track in the tracklist. If repeat\\nis enabled the next track can loop around the tracklist. When random is\\nenabled this should be a random track, all tracks should be played once\\nbefore the tracklist repeats.\\n\\n:rtype: :class:`int` or :class:`None`\\n\\n.. versionadded:: 1.1", "params": []}, "core.tracklist.get_previous_tlid": {"description": "Returns the TLID of the track that will be played if calling\\n:meth:`mopidy.core.PlaybackController.previous()`.\\n\\nFor normal playback this is the previous track in the tracklist. If\\nrandom and/or consume is enabled it should return the current track\\ninstead.\\n\\n:rtype: :class:`int` or :class:`None`\\n\\n.. versionadded:: 1.1", "params": []}, "core.tracklist.get_random": {"description": "Get random mode.\\n\\n:class:`True`\\n    Tracks are selected at random from the tracklist.\\n:class:`False`\\n    Tracks are played in the order of the tracklist.", "params": []}, "core.tracklist.get_repeat": {"description": "Get repeat mode.\\n\\n:class:`True`\\n    The tracklist is played repeatedly.\\n:class:`False`\\n    The tracklist is played once.", "params": []}, "core.tracklist.get_single": {"description": "Get single mode.\\n\\n:class:`True`\\n    Playback is stopped after current song, unless in ``repeat`` mode.\\n:class:`False`\\n    Playback continues after current song.", "params": []}, "core.tracklist.get_tl_tracks": {"description": "Get tracklist as list of :class:`mopidy.models.TlTrack`.", "params": []}, "core.tracklist.get_tracks": {"description": "Get tracklist as list of :class:`mopidy.models.Track`.", "params": []}, "core.tracklist.get_version": {"description": "Get the tracklist version.\\n\\nInteger which is increased every time the tracklist is changed. Is not\\nreset before Mopidy is restarted.", "params": []}, "core.tracklist.index": {"description": "The position of the given track in the tracklist.\\n\\nIf neither *tl_track* or *tlid* is given we return the index of\\nthe currently playing track.\\n\\n:param tl_track: the track to find the index of\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:param tlid: TLID of the track to find the index of\\n:type tlid: :class:`int` or :class:`None`\\n:rtype: :class:`int` or :class:`None`\\n\\n.. versionadded:: 1.1\\n    The *tlid* parameter", "params": [{"name": "tl_track", "default": null}, {"name": "tlid", "default": null}]}, "core.tracklist.move": {"description": "Move the tracks in the slice ``[start:end]`` to ``to_position``.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.\\n\\n:param start: position of first track to move\\n:type start: int\\n:param end: position after last track to move\\n:type end: int\\n:param to_position: new position for the tracks\\n:type to_position: int", "params": [{"name": "start"}, {"name": "end"}, {"name": "to_position"}]}, "core.tracklist.next_track": {"description": "The track that will be played if calling\\n:meth:`mopidy.core.PlaybackController.next()`.\\n\\nFor normal playback this is the next track in the tracklist. If repeat\\nis enabled the next track can loop around the tracklist. When random is\\nenabled this should be a random track, all tracks should be played once\\nbefore the tracklist repeats.\\n\\n.. deprecated:: 3.0\\n    Use :meth:`get_next_tlid` instead.\\n\\n:param tl_track: the reference track\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:rtype: :class:`mopidy.models.TlTrack` or :class:`None`", "params": [{"name": "tl_track"}]}, "core.tracklist.previous_track": {"description": "Returns the track that will be played if calling\\n:meth:`mopidy.core.PlaybackController.previous()`.\\n\\nFor normal playback this is the previous track in the tracklist. If\\nrandom and/or consume is enabled it should return the current track\\ninstead.\\n\\n.. deprecated:: 3.0\\n    Use :meth:`get_previous_tlid` instead.\\n\\n:param tl_track: the reference track\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:rtype: :class:`mopidy.models.TlTrack` or :class:`None`", "params": [{"name": "tl_track"}]}, "core.tracklist.remove": {"description": "Remove the matching tracks from the tracklist.\\n\\nUses :meth:`filter()` to lookup the tracks to remove.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.\\n\\n:param criteria: one or more rules to match by\\n:type criteria: dict, of (string, list) pairs\\n:rtype: list of :class:`mopidy.models.TlTrack` that were removed", "params": [{"name": "criteria"}]}, "core.tracklist.set_consume": {"description": "Set consume mode.\\n\\n:class:`True`\\n    Tracks are removed from the tracklist when they have been played.\\n:class:`False`\\n    Tracks are not removed from the tracklist.", "params": [{"name": "value"}]}, "core.tracklist.set_random": {"description": "Set random mode.\\n\\n:class:`True`\\n    Tracks are selected at random from the tracklist.\\n:class:`False`\\n    Tracks are played in the order of the tracklist.", "params": [{"name": "value"}]}, "core.tracklist.set_repeat": {"description": "Set repeat mode.\\n\\nTo repeat a single track, set both ``repeat`` and ``single``.\\n\\n:class:`True`\\n    The tracklist is played repeatedly.\\n:class:`False`\\n    The tracklist is played once.", "params": [{"name": "value"}]}, "core.tracklist.set_single": {"description": "Set single mode.\\n\\n:class:`True`\\n    Playback is stopped after current song, unless in ``repeat`` mode.\\n:class:`False`\\n    Playback continues after current song.", "params": [{"name": "value"}]}, "core.tracklist.shuffle": {"description": "Shuffles the entire tracklist. If ``start`` and ``end`` is given only\\nshuffles the slice ``[start:end]``.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.\\n\\n:param start: position of first track to shuffle\\n:type start: int or :class:`None`\\n:param end: position after last track to shuffle\\n:type end: int or :class:`None`", "params": [{"name": "start", "default": null}, {"name": "end", "default": null}]}, "core.tracklist.slice": {"description": "Returns a slice of the tracklist, limited by the given start and end\\npositions.\\n\\n:param start: position of first track to include in slice\\n:type start: int\\n:param end: position after last track to include in slice\\n:type end: int\\n:rtype: :class:`mopidy.models.TlTrack`", "params": [{"name": "start"}, {"name": "end"}]}}}'
okt 24 14:32:20 Desktop-Ubuntu mopidy[11252]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.describe","jsonrpc":"2.0","id":47}'
okt 24 14:32:20 Desktop-Ubuntu mopidy[11252]: DEBUG    [HttpServer] mopidy.http.handlers New WebSocket connection from 127.0.0.1
okt 24 14:32:20 Desktop-Ubuntu mopidy[11252]: INFO     [HttpServer] tornado.access 101 GET /mopidy/ws/ (127.0.0.1) 19.13ms
okt 24 14:32:20 Desktop-Ubuntu mopidy[11252]: DEBUG    [HttpFrontend-11 (_actor_loop)] mopidy.zeroconf Zeroconf service 'Mopidy HTTP server on Desktop-Ubuntu' (_mopidy-http._tcp at []:6680): Published
okt 24 14:32:20 Desktop-Ubuntu mopidy[11252]: DEBUG    [HttpFrontend-11 (_actor_loop)] mopidy.zeroconf Zeroconf service 'Mopidy HTTP server on Desktop-Ubuntu' (_http._tcp at []:6680): Published
okt 24 14:32:20 Desktop-Ubuntu mopidy[11252]:     '/': <class 'tornado.web.RedirectHandler'>
okt 24 14:32:20 Desktop-Ubuntu mopidy[11252]:     '/mopidy/': <class 'mopidy.http.handlers.ClientListHandler'>
okt 24 14:32:20 Desktop-Ubuntu mopidy[11252]:     '/mopidy/(.+)': <class 'mopidy.http.handlers.StaticFileHandler'>
okt 24 14:32:20 Desktop-Ubuntu mopidy[11252]:     '/mopidy/rpc': <class 'mopidy.http.handlers.JsonRpcHandler'>
okt 24 14:32:20 Desktop-Ubuntu mopidy[11252]:     '/mopidy/ws/?': <class 'mopidy.http.handlers.WebSocketHandler'>
okt 24 14:32:20 Desktop-Ubuntu mopidy[11252]:     '/mopidy': <class 'mopidy.http.handlers.AddSlashHandler'>
okt 24 14:32:20 Desktop-Ubuntu mopidy[11252]:     '/iris/(.*)': <class 'mopidy_iris.handlers.ReactRouterHandler'>
okt 24 14:32:20 Desktop-Ubuntu mopidy[11252]:     '/iris/((.*)(?:css|js|json|map)$)': <class 'tornado.web.StaticFileHandler'>
okt 24 14:32:20 Desktop-Ubuntu mopidy[11252]:     '/iris/assets/(.*)': <class 'tornado.web.StaticFileHandler'>
okt 24 14:32:20 Desktop-Ubuntu mopidy[11252]:     '/iris/ws/?': <class 'mopidy_iris.handlers.WebsocketHandler'>
okt 24 14:32:20 Desktop-Ubuntu mopidy[11252]:     '/iris/http/([^/]*)': <class 'mopidy_iris.handlers.HttpHandler'>
okt 24 14:32:20 Desktop-Ubuntu mopidy[11252]:     '/iris': <class 'mopidy.http.handlers.AddSlashHandler'>
okt 24 14:32:20 Desktop-Ubuntu mopidy[11252]:     '/local/(.+)': <class 'mopidy_local.web.ImageHandler'>
okt 24 14:32:20 Desktop-Ubuntu mopidy[11252]:     '/local/(index.html)?': <class 'mopidy_local.web.IndexHandler'>
okt 24 14:32:20 Desktop-Ubuntu mopidy[11252]:     '/local': <class 'mopidy.http.handlers.AddSlashHandler'>
okt 24 14:32:20 Desktop-Ubuntu mopidy[11252]: DEBUG    [HttpServer] mopidy.http.actor HTTP routes from extensions:
okt 24 14:32:20 Desktop-Ubuntu mopidy[11252]: DEBUG    [HttpServer] mopidy.http.actor Default webclient is mopidy
okt 24 14:32:20 Desktop-Ubuntu mopidy[11252]: DEBUG    [HttpServer] mopidy.http.actor Loaded HTTP extension: mopidy
okt 24 14:32:20 Desktop-Ubuntu mopidy[11252]: DEBUG    [HttpServer] mopidy.http.actor Loaded HTTP extension: iris
okt 24 14:32:20 Desktop-Ubuntu mopidy[11252]: DEBUG    [HttpServer] mopidy.http.actor Loaded HTTP extension: local
okt 24 14:32:20 Desktop-Ubuntu mopidy[11252]: DEBUG    [HttpServer] asyncio Using selector: EpollSelector
okt 24 14:32:20 Desktop-Ubuntu mopidy[11252]: INFO     [MainThread] mopidy.commands Starting GLib mainloop
okt 24 14:32:20 Desktop-Ubuntu mopidy[11252]: TRACE    [MainThread] mopidy.internal.timer HttpFrontend took 0ms
okt 24 14:32:20 Desktop-Ubuntu mopidy[11252]: INFO     [HttpFrontend-11 (_actor_loop)] mopidy.http.actor HTTP server running at [::ffff:127.0.0.1]:6680
okt 24 14:32:20 Desktop-Ubuntu mopidy[11252]: DEBUG    [MainThread] pykka Starting HttpFrontend (urn:uuid:540d000a-9400-4a3b-bf1e-a67f4593a126)
okt 24 14:32:20 Desktop-Ubuntu mopidy[11252]: DEBUG    [MainThread] pykka Registered HttpFrontend (urn:uuid:540d000a-9400-4a3b-bf1e-a67f4593a126)
okt 24 14:32:20 Desktop-Ubuntu mopidy[11252]: DEBUG    [MainThread] mopidy.http.actor Starting HTTP server
okt 24 14:32:20 Desktop-Ubuntu mopidy[11252]: TRACE    [MainThread] mopidy.internal.timer IrisFrontend took 0ms
okt 24 14:32:20 Desktop-Ubuntu mopidy[11252]: INFO     [IrisFrontend-9 (_actor_loop)] mopidy_iris.core Starting Iris 3.64.1
okt 24 14:32:20 Desktop-Ubuntu mopidy[11252]: DEBUG    [MainThread] pykka Starting IrisFrontend (urn:uuid:33418bef-add4-4fae-8ecd-3f50066ad7e9)
okt 24 14:32:20 Desktop-Ubuntu mopidy[11252]: DEBUG    [MainThread] pykka Registered IrisFrontend (urn:uuid:33418bef-add4-4fae-8ecd-3f50066ad7e9)
okt 24 14:32:20 Desktop-Ubuntu mopidy[11252]: TRACE    [MainThread] mopidy.internal.timer YTMusicScrobbleFE took 0ms
okt 24 14:32:20 Desktop-Ubuntu mopidy[11252]: DEBUG    [MainThread] pykka Starting YTMusicScrobbleFE (urn:uuid:2a4205fe-f1fc-4864-87fc-678224deb5d0)
okt 24 14:32:20 Desktop-Ubuntu mopidy[11252]: DEBUG    [MainThread] pykka Registered YTMusicScrobbleFE (urn:uuid:2a4205fe-f1fc-4864-87fc-678224deb5d0)
okt 24 14:32:20 Desktop-Ubuntu mopidy[11252]: INFO     [MainThread] mopidy.commands Starting Mopidy frontends: YTMusicScrobbleFE, IrisFrontend, HttpFrontend
okt 24 14:32:20 Desktop-Ubuntu mopidy[11252]: DEBUG    [MainThread] pykka Starting Core (urn:uuid:5d3e6831-0c7d-4269-bc6d-27411029e5dc)
okt 24 14:32:20 Desktop-Ubuntu mopidy[11252]: DEBUG    [MainThread] pykka Registered Core (urn:uuid:5d3e6831-0c7d-4269-bc6d-27411029e5dc)
okt 24 14:32:20 Desktop-Ubuntu mopidy[11252]: INFO     [MainThread] mopidy.commands Starting Mopidy core
okt 24 14:32:20 Desktop-Ubuntu mopidy[11252]: TRACE    [MainThread] mopidy.internal.timer StreamBackend took 6ms
okt 24 14:32:20 Desktop-Ubuntu mopidy[11252]: DEBUG    [MainThread] pykka Starting StreamBackend (urn:uuid:6964be8d-3d20-4eb0-a703-e2514285d790)
okt 24 14:32:20 Desktop-Ubuntu mopidy[11252]: DEBUG    [MainThread] pykka Registered StreamBackend (urn:uuid:6964be8d-3d20-4eb0-a703-e2514285d790)
okt 24 14:32:20 Desktop-Ubuntu mopidy[11252]: INFO     [Audio-2 (_actor_loop)] mopidy.audio.actor Audio output set to "pulsesink server=127.0.0.1"
okt 24 14:32:20 Desktop-Ubuntu mopidy[11252]: TRACE    [MainThread] mopidy.internal.timer M3UBackend took 1ms
okt 24 14:32:20 Desktop-Ubuntu mopidy[11252]: DEBUG    [MainThread] pykka Starting M3UBackend (urn:uuid:3e37c3ed-b419-4a67-801d-f0d0fcef832a)
okt 24 14:32:20 Desktop-Ubuntu mopidy[11252]: DEBUG    [MainThread] pykka Registered M3UBackend (urn:uuid:3e37c3ed-b419-4a67-801d-f0d0fcef832a)
okt 24 14:32:20 Desktop-Ubuntu mopidy[11252]: TRACE    [MainThread] mopidy.internal.timer FileBackend took 3ms
okt 24 14:32:20 Desktop-Ubuntu mopidy[11252]: DEBUG    [MainThread] pykka Starting FileBackend (urn:uuid:8f0c992a-3a15-4159-839e-18a926756961)
okt 24 14:32:20 Desktop-Ubuntu mopidy[11252]: DEBUG    [MainThread] pykka Registered FileBackend (urn:uuid:8f0c992a-3a15-4159-839e-18a926756961)
okt 24 14:32:20 Desktop-Ubuntu mopidy[11252]: DEBUG    [MainThread] mopidy.file.library Failed expanding path ($XDG_MUSIC_DIR) from file/media_dirs config value.
okt 24 14:32:20 Desktop-Ubuntu mopidy[11252]: AttributeError: 'YTMusic' object has no attribute 'headers'
okt 24 14:32:20 Desktop-Ubuntu mopidy[11252]:     if 'x-goog-visitor-id' not in self.headers:
okt 24 14:32:20 Desktop-Ubuntu mopidy[11252]:   File "/usr/local/lib/python3.10/dist-packages/ytmusicapi/ytmusic.py", line 98, in __init__
okt 24 14:32:20 Desktop-Ubuntu mopidy[11252]:     self.api = YTMusic(self._ytmusicapi_auth_json)
okt 24 14:32:20 Desktop-Ubuntu mopidy[11252]:   File "/usr/local/lib/python3.10/dist-packages/mopidy_ytmusic/backend.py", line 65, in __init__
okt 24 14:32:20 Desktop-Ubuntu mopidy[11252]:     obj = cls(*args, **kwargs)
okt 24 14:32:20 Desktop-Ubuntu mopidy[11252]:   File "/usr/lib/python3/dist-packages/pykka/_actor.py", line 91, in start
okt 24 14:32:20 Desktop-Ubuntu mopidy[11252]:     backend = backend_class.start(
okt 24 14:32:20 Desktop-Ubuntu mopidy[11252]:   File "/usr/lib/python3/dist-packages/mopidy/commands.py", line 412, in start_backends
okt 24 14:32:20 Desktop-Ubuntu mopidy[11252]:     yield
okt 24 14:32:20 Desktop-Ubuntu mopidy[11252]:   File "/usr/lib/python3/dist-packages/mopidy/commands.py", line 248, in _actor_error_handling
okt 24 14:32:20 Desktop-Ubuntu mopidy[11252]: Traceback (most recent call last):
okt 24 14:32:20 Desktop-Ubuntu mopidy[11252]: ERROR    [MainThread] mopidy.commands Got un-handled exception from YTMusicBackend
okt 24 14:32:20 Desktop-Ubuntu mopidy[11252]: TRACE    [MainThread] mopidy.internal.timer LocalBackend took 4ms
okt 24 14:32:20 Desktop-Ubuntu mopidy[11252]: DEBUG    [MainThread] pykka Starting LocalBackend (urn:uuid:e8acee63-b4ed-4e3f-bf96-f8463c85db86)
okt 24 14:32:20 Desktop-Ubuntu mopidy[11252]: DEBUG    [MainThread] pykka Registered LocalBackend (urn:uuid:e8acee63-b4ed-4e3f-bf96-f8463c85db86)
okt 24 14:32:20 Desktop-Ubuntu mopidy[11252]: INFO     [MainThread] mopidy.commands Starting Mopidy backends: LocalBackend, YTMusicBackend, FileBackend, M3UBackend, StreamBackend
okt 24 14:32:20 Desktop-Ubuntu mopidy[11252]: DEBUG    [MainThread] pykka Starting Audio (urn:uuid:cf7d6dac-ea6a-4794-9f2a-75ecdd2789b7)
okt 24 14:32:20 Desktop-Ubuntu mopidy[11252]: DEBUG    [MainThread] pykka Registered Audio (urn:uuid:cf7d6dac-ea6a-4794-9f2a-75ecdd2789b7)
okt 24 14:32:20 Desktop-Ubuntu mopidy[11252]: INFO     [MainThread] mopidy.commands Starting Mopidy audio
okt 24 14:32:20 Desktop-Ubuntu mopidy[11252]: DEBUG    [MainThread] mopidy.commands Mixer volume left unchanged
okt 24 14:32:20 Desktop-Ubuntu mopidy[11252]: DEBUG    [MainThread] pykka Starting SoftwareMixer (urn:uuid:9a6de330-5de2-499a-8369-bca3232bf424)
okt 24 14:32:20 Desktop-Ubuntu mopidy[11252]: DEBUG    [MainThread] pykka Registered SoftwareMixer (urn:uuid:9a6de330-5de2-499a-8369-bca3232bf424)
okt 24 14:32:20 Desktop-Ubuntu mopidy[11252]: INFO     [MainThread] mopidy.commands Starting Mopidy mixer: SoftwareMixer
okt 24 14:32:20 Desktop-Ubuntu mopidy[11252]: DEBUG    [MainThread] mopidy.commands Available Mopidy mixers: SoftwareMixer
okt 24 14:32:20 Desktop-Ubuntu mopidy[11252]: INFO     [MainThread] mopidy.__main__ Disabled extensions: soundcloud, youtube
okt 24 14:32:20 Desktop-Ubuntu mopidy[11252]: INFO     [MainThread] mopidy.__main__ Enabled extensions: m3u, ytmusic, iris, http, local, stream, file, softwaremixer
okt 24 14:32:20 Desktop-Ubuntu mopidy[11252]: DEBUG    [MainThread] mopidy.ext Validating extension: stream
okt 24 14:32:20 Desktop-Ubuntu mopidy[11252]: DEBUG    [MainThread] mopidy.ext Validating extension: softwaremixer
okt 24 14:32:20 Desktop-Ubuntu mopidy[11252]: DEBUG    [MainThread] mopidy.ext Validating extension: m3u
okt 24 14:32:20 Desktop-Ubuntu mopidy[11252]: DEBUG    [MainThread] mopidy.ext Validating extension: http
okt 24 14:32:20 Desktop-Ubuntu mopidy[11252]: DEBUG    [MainThread] mopidy.ext Validating extension: file
okt 24 14:32:19 Desktop-Ubuntu mopidy[11252]: DEBUG    [MainThread] mopidy.ext Validating extension: iris
okt 24 14:32:19 Desktop-Ubuntu mopidy[11252]: DEBUG    [MainThread] mopidy.ext Validating extension: ytmusic
okt 24 14:32:19 Desktop-Ubuntu mopidy[11252]: DEBUG    [MainThread] mopidy.ext Validating extension: soundcloud
okt 24 14:32:19 Desktop-Ubuntu mopidy[11252]: DEBUG    [MainThread] mopidy.ext Validating extension: local
okt 24 14:32:19 Desktop-Ubuntu mopidy[11252]: DEBUG    [MainThread] mopidy.ext Validating extension: youtube
okt 24 14:32:19 Desktop-Ubuntu mopidy[11252]: ERROR    [MainThread] mopidy.internal.log Loading logging config '/etc/mopidy/logging.conf' failed. 'formatters'
okt 24 14:32:19 Desktop-Ubuntu mopidy[11252]: WARNING  [MainThread] mopidy.config Ignoring config section 'jukebox' because no matching extension was found
okt 24 14:32:19 Desktop-Ubuntu mopidy[11252]: INFO     [MainThread] mopidy.config Loading config from command line options
okt 24 14:32:19 Desktop-Ubuntu mopidy[11252]: INFO     [MainThread] mopidy.config Loading config from file:///etc/mopidy/mopidy.conf
okt 24 14:32:19 Desktop-Ubuntu mopidy[11252]: INFO     [MainThread] mopidy.config Loading config from file:///usr/share/mopidy/conf.d/mopidy.conf
okt 24 14:32:19 Desktop-Ubuntu mopidy[11252]: INFO     [MainThread] mopidy.config Loading config from builtin defaults
okt 24 14:32:19 Desktop-Ubuntu mopidy[11252]: DEBUG    [MainThread] mopidy.config.keyring Fetching passwords from your keyring failed. Any passwords stored in the keyring will not be available. (org.freedesktop.DBus.Error.NotSupported: Unable to autolaunch a dbus-daemon without a $DISPLAY for X11)
okt 24 14:32:19 Desktop-Ubuntu mopidy[11252]: DEBUG    [MainThread] mopidy.ext Discovered extensions: youtube, local, soundcloud, ytmusic, iris, file, http, m3u, softwaremixer, stream
okt 24 14:32:19 Desktop-Ubuntu mopidy[11252]: DEBUG    [MainThread] mopidy.ext Loaded extension: Mopidy-Stream 3.3.0
okt 24 14:32:19 Desktop-Ubuntu mopidy[11252]: DEBUG    [MainThread] mopidy.ext Loading entry point: stream = mopidy.stream:Extension
okt 24 14:32:19 Desktop-Ubuntu mopidy[11252]: DEBUG    [MainThread] mopidy.ext Loaded extension: Mopidy-SoftwareMixer 3.3.0
okt 24 14:32:19 Desktop-Ubuntu mopidy[11252]: DEBUG    [MainThread] mopidy.ext Loading entry point: softwaremixer = mopidy.softwaremixer:Extension
okt 24 14:32:19 Desktop-Ubuntu mopidy[11252]: DEBUG    [MainThread] mopidy.ext Loaded extension: Mopidy-M3U 3.3.0
okt 24 14:32:19 Desktop-Ubuntu mopidy[11252]: DEBUG    [MainThread] mopidy.ext Loading entry point: m3u = mopidy.m3u:Extension
okt 24 14:32:19 Desktop-Ubuntu mopidy[11252]: DEBUG    [MainThread] mopidy.ext Loaded extension: Mopidy-HTTP 3.3.0
okt 24 14:32:19 Desktop-Ubuntu mopidy[11252]: DEBUG    [MainThread] mopidy.ext Loading entry point: http = mopidy.http:Extension
okt 24 14:32:19 Desktop-Ubuntu mopidy[11252]: DEBUG    [MainThread] mopidy.ext Loaded extension: Mopidy-File 3.3.0
okt 24 14:32:19 Desktop-Ubuntu mopidy[11252]: DEBUG    [MainThread] mopidy.ext Loading entry point: file = mopidy.file:Extension
okt 24 14:32:19 Desktop-Ubuntu mopidy[11252]: DEBUG    [MainThread] mopidy.ext Loaded extension: Mopidy-Iris 3.64.1
okt 24 14:32:19 Desktop-Ubuntu mopidy[11252]: DEBUG    [MainThread] mopidy.ext Loading entry point: iris = mopidy_iris:Extension
okt 24 14:32:19 Desktop-Ubuntu mopidy[11252]: DEBUG    [MainThread] mopidy.ext Loaded extension: Mopidy-YTMusic 0.3.7
okt 24 14:32:19 Desktop-Ubuntu mopidy[11252]: DEBUG    [MainThread] mopidy.ext Loading entry point: ytmusic = mopidy_ytmusic:Extension
okt 24 14:32:19 Desktop-Ubuntu mopidy[11252]: DEBUG    [MainThread] mopidy.ext Loaded extension: Mopidy-SoundCloud 3.0.1
okt 24 14:32:19 Desktop-Ubuntu mopidy[11252]: DEBUG    [MainThread] mopidy.ext Loading entry point: soundcloud = mopidy_soundcloud:Extension
okt 24 14:32:19 Desktop-Ubuntu mopidy[11252]: DEBUG    [MainThread] mopidy.ext Loaded extension: Mopidy-Local 3.2.1
okt 24 14:32:19 Desktop-Ubuntu mopidy[11252]: DEBUG    [MainThread] mopidy.ext Loading entry point: local = mopidy_local:Extension
okt 24 14:32:19 Desktop-Ubuntu mopidy[11252]: DEBUG    [MainThread] mopidy.ext Loaded extension: Mopidy-YouTube 3.6.1
okt 24 14:32:19 Desktop-Ubuntu mopidy[11252]: DEBUG    [MainThread] mopidy.ext Loading entry point: youtube = mopidy_youtube:Extension
okt 24 14:32:19 Desktop-Ubuntu mopidy[11252]: INFO     [MainThread] mopidy.__main__ Starting Mopidy 3.3.0
okt 24 14:32:19 Desktop-Ubuntu systemd[1]: Started Mopidy music server.
okt 24 14:32:19 Desktop-Ubuntu systemd[1]: Starting Mopidy music server...
okt 24 14:32:19 Desktop-Ubuntu systemd[1]: Stopped Mopidy music server.
okt 24 14:32:19 Desktop-Ubuntu systemd[1]: mopidy.service: Deactivated successfully.
okt 24 14:32:19 Desktop-Ubuntu mopidy[10785]: Failed loading provided credentials. Make sure to provide a string or a file path. Reason: Expecting value: line 1 column 1 (char 0)
okt 24 14:32:19 Desktop-Ubuntu mopidy[10785]: DEBUG    [MainThread] mopidy.internal.process All actors stopped.
okt 24 14:32:19 Desktop-Ubuntu mopidy[10785]: DEBUG    [SoftwareMixer-1 (_actor_loop)] pykka Stopped SoftwareMixer (urn:uuid:dfbcafb3-c233-45d8-8851-8611e0c3631e)
okt 24 14:32:19 Desktop-Ubuntu mopidy[10785]: DEBUG    [SoftwareMixer-1 (_actor_loop)] pykka Unregistered SoftwareMixer (urn:uuid:dfbcafb3-c233-45d8-8851-8611e0c3631e)
okt 24 14:32:19 Desktop-Ubuntu mopidy[10785]: DEBUG    [MainThread] mopidy.internal.process Stopping 1 instance(s) of SoftwareMixer
okt 24 14:32:19 Desktop-Ubuntu mopidy[10785]: INFO     [MainThread] mopidy.commands Stopping Mopidy mixer
okt 24 14:32:19 Desktop-Ubuntu mopidy[10785]: DEBUG    [Audio-2 (_actor_loop)] pykka Stopped Audio (urn:uuid:bfcf52f8-1071-4924-9122-20a4b611ecb7)
okt 24 14:32:19 Desktop-Ubuntu mopidy[10785]: DEBUG    [Audio-2 (_actor_loop)] pykka Unregistered Audio (urn:uuid:bfcf52f8-1071-4924-9122-20a4b611ecb7)
okt 24 14:32:19 Desktop-Ubuntu mopidy[10785]: DEBUG    [MainThread] mopidy.internal.process Stopping 1 instance(s) of Audio
okt 24 14:32:19 Desktop-Ubuntu mopidy[10785]: INFO     [MainThread] mopidy.commands Stopping Mopidy audio
okt 24 14:32:19 Desktop-Ubuntu mopidy[10785]: DEBUG    [StreamBackend-6 (_actor_loop)] pykka Stopped StreamBackend (urn:uuid:01034658-075c-4905-a2d0-62927c517a2a)
okt 24 14:32:19 Desktop-Ubuntu mopidy[10785]: DEBUG    [StreamBackend-6 (_actor_loop)] pykka Unregistered StreamBackend (urn:uuid:01034658-075c-4905-a2d0-62927c517a2a)
okt 24 14:32:19 Desktop-Ubuntu mopidy[10785]: DEBUG    [MainThread] mopidy.internal.process Stopping 1 instance(s) of StreamBackend
okt 24 14:32:19 Desktop-Ubuntu mopidy[10785]: DEBUG    [M3UBackend-5 (_actor_loop)] pykka Stopped M3UBackend (urn:uuid:7c4eccf5-3e78-47a1-9ef9-f2f39143bbac)
okt 24 14:32:19 Desktop-Ubuntu mopidy[10785]: DEBUG    [M3UBackend-5 (_actor_loop)] pykka Unregistered M3UBackend (urn:uuid:7c4eccf5-3e78-47a1-9ef9-f2f39143bbac)
okt 24 14:32:19 Desktop-Ubuntu mopidy[10785]: DEBUG    [MainThread] mopidy.internal.process Stopping 1 instance(s) of M3UBackend
okt 24 14:32:19 Desktop-Ubuntu mopidy[10785]: DEBUG    [FileBackend-4 (_actor_loop)] pykka Stopped FileBackend (urn:uuid:a9869647-01c9-4dba-a655-98b08e236568)
okt 24 14:32:19 Desktop-Ubuntu mopidy[10785]: DEBUG    [FileBackend-4 (_actor_loop)] pykka Unregistered FileBackend (urn:uuid:a9869647-01c9-4dba-a655-98b08e236568)
okt 24 14:32:19 Desktop-Ubuntu mopidy[10785]: DEBUG    [MainThread] mopidy.internal.process Stopping 1 instance(s) of FileBackend
okt 24 14:32:19 Desktop-Ubuntu mopidy[10785]: DEBUG    [MainThread] mopidy.internal.process Stopping 0 instance(s) of YTMusicBackend
okt 24 14:32:19 Desktop-Ubuntu mopidy[10785]: DEBUG    [LocalBackend-3 (_actor_loop)] pykka Stopped LocalBackend (urn:uuid:779efbcb-aada-4c02-9b47-3640fb508142)
okt 24 14:32:19 Desktop-Ubuntu mopidy[10785]: DEBUG    [LocalBackend-3 (_actor_loop)] pykka Unregistered LocalBackend (urn:uuid:779efbcb-aada-4c02-9b47-3640fb508142)
okt 24 14:32:19 Desktop-Ubuntu mopidy[10785]: DEBUG    [MainThread] mopidy.internal.process Stopping 1 instance(s) of LocalBackend
okt 24 14:32:19 Desktop-Ubuntu mopidy[10785]: INFO     [MainThread] mopidy.commands Stopping Mopidy backends
okt 24 14:32:19 Desktop-Ubuntu mopidy[10785]: DEBUG    [Core-7 (_actor_loop)] pykka Stopped Core (urn:uuid:715e9ad4-e582-4367-9404-57dc411effcd)
okt 24 14:32:19 Desktop-Ubuntu mopidy[10785]: DEBUG    [Core-7 (_actor_loop)] pykka Unregistered Core (urn:uuid:715e9ad4-e582-4367-9404-57dc411effcd)
okt 24 14:32:19 Desktop-Ubuntu mopidy[10785]: DEBUG    [MainThread] mopidy.internal.process Stopping 1 instance(s) of Core
okt 24 14:32:19 Desktop-Ubuntu mopidy[10785]: INFO     [MainThread] mopidy.commands Stopping Mopidy core
okt 24 14:32:19 Desktop-Ubuntu mopidy[10785]: DEBUG    [HttpServer] mopidy.http.actor Stopped HTTP server
okt 24 14:32:19 Desktop-Ubuntu mopidy[10785]: DEBUG    [HttpFrontend-11 (_actor_loop)] mopidy.http.actor Stopping HTTP server
okt 24 14:32:19 Desktop-Ubuntu mopidy[10785]: DEBUG    [HttpFrontend-11 (_actor_loop)] mopidy.zeroconf Zeroconf service 'Mopidy HTTP server on Desktop-Ubuntu' (_mopidy-http._tcp at []:6680): Unpublished
okt 24 14:32:19 Desktop-Ubuntu mopidy[10785]: DEBUG    [HttpFrontend-11 (_actor_loop)] mopidy.zeroconf Zeroconf service 'Mopidy HTTP server on Desktop-Ubuntu' (_http._tcp at []:6680): Unpublished
okt 24 14:32:19 Desktop-Ubuntu mopidy[10785]: DEBUG    [HttpFrontend-11 (_actor_loop)] pykka Stopped HttpFrontend (urn:uuid:899834d4-2fc2-4c03-980f-3fc1c0943719)
okt 24 14:32:19 Desktop-Ubuntu mopidy[10785]: DEBUG    [HttpFrontend-11 (_actor_loop)] pykka Unregistered HttpFrontend (urn:uuid:899834d4-2fc2-4c03-980f-3fc1c0943719)
okt 24 14:32:19 Desktop-Ubuntu mopidy[10785]: DEBUG    [MainThread] mopidy.internal.process Stopping 1 instance(s) of HttpFrontend
okt 24 14:32:19 Desktop-Ubuntu mopidy[10785]: INFO     [IrisFrontend-9 (_actor_loop)] mopidy_iris.core Stopping Iris
okt 24 14:32:19 Desktop-Ubuntu mopidy[10785]: DEBUG    [IrisFrontend-9 (_actor_loop)] pykka Stopped IrisFrontend (urn:uuid:fd992af0-d550-4b73-b804-32d8975d9352)
okt 24 14:32:19 Desktop-Ubuntu mopidy[10785]: DEBUG    [IrisFrontend-9 (_actor_loop)] pykka Unregistered IrisFrontend (urn:uuid:fd992af0-d550-4b73-b804-32d8975d9352)
okt 24 14:32:19 Desktop-Ubuntu mopidy[10785]: DEBUG    [MainThread] mopidy.internal.process Stopping 1 instance(s) of IrisFrontend
okt 24 14:32:19 Desktop-Ubuntu mopidy[10785]: DEBUG    [YTMusicScrobbleFE-8 (_actor_loop)] pykka Stopped YTMusicScrobbleFE (urn:uuid:07b1ba01-ae99-4110-ba17-a5a5e2cd1601)
okt 24 14:32:19 Desktop-Ubuntu mopidy[10785]: DEBUG    [YTMusicScrobbleFE-8 (_actor_loop)] pykka Unregistered YTMusicScrobbleFE (urn:uuid:07b1ba01-ae99-4110-ba17-a5a5e2cd1601)
okt 24 14:32:19 Desktop-Ubuntu systemd[1]: Stopping Mopidy music server...
okt 24 14:32:19 Desktop-Ubuntu mopidy[10785]: DEBUG    [MainThread] mopidy.internal.process Stopping 1 instance(s) of YTMusicScrobbleFE
okt 24 14:32:19 Desktop-Ubuntu mopidy[10785]: INFO     [MainThread] mopidy.commands Stopping Mopidy frontends
okt 24 14:32:19 Desktop-Ubuntu mopidy[10785]: INFO     [MainThread] mopidy.commands GLib mainloop got SIGTERM. Exiting...
okt 24 14:22:43 Desktop-Ubuntu mopidy[10785]: DEBUG    [HttpServer] mopidy_iris.core {'id': 166661416362817, 'jsonrpc': '2.0', 'method': 'get_version', 'result': {'version': {'current': '3.64.1', 'latest': '3.64.1', 'is_root': False, 'upgrade_available': False}}, 'recipient': 'FF1DI7TYH8UQ'}
okt 24 14:22:43 Desktop-Ubuntu mopidy[10785]: DEBUG    [HttpServer] mopidy_iris.handlers Iris websocket message received: {"jsonrpc":"2.0","id":166661416362817,"method":"get_version"}
okt 24 14:22:43 Desktop-Ubuntu mopidy[10785]: DEBUG    [HttpServer] mopidy_iris.core {'id': 166661416312727, 'jsonrpc': '2.0', 'method': 'get_queue_metadata', 'result': {'queue_metadata': {}}, 'recipient': 'FF1DI7TYH8UQ'}
okt 24 14:22:43 Desktop-Ubuntu mopidy[10785]: DEBUG    [HttpServer] mopidy_iris.handlers Iris websocket message received: {"jsonrpc":"2.0","id":166661416312727,"method":"get_queue_metadata"}
okt 24 14:22:43 Desktop-Ubuntu mopidy[10785]: DEBUG    [HttpServer] mopidy_iris.core {'id': 166661416312532, 'jsonrpc': '2.0', 'method': 'get_pinned', 'result': {'pinned': []}, 'recipient': 'FF1DI7TYH8UQ'}
okt 24 14:22:43 Desktop-Ubuntu mopidy[10785]: DEBUG    [HttpServer] mopidy_iris.handlers Iris websocket message received: {"jsonrpc":"2.0","id":166661416312532,"method":"get_pinned"}
okt 24 14:22:43 Desktop-Ubuntu mopidy[10785]: DEBUG    [HttpServer] mopidy_iris.core {'id': 166661416312487, 'jsonrpc': '2.0', 'method': 'get_commands', 'result': {'commands': {}}, 'recipient': 'FF1DI7TYH8UQ'}
okt 24 14:22:43 Desktop-Ubuntu mopidy[10785]: DEBUG    [HttpServer] mopidy_iris.handlers Iris websocket message received: {"jsonrpc":"2.0","id":166661416312487,"method":"get_commands"}
okt 24 14:22:43 Desktop-Ubuntu mopidy[10785]: DEBUG    [HttpServer] mopidy_iris.core {'id': 166661416312416, 'jsonrpc': '2.0', 'method': 'get_radio', 'result': {'radio': {'enabled': 0, 'seed_artists': [], 'seed_genres': [], 'seed_tracks': [], 'results': []}}, 'recipient': 'FF1DI7TYH8UQ'}
okt 24 14:22:43 Desktop-Ubuntu mopidy[10785]: DEBUG    [HttpServer] mopidy_iris.handlers Iris websocket message received: {"jsonrpc":"2.0","id":166661416312416,"method":"get_radio"}
okt 24 14:22:43 Desktop-Ubuntu mopidy[10785]: DEBUG    [HttpServer] mopidy_iris.core {'id': 166661416312383, 'jsonrpc': '2.0', 'method': 'get_shared_config', 'result': {'shared_config': {}}, 'recipient': 'FF1DI7TYH8UQ'}
okt 24 14:22:43 Desktop-Ubuntu mopidy[10785]: DEBUG    [HttpServer] mopidy_iris.handlers Iris websocket message received: {"jsonrpc":"2.0","id":166661416312383,"method":"get_shared_config"}
okt 24 14:22:43 Desktop-Ubuntu mopidy[10785]: DEBUG    [HttpServer] mopidy_iris.core {'id': 166661416312235, 'jsonrpc': '2.0', 'method': 'get_config', 'result': {'config': {'is_root': False, 'spotify_username': False, 'country': 'NZ', 'locale': 'en_NZ', 'snapcast_enabled': True, 'snapcast_host': 'localhost', 'snapcast_port': '1780', 'snapcast_ssl': False, 'snapcast_stream': 'Default', 'spotify_authorization_url': 'https://jamesbarnsley.co.nz/iris/auth_spotify.php', 'lastfm_authorization_url': 'https://jamesbarnsley.co.nz/iris/auth_lastfm.php', 'genius_authorization_url': 'https://jamesbarnsley.co.nz/iris/auth_genius.php', 'shared_config': {}}}, 'recipient': 'FF1DI7TYH8UQ'}
okt 24 14:22:43 Desktop-Ubuntu mopidy[10785]: DEBUG    [HttpServer] mopidy_iris.handlers Iris websocket message received: {"jsonrpc":"2.0","id":166661416312235,"method":"get_config"}
okt 24 14:22:43 Desktop-Ubuntu mopidy[10785]: DEBUG    [HttpServer] mopidy_iris.core {'id': 166661416312194, 'jsonrpc': '2.0', 'method': 'update_connection', 'result': {'connection': {'connection_id': 'FF1DI7TYH8UQ', 'ip': '127.0.0.1', 'created': '2022-10-24 14:22:43', 'username': 166656148284185, 'client_id': 166656148284193}}, 'recipient': 'FF1DI7TYH8UQ'}
okt 24 14:22:43 Desktop-Ubuntu mopidy[10785]: DEBUG    [HttpServer] mopidy_iris.core {'method': 'connection_changed', 'params': {'connection': {'connection_id': 'FF1DI7TYH8UQ', 'ip': '127.0.0.1', 'created': '2022-10-24 14:22:43', 'username': 166656148284185, 'client_id': 166656148284193}}}
okt 24 14:22:43 Desktop-Ubuntu mopidy[10785]: DEBUG    [HttpServer] mopidy_iris.handlers Iris websocket message received: {"jsonrpc":"2.0","id":166661416312194,"method":"update_connection","params":{"username":166656148284185,"client_id":166656148284193}}
okt 24 14:22:43 Desktop-Ubuntu mopidy[10785]: DEBUG    [HttpServer] mopidy_iris.core {'method': 'connection_added', 'params': {'connection': {'connection_id': 'FF1DI7TYH8UQ', 'ip': '127.0.0.1', 'created': '2022-10-24 14:22:43'}}}
okt 24 14:22:43 Desktop-Ubuntu mopidy[10785]: DEBUG    [HttpServer] mopidy_iris.core <mopidy_iris.handlers.WebsocketHandler object at 0x7f0f342e82e0>
okt 24 14:22:43 Desktop-Ubuntu mopidy[10785]: DEBUG    [HttpServer] mopidy_iris.core Connection added
okt 24 14:22:43 Desktop-Ubuntu mopidy[10785]: INFO     [HttpServer] tornado.access 101 GET /iris/ws/ (127.0.0.1) 0.52ms
okt 24 14:22:39 Desktop-Ubuntu mopidy[10785]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 46, "result": null}'
okt 24 14:22:39 Desktop-Ubuntu mopidy[10785]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.playback.get_stream_title","params":{},"jsonrpc":"2.0","id":46}'
okt 24 14:22:39 Desktop-Ubuntu mopidy[10785]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 45, "result": ["file", "http", "https", "local", "m3u", "rtsp"]}'
okt 24 14:22:39 Desktop-Ubuntu mopidy[10785]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.get_uri_schemes","params":{},"jsonrpc":"2.0","id":45}'
okt 24 14:22:39 Desktop-Ubuntu mopidy[10785]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 44, "result": 0}'
okt 24 14:22:39 Desktop-Ubuntu mopidy[10785]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.playback.get_time_position","params":{},"jsonrpc":"2.0","id":44}'
okt 24 14:22:39 Desktop-Ubuntu mopidy[10785]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 43, "result": []}'
okt 24 14:22:39 Desktop-Ubuntu mopidy[10785]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_tl_tracks","params":{},"jsonrpc":"2.0","id":43}'
okt 24 14:22:39 Desktop-Ubuntu mopidy[10785]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 42, "result": false}'
okt 24 14:22:39 Desktop-Ubuntu mopidy[10785]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_repeat","params":{},"jsonrpc":"2.0","id":42}'
okt 24 14:22:39 Desktop-Ubuntu mopidy[10785]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 41, "result": false}'
okt 24 14:22:39 Desktop-Ubuntu mopidy[10785]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_random","params":{},"jsonrpc":"2.0","id":41}'
okt 24 14:22:39 Desktop-Ubuntu mopidy[10785]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 40, "result": false}'
okt 24 14:22:39 Desktop-Ubuntu mopidy[10785]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_consume","params":{},"jsonrpc":"2.0","id":40}'
okt 24 14:22:39 Desktop-Ubuntu mopidy[10785]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 39, "result": false}'
okt 24 14:22:39 Desktop-Ubuntu mopidy[10785]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.mixer.get_mute","params":{},"jsonrpc":"2.0","id":39}'
okt 24 14:22:39 Desktop-Ubuntu mopidy[10785]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 38, "result": 100}'
okt 24 14:22:39 Desktop-Ubuntu mopidy[10785]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.mixer.get_volume","params":{},"jsonrpc":"2.0","id":38}'
okt 24 14:22:39 Desktop-Ubuntu mopidy[10785]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 37, "result": "stopped"}'
okt 24 14:22:39 Desktop-Ubuntu mopidy[10785]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.playback.get_state","params":{},"jsonrpc":"2.0","id":37}'
okt 24 14:22:39 Desktop-Ubuntu mopidy[10785]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 36, "result": null}'
okt 24 14:22:39 Desktop-Ubuntu mopidy[10785]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.playback.get_current_tl_track","params":{},"jsonrpc":"2.0","id":36}'
okt 24 14:22:39 Desktop-Ubuntu mopidy[10785]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 35, "result": {"core.get_uri_schemes": {"description": "Get list of URI schemes we can handle", "params": []}, "core.get_version": {"description": "Get version of the Mopidy core API", "params": []}, "core.history.get_history": {"description": "Get the track history.\\n\\nThe timestamps are milliseconds since epoch.\\n\\n:returns: the track history\\n:rtype: list of (timestamp, :class:`mopidy.models.Ref`) tuples", "params": []}, "core.history.get_length": {"description": "Get the number of tracks in the history.\\n\\n:returns: the history length\\n:rtype: int", "params": []}, "core.library.browse": {"description": "Browse directories and tracks at the given ``uri``.\\n\\n``uri`` is a string which represents some directory belonging to a\\nbackend. To get the intial root directories for backends pass\\n:class:`None` as the URI.\\n\\nReturns a list of :class:`mopidy.models.Ref` objects for the\\ndirectories and tracks at the given ``uri``.\\n\\nThe :class:`~mopidy.models.Ref` objects representing tracks keep the\\ntrack\'s original URI. A matching pair of objects can look like this::\\n\\n    Track(uri=\'dummy:/foo.mp3\', name=\'foo\', artists=..., album=...)\\n    Ref.track(uri=\'dummy:/foo.mp3\', name=\'foo\')\\n\\nThe :class:`~mopidy.models.Ref` objects representing directories have\\nbackend specific URIs. These are opaque values, so no one but the\\nbackend that created them should try and derive any meaning from them.\\nThe only valid exception to this is checking the scheme, as it is used\\nto route browse requests to the correct backend.\\n\\nFor example, the dummy library\'s ``/bar`` directory could be returned\\nlike this::\\n\\n    Ref.directory(uri=\'dummy:directory:/bar\', name=\'bar\')\\n\\n:param string uri: URI to browse\\n:rtype: list of :class:`mopidy.models.Ref`\\n\\n.. versionadded:: 0.18", "params": [{"name": "uri"}]}, "core.library.get_distinct": {"description": "List distinct values for a given field from the library.\\n\\nThis has mainly been added to support the list commands the MPD\\nprotocol supports in a more sane fashion. Other frontends are not\\nrecommended to use this method.\\n\\n:param string field: Any one of ``uri``, ``track_name``, ``album``,\\n    ``artist``, ``albumartist``, ``composer``, ``performer``,\\n    ``track_no``, ``genre``, ``date``, ``comment``, ``disc_no``,\\n    ``musicbrainz_albumid``, ``musicbrainz_artistid``, or\\n    ``musicbrainz_trackid``.\\n:param dict query: Query to use for limiting results, see\\n    :meth:`search` for details about the query format.\\n:rtype: set of values corresponding to the requested field type.\\n\\n.. versionadded:: 1.0", "params": [{"name": "field"}, {"name": "query", "default": null}]}, "core.library.get_images": {"description": "Lookup the images for the given URIs\\n\\nBackends can use this to return image URIs for any URI they know about\\nbe it tracks, albums, playlists. The lookup result is a dictionary\\nmapping the provided URIs to lists of images.\\n\\nUnknown URIs or URIs the corresponding backend couldn\'t find anything\\nfor will simply return an empty list for that URI.\\n\\n:param uris: list of URIs to find images for\\n:type uris: list of string\\n:rtype: {uri: tuple of :class:`mopidy.models.Image`}\\n\\n.. versionadded:: 1.0", "params": [{"name": "uris"}]}, "core.library.lookup": {"description": "Lookup the given URIs.\\n\\nIf the URI expands to multiple tracks, the returned list will contain\\nthem all.\\n\\n:param uris: track URIs\\n:type uris: list of string\\n:rtype: {uri: list of :class:`mopidy.models.Track`}", "params": [{"name": "uris"}]}, "core.library.refresh": {"description": "Refresh library. Limit to URI and below if an URI is given.\\n\\n:param uri: directory or track URI\\n:type uri: string", "params": [{"name": "uri", "default": null}]}, "core.library.search": {"description": "Search the library for tracks where ``field`` contains ``values``.\\n\\n``field`` can be one of ``uri``, ``track_name``, ``album``, ``artist``,\\n``albumartist``, ``composer``, ``performer``, ``track_no``, ``genre``,\\n``date``, ``comment``, ``disc_no``, ``musicbrainz_albumid``,\\n``musicbrainz_artistid``, ``musicbrainz_trackid`` or ``any``.\\n\\nIf ``uris`` is given, the search is limited to results from within the\\nURI roots. For example passing ``uris=[\'file:\']`` will limit the search\\nto the local backend.\\n\\nExamples::\\n\\n    # Returns results matching \'a\' in any backend\\n    search({\'any\': [\'a\']})\\n\\n    # Returns results matching artist \'xyz\' in any backend\\n    search({\'artist\': [\'xyz\']})\\n\\n    # Returns results matching \'a\' and \'b\' and artist \'xyz\' in any\\n    # backend\\n    search({\'any\': [\'a\', \'b\'], \'artist\': [\'xyz\']})\\n\\n    # Returns results matching \'a\' if within the given URI roots\\n    # \\"file:///media/music\\" and \\"spotify:\\"\\n    search({\'any\': [\'a\']}, uris=[\'file:///media/music\', \'spotify:\'])\\n\\n    # Returns results matching artist \'xyz\' and \'abc\' in any backend\\n    search({\'artist\': [\'xyz\', \'abc\']})\\n\\n:param query: one or more queries to search for\\n:type query: dict\\n:param uris: zero or more URI roots to limit the search to\\n:type uris: list of string or :class:`None`\\n:param exact: if the search should use exact matching\\n:type exact: :class:`bool`\\n:rtype: list of :class:`mopidy.models.SearchResult`\\n\\n.. versionadded:: 1.0\\n    The ``exact`` keyword argument.", "params": [{"name": "query"}, {"name": "uris", "default": null}, {"name": "exact", "default": false}]}, "core.mixer.get_mute": {"description": "Get mute state.\\n\\n:class:`True` if muted, :class:`False` unmuted, :class:`None` if\\nunknown.", "params": []}, "core.mixer.get_volume": {"description": "Get the volume.\\n\\nInteger in range [0..100] or :class:`None` if unknown.\\n\\nThe volume scale is linear.", "params": []}, "core.mixer.set_mute": {"description": "Set mute state.\\n\\n:class:`True` to mute, :class:`False` to unmute.\\n\\nReturns :class:`True` if call is successful, otherwise :class:`False`.", "params": [{"name": "mute"}]}, "core.mixer.set_volume": {"description": "Set the volume.\\n\\nThe volume is defined as an integer in range [0..100].\\n\\nThe volume scale is linear.\\n\\nReturns :class:`True` if call is successful, otherwise :class:`False`.", "params": [{"name": "volume"}]}, "core.playback.get_current_tl_track": {"description": "Get the currently playing or selected track.\\n\\nReturns a :class:`mopidy.models.TlTrack` or :class:`None`.", "params": []}, "core.playback.get_current_tlid": {"description": "Get the currently playing or selected TLID.\\n\\nExtracted from :meth:`get_current_tl_track` for convenience.\\n\\nReturns a :class:`int` or :class:`None`.\\n\\n.. versionadded:: 1.1", "params": []}, "core.playback.get_current_track": {"description": "Get the currently playing or selected track.\\n\\nExtracted from :meth:`get_current_tl_track` for convenience.\\n\\nReturns a :class:`mopidy.models.Track` or :class:`None`.", "params": []}, "core.playback.get_state": {"description": "Get The playback state.", "params": []}, "core.playback.get_stream_title": {"description": "Get the current stream title or :class:`None`.", "params": []}, "core.playback.get_time_position": {"description": "Get time position in milliseconds.", "params": []}, "core.playback.next": {"description": "Change to the next track.\\n\\nThe current playback state will be kept. If it was playing, playing\\nwill continue. If it was paused, it will still be paused, etc.", "params": []}, "core.playback.pause": {"description": "Pause playback.", "params": []}, "core.playback.play": {"description": "Play the given track, or if the given tl_track and tlid is\\n:class:`None`, play the currently active track.\\n\\nNote that the track **must** already be in the tracklist.\\n\\n.. deprecated:: 3.0\\n    The ``tl_track`` argument. Use ``tlid`` instead.\\n\\n:param tl_track: track to play\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:param tlid: TLID of the track to play\\n:type tlid: :class:`int` or :class:`None`", "params": [{"name": "tl_track", "default": null}, {"name": "tlid", "default": null}]}, "core.playback.previous": {"description": "Change to the previous track.\\n\\nThe current playback state will be kept. If it was playing, playing\\nwill continue. If it was paused, it will still be paused, etc.", "params": []}, "core.playback.resume": {"description": "If paused, resume playing the current track.", "params": []}, "core.playback.seek": {"description": "Seeks to time position given in milliseconds.\\n\\n:param time_position: time position in milliseconds\\n:type time_position: int\\n:rtype: :class:`True` if successful, else :class:`False`", "params": [{"name": "time_position"}]}, "core.playback.set_state": {"description": "Set the playback state.\\n\\nMust be :attr:`PLAYING`, :attr:`PAUSED`, or :attr:`STOPPED`.\\n\\nPossible states and transitions:\\n\\n.. digraph:: state_transitions\\n\\n    \\"STOPPED\\" -> \\"PLAYING\\" [ label=\\"play\\" ]\\n    \\"STOPPED\\" -> \\"PAUSED\\" [ label=\\"pause\\" ]\\n    \\"PLAYING\\" -> \\"STOPPED\\" [ label=\\"stop\\" ]\\n    \\"PLAYING\\" -> \\"PAUSED\\" [ label=\\"pause\\" ]\\n    \\"PLAYING\\" -> \\"PLAYING\\" [ label=\\"play\\" ]\\n    \\"PAUSED\\" -> \\"PLAYING\\" [ label=\\"resume\\" ]\\n    \\"PAUSED\\" -> \\"STOPPED\\" [ label=\\"stop\\" ]", "params": [{"name": "new_state"}]}, "core.playback.stop": {"description": "Stop playing.", "params": []}, "core.playlists.as_list": {"description": "Get a list of the currently available playlists.\\n\\nReturns a list of :class:`~mopidy.models.Ref` objects referring to the\\nplaylists. In other words, no information about the playlists\' content\\nis given.\\n\\n:rtype: list of :class:`mopidy.models.Ref`\\n\\n.. versionadded:: 1.0", "params": []}, "core.playlists.create": {"description": "Create a new playlist.\\n\\nIf ``uri_scheme`` matches an URI scheme handled by a current backend,\\nthat backend is asked to create the playlist. If ``uri_scheme`` is\\n:class:`None` or doesn\'t match a current backend, the first backend is\\nasked to create the playlist.\\n\\nAll new playlists must be created by calling this method, and **not**\\nby creating new instances of :class:`mopidy.models.Playlist`.\\n\\n:param name: name of the new playlist\\n:type name: string\\n:param uri_scheme: use the backend matching the URI scheme\\n:type uri_scheme: string\\n:rtype: :class:`mopidy.models.Playlist` or :class:`None`", "params": [{"name": "name"}, {"name": "uri_scheme", "default": null}]}, "core.playlists.delete": {"description": "Delete playlist identified by the URI.\\n\\nIf the URI doesn\'t match the URI schemes handled by the current\\nbackends, nothing happens.\\n\\nReturns :class:`True` if deleted, :class:`False` otherwise.\\n\\n:param uri: URI of the playlist to delete\\n:type uri: string\\n:rtype: :class:`bool`\\n\\n.. versionchanged:: 2.2\\n    Return type defined.", "params": [{"name": "uri"}]}, "core.playlists.get_items": {"description": "Get the items in a playlist specified by ``uri``.\\n\\nReturns a list of :class:`~mopidy.models.Ref` objects referring to the\\nplaylist\'s items.\\n\\nIf a playlist with the given ``uri`` doesn\'t exist, it returns\\n:class:`None`.\\n\\n:rtype: list of :class:`mopidy.models.Ref`, or :class:`None`\\n\\n.. versionadded:: 1.0", "params": [{"name": "uri"}]}, "core.playlists.get_uri_schemes": {"description": "Get the list of URI schemes that support playlists.\\n\\n:rtype: list of string\\n\\n.. versionadded:: 2.0", "params": []}, "core.playlists.lookup": {"description": "Lookup playlist with given URI in both the set of playlists and in any\\nother playlist sources. Returns :class:`None` if not found.\\n\\n:param uri: playlist URI\\n:type uri: string\\n:rtype: :class:`mopidy.models.Playlist` or :class:`None`", "params": [{"name": "uri"}]}, "core.playlists.refresh": {"description": "Refresh the playlists in :attr:`playlists`.\\n\\nIf ``uri_scheme`` is :class:`None`, all backends are asked to refresh.\\nIf ``uri_scheme`` is an URI scheme handled by a backend, only that\\nbackend is asked to refresh. If ``uri_scheme`` doesn\'t match any\\ncurrent backend, nothing happens.\\n\\n:param uri_scheme: limit to the backend matching the URI scheme\\n:type uri_scheme: string", "params": [{"name": "uri_scheme", "default": null}]}, "core.playlists.save": {"description": "Save the playlist.\\n\\nFor a playlist to be saveable, it must have the ``uri`` attribute set.\\nYou must not set the ``uri`` atribute yourself, but use playlist\\nobjects returned by :meth:`create` or retrieved from :attr:`playlists`,\\nwhich will always give you saveable playlists.\\n\\nThe method returns the saved playlist. The return playlist may differ\\nfrom the saved playlist. E.g. if the playlist name was changed, the\\nreturned playlist may have a different URI. The caller of this method\\nmust throw away the playlist sent to this method, and use the\\nreturned playlist instead.\\n\\nIf the playlist\'s URI isn\'t set or doesn\'t match the URI scheme of a\\ncurrent backend, nothing is done and :class:`None` is returned.\\n\\n:param playlist: the playlist\\n:type playlist: :class:`mopidy.models.Playlist`\\n:rtype: :class:`mopidy.models.Playlist` or :class:`None`", "params": [{"name": "playlist"}]}, "core.tracklist.add": {"description": "Add tracks to the tracklist.\\n\\nIf ``uris`` is given instead of ``tracks``, the URIs are\\nlooked up in the library and the resulting tracks are added to the\\ntracklist.\\n\\nIf ``at_position`` is given, the tracks are inserted at the given\\nposition in the tracklist. If ``at_position`` is not given, the tracks\\nare appended to the end of the tracklist.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.\\n\\n:param tracks: tracks to add\\n:type tracks: list of :class:`mopidy.models.Track` or :class:`None`\\n:param at_position: position in tracklist to add tracks\\n:type at_position: int or :class:`None`\\n:param uris: list of URIs for tracks to add\\n:type uris: list of string or :class:`None`\\n:rtype: list of :class:`mopidy.models.TlTrack`\\n\\n.. versionadded:: 1.0\\n    The ``uris`` argument.\\n\\n.. deprecated:: 1.0\\n    The ``tracks`` argument. Use ``uris``.", "params": [{"name": "tracks", "default": null}, {"name": "at_position", "default": null}, {"name": "uris", "default": null}]}, "core.tracklist.clear": {"description": "Clear the tracklist.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.", "params": []}, "core.tracklist.eot_track": {"description": "The track that will be played after the given track.\\n\\nNot necessarily the same track as :meth:`next_track`.\\n\\n.. deprecated:: 3.0\\n    Use :meth:`get_eot_tlid` instead.\\n\\n:param tl_track: the reference track\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:rtype: :class:`mopidy.models.TlTrack` or :class:`None`", "params": [{"name": "tl_track"}]}, "core.tracklist.filter": {"description": "Filter the tracklist by the given criteria.\\n\\nEach rule in the criteria consists of a model field and a list of\\nvalues to compare it against. If the model field matches any of the\\nvalues, it may be returned.\\n\\nOnly tracks that match all the given criteria are returned.\\n\\nExamples::\\n\\n    # Returns tracks with TLIDs 1, 2, 3, or 4 (tracklist ID)\\n    filter({\'tlid\': [1, 2, 3, 4]})\\n\\n    # Returns track with URIs \'xyz\' or \'abc\'\\n    filter({\'uri\': [\'xyz\', \'abc\']})\\n\\n    # Returns track with a matching TLIDs (1, 3 or 6) and a\\n    # matching URI (\'xyz\' or \'abc\')\\n    filter({\'tlid\': [1, 3, 6], \'uri\': [\'xyz\', \'abc\']})\\n\\n:param criteria: one or more rules to match by\\n:type criteria: dict, of (string, list) pairs\\n:rtype: list of :class:`mopidy.models.TlTrack`", "params": [{"name": "criteria"}]}, "core.tracklist.get_consume": {"description": "Get consume mode.\\n\\n:class:`True`\\n    Tracks are removed from the tracklist when they have been played.\\n:class:`False`\\n    Tracks are not removed from the tracklist.", "params": []}, "core.tracklist.get_eot_tlid": {"description": "The TLID of the track that will be played after the current track.\\n\\nNot necessarily the same TLID as returned by :meth:`get_next_tlid`.\\n\\n:rtype: :class:`int` or :class:`None`\\n\\n.. versionadded:: 1.1", "params": []}, "core.tracklist.get_length": {"description": "Get length of the tracklist.", "params": []}, "core.tracklist.get_next_tlid": {"description": "The tlid of the track that will be played if calling\\n:meth:`mopidy.core.PlaybackController.next()`.\\n\\nFor normal playback this is the next track in the tracklist. If repeat\\nis enabled the next track can loop around the tracklist. When random is\\nenabled this should be a random track, all tracks should be played once\\nbefore the tracklist repeats.\\n\\n:rtype: :class:`int` or :class:`None`\\n\\n.. versionadded:: 1.1", "params": []}, "core.tracklist.get_previous_tlid": {"description": "Returns the TLID of the track that will be played if calling\\n:meth:`mopidy.core.PlaybackController.previous()`.\\n\\nFor normal playback this is the previous track in the tracklist. If\\nrandom and/or consume is enabled it should return the current track\\ninstead.\\n\\n:rtype: :class:`int` or :class:`None`\\n\\n.. versionadded:: 1.1", "params": []}, "core.tracklist.get_random": {"description": "Get random mode.\\n\\n:class:`True`\\n    Tracks are selected at random from the tracklist.\\n:class:`False`\\n    Tracks are played in the order of the tracklist.", "params": []}, "core.tracklist.get_repeat": {"description": "Get repeat mode.\\n\\n:class:`True`\\n    The tracklist is played repeatedly.\\n:class:`False`\\n    The tracklist is played once.", "params": []}, "core.tracklist.get_single": {"description": "Get single mode.\\n\\n:class:`True`\\n    Playback is stopped after current song, unless in ``repeat`` mode.\\n:class:`False`\\n    Playback continues after current song.", "params": []}, "core.tracklist.get_tl_tracks": {"description": "Get tracklist as list of :class:`mopidy.models.TlTrack`.", "params": []}, "core.tracklist.get_tracks": {"description": "Get tracklist as list of :class:`mopidy.models.Track`.", "params": []}, "core.tracklist.get_version": {"description": "Get the tracklist version.\\n\\nInteger which is increased every time the tracklist is changed. Is not\\nreset before Mopidy is restarted.", "params": []}, "core.tracklist.index": {"description": "The position of the given track in the tracklist.\\n\\nIf neither *tl_track* or *tlid* is given we return the index of\\nthe currently playing track.\\n\\n:param tl_track: the track to find the index of\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:param tlid: TLID of the track to find the index of\\n:type tlid: :class:`int` or :class:`None`\\n:rtype: :class:`int` or :class:`None`\\n\\n.. versionadded:: 1.1\\n    The *tlid* parameter", "params": [{"name": "tl_track", "default": null}, {"name": "tlid", "default": null}]}, "core.tracklist.move": {"description": "Move the tracks in the slice ``[start:end]`` to ``to_position``.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.\\n\\n:param start: position of first track to move\\n:type start: int\\n:param end: position after last track to move\\n:type end: int\\n:param to_position: new position for the tracks\\n:type to_position: int", "params": [{"name": "start"}, {"name": "end"}, {"name": "to_position"}]}, "core.tracklist.next_track": {"description": "The track that will be played if calling\\n:meth:`mopidy.core.PlaybackController.next()`.\\n\\nFor normal playback this is the next track in the tracklist. If repeat\\nis enabled the next track can loop around the tracklist. When random is\\nenabled this should be a random track, all tracks should be played once\\nbefore the tracklist repeats.\\n\\n.. deprecated:: 3.0\\n    Use :meth:`get_next_tlid` instead.\\n\\n:param tl_track: the reference track\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:rtype: :class:`mopidy.models.TlTrack` or :class:`None`", "params": [{"name": "tl_track"}]}, "core.tracklist.previous_track": {"description": "Returns the track that will be played if calling\\n:meth:`mopidy.core.PlaybackController.previous()`.\\n\\nFor normal playback this is the previous track in the tracklist. If\\nrandom and/or consume is enabled it should return the current track\\ninstead.\\n\\n.. deprecated:: 3.0\\n    Use :meth:`get_previous_tlid` instead.\\n\\n:param tl_track: the reference track\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:rtype: :class:`mopidy.models.TlTrack` or :class:`None`", "params": [{"name": "tl_track"}]}, "core.tracklist.remove": {"description": "Remove the matching tracks from the tracklist.\\n\\nUses :meth:`filter()` to lookup the tracks to remove.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.\\n\\n:param criteria: one or more rules to match by\\n:type criteria: dict, of (string, list) pairs\\n:rtype: list of :class:`mopidy.models.TlTrack` that were removed", "params": [{"name": "criteria"}]}, "core.tracklist.set_consume": {"description": "Set consume mode.\\n\\n:class:`True`\\n    Tracks are removed from the tracklist when they have been played.\\n:class:`False`\\n    Tracks are not removed from the tracklist.", "params": [{"name": "value"}]}, "core.tracklist.set_random": {"description": "Set random mode.\\n\\n:class:`True`\\n    Tracks are selected at random from the tracklist.\\n:class:`False`\\n    Tracks are played in the order of the tracklist.", "params": [{"name": "value"}]}, "core.tracklist.set_repeat": {"description": "Set repeat mode.\\n\\nTo repeat a single track, set both ``repeat`` and ``single``.\\n\\n:class:`True`\\n    The tracklist is played repeatedly.\\n:class:`False`\\n    The tracklist is played once.", "params": [{"name": "value"}]}, "core.tracklist.set_single": {"description": "Set single mode.\\n\\n:class:`True`\\n    Playback is stopped after current song, unless in ``repeat`` mode.\\n:class:`False`\\n    Playback continues after current song.", "params": [{"name": "value"}]}, "core.tracklist.shuffle": {"description": "Shuffles the entire tracklist. If ``start`` and ``end`` is given only\\nshuffles the slice ``[start:end]``.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.\\n\\n:param start: position of first track to shuffle\\n:type start: int or :class:`None`\\n:param end: position after last track to shuffle\\n:type end: int or :class:`None`", "params": [{"name": "start", "default": null}, {"name": "end", "default": null}]}, "core.tracklist.slice": {"description": "Returns a slice of the tracklist, limited by the given start and end\\npositions.\\n\\n:param start: position of first track to include in slice\\n:type start: int\\n:param end: position after last track to include in slice\\n:type end: int\\n:rtype: :class:`mopidy.models.TlTrack`", "params": [{"name": "start"}, {"name": "end"}]}}}'
okt 24 14:22:39 Desktop-Ubuntu mopidy[10785]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.describe","jsonrpc":"2.0","id":35}'
okt 24 14:22:39 Desktop-Ubuntu mopidy[10785]: DEBUG    [HttpServer] mopidy.http.handlers New WebSocket connection from 127.0.0.1
okt 24 14:22:39 Desktop-Ubuntu mopidy[10785]: INFO     [HttpServer] tornado.access 101 GET /mopidy/ws/ (127.0.0.1) 20.79ms
okt 24 14:22:38 Desktop-Ubuntu mopidy[10785]: DEBUG    [HttpFrontend-11 (_actor_loop)] mopidy.zeroconf Zeroconf service 'Mopidy HTTP server on Desktop-Ubuntu' (_mopidy-http._tcp at []:6680): Published
okt 24 14:22:38 Desktop-Ubuntu mopidy[10785]: DEBUG    [HttpFrontend-11 (_actor_loop)] mopidy.zeroconf Zeroconf service 'Mopidy HTTP server on Desktop-Ubuntu' (_http._tcp at []:6680): Published
okt 24 14:22:38 Desktop-Ubuntu mopidy[10785]:     '/': <class 'tornado.web.RedirectHandler'>
okt 24 14:22:38 Desktop-Ubuntu mopidy[10785]:     '/mopidy/': <class 'mopidy.http.handlers.ClientListHandler'>
okt 24 14:22:38 Desktop-Ubuntu mopidy[10785]:     '/mopidy/(.+)': <class 'mopidy.http.handlers.StaticFileHandler'>
okt 24 14:22:38 Desktop-Ubuntu mopidy[10785]:     '/mopidy/rpc': <class 'mopidy.http.handlers.JsonRpcHandler'>
okt 24 14:22:38 Desktop-Ubuntu mopidy[10785]:     '/mopidy/ws/?': <class 'mopidy.http.handlers.WebSocketHandler'>
okt 24 14:22:38 Desktop-Ubuntu mopidy[10785]:     '/mopidy': <class 'mopidy.http.handlers.AddSlashHandler'>
okt 24 14:22:38 Desktop-Ubuntu mopidy[10785]:     '/iris/(.*)': <class 'mopidy_iris.handlers.ReactRouterHandler'>
okt 24 14:22:38 Desktop-Ubuntu mopidy[10785]:     '/iris/((.*)(?:css|js|json|map)$)': <class 'tornado.web.StaticFileHandler'>
okt 24 14:22:38 Desktop-Ubuntu mopidy[10785]:     '/iris/assets/(.*)': <class 'tornado.web.StaticFileHandler'>
okt 24 14:22:38 Desktop-Ubuntu mopidy[10785]:     '/iris/ws/?': <class 'mopidy_iris.handlers.WebsocketHandler'>
okt 24 14:22:38 Desktop-Ubuntu mopidy[10785]:     '/iris/http/([^/]*)': <class 'mopidy_iris.handlers.HttpHandler'>
okt 24 14:22:38 Desktop-Ubuntu mopidy[10785]:     '/iris': <class 'mopidy.http.handlers.AddSlashHandler'>
okt 24 14:22:38 Desktop-Ubuntu mopidy[10785]:     '/local/(.+)': <class 'mopidy_local.web.ImageHandler'>
okt 24 14:22:38 Desktop-Ubuntu mopidy[10785]:     '/local/(index.html)?': <class 'mopidy_local.web.IndexHandler'>
okt 24 14:22:38 Desktop-Ubuntu mopidy[10785]:     '/local': <class 'mopidy.http.handlers.AddSlashHandler'>
okt 24 14:22:38 Desktop-Ubuntu mopidy[10785]: DEBUG    [HttpServer] mopidy.http.actor HTTP routes from extensions:
okt 24 14:22:38 Desktop-Ubuntu mopidy[10785]: DEBUG    [HttpServer] mopidy.http.actor Default webclient is mopidy
okt 24 14:22:38 Desktop-Ubuntu mopidy[10785]: DEBUG    [HttpServer] mopidy.http.actor Loaded HTTP extension: mopidy
okt 24 14:22:38 Desktop-Ubuntu mopidy[10785]: DEBUG    [HttpServer] mopidy.http.actor Loaded HTTP extension: iris
okt 24 14:22:38 Desktop-Ubuntu mopidy[10785]: DEBUG    [HttpServer] mopidy.http.actor Loaded HTTP extension: local
okt 24 14:22:38 Desktop-Ubuntu mopidy[10785]: INFO     [MainThread] mopidy.commands Starting GLib mainloop
okt 24 14:22:38 Desktop-Ubuntu mopidy[10785]: DEBUG    [HttpServer] asyncio Using selector: EpollSelector
okt 24 14:22:38 Desktop-Ubuntu mopidy[10785]: TRACE    [MainThread] mopidy.internal.timer HttpFrontend took 0ms
okt 24 14:22:38 Desktop-Ubuntu mopidy[10785]: INFO     [HttpFrontend-11 (_actor_loop)] mopidy.http.actor HTTP server running at [::ffff:127.0.0.1]:6680
okt 24 14:22:38 Desktop-Ubuntu mopidy[10785]: DEBUG    [MainThread] pykka Starting HttpFrontend (urn:uuid:899834d4-2fc2-4c03-980f-3fc1c0943719)
okt 24 14:22:38 Desktop-Ubuntu mopidy[10785]: DEBUG    [MainThread] pykka Registered HttpFrontend (urn:uuid:899834d4-2fc2-4c03-980f-3fc1c0943719)
okt 24 14:22:38 Desktop-Ubuntu mopidy[10785]: DEBUG    [MainThread] mopidy.http.actor Starting HTTP server
okt 24 14:22:38 Desktop-Ubuntu mopidy[10785]: TRACE    [MainThread] mopidy.internal.timer IrisFrontend took 0ms
okt 24 14:22:38 Desktop-Ubuntu mopidy[10785]: INFO     [IrisFrontend-9 (_actor_loop)] mopidy_iris.core Starting Iris 3.64.1
okt 24 14:22:38 Desktop-Ubuntu mopidy[10785]: DEBUG    [MainThread] pykka Starting IrisFrontend (urn:uuid:fd992af0-d550-4b73-b804-32d8975d9352)
okt 24 14:22:38 Desktop-Ubuntu mopidy[10785]: DEBUG    [MainThread] pykka Registered IrisFrontend (urn:uuid:fd992af0-d550-4b73-b804-32d8975d9352)
okt 24 14:22:38 Desktop-Ubuntu mopidy[10785]: TRACE    [MainThread] mopidy.internal.timer YTMusicScrobbleFE took 0ms
okt 24 14:22:38 Desktop-Ubuntu mopidy[10785]: DEBUG    [MainThread] pykka Starting YTMusicScrobbleFE (urn:uuid:07b1ba01-ae99-4110-ba17-a5a5e2cd1601)
okt 24 14:22:38 Desktop-Ubuntu mopidy[10785]: DEBUG    [MainThread] pykka Registered YTMusicScrobbleFE (urn:uuid:07b1ba01-ae99-4110-ba17-a5a5e2cd1601)
okt 24 14:22:38 Desktop-Ubuntu mopidy[10785]: INFO     [MainThread] mopidy.commands Starting Mopidy frontends: YTMusicScrobbleFE, IrisFrontend, HttpFrontend
okt 24 14:22:38 Desktop-Ubuntu mopidy[10785]: DEBUG    [MainThread] pykka Starting Core (urn:uuid:715e9ad4-e582-4367-9404-57dc411effcd)
okt 24 14:22:38 Desktop-Ubuntu mopidy[10785]: DEBUG    [MainThread] pykka Registered Core (urn:uuid:715e9ad4-e582-4367-9404-57dc411effcd)
okt 24 14:22:38 Desktop-Ubuntu mopidy[10785]: INFO     [MainThread] mopidy.commands Starting Mopidy core
okt 24 14:22:38 Desktop-Ubuntu mopidy[10785]: TRACE    [MainThread] mopidy.internal.timer StreamBackend took 3ms
okt 24 14:22:38 Desktop-Ubuntu mopidy[10785]: DEBUG    [MainThread] pykka Starting StreamBackend (urn:uuid:01034658-075c-4905-a2d0-62927c517a2a)
okt 24 14:22:38 Desktop-Ubuntu mopidy[10785]: DEBUG    [MainThread] pykka Registered StreamBackend (urn:uuid:01034658-075c-4905-a2d0-62927c517a2a)
okt 24 14:22:38 Desktop-Ubuntu mopidy[10785]: TRACE    [MainThread] mopidy.internal.timer M3UBackend took 2ms
okt 24 14:22:38 Desktop-Ubuntu mopidy[10785]: INFO     [Audio-2 (_actor_loop)] mopidy.audio.actor Audio output set to "pulsesink server=127.0.0.1"
okt 24 14:22:38 Desktop-Ubuntu mopidy[10785]: DEBUG    [MainThread] pykka Starting M3UBackend (urn:uuid:7c4eccf5-3e78-47a1-9ef9-f2f39143bbac)
okt 24 14:22:38 Desktop-Ubuntu mopidy[10785]: DEBUG    [MainThread] pykka Registered M3UBackend (urn:uuid:7c4eccf5-3e78-47a1-9ef9-f2f39143bbac)
okt 24 14:22:38 Desktop-Ubuntu mopidy[10785]: TRACE    [MainThread] mopidy.internal.timer FileBackend took 3ms
okt 24 14:22:38 Desktop-Ubuntu mopidy[10785]: DEBUG    [MainThread] pykka Starting FileBackend (urn:uuid:a9869647-01c9-4dba-a655-98b08e236568)
okt 24 14:22:38 Desktop-Ubuntu mopidy[10785]: DEBUG    [MainThread] pykka Registered FileBackend (urn:uuid:a9869647-01c9-4dba-a655-98b08e236568)
okt 24 14:22:38 Desktop-Ubuntu mopidy[10785]: DEBUG    [MainThread] mopidy.file.library Failed expanding path ($XDG_MUSIC_DIR) from file/media_dirs config value.
okt 24 14:22:38 Desktop-Ubuntu mopidy[10785]: AttributeError: 'YTMusic' object has no attribute 'headers'
okt 24 14:22:38 Desktop-Ubuntu mopidy[10785]:     if 'x-goog-visitor-id' not in self.headers:
okt 24 14:22:38 Desktop-Ubuntu mopidy[10785]:   File "/usr/local/lib/python3.10/dist-packages/ytmusicapi/ytmusic.py", line 98, in __init__
okt 24 14:22:38 Desktop-Ubuntu mopidy[10785]:     self.api = YTMusic(self._ytmusicapi_auth_json)
okt 24 14:22:38 Desktop-Ubuntu mopidy[10785]:   File "/usr/local/lib/python3.10/dist-packages/mopidy_ytmusic/backend.py", line 65, in __init__
okt 24 14:22:38 Desktop-Ubuntu mopidy[10785]:     obj = cls(*args, **kwargs)
okt 24 14:22:38 Desktop-Ubuntu mopidy[10785]:   File "/usr/lib/python3/dist-packages/pykka/_actor.py", line 91, in start
okt 24 14:22:38 Desktop-Ubuntu mopidy[10785]:     backend = backend_class.start(
okt 24 14:22:38 Desktop-Ubuntu mopidy[10785]:   File "/usr/lib/python3/dist-packages/mopidy/commands.py", line 412, in start_backends
okt 24 14:22:38 Desktop-Ubuntu mopidy[10785]:     yield
okt 24 14:22:38 Desktop-Ubuntu mopidy[10785]:   File "/usr/lib/python3/dist-packages/mopidy/commands.py", line 248, in _actor_error_handling
okt 24 14:22:38 Desktop-Ubuntu mopidy[10785]: Traceback (most recent call last):
okt 24 14:22:38 Desktop-Ubuntu mopidy[10785]: ERROR    [MainThread] mopidy.commands Got un-handled exception from YTMusicBackend
okt 24 14:22:38 Desktop-Ubuntu mopidy[10785]: TRACE    [MainThread] mopidy.internal.timer LocalBackend took 4ms
okt 24 14:22:38 Desktop-Ubuntu mopidy[10785]: DEBUG    [MainThread] pykka Starting LocalBackend (urn:uuid:779efbcb-aada-4c02-9b47-3640fb508142)
okt 24 14:22:38 Desktop-Ubuntu mopidy[10785]: DEBUG    [MainThread] pykka Registered LocalBackend (urn:uuid:779efbcb-aada-4c02-9b47-3640fb508142)
okt 24 14:22:38 Desktop-Ubuntu mopidy[10785]: INFO     [MainThread] mopidy.commands Starting Mopidy backends: LocalBackend, YTMusicBackend, FileBackend, M3UBackend, StreamBackend
okt 24 14:22:38 Desktop-Ubuntu mopidy[10785]: DEBUG    [MainThread] pykka Starting Audio (urn:uuid:bfcf52f8-1071-4924-9122-20a4b611ecb7)
okt 24 14:22:38 Desktop-Ubuntu mopidy[10785]: DEBUG    [MainThread] pykka Registered Audio (urn:uuid:bfcf52f8-1071-4924-9122-20a4b611ecb7)
okt 24 14:22:38 Desktop-Ubuntu mopidy[10785]: INFO     [MainThread] mopidy.commands Starting Mopidy audio
okt 24 14:22:38 Desktop-Ubuntu mopidy[10785]: DEBUG    [MainThread] mopidy.commands Mixer volume left unchanged
okt 24 14:22:38 Desktop-Ubuntu mopidy[10785]: DEBUG    [MainThread] pykka Starting SoftwareMixer (urn:uuid:dfbcafb3-c233-45d8-8851-8611e0c3631e)
okt 24 14:22:38 Desktop-Ubuntu mopidy[10785]: DEBUG    [MainThread] pykka Registered SoftwareMixer (urn:uuid:dfbcafb3-c233-45d8-8851-8611e0c3631e)
okt 24 14:22:38 Desktop-Ubuntu mopidy[10785]: INFO     [MainThread] mopidy.commands Starting Mopidy mixer: SoftwareMixer
okt 24 14:22:38 Desktop-Ubuntu mopidy[10785]: DEBUG    [MainThread] mopidy.commands Available Mopidy mixers: SoftwareMixer
okt 24 14:22:38 Desktop-Ubuntu mopidy[10785]: INFO     [MainThread] mopidy.__main__ Disabled extensions: soundcloud, youtube
okt 24 14:22:38 Desktop-Ubuntu mopidy[10785]: INFO     [MainThread] mopidy.__main__ Enabled extensions: file, iris, ytmusic, softwaremixer, m3u, stream, http, local
okt 24 14:22:38 Desktop-Ubuntu mopidy[10785]: DEBUG    [MainThread] mopidy.ext Validating extension: stream
okt 24 14:22:38 Desktop-Ubuntu mopidy[10785]: DEBUG    [MainThread] mopidy.ext Validating extension: softwaremixer
okt 24 14:22:38 Desktop-Ubuntu mopidy[10785]: DEBUG    [MainThread] mopidy.ext Validating extension: m3u
okt 24 14:22:38 Desktop-Ubuntu mopidy[10785]: DEBUG    [MainThread] mopidy.ext Validating extension: http
okt 24 14:22:38 Desktop-Ubuntu mopidy[10785]: DEBUG    [MainThread] mopidy.ext Validating extension: file
okt 24 14:22:38 Desktop-Ubuntu mopidy[10785]: DEBUG    [MainThread] mopidy.ext Validating extension: iris
okt 24 14:22:38 Desktop-Ubuntu mopidy[10785]: DEBUG    [MainThread] mopidy.ext Validating extension: ytmusic
okt 24 14:22:38 Desktop-Ubuntu mopidy[10785]: DEBUG    [MainThread] mopidy.ext Validating extension: soundcloud
okt 24 14:22:38 Desktop-Ubuntu mopidy[10785]: DEBUG    [MainThread] mopidy.ext Validating extension: local
okt 24 14:22:38 Desktop-Ubuntu mopidy[10785]: DEBUG    [MainThread] mopidy.ext Validating extension: youtube
okt 24 14:22:38 Desktop-Ubuntu mopidy[10785]: WARNING  [MainThread] mopidy.config Ignoring config section 'jukebox' because no matching extension was found
okt 24 14:22:38 Desktop-Ubuntu mopidy[10785]: INFO     [MainThread] mopidy.config Loading config from command line options
okt 24 14:22:38 Desktop-Ubuntu mopidy[10785]: INFO     [MainThread] mopidy.config Loading config from file:///etc/mopidy/mopidy.conf
okt 24 14:22:38 Desktop-Ubuntu mopidy[10785]: INFO     [MainThread] mopidy.config Loading config from file:///usr/share/mopidy/conf.d/mopidy.conf
okt 24 14:22:38 Desktop-Ubuntu mopidy[10785]: INFO     [MainThread] mopidy.config Loading config from builtin defaults
okt 24 14:22:38 Desktop-Ubuntu mopidy[10785]: DEBUG    [MainThread] mopidy.config.keyring Fetching passwords from your keyring failed. Any passwords stored in the keyring will not be available. (org.freedesktop.DBus.Error.NotSupported: Unable to autolaunch a dbus-daemon without a $DISPLAY for X11)
okt 24 14:22:38 Desktop-Ubuntu mopidy[10785]: DEBUG    [MainThread] mopidy.ext Discovered extensions: youtube, local, soundcloud, ytmusic, iris, file, http, m3u, softwaremixer, stream
okt 24 14:22:38 Desktop-Ubuntu mopidy[10785]: DEBUG    [MainThread] mopidy.ext Loaded extension: Mopidy-Stream 3.3.0
okt 24 14:22:38 Desktop-Ubuntu mopidy[10785]: DEBUG    [MainThread] mopidy.ext Loading entry point: stream = mopidy.stream:Extension
okt 24 14:22:38 Desktop-Ubuntu mopidy[10785]: DEBUG    [MainThread] mopidy.ext Loaded extension: Mopidy-SoftwareMixer 3.3.0
okt 24 14:22:38 Desktop-Ubuntu mopidy[10785]: DEBUG    [MainThread] mopidy.ext Loading entry point: softwaremixer = mopidy.softwaremixer:Extension
okt 24 14:22:38 Desktop-Ubuntu mopidy[10785]: DEBUG    [MainThread] mopidy.ext Loaded extension: Mopidy-M3U 3.3.0
okt 24 14:22:38 Desktop-Ubuntu mopidy[10785]: DEBUG    [MainThread] mopidy.ext Loading entry point: m3u = mopidy.m3u:Extension
okt 24 14:22:38 Desktop-Ubuntu mopidy[10785]: DEBUG    [MainThread] mopidy.ext Loaded extension: Mopidy-HTTP 3.3.0
okt 24 14:22:38 Desktop-Ubuntu mopidy[10785]: DEBUG    [MainThread] mopidy.ext Loading entry point: http = mopidy.http:Extension
okt 24 14:22:38 Desktop-Ubuntu mopidy[10785]: DEBUG    [MainThread] mopidy.ext Loaded extension: Mopidy-File 3.3.0
okt 24 14:22:38 Desktop-Ubuntu mopidy[10785]: DEBUG    [MainThread] mopidy.ext Loading entry point: file = mopidy.file:Extension
okt 24 14:22:38 Desktop-Ubuntu mopidy[10785]: DEBUG    [MainThread] mopidy.ext Loaded extension: Mopidy-Iris 3.64.1
okt 24 14:22:38 Desktop-Ubuntu mopidy[10785]: DEBUG    [MainThread] mopidy.ext Loading entry point: iris = mopidy_iris:Extension
okt 24 14:22:38 Desktop-Ubuntu mopidy[10785]: DEBUG    [MainThread] mopidy.ext Loaded extension: Mopidy-YTMusic 0.3.7
okt 24 14:22:38 Desktop-Ubuntu mopidy[10785]: DEBUG    [MainThread] mopidy.ext Loading entry point: ytmusic = mopidy_ytmusic:Extension
okt 24 14:22:38 Desktop-Ubuntu mopidy[10785]: DEBUG    [MainThread] mopidy.ext Loaded extension: Mopidy-SoundCloud 3.0.1
okt 24 14:22:38 Desktop-Ubuntu mopidy[10785]: DEBUG    [MainThread] mopidy.ext Loading entry point: soundcloud = mopidy_soundcloud:Extension
okt 24 14:22:38 Desktop-Ubuntu mopidy[10785]: DEBUG    [MainThread] mopidy.ext Loaded extension: Mopidy-Local 3.2.1
okt 24 14:22:38 Desktop-Ubuntu mopidy[10785]: DEBUG    [MainThread] mopidy.ext Loading entry point: local = mopidy_local:Extension
okt 24 14:22:38 Desktop-Ubuntu mopidy[10785]: DEBUG    [MainThread] mopidy.ext Loaded extension: Mopidy-YouTube 3.6.1
okt 24 14:22:38 Desktop-Ubuntu mopidy[10785]: DEBUG    [MainThread] mopidy.ext Loading entry point: youtube = mopidy_youtube:Extension
okt 24 14:22:38 Desktop-Ubuntu mopidy[10785]: INFO     [MainThread] mopidy.__main__ Starting Mopidy 3.3.0
okt 24 14:22:38 Desktop-Ubuntu systemd[1]: Started Mopidy music server.
okt 24 14:22:38 Desktop-Ubuntu systemd[1]: Starting Mopidy music server...
okt 24 14:22:38 Desktop-Ubuntu systemd[1]: mopidy.service: Consumed 1.255s CPU time.
okt 24 14:22:38 Desktop-Ubuntu systemd[1]: Stopped Mopidy music server.
okt 24 14:22:38 Desktop-Ubuntu systemd[1]: mopidy.service: Deactivated successfully.
okt 24 14:22:37 Desktop-Ubuntu mopidy[10440]: Failed loading provided credentials. Make sure to provide a string or a file path. Reason: Expecting value: line 1 column 1 (char 0)
okt 24 14:22:37 Desktop-Ubuntu mopidy[10440]: DEBUG    [MainThread] mopidy.internal.process All actors stopped.
okt 24 14:22:37 Desktop-Ubuntu mopidy[10440]: DEBUG    [SoftwareMixer-1 (_actor_loop)] pykka Stopped SoftwareMixer (urn:uuid:30aeabe5-c2e2-4d18-9f1d-b2d589f46b30)
okt 24 14:22:37 Desktop-Ubuntu mopidy[10440]: DEBUG    [SoftwareMixer-1 (_actor_loop)] pykka Unregistered SoftwareMixer (urn:uuid:30aeabe5-c2e2-4d18-9f1d-b2d589f46b30)
okt 24 14:22:37 Desktop-Ubuntu mopidy[10440]: DEBUG    [MainThread] mopidy.internal.process Stopping 1 instance(s) of SoftwareMixer
okt 24 14:22:37 Desktop-Ubuntu mopidy[10440]: INFO     [MainThread] mopidy.commands Stopping Mopidy mixer
okt 24 14:22:37 Desktop-Ubuntu mopidy[10440]: DEBUG    [Audio-2 (_actor_loop)] pykka Stopped Audio (urn:uuid:89755082-a847-4545-966a-1275c68788a0)
okt 24 14:22:37 Desktop-Ubuntu mopidy[10440]: DEBUG    [Audio-2 (_actor_loop)] pykka Unregistered Audio (urn:uuid:89755082-a847-4545-966a-1275c68788a0)
okt 24 14:22:37 Desktop-Ubuntu mopidy[10440]: DEBUG    [MainThread] mopidy.internal.process Stopping 1 instance(s) of Audio
okt 24 14:22:37 Desktop-Ubuntu mopidy[10440]: INFO     [MainThread] mopidy.commands Stopping Mopidy audio
okt 24 14:22:37 Desktop-Ubuntu mopidy[10440]: DEBUG    [StreamBackend-6 (_actor_loop)] pykka Stopped StreamBackend (urn:uuid:f54dd6ce-9bc9-477d-a221-d21ea7c5efa5)
okt 24 14:22:37 Desktop-Ubuntu mopidy[10440]: DEBUG    [StreamBackend-6 (_actor_loop)] pykka Unregistered StreamBackend (urn:uuid:f54dd6ce-9bc9-477d-a221-d21ea7c5efa5)
okt 24 14:22:37 Desktop-Ubuntu mopidy[10440]: DEBUG    [MainThread] mopidy.internal.process Stopping 1 instance(s) of StreamBackend
okt 24 14:22:37 Desktop-Ubuntu mopidy[10440]: DEBUG    [M3UBackend-5 (_actor_loop)] pykka Stopped M3UBackend (urn:uuid:42e5307a-d54a-4fc2-a127-1bb2988e1f12)
okt 24 14:22:37 Desktop-Ubuntu mopidy[10440]: DEBUG    [M3UBackend-5 (_actor_loop)] pykka Unregistered M3UBackend (urn:uuid:42e5307a-d54a-4fc2-a127-1bb2988e1f12)
okt 24 14:22:37 Desktop-Ubuntu mopidy[10440]: DEBUG    [MainThread] mopidy.internal.process Stopping 1 instance(s) of M3UBackend
okt 24 14:22:37 Desktop-Ubuntu mopidy[10440]: DEBUG    [FileBackend-4 (_actor_loop)] pykka Stopped FileBackend (urn:uuid:dec2f7d1-b513-44b1-b963-acf385b158f9)
okt 24 14:22:37 Desktop-Ubuntu mopidy[10440]: DEBUG    [FileBackend-4 (_actor_loop)] pykka Unregistered FileBackend (urn:uuid:dec2f7d1-b513-44b1-b963-acf385b158f9)
okt 24 14:22:37 Desktop-Ubuntu mopidy[10440]: DEBUG    [MainThread] mopidy.internal.process Stopping 1 instance(s) of FileBackend
okt 24 14:22:37 Desktop-Ubuntu mopidy[10440]: DEBUG    [MainThread] mopidy.internal.process Stopping 0 instance(s) of YTMusicBackend
okt 24 14:22:37 Desktop-Ubuntu mopidy[10440]: DEBUG    [LocalBackend-3 (_actor_loop)] pykka Stopped LocalBackend (urn:uuid:47253b54-ddb6-4f37-994f-1ba80a5a1085)
okt 24 14:22:37 Desktop-Ubuntu mopidy[10440]: DEBUG    [LocalBackend-3 (_actor_loop)] pykka Unregistered LocalBackend (urn:uuid:47253b54-ddb6-4f37-994f-1ba80a5a1085)
okt 24 14:22:37 Desktop-Ubuntu mopidy[10440]: DEBUG    [MainThread] mopidy.internal.process Stopping 1 instance(s) of LocalBackend
okt 24 14:22:37 Desktop-Ubuntu mopidy[10440]: INFO     [MainThread] mopidy.commands Stopping Mopidy backends
okt 24 14:22:37 Desktop-Ubuntu mopidy[10440]: DEBUG    [Core-7 (_actor_loop)] pykka Stopped Core (urn:uuid:7e3e9b71-2f83-40a1-accf-5adf895d5115)
okt 24 14:22:37 Desktop-Ubuntu mopidy[10440]: DEBUG    [Core-7 (_actor_loop)] pykka Unregistered Core (urn:uuid:7e3e9b71-2f83-40a1-accf-5adf895d5115)
okt 24 14:22:37 Desktop-Ubuntu mopidy[10440]: DEBUG    [MainThread] mopidy.internal.process Stopping 1 instance(s) of Core
okt 24 14:22:37 Desktop-Ubuntu mopidy[10440]: DEBUG    [HttpServer] mopidy.http.actor Stopped HTTP server
okt 24 14:22:37 Desktop-Ubuntu mopidy[10440]: INFO     [MainThread] mopidy.commands Stopping Mopidy core
okt 24 14:22:37 Desktop-Ubuntu mopidy[10440]: DEBUG    [HttpFrontend-11 (_actor_loop)] mopidy.http.actor Stopping HTTP server
okt 24 14:22:37 Desktop-Ubuntu mopidy[10440]: DEBUG    [HttpFrontend-11 (_actor_loop)] mopidy.zeroconf Zeroconf service 'Mopidy HTTP server on Desktop-Ubuntu' (_mopidy-http._tcp at []:6680): Unpublished
okt 24 14:22:37 Desktop-Ubuntu mopidy[10440]: DEBUG    [HttpFrontend-11 (_actor_loop)] mopidy.zeroconf Zeroconf service 'Mopidy HTTP server on Desktop-Ubuntu' (_http._tcp at []:6680): Unpublished
okt 24 14:22:37 Desktop-Ubuntu mopidy[10440]: DEBUG    [HttpFrontend-11 (_actor_loop)] pykka Stopped HttpFrontend (urn:uuid:0221a1b0-338b-4fb0-8f5c-938697f31994)
okt 24 14:22:37 Desktop-Ubuntu mopidy[10440]: DEBUG    [HttpFrontend-11 (_actor_loop)] pykka Unregistered HttpFrontend (urn:uuid:0221a1b0-338b-4fb0-8f5c-938697f31994)
okt 24 14:22:37 Desktop-Ubuntu mopidy[10440]: DEBUG    [MainThread] mopidy.internal.process Stopping 1 instance(s) of HttpFrontend
okt 24 14:22:37 Desktop-Ubuntu mopidy[10440]: INFO     [IrisFrontend-9 (_actor_loop)] mopidy_iris.core Stopping Iris
okt 24 14:22:37 Desktop-Ubuntu mopidy[10440]: DEBUG    [IrisFrontend-9 (_actor_loop)] pykka Stopped IrisFrontend (urn:uuid:ef3f7a21-f44b-4da7-892d-d36c2f4e93bf)
okt 24 14:22:37 Desktop-Ubuntu mopidy[10440]: DEBUG    [IrisFrontend-9 (_actor_loop)] pykka Unregistered IrisFrontend (urn:uuid:ef3f7a21-f44b-4da7-892d-d36c2f4e93bf)
okt 24 14:22:37 Desktop-Ubuntu mopidy[10440]: DEBUG    [MainThread] mopidy.internal.process Stopping 1 instance(s) of IrisFrontend
okt 24 14:22:37 Desktop-Ubuntu mopidy[10440]: DEBUG    [YTMusicScrobbleFE-8 (_actor_loop)] pykka Stopped YTMusicScrobbleFE (urn:uuid:77d614c4-4f57-40bc-8101-e86b6406f1bb)
okt 24 14:22:37 Desktop-Ubuntu mopidy[10440]: DEBUG    [YTMusicScrobbleFE-8 (_actor_loop)] pykka Unregistered YTMusicScrobbleFE (urn:uuid:77d614c4-4f57-40bc-8101-e86b6406f1bb)
okt 24 14:22:37 Desktop-Ubuntu mopidy[10440]: DEBUG    [MainThread] mopidy.internal.process Stopping 1 instance(s) of YTMusicScrobbleFE
okt 24 14:22:37 Desktop-Ubuntu mopidy[10440]: INFO     [MainThread] mopidy.commands Stopping Mopidy frontends
okt 24 14:22:37 Desktop-Ubuntu mopidy[10440]: INFO     [MainThread] mopidy.commands GLib mainloop got SIGTERM. Exiting...
okt 24 14:22:37 Desktop-Ubuntu systemd[1]: Stopping Mopidy music server...
okt 24 14:16:50 Desktop-Ubuntu mopidy[10440]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 34, "result": []}'
okt 24 14:16:50 Desktop-Ubuntu mopidy[10440]: ERROR    [LocalBackend-3 (_actor_loop)] mopidy_local.library Lookup error for local:track:test.mp3: no such table: tracks
okt 24 14:16:50 Desktop-Ubuntu mopidy[10440]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.add","params":{"uris":["local:track:test.mp3"],"at_position":0},"jsonrpc":"2.0","id":34}'
okt 24 14:16:49 Desktop-Ubuntu mopidy[10440]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 33, "result": []}'
okt 24 14:16:49 Desktop-Ubuntu mopidy[10440]: ERROR    [LocalBackend-3 (_actor_loop)] mopidy_local.library Lookup error for local:track:test.mp3: no such table: tracks
okt 24 14:16:49 Desktop-Ubuntu mopidy[10440]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.add","params":{"uris":["local:track:test.mp3"],"at_position":0},"jsonrpc":"2.0","id":33}'
okt 24 14:16:48 Desktop-Ubuntu mopidy[10440]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 32, "result": 0}'
okt 24 14:16:48 Desktop-Ubuntu mopidy[10440]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.playback.get_time_position","params":{},"jsonrpc":"2.0","id":32}'
okt 24 14:16:47 Desktop-Ubuntu mopidy[10440]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 31, "result": 4}'
okt 24 14:16:47 Desktop-Ubuntu mopidy[10440]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_next_tlid","params":{},"jsonrpc":"2.0","id":31}'
okt 24 14:16:47 Desktop-Ubuntu mopidy[10440]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 30, "result": 4}'
okt 24 14:16:47 Desktop-Ubuntu mopidy[10440]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_next_tlid","params":{},"jsonrpc":"2.0","id":30}'
okt 24 14:16:46 Desktop-Ubuntu mopidy[10440]: DEBUG    [HttpServer] mopidy_iris.core {'id': 16666138068493, 'jsonrpc': '2.0', 'method': 'broadcast', 'result': {'message': 'Broadcast to 1 connections'}, 'recipient': '978UEBF6UWYV'}
okt 24 14:16:46 Desktop-Ubuntu mopidy[10440]: DEBUG    [HttpServer] mopidy_iris.core {'method': 'notification', 'params': {'notification': {'content': '166656148284185 changed track'}}, 'connection_id': '978UEBF6UWYV'}
okt 24 14:16:46 Desktop-Ubuntu mopidy[10440]: DEBUG    [HttpServer] mopidy_iris.handlers Iris websocket message received: {"jsonrpc":"2.0","id":16666138068493,"method":"broadcast","params":{"method":"notification","params":{"notification":{"content":"166656148284185 changed track"}}}}
okt 24 14:16:46 Desktop-Ubuntu mopidy[10440]: DEBUG    [HttpServer] mopidy_iris.core {'id': 166661380683152, 'jsonrpc': '2.0', 'method': 'add_queue_metadata', 'result': {'message': 'Added queue metadata'}, 'recipient': '978UEBF6UWYV'}
okt 24 14:16:46 Desktop-Ubuntu mopidy[10440]: DEBUG    [HttpServer] mopidy_iris.core {'method': 'queue_metadata_changed', 'params': {'queue_metadata': {'tlid_3': {'tlid': 3, 'added_from': {'uri': 'iris:browse:file:///home/gerard/Music', 'name': 'Browse', 'type': 'browse'}, 'added_by': 166656148284185}, 'tlid_2': {'tlid': 2, 'added_from': {'uri': 'iris:browse:file:///home/gerard/Music', 'name': 'Browse', 'type': 'browse'}, 'added_by': 166656148284185}, 'tlid_1': {'tlid': 1, 'added_from': {'uri': 'iris:browse:file:///home/gerard/Music', 'name': 'Browse', 'type': 'browse'}, 'added_by': 166656148284185}, 'tlid_4': {'tlid': 4, 'added_from': {'uri': 'iris:browse:file:///home/gerard/Music', 'name': 'Browse', 'type': 'browse'}, 'added_by': 166656148284185}}}}
okt 24 14:16:46 Desktop-Ubuntu mopidy[10440]: DEBUG    [HttpServer] mopidy_iris.handlers Iris websocket message received: {"jsonrpc":"2.0","id":166661380683152,"method":"add_queue_metadata","params":{"tlids":[4],"added_from":{"uri":"iris:browse:file:///home/gerard/Music","name":"Browse","type":"browse"},"added_by":166656148284185}}
okt 24 14:16:46 Desktop-Ubuntu mopidy[10440]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 29, "result": [{"__model__": "TlTrack", "tlid": 4, "track": {"__model__": "Track", "uri": "file:///home/gerard/Music/test.mp3", "name": "Symphony No. 40 in G Minor, K. 550 - I. Molto Allegro", "artists": [{"__model__": "Artist", "name": "Czech National Symphony Orchestra"}], "album": {"__model__": "Album", "name": "Musopen Kickstarter Project", "artists": [{"__model__": "Artist", "name": "Czech National Symphony Orchestra"}]}, "composers": [{"__model__": "Artist", "name": "Wolfgang Amadeus Mozart"}], "genre": "Classical", "length": 358848}}, {"__model__": "TlTrack", "tlid": 3, "track": {"__model__": "Track", "uri": "file:///home/gerard/Music/test.mp3", "name": "Symphony No. 40 in G Minor, K. 550 - I. Molto Allegro", "artists": [{"__model__": "Artist", "name": "Czech National Symphony Orchestra"}], "album": {"__model__": "Album", "name": "Musopen Kickstarter Project", "artists": [{"__model__": "Artist", "name": "Czech National Symphony Orchestra"}]}, "composers": [{"__model__": "Artist", "name": "Wolfgang Amadeus Mozart"}], "genre": "Classical", "length": 358848}}, {"__model__": "TlTrack", "tlid": 2, "track": {"__model__": "Track", "uri": "file:///home/gerard/Music/test.mp3", "name": "Symphony No. 40 in G Minor, K. 550 - I. Molto Allegro", "artists": [{"__model__": "Artist", "name": "Czech National Symphony Orchestra"}], "album": {"__model__": "Album", "name": "Musopen Kickstarter Project", "artists": [{"__model__": "Artist", "name": "Czech National Symphony Orchestra"}]}, "composers": [{"__model__": "Artist", "name": "Wolfgang Amadeus Mozart"}], "genre": "Classical", "length": 358848}}, {"__model__": "TlTrack", "tlid": 1, "track": {"__model__": "Track", "uri": "file:///home/gerard/Music/test.mp3", "name": "Symphony No. 40 in G Minor, K. 550 - I. Molto Allegro", "artists": [{"__model__": "Artist", "name": "Czech National Symphony Orchestra"}], "album": {"__model__": "Album", "name": "Musopen Kickstarter Project", "artists": [{"__model__": "Artist", "name": "Czech National Symphony Orchestra"}]}, "composers": [{"__model__": "Artist", "name": "Wolfgang Amadeus Mozart"}], "genre": "Classical", "length": 358848}}]}'
okt 24 14:16:46 Desktop-Ubuntu mopidy[10440]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_tl_tracks","params":{},"jsonrpc":"2.0","id":29}'
okt 24 14:16:46 Desktop-Ubuntu mopidy[10440]: DEBUG    [Core-7 (_actor_loop)] mopidy.listener Sending volume_changed to CoreListener: {'volume': 100}
okt 24 14:16:46 Desktop-Ubuntu mopidy[10440]: DEBUG    [Core-7 (_actor_loop)] mopidy.listener Sending volume_changed to CoreListener: {'volume': 100}
okt 24 14:16:46 Desktop-Ubuntu mopidy[10440]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 28, "result": null}'
okt 24 14:16:46 Desktop-Ubuntu mopidy[10440]: DEBUG    [Core-7 (_actor_loop)] mopidy.listener Sending volume_changed to CoreListener: {'volume': 100}
okt 24 14:16:46 Desktop-Ubuntu mopidy[10440]: DEBUG    [Core-7 (_actor_loop)] mopidy.listener Sending volume_changed to CoreListener: {'volume': 100}
okt 24 14:16:46 Desktop-Ubuntu mopidy[10440]: WARNING  [Core-7 (_actor_loop)] mopidy.core.tracklist Track is not playable: file:///home/gerard/Music/test.mp3
okt 24 14:16:46 Desktop-Ubuntu mopidy[10440]: DEBUG    [MainThread] mopidy.audio.gst Changing state to GST_STATE_NULL: result=GST_STATE_CHANGE_SUCCESS
okt 24 14:16:46 Desktop-Ubuntu mopidy[10440]: WARNING  [Audio-2 (_actor_loop)] mopidy.audio.actor Setting GStreamer state to GST_STATE_PLAYING failed
okt 24 14:16:46 Desktop-Ubuntu mopidy[10440]: DEBUG    [Audio-2 (_actor_loop)] mopidy.audio.gst Changing state to GST_STATE_PLAYING: result=GST_STATE_CHANGE_FAILURE
okt 24 14:16:46 Desktop-Ubuntu mopidy[10440]: DEBUG    [MainThread] mopidy.audio.gst Got ERROR bus message: error=GLib.Error('Failed to connect: Connection refused', 'gst-resource-error-quark', 1) debug='../ext/pulse/pulsesink.c(615): gst_pulseringbuffer_open_device (): /GstBin:audio-sink/mopidy+audio+actor+_Outputs:mopidy+audio+actor+_outputs0/GstBin:bin0/GstPulseSink:pulsesink0'
okt 24 14:16:46 Desktop-Ubuntu mopidy[10440]: ERROR    [MainThread] mopidy.audio.gst GStreamer error: Failed to connect: Connection refused
okt 24 14:16:46 Desktop-Ubuntu mopidy[10440]: DEBUG    [MainThread] mopidy.audio.gst Got STATE_CHANGED bus message: old=GST_STATE_NULL new=GST_STATE_READY pending=GST_STATE_VOID_PENDING
okt 24 14:16:46 Desktop-Ubuntu mopidy[10440]: DEBUG    [MainThread] mopidy.audio.gst Changing state to GST_STATE_NULL: result=GST_STATE_CHANGE_SUCCESS
okt 24 14:16:46 Desktop-Ubuntu mopidy[10440]: DEBUG    [SoftwareMixer-1 (_actor_loop)] mopidy.listener Sending volume_changed to MixerListener: {'volume': 100}
okt 24 14:16:46 Desktop-Ubuntu mopidy[10440]: DEBUG    [SoftwareMixer-1 (_actor_loop)] mopidy.mixer Mixer event: volume_changed(volume=100)
okt 24 14:16:46 Desktop-Ubuntu mopidy[10440]: DEBUG    [Audio-2 (_actor_loop)] mopidy.audio.actor Flags: 2
okt 24 14:16:46 Desktop-Ubuntu mopidy[10440]: DEBUG    [Audio-2 (_actor_loop)] mopidy.audio.gst Changing state to GST_STATE_READY: result=GST_STATE_CHANGE_SUCCESS
okt 24 14:16:46 Desktop-Ubuntu mopidy[10440]: WARNING  [Core-7 (_actor_loop)] mopidy.core.tracklist Track is not playable: file:///home/gerard/Music/test.mp3
okt 24 14:16:46 Desktop-Ubuntu mopidy[10440]: WARNING  [Audio-2 (_actor_loop)] mopidy.audio.actor Setting GStreamer state to GST_STATE_PLAYING failed
okt 24 14:16:46 Desktop-Ubuntu mopidy[10440]: DEBUG    [Audio-2 (_actor_loop)] mopidy.audio.gst Changing state to GST_STATE_PLAYING: result=GST_STATE_CHANGE_FAILURE
okt 24 14:16:46 Desktop-Ubuntu mopidy[10440]: DEBUG    [MainThread] mopidy.audio.gst Got ERROR bus message: error=GLib.Error('Failed to connect: Connection refused', 'gst-resource-error-quark', 1) debug='../ext/pulse/pulsesink.c(615): gst_pulseringbuffer_open_device (): /GstBin:audio-sink/mopidy+audio+actor+_Outputs:mopidy+audio+actor+_outputs0/GstBin:bin0/GstPulseSink:pulsesink0'
okt 24 14:16:46 Desktop-Ubuntu mopidy[10440]: ERROR    [MainThread] mopidy.audio.gst GStreamer error: Failed to connect: Connection refused
okt 24 14:16:46 Desktop-Ubuntu mopidy[10440]: DEBUG    [MainThread] mopidy.audio.gst Got STATE_CHANGED bus message: old=GST_STATE_NULL new=GST_STATE_READY pending=GST_STATE_PLAYING
okt 24 14:16:46 Desktop-Ubuntu mopidy[10440]: DEBUG    [SoftwareMixer-1 (_actor_loop)] mopidy.listener Sending volume_changed to MixerListener: {'volume': 100}
okt 24 14:16:46 Desktop-Ubuntu mopidy[10440]: DEBUG    [SoftwareMixer-1 (_actor_loop)] mopidy.mixer Mixer event: volume_changed(volume=100)
okt 24 14:16:46 Desktop-Ubuntu mopidy[10440]: DEBUG    [MainThread] mopidy.audio.gst Changing state to GST_STATE_NULL: result=GST_STATE_CHANGE_SUCCESS
okt 24 14:16:46 Desktop-Ubuntu mopidy[10440]: DEBUG    [Audio-2 (_actor_loop)] mopidy.audio.actor Flags: 2
okt 24 14:16:46 Desktop-Ubuntu mopidy[10440]: DEBUG    [Audio-2 (_actor_loop)] mopidy.audio.gst Changing state to GST_STATE_READY: result=GST_STATE_CHANGE_SUCCESS
okt 24 14:16:46 Desktop-Ubuntu mopidy[10440]: DEBUG    [MainThread] mopidy.audio.gst Got ERROR bus message: error=GLib.Error('Failed to connect: Connection refused', 'gst-resource-error-quark', 1) debug='../ext/pulse/pulsesink.c(615): gst_pulseringbuffer_open_device (): /GstBin:audio-sink/mopidy+audio+actor+_Outputs:mopidy+audio+actor+_outputs0/GstBin:bin0/GstPulseSink:pulsesink0'
okt 24 14:16:46 Desktop-Ubuntu mopidy[10440]: WARNING  [Core-7 (_actor_loop)] mopidy.core.tracklist Track is not playable: file:///home/gerard/Music/test.mp3
okt 24 14:16:46 Desktop-Ubuntu mopidy[10440]: WARNING  [Audio-2 (_actor_loop)] mopidy.audio.actor Setting GStreamer state to GST_STATE_PLAYING failed
okt 24 14:16:46 Desktop-Ubuntu mopidy[10440]: DEBUG    [Audio-2 (_actor_loop)] mopidy.audio.gst Changing state to GST_STATE_PLAYING: result=GST_STATE_CHANGE_FAILURE
okt 24 14:16:46 Desktop-Ubuntu mopidy[10440]: ERROR    [MainThread] mopidy.audio.gst GStreamer error: Failed to connect: Connection refused
okt 24 14:16:46 Desktop-Ubuntu mopidy[10440]: DEBUG    [SoftwareMixer-1 (_actor_loop)] mopidy.listener Sending volume_changed to MixerListener: {'volume': 100}
okt 24 14:16:46 Desktop-Ubuntu mopidy[10440]: DEBUG    [SoftwareMixer-1 (_actor_loop)] mopidy.mixer Mixer event: volume_changed(volume=100)
okt 24 14:16:46 Desktop-Ubuntu mopidy[10440]: DEBUG    [Audio-2 (_actor_loop)] mopidy.audio.actor Flags: 2
okt 24 14:16:46 Desktop-Ubuntu mopidy[10440]: DEBUG    [MainThread] mopidy.audio.gst Got STATE_CHANGED bus message: old=GST_STATE_NULL new=GST_STATE_READY pending=GST_STATE_VOID_PENDING
okt 24 14:16:46 Desktop-Ubuntu mopidy[10440]: DEBUG    [Audio-2 (_actor_loop)] mopidy.audio.gst Changing state to GST_STATE_READY: result=GST_STATE_CHANGE_SUCCESS
okt 24 14:16:46 Desktop-Ubuntu mopidy[10440]: WARNING  [Core-7 (_actor_loop)] mopidy.core.tracklist Track is not playable: file:///home/gerard/Music/test.mp3
okt 24 14:16:46 Desktop-Ubuntu mopidy[10440]: DEBUG    [MainThread] mopidy.audio.gst Changing state to GST_STATE_NULL: result=GST_STATE_CHANGE_SUCCESS
okt 24 14:16:46 Desktop-Ubuntu mopidy[10440]: DEBUG    [MainThread] mopidy.audio.gst Got ERROR bus message: error=GLib.Error('Failed to connect: Connection refused', 'gst-resource-error-quark', 1) debug='../ext/pulse/pulsesink.c(615): gst_pulseringbuffer_open_device (): /GstBin:audio-sink/mopidy+audio+actor+_Outputs:mopidy+audio+actor+_outputs0/GstBin:bin0/GstPulseSink:pulsesink0'
okt 24 14:16:46 Desktop-Ubuntu mopidy[10440]: WARNING  [Audio-2 (_actor_loop)] mopidy.audio.actor Setting GStreamer state to GST_STATE_PLAYING failed
okt 24 14:16:46 Desktop-Ubuntu mopidy[10440]: DEBUG    [Audio-2 (_actor_loop)] mopidy.audio.gst Changing state to GST_STATE_PLAYING: result=GST_STATE_CHANGE_FAILURE
okt 24 14:16:46 Desktop-Ubuntu mopidy[10440]: ERROR    [MainThread] mopidy.audio.gst GStreamer error: Failed to connect: Connection refused
okt 24 14:16:46 Desktop-Ubuntu mopidy[10440]: DEBUG    [SoftwareMixer-1 (_actor_loop)] mopidy.listener Sending volume_changed to MixerListener: {'volume': 100}
okt 24 14:16:46 Desktop-Ubuntu mopidy[10440]: DEBUG    [SoftwareMixer-1 (_actor_loop)] mopidy.mixer Mixer event: volume_changed(volume=100)
okt 24 14:16:46 Desktop-Ubuntu mopidy[10440]: DEBUG    [Audio-2 (_actor_loop)] mopidy.audio.actor Flags: 2
okt 24 14:16:46 Desktop-Ubuntu mopidy[10440]: DEBUG    [MainThread] mopidy.audio.gst Got STATE_CHANGED bus message: old=GST_STATE_NULL new=GST_STATE_READY pending=GST_STATE_VOID_PENDING
okt 24 14:16:46 Desktop-Ubuntu mopidy[10440]: DEBUG    [Audio-2 (_actor_loop)] mopidy.audio.gst Changing state to GST_STATE_READY: result=GST_STATE_CHANGE_SUCCESS
okt 24 14:16:46 Desktop-Ubuntu mopidy[10440]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.playback.play","params":{"tlid":4},"jsonrpc":"2.0","id":28}'
okt 24 14:16:46 Desktop-Ubuntu mopidy[10440]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 27, "result": [{"__model__": "TlTrack", "tlid": 4, "track": {"__model__": "Track", "uri": "file:///home/gerard/Music/test.mp3", "name": "Symphony No. 40 in G Minor, K. 550 - I. Molto Allegro", "artists": [{"__model__": "Artist", "name": "Czech National Symphony Orchestra"}], "album": {"__model__": "Album", "name": "Musopen Kickstarter Project", "artists": [{"__model__": "Artist", "name": "Czech National Symphony Orchestra"}]}, "composers": [{"__model__": "Artist", "name": "Wolfgang Amadeus Mozart"}], "genre": "Classical", "length": 358848}}]}'
okt 24 14:16:46 Desktop-Ubuntu mopidy[10440]: DEBUG    [Core-7 (_actor_loop)] mopidy.listener Sending tracklist_changed to CoreListener: {}
okt 24 14:16:46 Desktop-Ubuntu mopidy[10440]: DEBUG    [Core-7 (_actor_loop)] mopidy.core.tracklist Triggering event: tracklist_changed()
okt 24 14:16:46 Desktop-Ubuntu mopidy[10440]: TRACE    [FileBackend-4 (_actor_loop)] mopidy.audio.scan element pipeline5: GstMessageAsyncDone, running-time=(guint64)18446744073709551615;
okt 24 14:16:46 Desktop-Ubuntu mopidy[10440]: TRACE    [FileBackend-4 (_actor_loop)] mopidy.audio.scan element fakesink4: GstMessageTag, taglist=(taglist)"taglist\,\ encoder\=\(string\)\"LAME\\\ 32bi...
okt 24 14:16:46 Desktop-Ubuntu mopidy[10440]: TRACE    [FileBackend-4 (_actor_loop)] mopidy.audio.scan element fakesink4: GstMessageTag, taglist=(taglist)"taglist\,\ encoder\=\(string\)\"LAME\\\ 32bi...
okt 24 14:16:46 Desktop-Ubuntu mopidy[10440]: TRACE    [FileBackend-4 (_actor_loop)] mopidy.audio.scan element mpegaudioparse4: GstMessageDurationChanged;
okt 24 14:16:46 Desktop-Ubuntu mopidy[10440]: TRACE    [FileBackend-4 (_actor_loop)] mopidy.audio.scan element decodebin5: have-audio;
okt 24 14:16:46 Desktop-Ubuntu mopidy[10440]: DEBUG    [FileBackend-4 (_actor_loop)] mopidy.file.library Looking up file URI: file:///home/gerard/Music/test.mp3
okt 24 14:16:46 Desktop-Ubuntu mopidy[10440]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.add","params":{"uris":["file:///home/gerard/Music/test.mp3"],"at_position":0},"jsonrpc":"2.0","id":27}'
okt 24 14:16:46 Desktop-Ubuntu mopidy[10440]: DEBUG    [HttpServer] mopidy_iris.core {'id': 166661380640573, 'jsonrpc': '2.0', 'method': 'broadcast', 'result': {'message': 'Broadcast to 1 connections'}, 'recipient': '978UEBF6UWYV'}
okt 24 14:16:46 Desktop-Ubuntu mopidy[10440]: DEBUG    [HttpServer] mopidy_iris.core {'method': 'notification', 'params': {'notification': {'content': '166656148284185 changed track'}}, 'connection_id': '978UEBF6UWYV'}
okt 24 14:16:46 Desktop-Ubuntu mopidy[10440]: DEBUG    [HttpServer] mopidy_iris.handlers Iris websocket message received: {"jsonrpc":"2.0","id":166661380640573,"method":"broadcast","params":{"method":"notification","params":{"notification":{"content":"166656148284185 changed track"}}}}
okt 24 14:16:46 Desktop-Ubuntu mopidy[10440]: DEBUG    [HttpServer] mopidy_iris.core {'id': 16666138063916, 'jsonrpc': '2.0', 'method': 'add_queue_metadata', 'result': {'message': 'Added queue metadata'}, 'recipient': '978UEBF6UWYV'}
okt 24 14:16:46 Desktop-Ubuntu mopidy[10440]: DEBUG    [HttpServer] mopidy_iris.core {'method': 'queue_metadata_changed', 'params': {'queue_metadata': {'tlid_2': {'tlid': 2, 'added_from': {'uri': 'iris:browse:file:///home/gerard/Music', 'name': 'Browse', 'type': 'browse'}, 'added_by': 166656148284185}, 'tlid_1': {'tlid': 1, 'added_from': {'uri': 'iris:browse:file:///home/gerard/Music', 'name': 'Browse', 'type': 'browse'}, 'added_by': 166656148284185}, 'tlid_3': {'tlid': 3, 'added_from': {'uri': 'iris:browse:file:///home/gerard/Music', 'name': 'Browse', 'type': 'browse'}, 'added_by': 166656148284185}}}}
okt 24 14:16:46 Desktop-Ubuntu mopidy[10440]: DEBUG    [HttpServer] mopidy_iris.handlers Iris websocket message received: {"jsonrpc":"2.0","id":16666138063916,"method":"add_queue_metadata","params":{"tlids":[3],"added_from":{"uri":"iris:browse:file:///home/gerard/Music","name":"Browse","type":"browse"},"added_by":166656148284185}}
okt 24 14:16:46 Desktop-Ubuntu mopidy[10440]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 26, "result": [{"__model__": "TlTrack", "tlid": 3, "track": {"__model__": "Track", "uri": "file:///home/gerard/Music/test.mp3", "name": "Symphony No. 40 in G Minor, K. 550 - I. Molto Allegro", "artists": [{"__model__": "Artist", "name": "Czech National Symphony Orchestra"}], "album": {"__model__": "Album", "name": "Musopen Kickstarter Project", "artists": [{"__model__": "Artist", "name": "Czech National Symphony Orchestra"}]}, "composers": [{"__model__": "Artist", "name": "Wolfgang Amadeus Mozart"}], "genre": "Classical", "length": 358848}}, {"__model__": "TlTrack", "tlid": 2, "track": {"__model__": "Track", "uri": "file:///home/gerard/Music/test.mp3", "name": "Symphony No. 40 in G Minor, K. 550 - I. Molto Allegro", "artists": [{"__model__": "Artist", "name": "Czech National Symphony Orchestra"}], "album": {"__model__": "Album", "name": "Musopen Kickstarter Project", "artists": [{"__model__": "Artist", "name": "Czech National Symphony Orchestra"}]}, "composers": [{"__model__": "Artist", "name": "Wolfgang Amadeus Mozart"}], "genre": "Classical", "length": 358848}}, {"__model__": "TlTrack", "tlid": 1, "track": {"__model__": "Track", "uri": "file:///home/gerard/Music/test.mp3", "name": "Symphony No. 40 in G Minor, K. 550 - I. Molto Allegro", "artists": [{"__model__": "Artist", "name": "Czech National Symphony Orchestra"}], "album": {"__model__": "Album", "name": "Musopen Kickstarter Project", "artists": [{"__model__": "Artist", "name": "Czech National Symphony Orchestra"}]}, "composers": [{"__model__": "Artist", "name": "Wolfgang Amadeus Mozart"}], "genre": "Classical", "length": 358848}}]}'
okt 24 14:16:46 Desktop-Ubuntu mopidy[10440]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_tl_tracks","params":{},"jsonrpc":"2.0","id":26}'
okt 24 14:16:46 Desktop-Ubuntu mopidy[10440]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 25, "result": null}'
okt 24 14:16:46 Desktop-Ubuntu mopidy[10440]: DEBUG    [Core-7 (_actor_loop)] mopidy.listener Sending volume_changed to CoreListener: {'volume': 100}
okt 24 14:16:46 Desktop-Ubuntu mopidy[10440]: DEBUG    [MainThread] mopidy.audio.gst Changing state to GST_STATE_NULL: result=GST_STATE_CHANGE_SUCCESS
okt 24 14:16:46 Desktop-Ubuntu mopidy[10440]: DEBUG    [Core-7 (_actor_loop)] mopidy.listener Sending volume_changed to CoreListener: {'volume': 100}
okt 24 14:16:46 Desktop-Ubuntu mopidy[10440]: DEBUG    [Core-7 (_actor_loop)] mopidy.listener Sending volume_changed to CoreListener: {'volume': 100}
okt 24 14:16:46 Desktop-Ubuntu mopidy[10440]: WARNING  [Core-7 (_actor_loop)] mopidy.core.tracklist Track is not playable: file:///home/gerard/Music/test.mp3
okt 24 14:16:46 Desktop-Ubuntu mopidy[10440]: DEBUG    [MainThread] mopidy.audio.gst Got ERROR bus message: error=GLib.Error('Failed to connect: Connection refused', 'gst-resource-error-quark', 1) debug='../ext/pulse/pulsesink.c(615): gst_pulseringbuffer_open_device (): /GstBin:audio-sink/mopidy+audio+actor+_Outputs:mopidy+audio+actor+_outputs0/GstBin:bin0/GstPulseSink:pulsesink0'
okt 24 14:16:46 Desktop-Ubuntu mopidy[10440]: WARNING  [Audio-2 (_actor_loop)] mopidy.audio.actor Setting GStreamer state to GST_STATE_PLAYING failed
okt 24 14:16:46 Desktop-Ubuntu mopidy[10440]: ERROR    [MainThread] mopidy.audio.gst GStreamer error: Failed to connect: Connection refused
okt 24 14:16:46 Desktop-Ubuntu mopidy[10440]: DEBUG    [Audio-2 (_actor_loop)] mopidy.audio.gst Changing state to GST_STATE_PLAYING: result=GST_STATE_CHANGE_FAILURE
okt 24 14:16:46 Desktop-Ubuntu mopidy[10440]: DEBUG    [SoftwareMixer-1 (_actor_loop)] mopidy.listener Sending volume_changed to MixerListener: {'volume': 100}
okt 24 14:16:46 Desktop-Ubuntu mopidy[10440]: DEBUG    [SoftwareMixer-1 (_actor_loop)] mopidy.mixer Mixer event: volume_changed(volume=100)
okt 24 14:16:46 Desktop-Ubuntu mopidy[10440]: DEBUG    [Audio-2 (_actor_loop)] mopidy.audio.actor Flags: 2
okt 24 14:16:46 Desktop-Ubuntu mopidy[10440]: DEBUG    [MainThread] mopidy.audio.gst Got STATE_CHANGED bus message: old=GST_STATE_NULL new=GST_STATE_READY pending=GST_STATE_VOID_PENDING
okt 24 14:16:46 Desktop-Ubuntu mopidy[10440]: DEBUG    [Audio-2 (_actor_loop)] mopidy.audio.gst Changing state to GST_STATE_READY: result=GST_STATE_CHANGE_SUCCESS
okt 24 14:16:46 Desktop-Ubuntu mopidy[10440]: WARNING  [Core-7 (_actor_loop)] mopidy.core.tracklist Track is not playable: file:///home/gerard/Music/test.mp3
okt 24 14:16:46 Desktop-Ubuntu mopidy[10440]: DEBUG    [MainThread] mopidy.audio.gst Changing state to GST_STATE_NULL: result=GST_STATE_CHANGE_SUCCESS
okt 24 14:16:46 Desktop-Ubuntu mopidy[10440]: WARNING  [Audio-2 (_actor_loop)] mopidy.audio.actor Setting GStreamer state to GST_STATE_PLAYING failed
okt 24 14:16:46 Desktop-Ubuntu mopidy[10440]: DEBUG    [Audio-2 (_actor_loop)] mopidy.audio.gst Changing state to GST_STATE_PLAYING: result=GST_STATE_CHANGE_FAILURE
okt 24 14:16:46 Desktop-Ubuntu mopidy[10440]: DEBUG    [MainThread] mopidy.audio.gst Got ERROR bus message: error=GLib.Error('Failed to connect: Connection refused', 'gst-resource-error-quark', 1) debug='../ext/pulse/pulsesink.c(615): gst_pulseringbuffer_open_device (): /GstBin:audio-sink/mopidy+audio+actor+_Outputs:mopidy+audio+actor+_outputs0/GstBin:bin0/GstPulseSink:pulsesink0'
okt 24 14:16:46 Desktop-Ubuntu mopidy[10440]: ERROR    [MainThread] mopidy.audio.gst GStreamer error: Failed to connect: Connection refused
okt 24 14:16:46 Desktop-Ubuntu mopidy[10440]: DEBUG    [SoftwareMixer-1 (_actor_loop)] mopidy.listener Sending volume_changed to MixerListener: {'volume': 100}
okt 24 14:16:46 Desktop-Ubuntu mopidy[10440]: DEBUG    [SoftwareMixer-1 (_actor_loop)] mopidy.mixer Mixer event: volume_changed(volume=100)
okt 24 14:16:46 Desktop-Ubuntu mopidy[10440]: DEBUG    [Audio-2 (_actor_loop)] mopidy.audio.actor Flags: 2
okt 24 14:16:46 Desktop-Ubuntu mopidy[10440]: DEBUG    [MainThread] mopidy.audio.gst Got STATE_CHANGED bus message: old=GST_STATE_NULL new=GST_STATE_READY pending=GST_STATE_VOID_PENDING
okt 24 14:16:46 Desktop-Ubuntu mopidy[10440]: DEBUG    [Audio-2 (_actor_loop)] mopidy.audio.gst Changing state to GST_STATE_READY: result=GST_STATE_CHANGE_SUCCESS
okt 24 14:16:46 Desktop-Ubuntu mopidy[10440]: WARNING  [Core-7 (_actor_loop)] mopidy.core.tracklist Track is not playable: file:///home/gerard/Music/test.mp3
okt 24 14:16:46 Desktop-Ubuntu mopidy[10440]: DEBUG    [MainThread] mopidy.audio.gst Changing state to GST_STATE_NULL: result=GST_STATE_CHANGE_SUCCESS
okt 24 14:16:46 Desktop-Ubuntu mopidy[10440]: WARNING  [Audio-2 (_actor_loop)] mopidy.audio.actor Setting GStreamer state to GST_STATE_PLAYING failed
okt 24 14:16:46 Desktop-Ubuntu mopidy[10440]: DEBUG    [Audio-2 (_actor_loop)] mopidy.audio.gst Changing state to GST_STATE_PLAYING: result=GST_STATE_CHANGE_FAILURE
okt 24 14:16:46 Desktop-Ubuntu mopidy[10440]: DEBUG    [MainThread] mopidy.audio.gst Got ERROR bus message: error=GLib.Error('Failed to connect: Connection refused', 'gst-resource-error-quark', 1) debug='../ext/pulse/pulsesink.c(615): gst_pulseringbuffer_open_device (): /GstBin:audio-sink/mopidy+audio+actor+_Outputs:mopidy+audio+actor+_outputs0/GstBin:bin0/GstPulseSink:pulsesink0'
okt 24 14:16:46 Desktop-Ubuntu mopidy[10440]: ERROR    [MainThread] mopidy.audio.gst GStreamer error: Failed to connect: Connection refused
okt 24 14:16:46 Desktop-Ubuntu mopidy[10440]: DEBUG    [SoftwareMixer-1 (_actor_loop)] mopidy.listener Sending volume_changed to MixerListener: {'volume': 100}
okt 24 14:16:46 Desktop-Ubuntu mopidy[10440]: DEBUG    [SoftwareMixer-1 (_actor_loop)] mopidy.mixer Mixer event: volume_changed(volume=100)
okt 24 14:16:46 Desktop-Ubuntu mopidy[10440]: DEBUG    [Audio-2 (_actor_loop)] mopidy.audio.actor Flags: 2
okt 24 14:16:46 Desktop-Ubuntu mopidy[10440]: DEBUG    [MainThread] mopidy.audio.gst Got STATE_CHANGED bus message: old=GST_STATE_NULL new=GST_STATE_READY pending=GST_STATE_VOID_PENDING
okt 24 14:16:46 Desktop-Ubuntu mopidy[10440]: DEBUG    [Audio-2 (_actor_loop)] mopidy.audio.gst Changing state to GST_STATE_READY: result=GST_STATE_CHANGE_SUCCESS
okt 24 14:16:46 Desktop-Ubuntu mopidy[10440]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.playback.play","params":{"tlid":3},"jsonrpc":"2.0","id":25}'
okt 24 14:16:46 Desktop-Ubuntu mopidy[10440]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 24, "result": [{"__model__": "TlTrack", "tlid": 3, "track": {"__model__": "Track", "uri": "file:///home/gerard/Music/test.mp3", "name": "Symphony No. 40 in G Minor, K. 550 - I. Molto Allegro", "artists": [{"__model__": "Artist", "name": "Czech National Symphony Orchestra"}], "album": {"__model__": "Album", "name": "Musopen Kickstarter Project", "artists": [{"__model__": "Artist", "name": "Czech National Symphony Orchestra"}]}, "composers": [{"__model__": "Artist", "name": "Wolfgang Amadeus Mozart"}], "genre": "Classical", "length": 358848}}]}'
okt 24 14:16:46 Desktop-Ubuntu mopidy[10440]: DEBUG    [Core-7 (_actor_loop)] mopidy.listener Sending tracklist_changed to CoreListener: {}
okt 24 14:16:46 Desktop-Ubuntu mopidy[10440]: DEBUG    [Core-7 (_actor_loop)] mopidy.core.tracklist Triggering event: tracklist_changed()
okt 24 14:16:46 Desktop-Ubuntu mopidy[10440]: TRACE    [FileBackend-4 (_actor_loop)] mopidy.audio.scan element pipeline4: GstMessageAsyncDone, running-time=(guint64)18446744073709551615;
okt 24 14:16:46 Desktop-Ubuntu mopidy[10440]: TRACE    [FileBackend-4 (_actor_loop)] mopidy.audio.scan element fakesink3: GstMessageTag, taglist=(taglist)"taglist\,\ encoder\=\(string\)\"LAME\\\ 32bi...
okt 24 14:16:46 Desktop-Ubuntu mopidy[10440]: TRACE    [FileBackend-4 (_actor_loop)] mopidy.audio.scan element fakesink3: GstMessageTag, taglist=(taglist)"taglist\,\ encoder\=\(string\)\"LAME\\\ 32bi...
okt 24 14:16:46 Desktop-Ubuntu mopidy[10440]: TRACE    [FileBackend-4 (_actor_loop)] mopidy.audio.scan element mpegaudioparse3: GstMessageDurationChanged;
okt 24 14:16:46 Desktop-Ubuntu mopidy[10440]: TRACE    [FileBackend-4 (_actor_loop)] mopidy.audio.scan element decodebin4: have-audio;
okt 24 14:16:46 Desktop-Ubuntu mopidy[10440]: DEBUG    [FileBackend-4 (_actor_loop)] mopidy.file.library Looking up file URI: file:///home/gerard/Music/test.mp3
okt 24 14:16:46 Desktop-Ubuntu mopidy[10440]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.add","params":{"uris":["file:///home/gerard/Music/test.mp3"],"at_position":0},"jsonrpc":"2.0","id":24}'
okt 24 14:16:43 Desktop-Ubuntu mopidy[10440]: DEBUG    [HttpServer] mopidy_iris.core {'id': 166661380376219, 'jsonrpc': '2.0', 'method': 'broadcast', 'result': {'message': 'Broadcast to 1 connections'}, 'recipient': '978UEBF6UWYV'}
okt 24 14:16:43 Desktop-Ubuntu mopidy[10440]: DEBUG    [HttpServer] mopidy_iris.core {'method': 'notification', 'params': {'notification': {'content': '166656148284185 started playback', 'icon': False}}, 'connection_id': '978UEBF6UWYV'}
okt 24 14:16:43 Desktop-Ubuntu mopidy[10440]: DEBUG    [HttpServer] mopidy_iris.handlers Iris websocket message received: {"jsonrpc":"2.0","id":166661380376219,"method":"broadcast","params":{"method":"notification","params":{"notification":{"content":"166656148284185 started playback","icon":false}}}}
okt 24 14:16:43 Desktop-Ubuntu mopidy[10440]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 23, "result": null}'
okt 24 14:16:43 Desktop-Ubuntu mopidy[10440]: DEBUG    [Core-7 (_actor_loop)] mopidy.listener Sending volume_changed to CoreListener: {'volume': 100}
okt 24 14:16:43 Desktop-Ubuntu mopidy[10440]: WARNING  [Core-7 (_actor_loop)] mopidy.core.tracklist Track is not playable: file:///home/gerard/Music/test.mp3
okt 24 14:16:43 Desktop-Ubuntu mopidy[10440]: DEBUG    [MainThread] mopidy.audio.gst Changing state to GST_STATE_NULL: result=GST_STATE_CHANGE_SUCCESS
okt 24 14:16:43 Desktop-Ubuntu mopidy[10440]: DEBUG    [MainThread] mopidy.audio.gst Got ERROR bus message: error=GLib.Error('Failed to connect: Connection refused', 'gst-resource-error-quark', 1) debug='../ext/pulse/pulsesink.c(615): gst_pulseringbuffer_open_device (): /GstBin:audio-sink/mopidy+audio+actor+_Outputs:mopidy+audio+actor+_outputs0/GstBin:bin0/GstPulseSink:pulsesink0'
okt 24 14:16:43 Desktop-Ubuntu mopidy[10440]: WARNING  [Audio-2 (_actor_loop)] mopidy.audio.actor Setting GStreamer state to GST_STATE_PLAYING failed
okt 24 14:16:43 Desktop-Ubuntu mopidy[10440]: DEBUG    [Audio-2 (_actor_loop)] mopidy.audio.gst Changing state to GST_STATE_PLAYING: result=GST_STATE_CHANGE_FAILURE
okt 24 14:16:43 Desktop-Ubuntu mopidy[10440]: ERROR    [MainThread] mopidy.audio.gst GStreamer error: Failed to connect: Connection refused
okt 24 14:16:43 Desktop-Ubuntu mopidy[10440]: DEBUG    [SoftwareMixer-1 (_actor_loop)] mopidy.listener Sending volume_changed to MixerListener: {'volume': 100}
okt 24 14:16:43 Desktop-Ubuntu mopidy[10440]: DEBUG    [SoftwareMixer-1 (_actor_loop)] mopidy.mixer Mixer event: volume_changed(volume=100)
okt 24 14:16:43 Desktop-Ubuntu mopidy[10440]: DEBUG    [Audio-2 (_actor_loop)] mopidy.audio.actor Flags: 2
okt 24 14:16:43 Desktop-Ubuntu mopidy[10440]: DEBUG    [MainThread] mopidy.audio.gst Got STATE_CHANGED bus message: old=GST_STATE_NULL new=GST_STATE_READY pending=GST_STATE_VOID_PENDING
okt 24 14:16:43 Desktop-Ubuntu mopidy[10440]: DEBUG    [Audio-2 (_actor_loop)] mopidy.audio.gst Changing state to GST_STATE_READY: result=GST_STATE_CHANGE_SUCCESS
okt 24 14:16:43 Desktop-Ubuntu mopidy[10440]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.playback.play","params":{},"jsonrpc":"2.0","id":23}'
okt 24 14:16:43 Desktop-Ubuntu mopidy[10440]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 22, "result": 2}'
okt 24 14:16:43 Desktop-Ubuntu mopidy[10440]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_next_tlid","params":{},"jsonrpc":"2.0","id":22}'
okt 24 14:16:42 Desktop-Ubuntu mopidy[10440]: DEBUG    [HttpServer] mopidy_iris.core {'id': 166661380221259, 'jsonrpc': '2.0', 'method': 'broadcast', 'result': {'message': 'Broadcast to 1 connections'}, 'recipient': '978UEBF6UWYV'}
okt 24 14:16:42 Desktop-Ubuntu mopidy[10440]: DEBUG    [HttpServer] mopidy_iris.core {'method': 'notification', 'params': {'notification': {'content': '166656148284185 changed track'}}, 'connection_id': '978UEBF6UWYV'}
okt 24 14:16:42 Desktop-Ubuntu mopidy[10440]: DEBUG    [HttpServer] mopidy_iris.handlers Iris websocket message received: {"jsonrpc":"2.0","id":166661380221259,"method":"broadcast","params":{"method":"notification","params":{"notification":{"content":"166656148284185 changed track"}}}}
okt 24 14:16:42 Desktop-Ubuntu mopidy[10440]: DEBUG    [HttpServer] mopidy_iris.core {'id': 166661380220476, 'jsonrpc': '2.0', 'method': 'add_queue_metadata', 'result': {'message': 'Added queue metadata'}, 'recipient': '978UEBF6UWYV'}
okt 24 14:16:42 Desktop-Ubuntu mopidy[10440]: DEBUG    [HttpServer] mopidy_iris.core {'method': 'queue_metadata_changed', 'params': {'queue_metadata': {'tlid_1': {'tlid': 1, 'added_from': {'uri': 'iris:browse:file:///home/gerard/Music', 'name': 'Browse', 'type': 'browse'}, 'added_by': 166656148284185}, 'tlid_2': {'tlid': 2, 'added_from': {'uri': 'iris:browse:file:///home/gerard/Music', 'name': 'Browse', 'type': 'browse'}, 'added_by': 166656148284185}}}}
okt 24 14:16:42 Desktop-Ubuntu mopidy[10440]: DEBUG    [HttpServer] mopidy_iris.handlers Iris websocket message received: {"jsonrpc":"2.0","id":166661380220476,"method":"add_queue_metadata","params":{"tlids":[2],"added_from":{"uri":"iris:browse:file:///home/gerard/Music","name":"Browse","type":"browse"},"added_by":166656148284185}}
okt 24 14:16:42 Desktop-Ubuntu mopidy[10440]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 21, "result": [{"__model__": "TlTrack", "tlid": 2, "track": {"__model__": "Track", "uri": "file:///home/gerard/Music/test.mp3", "name": "Symphony No. 40 in G Minor, K. 550 - I. Molto Allegro", "artists": [{"__model__": "Artist", "name": "Czech National Symphony Orchestra"}], "album": {"__model__": "Album", "name": "Musopen Kickstarter Project", "artists": [{"__model__": "Artist", "name": "Czech National Symphony Orchestra"}]}, "composers": [{"__model__": "Artist", "name": "Wolfgang Amadeus Mozart"}], "genre": "Classical", "length": 358848}}, {"__model__": "TlTrack", "tlid": 1, "track": {"__model__": "Track", "uri": "file:///home/gerard/Music/test.mp3", "name": "Symphony No. 40 in G Minor, K. 550 - I. Molto Allegro", "artists": [{"__model__": "Artist", "name": "Czech National Symphony Orchestra"}], "album": {"__model__": "Album", "name": "Musopen Kickstarter Project", "artists": [{"__model__": "Artist", "name": "Czech National Symphony Orchestra"}]}, "composers": [{"__model__": "Artist", "name": "Wolfgang Amadeus Mozart"}], "genre": "Classical", "length": 358848}}]}'
okt 24 14:16:42 Desktop-Ubuntu mopidy[10440]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_tl_tracks","params":{},"jsonrpc":"2.0","id":21}'
okt 24 14:16:42 Desktop-Ubuntu mopidy[10440]: DEBUG    [Core-7 (_actor_loop)] mopidy.listener Sending volume_changed to CoreListener: {'volume': 100}
okt 24 14:16:42 Desktop-Ubuntu mopidy[10440]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 20, "result": null}'
okt 24 14:16:42 Desktop-Ubuntu mopidy[10440]: DEBUG    [Core-7 (_actor_loop)] mopidy.listener Sending volume_changed to CoreListener: {'volume': 100}
okt 24 14:16:42 Desktop-Ubuntu mopidy[10440]: WARNING  [Core-7 (_actor_loop)] mopidy.core.tracklist Track is not playable: file:///home/gerard/Music/test.mp3
okt 24 14:16:42 Desktop-Ubuntu mopidy[10440]: DEBUG    [MainThread] mopidy.audio.gst Changing state to GST_STATE_NULL: result=GST_STATE_CHANGE_SUCCESS
okt 24 14:16:42 Desktop-Ubuntu mopidy[10440]: WARNING  [Audio-2 (_actor_loop)] mopidy.audio.actor Setting GStreamer state to GST_STATE_PLAYING failed
okt 24 14:16:42 Desktop-Ubuntu mopidy[10440]: DEBUG    [MainThread] mopidy.audio.gst Got ERROR bus message: error=GLib.Error('Failed to connect: Connection refused', 'gst-resource-error-quark', 1) debug='../ext/pulse/pulsesink.c(615): gst_pulseringbuffer_open_device (): /GstBin:audio-sink/mopidy+audio+actor+_Outputs:mopidy+audio+actor+_outputs0/GstBin:bin0/GstPulseSink:pulsesink0'
okt 24 14:16:42 Desktop-Ubuntu mopidy[10440]: DEBUG    [Audio-2 (_actor_loop)] mopidy.audio.gst Changing state to GST_STATE_PLAYING: result=GST_STATE_CHANGE_FAILURE
okt 24 14:16:42 Desktop-Ubuntu mopidy[10440]: ERROR    [MainThread] mopidy.audio.gst GStreamer error: Failed to connect: Connection refused
okt 24 14:16:42 Desktop-Ubuntu mopidy[10440]: DEBUG    [SoftwareMixer-1 (_actor_loop)] mopidy.listener Sending volume_changed to MixerListener: {'volume': 100}
okt 24 14:16:42 Desktop-Ubuntu mopidy[10440]: DEBUG    [SoftwareMixer-1 (_actor_loop)] mopidy.mixer Mixer event: volume_changed(volume=100)
okt 24 14:16:42 Desktop-Ubuntu mopidy[10440]: DEBUG    [Audio-2 (_actor_loop)] mopidy.audio.actor Flags: 2
okt 24 14:16:42 Desktop-Ubuntu mopidy[10440]: DEBUG    [MainThread] mopidy.audio.gst Got STATE_CHANGED bus message: old=GST_STATE_NULL new=GST_STATE_READY pending=GST_STATE_VOID_PENDING
okt 24 14:16:42 Desktop-Ubuntu mopidy[10440]: DEBUG    [Audio-2 (_actor_loop)] mopidy.audio.gst Changing state to GST_STATE_READY: result=GST_STATE_CHANGE_SUCCESS
okt 24 14:16:42 Desktop-Ubuntu mopidy[10440]: WARNING  [Core-7 (_actor_loop)] mopidy.core.tracklist Track is not playable: file:///home/gerard/Music/test.mp3
okt 24 14:16:42 Desktop-Ubuntu mopidy[10440]: WARNING  [Audio-2 (_actor_loop)] mopidy.audio.actor Setting GStreamer state to GST_STATE_PLAYING failed
okt 24 14:16:42 Desktop-Ubuntu mopidy[10440]: DEBUG    [Audio-2 (_actor_loop)] mopidy.audio.gst Changing state to GST_STATE_PLAYING: result=GST_STATE_CHANGE_FAILURE
okt 24 14:16:42 Desktop-Ubuntu mopidy[10440]: DEBUG    [MainThread] mopidy.audio.gst Changing state to GST_STATE_NULL: result=GST_STATE_CHANGE_SUCCESS
okt 24 14:16:42 Desktop-Ubuntu mopidy[10440]: DEBUG    [MainThread] mopidy.audio.gst Got ERROR bus message: error=GLib.Error('Failed to connect: Connection refused', 'gst-resource-error-quark', 1) debug='../ext/pulse/pulsesink.c(615): gst_pulseringbuffer_open_device (): /GstBin:audio-sink/mopidy+audio+actor+_Outputs:mopidy+audio+actor+_outputs0/GstBin:bin0/GstPulseSink:pulsesink0'
okt 24 14:16:42 Desktop-Ubuntu mopidy[10440]: ERROR    [MainThread] mopidy.audio.gst GStreamer error: Failed to connect: Connection refused
okt 24 14:16:42 Desktop-Ubuntu mopidy[10440]: DEBUG    [SoftwareMixer-1 (_actor_loop)] mopidy.listener Sending volume_changed to MixerListener: {'volume': 100}
okt 24 14:16:42 Desktop-Ubuntu mopidy[10440]: DEBUG    [SoftwareMixer-1 (_actor_loop)] mopidy.mixer Mixer event: volume_changed(volume=100)
okt 24 14:16:42 Desktop-Ubuntu mopidy[10440]: DEBUG    [Audio-2 (_actor_loop)] mopidy.audio.actor Flags: 2
okt 24 14:16:42 Desktop-Ubuntu mopidy[10440]: DEBUG    [MainThread] mopidy.audio.gst Got STATE_CHANGED bus message: old=GST_STATE_NULL new=GST_STATE_READY pending=GST_STATE_VOID_PENDING
okt 24 14:16:42 Desktop-Ubuntu mopidy[10440]: DEBUG    [Audio-2 (_actor_loop)] mopidy.audio.gst Changing state to GST_STATE_READY: result=GST_STATE_CHANGE_SUCCESS
okt 24 14:16:42 Desktop-Ubuntu mopidy[10440]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.playback.play","params":{"tlid":2},"jsonrpc":"2.0","id":20}'
okt 24 14:16:42 Desktop-Ubuntu mopidy[10440]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 19, "result": [{"__model__": "TlTrack", "tlid": 2, "track": {"__model__": "Track", "uri": "file:///home/gerard/Music/test.mp3", "name": "Symphony No. 40 in G Minor, K. 550 - I. Molto Allegro", "artists": [{"__model__": "Artist", "name": "Czech National Symphony Orchestra"}], "album": {"__model__": "Album", "name": "Musopen Kickstarter Project", "artists": [{"__model__": "Artist", "name": "Czech National Symphony Orchestra"}]}, "composers": [{"__model__": "Artist", "name": "Wolfgang Amadeus Mozart"}], "genre": "Classical", "length": 358848}}]}'
okt 24 14:16:42 Desktop-Ubuntu mopidy[10440]: DEBUG    [Core-7 (_actor_loop)] mopidy.listener Sending tracklist_changed to CoreListener: {}
okt 24 14:16:42 Desktop-Ubuntu mopidy[10440]: DEBUG    [Core-7 (_actor_loop)] mopidy.core.tracklist Triggering event: tracklist_changed()
okt 24 14:16:42 Desktop-Ubuntu mopidy[10440]: TRACE    [FileBackend-4 (_actor_loop)] mopidy.audio.scan element pipeline3: GstMessageAsyncDone, running-time=(guint64)18446744073709551615;
okt 24 14:16:42 Desktop-Ubuntu mopidy[10440]: TRACE    [FileBackend-4 (_actor_loop)] mopidy.audio.scan element fakesink2: GstMessageTag, taglist=(taglist)"taglist\,\ encoder\=\(string\)\"LAME\\\ 32bi...
okt 24 14:16:42 Desktop-Ubuntu mopidy[10440]: TRACE    [FileBackend-4 (_actor_loop)] mopidy.audio.scan element fakesink2: GstMessageTag, taglist=(taglist)"taglist\,\ encoder\=\(string\)\"LAME\\\ 32bi...
okt 24 14:16:42 Desktop-Ubuntu mopidy[10440]: TRACE    [FileBackend-4 (_actor_loop)] mopidy.audio.scan element mpegaudioparse2: GstMessageDurationChanged;
okt 24 14:16:42 Desktop-Ubuntu mopidy[10440]: TRACE    [FileBackend-4 (_actor_loop)] mopidy.audio.scan element decodebin3: have-audio;
okt 24 14:16:42 Desktop-Ubuntu mopidy[10440]: DEBUG    [FileBackend-4 (_actor_loop)] mopidy.file.library Looking up file URI: file:///home/gerard/Music/test.mp3
okt 24 14:16:42 Desktop-Ubuntu mopidy[10440]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.add","params":{"uris":["file:///home/gerard/Music/test.mp3"],"at_position":0},"jsonrpc":"2.0","id":19}'
okt 24 14:16:41 Desktop-Ubuntu mopidy[10440]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 18, "result": 1}'
okt 24 14:16:41 Desktop-Ubuntu mopidy[10440]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_next_tlid","params":{},"jsonrpc":"2.0","id":18}'
okt 24 14:16:40 Desktop-Ubuntu mopidy[10440]: DEBUG    [HttpServer] mopidy_iris.core {'id': 166661380083117, 'jsonrpc': '2.0', 'method': 'broadcast', 'result': {'message': 'Broadcast to 1 connections'}, 'recipient': '978UEBF6UWYV'}
okt 24 14:16:40 Desktop-Ubuntu mopidy[10440]: DEBUG    [HttpServer] mopidy_iris.core {'method': 'notification', 'params': {'notification': {'content': '166656148284185 changed track'}}, 'connection_id': '978UEBF6UWYV'}
okt 24 14:16:40 Desktop-Ubuntu mopidy[10440]: DEBUG    [HttpServer] mopidy_iris.handlers Iris websocket message received: {"jsonrpc":"2.0","id":166661380083117,"method":"broadcast","params":{"method":"notification","params":{"notification":{"content":"166656148284185 changed track"}}}}
okt 24 14:16:40 Desktop-Ubuntu mopidy[10440]: DEBUG    [HttpServer] mopidy_iris.core {'id': 166661380082299, 'jsonrpc': '2.0', 'method': 'add_queue_metadata', 'result': {'message': 'Added queue metadata'}, 'recipient': '978UEBF6UWYV'}
okt 24 14:16:40 Desktop-Ubuntu mopidy[10440]: DEBUG    [HttpServer] mopidy_iris.core {'method': 'queue_metadata_changed', 'params': {'queue_metadata': {'tlid_1': {'tlid': 1, 'added_from': {'uri': 'iris:browse:file:///home/gerard/Music', 'name': 'Browse', 'type': 'browse'}, 'added_by': 166656148284185}}}}
okt 24 14:16:40 Desktop-Ubuntu mopidy[10440]: DEBUG    [HttpServer] mopidy_iris.handlers Iris websocket message received: {"jsonrpc":"2.0","id":166661380082299,"method":"add_queue_metadata","params":{"tlids":[1],"added_from":{"uri":"iris:browse:file:///home/gerard/Music","name":"Browse","type":"browse"},"added_by":166656148284185}}
okt 24 14:16:40 Desktop-Ubuntu mopidy[10440]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 17, "result": [{"__model__": "TlTrack", "tlid": 1, "track": {"__model__": "Track", "uri": "file:///home/gerard/Music/test.mp3", "name": "Symphony No. 40 in G Minor, K. 550 - I. Molto Allegro", "artists": [{"__model__": "Artist", "name": "Czech National Symphony Orchestra"}], "album": {"__model__": "Album", "name": "Musopen Kickstarter Project", "artists": [{"__model__": "Artist", "name": "Czech National Symphony Orchestra"}]}, "composers": [{"__model__": "Artist", "name": "Wolfgang Amadeus Mozart"}], "genre": "Classical", "length": 358848}}]}'
okt 24 14:16:40 Desktop-Ubuntu mopidy[10440]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_tl_tracks","params":{},"jsonrpc":"2.0","id":17}'
okt 24 14:16:40 Desktop-Ubuntu mopidy[10440]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 16, "result": null}'
okt 24 14:16:40 Desktop-Ubuntu mopidy[10440]: DEBUG    [Core-7 (_actor_loop)] mopidy.listener Sending volume_changed to CoreListener: {'volume': 100}
okt 24 14:16:40 Desktop-Ubuntu mopidy[10440]: WARNING  [Core-7 (_actor_loop)] mopidy.core.tracklist Track is not playable: file:///home/gerard/Music/test.mp3
okt 24 14:16:40 Desktop-Ubuntu mopidy[10440]: DEBUG    [MainThread] mopidy.audio.gst Changing state to GST_STATE_NULL: result=GST_STATE_CHANGE_SUCCESS
okt 24 14:16:40 Desktop-Ubuntu mopidy[10440]: DEBUG    [MainThread] mopidy.audio.gst Got ERROR bus message: error=GLib.Error('Failed to connect: Connection refused', 'gst-resource-error-quark', 1) debug='../ext/pulse/pulsesink.c(615): gst_pulseringbuffer_open_device (): /GstBin:audio-sink/mopidy+audio+actor+_Outputs:mopidy+audio+actor+_outputs0/GstBin:bin0/GstPulseSink:pulsesink0'
okt 24 14:16:40 Desktop-Ubuntu mopidy[10440]: WARNING  [Audio-2 (_actor_loop)] mopidy.audio.actor Setting GStreamer state to GST_STATE_PLAYING failed
okt 24 14:16:40 Desktop-Ubuntu mopidy[10440]: DEBUG    [Audio-2 (_actor_loop)] mopidy.audio.gst Changing state to GST_STATE_PLAYING: result=GST_STATE_CHANGE_FAILURE
okt 24 14:16:40 Desktop-Ubuntu mopidy[10440]: ERROR    [MainThread] mopidy.audio.gst GStreamer error: Failed to connect: Connection refused
okt 24 14:16:40 Desktop-Ubuntu mopidy[10440]: DEBUG    [SoftwareMixer-1 (_actor_loop)] mopidy.listener Sending volume_changed to MixerListener: {'volume': 100}
okt 24 14:16:40 Desktop-Ubuntu mopidy[10440]: DEBUG    [SoftwareMixer-1 (_actor_loop)] mopidy.mixer Mixer event: volume_changed(volume=100)
okt 24 14:16:40 Desktop-Ubuntu mopidy[10440]: DEBUG    [Audio-2 (_actor_loop)] mopidy.audio.actor Flags: 2
okt 24 14:16:40 Desktop-Ubuntu mopidy[10440]: DEBUG    [MainThread] mopidy.audio.gst Got STATE_CHANGED bus message: old=GST_STATE_NULL new=GST_STATE_READY pending=GST_STATE_VOID_PENDING
okt 24 14:16:40 Desktop-Ubuntu mopidy[10440]: DEBUG    [Audio-2 (_actor_loop)] mopidy.audio.gst Changing state to GST_STATE_READY: result=GST_STATE_CHANGE_SUCCESS
okt 24 14:16:40 Desktop-Ubuntu mopidy[10440]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.playback.play","params":{"tlid":1},"jsonrpc":"2.0","id":16}'
okt 24 14:16:40 Desktop-Ubuntu mopidy[10440]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 15, "result": [{"__model__": "TlTrack", "tlid": 1, "track": {"__model__": "Track", "uri": "file:///home/gerard/Music/test.mp3", "name": "Symphony No. 40 in G Minor, K. 550 - I. Molto Allegro", "artists": [{"__model__": "Artist", "name": "Czech National Symphony Orchestra"}], "album": {"__model__": "Album", "name": "Musopen Kickstarter Project", "artists": [{"__model__": "Artist", "name": "Czech National Symphony Orchestra"}]}, "composers": [{"__model__": "Artist", "name": "Wolfgang Amadeus Mozart"}], "genre": "Classical", "length": 358848}}]}'
okt 24 14:16:40 Desktop-Ubuntu mopidy[10440]: DEBUG    [Core-7 (_actor_loop)] mopidy.listener Sending tracklist_changed to CoreListener: {}
okt 24 14:16:40 Desktop-Ubuntu mopidy[10440]: DEBUG    [Core-7 (_actor_loop)] mopidy.core.tracklist Triggering event: tracklist_changed()
okt 24 14:16:40 Desktop-Ubuntu mopidy[10440]: TRACE    [FileBackend-4 (_actor_loop)] mopidy.audio.scan element pipeline2: GstMessageAsyncDone, running-time=(guint64)18446744073709551615;
okt 24 14:16:40 Desktop-Ubuntu mopidy[10440]: TRACE    [FileBackend-4 (_actor_loop)] mopidy.audio.scan element fakesink1: GstMessageTag, taglist=(taglist)"taglist\,\ encoder\=\(string\)\"LAME\\\ 32bi...
okt 24 14:16:40 Desktop-Ubuntu mopidy[10440]: TRACE    [FileBackend-4 (_actor_loop)] mopidy.audio.scan element fakesink1: GstMessageTag, taglist=(taglist)"taglist\,\ encoder\=\(string\)\"LAME\\\ 32bi...
okt 24 14:16:40 Desktop-Ubuntu mopidy[10440]: TRACE    [FileBackend-4 (_actor_loop)] mopidy.audio.scan element mpegaudioparse1: GstMessageDurationChanged;
okt 24 14:16:40 Desktop-Ubuntu mopidy[10440]: TRACE    [FileBackend-4 (_actor_loop)] mopidy.audio.scan element decodebin2: have-audio;
okt 24 14:16:40 Desktop-Ubuntu mopidy[10440]: DEBUG    [FileBackend-4 (_actor_loop)] mopidy.file.library Looking up file URI: file:///home/gerard/Music/test.mp3
okt 24 14:16:40 Desktop-Ubuntu mopidy[10440]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.add","params":{"uris":["file:///home/gerard/Music/test.mp3"],"at_position":0},"jsonrpc":"2.0","id":15}'
okt 24 14:16:39 Desktop-Ubuntu mopidy[10440]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 14, "result": {"file:///home/gerard/Music/test.mp3": [{"__model__": "Track", "uri": "file:///home/gerard/Music/test.mp3", "name": "Symphony No. 40 in G Minor, K. 550 - I. Molto Allegro", "artists": [{"__model__": "Artist", "name": "Czech National Symphony Orchestra"}], "album": {"__model__": "Album", "name": "Musopen Kickstarter Project", "artists": [{"__model__": "Artist", "name": "Czech National Symphony Orchestra"}]}, "composers": [{"__model__": "Artist", "name": "Wolfgang Amadeus Mozart"}], "genre": "Classical", "length": 358848}]}}'
okt 24 14:16:39 Desktop-Ubuntu mopidy[10440]: TRACE    [FileBackend-4 (_actor_loop)] mopidy.audio.scan element pipeline1: GstMessageAsyncDone, running-time=(guint64)18446744073709551615;
okt 24 14:16:39 Desktop-Ubuntu mopidy[10440]: TRACE    [FileBackend-4 (_actor_loop)] mopidy.audio.scan element fakesink0: GstMessageTag, taglist=(taglist)"taglist\,\ encoder\=\(string\)\"LAME\\\ 32bi...
okt 24 14:16:39 Desktop-Ubuntu mopidy[10440]: TRACE    [FileBackend-4 (_actor_loop)] mopidy.audio.scan element fakesink0: GstMessageTag, taglist=(taglist)"taglist\,\ encoder\=\(string\)\"LAME\\\ 32bi...
okt 24 14:16:39 Desktop-Ubuntu mopidy[10440]: TRACE    [FileBackend-4 (_actor_loop)] mopidy.audio.scan element mpegaudioparse0: GstMessageDurationChanged;
okt 24 14:16:39 Desktop-Ubuntu mopidy[10440]: TRACE    [FileBackend-4 (_actor_loop)] mopidy.audio.scan element decodebin1: have-audio;
okt 24 14:16:39 Desktop-Ubuntu mopidy[10440]: DEBUG    [FileBackend-4 (_actor_loop)] mopidy.file.library Looking up file URI: file:///home/gerard/Music/test.mp3
okt 24 14:16:39 Desktop-Ubuntu mopidy[10440]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.library.lookup","params":{"uris":["file:///home/gerard/Music/test.mp3"]},"jsonrpc":"2.0","id":14}'
okt 24 14:16:39 Desktop-Ubuntu mopidy[10440]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 13, "result": [{"__model__": "Ref", "uri": "file:///home/gerard/Music/test.mp3", "name": "test.mp3", "type": "track"}]}'
okt 24 14:16:39 Desktop-Ubuntu mopidy[10440]: DEBUG    [FileBackend-4 (_actor_loop)] mopidy.file.library Browsing files at: file:///home/gerard/Music
okt 24 14:16:39 Desktop-Ubuntu mopidy[10440]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.library.browse","params":{"uri":"file:///home/gerard/Music"},"jsonrpc":"2.0","id":13}'
okt 24 14:16:39 Desktop-Ubuntu mopidy[10440]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 12, "result": {"file:///home/gerard/Music": [{"__model__": "Track", "uri": "file:///home/gerard/Music", "name": "Music"}]}}'
okt 24 14:16:39 Desktop-Ubuntu mopidy[10440]: WARNING  [FileBackend-4 (_actor_loop)] mopidy.file.library Failed looking up file:///home/gerard/Music: gst-resource-error-quark: "/home/gerard/Music" is a directory. (5)
okt 24 14:16:39 Desktop-Ubuntu mopidy[10440]: TRACE    [FileBackend-4 (_actor_loop)] mopidy.audio.scan element filesrc0: GstMessageError, gerror=(GError)NULL, debug=(string)"../plugins/elements/gstf...
okt 24 14:16:39 Desktop-Ubuntu mopidy[10440]: DEBUG    [FileBackend-4 (_actor_loop)] mopidy.file.library Looking up file URI: file:///home/gerard/Music
okt 24 14:16:39 Desktop-Ubuntu mopidy[10440]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.library.lookup","params":{"uris":["file:///home/gerard/Music"]},"jsonrpc":"2.0","id":12}'
okt 24 14:16:38 Desktop-Ubuntu mopidy[10440]: DEBUG    [HttpServer] mopidy_iris.core {'id': 166661379842881, 'jsonrpc': '2.0', 'method': 'get_version', 'result': {'version': {'current': '3.64.1', 'latest': '3.64.1', 'is_root': False, 'upgrade_available': False}}, 'recipient': '978UEBF6UWYV'}
okt 24 14:16:38 Desktop-Ubuntu mopidy[10440]: DEBUG    [HttpServer] mopidy_iris.handlers Iris websocket message received: {"jsonrpc":"2.0","id":166661379842881,"method":"get_version"}
okt 24 14:16:38 Desktop-Ubuntu mopidy[10440]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 11, "result": null}'
okt 24 14:16:38 Desktop-Ubuntu mopidy[10440]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.playback.get_stream_title","params":{},"jsonrpc":"2.0","id":11}'
okt 24 14:16:38 Desktop-Ubuntu mopidy[10440]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 10, "result": ["file", "http", "https", "local", "m3u", "rtsp"]}'
okt 24 14:16:38 Desktop-Ubuntu mopidy[10440]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.get_uri_schemes","params":{},"jsonrpc":"2.0","id":10}'
okt 24 14:16:38 Desktop-Ubuntu mopidy[10440]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 9, "result": 0}'
okt 24 14:16:38 Desktop-Ubuntu mopidy[10440]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.playback.get_time_position","params":{},"jsonrpc":"2.0","id":9}'
okt 24 14:16:38 Desktop-Ubuntu mopidy[10440]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 8, "result": []}'
okt 24 14:16:38 Desktop-Ubuntu mopidy[10440]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_tl_tracks","params":{},"jsonrpc":"2.0","id":8}'
okt 24 14:16:38 Desktop-Ubuntu mopidy[10440]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 7, "result": false}'
okt 24 14:16:38 Desktop-Ubuntu mopidy[10440]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_repeat","params":{},"jsonrpc":"2.0","id":7}'
okt 24 14:16:38 Desktop-Ubuntu mopidy[10440]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 6, "result": false}'
okt 24 14:16:38 Desktop-Ubuntu mopidy[10440]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_random","params":{},"jsonrpc":"2.0","id":6}'
okt 24 14:16:38 Desktop-Ubuntu mopidy[10440]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 5, "result": false}'
okt 24 14:16:38 Desktop-Ubuntu mopidy[10440]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_consume","params":{},"jsonrpc":"2.0","id":5}'
okt 24 14:16:38 Desktop-Ubuntu mopidy[10440]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 4, "result": false}'
okt 24 14:16:38 Desktop-Ubuntu mopidy[10440]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.mixer.get_mute","params":{},"jsonrpc":"2.0","id":4}'
okt 24 14:16:38 Desktop-Ubuntu mopidy[10440]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 3, "result": 100}'
okt 24 14:16:38 Desktop-Ubuntu mopidy[10440]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.mixer.get_volume","params":{},"jsonrpc":"2.0","id":3}'
okt 24 14:16:38 Desktop-Ubuntu mopidy[10440]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 2, "result": "stopped"}'
okt 24 14:16:38 Desktop-Ubuntu mopidy[10440]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.playback.get_state","params":{},"jsonrpc":"2.0","id":2}'
okt 24 14:16:38 Desktop-Ubuntu mopidy[10440]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 1, "result": null}'
okt 24 14:16:38 Desktop-Ubuntu mopidy[10440]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.playback.get_current_tl_track","params":{},"jsonrpc":"2.0","id":1}'
okt 24 14:16:37 Desktop-Ubuntu mopidy[10440]: DEBUG    [HttpServer] mopidy_iris.core {'id': 166661379792725, 'jsonrpc': '2.0', 'method': 'get_queue_metadata', 'result': {'queue_metadata': {}}, 'recipient': '978UEBF6UWYV'}
okt 24 14:16:37 Desktop-Ubuntu mopidy[10440]: DEBUG    [HttpServer] mopidy_iris.handlers Iris websocket message received: {"jsonrpc":"2.0","id":166661379792725,"method":"get_queue_metadata"}
okt 24 14:16:37 Desktop-Ubuntu mopidy[10440]: DEBUG    [HttpServer] mopidy_iris.core {'id': 166661379792643, 'jsonrpc': '2.0', 'method': 'get_pinned', 'result': {'pinned': []}, 'recipient': '978UEBF6UWYV'}
okt 24 14:16:37 Desktop-Ubuntu mopidy[10440]: DEBUG    [HttpServer] mopidy_iris.handlers Iris websocket message received: {"jsonrpc":"2.0","id":166661379792643,"method":"get_pinned"}
okt 24 14:16:37 Desktop-Ubuntu mopidy[10440]: DEBUG    [HttpServer] mopidy_iris.core {'id': 166661379792412, 'jsonrpc': '2.0', 'method': 'get_commands', 'result': {'commands': {}}, 'recipient': '978UEBF6UWYV'}
okt 24 14:16:37 Desktop-Ubuntu mopidy[10440]: DEBUG    [HttpServer] mopidy_iris.handlers Iris websocket message received: {"jsonrpc":"2.0","id":166661379792412,"method":"get_commands"}
okt 24 14:16:37 Desktop-Ubuntu mopidy[10440]: DEBUG    [HttpServer] mopidy_iris.core {'id': 166661379792336, 'jsonrpc': '2.0', 'method': 'get_radio', 'result': {'radio': {'enabled': 0, 'seed_artists': [], 'seed_genres': [], 'seed_tracks': [], 'results': []}}, 'recipient': '978UEBF6UWYV'}
okt 24 14:16:37 Desktop-Ubuntu mopidy[10440]: DEBUG    [HttpServer] mopidy_iris.handlers Iris websocket message received: {"jsonrpc":"2.0","id":166661379792336,"method":"get_radio"}
okt 24 14:16:37 Desktop-Ubuntu mopidy[10440]: DEBUG    [HttpServer] mopidy_iris.core {'id': 166661379792268, 'jsonrpc': '2.0', 'method': 'get_shared_config', 'result': {'shared_config': {}}, 'recipient': '978UEBF6UWYV'}
okt 24 14:16:37 Desktop-Ubuntu mopidy[10440]: DEBUG    [HttpServer] mopidy_iris.handlers Iris websocket message received: {"jsonrpc":"2.0","id":166661379792268,"method":"get_shared_config"}
okt 24 14:16:37 Desktop-Ubuntu mopidy[10440]: DEBUG    [HttpServer] mopidy_iris.core {'id': 166661379792162, 'jsonrpc': '2.0', 'method': 'get_config', 'result': {'config': {'is_root': False, 'spotify_username': False, 'country': 'NZ', 'locale': 'en_NZ', 'snapcast_enabled': True, 'snapcast_host': 'localhost', 'snapcast_port': '1780', 'snapcast_ssl': False, 'snapcast_stream': 'Default', 'spotify_authorization_url': 'https://jamesbarnsley.co.nz/iris/auth_spotify.php', 'lastfm_authorization_url': 'https://jamesbarnsley.co.nz/iris/auth_lastfm.php', 'genius_authorization_url': 'https://jamesbarnsley.co.nz/iris/auth_genius.php', 'shared_config': {}}}, 'recipient': '978UEBF6UWYV'}
okt 24 14:16:37 Desktop-Ubuntu mopidy[10440]: DEBUG    [HttpServer] mopidy_iris.handlers Iris websocket message received: {"jsonrpc":"2.0","id":166661379792162,"method":"get_config"}
okt 24 14:16:37 Desktop-Ubuntu mopidy[10440]: DEBUG    [HttpServer] mopidy_iris.core {'id': 166661379792060, 'jsonrpc': '2.0', 'method': 'update_connection', 'result': {'connection': {'connection_id': '978UEBF6UWYV', 'ip': '127.0.0.1', 'created': '2022-10-24 14:16:37', 'username': 166656148284185, 'client_id': 166656148284193}}, 'recipient': '978UEBF6UWYV'}
okt 24 14:16:37 Desktop-Ubuntu mopidy[10440]: DEBUG    [HttpServer] mopidy_iris.core {'method': 'connection_changed', 'params': {'connection': {'connection_id': '978UEBF6UWYV', 'ip': '127.0.0.1', 'created': '2022-10-24 14:16:37', 'username': 166656148284185, 'client_id': 166656148284193}}}
okt 24 14:16:37 Desktop-Ubuntu mopidy[10440]: DEBUG    [HttpServer] mopidy_iris.handlers Iris websocket message received: {"jsonrpc":"2.0","id":166661379792060,"method":"update_connection","params":{"username":166656148284185,"client_id":166656148284193}}
okt 24 14:16:37 Desktop-Ubuntu mopidy[10440]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 0, "result": {"core.get_uri_schemes": {"description": "Get list of URI schemes we can handle", "params": []}, "core.get_version": {"description": "Get version of the Mopidy core API", "params": []}, "core.history.get_history": {"description": "Get the track history.\\n\\nThe timestamps are milliseconds since epoch.\\n\\n:returns: the track history\\n:rtype: list of (timestamp, :class:`mopidy.models.Ref`) tuples", "params": []}, "core.history.get_length": {"description": "Get the number of tracks in the history.\\n\\n:returns: the history length\\n:rtype: int", "params": []}, "core.library.browse": {"description": "Browse directories and tracks at the given ``uri``.\\n\\n``uri`` is a string which represents some directory belonging to a\\nbackend. To get the intial root directories for backends pass\\n:class:`None` as the URI.\\n\\nReturns a list of :class:`mopidy.models.Ref` objects for the\\ndirectories and tracks at the given ``uri``.\\n\\nThe :class:`~mopidy.models.Ref` objects representing tracks keep the\\ntrack\'s original URI. A matching pair of objects can look like this::\\n\\n    Track(uri=\'dummy:/foo.mp3\', name=\'foo\', artists=..., album=...)\\n    Ref.track(uri=\'dummy:/foo.mp3\', name=\'foo\')\\n\\nThe :class:`~mopidy.models.Ref` objects representing directories have\\nbackend specific URIs. These are opaque values, so no one but the\\nbackend that created them should try and derive any meaning from them.\\nThe only valid exception to this is checking the scheme, as it is used\\nto route browse requests to the correct backend.\\n\\nFor example, the dummy library\'s ``/bar`` directory could be returned\\nlike this::\\n\\n    Ref.directory(uri=\'dummy:directory:/bar\', name=\'bar\')\\n\\n:param string uri: URI to browse\\n:rtype: list of :class:`mopidy.models.Ref`\\n\\n.. versionadded:: 0.18", "params": [{"name": "uri"}]}, "core.library.get_distinct": {"description": "List distinct values for a given field from the library.\\n\\nThis has mainly been added to support the list commands the MPD\\nprotocol supports in a more sane fashion. Other frontends are not\\nrecommended to use this method.\\n\\n:param string field: Any one of ``uri``, ``track_name``, ``album``,\\n    ``artist``, ``albumartist``, ``composer``, ``performer``,\\n    ``track_no``, ``genre``, ``date``, ``comment``, ``disc_no``,\\n    ``musicbrainz_albumid``, ``musicbrainz_artistid``, or\\n    ``musicbrainz_trackid``.\\n:param dict query: Query to use for limiting results, see\\n    :meth:`search` for details about the query format.\\n:rtype: set of values corresponding to the requested field type.\\n\\n.. versionadded:: 1.0", "params": [{"name": "field"}, {"name": "query", "default": null}]}, "core.library.get_images": {"description": "Lookup the images for the given URIs\\n\\nBackends can use this to return image URIs for any URI they know about\\nbe it tracks, albums, playlists. The lookup result is a dictionary\\nmapping the provided URIs to lists of images.\\n\\nUnknown URIs or URIs the corresponding backend couldn\'t find anything\\nfor will simply return an empty list for that URI.\\n\\n:param uris: list of URIs to find images for\\n:type uris: list of string\\n:rtype: {uri: tuple of :class:`mopidy.models.Image`}\\n\\n.. versionadded:: 1.0", "params": [{"name": "uris"}]}, "core.library.lookup": {"description": "Lookup the given URIs.\\n\\nIf the URI expands to multiple tracks, the returned list will contain\\nthem all.\\n\\n:param uris: track URIs\\n:type uris: list of string\\n:rtype: {uri: list of :class:`mopidy.models.Track`}", "params": [{"name": "uris"}]}, "core.library.refresh": {"description": "Refresh library. Limit to URI and below if an URI is given.\\n\\n:param uri: directory or track URI\\n:type uri: string", "params": [{"name": "uri", "default": null}]}, "core.library.search": {"description": "Search the library for tracks where ``field`` contains ``values``.\\n\\n``field`` can be one of ``uri``, ``track_name``, ``album``, ``artist``,\\n``albumartist``, ``composer``, ``performer``, ``track_no``, ``genre``,\\n``date``, ``comment``, ``disc_no``, ``musicbrainz_albumid``,\\n``musicbrainz_artistid``, ``musicbrainz_trackid`` or ``any``.\\n\\nIf ``uris`` is given, the search is limited to results from within the\\nURI roots. For example passing ``uris=[\'file:\']`` will limit the search\\nto the local backend.\\n\\nExamples::\\n\\n    # Returns results matching \'a\' in any backend\\n    search({\'any\': [\'a\']})\\n\\n    # Returns results matching artist \'xyz\' in any backend\\n    search({\'artist\': [\'xyz\']})\\n\\n    # Returns results matching \'a\' and \'b\' and artist \'xyz\' in any\\n    # backend\\n    search({\'any\': [\'a\', \'b\'], \'artist\': [\'xyz\']})\\n\\n    # Returns results matching \'a\' if within the given URI roots\\n    # \\"file:///media/music\\" and \\"spotify:\\"\\n    search({\'any\': [\'a\']}, uris=[\'file:///media/music\', \'spotify:\'])\\n\\n    # Returns results matching artist \'xyz\' and \'abc\' in any backend\\n    search({\'artist\': [\'xyz\', \'abc\']})\\n\\n:param query: one or more queries to search for\\n:type query: dict\\n:param uris: zero or more URI roots to limit the search to\\n:type uris: list of string or :class:`None`\\n:param exact: if the search should use exact matching\\n:type exact: :class:`bool`\\n:rtype: list of :class:`mopidy.models.SearchResult`\\n\\n.. versionadded:: 1.0\\n    The ``exact`` keyword argument.", "params": [{"name": "query"}, {"name": "uris", "default": null}, {"name": "exact", "default": false}]}, "core.mixer.get_mute": {"description": "Get mute state.\\n\\n:class:`True` if muted, :class:`False` unmuted, :class:`None` if\\nunknown.", "params": []}, "core.mixer.get_volume": {"description": "Get the volume.\\n\\nInteger in range [0..100] or :class:`None` if unknown.\\n\\nThe volume scale is linear.", "params": []}, "core.mixer.set_mute": {"description": "Set mute state.\\n\\n:class:`True` to mute, :class:`False` to unmute.\\n\\nReturns :class:`True` if call is successful, otherwise :class:`False`.", "params": [{"name": "mute"}]}, "core.mixer.set_volume": {"description": "Set the volume.\\n\\nThe volume is defined as an integer in range [0..100].\\n\\nThe volume scale is linear.\\n\\nReturns :class:`True` if call is successful, otherwise :class:`False`.", "params": [{"name": "volume"}]}, "core.playback.get_current_tl_track": {"description": "Get the currently playing or selected track.\\n\\nReturns a :class:`mopidy.models.TlTrack` or :class:`None`.", "params": []}, "core.playback.get_current_tlid": {"description": "Get the currently playing or selected TLID.\\n\\nExtracted from :meth:`get_current_tl_track` for convenience.\\n\\nReturns a :class:`int` or :class:`None`.\\n\\n.. versionadded:: 1.1", "params": []}, "core.playback.get_current_track": {"description": "Get the currently playing or selected track.\\n\\nExtracted from :meth:`get_current_tl_track` for convenience.\\n\\nReturns a :class:`mopidy.models.Track` or :class:`None`.", "params": []}, "core.playback.get_state": {"description": "Get The playback state.", "params": []}, "core.playback.get_stream_title": {"description": "Get the current stream title or :class:`None`.", "params": []}, "core.playback.get_time_position": {"description": "Get time position in milliseconds.", "params": []}, "core.playback.next": {"description": "Change to the next track.\\n\\nThe current playback state will be kept. If it was playing, playing\\nwill continue. If it was paused, it will still be paused, etc.", "params": []}, "core.playback.pause": {"description": "Pause playback.", "params": []}, "core.playback.play": {"description": "Play the given track, or if the given tl_track and tlid is\\n:class:`None`, play the currently active track.\\n\\nNote that the track **must** already be in the tracklist.\\n\\n.. deprecated:: 3.0\\n    The ``tl_track`` argument. Use ``tlid`` instead.\\n\\n:param tl_track: track to play\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:param tlid: TLID of the track to play\\n:type tlid: :class:`int` or :class:`None`", "params": [{"name": "tl_track", "default": null}, {"name": "tlid", "default": null}]}, "core.playback.previous": {"description": "Change to the previous track.\\n\\nThe current playback state will be kept. If it was playing, playing\\nwill continue. If it was paused, it will still be paused, etc.", "params": []}, "core.playback.resume": {"description": "If paused, resume playing the current track.", "params": []}, "core.playback.seek": {"description": "Seeks to time position given in milliseconds.\\n\\n:param time_position: time position in milliseconds\\n:type time_position: int\\n:rtype: :class:`True` if successful, else :class:`False`", "params": [{"name": "time_position"}]}, "core.playback.set_state": {"description": "Set the playback state.\\n\\nMust be :attr:`PLAYING`, :attr:`PAUSED`, or :attr:`STOPPED`.\\n\\nPossible states and transitions:\\n\\n.. digraph:: state_transitions\\n\\n    \\"STOPPED\\" -> \\"PLAYING\\" [ label=\\"play\\" ]\\n    \\"STOPPED\\" -> \\"PAUSED\\" [ label=\\"pause\\" ]\\n    \\"PLAYING\\" -> \\"STOPPED\\" [ label=\\"stop\\" ]\\n    \\"PLAYING\\" -> \\"PAUSED\\" [ label=\\"pause\\" ]\\n    \\"PLAYING\\" -> \\"PLAYING\\" [ label=\\"play\\" ]\\n    \\"PAUSED\\" -> \\"PLAYING\\" [ label=\\"resume\\" ]\\n    \\"PAUSED\\" -> \\"STOPPED\\" [ label=\\"stop\\" ]", "params": [{"name": "new_state"}]}, "core.playback.stop": {"description": "Stop playing.", "params": []}, "core.playlists.as_list": {"description": "Get a list of the currently available playlists.\\n\\nReturns a list of :class:`~mopidy.models.Ref` objects referring to the\\nplaylists. In other words, no information about the playlists\' content\\nis given.\\n\\n:rtype: list of :class:`mopidy.models.Ref`\\n\\n.. versionadded:: 1.0", "params": []}, "core.playlists.create": {"description": "Create a new playlist.\\n\\nIf ``uri_scheme`` matches an URI scheme handled by a current backend,\\nthat backend is asked to create the playlist. If ``uri_scheme`` is\\n:class:`None` or doesn\'t match a current backend, the first backend is\\nasked to create the playlist.\\n\\nAll new playlists must be created by calling this method, and **not**\\nby creating new instances of :class:`mopidy.models.Playlist`.\\n\\n:param name: name of the new playlist\\n:type name: string\\n:param uri_scheme: use the backend matching the URI scheme\\n:type uri_scheme: string\\n:rtype: :class:`mopidy.models.Playlist` or :class:`None`", "params": [{"name": "name"}, {"name": "uri_scheme", "default": null}]}, "core.playlists.delete": {"description": "Delete playlist identified by the URI.\\n\\nIf the URI doesn\'t match the URI schemes handled by the current\\nbackends, nothing happens.\\n\\nReturns :class:`True` if deleted, :class:`False` otherwise.\\n\\n:param uri: URI of the playlist to delete\\n:type uri: string\\n:rtype: :class:`bool`\\n\\n.. versionchanged:: 2.2\\n    Return type defined.", "params": [{"name": "uri"}]}, "core.playlists.get_items": {"description": "Get the items in a playlist specified by ``uri``.\\n\\nReturns a list of :class:`~mopidy.models.Ref` objects referring to the\\nplaylist\'s items.\\n\\nIf a playlist with the given ``uri`` doesn\'t exist, it returns\\n:class:`None`.\\n\\n:rtype: list of :class:`mopidy.models.Ref`, or :class:`None`\\n\\n.. versionadded:: 1.0", "params": [{"name": "uri"}]}, "core.playlists.get_uri_schemes": {"description": "Get the list of URI schemes that support playlists.\\n\\n:rtype: list of string\\n\\n.. versionadded:: 2.0", "params": []}, "core.playlists.lookup": {"description": "Lookup playlist with given URI in both the set of playlists and in any\\nother playlist sources. Returns :class:`None` if not found.\\n\\n:param uri: playlist URI\\n:type uri: string\\n:rtype: :class:`mopidy.models.Playlist` or :class:`None`", "params": [{"name": "uri"}]}, "core.playlists.refresh": {"description": "Refresh the playlists in :attr:`playlists`.\\n\\nIf ``uri_scheme`` is :class:`None`, all backends are asked to refresh.\\nIf ``uri_scheme`` is an URI scheme handled by a backend, only that\\nbackend is asked to refresh. If ``uri_scheme`` doesn\'t match any\\ncurrent backend, nothing happens.\\n\\n:param uri_scheme: limit to the backend matching the URI scheme\\n:type uri_scheme: string", "params": [{"name": "uri_scheme", "default": null}]}, "core.playlists.save": {"description": "Save the playlist.\\n\\nFor a playlist to be saveable, it must have the ``uri`` attribute set.\\nYou must not set the ``uri`` atribute yourself, but use playlist\\nobjects returned by :meth:`create` or retrieved from :attr:`playlists`,\\nwhich will always give you saveable playlists.\\n\\nThe method returns the saved playlist. The return playlist may differ\\nfrom the saved playlist. E.g. if the playlist name was changed, the\\nreturned playlist may have a different URI. The caller of this method\\nmust throw away the playlist sent to this method, and use the\\nreturned playlist instead.\\n\\nIf the playlist\'s URI isn\'t set or doesn\'t match the URI scheme of a\\ncurrent backend, nothing is done and :class:`None` is returned.\\n\\n:param playlist: the playlist\\n:type playlist: :class:`mopidy.models.Playlist`\\n:rtype: :class:`mopidy.models.Playlist` or :class:`None`", "params": [{"name": "playlist"}]}, "core.tracklist.add": {"description": "Add tracks to the tracklist.\\n\\nIf ``uris`` is given instead of ``tracks``, the URIs are\\nlooked up in the library and the resulting tracks are added to the\\ntracklist.\\n\\nIf ``at_position`` is given, the tracks are inserted at the given\\nposition in the tracklist. If ``at_position`` is not given, the tracks\\nare appended to the end of the tracklist.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.\\n\\n:param tracks: tracks to add\\n:type tracks: list of :class:`mopidy.models.Track` or :class:`None`\\n:param at_position: position in tracklist to add tracks\\n:type at_position: int or :class:`None`\\n:param uris: list of URIs for tracks to add\\n:type uris: list of string or :class:`None`\\n:rtype: list of :class:`mopidy.models.TlTrack`\\n\\n.. versionadded:: 1.0\\n    The ``uris`` argument.\\n\\n.. deprecated:: 1.0\\n    The ``tracks`` argument. Use ``uris``.", "params": [{"name": "tracks", "default": null}, {"name": "at_position", "default": null}, {"name": "uris", "default": null}]}, "core.tracklist.clear": {"description": "Clear the tracklist.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.", "params": []}, "core.tracklist.eot_track": {"description": "The track that will be played after the given track.\\n\\nNot necessarily the same track as :meth:`next_track`.\\n\\n.. deprecated:: 3.0\\n    Use :meth:`get_eot_tlid` instead.\\n\\n:param tl_track: the reference track\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:rtype: :class:`mopidy.models.TlTrack` or :class:`None`", "params": [{"name": "tl_track"}]}, "core.tracklist.filter": {"description": "Filter the tracklist by the given criteria.\\n\\nEach rule in the criteria consists of a model field and a list of\\nvalues to compare it against. If the model field matches any of the\\nvalues, it may be returned.\\n\\nOnly tracks that match all the given criteria are returned.\\n\\nExamples::\\n\\n    # Returns tracks with TLIDs 1, 2, 3, or 4 (tracklist ID)\\n    filter({\'tlid\': [1, 2, 3, 4]})\\n\\n    # Returns track with URIs \'xyz\' or \'abc\'\\n    filter({\'uri\': [\'xyz\', \'abc\']})\\n\\n    # Returns track with a matching TLIDs (1, 3 or 6) and a\\n    # matching URI (\'xyz\' or \'abc\')\\n    filter({\'tlid\': [1, 3, 6], \'uri\': [\'xyz\', \'abc\']})\\n\\n:param criteria: one or more rules to match by\\n:type criteria: dict, of (string, list) pairs\\n:rtype: list of :class:`mopidy.models.TlTrack`", "params": [{"name": "criteria"}]}, "core.tracklist.get_consume": {"description": "Get consume mode.\\n\\n:class:`True`\\n    Tracks are removed from the tracklist when they have been played.\\n:class:`False`\\n    Tracks are not removed from the tracklist.", "params": []}, "core.tracklist.get_eot_tlid": {"description": "The TLID of the track that will be played after the current track.\\n\\nNot necessarily the same TLID as returned by :meth:`get_next_tlid`.\\n\\n:rtype: :class:`int` or :class:`None`\\n\\n.. versionadded:: 1.1", "params": []}, "core.tracklist.get_length": {"description": "Get length of the tracklist.", "params": []}, "core.tracklist.get_next_tlid": {"description": "The tlid of the track that will be played if calling\\n:meth:`mopidy.core.PlaybackController.next()`.\\n\\nFor normal playback this is the next track in the tracklist. If repeat\\nis enabled the next track can loop around the tracklist. When random is\\nenabled this should be a random track, all tracks should be played once\\nbefore the tracklist repeats.\\n\\n:rtype: :class:`int` or :class:`None`\\n\\n.. versionadded:: 1.1", "params": []}, "core.tracklist.get_previous_tlid": {"description": "Returns the TLID of the track that will be played if calling\\n:meth:`mopidy.core.PlaybackController.previous()`.\\n\\nFor normal playback this is the previous track in the tracklist. If\\nrandom and/or consume is enabled it should return the current track\\ninstead.\\n\\n:rtype: :class:`int` or :class:`None`\\n\\n.. versionadded:: 1.1", "params": []}, "core.tracklist.get_random": {"description": "Get random mode.\\n\\n:class:`True`\\n    Tracks are selected at random from the tracklist.\\n:class:`False`\\n    Tracks are played in the order of the tracklist.", "params": []}, "core.tracklist.get_repeat": {"description": "Get repeat mode.\\n\\n:class:`True`\\n    The tracklist is played repeatedly.\\n:class:`False`\\n    The tracklist is played once.", "params": []}, "core.tracklist.get_single": {"description": "Get single mode.\\n\\n:class:`True`\\n    Playback is stopped after current song, unless in ``repeat`` mode.\\n:class:`False`\\n    Playback continues after current song.", "params": []}, "core.tracklist.get_tl_tracks": {"description": "Get tracklist as list of :class:`mopidy.models.TlTrack`.", "params": []}, "core.tracklist.get_tracks": {"description": "Get tracklist as list of :class:`mopidy.models.Track`.", "params": []}, "core.tracklist.get_version": {"description": "Get the tracklist version.\\n\\nInteger which is increased every time the tracklist is changed. Is not\\nreset before Mopidy is restarted.", "params": []}, "core.tracklist.index": {"description": "The position of the given track in the tracklist.\\n\\nIf neither *tl_track* or *tlid* is given we return the index of\\nthe currently playing track.\\n\\n:param tl_track: the track to find the index of\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:param tlid: TLID of the track to find the index of\\n:type tlid: :class:`int` or :class:`None`\\n:rtype: :class:`int` or :class:`None`\\n\\n.. versionadded:: 1.1\\n    The *tlid* parameter", "params": [{"name": "tl_track", "default": null}, {"name": "tlid", "default": null}]}, "core.tracklist.move": {"description": "Move the tracks in the slice ``[start:end]`` to ``to_position``.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.\\n\\n:param start: position of first track to move\\n:type start: int\\n:param end: position after last track to move\\n:type end: int\\n:param to_position: new position for the tracks\\n:type to_position: int", "params": [{"name": "start"}, {"name": "end"}, {"name": "to_position"}]}, "core.tracklist.next_track": {"description": "The track that will be played if calling\\n:meth:`mopidy.core.PlaybackController.next()`.\\n\\nFor normal playback this is the next track in the tracklist. If repeat\\nis enabled the next track can loop around the tracklist. When random is\\nenabled this should be a random track, all tracks should be played once\\nbefore the tracklist repeats.\\n\\n.. deprecated:: 3.0\\n    Use :meth:`get_next_tlid` instead.\\n\\n:param tl_track: the reference track\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:rtype: :class:`mopidy.models.TlTrack` or :class:`None`", "params": [{"name": "tl_track"}]}, "core.tracklist.previous_track": {"description": "Returns the track that will be played if calling\\n:meth:`mopidy.core.PlaybackController.previous()`.\\n\\nFor normal playback this is the previous track in the tracklist. If\\nrandom and/or consume is enabled it should return the current track\\ninstead.\\n\\n.. deprecated:: 3.0\\n    Use :meth:`get_previous_tlid` instead.\\n\\n:param tl_track: the reference track\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:rtype: :class:`mopidy.models.TlTrack` or :class:`None`", "params": [{"name": "tl_track"}]}, "core.tracklist.remove": {"description": "Remove the matching tracks from the tracklist.\\n\\nUses :meth:`filter()` to lookup the tracks to remove.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.\\n\\n:param criteria: one or more rules to match by\\n:type criteria: dict, of (string, list) pairs\\n:rtype: list of :class:`mopidy.models.TlTrack` that were removed", "params": [{"name": "criteria"}]}, "core.tracklist.set_consume": {"description": "Set consume mode.\\n\\n:class:`True`\\n    Tracks are removed from the tracklist when they have been played.\\n:class:`False`\\n    Tracks are not removed from the tracklist.", "params": [{"name": "value"}]}, "core.tracklist.set_random": {"description": "Set random mode.\\n\\n:class:`True`\\n    Tracks are selected at random from the tracklist.\\n:class:`False`\\n    Tracks are played in the order of the tracklist.", "params": [{"name": "value"}]}, "core.tracklist.set_repeat": {"description": "Set repeat mode.\\n\\nTo repeat a single track, set both ``repeat`` and ``single``.\\n\\n:class:`True`\\n    The tracklist is played repeatedly.\\n:class:`False`\\n    The tracklist is played once.", "params": [{"name": "value"}]}, "core.tracklist.set_single": {"description": "Set single mode.\\n\\n:class:`True`\\n    Playback is stopped after current song, unless in ``repeat`` mode.\\n:class:`False`\\n    Playback continues after current song.", "params": [{"name": "value"}]}, "core.tracklist.shuffle": {"description": "Shuffles the entire tracklist. If ``start`` and ``end`` is given only\\nshuffles the slice ``[start:end]``.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.\\n\\n:param start: position of first track to shuffle\\n:type start: int or :class:`None`\\n:param end: position after last track to shuffle\\n:type end: int or :class:`None`", "params": [{"name": "start", "default": null}, {"name": "end", "default": null}]}, "core.tracklist.slice": {"description": "Returns a slice of the tracklist, limited by the given start and end\\npositions.\\n\\n:param start: position of first track to include in slice\\n:type start: int\\n:param end: position after last track to include in slice\\n:type end: int\\n:rtype: :class:`mopidy.models.TlTrack`", "params": [{"name": "start"}, {"name": "end"}]}}}'
okt 24 14:16:37 Desktop-Ubuntu mopidy[10440]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.describe","jsonrpc":"2.0","id":0}'
okt 24 14:16:37 Desktop-Ubuntu mopidy[10440]: DEBUG    [HttpServer] mopidy_iris.core {'method': 'connection_added', 'params': {'connection': {'connection_id': '978UEBF6UWYV', 'ip': '127.0.0.1', 'created': '2022-10-24 14:16:37'}}}
okt 24 14:16:37 Desktop-Ubuntu mopidy[10440]: DEBUG    [HttpServer] mopidy_iris.core <mopidy_iris.handlers.WebsocketHandler object at 0x7f6ecc22d960>
okt 24 14:16:37 Desktop-Ubuntu mopidy[10440]: DEBUG    [HttpServer] mopidy_iris.core Connection added
okt 24 14:16:37 Desktop-Ubuntu mopidy[10440]: INFO     [HttpServer] tornado.access 101 GET /iris/ws/ (127.0.0.1) 0.51ms
okt 24 14:16:37 Desktop-Ubuntu mopidy[10440]: DEBUG    [HttpServer] mopidy.http.handlers New WebSocket connection from 127.0.0.1
okt 24 14:16:37 Desktop-Ubuntu mopidy[10440]: INFO     [HttpServer] tornado.access 101 GET /mopidy/ws/ (127.0.0.1) 0.55ms
okt 24 14:16:37 Desktop-Ubuntu mopidy[10440]: INFO     [HttpServer] tornado.access 200 GET /iris/assets/favicon.png (127.0.0.1) 0.74ms
okt 24 14:16:36 Desktop-Ubuntu mopidy[10440]: INFO     [HttpServer] tornado.access 200 GET /iris/app.min.js?v=1666559547 (127.0.0.1) 10.88ms
okt 24 14:16:36 Desktop-Ubuntu mopidy[10440]: INFO     [HttpServer] tornado.access 200 GET /iris/app.min.css?v=1666559547 (127.0.0.1) 5.18ms
okt 24 14:16:36 Desktop-Ubuntu mopidy[10440]: INFO     [HttpServer] tornado.access 200 GET /iris/assets/app-icon.svg (127.0.0.1) 0.75ms
okt 24 14:16:36 Desktop-Ubuntu mopidy[10440]: DEBUG    [HttpServer] mopidy.http.handlers Closed WebSocket connection from 127.0.0.1
okt 24 14:16:36 Desktop-Ubuntu mopidy[10440]: DEBUG    [HttpServer] mopidy_iris.core {'method': 'connection_removed', 'params': {'connection': {'connection_id': 'Z1DWMXLWZ72J', 'ip': '127.0.0.1', 'created': '2022-10-24 14:16:33', 'username': 166656148284185, 'client_id': 166656148284193}}}
okt 24 14:16:36 Desktop-Ubuntu mopidy[10440]: INFO     [HttpServer] tornado.access 200 GET /iris/library/browse/Files/ZmlsZTovLy9ob21lL2dlcmFyZC9NdXNpYw== (127.0.0.1) 6.44ms
okt 24 14:16:34 Desktop-Ubuntu mopidy[10440]: DEBUG    [HttpServer] mopidy_iris.core {'id': 16666137940157, 'jsonrpc': '2.0', 'method': 'get_version', 'result': {'version': {'current': '3.64.1', 'latest': '3.64.1', 'is_root': False, 'upgrade_available': False}}, 'recipient': 'Z1DWMXLWZ72J'}
okt 24 14:16:34 Desktop-Ubuntu mopidy[10440]: DEBUG    [HttpServer] mopidy_iris.handlers Iris websocket message received: {"jsonrpc":"2.0","id":16666137940157,"method":"get_version"}
okt 24 14:16:33 Desktop-Ubuntu mopidy[10440]: DEBUG    [HttpServer] mopidy_iris.core {'id': 166661379351328, 'jsonrpc': '2.0', 'method': 'get_queue_metadata', 'result': {'queue_metadata': {}}, 'recipient': 'Z1DWMXLWZ72J'}
okt 24 14:16:33 Desktop-Ubuntu mopidy[10440]: DEBUG    [HttpServer] mopidy_iris.handlers Iris websocket message received: {"jsonrpc":"2.0","id":166661379351328,"method":"get_queue_metadata"}
okt 24 14:16:33 Desktop-Ubuntu mopidy[10440]: DEBUG    [HttpServer] mopidy_iris.core {'id': 166661379351192, 'jsonrpc': '2.0', 'method': 'get_pinned', 'result': {'pinned': []}, 'recipient': 'Z1DWMXLWZ72J'}
okt 24 14:16:33 Desktop-Ubuntu mopidy[10440]: DEBUG    [HttpServer] mopidy_iris.handlers Iris websocket message received: {"jsonrpc":"2.0","id":166661379351192,"method":"get_pinned"}
okt 24 14:16:33 Desktop-Ubuntu mopidy[10440]: DEBUG    [HttpServer] mopidy_iris.core {'id': 166661379351013, 'jsonrpc': '2.0', 'method': 'get_commands', 'result': {'commands': {}}, 'recipient': 'Z1DWMXLWZ72J'}
okt 24 14:16:33 Desktop-Ubuntu mopidy[10440]: DEBUG    [HttpServer] mopidy_iris.handlers Iris websocket message received: {"jsonrpc":"2.0","id":166661379351013,"method":"get_commands"}
okt 24 14:16:33 Desktop-Ubuntu mopidy[10440]: DEBUG    [HttpServer] mopidy_iris.core {'id': 166661379350913, 'jsonrpc': '2.0', 'method': 'get_radio', 'result': {'radio': {'enabled': 0, 'seed_artists': [], 'seed_genres': [], 'seed_tracks': [], 'results': []}}, 'recipient': 'Z1DWMXLWZ72J'}
okt 24 14:16:33 Desktop-Ubuntu mopidy[10440]: DEBUG    [HttpServer] mopidy_iris.handlers Iris websocket message received: {"jsonrpc":"2.0","id":166661379350913,"method":"get_radio"}
okt 24 14:16:33 Desktop-Ubuntu mopidy[10440]: DEBUG    [HttpServer] mopidy_iris.core {'id': 166661379350633, 'jsonrpc': '2.0', 'method': 'get_shared_config', 'result': {'shared_config': {}}, 'recipient': 'Z1DWMXLWZ72J'}
okt 24 14:16:33 Desktop-Ubuntu mopidy[10440]: DEBUG    [HttpServer] mopidy_iris.handlers Iris websocket message received: {"jsonrpc":"2.0","id":166661379350633,"method":"get_shared_config"}
okt 24 14:16:33 Desktop-Ubuntu mopidy[10440]: DEBUG    [HttpServer] mopidy_iris.core {'id': 166661379350518, 'jsonrpc': '2.0', 'method': 'get_config', 'result': {'config': {'is_root': False, 'spotify_username': False, 'country': 'NZ', 'locale': 'en_NZ', 'snapcast_enabled': True, 'snapcast_host': 'localhost', 'snapcast_port': '1780', 'snapcast_ssl': False, 'snapcast_stream': 'Default', 'spotify_authorization_url': 'https://jamesbarnsley.co.nz/iris/auth_spotify.php', 'lastfm_authorization_url': 'https://jamesbarnsley.co.nz/iris/auth_lastfm.php', 'genius_authorization_url': 'https://jamesbarnsley.co.nz/iris/auth_genius.php', 'shared_config': {}}}, 'recipient': 'Z1DWMXLWZ72J'}
okt 24 14:16:33 Desktop-Ubuntu mopidy[10440]: DEBUG    [HttpServer] mopidy_iris.handlers Iris websocket message received: {"jsonrpc":"2.0","id":166661379350518,"method":"get_config"}
okt 24 14:16:33 Desktop-Ubuntu mopidy[10440]: DEBUG    [HttpServer] mopidy_iris.core {'id': 166661379350348, 'jsonrpc': '2.0', 'method': 'update_connection', 'result': {'connection': {'connection_id': 'Z1DWMXLWZ72J', 'ip': '127.0.0.1', 'created': '2022-10-24 14:16:33', 'username': 166656148284185, 'client_id': 166656148284193}}, 'recipient': 'Z1DWMXLWZ72J'}
okt 24 14:16:33 Desktop-Ubuntu mopidy[10440]: DEBUG    [HttpServer] mopidy_iris.core {'method': 'connection_changed', 'params': {'connection': {'connection_id': 'Z1DWMXLWZ72J', 'ip': '127.0.0.1', 'created': '2022-10-24 14:16:33', 'username': 166656148284185, 'client_id': 166656148284193}}}
okt 24 14:16:33 Desktop-Ubuntu mopidy[10440]: DEBUG    [HttpServer] mopidy_iris.handlers Iris websocket message received: {"jsonrpc":"2.0","id":166661379350348,"method":"update_connection","params":{"username":166656148284185,"client_id":166656148284193}}
okt 24 14:16:33 Desktop-Ubuntu mopidy[10440]: DEBUG    [HttpServer] mopidy_iris.core {'method': 'connection_added', 'params': {'connection': {'connection_id': 'Z1DWMXLWZ72J', 'ip': '127.0.0.1', 'created': '2022-10-24 14:16:33'}}}
okt 24 14:16:33 Desktop-Ubuntu mopidy[10440]: DEBUG    [HttpServer] mopidy_iris.core <mopidy_iris.handlers.WebsocketHandler object at 0x7f6ecc1a8280>
okt 24 14:16:33 Desktop-Ubuntu mopidy[10440]: DEBUG    [HttpServer] mopidy_iris.core Connection added
okt 24 14:16:33 Desktop-Ubuntu mopidy[10440]: INFO     [HttpServer] tornado.access 101 GET /iris/ws/ (127.0.0.1) 0.52ms
okt 24 14:16:29 Desktop-Ubuntu mopidy[10440]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 55, "result": null}'
okt 24 14:16:29 Desktop-Ubuntu mopidy[10440]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.playback.get_stream_title","params":{},"jsonrpc":"2.0","id":55}'
okt 24 14:16:29 Desktop-Ubuntu mopidy[10440]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 54, "result": ["file", "http", "https", "local", "m3u", "rtsp"]}'
okt 24 14:16:29 Desktop-Ubuntu mopidy[10440]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.get_uri_schemes","params":{},"jsonrpc":"2.0","id":54}'
okt 24 14:16:29 Desktop-Ubuntu mopidy[10440]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 53, "result": 0}'
okt 24 14:16:29 Desktop-Ubuntu mopidy[10440]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.playback.get_time_position","params":{},"jsonrpc":"2.0","id":53}'
okt 24 14:16:29 Desktop-Ubuntu mopidy[10440]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 52, "result": []}'
okt 24 14:16:29 Desktop-Ubuntu mopidy[10440]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_tl_tracks","params":{},"jsonrpc":"2.0","id":52}'
okt 24 14:16:29 Desktop-Ubuntu mopidy[10440]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 51, "result": false}'
okt 24 14:16:29 Desktop-Ubuntu mopidy[10440]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_repeat","params":{},"jsonrpc":"2.0","id":51}'
okt 24 14:16:29 Desktop-Ubuntu mopidy[10440]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 50, "result": false}'
okt 24 14:16:29 Desktop-Ubuntu mopidy[10440]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_random","params":{},"jsonrpc":"2.0","id":50}'
okt 24 14:16:29 Desktop-Ubuntu mopidy[10440]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 49, "result": false}'
okt 24 14:16:29 Desktop-Ubuntu mopidy[10440]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_consume","params":{},"jsonrpc":"2.0","id":49}'
okt 24 14:16:29 Desktop-Ubuntu mopidy[10440]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 48, "result": false}'
okt 24 14:16:29 Desktop-Ubuntu mopidy[10440]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.mixer.get_mute","params":{},"jsonrpc":"2.0","id":48}'
okt 24 14:16:29 Desktop-Ubuntu mopidy[10440]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 47, "result": 100}'
okt 24 14:16:29 Desktop-Ubuntu mopidy[10440]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.mixer.get_volume","params":{},"jsonrpc":"2.0","id":47}'
okt 24 14:16:29 Desktop-Ubuntu mopidy[10440]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 46, "result": "stopped"}'
okt 24 14:16:29 Desktop-Ubuntu mopidy[10440]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.playback.get_state","params":{},"jsonrpc":"2.0","id":46}'
okt 24 14:16:29 Desktop-Ubuntu mopidy[10440]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 45, "result": null}'
okt 24 14:16:29 Desktop-Ubuntu mopidy[10440]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.playback.get_current_tl_track","params":{},"jsonrpc":"2.0","id":45}'
okt 24 14:16:29 Desktop-Ubuntu mopidy[10440]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 44, "result": {"core.get_uri_schemes": {"description": "Get list of URI schemes we can handle", "params": []}, "core.get_version": {"description": "Get version of the Mopidy core API", "params": []}, "core.history.get_history": {"description": "Get the track history.\\n\\nThe timestamps are milliseconds since epoch.\\n\\n:returns: the track history\\n:rtype: list of (timestamp, :class:`mopidy.models.Ref`) tuples", "params": []}, "core.history.get_length": {"description": "Get the number of tracks in the history.\\n\\n:returns: the history length\\n:rtype: int", "params": []}, "core.library.browse": {"description": "Browse directories and tracks at the given ``uri``.\\n\\n``uri`` is a string which represents some directory belonging to a\\nbackend. To get the intial root directories for backends pass\\n:class:`None` as the URI.\\n\\nReturns a list of :class:`mopidy.models.Ref` objects for the\\ndirectories and tracks at the given ``uri``.\\n\\nThe :class:`~mopidy.models.Ref` objects representing tracks keep the\\ntrack\'s original URI. A matching pair of objects can look like this::\\n\\n    Track(uri=\'dummy:/foo.mp3\', name=\'foo\', artists=..., album=...)\\n    Ref.track(uri=\'dummy:/foo.mp3\', name=\'foo\')\\n\\nThe :class:`~mopidy.models.Ref` objects representing directories have\\nbackend specific URIs. These are opaque values, so no one but the\\nbackend that created them should try and derive any meaning from them.\\nThe only valid exception to this is checking the scheme, as it is used\\nto route browse requests to the correct backend.\\n\\nFor example, the dummy library\'s ``/bar`` directory could be returned\\nlike this::\\n\\n    Ref.directory(uri=\'dummy:directory:/bar\', name=\'bar\')\\n\\n:param string uri: URI to browse\\n:rtype: list of :class:`mopidy.models.Ref`\\n\\n.. versionadded:: 0.18", "params": [{"name": "uri"}]}, "core.library.get_distinct": {"description": "List distinct values for a given field from the library.\\n\\nThis has mainly been added to support the list commands the MPD\\nprotocol supports in a more sane fashion. Other frontends are not\\nrecommended to use this method.\\n\\n:param string field: Any one of ``uri``, ``track_name``, ``album``,\\n    ``artist``, ``albumartist``, ``composer``, ``performer``,\\n    ``track_no``, ``genre``, ``date``, ``comment``, ``disc_no``,\\n    ``musicbrainz_albumid``, ``musicbrainz_artistid``, or\\n    ``musicbrainz_trackid``.\\n:param dict query: Query to use for limiting results, see\\n    :meth:`search` for details about the query format.\\n:rtype: set of values corresponding to the requested field type.\\n\\n.. versionadded:: 1.0", "params": [{"name": "field"}, {"name": "query", "default": null}]}, "core.library.get_images": {"description": "Lookup the images for the given URIs\\n\\nBackends can use this to return image URIs for any URI they know about\\nbe it tracks, albums, playlists. The lookup result is a dictionary\\nmapping the provided URIs to lists of images.\\n\\nUnknown URIs or URIs the corresponding backend couldn\'t find anything\\nfor will simply return an empty list for that URI.\\n\\n:param uris: list of URIs to find images for\\n:type uris: list of string\\n:rtype: {uri: tuple of :class:`mopidy.models.Image`}\\n\\n.. versionadded:: 1.0", "params": [{"name": "uris"}]}, "core.library.lookup": {"description": "Lookup the given URIs.\\n\\nIf the URI expands to multiple tracks, the returned list will contain\\nthem all.\\n\\n:param uris: track URIs\\n:type uris: list of string\\n:rtype: {uri: list of :class:`mopidy.models.Track`}", "params": [{"name": "uris"}]}, "core.library.refresh": {"description": "Refresh library. Limit to URI and below if an URI is given.\\n\\n:param uri: directory or track URI\\n:type uri: string", "params": [{"name": "uri", "default": null}]}, "core.library.search": {"description": "Search the library for tracks where ``field`` contains ``values``.\\n\\n``field`` can be one of ``uri``, ``track_name``, ``album``, ``artist``,\\n``albumartist``, ``composer``, ``performer``, ``track_no``, ``genre``,\\n``date``, ``comment``, ``disc_no``, ``musicbrainz_albumid``,\\n``musicbrainz_artistid``, ``musicbrainz_trackid`` or ``any``.\\n\\nIf ``uris`` is given, the search is limited to results from within the\\nURI roots. For example passing ``uris=[\'file:\']`` will limit the search\\nto the local backend.\\n\\nExamples::\\n\\n    # Returns results matching \'a\' in any backend\\n    search({\'any\': [\'a\']})\\n\\n    # Returns results matching artist \'xyz\' in any backend\\n    search({\'artist\': [\'xyz\']})\\n\\n    # Returns results matching \'a\' and \'b\' and artist \'xyz\' in any\\n    # backend\\n    search({\'any\': [\'a\', \'b\'], \'artist\': [\'xyz\']})\\n\\n    # Returns results matching \'a\' if within the given URI roots\\n    # \\"file:///media/music\\" and \\"spotify:\\"\\n    search({\'any\': [\'a\']}, uris=[\'file:///media/music\', \'spotify:\'])\\n\\n    # Returns results matching artist \'xyz\' and \'abc\' in any backend\\n    search({\'artist\': [\'xyz\', \'abc\']})\\n\\n:param query: one or more queries to search for\\n:type query: dict\\n:param uris: zero or more URI roots to limit the search to\\n:type uris: list of string or :class:`None`\\n:param exact: if the search should use exact matching\\n:type exact: :class:`bool`\\n:rtype: list of :class:`mopidy.models.SearchResult`\\n\\n.. versionadded:: 1.0\\n    The ``exact`` keyword argument.", "params": [{"name": "query"}, {"name": "uris", "default": null}, {"name": "exact", "default": false}]}, "core.mixer.get_mute": {"description": "Get mute state.\\n\\n:class:`True` if muted, :class:`False` unmuted, :class:`None` if\\nunknown.", "params": []}, "core.mixer.get_volume": {"description": "Get the volume.\\n\\nInteger in range [0..100] or :class:`None` if unknown.\\n\\nThe volume scale is linear.", "params": []}, "core.mixer.set_mute": {"description": "Set mute state.\\n\\n:class:`True` to mute, :class:`False` to unmute.\\n\\nReturns :class:`True` if call is successful, otherwise :class:`False`.", "params": [{"name": "mute"}]}, "core.mixer.set_volume": {"description": "Set the volume.\\n\\nThe volume is defined as an integer in range [0..100].\\n\\nThe volume scale is linear.\\n\\nReturns :class:`True` if call is successful, otherwise :class:`False`.", "params": [{"name": "volume"}]}, "core.playback.get_current_tl_track": {"description": "Get the currently playing or selected track.\\n\\nReturns a :class:`mopidy.models.TlTrack` or :class:`None`.", "params": []}, "core.playback.get_current_tlid": {"description": "Get the currently playing or selected TLID.\\n\\nExtracted from :meth:`get_current_tl_track` for convenience.\\n\\nReturns a :class:`int` or :class:`None`.\\n\\n.. versionadded:: 1.1", "params": []}, "core.playback.get_current_track": {"description": "Get the currently playing or selected track.\\n\\nExtracted from :meth:`get_current_tl_track` for convenience.\\n\\nReturns a :class:`mopidy.models.Track` or :class:`None`.", "params": []}, "core.playback.get_state": {"description": "Get The playback state.", "params": []}, "core.playback.get_stream_title": {"description": "Get the current stream title or :class:`None`.", "params": []}, "core.playback.get_time_position": {"description": "Get time position in milliseconds.", "params": []}, "core.playback.next": {"description": "Change to the next track.\\n\\nThe current playback state will be kept. If it was playing, playing\\nwill continue. If it was paused, it will still be paused, etc.", "params": []}, "core.playback.pause": {"description": "Pause playback.", "params": []}, "core.playback.play": {"description": "Play the given track, or if the given tl_track and tlid is\\n:class:`None`, play the currently active track.\\n\\nNote that the track **must** already be in the tracklist.\\n\\n.. deprecated:: 3.0\\n    The ``tl_track`` argument. Use ``tlid`` instead.\\n\\n:param tl_track: track to play\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:param tlid: TLID of the track to play\\n:type tlid: :class:`int` or :class:`None`", "params": [{"name": "tl_track", "default": null}, {"name": "tlid", "default": null}]}, "core.playback.previous": {"description": "Change to the previous track.\\n\\nThe current playback state will be kept. If it was playing, playing\\nwill continue. If it was paused, it will still be paused, etc.", "params": []}, "core.playback.resume": {"description": "If paused, resume playing the current track.", "params": []}, "core.playback.seek": {"description": "Seeks to time position given in milliseconds.\\n\\n:param time_position: time position in milliseconds\\n:type time_position: int\\n:rtype: :class:`True` if successful, else :class:`False`", "params": [{"name": "time_position"}]}, "core.playback.set_state": {"description": "Set the playback state.\\n\\nMust be :attr:`PLAYING`, :attr:`PAUSED`, or :attr:`STOPPED`.\\n\\nPossible states and transitions:\\n\\n.. digraph:: state_transitions\\n\\n    \\"STOPPED\\" -> \\"PLAYING\\" [ label=\\"play\\" ]\\n    \\"STOPPED\\" -> \\"PAUSED\\" [ label=\\"pause\\" ]\\n    \\"PLAYING\\" -> \\"STOPPED\\" [ label=\\"stop\\" ]\\n    \\"PLAYING\\" -> \\"PAUSED\\" [ label=\\"pause\\" ]\\n    \\"PLAYING\\" -> \\"PLAYING\\" [ label=\\"play\\" ]\\n    \\"PAUSED\\" -> \\"PLAYING\\" [ label=\\"resume\\" ]\\n    \\"PAUSED\\" -> \\"STOPPED\\" [ label=\\"stop\\" ]", "params": [{"name": "new_state"}]}, "core.playback.stop": {"description": "Stop playing.", "params": []}, "core.playlists.as_list": {"description": "Get a list of the currently available playlists.\\n\\nReturns a list of :class:`~mopidy.models.Ref` objects referring to the\\nplaylists. In other words, no information about the playlists\' content\\nis given.\\n\\n:rtype: list of :class:`mopidy.models.Ref`\\n\\n.. versionadded:: 1.0", "params": []}, "core.playlists.create": {"description": "Create a new playlist.\\n\\nIf ``uri_scheme`` matches an URI scheme handled by a current backend,\\nthat backend is asked to create the playlist. If ``uri_scheme`` is\\n:class:`None` or doesn\'t match a current backend, the first backend is\\nasked to create the playlist.\\n\\nAll new playlists must be created by calling this method, and **not**\\nby creating new instances of :class:`mopidy.models.Playlist`.\\n\\n:param name: name of the new playlist\\n:type name: string\\n:param uri_scheme: use the backend matching the URI scheme\\n:type uri_scheme: string\\n:rtype: :class:`mopidy.models.Playlist` or :class:`None`", "params": [{"name": "name"}, {"name": "uri_scheme", "default": null}]}, "core.playlists.delete": {"description": "Delete playlist identified by the URI.\\n\\nIf the URI doesn\'t match the URI schemes handled by the current\\nbackends, nothing happens.\\n\\nReturns :class:`True` if deleted, :class:`False` otherwise.\\n\\n:param uri: URI of the playlist to delete\\n:type uri: string\\n:rtype: :class:`bool`\\n\\n.. versionchanged:: 2.2\\n    Return type defined.", "params": [{"name": "uri"}]}, "core.playlists.get_items": {"description": "Get the items in a playlist specified by ``uri``.\\n\\nReturns a list of :class:`~mopidy.models.Ref` objects referring to the\\nplaylist\'s items.\\n\\nIf a playlist with the given ``uri`` doesn\'t exist, it returns\\n:class:`None`.\\n\\n:rtype: list of :class:`mopidy.models.Ref`, or :class:`None`\\n\\n.. versionadded:: 1.0", "params": [{"name": "uri"}]}, "core.playlists.get_uri_schemes": {"description": "Get the list of URI schemes that support playlists.\\n\\n:rtype: list of string\\n\\n.. versionadded:: 2.0", "params": []}, "core.playlists.lookup": {"description": "Lookup playlist with given URI in both the set of playlists and in any\\nother playlist sources. Returns :class:`None` if not found.\\n\\n:param uri: playlist URI\\n:type uri: string\\n:rtype: :class:`mopidy.models.Playlist` or :class:`None`", "params": [{"name": "uri"}]}, "core.playlists.refresh": {"description": "Refresh the playlists in :attr:`playlists`.\\n\\nIf ``uri_scheme`` is :class:`None`, all backends are asked to refresh.\\nIf ``uri_scheme`` is an URI scheme handled by a backend, only that\\nbackend is asked to refresh. If ``uri_scheme`` doesn\'t match any\\ncurrent backend, nothing happens.\\n\\n:param uri_scheme: limit to the backend matching the URI scheme\\n:type uri_scheme: string", "params": [{"name": "uri_scheme", "default": null}]}, "core.playlists.save": {"description": "Save the playlist.\\n\\nFor a playlist to be saveable, it must have the ``uri`` attribute set.\\nYou must not set the ``uri`` atribute yourself, but use playlist\\nobjects returned by :meth:`create` or retrieved from :attr:`playlists`,\\nwhich will always give you saveable playlists.\\n\\nThe method returns the saved playlist. The return playlist may differ\\nfrom the saved playlist. E.g. if the playlist name was changed, the\\nreturned playlist may have a different URI. The caller of this method\\nmust throw away the playlist sent to this method, and use the\\nreturned playlist instead.\\n\\nIf the playlist\'s URI isn\'t set or doesn\'t match the URI scheme of a\\ncurrent backend, nothing is done and :class:`None` is returned.\\n\\n:param playlist: the playlist\\n:type playlist: :class:`mopidy.models.Playlist`\\n:rtype: :class:`mopidy.models.Playlist` or :class:`None`", "params": [{"name": "playlist"}]}, "core.tracklist.add": {"description": "Add tracks to the tracklist.\\n\\nIf ``uris`` is given instead of ``tracks``, the URIs are\\nlooked up in the library and the resulting tracks are added to the\\ntracklist.\\n\\nIf ``at_position`` is given, the tracks are inserted at the given\\nposition in the tracklist. If ``at_position`` is not given, the tracks\\nare appended to the end of the tracklist.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.\\n\\n:param tracks: tracks to add\\n:type tracks: list of :class:`mopidy.models.Track` or :class:`None`\\n:param at_position: position in tracklist to add tracks\\n:type at_position: int or :class:`None`\\n:param uris: list of URIs for tracks to add\\n:type uris: list of string or :class:`None`\\n:rtype: list of :class:`mopidy.models.TlTrack`\\n\\n.. versionadded:: 1.0\\n    The ``uris`` argument.\\n\\n.. deprecated:: 1.0\\n    The ``tracks`` argument. Use ``uris``.", "params": [{"name": "tracks", "default": null}, {"name": "at_position", "default": null}, {"name": "uris", "default": null}]}, "core.tracklist.clear": {"description": "Clear the tracklist.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.", "params": []}, "core.tracklist.eot_track": {"description": "The track that will be played after the given track.\\n\\nNot necessarily the same track as :meth:`next_track`.\\n\\n.. deprecated:: 3.0\\n    Use :meth:`get_eot_tlid` instead.\\n\\n:param tl_track: the reference track\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:rtype: :class:`mopidy.models.TlTrack` or :class:`None`", "params": [{"name": "tl_track"}]}, "core.tracklist.filter": {"description": "Filter the tracklist by the given criteria.\\n\\nEach rule in the criteria consists of a model field and a list of\\nvalues to compare it against. If the model field matches any of the\\nvalues, it may be returned.\\n\\nOnly tracks that match all the given criteria are returned.\\n\\nExamples::\\n\\n    # Returns tracks with TLIDs 1, 2, 3, or 4 (tracklist ID)\\n    filter({\'tlid\': [1, 2, 3, 4]})\\n\\n    # Returns track with URIs \'xyz\' or \'abc\'\\n    filter({\'uri\': [\'xyz\', \'abc\']})\\n\\n    # Returns track with a matching TLIDs (1, 3 or 6) and a\\n    # matching URI (\'xyz\' or \'abc\')\\n    filter({\'tlid\': [1, 3, 6], \'uri\': [\'xyz\', \'abc\']})\\n\\n:param criteria: one or more rules to match by\\n:type criteria: dict, of (string, list) pairs\\n:rtype: list of :class:`mopidy.models.TlTrack`", "params": [{"name": "criteria"}]}, "core.tracklist.get_consume": {"description": "Get consume mode.\\n\\n:class:`True`\\n    Tracks are removed from the tracklist when they have been played.\\n:class:`False`\\n    Tracks are not removed from the tracklist.", "params": []}, "core.tracklist.get_eot_tlid": {"description": "The TLID of the track that will be played after the current track.\\n\\nNot necessarily the same TLID as returned by :meth:`get_next_tlid`.\\n\\n:rtype: :class:`int` or :class:`None`\\n\\n.. versionadded:: 1.1", "params": []}, "core.tracklist.get_length": {"description": "Get length of the tracklist.", "params": []}, "core.tracklist.get_next_tlid": {"description": "The tlid of the track that will be played if calling\\n:meth:`mopidy.core.PlaybackController.next()`.\\n\\nFor normal playback this is the next track in the tracklist. If repeat\\nis enabled the next track can loop around the tracklist. When random is\\nenabled this should be a random track, all tracks should be played once\\nbefore the tracklist repeats.\\n\\n:rtype: :class:`int` or :class:`None`\\n\\n.. versionadded:: 1.1", "params": []}, "core.tracklist.get_previous_tlid": {"description": "Returns the TLID of the track that will be played if calling\\n:meth:`mopidy.core.PlaybackController.previous()`.\\n\\nFor normal playback this is the previous track in the tracklist. If\\nrandom and/or consume is enabled it should return the current track\\ninstead.\\n\\n:rtype: :class:`int` or :class:`None`\\n\\n.. versionadded:: 1.1", "params": []}, "core.tracklist.get_random": {"description": "Get random mode.\\n\\n:class:`True`\\n    Tracks are selected at random from the tracklist.\\n:class:`False`\\n    Tracks are played in the order of the tracklist.", "params": []}, "core.tracklist.get_repeat": {"description": "Get repeat mode.\\n\\n:class:`True`\\n    The tracklist is played repeatedly.\\n:class:`False`\\n    The tracklist is played once.", "params": []}, "core.tracklist.get_single": {"description": "Get single mode.\\n\\n:class:`True`\\n    Playback is stopped after current song, unless in ``repeat`` mode.\\n:class:`False`\\n    Playback continues after current song.", "params": []}, "core.tracklist.get_tl_tracks": {"description": "Get tracklist as list of :class:`mopidy.models.TlTrack`.", "params": []}, "core.tracklist.get_tracks": {"description": "Get tracklist as list of :class:`mopidy.models.Track`.", "params": []}, "core.tracklist.get_version": {"description": "Get the tracklist version.\\n\\nInteger which is increased every time the tracklist is changed. Is not\\nreset before Mopidy is restarted.", "params": []}, "core.tracklist.index": {"description": "The position of the given track in the tracklist.\\n\\nIf neither *tl_track* or *tlid* is given we return the index of\\nthe currently playing track.\\n\\n:param tl_track: the track to find the index of\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:param tlid: TLID of the track to find the index of\\n:type tlid: :class:`int` or :class:`None`\\n:rtype: :class:`int` or :class:`None`\\n\\n.. versionadded:: 1.1\\n    The *tlid* parameter", "params": [{"name": "tl_track", "default": null}, {"name": "tlid", "default": null}]}, "core.tracklist.move": {"description": "Move the tracks in the slice ``[start:end]`` to ``to_position``.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.\\n\\n:param start: position of first track to move\\n:type start: int\\n:param end: position after last track to move\\n:type end: int\\n:param to_position: new position for the tracks\\n:type to_position: int", "params": [{"name": "start"}, {"name": "end"}, {"name": "to_position"}]}, "core.tracklist.next_track": {"description": "The track that will be played if calling\\n:meth:`mopidy.core.PlaybackController.next()`.\\n\\nFor normal playback this is the next track in the tracklist. If repeat\\nis enabled the next track can loop around the tracklist. When random is\\nenabled this should be a random track, all tracks should be played once\\nbefore the tracklist repeats.\\n\\n.. deprecated:: 3.0\\n    Use :meth:`get_next_tlid` instead.\\n\\n:param tl_track: the reference track\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:rtype: :class:`mopidy.models.TlTrack` or :class:`None`", "params": [{"name": "tl_track"}]}, "core.tracklist.previous_track": {"description": "Returns the track that will be played if calling\\n:meth:`mopidy.core.PlaybackController.previous()`.\\n\\nFor normal playback this is the previous track in the tracklist. If\\nrandom and/or consume is enabled it should return the current track\\ninstead.\\n\\n.. deprecated:: 3.0\\n    Use :meth:`get_previous_tlid` instead.\\n\\n:param tl_track: the reference track\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:rtype: :class:`mopidy.models.TlTrack` or :class:`None`", "params": [{"name": "tl_track"}]}, "core.tracklist.remove": {"description": "Remove the matching tracks from the tracklist.\\n\\nUses :meth:`filter()` to lookup the tracks to remove.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.\\n\\n:param criteria: one or more rules to match by\\n:type criteria: dict, of (string, list) pairs\\n:rtype: list of :class:`mopidy.models.TlTrack` that were removed", "params": [{"name": "criteria"}]}, "core.tracklist.set_consume": {"description": "Set consume mode.\\n\\n:class:`True`\\n    Tracks are removed from the tracklist when they have been played.\\n:class:`False`\\n    Tracks are not removed from the tracklist.", "params": [{"name": "value"}]}, "core.tracklist.set_random": {"description": "Set random mode.\\n\\n:class:`True`\\n    Tracks are selected at random from the tracklist.\\n:class:`False`\\n    Tracks are played in the order of the tracklist.", "params": [{"name": "value"}]}, "core.tracklist.set_repeat": {"description": "Set repeat mode.\\n\\nTo repeat a single track, set both ``repeat`` and ``single``.\\n\\n:class:`True`\\n    The tracklist is played repeatedly.\\n:class:`False`\\n    The tracklist is played once.", "params": [{"name": "value"}]}, "core.tracklist.set_single": {"description": "Set single mode.\\n\\n:class:`True`\\n    Playback is stopped after current song, unless in ``repeat`` mode.\\n:class:`False`\\n    Playback continues after current song.", "params": [{"name": "value"}]}, "core.tracklist.shuffle": {"description": "Shuffles the entire tracklist. If ``start`` and ``end`` is given only\\nshuffles the slice ``[start:end]``.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.\\n\\n:param start: position of first track to shuffle\\n:type start: int or :class:`None`\\n:param end: position after last track to shuffle\\n:type end: int or :class:`None`", "params": [{"name": "start", "default": null}, {"name": "end", "default": null}]}, "core.tracklist.slice": {"description": "Returns a slice of the tracklist, limited by the given start and end\\npositions.\\n\\n:param start: position of first track to include in slice\\n:type start: int\\n:param end: position after last track to include in slice\\n:type end: int\\n:rtype: :class:`mopidy.models.TlTrack`", "params": [{"name": "start"}, {"name": "end"}]}}}'
okt 24 14:16:29 Desktop-Ubuntu mopidy[10440]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.describe","jsonrpc":"2.0","id":44}'
okt 24 14:16:29 Desktop-Ubuntu mopidy[10440]: DEBUG    [HttpServer] mopidy.http.handlers New WebSocket connection from 127.0.0.1
okt 24 14:16:29 Desktop-Ubuntu mopidy[10440]: INFO     [HttpServer] tornado.access 101 GET /mopidy/ws/ (127.0.0.1) 19.66ms
okt 24 14:16:29 Desktop-Ubuntu mopidy[10440]: DEBUG    [HttpFrontend-11 (_actor_loop)] mopidy.zeroconf Zeroconf service 'Mopidy HTTP server on Desktop-Ubuntu' (_mopidy-http._tcp at []:6680): Published
okt 24 14:16:29 Desktop-Ubuntu mopidy[10440]: DEBUG    [HttpFrontend-11 (_actor_loop)] mopidy.zeroconf Zeroconf service 'Mopidy HTTP server on Desktop-Ubuntu' (_http._tcp at []:6680): Published
okt 24 14:16:29 Desktop-Ubuntu mopidy[10440]:     '/': <class 'tornado.web.RedirectHandler'>
okt 24 14:16:29 Desktop-Ubuntu mopidy[10440]:     '/mopidy/': <class 'mopidy.http.handlers.ClientListHandler'>
okt 24 14:16:29 Desktop-Ubuntu mopidy[10440]:     '/mopidy/(.+)': <class 'mopidy.http.handlers.StaticFileHandler'>
okt 24 14:16:29 Desktop-Ubuntu mopidy[10440]:     '/mopidy/rpc': <class 'mopidy.http.handlers.JsonRpcHandler'>
okt 24 14:16:29 Desktop-Ubuntu mopidy[10440]:     '/mopidy/ws/?': <class 'mopidy.http.handlers.WebSocketHandler'>
okt 24 14:16:29 Desktop-Ubuntu mopidy[10440]:     '/mopidy': <class 'mopidy.http.handlers.AddSlashHandler'>
okt 24 14:16:29 Desktop-Ubuntu mopidy[10440]:     '/iris/(.*)': <class 'mopidy_iris.handlers.ReactRouterHandler'>
okt 24 14:16:29 Desktop-Ubuntu mopidy[10440]:     '/iris/((.*)(?:css|js|json|map)$)': <class 'tornado.web.StaticFileHandler'>
okt 24 14:16:29 Desktop-Ubuntu mopidy[10440]:     '/iris/assets/(.*)': <class 'tornado.web.StaticFileHandler'>
okt 24 14:16:29 Desktop-Ubuntu mopidy[10440]:     '/iris/ws/?': <class 'mopidy_iris.handlers.WebsocketHandler'>
okt 24 14:16:29 Desktop-Ubuntu mopidy[10440]:     '/iris/http/([^/]*)': <class 'mopidy_iris.handlers.HttpHandler'>
okt 24 14:16:29 Desktop-Ubuntu mopidy[10440]:     '/iris': <class 'mopidy.http.handlers.AddSlashHandler'>
okt 24 14:16:29 Desktop-Ubuntu mopidy[10440]:     '/local/(.+)': <class 'mopidy_local.web.ImageHandler'>
okt 24 14:16:29 Desktop-Ubuntu mopidy[10440]:     '/local/(index.html)?': <class 'mopidy_local.web.IndexHandler'>
okt 24 14:16:29 Desktop-Ubuntu mopidy[10440]:     '/local': <class 'mopidy.http.handlers.AddSlashHandler'>
okt 24 14:16:29 Desktop-Ubuntu mopidy[10440]: DEBUG    [HttpServer] mopidy.http.actor HTTP routes from extensions:
okt 24 14:16:29 Desktop-Ubuntu mopidy[10440]: DEBUG    [HttpServer] mopidy.http.actor Default webclient is mopidy
okt 24 14:16:29 Desktop-Ubuntu mopidy[10440]: DEBUG    [HttpServer] mopidy.http.actor Loaded HTTP extension: mopidy
okt 24 14:16:29 Desktop-Ubuntu mopidy[10440]: DEBUG    [HttpServer] mopidy.http.actor Loaded HTTP extension: iris
okt 24 14:16:29 Desktop-Ubuntu mopidy[10440]: DEBUG    [HttpServer] mopidy.http.actor Loaded HTTP extension: local
okt 24 14:16:29 Desktop-Ubuntu mopidy[10440]: DEBUG    [HttpServer] asyncio Using selector: EpollSelector
okt 24 14:16:29 Desktop-Ubuntu mopidy[10440]: INFO     [MainThread] mopidy.commands Starting GLib mainloop
okt 24 14:16:29 Desktop-Ubuntu mopidy[10440]: TRACE    [MainThread] mopidy.internal.timer HttpFrontend took 1ms
okt 24 14:16:29 Desktop-Ubuntu mopidy[10440]: INFO     [HttpFrontend-11 (_actor_loop)] mopidy.http.actor HTTP server running at [::ffff:127.0.0.1]:6680
okt 24 14:16:29 Desktop-Ubuntu mopidy[10440]: DEBUG    [MainThread] pykka Starting HttpFrontend (urn:uuid:0221a1b0-338b-4fb0-8f5c-938697f31994)
okt 24 14:16:29 Desktop-Ubuntu mopidy[10440]: DEBUG    [MainThread] pykka Registered HttpFrontend (urn:uuid:0221a1b0-338b-4fb0-8f5c-938697f31994)
okt 24 14:16:29 Desktop-Ubuntu mopidy[10440]: DEBUG    [MainThread] mopidy.http.actor Starting HTTP server
okt 24 14:16:29 Desktop-Ubuntu mopidy[10440]: TRACE    [MainThread] mopidy.internal.timer IrisFrontend took 0ms
okt 24 14:16:29 Desktop-Ubuntu mopidy[10440]: INFO     [IrisFrontend-9 (_actor_loop)] mopidy_iris.core Starting Iris 3.64.1
okt 24 14:16:29 Desktop-Ubuntu mopidy[10440]: DEBUG    [MainThread] pykka Starting IrisFrontend (urn:uuid:ef3f7a21-f44b-4da7-892d-d36c2f4e93bf)
okt 24 14:16:29 Desktop-Ubuntu mopidy[10440]: DEBUG    [MainThread] pykka Registered IrisFrontend (urn:uuid:ef3f7a21-f44b-4da7-892d-d36c2f4e93bf)
okt 24 14:16:29 Desktop-Ubuntu mopidy[10440]: TRACE    [MainThread] mopidy.internal.timer YTMusicScrobbleFE took 0ms
okt 24 14:16:29 Desktop-Ubuntu mopidy[10440]: DEBUG    [MainThread] pykka Starting YTMusicScrobbleFE (urn:uuid:77d614c4-4f57-40bc-8101-e86b6406f1bb)
okt 24 14:16:29 Desktop-Ubuntu mopidy[10440]: DEBUG    [MainThread] pykka Registered YTMusicScrobbleFE (urn:uuid:77d614c4-4f57-40bc-8101-e86b6406f1bb)
okt 24 14:16:29 Desktop-Ubuntu mopidy[10440]: INFO     [MainThread] mopidy.commands Starting Mopidy frontends: YTMusicScrobbleFE, IrisFrontend, HttpFrontend
okt 24 14:16:29 Desktop-Ubuntu mopidy[10440]: DEBUG    [MainThread] pykka Starting Core (urn:uuid:7e3e9b71-2f83-40a1-accf-5adf895d5115)
okt 24 14:16:29 Desktop-Ubuntu mopidy[10440]: DEBUG    [MainThread] pykka Registered Core (urn:uuid:7e3e9b71-2f83-40a1-accf-5adf895d5115)
okt 24 14:16:29 Desktop-Ubuntu mopidy[10440]: INFO     [MainThread] mopidy.commands Starting Mopidy core
okt 24 14:16:29 Desktop-Ubuntu mopidy[10440]: TRACE    [MainThread] mopidy.internal.timer StreamBackend took 5ms
okt 24 14:16:29 Desktop-Ubuntu mopidy[10440]: DEBUG    [MainThread] pykka Starting StreamBackend (urn:uuid:f54dd6ce-9bc9-477d-a221-d21ea7c5efa5)
okt 24 14:16:29 Desktop-Ubuntu mopidy[10440]: DEBUG    [MainThread] pykka Registered StreamBackend (urn:uuid:f54dd6ce-9bc9-477d-a221-d21ea7c5efa5)
okt 24 14:16:29 Desktop-Ubuntu mopidy[10440]: TRACE    [MainThread] mopidy.internal.timer M3UBackend took 1ms
okt 24 14:16:29 Desktop-Ubuntu mopidy[10440]: DEBUG    [MainThread] pykka Starting M3UBackend (urn:uuid:42e5307a-d54a-4fc2-a127-1bb2988e1f12)
okt 24 14:16:29 Desktop-Ubuntu mopidy[10440]: DEBUG    [MainThread] pykka Registered M3UBackend (urn:uuid:42e5307a-d54a-4fc2-a127-1bb2988e1f12)
okt 24 14:16:29 Desktop-Ubuntu mopidy[10440]: TRACE    [MainThread] mopidy.internal.timer FileBackend took 3ms
okt 24 14:16:29 Desktop-Ubuntu mopidy[10440]: DEBUG    [MainThread] pykka Starting FileBackend (urn:uuid:dec2f7d1-b513-44b1-b963-acf385b158f9)
okt 24 14:16:29 Desktop-Ubuntu mopidy[10440]: DEBUG    [MainThread] pykka Registered FileBackend (urn:uuid:dec2f7d1-b513-44b1-b963-acf385b158f9)
okt 24 14:16:29 Desktop-Ubuntu mopidy[10440]: DEBUG    [MainThread] mopidy.file.library Failed expanding path ($XDG_MUSIC_DIR) from file/media_dirs config value.
okt 24 14:16:29 Desktop-Ubuntu mopidy[10440]: INFO     [Audio-2 (_actor_loop)] mopidy.audio.actor Audio output set to "pulsesink server=127.0.0.1"
okt 24 14:16:29 Desktop-Ubuntu mopidy[10440]: AttributeError: 'YTMusic' object has no attribute 'headers'
okt 24 14:16:29 Desktop-Ubuntu mopidy[10440]:     if 'x-goog-visitor-id' not in self.headers:
okt 24 14:16:29 Desktop-Ubuntu mopidy[10440]:   File "/usr/local/lib/python3.10/dist-packages/ytmusicapi/ytmusic.py", line 98, in __init__
okt 24 14:16:29 Desktop-Ubuntu mopidy[10440]:     self.api = YTMusic(self._ytmusicapi_auth_json)
okt 24 14:16:29 Desktop-Ubuntu mopidy[10440]:   File "/usr/local/lib/python3.10/dist-packages/mopidy_ytmusic/backend.py", line 65, in __init__
okt 24 14:16:29 Desktop-Ubuntu mopidy[10440]:     obj = cls(*args, **kwargs)
okt 24 14:16:29 Desktop-Ubuntu mopidy[10440]:   File "/usr/lib/python3/dist-packages/pykka/_actor.py", line 91, in start
okt 24 14:16:29 Desktop-Ubuntu mopidy[10440]:     backend = backend_class.start(
okt 24 14:16:29 Desktop-Ubuntu mopidy[10440]:   File "/usr/lib/python3/dist-packages/mopidy/commands.py", line 412, in start_backends
okt 24 14:16:29 Desktop-Ubuntu mopidy[10440]:     yield
okt 24 14:16:29 Desktop-Ubuntu mopidy[10440]:   File "/usr/lib/python3/dist-packages/mopidy/commands.py", line 248, in _actor_error_handling
okt 24 14:16:29 Desktop-Ubuntu mopidy[10440]: Traceback (most recent call last):
okt 24 14:16:29 Desktop-Ubuntu mopidy[10440]: ERROR    [MainThread] mopidy.commands Got un-handled exception from YTMusicBackend
okt 24 14:16:29 Desktop-Ubuntu mopidy[10440]: TRACE    [MainThread] mopidy.internal.timer LocalBackend took 4ms
okt 24 14:16:29 Desktop-Ubuntu mopidy[10440]: DEBUG    [MainThread] pykka Starting LocalBackend (urn:uuid:47253b54-ddb6-4f37-994f-1ba80a5a1085)
okt 24 14:16:29 Desktop-Ubuntu mopidy[10440]: DEBUG    [MainThread] pykka Registered LocalBackend (urn:uuid:47253b54-ddb6-4f37-994f-1ba80a5a1085)
okt 24 14:16:29 Desktop-Ubuntu mopidy[10440]: INFO     [MainThread] mopidy.commands Starting Mopidy backends: LocalBackend, YTMusicBackend, FileBackend, M3UBackend, StreamBackend
okt 24 14:16:29 Desktop-Ubuntu mopidy[10440]: DEBUG    [MainThread] pykka Starting Audio (urn:uuid:89755082-a847-4545-966a-1275c68788a0)
okt 24 14:16:29 Desktop-Ubuntu mopidy[10440]: DEBUG    [MainThread] pykka Registered Audio (urn:uuid:89755082-a847-4545-966a-1275c68788a0)
okt 24 14:16:29 Desktop-Ubuntu mopidy[10440]: INFO     [MainThread] mopidy.commands Starting Mopidy audio
okt 24 14:16:29 Desktop-Ubuntu mopidy[10440]: DEBUG    [MainThread] mopidy.commands Mixer volume left unchanged
okt 24 14:16:29 Desktop-Ubuntu mopidy[10440]: DEBUG    [MainThread] pykka Starting SoftwareMixer (urn:uuid:30aeabe5-c2e2-4d18-9f1d-b2d589f46b30)
okt 24 14:16:29 Desktop-Ubuntu mopidy[10440]: DEBUG    [MainThread] pykka Registered SoftwareMixer (urn:uuid:30aeabe5-c2e2-4d18-9f1d-b2d589f46b30)
okt 24 14:16:29 Desktop-Ubuntu mopidy[10440]: INFO     [MainThread] mopidy.commands Starting Mopidy mixer: SoftwareMixer
okt 24 14:16:29 Desktop-Ubuntu mopidy[10440]: DEBUG    [MainThread] mopidy.commands Available Mopidy mixers: SoftwareMixer
okt 24 14:16:29 Desktop-Ubuntu mopidy[10440]: INFO     [MainThread] mopidy.__main__ Disabled extensions: youtube, soundcloud
okt 24 14:16:29 Desktop-Ubuntu mopidy[10440]: INFO     [MainThread] mopidy.__main__ Enabled extensions: softwaremixer, stream, m3u, local, iris, file, ytmusic, http
okt 24 14:16:29 Desktop-Ubuntu mopidy[10440]: DEBUG    [MainThread] mopidy.ext Validating extension: stream
okt 24 14:16:29 Desktop-Ubuntu mopidy[10440]: DEBUG    [MainThread] mopidy.ext Validating extension: softwaremixer
okt 24 14:16:29 Desktop-Ubuntu mopidy[10440]: DEBUG    [MainThread] mopidy.ext Validating extension: m3u
okt 24 14:16:29 Desktop-Ubuntu mopidy[10440]: DEBUG    [MainThread] mopidy.ext Validating extension: http
okt 24 14:16:29 Desktop-Ubuntu mopidy[10440]: DEBUG    [MainThread] mopidy.ext Validating extension: file
okt 24 14:16:29 Desktop-Ubuntu mopidy[10440]: DEBUG    [MainThread] mopidy.ext Validating extension: iris
okt 24 14:16:28 Desktop-Ubuntu mopidy[10440]: DEBUG    [MainThread] mopidy.ext Validating extension: ytmusic
okt 24 14:16:28 Desktop-Ubuntu mopidy[10440]: DEBUG    [MainThread] mopidy.ext Validating extension: soundcloud
okt 24 14:16:28 Desktop-Ubuntu mopidy[10440]: DEBUG    [MainThread] mopidy.ext Validating extension: local
okt 24 14:16:28 Desktop-Ubuntu mopidy[10440]: DEBUG    [MainThread] mopidy.ext Validating extension: youtube
okt 24 14:16:28 Desktop-Ubuntu mopidy[10440]: WARNING  [MainThread] mopidy.config Ignoring config section 'jukebox' because no matching extension was found
okt 24 14:16:28 Desktop-Ubuntu mopidy[10440]: INFO     [MainThread] mopidy.config Loading config from command line options
okt 24 14:16:28 Desktop-Ubuntu mopidy[10440]: INFO     [MainThread] mopidy.config Loading config from file:///etc/mopidy/mopidy.conf
okt 24 14:16:28 Desktop-Ubuntu mopidy[10440]: INFO     [MainThread] mopidy.config Loading config from file:///usr/share/mopidy/conf.d/mopidy.conf
okt 24 14:16:28 Desktop-Ubuntu mopidy[10440]: INFO     [MainThread] mopidy.config Loading config from builtin defaults
okt 24 14:16:28 Desktop-Ubuntu mopidy[10440]: DEBUG    [MainThread] mopidy.config.keyring Fetching passwords from your keyring failed. Any passwords stored in the keyring will not be available. (org.freedesktop.DBus.Error.NotSupported: Unable to autolaunch a dbus-daemon without a $DISPLAY for X11)
okt 24 14:16:28 Desktop-Ubuntu mopidy[10440]: DEBUG    [MainThread] mopidy.ext Discovered extensions: youtube, local, soundcloud, ytmusic, iris, file, http, m3u, softwaremixer, stream
okt 24 14:16:28 Desktop-Ubuntu mopidy[10440]: DEBUG    [MainThread] mopidy.ext Loaded extension: Mopidy-Stream 3.3.0
okt 24 14:16:28 Desktop-Ubuntu mopidy[10440]: DEBUG    [MainThread] mopidy.ext Loading entry point: stream = mopidy.stream:Extension
okt 24 14:16:28 Desktop-Ubuntu mopidy[10440]: DEBUG    [MainThread] mopidy.ext Loaded extension: Mopidy-SoftwareMixer 3.3.0
okt 24 14:16:28 Desktop-Ubuntu mopidy[10440]: DEBUG    [MainThread] mopidy.ext Loading entry point: softwaremixer = mopidy.softwaremixer:Extension
okt 24 14:16:28 Desktop-Ubuntu mopidy[10440]: DEBUG    [MainThread] mopidy.ext Loaded extension: Mopidy-M3U 3.3.0
okt 24 14:16:28 Desktop-Ubuntu mopidy[10440]: DEBUG    [MainThread] mopidy.ext Loading entry point: m3u = mopidy.m3u:Extension
okt 24 14:16:28 Desktop-Ubuntu mopidy[10440]: DEBUG    [MainThread] mopidy.ext Loaded extension: Mopidy-HTTP 3.3.0
okt 24 14:16:28 Desktop-Ubuntu mopidy[10440]: DEBUG    [MainThread] mopidy.ext Loading entry point: http = mopidy.http:Extension
okt 24 14:16:28 Desktop-Ubuntu mopidy[10440]: DEBUG    [MainThread] mopidy.ext Loaded extension: Mopidy-File 3.3.0
okt 24 14:16:28 Desktop-Ubuntu mopidy[10440]: DEBUG    [MainThread] mopidy.ext Loading entry point: file = mopidy.file:Extension
okt 24 14:16:28 Desktop-Ubuntu mopidy[10440]: DEBUG    [MainThread] mopidy.ext Loaded extension: Mopidy-Iris 3.64.1
okt 24 14:16:28 Desktop-Ubuntu mopidy[10440]: DEBUG    [MainThread] mopidy.ext Loading entry point: iris = mopidy_iris:Extension
okt 24 14:16:28 Desktop-Ubuntu mopidy[10440]: DEBUG    [MainThread] mopidy.ext Loaded extension: Mopidy-YTMusic 0.3.7
okt 24 14:16:28 Desktop-Ubuntu mopidy[10440]: DEBUG    [MainThread] mopidy.ext Loading entry point: ytmusic = mopidy_ytmusic:Extension
okt 24 14:16:28 Desktop-Ubuntu mopidy[10440]: DEBUG    [MainThread] mopidy.ext Loaded extension: Mopidy-SoundCloud 3.0.1
okt 24 14:16:28 Desktop-Ubuntu mopidy[10440]: DEBUG    [MainThread] mopidy.ext Loading entry point: soundcloud = mopidy_soundcloud:Extension
okt 24 14:16:28 Desktop-Ubuntu mopidy[10440]: DEBUG    [MainThread] mopidy.ext Loaded extension: Mopidy-Local 3.2.1
okt 24 14:16:28 Desktop-Ubuntu mopidy[10440]: DEBUG    [MainThread] mopidy.ext Loading entry point: local = mopidy_local:Extension
okt 24 14:16:28 Desktop-Ubuntu mopidy[10440]: DEBUG    [MainThread] mopidy.ext Loaded extension: Mopidy-YouTube 3.6.1
okt 24 14:16:28 Desktop-Ubuntu mopidy[10440]: DEBUG    [MainThread] mopidy.ext Loading entry point: youtube = mopidy_youtube:Extension
okt 24 14:16:28 Desktop-Ubuntu mopidy[10440]: INFO     [MainThread] mopidy.__main__ Starting Mopidy 3.3.0
okt 24 14:16:28 Desktop-Ubuntu systemd[1]: Started Mopidy music server.
okt 24 14:16:28 Desktop-Ubuntu systemd[1]: Starting Mopidy music server...
okt 24 14:16:28 Desktop-Ubuntu systemd[1]: Stopped Mopidy music server.
okt 24 14:16:28 Desktop-Ubuntu systemd[1]: mopidy.service: Deactivated successfully.
okt 24 14:16:28 Desktop-Ubuntu mopidy[10268]: Failed loading provided credentials. Make sure to provide a string or a file path. Reason: Expecting value: line 1 column 1 (char 0)
okt 24 14:16:28 Desktop-Ubuntu mopidy[10268]: DEBUG    [MainThread] mopidy.internal.process All actors stopped.
okt 24 14:16:28 Desktop-Ubuntu mopidy[10268]: DEBUG    [SoftwareMixer-1 (_actor_loop)] pykka Stopped SoftwareMixer (urn:uuid:dadf7c90-00a6-419a-9211-8aa2f245765f)
okt 24 14:16:28 Desktop-Ubuntu mopidy[10268]: DEBUG    [SoftwareMixer-1 (_actor_loop)] pykka Unregistered SoftwareMixer (urn:uuid:dadf7c90-00a6-419a-9211-8aa2f245765f)
okt 24 14:16:28 Desktop-Ubuntu mopidy[10268]: DEBUG    [MainThread] mopidy.internal.process Stopping 1 instance(s) of SoftwareMixer
okt 24 14:16:28 Desktop-Ubuntu mopidy[10268]: INFO     [MainThread] mopidy.commands Stopping Mopidy mixer
okt 24 14:16:28 Desktop-Ubuntu mopidy[10268]: DEBUG    [Audio-2 (_actor_loop)] pykka Stopped Audio (urn:uuid:fce7fed3-9fe4-4ead-afbc-5570d79be61e)
okt 24 14:16:28 Desktop-Ubuntu mopidy[10268]: DEBUG    [Audio-2 (_actor_loop)] pykka Unregistered Audio (urn:uuid:fce7fed3-9fe4-4ead-afbc-5570d79be61e)
okt 24 14:16:28 Desktop-Ubuntu mopidy[10268]: DEBUG    [MainThread] mopidy.internal.process Stopping 1 instance(s) of Audio
okt 24 14:16:28 Desktop-Ubuntu mopidy[10268]: INFO     [MainThread] mopidy.commands Stopping Mopidy audio
okt 24 14:16:28 Desktop-Ubuntu mopidy[10268]: DEBUG    [StreamBackend-6 (_actor_loop)] pykka Stopped StreamBackend (urn:uuid:9c892990-df20-410d-b906-fd22967ce8c6)
okt 24 14:16:28 Desktop-Ubuntu mopidy[10268]: DEBUG    [StreamBackend-6 (_actor_loop)] pykka Unregistered StreamBackend (urn:uuid:9c892990-df20-410d-b906-fd22967ce8c6)
okt 24 14:16:28 Desktop-Ubuntu mopidy[10268]: DEBUG    [MainThread] mopidy.internal.process Stopping 1 instance(s) of StreamBackend
okt 24 14:16:28 Desktop-Ubuntu mopidy[10268]: DEBUG    [M3UBackend-5 (_actor_loop)] pykka Stopped M3UBackend (urn:uuid:a8ebc45a-7eb9-4ee6-9c86-9b944b7ae581)
okt 24 14:16:28 Desktop-Ubuntu mopidy[10268]: DEBUG    [M3UBackend-5 (_actor_loop)] pykka Unregistered M3UBackend (urn:uuid:a8ebc45a-7eb9-4ee6-9c86-9b944b7ae581)
okt 24 14:16:28 Desktop-Ubuntu mopidy[10268]: DEBUG    [MainThread] mopidy.internal.process Stopping 1 instance(s) of M3UBackend
okt 24 14:16:28 Desktop-Ubuntu mopidy[10268]: DEBUG    [FileBackend-4 (_actor_loop)] pykka Stopped FileBackend (urn:uuid:bb22cea8-fdd1-48f7-93f4-8b1566bb04db)
okt 24 14:16:28 Desktop-Ubuntu mopidy[10268]: DEBUG    [FileBackend-4 (_actor_loop)] pykka Unregistered FileBackend (urn:uuid:bb22cea8-fdd1-48f7-93f4-8b1566bb04db)
okt 24 14:16:28 Desktop-Ubuntu mopidy[10268]: DEBUG    [MainThread] mopidy.internal.process Stopping 1 instance(s) of FileBackend
okt 24 14:16:28 Desktop-Ubuntu mopidy[10268]: DEBUG    [MainThread] mopidy.internal.process Stopping 0 instance(s) of YTMusicBackend
okt 24 14:16:28 Desktop-Ubuntu mopidy[10268]: DEBUG    [LocalBackend-3 (_actor_loop)] pykka Stopped LocalBackend (urn:uuid:49218155-335a-49fc-93a0-18bd4135ef32)
okt 24 14:16:28 Desktop-Ubuntu mopidy[10268]: DEBUG    [LocalBackend-3 (_actor_loop)] pykka Unregistered LocalBackend (urn:uuid:49218155-335a-49fc-93a0-18bd4135ef32)
okt 24 14:16:28 Desktop-Ubuntu mopidy[10268]: DEBUG    [MainThread] mopidy.internal.process Stopping 1 instance(s) of LocalBackend
okt 24 14:16:28 Desktop-Ubuntu mopidy[10268]: INFO     [MainThread] mopidy.commands Stopping Mopidy backends
okt 24 14:16:28 Desktop-Ubuntu mopidy[10268]: DEBUG    [Core-7 (_actor_loop)] pykka Stopped Core (urn:uuid:8c81747a-c536-41ba-b1f1-c99294112132)
okt 24 14:16:28 Desktop-Ubuntu mopidy[10268]: DEBUG    [Core-7 (_actor_loop)] pykka Unregistered Core (urn:uuid:8c81747a-c536-41ba-b1f1-c99294112132)
okt 24 14:16:28 Desktop-Ubuntu mopidy[10268]: DEBUG    [MainThread] mopidy.internal.process Stopping 1 instance(s) of Core
okt 24 14:16:28 Desktop-Ubuntu mopidy[10268]: DEBUG    [HttpServer] mopidy.http.actor Stopped HTTP server
okt 24 14:16:28 Desktop-Ubuntu mopidy[10268]: INFO     [MainThread] mopidy.commands Stopping Mopidy core
okt 24 14:16:28 Desktop-Ubuntu mopidy[10268]: DEBUG    [HttpFrontend-11 (_actor_loop)] mopidy.http.actor Stopping HTTP server
okt 24 14:16:28 Desktop-Ubuntu mopidy[10268]: DEBUG    [HttpFrontend-11 (_actor_loop)] mopidy.zeroconf Zeroconf service 'Mopidy HTTP server on Desktop-Ubuntu' (_mopidy-http._tcp at []:6680): Unpublished
okt 24 14:16:28 Desktop-Ubuntu mopidy[10268]: DEBUG    [HttpFrontend-11 (_actor_loop)] mopidy.zeroconf Zeroconf service 'Mopidy HTTP server on Desktop-Ubuntu' (_http._tcp at []:6680): Unpublished
okt 24 14:16:28 Desktop-Ubuntu mopidy[10268]: DEBUG    [HttpFrontend-11 (_actor_loop)] pykka Stopped HttpFrontend (urn:uuid:5d158a59-7f7c-47e2-a657-5b9412c931e0)
okt 24 14:16:28 Desktop-Ubuntu mopidy[10268]: DEBUG    [HttpFrontend-11 (_actor_loop)] pykka Unregistered HttpFrontend (urn:uuid:5d158a59-7f7c-47e2-a657-5b9412c931e0)
okt 24 14:16:28 Desktop-Ubuntu mopidy[10268]: DEBUG    [MainThread] mopidy.internal.process Stopping 1 instance(s) of HttpFrontend
okt 24 14:16:28 Desktop-Ubuntu mopidy[10268]: INFO     [IrisFrontend-9 (_actor_loop)] mopidy_iris.core Stopping Iris
okt 24 14:16:28 Desktop-Ubuntu mopidy[10268]: DEBUG    [IrisFrontend-9 (_actor_loop)] pykka Stopped IrisFrontend (urn:uuid:24373e1d-17ec-49d3-8369-95fb817af2b4)
okt 24 14:16:28 Desktop-Ubuntu mopidy[10268]: DEBUG    [IrisFrontend-9 (_actor_loop)] pykka Unregistered IrisFrontend (urn:uuid:24373e1d-17ec-49d3-8369-95fb817af2b4)
okt 24 14:16:28 Desktop-Ubuntu mopidy[10268]: DEBUG    [MainThread] mopidy.internal.process Stopping 1 instance(s) of IrisFrontend
okt 24 14:16:28 Desktop-Ubuntu systemd[1]: Stopping Mopidy music server...
okt 24 14:16:28 Desktop-Ubuntu mopidy[10268]: DEBUG    [YTMusicScrobbleFE-8 (_actor_loop)] pykka Stopped YTMusicScrobbleFE (urn:uuid:a4ccdb8f-e259-4305-9abc-34994836b8c1)
okt 24 14:16:28 Desktop-Ubuntu mopidy[10268]: DEBUG    [YTMusicScrobbleFE-8 (_actor_loop)] pykka Unregistered YTMusicScrobbleFE (urn:uuid:a4ccdb8f-e259-4305-9abc-34994836b8c1)
okt 24 14:16:28 Desktop-Ubuntu mopidy[10268]: DEBUG    [MainThread] mopidy.internal.process Stopping 1 instance(s) of YTMusicScrobbleFE
okt 24 14:16:28 Desktop-Ubuntu mopidy[10268]: INFO     [MainThread] mopidy.commands Stopping Mopidy frontends
okt 24 14:16:28 Desktop-Ubuntu mopidy[10268]: INFO     [MainThread] mopidy.commands GLib mainloop got SIGTERM. Exiting...
okt 24 14:14:23 Desktop-Ubuntu mopidy[10268]: DEBUG    [HttpServer] mopidy_iris.core {'id': 16666136630754, 'jsonrpc': '2.0', 'method': 'get_version', 'result': {'version': {'current': '3.64.1', 'latest': '3.64.1', 'is_root': False, 'upgrade_available': False}}, 'recipient': 'EOS7CVOAS1M7'}
okt 24 14:14:23 Desktop-Ubuntu mopidy[10268]: DEBUG    [HttpServer] mopidy_iris.handlers Iris websocket message received: {"jsonrpc":"2.0","id":16666136630754,"method":"get_version"}
okt 24 14:14:22 Desktop-Ubuntu mopidy[10268]: DEBUG    [HttpServer] mopidy_iris.core {'id': 166661366257492, 'jsonrpc': '2.0', 'method': 'get_queue_metadata', 'result': {'queue_metadata': {}}, 'recipient': 'EOS7CVOAS1M7'}
okt 24 14:14:22 Desktop-Ubuntu mopidy[10268]: DEBUG    [HttpServer] mopidy_iris.handlers Iris websocket message received: {"jsonrpc":"2.0","id":166661366257492,"method":"get_queue_metadata"}
okt 24 14:14:22 Desktop-Ubuntu mopidy[10268]: DEBUG    [HttpServer] mopidy_iris.core {'id': 166661366257397, 'jsonrpc': '2.0', 'method': 'get_pinned', 'result': {'pinned': []}, 'recipient': 'EOS7CVOAS1M7'}
okt 24 14:14:22 Desktop-Ubuntu mopidy[10268]: DEBUG    [HttpServer] mopidy_iris.handlers Iris websocket message received: {"jsonrpc":"2.0","id":166661366257397,"method":"get_pinned"}
okt 24 14:14:22 Desktop-Ubuntu mopidy[10268]: DEBUG    [HttpServer] mopidy_iris.core {'id': 166661366257216, 'jsonrpc': '2.0', 'method': 'get_commands', 'result': {'commands': {}}, 'recipient': 'EOS7CVOAS1M7'}
okt 24 14:14:22 Desktop-Ubuntu mopidy[10268]: DEBUG    [HttpServer] mopidy_iris.handlers Iris websocket message received: {"jsonrpc":"2.0","id":166661366257216,"method":"get_commands"}
okt 24 14:14:22 Desktop-Ubuntu mopidy[10268]: DEBUG    [HttpServer] mopidy_iris.core {'id': 166661366257070, 'jsonrpc': '2.0', 'method': 'get_radio', 'result': {'radio': {'enabled': 0, 'seed_artists': [], 'seed_genres': [], 'seed_tracks': [], 'results': []}}, 'recipient': 'EOS7CVOAS1M7'}
okt 24 14:14:22 Desktop-Ubuntu mopidy[10268]: DEBUG    [HttpServer] mopidy_iris.handlers Iris websocket message received: {"jsonrpc":"2.0","id":166661366257070,"method":"get_radio"}
okt 24 14:14:22 Desktop-Ubuntu mopidy[10268]: DEBUG    [HttpServer] mopidy_iris.core {'id': 16666136625709, 'jsonrpc': '2.0', 'method': 'get_shared_config', 'result': {'shared_config': {}}, 'recipient': 'EOS7CVOAS1M7'}
okt 24 14:14:22 Desktop-Ubuntu mopidy[10268]: DEBUG    [HttpServer] mopidy_iris.handlers Iris websocket message received: {"jsonrpc":"2.0","id":16666136625709,"method":"get_shared_config"}
okt 24 14:14:22 Desktop-Ubuntu mopidy[10268]: DEBUG    [HttpServer] mopidy_iris.core {'id': 16666136625698, 'jsonrpc': '2.0', 'method': 'get_config', 'result': {'config': {'is_root': False, 'spotify_username': False, 'country': 'NZ', 'locale': 'en_NZ', 'snapcast_enabled': True, 'snapcast_host': 'localhost', 'snapcast_port': '1780', 'snapcast_ssl': False, 'snapcast_stream': 'Default', 'spotify_authorization_url': 'https://jamesbarnsley.co.nz/iris/auth_spotify.php', 'lastfm_authorization_url': 'https://jamesbarnsley.co.nz/iris/auth_lastfm.php', 'genius_authorization_url': 'https://jamesbarnsley.co.nz/iris/auth_genius.php', 'shared_config': {}}}, 'recipient': 'EOS7CVOAS1M7'}
okt 24 14:14:22 Desktop-Ubuntu mopidy[10268]: DEBUG    [HttpServer] mopidy_iris.handlers Iris websocket message received: {"jsonrpc":"2.0","id":16666136625698,"method":"get_config"}
okt 24 14:14:22 Desktop-Ubuntu mopidy[10268]: DEBUG    [HttpServer] mopidy_iris.core {'id': 166661366256719, 'jsonrpc': '2.0', 'method': 'update_connection', 'result': {'connection': {'connection_id': 'EOS7CVOAS1M7', 'ip': '127.0.0.1', 'created': '2022-10-24 14:14:22', 'username': 166656148284185, 'client_id': 166656148284193}}, 'recipient': 'EOS7CVOAS1M7'}
okt 24 14:14:22 Desktop-Ubuntu mopidy[10268]: DEBUG    [HttpServer] mopidy_iris.core {'method': 'connection_changed', 'params': {'connection': {'connection_id': 'EOS7CVOAS1M7', 'ip': '127.0.0.1', 'created': '2022-10-24 14:14:22', 'username': 166656148284185, 'client_id': 166656148284193}}}
okt 24 14:14:22 Desktop-Ubuntu mopidy[10268]: DEBUG    [HttpServer] mopidy_iris.handlers Iris websocket message received: {"jsonrpc":"2.0","id":166661366256719,"method":"update_connection","params":{"username":166656148284185,"client_id":166656148284193}}
okt 24 14:14:22 Desktop-Ubuntu mopidy[10268]: DEBUG    [HttpServer] mopidy_iris.core {'method': 'connection_added', 'params': {'connection': {'connection_id': 'EOS7CVOAS1M7', 'ip': '127.0.0.1', 'created': '2022-10-24 14:14:22'}}}
okt 24 14:14:22 Desktop-Ubuntu mopidy[10268]: DEBUG    [HttpServer] mopidy_iris.core <mopidy_iris.handlers.WebsocketHandler object at 0x7f0a343f44f0>
okt 24 14:14:22 Desktop-Ubuntu mopidy[10268]: DEBUG    [HttpServer] mopidy_iris.core Connection added
okt 24 14:14:22 Desktop-Ubuntu mopidy[10268]: INFO     [HttpServer] tornado.access 101 GET /iris/ws/ (127.0.0.1) 0.52ms
okt 24 14:14:18 Desktop-Ubuntu mopidy[10268]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 43, "result": null}'
okt 24 14:14:18 Desktop-Ubuntu mopidy[10268]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.playback.get_stream_title","params":{},"jsonrpc":"2.0","id":43}'
okt 24 14:14:18 Desktop-Ubuntu mopidy[10268]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 42, "result": ["file", "http", "https", "local", "m3u", "rtsp"]}'
okt 24 14:14:18 Desktop-Ubuntu mopidy[10268]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.get_uri_schemes","params":{},"jsonrpc":"2.0","id":42}'
okt 24 14:14:18 Desktop-Ubuntu mopidy[10268]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 41, "result": 0}'
okt 24 14:14:18 Desktop-Ubuntu mopidy[10268]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.playback.get_time_position","params":{},"jsonrpc":"2.0","id":41}'
okt 24 14:14:18 Desktop-Ubuntu mopidy[10268]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 40, "result": []}'
okt 24 14:14:18 Desktop-Ubuntu mopidy[10268]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_tl_tracks","params":{},"jsonrpc":"2.0","id":40}'
okt 24 14:14:18 Desktop-Ubuntu mopidy[10268]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 39, "result": false}'
okt 24 14:14:18 Desktop-Ubuntu mopidy[10268]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_repeat","params":{},"jsonrpc":"2.0","id":39}'
okt 24 14:14:18 Desktop-Ubuntu mopidy[10268]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 38, "result": false}'
okt 24 14:14:18 Desktop-Ubuntu mopidy[10268]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_random","params":{},"jsonrpc":"2.0","id":38}'
okt 24 14:14:18 Desktop-Ubuntu mopidy[10268]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 37, "result": false}'
okt 24 14:14:18 Desktop-Ubuntu mopidy[10268]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_consume","params":{},"jsonrpc":"2.0","id":37}'
okt 24 14:14:18 Desktop-Ubuntu mopidy[10268]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 36, "result": false}'
okt 24 14:14:18 Desktop-Ubuntu mopidy[10268]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.mixer.get_mute","params":{},"jsonrpc":"2.0","id":36}'
okt 24 14:14:18 Desktop-Ubuntu mopidy[10268]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 35, "result": 100}'
okt 24 14:14:18 Desktop-Ubuntu mopidy[10268]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.mixer.get_volume","params":{},"jsonrpc":"2.0","id":35}'
okt 24 14:14:18 Desktop-Ubuntu mopidy[10268]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 34, "result": "stopped"}'
okt 24 14:14:18 Desktop-Ubuntu mopidy[10268]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.playback.get_state","params":{},"jsonrpc":"2.0","id":34}'
okt 24 14:14:18 Desktop-Ubuntu mopidy[10268]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 33, "result": null}'
okt 24 14:14:18 Desktop-Ubuntu mopidy[10268]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.playback.get_current_tl_track","params":{},"jsonrpc":"2.0","id":33}'
okt 24 14:14:18 Desktop-Ubuntu mopidy[10268]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 32, "result": {"core.get_uri_schemes": {"description": "Get list of URI schemes we can handle", "params": []}, "core.get_version": {"description": "Get version of the Mopidy core API", "params": []}, "core.history.get_history": {"description": "Get the track history.\\n\\nThe timestamps are milliseconds since epoch.\\n\\n:returns: the track history\\n:rtype: list of (timestamp, :class:`mopidy.models.Ref`) tuples", "params": []}, "core.history.get_length": {"description": "Get the number of tracks in the history.\\n\\n:returns: the history length\\n:rtype: int", "params": []}, "core.library.browse": {"description": "Browse directories and tracks at the given ``uri``.\\n\\n``uri`` is a string which represents some directory belonging to a\\nbackend. To get the intial root directories for backends pass\\n:class:`None` as the URI.\\n\\nReturns a list of :class:`mopidy.models.Ref` objects for the\\ndirectories and tracks at the given ``uri``.\\n\\nThe :class:`~mopidy.models.Ref` objects representing tracks keep the\\ntrack\'s original URI. A matching pair of objects can look like this::\\n\\n    Track(uri=\'dummy:/foo.mp3\', name=\'foo\', artists=..., album=...)\\n    Ref.track(uri=\'dummy:/foo.mp3\', name=\'foo\')\\n\\nThe :class:`~mopidy.models.Ref` objects representing directories have\\nbackend specific URIs. These are opaque values, so no one but the\\nbackend that created them should try and derive any meaning from them.\\nThe only valid exception to this is checking the scheme, as it is used\\nto route browse requests to the correct backend.\\n\\nFor example, the dummy library\'s ``/bar`` directory could be returned\\nlike this::\\n\\n    Ref.directory(uri=\'dummy:directory:/bar\', name=\'bar\')\\n\\n:param string uri: URI to browse\\n:rtype: list of :class:`mopidy.models.Ref`\\n\\n.. versionadded:: 0.18", "params": [{"name": "uri"}]}, "core.library.get_distinct": {"description": "List distinct values for a given field from the library.\\n\\nThis has mainly been added to support the list commands the MPD\\nprotocol supports in a more sane fashion. Other frontends are not\\nrecommended to use this method.\\n\\n:param string field: Any one of ``uri``, ``track_name``, ``album``,\\n    ``artist``, ``albumartist``, ``composer``, ``performer``,\\n    ``track_no``, ``genre``, ``date``, ``comment``, ``disc_no``,\\n    ``musicbrainz_albumid``, ``musicbrainz_artistid``, or\\n    ``musicbrainz_trackid``.\\n:param dict query: Query to use for limiting results, see\\n    :meth:`search` for details about the query format.\\n:rtype: set of values corresponding to the requested field type.\\n\\n.. versionadded:: 1.0", "params": [{"name": "field"}, {"name": "query", "default": null}]}, "core.library.get_images": {"description": "Lookup the images for the given URIs\\n\\nBackends can use this to return image URIs for any URI they know about\\nbe it tracks, albums, playlists. The lookup result is a dictionary\\nmapping the provided URIs to lists of images.\\n\\nUnknown URIs or URIs the corresponding backend couldn\'t find anything\\nfor will simply return an empty list for that URI.\\n\\n:param uris: list of URIs to find images for\\n:type uris: list of string\\n:rtype: {uri: tuple of :class:`mopidy.models.Image`}\\n\\n.. versionadded:: 1.0", "params": [{"name": "uris"}]}, "core.library.lookup": {"description": "Lookup the given URIs.\\n\\nIf the URI expands to multiple tracks, the returned list will contain\\nthem all.\\n\\n:param uris: track URIs\\n:type uris: list of string\\n:rtype: {uri: list of :class:`mopidy.models.Track`}", "params": [{"name": "uris"}]}, "core.library.refresh": {"description": "Refresh library. Limit to URI and below if an URI is given.\\n\\n:param uri: directory or track URI\\n:type uri: string", "params": [{"name": "uri", "default": null}]}, "core.library.search": {"description": "Search the library for tracks where ``field`` contains ``values``.\\n\\n``field`` can be one of ``uri``, ``track_name``, ``album``, ``artist``,\\n``albumartist``, ``composer``, ``performer``, ``track_no``, ``genre``,\\n``date``, ``comment``, ``disc_no``, ``musicbrainz_albumid``,\\n``musicbrainz_artistid``, ``musicbrainz_trackid`` or ``any``.\\n\\nIf ``uris`` is given, the search is limited to results from within the\\nURI roots. For example passing ``uris=[\'file:\']`` will limit the search\\nto the local backend.\\n\\nExamples::\\n\\n    # Returns results matching \'a\' in any backend\\n    search({\'any\': [\'a\']})\\n\\n    # Returns results matching artist \'xyz\' in any backend\\n    search({\'artist\': [\'xyz\']})\\n\\n    # Returns results matching \'a\' and \'b\' and artist \'xyz\' in any\\n    # backend\\n    search({\'any\': [\'a\', \'b\'], \'artist\': [\'xyz\']})\\n\\n    # Returns results matching \'a\' if within the given URI roots\\n    # \\"file:///media/music\\" and \\"spotify:\\"\\n    search({\'any\': [\'a\']}, uris=[\'file:///media/music\', \'spotify:\'])\\n\\n    # Returns results matching artist \'xyz\' and \'abc\' in any backend\\n    search({\'artist\': [\'xyz\', \'abc\']})\\n\\n:param query: one or more queries to search for\\n:type query: dict\\n:param uris: zero or more URI roots to limit the search to\\n:type uris: list of string or :class:`None`\\n:param exact: if the search should use exact matching\\n:type exact: :class:`bool`\\n:rtype: list of :class:`mopidy.models.SearchResult`\\n\\n.. versionadded:: 1.0\\n    The ``exact`` keyword argument.", "params": [{"name": "query"}, {"name": "uris", "default": null}, {"name": "exact", "default": false}]}, "core.mixer.get_mute": {"description": "Get mute state.\\n\\n:class:`True` if muted, :class:`False` unmuted, :class:`None` if\\nunknown.", "params": []}, "core.mixer.get_volume": {"description": "Get the volume.\\n\\nInteger in range [0..100] or :class:`None` if unknown.\\n\\nThe volume scale is linear.", "params": []}, "core.mixer.set_mute": {"description": "Set mute state.\\n\\n:class:`True` to mute, :class:`False` to unmute.\\n\\nReturns :class:`True` if call is successful, otherwise :class:`False`.", "params": [{"name": "mute"}]}, "core.mixer.set_volume": {"description": "Set the volume.\\n\\nThe volume is defined as an integer in range [0..100].\\n\\nThe volume scale is linear.\\n\\nReturns :class:`True` if call is successful, otherwise :class:`False`.", "params": [{"name": "volume"}]}, "core.playback.get_current_tl_track": {"description": "Get the currently playing or selected track.\\n\\nReturns a :class:`mopidy.models.TlTrack` or :class:`None`.", "params": []}, "core.playback.get_current_tlid": {"description": "Get the currently playing or selected TLID.\\n\\nExtracted from :meth:`get_current_tl_track` for convenience.\\n\\nReturns a :class:`int` or :class:`None`.\\n\\n.. versionadded:: 1.1", "params": []}, "core.playback.get_current_track": {"description": "Get the currently playing or selected track.\\n\\nExtracted from :meth:`get_current_tl_track` for convenience.\\n\\nReturns a :class:`mopidy.models.Track` or :class:`None`.", "params": []}, "core.playback.get_state": {"description": "Get The playback state.", "params": []}, "core.playback.get_stream_title": {"description": "Get the current stream title or :class:`None`.", "params": []}, "core.playback.get_time_position": {"description": "Get time position in milliseconds.", "params": []}, "core.playback.next": {"description": "Change to the next track.\\n\\nThe current playback state will be kept. If it was playing, playing\\nwill continue. If it was paused, it will still be paused, etc.", "params": []}, "core.playback.pause": {"description": "Pause playback.", "params": []}, "core.playback.play": {"description": "Play the given track, or if the given tl_track and tlid is\\n:class:`None`, play the currently active track.\\n\\nNote that the track **must** already be in the tracklist.\\n\\n.. deprecated:: 3.0\\n    The ``tl_track`` argument. Use ``tlid`` instead.\\n\\n:param tl_track: track to play\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:param tlid: TLID of the track to play\\n:type tlid: :class:`int` or :class:`None`", "params": [{"name": "tl_track", "default": null}, {"name": "tlid", "default": null}]}, "core.playback.previous": {"description": "Change to the previous track.\\n\\nThe current playback state will be kept. If it was playing, playing\\nwill continue. If it was paused, it will still be paused, etc.", "params": []}, "core.playback.resume": {"description": "If paused, resume playing the current track.", "params": []}, "core.playback.seek": {"description": "Seeks to time position given in milliseconds.\\n\\n:param time_position: time position in milliseconds\\n:type time_position: int\\n:rtype: :class:`True` if successful, else :class:`False`", "params": [{"name": "time_position"}]}, "core.playback.set_state": {"description": "Set the playback state.\\n\\nMust be :attr:`PLAYING`, :attr:`PAUSED`, or :attr:`STOPPED`.\\n\\nPossible states and transitions:\\n\\n.. digraph:: state_transitions\\n\\n    \\"STOPPED\\" -> \\"PLAYING\\" [ label=\\"play\\" ]\\n    \\"STOPPED\\" -> \\"PAUSED\\" [ label=\\"pause\\" ]\\n    \\"PLAYING\\" -> \\"STOPPED\\" [ label=\\"stop\\" ]\\n    \\"PLAYING\\" -> \\"PAUSED\\" [ label=\\"pause\\" ]\\n    \\"PLAYING\\" -> \\"PLAYING\\" [ label=\\"play\\" ]\\n    \\"PAUSED\\" -> \\"PLAYING\\" [ label=\\"resume\\" ]\\n    \\"PAUSED\\" -> \\"STOPPED\\" [ label=\\"stop\\" ]", "params": [{"name": "new_state"}]}, "core.playback.stop": {"description": "Stop playing.", "params": []}, "core.playlists.as_list": {"description": "Get a list of the currently available playlists.\\n\\nReturns a list of :class:`~mopidy.models.Ref` objects referring to the\\nplaylists. In other words, no information about the playlists\' content\\nis given.\\n\\n:rtype: list of :class:`mopidy.models.Ref`\\n\\n.. versionadded:: 1.0", "params": []}, "core.playlists.create": {"description": "Create a new playlist.\\n\\nIf ``uri_scheme`` matches an URI scheme handled by a current backend,\\nthat backend is asked to create the playlist. If ``uri_scheme`` is\\n:class:`None` or doesn\'t match a current backend, the first backend is\\nasked to create the playlist.\\n\\nAll new playlists must be created by calling this method, and **not**\\nby creating new instances of :class:`mopidy.models.Playlist`.\\n\\n:param name: name of the new playlist\\n:type name: string\\n:param uri_scheme: use the backend matching the URI scheme\\n:type uri_scheme: string\\n:rtype: :class:`mopidy.models.Playlist` or :class:`None`", "params": [{"name": "name"}, {"name": "uri_scheme", "default": null}]}, "core.playlists.delete": {"description": "Delete playlist identified by the URI.\\n\\nIf the URI doesn\'t match the URI schemes handled by the current\\nbackends, nothing happens.\\n\\nReturns :class:`True` if deleted, :class:`False` otherwise.\\n\\n:param uri: URI of the playlist to delete\\n:type uri: string\\n:rtype: :class:`bool`\\n\\n.. versionchanged:: 2.2\\n    Return type defined.", "params": [{"name": "uri"}]}, "core.playlists.get_items": {"description": "Get the items in a playlist specified by ``uri``.\\n\\nReturns a list of :class:`~mopidy.models.Ref` objects referring to the\\nplaylist\'s items.\\n\\nIf a playlist with the given ``uri`` doesn\'t exist, it returns\\n:class:`None`.\\n\\n:rtype: list of :class:`mopidy.models.Ref`, or :class:`None`\\n\\n.. versionadded:: 1.0", "params": [{"name": "uri"}]}, "core.playlists.get_uri_schemes": {"description": "Get the list of URI schemes that support playlists.\\n\\n:rtype: list of string\\n\\n.. versionadded:: 2.0", "params": []}, "core.playlists.lookup": {"description": "Lookup playlist with given URI in both the set of playlists and in any\\nother playlist sources. Returns :class:`None` if not found.\\n\\n:param uri: playlist URI\\n:type uri: string\\n:rtype: :class:`mopidy.models.Playlist` or :class:`None`", "params": [{"name": "uri"}]}, "core.playlists.refresh": {"description": "Refresh the playlists in :attr:`playlists`.\\n\\nIf ``uri_scheme`` is :class:`None`, all backends are asked to refresh.\\nIf ``uri_scheme`` is an URI scheme handled by a backend, only that\\nbackend is asked to refresh. If ``uri_scheme`` doesn\'t match any\\ncurrent backend, nothing happens.\\n\\n:param uri_scheme: limit to the backend matching the URI scheme\\n:type uri_scheme: string", "params": [{"name": "uri_scheme", "default": null}]}, "core.playlists.save": {"description": "Save the playlist.\\n\\nFor a playlist to be saveable, it must have the ``uri`` attribute set.\\nYou must not set the ``uri`` atribute yourself, but use playlist\\nobjects returned by :meth:`create` or retrieved from :attr:`playlists`,\\nwhich will always give you saveable playlists.\\n\\nThe method returns the saved playlist. The return playlist may differ\\nfrom the saved playlist. E.g. if the playlist name was changed, the\\nreturned playlist may have a different URI. The caller of this method\\nmust throw away the playlist sent to this method, and use the\\nreturned playlist instead.\\n\\nIf the playlist\'s URI isn\'t set or doesn\'t match the URI scheme of a\\ncurrent backend, nothing is done and :class:`None` is returned.\\n\\n:param playlist: the playlist\\n:type playlist: :class:`mopidy.models.Playlist`\\n:rtype: :class:`mopidy.models.Playlist` or :class:`None`", "params": [{"name": "playlist"}]}, "core.tracklist.add": {"description": "Add tracks to the tracklist.\\n\\nIf ``uris`` is given instead of ``tracks``, the URIs are\\nlooked up in the library and the resulting tracks are added to the\\ntracklist.\\n\\nIf ``at_position`` is given, the tracks are inserted at the given\\nposition in the tracklist. If ``at_position`` is not given, the tracks\\nare appended to the end of the tracklist.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.\\n\\n:param tracks: tracks to add\\n:type tracks: list of :class:`mopidy.models.Track` or :class:`None`\\n:param at_position: position in tracklist to add tracks\\n:type at_position: int or :class:`None`\\n:param uris: list of URIs for tracks to add\\n:type uris: list of string or :class:`None`\\n:rtype: list of :class:`mopidy.models.TlTrack`\\n\\n.. versionadded:: 1.0\\n    The ``uris`` argument.\\n\\n.. deprecated:: 1.0\\n    The ``tracks`` argument. Use ``uris``.", "params": [{"name": "tracks", "default": null}, {"name": "at_position", "default": null}, {"name": "uris", "default": null}]}, "core.tracklist.clear": {"description": "Clear the tracklist.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.", "params": []}, "core.tracklist.eot_track": {"description": "The track that will be played after the given track.\\n\\nNot necessarily the same track as :meth:`next_track`.\\n\\n.. deprecated:: 3.0\\n    Use :meth:`get_eot_tlid` instead.\\n\\n:param tl_track: the reference track\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:rtype: :class:`mopidy.models.TlTrack` or :class:`None`", "params": [{"name": "tl_track"}]}, "core.tracklist.filter": {"description": "Filter the tracklist by the given criteria.\\n\\nEach rule in the criteria consists of a model field and a list of\\nvalues to compare it against. If the model field matches any of the\\nvalues, it may be returned.\\n\\nOnly tracks that match all the given criteria are returned.\\n\\nExamples::\\n\\n    # Returns tracks with TLIDs 1, 2, 3, or 4 (tracklist ID)\\n    filter({\'tlid\': [1, 2, 3, 4]})\\n\\n    # Returns track with URIs \'xyz\' or \'abc\'\\n    filter({\'uri\': [\'xyz\', \'abc\']})\\n\\n    # Returns track with a matching TLIDs (1, 3 or 6) and a\\n    # matching URI (\'xyz\' or \'abc\')\\n    filter({\'tlid\': [1, 3, 6], \'uri\': [\'xyz\', \'abc\']})\\n\\n:param criteria: one or more rules to match by\\n:type criteria: dict, of (string, list) pairs\\n:rtype: list of :class:`mopidy.models.TlTrack`", "params": [{"name": "criteria"}]}, "core.tracklist.get_consume": {"description": "Get consume mode.\\n\\n:class:`True`\\n    Tracks are removed from the tracklist when they have been played.\\n:class:`False`\\n    Tracks are not removed from the tracklist.", "params": []}, "core.tracklist.get_eot_tlid": {"description": "The TLID of the track that will be played after the current track.\\n\\nNot necessarily the same TLID as returned by :meth:`get_next_tlid`.\\n\\n:rtype: :class:`int` or :class:`None`\\n\\n.. versionadded:: 1.1", "params": []}, "core.tracklist.get_length": {"description": "Get length of the tracklist.", "params": []}, "core.tracklist.get_next_tlid": {"description": "The tlid of the track that will be played if calling\\n:meth:`mopidy.core.PlaybackController.next()`.\\n\\nFor normal playback this is the next track in the tracklist. If repeat\\nis enabled the next track can loop around the tracklist. When random is\\nenabled this should be a random track, all tracks should be played once\\nbefore the tracklist repeats.\\n\\n:rtype: :class:`int` or :class:`None`\\n\\n.. versionadded:: 1.1", "params": []}, "core.tracklist.get_previous_tlid": {"description": "Returns the TLID of the track that will be played if calling\\n:meth:`mopidy.core.PlaybackController.previous()`.\\n\\nFor normal playback this is the previous track in the tracklist. If\\nrandom and/or consume is enabled it should return the current track\\ninstead.\\n\\n:rtype: :class:`int` or :class:`None`\\n\\n.. versionadded:: 1.1", "params": []}, "core.tracklist.get_random": {"description": "Get random mode.\\n\\n:class:`True`\\n    Tracks are selected at random from the tracklist.\\n:class:`False`\\n    Tracks are played in the order of the tracklist.", "params": []}, "core.tracklist.get_repeat": {"description": "Get repeat mode.\\n\\n:class:`True`\\n    The tracklist is played repeatedly.\\n:class:`False`\\n    The tracklist is played once.", "params": []}, "core.tracklist.get_single": {"description": "Get single mode.\\n\\n:class:`True`\\n    Playback is stopped after current song, unless in ``repeat`` mode.\\n:class:`False`\\n    Playback continues after current song.", "params": []}, "core.tracklist.get_tl_tracks": {"description": "Get tracklist as list of :class:`mopidy.models.TlTrack`.", "params": []}, "core.tracklist.get_tracks": {"description": "Get tracklist as list of :class:`mopidy.models.Track`.", "params": []}, "core.tracklist.get_version": {"description": "Get the tracklist version.\\n\\nInteger which is increased every time the tracklist is changed. Is not\\nreset before Mopidy is restarted.", "params": []}, "core.tracklist.index": {"description": "The position of the given track in the tracklist.\\n\\nIf neither *tl_track* or *tlid* is given we return the index of\\nthe currently playing track.\\n\\n:param tl_track: the track to find the index of\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:param tlid: TLID of the track to find the index of\\n:type tlid: :class:`int` or :class:`None`\\n:rtype: :class:`int` or :class:`None`\\n\\n.. versionadded:: 1.1\\n    The *tlid* parameter", "params": [{"name": "tl_track", "default": null}, {"name": "tlid", "default": null}]}, "core.tracklist.move": {"description": "Move the tracks in the slice ``[start:end]`` to ``to_position``.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.\\n\\n:param start: position of first track to move\\n:type start: int\\n:param end: position after last track to move\\n:type end: int\\n:param to_position: new position for the tracks\\n:type to_position: int", "params": [{"name": "start"}, {"name": "end"}, {"name": "to_position"}]}, "core.tracklist.next_track": {"description": "The track that will be played if calling\\n:meth:`mopidy.core.PlaybackController.next()`.\\n\\nFor normal playback this is the next track in the tracklist. If repeat\\nis enabled the next track can loop around the tracklist. When random is\\nenabled this should be a random track, all tracks should be played once\\nbefore the tracklist repeats.\\n\\n.. deprecated:: 3.0\\n    Use :meth:`get_next_tlid` instead.\\n\\n:param tl_track: the reference track\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:rtype: :class:`mopidy.models.TlTrack` or :class:`None`", "params": [{"name": "tl_track"}]}, "core.tracklist.previous_track": {"description": "Returns the track that will be played if calling\\n:meth:`mopidy.core.PlaybackController.previous()`.\\n\\nFor normal playback this is the previous track in the tracklist. If\\nrandom and/or consume is enabled it should return the current track\\ninstead.\\n\\n.. deprecated:: 3.0\\n    Use :meth:`get_previous_tlid` instead.\\n\\n:param tl_track: the reference track\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:rtype: :class:`mopidy.models.TlTrack` or :class:`None`", "params": [{"name": "tl_track"}]}, "core.tracklist.remove": {"description": "Remove the matching tracks from the tracklist.\\n\\nUses :meth:`filter()` to lookup the tracks to remove.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.\\n\\n:param criteria: one or more rules to match by\\n:type criteria: dict, of (string, list) pairs\\n:rtype: list of :class:`mopidy.models.TlTrack` that were removed", "params": [{"name": "criteria"}]}, "core.tracklist.set_consume": {"description": "Set consume mode.\\n\\n:class:`True`\\n    Tracks are removed from the tracklist when they have been played.\\n:class:`False`\\n    Tracks are not removed from the tracklist.", "params": [{"name": "value"}]}, "core.tracklist.set_random": {"description": "Set random mode.\\n\\n:class:`True`\\n    Tracks are selected at random from the tracklist.\\n:class:`False`\\n    Tracks are played in the order of the tracklist.", "params": [{"name": "value"}]}, "core.tracklist.set_repeat": {"description": "Set repeat mode.\\n\\nTo repeat a single track, set both ``repeat`` and ``single``.\\n\\n:class:`True`\\n    The tracklist is played repeatedly.\\n:class:`False`\\n    The tracklist is played once.", "params": [{"name": "value"}]}, "core.tracklist.set_single": {"description": "Set single mode.\\n\\n:class:`True`\\n    Playback is stopped after current song, unless in ``repeat`` mode.\\n:class:`False`\\n    Playback continues after current song.", "params": [{"name": "value"}]}, "core.tracklist.shuffle": {"description": "Shuffles the entire tracklist. If ``start`` and ``end`` is given only\\nshuffles the slice ``[start:end]``.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.\\n\\n:param start: position of first track to shuffle\\n:type start: int or :class:`None`\\n:param end: position after last track to shuffle\\n:type end: int or :class:`None`", "params": [{"name": "start", "default": null}, {"name": "end", "default": null}]}, "core.tracklist.slice": {"description": "Returns a slice of the tracklist, limited by the given start and end\\npositions.\\n\\n:param start: position of first track to include in slice\\n:type start: int\\n:param end: position after last track to include in slice\\n:type end: int\\n:rtype: :class:`mopidy.models.TlTrack`", "params": [{"name": "start"}, {"name": "end"}]}}}'
okt 24 14:14:18 Desktop-Ubuntu mopidy[10268]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.describe","jsonrpc":"2.0","id":32}'
okt 24 14:14:18 Desktop-Ubuntu mopidy[10268]: DEBUG    [HttpServer] mopidy.http.handlers New WebSocket connection from 127.0.0.1
okt 24 14:14:18 Desktop-Ubuntu mopidy[10268]: INFO     [HttpServer] tornado.access 101 GET /mopidy/ws/ (127.0.0.1) 19.51ms
okt 24 14:14:18 Desktop-Ubuntu mopidy[10268]: DEBUG    [HttpFrontend-11 (_actor_loop)] mopidy.zeroconf Zeroconf service 'Mopidy HTTP server on Desktop-Ubuntu' (_mopidy-http._tcp at []:6680): Published
okt 24 14:14:18 Desktop-Ubuntu mopidy[10268]: DEBUG    [HttpFrontend-11 (_actor_loop)] mopidy.zeroconf Zeroconf service 'Mopidy HTTP server on Desktop-Ubuntu' (_http._tcp at []:6680): Published
okt 24 14:14:18 Desktop-Ubuntu mopidy[10268]:     '/': <class 'tornado.web.RedirectHandler'>
okt 24 14:14:18 Desktop-Ubuntu mopidy[10268]:     '/mopidy/': <class 'mopidy.http.handlers.ClientListHandler'>
okt 24 14:14:18 Desktop-Ubuntu mopidy[10268]:     '/mopidy/(.+)': <class 'mopidy.http.handlers.StaticFileHandler'>
okt 24 14:14:18 Desktop-Ubuntu mopidy[10268]:     '/mopidy/rpc': <class 'mopidy.http.handlers.JsonRpcHandler'>
okt 24 14:14:18 Desktop-Ubuntu mopidy[10268]:     '/mopidy/ws/?': <class 'mopidy.http.handlers.WebSocketHandler'>
okt 24 14:14:18 Desktop-Ubuntu mopidy[10268]:     '/mopidy': <class 'mopidy.http.handlers.AddSlashHandler'>
okt 24 14:14:18 Desktop-Ubuntu mopidy[10268]:     '/iris/(.*)': <class 'mopidy_iris.handlers.ReactRouterHandler'>
okt 24 14:14:18 Desktop-Ubuntu mopidy[10268]:     '/iris/((.*)(?:css|js|json|map)$)': <class 'tornado.web.StaticFileHandler'>
okt 24 14:14:18 Desktop-Ubuntu mopidy[10268]:     '/iris/assets/(.*)': <class 'tornado.web.StaticFileHandler'>
okt 24 14:14:18 Desktop-Ubuntu mopidy[10268]:     '/iris/ws/?': <class 'mopidy_iris.handlers.WebsocketHandler'>
okt 24 14:14:18 Desktop-Ubuntu mopidy[10268]:     '/iris/http/([^/]*)': <class 'mopidy_iris.handlers.HttpHandler'>
okt 24 14:14:18 Desktop-Ubuntu mopidy[10268]:     '/iris': <class 'mopidy.http.handlers.AddSlashHandler'>
okt 24 14:14:18 Desktop-Ubuntu mopidy[10268]:     '/local/(.+)': <class 'mopidy_local.web.ImageHandler'>
okt 24 14:14:18 Desktop-Ubuntu mopidy[10268]:     '/local/(index.html)?': <class 'mopidy_local.web.IndexHandler'>
okt 24 14:14:18 Desktop-Ubuntu mopidy[10268]:     '/local': <class 'mopidy.http.handlers.AddSlashHandler'>
okt 24 14:14:18 Desktop-Ubuntu mopidy[10268]: DEBUG    [HttpServer] mopidy.http.actor HTTP routes from extensions:
okt 24 14:14:18 Desktop-Ubuntu mopidy[10268]: DEBUG    [HttpServer] mopidy.http.actor Default webclient is mopidy
okt 24 14:14:18 Desktop-Ubuntu mopidy[10268]: DEBUG    [HttpServer] mopidy.http.actor Loaded HTTP extension: mopidy
okt 24 14:14:18 Desktop-Ubuntu mopidy[10268]: DEBUG    [HttpServer] mopidy.http.actor Loaded HTTP extension: iris
okt 24 14:14:18 Desktop-Ubuntu mopidy[10268]: DEBUG    [HttpServer] mopidy.http.actor Loaded HTTP extension: local
okt 24 14:14:18 Desktop-Ubuntu mopidy[10268]: DEBUG    [HttpServer] asyncio Using selector: EpollSelector
okt 24 14:14:18 Desktop-Ubuntu mopidy[10268]: INFO     [MainThread] mopidy.commands Starting GLib mainloop
okt 24 14:14:18 Desktop-Ubuntu mopidy[10268]: TRACE    [MainThread] mopidy.internal.timer HttpFrontend took 1ms
okt 24 14:14:18 Desktop-Ubuntu mopidy[10268]: INFO     [HttpFrontend-11 (_actor_loop)] mopidy.http.actor HTTP server running at [::ffff:127.0.0.1]:6680
okt 24 14:14:18 Desktop-Ubuntu mopidy[10268]: DEBUG    [MainThread] pykka Starting HttpFrontend (urn:uuid:5d158a59-7f7c-47e2-a657-5b9412c931e0)
okt 24 14:14:18 Desktop-Ubuntu mopidy[10268]: DEBUG    [MainThread] pykka Registered HttpFrontend (urn:uuid:5d158a59-7f7c-47e2-a657-5b9412c931e0)
okt 24 14:14:18 Desktop-Ubuntu mopidy[10268]: DEBUG    [MainThread] mopidy.http.actor Starting HTTP server
okt 24 14:14:18 Desktop-Ubuntu mopidy[10268]: TRACE    [MainThread] mopidy.internal.timer IrisFrontend took 0ms
okt 24 14:14:18 Desktop-Ubuntu mopidy[10268]: INFO     [IrisFrontend-9 (_actor_loop)] mopidy_iris.core Starting Iris 3.64.1
okt 24 14:14:18 Desktop-Ubuntu mopidy[10268]: DEBUG    [MainThread] pykka Starting IrisFrontend (urn:uuid:24373e1d-17ec-49d3-8369-95fb817af2b4)
okt 24 14:14:18 Desktop-Ubuntu mopidy[10268]: DEBUG    [MainThread] pykka Registered IrisFrontend (urn:uuid:24373e1d-17ec-49d3-8369-95fb817af2b4)
okt 24 14:14:18 Desktop-Ubuntu mopidy[10268]: TRACE    [MainThread] mopidy.internal.timer YTMusicScrobbleFE took 0ms
okt 24 14:14:18 Desktop-Ubuntu mopidy[10268]: DEBUG    [MainThread] pykka Starting YTMusicScrobbleFE (urn:uuid:a4ccdb8f-e259-4305-9abc-34994836b8c1)
okt 24 14:14:18 Desktop-Ubuntu mopidy[10268]: DEBUG    [MainThread] pykka Registered YTMusicScrobbleFE (urn:uuid:a4ccdb8f-e259-4305-9abc-34994836b8c1)
okt 24 14:14:18 Desktop-Ubuntu mopidy[10268]: INFO     [MainThread] mopidy.commands Starting Mopidy frontends: YTMusicScrobbleFE, IrisFrontend, HttpFrontend
okt 24 14:14:18 Desktop-Ubuntu mopidy[10268]: DEBUG    [MainThread] pykka Starting Core (urn:uuid:8c81747a-c536-41ba-b1f1-c99294112132)
okt 24 14:14:18 Desktop-Ubuntu mopidy[10268]: DEBUG    [MainThread] pykka Registered Core (urn:uuid:8c81747a-c536-41ba-b1f1-c99294112132)
okt 24 14:14:18 Desktop-Ubuntu mopidy[10268]: INFO     [MainThread] mopidy.commands Starting Mopidy core
okt 24 14:14:18 Desktop-Ubuntu mopidy[10268]: TRACE    [MainThread] mopidy.internal.timer StreamBackend took 6ms
okt 24 14:14:18 Desktop-Ubuntu mopidy[10268]: DEBUG    [MainThread] pykka Starting StreamBackend (urn:uuid:9c892990-df20-410d-b906-fd22967ce8c6)
okt 24 14:14:18 Desktop-Ubuntu mopidy[10268]: DEBUG    [MainThread] pykka Registered StreamBackend (urn:uuid:9c892990-df20-410d-b906-fd22967ce8c6)
okt 24 14:14:18 Desktop-Ubuntu mopidy[10268]: INFO     [Audio-2 (_actor_loop)] mopidy.audio.actor Audio output set to "pulsesink server=127.0.0.1"
okt 24 14:14:18 Desktop-Ubuntu mopidy[10268]: TRACE    [MainThread] mopidy.internal.timer M3UBackend took 2ms
okt 24 14:14:18 Desktop-Ubuntu mopidy[10268]: DEBUG    [MainThread] pykka Starting M3UBackend (urn:uuid:a8ebc45a-7eb9-4ee6-9c86-9b944b7ae581)
okt 24 14:14:18 Desktop-Ubuntu mopidy[10268]: DEBUG    [MainThread] pykka Registered M3UBackend (urn:uuid:a8ebc45a-7eb9-4ee6-9c86-9b944b7ae581)
okt 24 14:14:18 Desktop-Ubuntu mopidy[10268]: TRACE    [MainThread] mopidy.internal.timer FileBackend took 2ms
okt 24 14:14:18 Desktop-Ubuntu mopidy[10268]: DEBUG    [MainThread] pykka Starting FileBackend (urn:uuid:bb22cea8-fdd1-48f7-93f4-8b1566bb04db)
okt 24 14:14:18 Desktop-Ubuntu mopidy[10268]: DEBUG    [MainThread] pykka Registered FileBackend (urn:uuid:bb22cea8-fdd1-48f7-93f4-8b1566bb04db)
okt 24 14:14:18 Desktop-Ubuntu mopidy[10268]: DEBUG    [MainThread] mopidy.file.library Failed expanding path ($XDG_MUSIC_DIR) from file/media_dirs config value.
okt 24 14:14:18 Desktop-Ubuntu mopidy[10268]: AttributeError: 'YTMusic' object has no attribute 'headers'
okt 24 14:14:18 Desktop-Ubuntu mopidy[10268]:     if 'x-goog-visitor-id' not in self.headers:
okt 24 14:14:18 Desktop-Ubuntu mopidy[10268]:   File "/usr/local/lib/python3.10/dist-packages/ytmusicapi/ytmusic.py", line 98, in __init__
okt 24 14:14:18 Desktop-Ubuntu mopidy[10268]:     self.api = YTMusic(self._ytmusicapi_auth_json)
okt 24 14:14:18 Desktop-Ubuntu mopidy[10268]:   File "/usr/local/lib/python3.10/dist-packages/mopidy_ytmusic/backend.py", line 65, in __init__
okt 24 14:14:18 Desktop-Ubuntu mopidy[10268]:     obj = cls(*args, **kwargs)
okt 24 14:14:18 Desktop-Ubuntu mopidy[10268]:   File "/usr/lib/python3/dist-packages/pykka/_actor.py", line 91, in start
okt 24 14:14:18 Desktop-Ubuntu mopidy[10268]:     backend = backend_class.start(
okt 24 14:14:18 Desktop-Ubuntu mopidy[10268]:   File "/usr/lib/python3/dist-packages/mopidy/commands.py", line 412, in start_backends
okt 24 14:14:18 Desktop-Ubuntu mopidy[10268]:     yield
okt 24 14:14:18 Desktop-Ubuntu mopidy[10268]:   File "/usr/lib/python3/dist-packages/mopidy/commands.py", line 248, in _actor_error_handling
okt 24 14:14:18 Desktop-Ubuntu mopidy[10268]: Traceback (most recent call last):
okt 24 14:14:18 Desktop-Ubuntu mopidy[10268]: ERROR    [MainThread] mopidy.commands Got un-handled exception from YTMusicBackend
okt 24 14:14:18 Desktop-Ubuntu mopidy[10268]: TRACE    [MainThread] mopidy.internal.timer LocalBackend took 3ms
okt 24 14:14:18 Desktop-Ubuntu mopidy[10268]: DEBUG    [MainThread] pykka Starting LocalBackend (urn:uuid:49218155-335a-49fc-93a0-18bd4135ef32)
okt 24 14:14:18 Desktop-Ubuntu mopidy[10268]: DEBUG    [MainThread] pykka Registered LocalBackend (urn:uuid:49218155-335a-49fc-93a0-18bd4135ef32)
okt 24 14:14:18 Desktop-Ubuntu mopidy[10268]: INFO     [MainThread] mopidy.commands Starting Mopidy backends: LocalBackend, YTMusicBackend, FileBackend, M3UBackend, StreamBackend
okt 24 14:14:18 Desktop-Ubuntu mopidy[10268]: DEBUG    [MainThread] pykka Starting Audio (urn:uuid:fce7fed3-9fe4-4ead-afbc-5570d79be61e)
okt 24 14:14:18 Desktop-Ubuntu mopidy[10268]: DEBUG    [MainThread] pykka Registered Audio (urn:uuid:fce7fed3-9fe4-4ead-afbc-5570d79be61e)
okt 24 14:14:18 Desktop-Ubuntu mopidy[10268]: INFO     [MainThread] mopidy.commands Starting Mopidy audio
okt 24 14:14:18 Desktop-Ubuntu mopidy[10268]: DEBUG    [MainThread] mopidy.commands Mixer volume left unchanged
okt 24 14:14:18 Desktop-Ubuntu mopidy[10268]: DEBUG    [MainThread] pykka Starting SoftwareMixer (urn:uuid:dadf7c90-00a6-419a-9211-8aa2f245765f)
okt 24 14:14:18 Desktop-Ubuntu mopidy[10268]: DEBUG    [MainThread] pykka Registered SoftwareMixer (urn:uuid:dadf7c90-00a6-419a-9211-8aa2f245765f)
okt 24 14:14:18 Desktop-Ubuntu mopidy[10268]: INFO     [MainThread] mopidy.commands Starting Mopidy mixer: SoftwareMixer
okt 24 14:14:18 Desktop-Ubuntu mopidy[10268]: DEBUG    [MainThread] mopidy.commands Available Mopidy mixers: SoftwareMixer
okt 24 14:14:18 Desktop-Ubuntu mopidy[10268]: INFO     [MainThread] mopidy.__main__ Disabled extensions: youtube, soundcloud
okt 24 14:14:18 Desktop-Ubuntu mopidy[10268]: INFO     [MainThread] mopidy.__main__ Enabled extensions: iris, softwaremixer, http, ytmusic, file, m3u, local, stream
okt 24 14:14:18 Desktop-Ubuntu mopidy[10268]: DEBUG    [MainThread] mopidy.ext Validating extension: stream
okt 24 14:14:18 Desktop-Ubuntu mopidy[10268]: DEBUG    [MainThread] mopidy.ext Validating extension: softwaremixer
okt 24 14:14:18 Desktop-Ubuntu mopidy[10268]: DEBUG    [MainThread] mopidy.ext Validating extension: m3u
okt 24 14:14:18 Desktop-Ubuntu mopidy[10268]: DEBUG    [MainThread] mopidy.ext Validating extension: http
okt 24 14:14:18 Desktop-Ubuntu mopidy[10268]: DEBUG    [MainThread] mopidy.ext Validating extension: file
okt 24 14:14:18 Desktop-Ubuntu mopidy[10268]: DEBUG    [MainThread] mopidy.ext Validating extension: iris
okt 24 14:14:18 Desktop-Ubuntu mopidy[10268]: DEBUG    [MainThread] mopidy.ext Validating extension: ytmusic
okt 24 14:14:18 Desktop-Ubuntu mopidy[10268]: DEBUG    [MainThread] mopidy.ext Validating extension: soundcloud
okt 24 14:14:17 Desktop-Ubuntu mopidy[10268]: DEBUG    [MainThread] mopidy.ext Validating extension: local
okt 24 14:14:17 Desktop-Ubuntu mopidy[10268]: DEBUG    [MainThread] mopidy.ext Validating extension: youtube
okt 24 14:14:17 Desktop-Ubuntu mopidy[10268]: WARNING  [MainThread] mopidy.config Ignoring config section 'jukebox' because no matching extension was found
okt 24 14:14:17 Desktop-Ubuntu mopidy[10268]: INFO     [MainThread] mopidy.config Loading config from command line options
okt 24 14:14:17 Desktop-Ubuntu mopidy[10268]: INFO     [MainThread] mopidy.config Loading config from file:///etc/mopidy/mopidy.conf
okt 24 14:14:17 Desktop-Ubuntu mopidy[10268]: INFO     [MainThread] mopidy.config Loading config from file:///usr/share/mopidy/conf.d/mopidy.conf
okt 24 14:14:17 Desktop-Ubuntu mopidy[10268]: INFO     [MainThread] mopidy.config Loading config from builtin defaults
okt 24 14:14:17 Desktop-Ubuntu mopidy[10268]: DEBUG    [MainThread] mopidy.config.keyring Fetching passwords from your keyring failed. Any passwords stored in the keyring will not be available. (org.freedesktop.DBus.Error.NotSupported: Unable to autolaunch a dbus-daemon without a $DISPLAY for X11)
okt 24 14:14:17 Desktop-Ubuntu mopidy[10268]: DEBUG    [MainThread] mopidy.ext Discovered extensions: youtube, local, soundcloud, ytmusic, iris, file, http, m3u, softwaremixer, stream
okt 24 14:14:17 Desktop-Ubuntu mopidy[10268]: DEBUG    [MainThread] mopidy.ext Loaded extension: Mopidy-Stream 3.3.0
okt 24 14:14:17 Desktop-Ubuntu mopidy[10268]: DEBUG    [MainThread] mopidy.ext Loading entry point: stream = mopidy.stream:Extension
okt 24 14:14:17 Desktop-Ubuntu mopidy[10268]: DEBUG    [MainThread] mopidy.ext Loaded extension: Mopidy-SoftwareMixer 3.3.0
okt 24 14:14:17 Desktop-Ubuntu mopidy[10268]: DEBUG    [MainThread] mopidy.ext Loading entry point: softwaremixer = mopidy.softwaremixer:Extension
okt 24 14:14:17 Desktop-Ubuntu mopidy[10268]: DEBUG    [MainThread] mopidy.ext Loaded extension: Mopidy-M3U 3.3.0
okt 24 14:14:17 Desktop-Ubuntu mopidy[10268]: DEBUG    [MainThread] mopidy.ext Loading entry point: m3u = mopidy.m3u:Extension
okt 24 14:14:17 Desktop-Ubuntu mopidy[10268]: DEBUG    [MainThread] mopidy.ext Loaded extension: Mopidy-HTTP 3.3.0
okt 24 14:14:17 Desktop-Ubuntu mopidy[10268]: DEBUG    [MainThread] mopidy.ext Loading entry point: http = mopidy.http:Extension
okt 24 14:14:17 Desktop-Ubuntu mopidy[10268]: DEBUG    [MainThread] mopidy.ext Loaded extension: Mopidy-File 3.3.0
okt 24 14:14:17 Desktop-Ubuntu mopidy[10268]: DEBUG    [MainThread] mopidy.ext Loading entry point: file = mopidy.file:Extension
okt 24 14:14:17 Desktop-Ubuntu mopidy[10268]: DEBUG    [MainThread] mopidy.ext Loaded extension: Mopidy-Iris 3.64.1
okt 24 14:14:17 Desktop-Ubuntu mopidy[10268]: DEBUG    [MainThread] mopidy.ext Loading entry point: iris = mopidy_iris:Extension
okt 24 14:14:17 Desktop-Ubuntu mopidy[10268]: DEBUG    [MainThread] mopidy.ext Loaded extension: Mopidy-YTMusic 0.3.7
okt 24 14:14:17 Desktop-Ubuntu mopidy[10268]: DEBUG    [MainThread] mopidy.ext Loading entry point: ytmusic = mopidy_ytmusic:Extension
okt 24 14:14:17 Desktop-Ubuntu mopidy[10268]: DEBUG    [MainThread] mopidy.ext Loaded extension: Mopidy-SoundCloud 3.0.1
okt 24 14:14:17 Desktop-Ubuntu mopidy[10268]: DEBUG    [MainThread] mopidy.ext Loading entry point: soundcloud = mopidy_soundcloud:Extension
okt 24 14:14:17 Desktop-Ubuntu mopidy[10268]: DEBUG    [MainThread] mopidy.ext Loaded extension: Mopidy-Local 3.2.1
okt 24 14:14:17 Desktop-Ubuntu mopidy[10268]: DEBUG    [MainThread] mopidy.ext Loading entry point: local = mopidy_local:Extension
okt 24 14:14:17 Desktop-Ubuntu mopidy[10268]: DEBUG    [MainThread] mopidy.ext Loaded extension: Mopidy-YouTube 3.6.1
okt 24 14:14:17 Desktop-Ubuntu mopidy[10268]: DEBUG    [MainThread] mopidy.ext Loading entry point: youtube = mopidy_youtube:Extension
okt 24 14:14:17 Desktop-Ubuntu mopidy[10268]: INFO     [MainThread] mopidy.__main__ Starting Mopidy 3.3.0
okt 24 14:14:17 Desktop-Ubuntu systemd[1]: Started Mopidy music server.
okt 24 14:14:17 Desktop-Ubuntu systemd[1]: Starting Mopidy music server...
okt 24 14:14:17 Desktop-Ubuntu systemd[1]: Stopped Mopidy music server.
okt 24 14:14:17 Desktop-Ubuntu systemd[1]: mopidy.service: Deactivated successfully.
okt 24 14:14:17 Desktop-Ubuntu mopidy[10137]: Failed loading provided credentials. Make sure to provide a string or a file path. Reason: Expecting value: line 1 column 1 (char 0)
okt 24 14:14:17 Desktop-Ubuntu mopidy[10137]: DEBUG    [MainThread] mopidy.internal.process All actors stopped.
okt 24 14:14:17 Desktop-Ubuntu mopidy[10137]: DEBUG    [SoftwareMixer-1 (_actor_loop)] pykka Stopped SoftwareMixer (urn:uuid:3866752e-08a0-445f-b0b5-e97654e39fcc)
okt 24 14:14:17 Desktop-Ubuntu mopidy[10137]: DEBUG    [SoftwareMixer-1 (_actor_loop)] pykka Unregistered SoftwareMixer (urn:uuid:3866752e-08a0-445f-b0b5-e97654e39fcc)
okt 24 14:14:17 Desktop-Ubuntu mopidy[10137]: DEBUG    [MainThread] mopidy.internal.process Stopping 1 instance(s) of SoftwareMixer
okt 24 14:14:17 Desktop-Ubuntu mopidy[10137]: INFO     [MainThread] mopidy.commands Stopping Mopidy mixer
okt 24 14:14:17 Desktop-Ubuntu mopidy[10137]: DEBUG    [Audio-2 (_actor_loop)] pykka Stopped Audio (urn:uuid:821ea36e-012f-4b1f-aaca-5d09b061260b)
okt 24 14:14:17 Desktop-Ubuntu mopidy[10137]: DEBUG    [Audio-2 (_actor_loop)] pykka Unregistered Audio (urn:uuid:821ea36e-012f-4b1f-aaca-5d09b061260b)
okt 24 14:14:17 Desktop-Ubuntu mopidy[10137]: DEBUG    [MainThread] mopidy.internal.process Stopping 1 instance(s) of Audio
okt 24 14:14:17 Desktop-Ubuntu mopidy[10137]: INFO     [MainThread] mopidy.commands Stopping Mopidy audio
okt 24 14:14:17 Desktop-Ubuntu mopidy[10137]: DEBUG    [StreamBackend-6 (_actor_loop)] pykka Stopped StreamBackend (urn:uuid:081624a1-4c8a-4d31-bbd9-bbb233528996)
okt 24 14:14:17 Desktop-Ubuntu mopidy[10137]: DEBUG    [StreamBackend-6 (_actor_loop)] pykka Unregistered StreamBackend (urn:uuid:081624a1-4c8a-4d31-bbd9-bbb233528996)
okt 24 14:14:17 Desktop-Ubuntu mopidy[10137]: DEBUG    [MainThread] mopidy.internal.process Stopping 1 instance(s) of StreamBackend
okt 24 14:14:17 Desktop-Ubuntu mopidy[10137]: DEBUG    [M3UBackend-5 (_actor_loop)] pykka Stopped M3UBackend (urn:uuid:008de4b9-2a86-43dd-af94-d8bbd5fdbaec)
okt 24 14:14:17 Desktop-Ubuntu mopidy[10137]: DEBUG    [M3UBackend-5 (_actor_loop)] pykka Unregistered M3UBackend (urn:uuid:008de4b9-2a86-43dd-af94-d8bbd5fdbaec)
okt 24 14:14:17 Desktop-Ubuntu mopidy[10137]: DEBUG    [MainThread] mopidy.internal.process Stopping 1 instance(s) of M3UBackend
okt 24 14:14:17 Desktop-Ubuntu mopidy[10137]: DEBUG    [FileBackend-4 (_actor_loop)] pykka Stopped FileBackend (urn:uuid:c80e6480-6c1d-4e09-a63f-8637f7d9e6e9)
okt 24 14:14:17 Desktop-Ubuntu mopidy[10137]: DEBUG    [FileBackend-4 (_actor_loop)] pykka Unregistered FileBackend (urn:uuid:c80e6480-6c1d-4e09-a63f-8637f7d9e6e9)
okt 24 14:14:17 Desktop-Ubuntu mopidy[10137]: DEBUG    [MainThread] mopidy.internal.process Stopping 1 instance(s) of FileBackend
okt 24 14:14:17 Desktop-Ubuntu mopidy[10137]: DEBUG    [MainThread] mopidy.internal.process Stopping 0 instance(s) of YTMusicBackend
okt 24 14:14:17 Desktop-Ubuntu mopidy[10137]: DEBUG    [LocalBackend-3 (_actor_loop)] pykka Stopped LocalBackend (urn:uuid:c00a16d3-a2a6-45e9-8827-6eb6f382e72b)
okt 24 14:14:17 Desktop-Ubuntu mopidy[10137]: DEBUG    [LocalBackend-3 (_actor_loop)] pykka Unregistered LocalBackend (urn:uuid:c00a16d3-a2a6-45e9-8827-6eb6f382e72b)
okt 24 14:14:17 Desktop-Ubuntu mopidy[10137]: DEBUG    [MainThread] mopidy.internal.process Stopping 1 instance(s) of LocalBackend
okt 24 14:14:17 Desktop-Ubuntu mopidy[10137]: INFO     [MainThread] mopidy.commands Stopping Mopidy backends
okt 24 14:14:17 Desktop-Ubuntu mopidy[10137]: DEBUG    [Core-7 (_actor_loop)] pykka Stopped Core (urn:uuid:8a5c7658-b26b-41a8-a5e3-e3766fb2ab93)
okt 24 14:14:17 Desktop-Ubuntu mopidy[10137]: DEBUG    [Core-7 (_actor_loop)] pykka Unregistered Core (urn:uuid:8a5c7658-b26b-41a8-a5e3-e3766fb2ab93)
okt 24 14:14:17 Desktop-Ubuntu mopidy[10137]: DEBUG    [MainThread] mopidy.internal.process Stopping 1 instance(s) of Core
okt 24 14:14:17 Desktop-Ubuntu mopidy[10137]: DEBUG    [HttpServer] mopidy.http.actor Stopped HTTP server
okt 24 14:14:17 Desktop-Ubuntu mopidy[10137]: INFO     [MainThread] mopidy.commands Stopping Mopidy core
okt 24 14:14:17 Desktop-Ubuntu mopidy[10137]: DEBUG    [HttpFrontend-11 (_actor_loop)] mopidy.http.actor Stopping HTTP server
okt 24 14:14:17 Desktop-Ubuntu mopidy[10137]: DEBUG    [HttpFrontend-11 (_actor_loop)] mopidy.zeroconf Zeroconf service 'Mopidy HTTP server on Desktop-Ubuntu' (_mopidy-http._tcp at []:6680): Unpublished
okt 24 14:14:17 Desktop-Ubuntu mopidy[10137]: DEBUG    [HttpFrontend-11 (_actor_loop)] mopidy.zeroconf Zeroconf service 'Mopidy HTTP server on Desktop-Ubuntu' (_http._tcp at []:6680): Unpublished
okt 24 14:14:17 Desktop-Ubuntu mopidy[10137]: DEBUG    [HttpFrontend-11 (_actor_loop)] pykka Stopped HttpFrontend (urn:uuid:7ccb8f62-2b21-4826-9e0e-14be1eaf846f)
okt 24 14:14:17 Desktop-Ubuntu mopidy[10137]: DEBUG    [HttpFrontend-11 (_actor_loop)] pykka Unregistered HttpFrontend (urn:uuid:7ccb8f62-2b21-4826-9e0e-14be1eaf846f)
okt 24 14:14:17 Desktop-Ubuntu mopidy[10137]: DEBUG    [MainThread] mopidy.internal.process Stopping 1 instance(s) of HttpFrontend
okt 24 14:14:17 Desktop-Ubuntu mopidy[10137]: INFO     [IrisFrontend-9 (_actor_loop)] mopidy_iris.core Stopping Iris
okt 24 14:14:17 Desktop-Ubuntu mopidy[10137]: DEBUG    [IrisFrontend-9 (_actor_loop)] pykka Stopped IrisFrontend (urn:uuid:05556bb5-f60e-461d-8789-7265648a76c8)
okt 24 14:14:17 Desktop-Ubuntu mopidy[10137]: DEBUG    [IrisFrontend-9 (_actor_loop)] pykka Unregistered IrisFrontend (urn:uuid:05556bb5-f60e-461d-8789-7265648a76c8)
okt 24 14:14:17 Desktop-Ubuntu mopidy[10137]: DEBUG    [MainThread] mopidy.internal.process Stopping 1 instance(s) of IrisFrontend
okt 24 14:14:17 Desktop-Ubuntu mopidy[10137]: DEBUG    [YTMusicScrobbleFE-8 (_actor_loop)] pykka Stopped YTMusicScrobbleFE (urn:uuid:df8d26f7-1120-4b5b-b1e2-6e40948d727f)
okt 24 14:14:17 Desktop-Ubuntu mopidy[10137]: DEBUG    [YTMusicScrobbleFE-8 (_actor_loop)] pykka Unregistered YTMusicScrobbleFE (urn:uuid:df8d26f7-1120-4b5b-b1e2-6e40948d727f)
okt 24 14:14:17 Desktop-Ubuntu mopidy[10137]: DEBUG    [MainThread] mopidy.internal.process Stopping 1 instance(s) of YTMusicScrobbleFE
okt 24 14:14:17 Desktop-Ubuntu mopidy[10137]: INFO     [MainThread] mopidy.commands Stopping Mopidy frontends
okt 24 14:14:17 Desktop-Ubuntu mopidy[10137]: INFO     [MainThread] mopidy.commands GLib mainloop got SIGTERM. Exiting...
okt 24 14:14:17 Desktop-Ubuntu systemd[1]: Stopping Mopidy music server...
okt 24 14:13:35 Desktop-Ubuntu mopidy[10137]: DEBUG    [HttpServer] mopidy_iris.core {'id': 166661361545610, 'jsonrpc': '2.0', 'method': 'get_version', 'result': {'version': {'current': '3.64.1', 'latest': '3.64.1', 'is_root': False, 'upgrade_available': False}}, 'recipient': 'Z5XH0PERAYTT'}
okt 24 14:13:35 Desktop-Ubuntu mopidy[10137]: DEBUG    [HttpServer] mopidy_iris.handlers Iris websocket message received: {"jsonrpc":"2.0","id":166661361545610,"method":"get_version"}
okt 24 14:13:34 Desktop-Ubuntu mopidy[10137]: DEBUG    [HttpServer] mopidy_iris.core {'id': 166661361495537, 'jsonrpc': '2.0', 'method': 'get_queue_metadata', 'result': {'queue_metadata': {}}, 'recipient': 'Z5XH0PERAYTT'}
okt 24 14:13:34 Desktop-Ubuntu mopidy[10137]: DEBUG    [HttpServer] mopidy_iris.handlers Iris websocket message received: {"jsonrpc":"2.0","id":166661361495537,"method":"get_queue_metadata"}
okt 24 14:13:34 Desktop-Ubuntu mopidy[10137]: DEBUG    [HttpServer] mopidy_iris.core {'id': 166661361495475, 'jsonrpc': '2.0', 'method': 'get_pinned', 'result': {'pinned': []}, 'recipient': 'Z5XH0PERAYTT'}
okt 24 14:13:34 Desktop-Ubuntu mopidy[10137]: DEBUG    [HttpServer] mopidy_iris.handlers Iris websocket message received: {"jsonrpc":"2.0","id":166661361495475,"method":"get_pinned"}
okt 24 14:13:34 Desktop-Ubuntu mopidy[10137]: DEBUG    [HttpServer] mopidy_iris.core {'id': 166661361495344, 'jsonrpc': '2.0', 'method': 'get_commands', 'result': {'commands': {}}, 'recipient': 'Z5XH0PERAYTT'}
okt 24 14:13:34 Desktop-Ubuntu mopidy[10137]: DEBUG    [HttpServer] mopidy_iris.handlers Iris websocket message received: {"jsonrpc":"2.0","id":166661361495344,"method":"get_commands"}
okt 24 14:13:34 Desktop-Ubuntu mopidy[10137]: DEBUG    [HttpServer] mopidy_iris.core {'id': 166661361495247, 'jsonrpc': '2.0', 'method': 'get_radio', 'result': {'radio': {'enabled': 0, 'seed_artists': [], 'seed_genres': [], 'seed_tracks': [], 'results': []}}, 'recipient': 'Z5XH0PERAYTT'}
okt 24 14:13:34 Desktop-Ubuntu mopidy[10137]: DEBUG    [HttpServer] mopidy_iris.handlers Iris websocket message received: {"jsonrpc":"2.0","id":166661361495247,"method":"get_radio"}
okt 24 14:13:34 Desktop-Ubuntu mopidy[10137]: DEBUG    [HttpServer] mopidy_iris.core {'id': 16666136149516, 'jsonrpc': '2.0', 'method': 'get_shared_config', 'result': {'shared_config': {}}, 'recipient': 'Z5XH0PERAYTT'}
okt 24 14:13:34 Desktop-Ubuntu mopidy[10137]: DEBUG    [HttpServer] mopidy_iris.handlers Iris websocket message received: {"jsonrpc":"2.0","id":16666136149516,"method":"get_shared_config"}
okt 24 14:13:34 Desktop-Ubuntu mopidy[10137]: DEBUG    [HttpServer] mopidy_iris.core {'id': 166661361495090, 'jsonrpc': '2.0', 'method': 'get_config', 'result': {'config': {'is_root': False, 'spotify_username': False, 'country': 'NZ', 'locale': 'en_NZ', 'snapcast_enabled': True, 'snapcast_host': 'localhost', 'snapcast_port': '1780', 'snapcast_ssl': False, 'snapcast_stream': 'Default', 'spotify_authorization_url': 'https://jamesbarnsley.co.nz/iris/auth_spotify.php', 'lastfm_authorization_url': 'https://jamesbarnsley.co.nz/iris/auth_lastfm.php', 'genius_authorization_url': 'https://jamesbarnsley.co.nz/iris/auth_genius.php', 'shared_config': {}}}, 'recipient': 'Z5XH0PERAYTT'}
okt 24 14:13:34 Desktop-Ubuntu mopidy[10137]: DEBUG    [HttpServer] mopidy_iris.handlers Iris websocket message received: {"jsonrpc":"2.0","id":166661361495090,"method":"get_config"}
okt 24 14:13:34 Desktop-Ubuntu mopidy[10137]: DEBUG    [HttpServer] mopidy_iris.core {'id': 166661361494952, 'jsonrpc': '2.0', 'method': 'update_connection', 'result': {'connection': {'connection_id': 'Z5XH0PERAYTT', 'ip': '127.0.0.1', 'created': '2022-10-24 14:13:34', 'username': 166656148284185, 'client_id': 166656148284193}}, 'recipient': 'Z5XH0PERAYTT'}
okt 24 14:13:34 Desktop-Ubuntu mopidy[10137]: DEBUG    [HttpServer] mopidy_iris.core {'method': 'connection_changed', 'params': {'connection': {'connection_id': 'Z5XH0PERAYTT', 'ip': '127.0.0.1', 'created': '2022-10-24 14:13:34', 'username': 166656148284185, 'client_id': 166656148284193}}}
okt 24 14:13:34 Desktop-Ubuntu mopidy[10137]: DEBUG    [HttpServer] mopidy_iris.handlers Iris websocket message received: {"jsonrpc":"2.0","id":166661361494952,"method":"update_connection","params":{"username":166656148284185,"client_id":166656148284193}}
okt 24 14:13:34 Desktop-Ubuntu mopidy[10137]: DEBUG    [HttpServer] mopidy_iris.core {'method': 'connection_added', 'params': {'connection': {'connection_id': 'Z5XH0PERAYTT', 'ip': '127.0.0.1', 'created': '2022-10-24 14:13:34'}}}
okt 24 14:13:34 Desktop-Ubuntu mopidy[10137]: DEBUG    [HttpServer] mopidy_iris.core <mopidy_iris.handlers.WebsocketHandler object at 0x7f2fa4aacf70>
okt 24 14:13:34 Desktop-Ubuntu mopidy[10137]: DEBUG    [HttpServer] mopidy_iris.core Connection added
okt 24 14:13:34 Desktop-Ubuntu mopidy[10137]: INFO     [HttpServer] tornado.access 101 GET /iris/ws/ (127.0.0.1) 0.53ms
okt 24 14:13:31 Desktop-Ubuntu mopidy[10137]: INFO     [HttpServer] tornado.access 304 GET /iris/assets/favicon_error.png (127.0.0.1) 5.73ms
okt 24 14:13:30 Desktop-Ubuntu mopidy[10137]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 31, "result": null}'
okt 24 14:13:30 Desktop-Ubuntu mopidy[10137]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.playback.get_stream_title","params":{},"jsonrpc":"2.0","id":31}'
okt 24 14:13:30 Desktop-Ubuntu mopidy[10137]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 30, "result": ["file", "http", "https", "local", "m3u", "rtsp"]}'
okt 24 14:13:30 Desktop-Ubuntu mopidy[10137]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.get_uri_schemes","params":{},"jsonrpc":"2.0","id":30}'
okt 24 14:13:30 Desktop-Ubuntu mopidy[10137]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 29, "result": 0}'
okt 24 14:13:30 Desktop-Ubuntu mopidy[10137]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.playback.get_time_position","params":{},"jsonrpc":"2.0","id":29}'
okt 24 14:13:30 Desktop-Ubuntu mopidy[10137]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 28, "result": []}'
okt 24 14:13:30 Desktop-Ubuntu mopidy[10137]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_tl_tracks","params":{},"jsonrpc":"2.0","id":28}'
okt 24 14:13:30 Desktop-Ubuntu mopidy[10137]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 27, "result": false}'
okt 24 14:13:30 Desktop-Ubuntu mopidy[10137]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_repeat","params":{},"jsonrpc":"2.0","id":27}'
okt 24 14:13:30 Desktop-Ubuntu mopidy[10137]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 26, "result": false}'
okt 24 14:13:30 Desktop-Ubuntu mopidy[10137]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_random","params":{},"jsonrpc":"2.0","id":26}'
okt 24 14:13:30 Desktop-Ubuntu mopidy[10137]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 25, "result": false}'
okt 24 14:13:30 Desktop-Ubuntu mopidy[10137]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_consume","params":{},"jsonrpc":"2.0","id":25}'
okt 24 14:13:30 Desktop-Ubuntu mopidy[10137]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 24, "result": false}'
okt 24 14:13:30 Desktop-Ubuntu mopidy[10137]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.mixer.get_mute","params":{},"jsonrpc":"2.0","id":24}'
okt 24 14:13:30 Desktop-Ubuntu mopidy[10137]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 23, "result": 100}'
okt 24 14:13:30 Desktop-Ubuntu mopidy[10137]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.mixer.get_volume","params":{},"jsonrpc":"2.0","id":23}'
okt 24 14:13:30 Desktop-Ubuntu mopidy[10137]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 22, "result": "stopped"}'
okt 24 14:13:30 Desktop-Ubuntu mopidy[10137]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.playback.get_state","params":{},"jsonrpc":"2.0","id":22}'
okt 24 14:13:30 Desktop-Ubuntu mopidy[10137]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 21, "result": null}'
okt 24 14:13:30 Desktop-Ubuntu mopidy[10137]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.playback.get_current_tl_track","params":{},"jsonrpc":"2.0","id":21}'
okt 24 14:13:30 Desktop-Ubuntu mopidy[10137]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 20, "result": {"core.get_uri_schemes": {"description": "Get list of URI schemes we can handle", "params": []}, "core.get_version": {"description": "Get version of the Mopidy core API", "params": []}, "core.history.get_history": {"description": "Get the track history.\\n\\nThe timestamps are milliseconds since epoch.\\n\\n:returns: the track history\\n:rtype: list of (timestamp, :class:`mopidy.models.Ref`) tuples", "params": []}, "core.history.get_length": {"description": "Get the number of tracks in the history.\\n\\n:returns: the history length\\n:rtype: int", "params": []}, "core.library.browse": {"description": "Browse directories and tracks at the given ``uri``.\\n\\n``uri`` is a string which represents some directory belonging to a\\nbackend. To get the intial root directories for backends pass\\n:class:`None` as the URI.\\n\\nReturns a list of :class:`mopidy.models.Ref` objects for the\\ndirectories and tracks at the given ``uri``.\\n\\nThe :class:`~mopidy.models.Ref` objects representing tracks keep the\\ntrack\'s original URI. A matching pair of objects can look like this::\\n\\n    Track(uri=\'dummy:/foo.mp3\', name=\'foo\', artists=..., album=...)\\n    Ref.track(uri=\'dummy:/foo.mp3\', name=\'foo\')\\n\\nThe :class:`~mopidy.models.Ref` objects representing directories have\\nbackend specific URIs. These are opaque values, so no one but the\\nbackend that created them should try and derive any meaning from them.\\nThe only valid exception to this is checking the scheme, as it is used\\nto route browse requests to the correct backend.\\n\\nFor example, the dummy library\'s ``/bar`` directory could be returned\\nlike this::\\n\\n    Ref.directory(uri=\'dummy:directory:/bar\', name=\'bar\')\\n\\n:param string uri: URI to browse\\n:rtype: list of :class:`mopidy.models.Ref`\\n\\n.. versionadded:: 0.18", "params": [{"name": "uri"}]}, "core.library.get_distinct": {"description": "List distinct values for a given field from the library.\\n\\nThis has mainly been added to support the list commands the MPD\\nprotocol supports in a more sane fashion. Other frontends are not\\nrecommended to use this method.\\n\\n:param string field: Any one of ``uri``, ``track_name``, ``album``,\\n    ``artist``, ``albumartist``, ``composer``, ``performer``,\\n    ``track_no``, ``genre``, ``date``, ``comment``, ``disc_no``,\\n    ``musicbrainz_albumid``, ``musicbrainz_artistid``, or\\n    ``musicbrainz_trackid``.\\n:param dict query: Query to use for limiting results, see\\n    :meth:`search` for details about the query format.\\n:rtype: set of values corresponding to the requested field type.\\n\\n.. versionadded:: 1.0", "params": [{"name": "field"}, {"name": "query", "default": null}]}, "core.library.get_images": {"description": "Lookup the images for the given URIs\\n\\nBackends can use this to return image URIs for any URI they know about\\nbe it tracks, albums, playlists. The lookup result is a dictionary\\nmapping the provided URIs to lists of images.\\n\\nUnknown URIs or URIs the corresponding backend couldn\'t find anything\\nfor will simply return an empty list for that URI.\\n\\n:param uris: list of URIs to find images for\\n:type uris: list of string\\n:rtype: {uri: tuple of :class:`mopidy.models.Image`}\\n\\n.. versionadded:: 1.0", "params": [{"name": "uris"}]}, "core.library.lookup": {"description": "Lookup the given URIs.\\n\\nIf the URI expands to multiple tracks, the returned list will contain\\nthem all.\\n\\n:param uris: track URIs\\n:type uris: list of string\\n:rtype: {uri: list of :class:`mopidy.models.Track`}", "params": [{"name": "uris"}]}, "core.library.refresh": {"description": "Refresh library. Limit to URI and below if an URI is given.\\n\\n:param uri: directory or track URI\\n:type uri: string", "params": [{"name": "uri", "default": null}]}, "core.library.search": {"description": "Search the library for tracks where ``field`` contains ``values``.\\n\\n``field`` can be one of ``uri``, ``track_name``, ``album``, ``artist``,\\n``albumartist``, ``composer``, ``performer``, ``track_no``, ``genre``,\\n``date``, ``comment``, ``disc_no``, ``musicbrainz_albumid``,\\n``musicbrainz_artistid``, ``musicbrainz_trackid`` or ``any``.\\n\\nIf ``uris`` is given, the search is limited to results from within the\\nURI roots. For example passing ``uris=[\'file:\']`` will limit the search\\nto the local backend.\\n\\nExamples::\\n\\n    # Returns results matching \'a\' in any backend\\n    search({\'any\': [\'a\']})\\n\\n    # Returns results matching artist \'xyz\' in any backend\\n    search({\'artist\': [\'xyz\']})\\n\\n    # Returns results matching \'a\' and \'b\' and artist \'xyz\' in any\\n    # backend\\n    search({\'any\': [\'a\', \'b\'], \'artist\': [\'xyz\']})\\n\\n    # Returns results matching \'a\' if within the given URI roots\\n    # \\"file:///media/music\\" and \\"spotify:\\"\\n    search({\'any\': [\'a\']}, uris=[\'file:///media/music\', \'spotify:\'])\\n\\n    # Returns results matching artist \'xyz\' and \'abc\' in any backend\\n    search({\'artist\': [\'xyz\', \'abc\']})\\n\\n:param query: one or more queries to search for\\n:type query: dict\\n:param uris: zero or more URI roots to limit the search to\\n:type uris: list of string or :class:`None`\\n:param exact: if the search should use exact matching\\n:type exact: :class:`bool`\\n:rtype: list of :class:`mopidy.models.SearchResult`\\n\\n.. versionadded:: 1.0\\n    The ``exact`` keyword argument.", "params": [{"name": "query"}, {"name": "uris", "default": null}, {"name": "exact", "default": false}]}, "core.mixer.get_mute": {"description": "Get mute state.\\n\\n:class:`True` if muted, :class:`False` unmuted, :class:`None` if\\nunknown.", "params": []}, "core.mixer.get_volume": {"description": "Get the volume.\\n\\nInteger in range [0..100] or :class:`None` if unknown.\\n\\nThe volume scale is linear.", "params": []}, "core.mixer.set_mute": {"description": "Set mute state.\\n\\n:class:`True` to mute, :class:`False` to unmute.\\n\\nReturns :class:`True` if call is successful, otherwise :class:`False`.", "params": [{"name": "mute"}]}, "core.mixer.set_volume": {"description": "Set the volume.\\n\\nThe volume is defined as an integer in range [0..100].\\n\\nThe volume scale is linear.\\n\\nReturns :class:`True` if call is successful, otherwise :class:`False`.", "params": [{"name": "volume"}]}, "core.playback.get_current_tl_track": {"description": "Get the currently playing or selected track.\\n\\nReturns a :class:`mopidy.models.TlTrack` or :class:`None`.", "params": []}, "core.playback.get_current_tlid": {"description": "Get the currently playing or selected TLID.\\n\\nExtracted from :meth:`get_current_tl_track` for convenience.\\n\\nReturns a :class:`int` or :class:`None`.\\n\\n.. versionadded:: 1.1", "params": []}, "core.playback.get_current_track": {"description": "Get the currently playing or selected track.\\n\\nExtracted from :meth:`get_current_tl_track` for convenience.\\n\\nReturns a :class:`mopidy.models.Track` or :class:`None`.", "params": []}, "core.playback.get_state": {"description": "Get The playback state.", "params": []}, "core.playback.get_stream_title": {"description": "Get the current stream title or :class:`None`.", "params": []}, "core.playback.get_time_position": {"description": "Get time position in milliseconds.", "params": []}, "core.playback.next": {"description": "Change to the next track.\\n\\nThe current playback state will be kept. If it was playing, playing\\nwill continue. If it was paused, it will still be paused, etc.", "params": []}, "core.playback.pause": {"description": "Pause playback.", "params": []}, "core.playback.play": {"description": "Play the given track, or if the given tl_track and tlid is\\n:class:`None`, play the currently active track.\\n\\nNote that the track **must** already be in the tracklist.\\n\\n.. deprecated:: 3.0\\n    The ``tl_track`` argument. Use ``tlid`` instead.\\n\\n:param tl_track: track to play\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:param tlid: TLID of the track to play\\n:type tlid: :class:`int` or :class:`None`", "params": [{"name": "tl_track", "default": null}, {"name": "tlid", "default": null}]}, "core.playback.previous": {"description": "Change to the previous track.\\n\\nThe current playback state will be kept. If it was playing, playing\\nwill continue. If it was paused, it will still be paused, etc.", "params": []}, "core.playback.resume": {"description": "If paused, resume playing the current track.", "params": []}, "core.playback.seek": {"description": "Seeks to time position given in milliseconds.\\n\\n:param time_position: time position in milliseconds\\n:type time_position: int\\n:rtype: :class:`True` if successful, else :class:`False`", "params": [{"name": "time_position"}]}, "core.playback.set_state": {"description": "Set the playback state.\\n\\nMust be :attr:`PLAYING`, :attr:`PAUSED`, or :attr:`STOPPED`.\\n\\nPossible states and transitions:\\n\\n.. digraph:: state_transitions\\n\\n    \\"STOPPED\\" -> \\"PLAYING\\" [ label=\\"play\\" ]\\n    \\"STOPPED\\" -> \\"PAUSED\\" [ label=\\"pause\\" ]\\n    \\"PLAYING\\" -> \\"STOPPED\\" [ label=\\"stop\\" ]\\n    \\"PLAYING\\" -> \\"PAUSED\\" [ label=\\"pause\\" ]\\n    \\"PLAYING\\" -> \\"PLAYING\\" [ label=\\"play\\" ]\\n    \\"PAUSED\\" -> \\"PLAYING\\" [ label=\\"resume\\" ]\\n    \\"PAUSED\\" -> \\"STOPPED\\" [ label=\\"stop\\" ]", "params": [{"name": "new_state"}]}, "core.playback.stop": {"description": "Stop playing.", "params": []}, "core.playlists.as_list": {"description": "Get a list of the currently available playlists.\\n\\nReturns a list of :class:`~mopidy.models.Ref` objects referring to the\\nplaylists. In other words, no information about the playlists\' content\\nis given.\\n\\n:rtype: list of :class:`mopidy.models.Ref`\\n\\n.. versionadded:: 1.0", "params": []}, "core.playlists.create": {"description": "Create a new playlist.\\n\\nIf ``uri_scheme`` matches an URI scheme handled by a current backend,\\nthat backend is asked to create the playlist. If ``uri_scheme`` is\\n:class:`None` or doesn\'t match a current backend, the first backend is\\nasked to create the playlist.\\n\\nAll new playlists must be created by calling this method, and **not**\\nby creating new instances of :class:`mopidy.models.Playlist`.\\n\\n:param name: name of the new playlist\\n:type name: string\\n:param uri_scheme: use the backend matching the URI scheme\\n:type uri_scheme: string\\n:rtype: :class:`mopidy.models.Playlist` or :class:`None`", "params": [{"name": "name"}, {"name": "uri_scheme", "default": null}]}, "core.playlists.delete": {"description": "Delete playlist identified by the URI.\\n\\nIf the URI doesn\'t match the URI schemes handled by the current\\nbackends, nothing happens.\\n\\nReturns :class:`True` if deleted, :class:`False` otherwise.\\n\\n:param uri: URI of the playlist to delete\\n:type uri: string\\n:rtype: :class:`bool`\\n\\n.. versionchanged:: 2.2\\n    Return type defined.", "params": [{"name": "uri"}]}, "core.playlists.get_items": {"description": "Get the items in a playlist specified by ``uri``.\\n\\nReturns a list of :class:`~mopidy.models.Ref` objects referring to the\\nplaylist\'s items.\\n\\nIf a playlist with the given ``uri`` doesn\'t exist, it returns\\n:class:`None`.\\n\\n:rtype: list of :class:`mopidy.models.Ref`, or :class:`None`\\n\\n.. versionadded:: 1.0", "params": [{"name": "uri"}]}, "core.playlists.get_uri_schemes": {"description": "Get the list of URI schemes that support playlists.\\n\\n:rtype: list of string\\n\\n.. versionadded:: 2.0", "params": []}, "core.playlists.lookup": {"description": "Lookup playlist with given URI in both the set of playlists and in any\\nother playlist sources. Returns :class:`None` if not found.\\n\\n:param uri: playlist URI\\n:type uri: string\\n:rtype: :class:`mopidy.models.Playlist` or :class:`None`", "params": [{"name": "uri"}]}, "core.playlists.refresh": {"description": "Refresh the playlists in :attr:`playlists`.\\n\\nIf ``uri_scheme`` is :class:`None`, all backends are asked to refresh.\\nIf ``uri_scheme`` is an URI scheme handled by a backend, only that\\nbackend is asked to refresh. If ``uri_scheme`` doesn\'t match any\\ncurrent backend, nothing happens.\\n\\n:param uri_scheme: limit to the backend matching the URI scheme\\n:type uri_scheme: string", "params": [{"name": "uri_scheme", "default": null}]}, "core.playlists.save": {"description": "Save the playlist.\\n\\nFor a playlist to be saveable, it must have the ``uri`` attribute set.\\nYou must not set the ``uri`` atribute yourself, but use playlist\\nobjects returned by :meth:`create` or retrieved from :attr:`playlists`,\\nwhich will always give you saveable playlists.\\n\\nThe method returns the saved playlist. The return playlist may differ\\nfrom the saved playlist. E.g. if the playlist name was changed, the\\nreturned playlist may have a different URI. The caller of this method\\nmust throw away the playlist sent to this method, and use the\\nreturned playlist instead.\\n\\nIf the playlist\'s URI isn\'t set or doesn\'t match the URI scheme of a\\ncurrent backend, nothing is done and :class:`None` is returned.\\n\\n:param playlist: the playlist\\n:type playlist: :class:`mopidy.models.Playlist`\\n:rtype: :class:`mopidy.models.Playlist` or :class:`None`", "params": [{"name": "playlist"}]}, "core.tracklist.add": {"description": "Add tracks to the tracklist.\\n\\nIf ``uris`` is given instead of ``tracks``, the URIs are\\nlooked up in the library and the resulting tracks are added to the\\ntracklist.\\n\\nIf ``at_position`` is given, the tracks are inserted at the given\\nposition in the tracklist. If ``at_position`` is not given, the tracks\\nare appended to the end of the tracklist.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.\\n\\n:param tracks: tracks to add\\n:type tracks: list of :class:`mopidy.models.Track` or :class:`None`\\n:param at_position: position in tracklist to add tracks\\n:type at_position: int or :class:`None`\\n:param uris: list of URIs for tracks to add\\n:type uris: list of string or :class:`None`\\n:rtype: list of :class:`mopidy.models.TlTrack`\\n\\n.. versionadded:: 1.0\\n    The ``uris`` argument.\\n\\n.. deprecated:: 1.0\\n    The ``tracks`` argument. Use ``uris``.", "params": [{"name": "tracks", "default": null}, {"name": "at_position", "default": null}, {"name": "uris", "default": null}]}, "core.tracklist.clear": {"description": "Clear the tracklist.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.", "params": []}, "core.tracklist.eot_track": {"description": "The track that will be played after the given track.\\n\\nNot necessarily the same track as :meth:`next_track`.\\n\\n.. deprecated:: 3.0\\n    Use :meth:`get_eot_tlid` instead.\\n\\n:param tl_track: the reference track\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:rtype: :class:`mopidy.models.TlTrack` or :class:`None`", "params": [{"name": "tl_track"}]}, "core.tracklist.filter": {"description": "Filter the tracklist by the given criteria.\\n\\nEach rule in the criteria consists of a model field and a list of\\nvalues to compare it against. If the model field matches any of the\\nvalues, it may be returned.\\n\\nOnly tracks that match all the given criteria are returned.\\n\\nExamples::\\n\\n    # Returns tracks with TLIDs 1, 2, 3, or 4 (tracklist ID)\\n    filter({\'tlid\': [1, 2, 3, 4]})\\n\\n    # Returns track with URIs \'xyz\' or \'abc\'\\n    filter({\'uri\': [\'xyz\', \'abc\']})\\n\\n    # Returns track with a matching TLIDs (1, 3 or 6) and a\\n    # matching URI (\'xyz\' or \'abc\')\\n    filter({\'tlid\': [1, 3, 6], \'uri\': [\'xyz\', \'abc\']})\\n\\n:param criteria: one or more rules to match by\\n:type criteria: dict, of (string, list) pairs\\n:rtype: list of :class:`mopidy.models.TlTrack`", "params": [{"name": "criteria"}]}, "core.tracklist.get_consume": {"description": "Get consume mode.\\n\\n:class:`True`\\n    Tracks are removed from the tracklist when they have been played.\\n:class:`False`\\n    Tracks are not removed from the tracklist.", "params": []}, "core.tracklist.get_eot_tlid": {"description": "The TLID of the track that will be played after the current track.\\n\\nNot necessarily the same TLID as returned by :meth:`get_next_tlid`.\\n\\n:rtype: :class:`int` or :class:`None`\\n\\n.. versionadded:: 1.1", "params": []}, "core.tracklist.get_length": {"description": "Get length of the tracklist.", "params": []}, "core.tracklist.get_next_tlid": {"description": "The tlid of the track that will be played if calling\\n:meth:`mopidy.core.PlaybackController.next()`.\\n\\nFor normal playback this is the next track in the tracklist. If repeat\\nis enabled the next track can loop around the tracklist. When random is\\nenabled this should be a random track, all tracks should be played once\\nbefore the tracklist repeats.\\n\\n:rtype: :class:`int` or :class:`None`\\n\\n.. versionadded:: 1.1", "params": []}, "core.tracklist.get_previous_tlid": {"description": "Returns the TLID of the track that will be played if calling\\n:meth:`mopidy.core.PlaybackController.previous()`.\\n\\nFor normal playback this is the previous track in the tracklist. If\\nrandom and/or consume is enabled it should return the current track\\ninstead.\\n\\n:rtype: :class:`int` or :class:`None`\\n\\n.. versionadded:: 1.1", "params": []}, "core.tracklist.get_random": {"description": "Get random mode.\\n\\n:class:`True`\\n    Tracks are selected at random from the tracklist.\\n:class:`False`\\n    Tracks are played in the order of the tracklist.", "params": []}, "core.tracklist.get_repeat": {"description": "Get repeat mode.\\n\\n:class:`True`\\n    The tracklist is played repeatedly.\\n:class:`False`\\n    The tracklist is played once.", "params": []}, "core.tracklist.get_single": {"description": "Get single mode.\\n\\n:class:`True`\\n    Playback is stopped after current song, unless in ``repeat`` mode.\\n:class:`False`\\n    Playback continues after current song.", "params": []}, "core.tracklist.get_tl_tracks": {"description": "Get tracklist as list of :class:`mopidy.models.TlTrack`.", "params": []}, "core.tracklist.get_tracks": {"description": "Get tracklist as list of :class:`mopidy.models.Track`.", "params": []}, "core.tracklist.get_version": {"description": "Get the tracklist version.\\n\\nInteger which is increased every time the tracklist is changed. Is not\\nreset before Mopidy is restarted.", "params": []}, "core.tracklist.index": {"description": "The position of the given track in the tracklist.\\n\\nIf neither *tl_track* or *tlid* is given we return the index of\\nthe currently playing track.\\n\\n:param tl_track: the track to find the index of\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:param tlid: TLID of the track to find the index of\\n:type tlid: :class:`int` or :class:`None`\\n:rtype: :class:`int` or :class:`None`\\n\\n.. versionadded:: 1.1\\n    The *tlid* parameter", "params": [{"name": "tl_track", "default": null}, {"name": "tlid", "default": null}]}, "core.tracklist.move": {"description": "Move the tracks in the slice ``[start:end]`` to ``to_position``.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.\\n\\n:param start: position of first track to move\\n:type start: int\\n:param end: position after last track to move\\n:type end: int\\n:param to_position: new position for the tracks\\n:type to_position: int", "params": [{"name": "start"}, {"name": "end"}, {"name": "to_position"}]}, "core.tracklist.next_track": {"description": "The track that will be played if calling\\n:meth:`mopidy.core.PlaybackController.next()`.\\n\\nFor normal playback this is the next track in the tracklist. If repeat\\nis enabled the next track can loop around the tracklist. When random is\\nenabled this should be a random track, all tracks should be played once\\nbefore the tracklist repeats.\\n\\n.. deprecated:: 3.0\\n    Use :meth:`get_next_tlid` instead.\\n\\n:param tl_track: the reference track\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:rtype: :class:`mopidy.models.TlTrack` or :class:`None`", "params": [{"name": "tl_track"}]}, "core.tracklist.previous_track": {"description": "Returns the track that will be played if calling\\n:meth:`mopidy.core.PlaybackController.previous()`.\\n\\nFor normal playback this is the previous track in the tracklist. If\\nrandom and/or consume is enabled it should return the current track\\ninstead.\\n\\n.. deprecated:: 3.0\\n    Use :meth:`get_previous_tlid` instead.\\n\\n:param tl_track: the reference track\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:rtype: :class:`mopidy.models.TlTrack` or :class:`None`", "params": [{"name": "tl_track"}]}, "core.tracklist.remove": {"description": "Remove the matching tracks from the tracklist.\\n\\nUses :meth:`filter()` to lookup the tracks to remove.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.\\n\\n:param criteria: one or more rules to match by\\n:type criteria: dict, of (string, list) pairs\\n:rtype: list of :class:`mopidy.models.TlTrack` that were removed", "params": [{"name": "criteria"}]}, "core.tracklist.set_consume": {"description": "Set consume mode.\\n\\n:class:`True`\\n    Tracks are removed from the tracklist when they have been played.\\n:class:`False`\\n    Tracks are not removed from the tracklist.", "params": [{"name": "value"}]}, "core.tracklist.set_random": {"description": "Set random mode.\\n\\n:class:`True`\\n    Tracks are selected at random from the tracklist.\\n:class:`False`\\n    Tracks are played in the order of the tracklist.", "params": [{"name": "value"}]}, "core.tracklist.set_repeat": {"description": "Set repeat mode.\\n\\nTo repeat a single track, set both ``repeat`` and ``single``.\\n\\n:class:`True`\\n    The tracklist is played repeatedly.\\n:class:`False`\\n    The tracklist is played once.", "params": [{"name": "value"}]}, "core.tracklist.set_single": {"description": "Set single mode.\\n\\n:class:`True`\\n    Playback is stopped after current song, unless in ``repeat`` mode.\\n:class:`False`\\n    Playback continues after current song.", "params": [{"name": "value"}]}, "core.tracklist.shuffle": {"description": "Shuffles the entire tracklist. If ``start`` and ``end`` is given only\\nshuffles the slice ``[start:end]``.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.\\n\\n:param start: position of first track to shuffle\\n:type start: int or :class:`None`\\n:param end: position after last track to shuffle\\n:type end: int or :class:`None`", "params": [{"name": "start", "default": null}, {"name": "end", "default": null}]}, "core.tracklist.slice": {"description": "Returns a slice of the tracklist, limited by the given start and end\\npositions.\\n\\n:param start: position of first track to include in slice\\n:type start: int\\n:param end: position after last track to include in slice\\n:type end: int\\n:rtype: :class:`mopidy.models.TlTrack`", "params": [{"name": "start"}, {"name": "end"}]}}}'
okt 24 14:13:30 Desktop-Ubuntu mopidy[10137]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.describe","jsonrpc":"2.0","id":20}'
okt 24 14:13:30 Desktop-Ubuntu mopidy[10137]: DEBUG    [HttpServer] mopidy.http.handlers New WebSocket connection from 127.0.0.1
okt 24 14:13:30 Desktop-Ubuntu mopidy[10137]: INFO     [HttpServer] tornado.access 101 GET /mopidy/ws/ (127.0.0.1) 19.53ms
okt 24 14:13:30 Desktop-Ubuntu mopidy[10137]: DEBUG    [HttpFrontend-11 (_actor_loop)] mopidy.zeroconf Zeroconf service 'Mopidy HTTP server on Desktop-Ubuntu' (_mopidy-http._tcp at []:6680): Published
okt 24 14:13:30 Desktop-Ubuntu mopidy[10137]: DEBUG    [HttpFrontend-11 (_actor_loop)] mopidy.zeroconf Zeroconf service 'Mopidy HTTP server on Desktop-Ubuntu' (_http._tcp at []:6680): Published
okt 24 14:13:30 Desktop-Ubuntu mopidy[10137]:     '/': <class 'tornado.web.RedirectHandler'>
okt 24 14:13:30 Desktop-Ubuntu mopidy[10137]:     '/mopidy/': <class 'mopidy.http.handlers.ClientListHandler'>
okt 24 14:13:30 Desktop-Ubuntu mopidy[10137]:     '/mopidy/(.+)': <class 'mopidy.http.handlers.StaticFileHandler'>
okt 24 14:13:30 Desktop-Ubuntu mopidy[10137]:     '/mopidy/rpc': <class 'mopidy.http.handlers.JsonRpcHandler'>
okt 24 14:13:30 Desktop-Ubuntu mopidy[10137]:     '/mopidy/ws/?': <class 'mopidy.http.handlers.WebSocketHandler'>
okt 24 14:13:30 Desktop-Ubuntu mopidy[10137]:     '/mopidy': <class 'mopidy.http.handlers.AddSlashHandler'>
okt 24 14:13:30 Desktop-Ubuntu mopidy[10137]:     '/iris/(.*)': <class 'mopidy_iris.handlers.ReactRouterHandler'>
okt 24 14:13:30 Desktop-Ubuntu mopidy[10137]:     '/iris/((.*)(?:css|js|json|map)$)': <class 'tornado.web.StaticFileHandler'>
okt 24 14:13:30 Desktop-Ubuntu mopidy[10137]:     '/iris/assets/(.*)': <class 'tornado.web.StaticFileHandler'>
okt 24 14:13:30 Desktop-Ubuntu mopidy[10137]:     '/iris/ws/?': <class 'mopidy_iris.handlers.WebsocketHandler'>
okt 24 14:13:30 Desktop-Ubuntu mopidy[10137]:     '/iris/http/([^/]*)': <class 'mopidy_iris.handlers.HttpHandler'>
okt 24 14:13:30 Desktop-Ubuntu mopidy[10137]:     '/iris': <class 'mopidy.http.handlers.AddSlashHandler'>
okt 24 14:13:30 Desktop-Ubuntu mopidy[10137]:     '/local/(.+)': <class 'mopidy_local.web.ImageHandler'>
okt 24 14:13:30 Desktop-Ubuntu mopidy[10137]:     '/local/(index.html)?': <class 'mopidy_local.web.IndexHandler'>
okt 24 14:13:30 Desktop-Ubuntu mopidy[10137]:     '/local': <class 'mopidy.http.handlers.AddSlashHandler'>
okt 24 14:13:30 Desktop-Ubuntu mopidy[10137]: DEBUG    [HttpServer] mopidy.http.actor HTTP routes from extensions:
okt 24 14:13:30 Desktop-Ubuntu mopidy[10137]: DEBUG    [HttpServer] mopidy.http.actor Default webclient is mopidy
okt 24 14:13:30 Desktop-Ubuntu mopidy[10137]: DEBUG    [HttpServer] mopidy.http.actor Loaded HTTP extension: mopidy
okt 24 14:13:30 Desktop-Ubuntu mopidy[10137]: DEBUG    [HttpServer] mopidy.http.actor Loaded HTTP extension: iris
okt 24 14:13:30 Desktop-Ubuntu mopidy[10137]: DEBUG    [HttpServer] mopidy.http.actor Loaded HTTP extension: local
okt 24 14:13:30 Desktop-Ubuntu mopidy[10137]: DEBUG    [HttpServer] asyncio Using selector: EpollSelector
okt 24 14:13:30 Desktop-Ubuntu mopidy[10137]: INFO     [MainThread] mopidy.commands Starting GLib mainloop
okt 24 14:13:30 Desktop-Ubuntu mopidy[10137]: TRACE    [MainThread] mopidy.internal.timer HttpFrontend took 0ms
okt 24 14:13:30 Desktop-Ubuntu mopidy[10137]: INFO     [HttpFrontend-11 (_actor_loop)] mopidy.http.actor HTTP server running at [::ffff:127.0.0.1]:6680
okt 24 14:13:30 Desktop-Ubuntu mopidy[10137]: DEBUG    [MainThread] pykka Starting HttpFrontend (urn:uuid:7ccb8f62-2b21-4826-9e0e-14be1eaf846f)
okt 24 14:13:30 Desktop-Ubuntu mopidy[10137]: DEBUG    [MainThread] pykka Registered HttpFrontend (urn:uuid:7ccb8f62-2b21-4826-9e0e-14be1eaf846f)
okt 24 14:13:30 Desktop-Ubuntu mopidy[10137]: DEBUG    [MainThread] mopidy.http.actor Starting HTTP server
okt 24 14:13:30 Desktop-Ubuntu mopidy[10137]: TRACE    [MainThread] mopidy.internal.timer IrisFrontend took 1ms
okt 24 14:13:30 Desktop-Ubuntu mopidy[10137]: INFO     [IrisFrontend-9 (_actor_loop)] mopidy_iris.core Starting Iris 3.64.1
okt 24 14:13:30 Desktop-Ubuntu mopidy[10137]: DEBUG    [MainThread] pykka Starting IrisFrontend (urn:uuid:05556bb5-f60e-461d-8789-7265648a76c8)
okt 24 14:13:30 Desktop-Ubuntu mopidy[10137]: DEBUG    [MainThread] pykka Registered IrisFrontend (urn:uuid:05556bb5-f60e-461d-8789-7265648a76c8)
okt 24 14:13:30 Desktop-Ubuntu mopidy[10137]: TRACE    [MainThread] mopidy.internal.timer YTMusicScrobbleFE took 0ms
okt 24 14:13:30 Desktop-Ubuntu mopidy[10137]: DEBUG    [MainThread] pykka Starting YTMusicScrobbleFE (urn:uuid:df8d26f7-1120-4b5b-b1e2-6e40948d727f)
okt 24 14:13:30 Desktop-Ubuntu mopidy[10137]: DEBUG    [MainThread] pykka Registered YTMusicScrobbleFE (urn:uuid:df8d26f7-1120-4b5b-b1e2-6e40948d727f)
okt 24 14:13:30 Desktop-Ubuntu mopidy[10137]: INFO     [MainThread] mopidy.commands Starting Mopidy frontends: YTMusicScrobbleFE, IrisFrontend, HttpFrontend
okt 24 14:13:30 Desktop-Ubuntu mopidy[10137]: DEBUG    [MainThread] pykka Starting Core (urn:uuid:8a5c7658-b26b-41a8-a5e3-e3766fb2ab93)
okt 24 14:13:30 Desktop-Ubuntu mopidy[10137]: DEBUG    [MainThread] pykka Registered Core (urn:uuid:8a5c7658-b26b-41a8-a5e3-e3766fb2ab93)
okt 24 14:13:30 Desktop-Ubuntu mopidy[10137]: INFO     [MainThread] mopidy.commands Starting Mopidy core
okt 24 14:13:30 Desktop-Ubuntu mopidy[10137]: TRACE    [MainThread] mopidy.internal.timer StreamBackend took 3ms
okt 24 14:13:30 Desktop-Ubuntu mopidy[10137]: DEBUG    [MainThread] pykka Starting StreamBackend (urn:uuid:081624a1-4c8a-4d31-bbd9-bbb233528996)
okt 24 14:13:30 Desktop-Ubuntu mopidy[10137]: DEBUG    [MainThread] pykka Registered StreamBackend (urn:uuid:081624a1-4c8a-4d31-bbd9-bbb233528996)
okt 24 14:13:30 Desktop-Ubuntu mopidy[10137]: TRACE    [MainThread] mopidy.internal.timer M3UBackend took 2ms
okt 24 14:13:30 Desktop-Ubuntu mopidy[10137]: DEBUG    [MainThread] pykka Starting M3UBackend (urn:uuid:008de4b9-2a86-43dd-af94-d8bbd5fdbaec)
okt 24 14:13:30 Desktop-Ubuntu mopidy[10137]: DEBUG    [MainThread] pykka Registered M3UBackend (urn:uuid:008de4b9-2a86-43dd-af94-d8bbd5fdbaec)
okt 24 14:13:30 Desktop-Ubuntu mopidy[10137]: TRACE    [MainThread] mopidy.internal.timer FileBackend took 3ms
okt 24 14:13:30 Desktop-Ubuntu mopidy[10137]: DEBUG    [MainThread] pykka Starting FileBackend (urn:uuid:c80e6480-6c1d-4e09-a63f-8637f7d9e6e9)
okt 24 14:13:30 Desktop-Ubuntu mopidy[10137]: DEBUG    [MainThread] pykka Registered FileBackend (urn:uuid:c80e6480-6c1d-4e09-a63f-8637f7d9e6e9)
okt 24 14:13:30 Desktop-Ubuntu mopidy[10137]: INFO     [Audio-2 (_actor_loop)] mopidy.audio.actor Audio output set to "pulsesink server=127.0.0.1"
okt 24 14:13:30 Desktop-Ubuntu mopidy[10137]: DEBUG    [MainThread] mopidy.file.library Failed expanding path ($XDG_MUSIC_DIR) from file/media_dirs config value.
okt 24 14:13:30 Desktop-Ubuntu mopidy[10137]: AttributeError: 'YTMusic' object has no attribute 'headers'
okt 24 14:13:30 Desktop-Ubuntu mopidy[10137]:     if 'x-goog-visitor-id' not in self.headers:
okt 24 14:13:30 Desktop-Ubuntu mopidy[10137]:   File "/usr/local/lib/python3.10/dist-packages/ytmusicapi/ytmusic.py", line 98, in __init__
okt 24 14:13:30 Desktop-Ubuntu mopidy[10137]:     self.api = YTMusic(self._ytmusicapi_auth_json)
okt 24 14:13:30 Desktop-Ubuntu mopidy[10137]:   File "/usr/local/lib/python3.10/dist-packages/mopidy_ytmusic/backend.py", line 65, in __init__
okt 24 14:13:30 Desktop-Ubuntu mopidy[10137]:     obj = cls(*args, **kwargs)
okt 24 14:13:30 Desktop-Ubuntu mopidy[10137]:   File "/usr/lib/python3/dist-packages/pykka/_actor.py", line 91, in start
okt 24 14:13:30 Desktop-Ubuntu mopidy[10137]:     backend = backend_class.start(
okt 24 14:13:30 Desktop-Ubuntu mopidy[10137]:   File "/usr/lib/python3/dist-packages/mopidy/commands.py", line 412, in start_backends
okt 24 14:13:30 Desktop-Ubuntu mopidy[10137]:     yield
okt 24 14:13:30 Desktop-Ubuntu mopidy[10137]:   File "/usr/lib/python3/dist-packages/mopidy/commands.py", line 248, in _actor_error_handling
okt 24 14:13:30 Desktop-Ubuntu mopidy[10137]: Traceback (most recent call last):
okt 24 14:13:30 Desktop-Ubuntu mopidy[10137]: ERROR    [MainThread] mopidy.commands Got un-handled exception from YTMusicBackend
okt 24 14:13:30 Desktop-Ubuntu mopidy[10137]: TRACE    [MainThread] mopidy.internal.timer LocalBackend took 4ms
okt 24 14:13:30 Desktop-Ubuntu mopidy[10137]: DEBUG    [MainThread] pykka Starting LocalBackend (urn:uuid:c00a16d3-a2a6-45e9-8827-6eb6f382e72b)
okt 24 14:13:30 Desktop-Ubuntu mopidy[10137]: DEBUG    [MainThread] pykka Registered LocalBackend (urn:uuid:c00a16d3-a2a6-45e9-8827-6eb6f382e72b)
okt 24 14:13:30 Desktop-Ubuntu mopidy[10137]: INFO     [MainThread] mopidy.commands Starting Mopidy backends: LocalBackend, YTMusicBackend, FileBackend, M3UBackend, StreamBackend
okt 24 14:13:30 Desktop-Ubuntu mopidy[10137]: DEBUG    [MainThread] pykka Starting Audio (urn:uuid:821ea36e-012f-4b1f-aaca-5d09b061260b)
okt 24 14:13:30 Desktop-Ubuntu mopidy[10137]: DEBUG    [MainThread] pykka Registered Audio (urn:uuid:821ea36e-012f-4b1f-aaca-5d09b061260b)
okt 24 14:13:30 Desktop-Ubuntu mopidy[10137]: INFO     [MainThread] mopidy.commands Starting Mopidy audio
okt 24 14:13:30 Desktop-Ubuntu mopidy[10137]: DEBUG    [MainThread] mopidy.commands Mixer volume left unchanged
okt 24 14:13:30 Desktop-Ubuntu mopidy[10137]: DEBUG    [MainThread] pykka Starting SoftwareMixer (urn:uuid:3866752e-08a0-445f-b0b5-e97654e39fcc)
okt 24 14:13:30 Desktop-Ubuntu mopidy[10137]: DEBUG    [MainThread] pykka Registered SoftwareMixer (urn:uuid:3866752e-08a0-445f-b0b5-e97654e39fcc)
okt 24 14:13:30 Desktop-Ubuntu mopidy[10137]: INFO     [MainThread] mopidy.commands Starting Mopidy mixer: SoftwareMixer
okt 24 14:13:30 Desktop-Ubuntu mopidy[10137]: DEBUG    [MainThread] mopidy.commands Available Mopidy mixers: SoftwareMixer
okt 24 14:13:30 Desktop-Ubuntu mopidy[10137]: INFO     [MainThread] mopidy.__main__ Disabled extensions: youtube, soundcloud
okt 24 14:13:30 Desktop-Ubuntu mopidy[10137]: INFO     [MainThread] mopidy.__main__ Enabled extensions: ytmusic, softwaremixer, stream, iris, local, file, m3u, http
okt 24 14:13:30 Desktop-Ubuntu mopidy[10137]: DEBUG    [MainThread] mopidy.ext Validating extension: stream
okt 24 14:13:30 Desktop-Ubuntu mopidy[10137]: DEBUG    [MainThread] mopidy.ext Validating extension: softwaremixer
okt 24 14:13:30 Desktop-Ubuntu mopidy[10137]: DEBUG    [MainThread] mopidy.ext Validating extension: m3u
okt 24 14:13:30 Desktop-Ubuntu mopidy[10137]: DEBUG    [MainThread] mopidy.ext Validating extension: http
okt 24 14:13:30 Desktop-Ubuntu mopidy[10137]: DEBUG    [MainThread] mopidy.ext Validating extension: file
okt 24 14:13:30 Desktop-Ubuntu mopidy[10137]: DEBUG    [MainThread] mopidy.ext Validating extension: iris
okt 24 14:13:30 Desktop-Ubuntu mopidy[10137]: DEBUG    [MainThread] mopidy.ext Validating extension: ytmusic
okt 24 14:13:30 Desktop-Ubuntu mopidy[10137]: DEBUG    [MainThread] mopidy.ext Validating extension: soundcloud
okt 24 14:13:30 Desktop-Ubuntu mopidy[10137]: DEBUG    [MainThread] mopidy.ext Validating extension: local
okt 24 14:13:30 Desktop-Ubuntu mopidy[10137]: DEBUG    [MainThread] mopidy.ext Validating extension: youtube
okt 24 14:13:30 Desktop-Ubuntu mopidy[10137]: WARNING  [MainThread] mopidy.config Ignoring config section 'jukebox' because no matching extension was found
okt 24 14:13:30 Desktop-Ubuntu mopidy[10137]: INFO     [MainThread] mopidy.config Loading config from command line options
okt 24 14:13:30 Desktop-Ubuntu mopidy[10137]: INFO     [MainThread] mopidy.config Loading config from file:///etc/mopidy/mopidy.conf
okt 24 14:13:30 Desktop-Ubuntu mopidy[10137]: INFO     [MainThread] mopidy.config Loading config from file:///usr/share/mopidy/conf.d/mopidy.conf
okt 24 14:13:30 Desktop-Ubuntu mopidy[10137]: INFO     [MainThread] mopidy.config Loading config from builtin defaults
okt 24 14:13:30 Desktop-Ubuntu mopidy[10137]: DEBUG    [MainThread] mopidy.config.keyring Fetching passwords from your keyring failed. Any passwords stored in the keyring will not be available. (org.freedesktop.DBus.Error.NotSupported: Unable to autolaunch a dbus-daemon without a $DISPLAY for X11)
okt 24 14:13:30 Desktop-Ubuntu mopidy[10137]: DEBUG    [MainThread] mopidy.ext Discovered extensions: youtube, local, soundcloud, ytmusic, iris, file, http, m3u, softwaremixer, stream
okt 24 14:13:30 Desktop-Ubuntu mopidy[10137]: DEBUG    [MainThread] mopidy.ext Loaded extension: Mopidy-Stream 3.3.0
okt 24 14:13:30 Desktop-Ubuntu mopidy[10137]: DEBUG    [MainThread] mopidy.ext Loading entry point: stream = mopidy.stream:Extension
okt 24 14:13:30 Desktop-Ubuntu mopidy[10137]: DEBUG    [MainThread] mopidy.ext Loaded extension: Mopidy-SoftwareMixer 3.3.0
okt 24 14:13:30 Desktop-Ubuntu mopidy[10137]: DEBUG    [MainThread] mopidy.ext Loading entry point: softwaremixer = mopidy.softwaremixer:Extension
okt 24 14:13:30 Desktop-Ubuntu mopidy[10137]: DEBUG    [MainThread] mopidy.ext Loaded extension: Mopidy-M3U 3.3.0
okt 24 14:13:30 Desktop-Ubuntu mopidy[10137]: DEBUG    [MainThread] mopidy.ext Loading entry point: m3u = mopidy.m3u:Extension
okt 24 14:13:30 Desktop-Ubuntu mopidy[10137]: DEBUG    [MainThread] mopidy.ext Loaded extension: Mopidy-HTTP 3.3.0
okt 24 14:13:30 Desktop-Ubuntu mopidy[10137]: DEBUG    [MainThread] mopidy.ext Loading entry point: http = mopidy.http:Extension
okt 24 14:13:30 Desktop-Ubuntu mopidy[10137]: DEBUG    [MainThread] mopidy.ext Loaded extension: Mopidy-File 3.3.0
okt 24 14:13:30 Desktop-Ubuntu mopidy[10137]: DEBUG    [MainThread] mopidy.ext Loading entry point: file = mopidy.file:Extension
okt 24 14:13:30 Desktop-Ubuntu mopidy[10137]: DEBUG    [MainThread] mopidy.ext Loaded extension: Mopidy-Iris 3.64.1
okt 24 14:13:30 Desktop-Ubuntu mopidy[10137]: DEBUG    [MainThread] mopidy.ext Loading entry point: iris = mopidy_iris:Extension
okt 24 14:13:30 Desktop-Ubuntu mopidy[10137]: DEBUG    [MainThread] mopidy.ext Loaded extension: Mopidy-YTMusic 0.3.7
okt 24 14:13:30 Desktop-Ubuntu mopidy[10137]: DEBUG    [MainThread] mopidy.ext Loading entry point: ytmusic = mopidy_ytmusic:Extension
okt 24 14:13:30 Desktop-Ubuntu mopidy[10137]: DEBUG    [MainThread] mopidy.ext Loaded extension: Mopidy-SoundCloud 3.0.1
okt 24 14:13:30 Desktop-Ubuntu mopidy[10137]: DEBUG    [MainThread] mopidy.ext Loading entry point: soundcloud = mopidy_soundcloud:Extension
okt 24 14:13:30 Desktop-Ubuntu mopidy[10137]: DEBUG    [MainThread] mopidy.ext Loaded extension: Mopidy-Local 3.2.1
okt 24 14:13:30 Desktop-Ubuntu mopidy[10137]: DEBUG    [MainThread] mopidy.ext Loading entry point: local = mopidy_local:Extension
okt 24 14:13:30 Desktop-Ubuntu mopidy[10137]: DEBUG    [MainThread] mopidy.ext Loaded extension: Mopidy-YouTube 3.6.1
okt 24 14:13:30 Desktop-Ubuntu mopidy[10137]: DEBUG    [MainThread] mopidy.ext Loading entry point: youtube = mopidy_youtube:Extension
okt 24 14:13:30 Desktop-Ubuntu mopidy[10137]: INFO     [MainThread] mopidy.__main__ Starting Mopidy 3.3.0
okt 24 14:13:30 Desktop-Ubuntu systemd[1]: Started Mopidy music server.
okt 24 14:13:29 Desktop-Ubuntu systemd[1]: Starting Mopidy music server...
okt 24 14:13:29 Desktop-Ubuntu systemd[1]: Stopped Mopidy music server.
okt 24 14:13:29 Desktop-Ubuntu systemd[1]: mopidy.service: Deactivated successfully.
okt 24 14:13:29 Desktop-Ubuntu mopidy[9883]: Failed loading provided credentials. Make sure to provide a string or a file path. Reason: Expecting value: line 1 column 1 (char 0)
okt 24 14:13:29 Desktop-Ubuntu mopidy[9883]: DEBUG    [MainThread] mopidy.internal.process All actors stopped.
okt 24 14:13:29 Desktop-Ubuntu mopidy[9883]: DEBUG    [SoftwareMixer-1 (_actor_loop)] pykka Stopped SoftwareMixer (urn:uuid:4133444e-2142-406b-beb3-735dc7cdb14e)
okt 24 14:13:29 Desktop-Ubuntu mopidy[9883]: DEBUG    [SoftwareMixer-1 (_actor_loop)] pykka Unregistered SoftwareMixer (urn:uuid:4133444e-2142-406b-beb3-735dc7cdb14e)
okt 24 14:13:29 Desktop-Ubuntu mopidy[9883]: DEBUG    [MainThread] mopidy.internal.process Stopping 1 instance(s) of SoftwareMixer
okt 24 14:13:29 Desktop-Ubuntu mopidy[9883]: INFO     [MainThread] mopidy.commands Stopping Mopidy mixer
okt 24 14:13:29 Desktop-Ubuntu mopidy[9883]: DEBUG    [Audio-2 (_actor_loop)] pykka Stopped Audio (urn:uuid:bfe5da4e-fcac-4f6f-bdb9-89d0b3cd8ab5)
okt 24 14:13:29 Desktop-Ubuntu mopidy[9883]: DEBUG    [Audio-2 (_actor_loop)] pykka Unregistered Audio (urn:uuid:bfe5da4e-fcac-4f6f-bdb9-89d0b3cd8ab5)
okt 24 14:13:29 Desktop-Ubuntu mopidy[9883]: DEBUG    [MainThread] mopidy.internal.process Stopping 1 instance(s) of Audio
okt 24 14:13:29 Desktop-Ubuntu mopidy[9883]: INFO     [MainThread] mopidy.commands Stopping Mopidy audio
okt 24 14:13:29 Desktop-Ubuntu mopidy[9883]: DEBUG    [StreamBackend-6 (_actor_loop)] pykka Stopped StreamBackend (urn:uuid:df627c7c-4a8b-4b45-a576-d82e07ff6ee5)
okt 24 14:13:29 Desktop-Ubuntu mopidy[9883]: DEBUG    [StreamBackend-6 (_actor_loop)] pykka Unregistered StreamBackend (urn:uuid:df627c7c-4a8b-4b45-a576-d82e07ff6ee5)
okt 24 14:13:29 Desktop-Ubuntu mopidy[9883]: DEBUG    [MainThread] mopidy.internal.process Stopping 1 instance(s) of StreamBackend
okt 24 14:13:29 Desktop-Ubuntu mopidy[9883]: DEBUG    [M3UBackend-5 (_actor_loop)] pykka Stopped M3UBackend (urn:uuid:db0f0f98-9bb1-4cb1-8ede-e5e432d37ce8)
okt 24 14:13:29 Desktop-Ubuntu mopidy[9883]: DEBUG    [M3UBackend-5 (_actor_loop)] pykka Unregistered M3UBackend (urn:uuid:db0f0f98-9bb1-4cb1-8ede-e5e432d37ce8)
okt 24 14:13:29 Desktop-Ubuntu mopidy[9883]: DEBUG    [MainThread] mopidy.internal.process Stopping 1 instance(s) of M3UBackend
okt 24 14:13:29 Desktop-Ubuntu mopidy[9883]: DEBUG    [FileBackend-4 (_actor_loop)] pykka Stopped FileBackend (urn:uuid:3d9aee10-d09d-4b49-8cc6-6995732760ae)
okt 24 14:13:29 Desktop-Ubuntu mopidy[9883]: DEBUG    [FileBackend-4 (_actor_loop)] pykka Unregistered FileBackend (urn:uuid:3d9aee10-d09d-4b49-8cc6-6995732760ae)
okt 24 14:13:29 Desktop-Ubuntu mopidy[9883]: DEBUG    [MainThread] mopidy.internal.process Stopping 1 instance(s) of FileBackend
okt 24 14:13:29 Desktop-Ubuntu mopidy[9883]: DEBUG    [MainThread] mopidy.internal.process Stopping 0 instance(s) of YTMusicBackend
okt 24 14:13:29 Desktop-Ubuntu mopidy[9883]: DEBUG    [LocalBackend-3 (_actor_loop)] pykka Stopped LocalBackend (urn:uuid:6ded6449-41fd-40bd-8499-c0cdbe913b55)
okt 24 14:13:29 Desktop-Ubuntu mopidy[9883]: DEBUG    [LocalBackend-3 (_actor_loop)] pykka Unregistered LocalBackend (urn:uuid:6ded6449-41fd-40bd-8499-c0cdbe913b55)
okt 24 14:13:29 Desktop-Ubuntu mopidy[9883]: DEBUG    [MainThread] mopidy.internal.process Stopping 1 instance(s) of LocalBackend
okt 24 14:13:29 Desktop-Ubuntu mopidy[9883]: INFO     [MainThread] mopidy.commands Stopping Mopidy backends
okt 24 14:13:29 Desktop-Ubuntu mopidy[9883]: DEBUG    [Core-7 (_actor_loop)] pykka Stopped Core (urn:uuid:9901c714-be3a-4a28-9b6b-eab85474c633)
okt 24 14:13:29 Desktop-Ubuntu mopidy[9883]: DEBUG    [Core-7 (_actor_loop)] pykka Unregistered Core (urn:uuid:9901c714-be3a-4a28-9b6b-eab85474c633)
okt 24 14:13:29 Desktop-Ubuntu mopidy[9883]: DEBUG    [MainThread] mopidy.internal.process Stopping 1 instance(s) of Core
okt 24 14:13:29 Desktop-Ubuntu mopidy[9883]: DEBUG    [HttpServer] mopidy.http.actor Stopped HTTP server
okt 24 14:13:29 Desktop-Ubuntu mopidy[9883]: INFO     [MainThread] mopidy.commands Stopping Mopidy core
okt 24 14:13:29 Desktop-Ubuntu mopidy[9883]: DEBUG    [HttpFrontend-11 (_actor_loop)] mopidy.http.actor Stopping HTTP server
okt 24 14:13:29 Desktop-Ubuntu mopidy[9883]: DEBUG    [HttpFrontend-11 (_actor_loop)] mopidy.zeroconf Zeroconf service 'Mopidy HTTP server on Desktop-Ubuntu' (_mopidy-http._tcp at []:6680): Unpublished
okt 24 14:13:29 Desktop-Ubuntu mopidy[9883]: DEBUG    [HttpFrontend-11 (_actor_loop)] mopidy.zeroconf Zeroconf service 'Mopidy HTTP server on Desktop-Ubuntu' (_http._tcp at []:6680): Unpublished
okt 24 14:13:29 Desktop-Ubuntu mopidy[9883]: DEBUG    [HttpFrontend-11 (_actor_loop)] pykka Stopped HttpFrontend (urn:uuid:3b6f8569-0143-401a-a85e-ac40be91cde8)
okt 24 14:13:29 Desktop-Ubuntu mopidy[9883]: DEBUG    [HttpFrontend-11 (_actor_loop)] pykka Unregistered HttpFrontend (urn:uuid:3b6f8569-0143-401a-a85e-ac40be91cde8)
okt 24 14:13:29 Desktop-Ubuntu mopidy[9883]: DEBUG    [MainThread] mopidy.internal.process Stopping 1 instance(s) of HttpFrontend
okt 24 14:13:29 Desktop-Ubuntu mopidy[9883]: INFO     [IrisFrontend-9 (_actor_loop)] mopidy_iris.core Stopping Iris
okt 24 14:13:29 Desktop-Ubuntu mopidy[9883]: DEBUG    [IrisFrontend-9 (_actor_loop)] pykka Stopped IrisFrontend (urn:uuid:5e40d329-e3e5-4aec-a1ec-5191498e8ccd)
okt 24 14:13:29 Desktop-Ubuntu mopidy[9883]: DEBUG    [IrisFrontend-9 (_actor_loop)] pykka Unregistered IrisFrontend (urn:uuid:5e40d329-e3e5-4aec-a1ec-5191498e8ccd)
okt 24 14:13:29 Desktop-Ubuntu mopidy[9883]: DEBUG    [MainThread] mopidy.internal.process Stopping 1 instance(s) of IrisFrontend
okt 24 14:13:29 Desktop-Ubuntu mopidy[9883]: DEBUG    [YTMusicScrobbleFE-8 (_actor_loop)] pykka Stopped YTMusicScrobbleFE (urn:uuid:86e6de88-ebd1-46f3-ae15-feaf21fc3980)
okt 24 14:13:29 Desktop-Ubuntu mopidy[9883]: DEBUG    [YTMusicScrobbleFE-8 (_actor_loop)] pykka Unregistered YTMusicScrobbleFE (urn:uuid:86e6de88-ebd1-46f3-ae15-feaf21fc3980)
okt 24 14:13:29 Desktop-Ubuntu systemd[1]: Stopping Mopidy music server...
okt 24 14:13:29 Desktop-Ubuntu mopidy[9883]: DEBUG    [MainThread] mopidy.internal.process Stopping 1 instance(s) of YTMusicScrobbleFE
okt 24 14:13:29 Desktop-Ubuntu mopidy[9883]: INFO     [MainThread] mopidy.commands Stopping Mopidy frontends
okt 24 14:13:29 Desktop-Ubuntu mopidy[9883]: INFO     [MainThread] mopidy.commands GLib mainloop got SIGTERM. Exiting...
okt 24 14:11:43 Desktop-Ubuntu mopidy[9883]: DEBUG    [HttpServer] mopidy_iris.core {'id': 166661350377367, 'jsonrpc': '2.0', 'method': 'broadcast', 'result': {'message': 'Broadcast to 1 connections'}, 'recipient': '9846IXI2WWKR'}
okt 24 14:11:43 Desktop-Ubuntu mopidy[9883]: DEBUG    [HttpServer] mopidy_iris.core {'method': 'notification', 'params': {'notification': {'content': '166656148284185 started playback', 'icon': False}}, 'connection_id': '9846IXI2WWKR'}
okt 24 14:11:43 Desktop-Ubuntu mopidy[9883]: DEBUG    [HttpServer] mopidy_iris.handlers Iris websocket message received: {"jsonrpc":"2.0","id":166661350377367,"method":"broadcast","params":{"method":"notification","params":{"notification":{"content":"166656148284185 started playback","icon":false}}}}
okt 24 14:11:43 Desktop-Ubuntu mopidy[9883]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 19, "result": null}'
okt 24 14:11:43 Desktop-Ubuntu mopidy[9883]: DEBUG    [Core-7 (_actor_loop)] mopidy.listener Sending volume_changed to CoreListener: {'volume': 100}
okt 24 14:11:43 Desktop-Ubuntu mopidy[9883]: WARNING  [Core-7 (_actor_loop)] mopidy.core.tracklist Track is not playable: file:///home/gerard/Music/test.mp3
okt 24 14:11:43 Desktop-Ubuntu mopidy[9883]: DEBUG    [MainThread] mopidy.audio.gst Changing state to GST_STATE_NULL: result=GST_STATE_CHANGE_SUCCESS
okt 24 14:11:43 Desktop-Ubuntu mopidy[9883]: WARNING  [Audio-2 (_actor_loop)] mopidy.audio.actor Setting GStreamer state to GST_STATE_PLAYING failed
okt 24 14:11:43 Desktop-Ubuntu mopidy[9883]: DEBUG    [MainThread] mopidy.audio.gst Got ERROR bus message: error=GLib.Error('Failed to connect: Connection refused', 'gst-resource-error-quark', 1) debug='../ext/pulse/pulsesink.c(615): gst_pulseringbuffer_open_device (): /GstBin:audio-sink/mopidy+audio+actor+_Outputs:mopidy+audio+actor+_outputs0/GstBin:bin0/GstPulseSink:pulsesink0'
okt 24 14:11:43 Desktop-Ubuntu mopidy[9883]: DEBUG    [Audio-2 (_actor_loop)] mopidy.audio.gst Changing state to GST_STATE_PLAYING: result=GST_STATE_CHANGE_FAILURE
okt 24 14:11:43 Desktop-Ubuntu mopidy[9883]: ERROR    [MainThread] mopidy.audio.gst GStreamer error: Failed to connect: Connection refused
okt 24 14:11:43 Desktop-Ubuntu mopidy[9883]: DEBUG    [SoftwareMixer-1 (_actor_loop)] mopidy.listener Sending volume_changed to MixerListener: {'volume': 100}
okt 24 14:11:43 Desktop-Ubuntu mopidy[9883]: DEBUG    [SoftwareMixer-1 (_actor_loop)] mopidy.mixer Mixer event: volume_changed(volume=100)
okt 24 14:11:43 Desktop-Ubuntu mopidy[9883]: DEBUG    [MainThread] mopidy.audio.gst Got STATE_CHANGED bus message: old=GST_STATE_NULL new=GST_STATE_READY pending=GST_STATE_VOID_PENDING
okt 24 14:11:43 Desktop-Ubuntu mopidy[9883]: DEBUG    [Audio-2 (_actor_loop)] mopidy.audio.actor Flags: 2
okt 24 14:11:43 Desktop-Ubuntu mopidy[9883]: DEBUG    [Audio-2 (_actor_loop)] mopidy.audio.gst Changing state to GST_STATE_READY: result=GST_STATE_CHANGE_SUCCESS
okt 24 14:11:43 Desktop-Ubuntu mopidy[9883]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.playback.play","params":{},"jsonrpc":"2.0","id":19}'
okt 24 14:11:43 Desktop-Ubuntu mopidy[9883]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 18, "result": 1}'
okt 24 14:11:43 Desktop-Ubuntu mopidy[9883]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_next_tlid","params":{},"jsonrpc":"2.0","id":18}'
okt 24 14:11:42 Desktop-Ubuntu mopidy[9883]: DEBUG    [HttpServer] mopidy_iris.core {'id': 166661350208697, 'jsonrpc': '2.0', 'method': 'broadcast', 'result': {'message': 'Broadcast to 1 connections'}, 'recipient': '9846IXI2WWKR'}
okt 24 14:11:42 Desktop-Ubuntu mopidy[9883]: DEBUG    [HttpServer] mopidy_iris.core {'method': 'notification', 'params': {'notification': {'content': '166656148284185 changed track'}}, 'connection_id': '9846IXI2WWKR'}
okt 24 14:11:42 Desktop-Ubuntu mopidy[9883]: DEBUG    [HttpServer] mopidy_iris.handlers Iris websocket message received: {"jsonrpc":"2.0","id":166661350208697,"method":"broadcast","params":{"method":"notification","params":{"notification":{"content":"166656148284185 changed track"}}}}
okt 24 14:11:42 Desktop-Ubuntu mopidy[9883]: DEBUG    [HttpServer] mopidy_iris.core {'id': 166661350207590, 'jsonrpc': '2.0', 'method': 'add_queue_metadata', 'result': {'message': 'Added queue metadata'}, 'recipient': '9846IXI2WWKR'}
okt 24 14:11:42 Desktop-Ubuntu mopidy[9883]: DEBUG    [HttpServer] mopidy_iris.core {'method': 'queue_metadata_changed', 'params': {'queue_metadata': {'tlid_1': {'tlid': 1, 'added_from': {'uri': 'iris:browse:file:///home/gerard/Music', 'name': 'Browse', 'type': 'browse'}, 'added_by': 166656148284185}}}}
okt 24 14:11:42 Desktop-Ubuntu mopidy[9883]: DEBUG    [HttpServer] mopidy_iris.handlers Iris websocket message received: {"jsonrpc":"2.0","id":166661350207590,"method":"add_queue_metadata","params":{"tlids":[1],"added_from":{"uri":"iris:browse:file:///home/gerard/Music","name":"Browse","type":"browse"},"added_by":166656148284185}}
okt 24 14:11:42 Desktop-Ubuntu mopidy[9883]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 17, "result": [{"__model__": "TlTrack", "tlid": 1, "track": {"__model__": "Track", "uri": "file:///home/gerard/Music/test.mp3", "name": "Symphony No. 40 in G Minor, K. 550 - I. Molto Allegro", "artists": [{"__model__": "Artist", "name": "Czech National Symphony Orchestra"}], "album": {"__model__": "Album", "name": "Musopen Kickstarter Project", "artists": [{"__model__": "Artist", "name": "Czech National Symphony Orchestra"}]}, "composers": [{"__model__": "Artist", "name": "Wolfgang Amadeus Mozart"}], "genre": "Classical", "length": 358848}}]}'
okt 24 14:11:42 Desktop-Ubuntu mopidy[9883]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_tl_tracks","params":{},"jsonrpc":"2.0","id":17}'
okt 24 14:11:42 Desktop-Ubuntu mopidy[9883]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 16, "result": null}'
okt 24 14:11:42 Desktop-Ubuntu mopidy[9883]: DEBUG    [Core-7 (_actor_loop)] mopidy.listener Sending volume_changed to CoreListener: {'volume': 100}
okt 24 14:11:42 Desktop-Ubuntu mopidy[9883]: WARNING  [Core-7 (_actor_loop)] mopidy.core.tracklist Track is not playable: file:///home/gerard/Music/test.mp3
okt 24 14:11:42 Desktop-Ubuntu mopidy[9883]: DEBUG    [MainThread] mopidy.audio.gst Changing state to GST_STATE_NULL: result=GST_STATE_CHANGE_SUCCESS
okt 24 14:11:42 Desktop-Ubuntu mopidy[9883]: WARNING  [Audio-2 (_actor_loop)] mopidy.audio.actor Setting GStreamer state to GST_STATE_PLAYING failed
okt 24 14:11:42 Desktop-Ubuntu mopidy[9883]: DEBUG    [Audio-2 (_actor_loop)] mopidy.audio.gst Changing state to GST_STATE_PLAYING: result=GST_STATE_CHANGE_FAILURE
okt 24 14:11:42 Desktop-Ubuntu mopidy[9883]: DEBUG    [MainThread] mopidy.audio.gst Got ERROR bus message: error=GLib.Error('Failed to connect: Connection refused', 'gst-resource-error-quark', 1) debug='../ext/pulse/pulsesink.c(615): gst_pulseringbuffer_open_device (): /GstBin:audio-sink/mopidy+audio+actor+_Outputs:mopidy+audio+actor+_outputs0/GstBin:bin0/GstPulseSink:pulsesink0'
okt 24 14:11:42 Desktop-Ubuntu mopidy[9883]: ERROR    [MainThread] mopidy.audio.gst GStreamer error: Failed to connect: Connection refused
okt 24 14:11:42 Desktop-Ubuntu mopidy[9883]: DEBUG    [SoftwareMixer-1 (_actor_loop)] mopidy.listener Sending volume_changed to MixerListener: {'volume': 100}
okt 24 14:11:42 Desktop-Ubuntu mopidy[9883]: DEBUG    [SoftwareMixer-1 (_actor_loop)] mopidy.mixer Mixer event: volume_changed(volume=100)
okt 24 14:11:42 Desktop-Ubuntu mopidy[9883]: DEBUG    [Audio-2 (_actor_loop)] mopidy.audio.actor Flags: 2
okt 24 14:11:42 Desktop-Ubuntu mopidy[9883]: DEBUG    [MainThread] mopidy.audio.gst Got STATE_CHANGED bus message: old=GST_STATE_NULL new=GST_STATE_READY pending=GST_STATE_VOID_PENDING
okt 24 14:11:42 Desktop-Ubuntu mopidy[9883]: DEBUG    [Audio-2 (_actor_loop)] mopidy.audio.gst Changing state to GST_STATE_READY: result=GST_STATE_CHANGE_SUCCESS
okt 24 14:11:42 Desktop-Ubuntu mopidy[9883]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.playback.play","params":{"tlid":1},"jsonrpc":"2.0","id":16}'
okt 24 14:11:42 Desktop-Ubuntu mopidy[9883]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 15, "result": [{"__model__": "TlTrack", "tlid": 1, "track": {"__model__": "Track", "uri": "file:///home/gerard/Music/test.mp3", "name": "Symphony No. 40 in G Minor, K. 550 - I. Molto Allegro", "artists": [{"__model__": "Artist", "name": "Czech National Symphony Orchestra"}], "album": {"__model__": "Album", "name": "Musopen Kickstarter Project", "artists": [{"__model__": "Artist", "name": "Czech National Symphony Orchestra"}]}, "composers": [{"__model__": "Artist", "name": "Wolfgang Amadeus Mozart"}], "genre": "Classical", "length": 358848}}]}'
okt 24 14:11:42 Desktop-Ubuntu mopidy[9883]: DEBUG    [Core-7 (_actor_loop)] mopidy.listener Sending tracklist_changed to CoreListener: {}
okt 24 14:11:42 Desktop-Ubuntu mopidy[9883]: DEBUG    [Core-7 (_actor_loop)] mopidy.core.tracklist Triggering event: tracklist_changed()
okt 24 14:11:42 Desktop-Ubuntu mopidy[9883]: TRACE    [FileBackend-4 (_actor_loop)] mopidy.audio.scan element pipeline2: GstMessageAsyncDone, running-time=(guint64)18446744073709551615;
okt 24 14:11:42 Desktop-Ubuntu mopidy[9883]: TRACE    [FileBackend-4 (_actor_loop)] mopidy.audio.scan element fakesink1: GstMessageTag, taglist=(taglist)"taglist\,\ encoder\=\(string\)\"LAME\\\ 32bi...
okt 24 14:11:42 Desktop-Ubuntu mopidy[9883]: TRACE    [FileBackend-4 (_actor_loop)] mopidy.audio.scan element fakesink1: GstMessageTag, taglist=(taglist)"taglist\,\ encoder\=\(string\)\"LAME\\\ 32bi...
okt 24 14:11:42 Desktop-Ubuntu mopidy[9883]: TRACE    [FileBackend-4 (_actor_loop)] mopidy.audio.scan element mpegaudioparse1: GstMessageDurationChanged;
okt 24 14:11:42 Desktop-Ubuntu mopidy[9883]: TRACE    [FileBackend-4 (_actor_loop)] mopidy.audio.scan element decodebin2: have-audio;
okt 24 14:11:42 Desktop-Ubuntu mopidy[9883]: DEBUG    [FileBackend-4 (_actor_loop)] mopidy.file.library Looking up file URI: file:///home/gerard/Music/test.mp3
okt 24 14:11:42 Desktop-Ubuntu mopidy[9883]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.add","params":{"uris":["file:///home/gerard/Music/test.mp3"],"at_position":0},"jsonrpc":"2.0","id":15}'
okt 24 14:11:40 Desktop-Ubuntu mopidy[9883]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 14, "result": {"file:///home/gerard/Music/test.mp3": [{"__model__": "Track", "uri": "file:///home/gerard/Music/test.mp3", "name": "Symphony No. 40 in G Minor, K. 550 - I. Molto Allegro", "artists": [{"__model__": "Artist", "name": "Czech National Symphony Orchestra"}], "album": {"__model__": "Album", "name": "Musopen Kickstarter Project", "artists": [{"__model__": "Artist", "name": "Czech National Symphony Orchestra"}]}, "composers": [{"__model__": "Artist", "name": "Wolfgang Amadeus Mozart"}], "genre": "Classical", "length": 358848}]}}'
okt 24 14:11:40 Desktop-Ubuntu mopidy[9883]: TRACE    [FileBackend-4 (_actor_loop)] mopidy.audio.scan element pipeline1: GstMessageAsyncDone, running-time=(guint64)18446744073709551615;
okt 24 14:11:40 Desktop-Ubuntu mopidy[9883]: TRACE    [FileBackend-4 (_actor_loop)] mopidy.audio.scan element fakesink0: GstMessageTag, taglist=(taglist)"taglist\,\ encoder\=\(string\)\"LAME\\\ 32bi...
okt 24 14:11:40 Desktop-Ubuntu mopidy[9883]: TRACE    [FileBackend-4 (_actor_loop)] mopidy.audio.scan element fakesink0: GstMessageTag, taglist=(taglist)"taglist\,\ encoder\=\(string\)\"LAME\\\ 32bi...
okt 24 14:11:40 Desktop-Ubuntu mopidy[9883]: TRACE    [FileBackend-4 (_actor_loop)] mopidy.audio.scan element mpegaudioparse0: GstMessageDurationChanged;
okt 24 14:11:40 Desktop-Ubuntu mopidy[9883]: TRACE    [FileBackend-4 (_actor_loop)] mopidy.audio.scan element decodebin1: have-audio;
okt 24 14:11:40 Desktop-Ubuntu mopidy[9883]: DEBUG    [FileBackend-4 (_actor_loop)] mopidy.file.library Looking up file URI: file:///home/gerard/Music/test.mp3
okt 24 14:11:40 Desktop-Ubuntu mopidy[9883]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.library.lookup","params":{"uris":["file:///home/gerard/Music/test.mp3"]},"jsonrpc":"2.0","id":14}'
okt 24 14:11:40 Desktop-Ubuntu mopidy[9883]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 13, "result": [{"__model__": "Ref", "uri": "file:///home/gerard/Music/test.mp3", "name": "test.mp3", "type": "track"}]}'
okt 24 14:11:40 Desktop-Ubuntu mopidy[9883]: DEBUG    [FileBackend-4 (_actor_loop)] mopidy.file.library Browsing files at: file:///home/gerard/Music
okt 24 14:11:40 Desktop-Ubuntu mopidy[9883]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.library.browse","params":{"uri":"file:///home/gerard/Music"},"jsonrpc":"2.0","id":13}'
okt 24 14:11:40 Desktop-Ubuntu mopidy[9883]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 12, "result": {"file:///home/gerard/Music": [{"__model__": "Track", "uri": "file:///home/gerard/Music", "name": "Music"}]}}'
okt 24 14:11:40 Desktop-Ubuntu mopidy[9883]: WARNING  [FileBackend-4 (_actor_loop)] mopidy.file.library Failed looking up file:///home/gerard/Music: gst-resource-error-quark: "/home/gerard/Music" is a directory. (5)
okt 24 14:11:40 Desktop-Ubuntu mopidy[9883]: TRACE    [FileBackend-4 (_actor_loop)] mopidy.audio.scan element filesrc0: GstMessageError, gerror=(GError)NULL, debug=(string)"../plugins/elements/gstf...
okt 24 14:11:40 Desktop-Ubuntu mopidy[9883]: DEBUG    [FileBackend-4 (_actor_loop)] mopidy.file.library Looking up file URI: file:///home/gerard/Music
okt 24 14:11:40 Desktop-Ubuntu mopidy[9883]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.library.lookup","params":{"uris":["file:///home/gerard/Music"]},"jsonrpc":"2.0","id":12}'
okt 24 14:11:39 Desktop-Ubuntu mopidy[9883]: DEBUG    [HttpServer] mopidy_iris.core {'id': 166661349950667, 'jsonrpc': '2.0', 'method': 'get_version', 'result': {'version': {'current': '3.64.1', 'latest': '3.64.1', 'is_root': False, 'upgrade_available': False}}, 'recipient': '9846IXI2WWKR'}
okt 24 14:11:39 Desktop-Ubuntu mopidy[9883]: DEBUG    [HttpServer] mopidy_iris.handlers Iris websocket message received: {"jsonrpc":"2.0","id":166661349950667,"method":"get_version"}
okt 24 14:11:39 Desktop-Ubuntu mopidy[9883]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 11, "result": null}'
okt 24 14:11:39 Desktop-Ubuntu mopidy[9883]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.playback.get_stream_title","params":{},"jsonrpc":"2.0","id":11}'
okt 24 14:11:39 Desktop-Ubuntu mopidy[9883]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 10, "result": ["file", "http", "https", "local", "m3u", "rtsp"]}'
okt 24 14:11:39 Desktop-Ubuntu mopidy[9883]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.get_uri_schemes","params":{},"jsonrpc":"2.0","id":10}'
okt 24 14:11:39 Desktop-Ubuntu mopidy[9883]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 9, "result": 0}'
okt 24 14:11:39 Desktop-Ubuntu mopidy[9883]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.playback.get_time_position","params":{},"jsonrpc":"2.0","id":9}'
okt 24 14:11:39 Desktop-Ubuntu mopidy[9883]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 8, "result": []}'
okt 24 14:11:39 Desktop-Ubuntu mopidy[9883]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_tl_tracks","params":{},"jsonrpc":"2.0","id":8}'
okt 24 14:11:39 Desktop-Ubuntu mopidy[9883]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 7, "result": false}'
okt 24 14:11:39 Desktop-Ubuntu mopidy[9883]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_repeat","params":{},"jsonrpc":"2.0","id":7}'
okt 24 14:11:39 Desktop-Ubuntu mopidy[9883]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 6, "result": false}'
okt 24 14:11:39 Desktop-Ubuntu mopidy[9883]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_random","params":{},"jsonrpc":"2.0","id":6}'
okt 24 14:11:39 Desktop-Ubuntu mopidy[9883]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 5, "result": false}'
okt 24 14:11:39 Desktop-Ubuntu mopidy[9883]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_consume","params":{},"jsonrpc":"2.0","id":5}'
okt 24 14:11:39 Desktop-Ubuntu mopidy[9883]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 4, "result": false}'
okt 24 14:11:39 Desktop-Ubuntu mopidy[9883]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.mixer.get_mute","params":{},"jsonrpc":"2.0","id":4}'
okt 24 14:11:39 Desktop-Ubuntu mopidy[9883]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 3, "result": 100}'
okt 24 14:11:39 Desktop-Ubuntu mopidy[9883]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.mixer.get_volume","params":{},"jsonrpc":"2.0","id":3}'
okt 24 14:11:39 Desktop-Ubuntu mopidy[9883]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 2, "result": "stopped"}'
okt 24 14:11:39 Desktop-Ubuntu mopidy[9883]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.playback.get_state","params":{},"jsonrpc":"2.0","id":2}'
okt 24 14:11:39 Desktop-Ubuntu mopidy[9883]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 1, "result": null}'
okt 24 14:11:39 Desktop-Ubuntu mopidy[9883]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.playback.get_current_tl_track","params":{},"jsonrpc":"2.0","id":1}'
okt 24 14:11:39 Desktop-Ubuntu mopidy[9883]: DEBUG    [HttpServer] mopidy_iris.core {'id': 166661349900526, 'jsonrpc': '2.0', 'method': 'get_queue_metadata', 'result': {'queue_metadata': {}}, 'recipient': '9846IXI2WWKR'}
okt 24 14:11:39 Desktop-Ubuntu mopidy[9883]: DEBUG    [HttpServer] mopidy_iris.handlers Iris websocket message received: {"jsonrpc":"2.0","id":166661349900526,"method":"get_queue_metadata"}
okt 24 14:11:39 Desktop-Ubuntu mopidy[9883]: DEBUG    [HttpServer] mopidy_iris.core {'id': 166661349900437, 'jsonrpc': '2.0', 'method': 'get_pinned', 'result': {'pinned': []}, 'recipient': '9846IXI2WWKR'}
okt 24 14:11:39 Desktop-Ubuntu mopidy[9883]: DEBUG    [HttpServer] mopidy_iris.handlers Iris websocket message received: {"jsonrpc":"2.0","id":166661349900437,"method":"get_pinned"}
okt 24 14:11:39 Desktop-Ubuntu mopidy[9883]: DEBUG    [HttpServer] mopidy_iris.core {'id': 166661349900392, 'jsonrpc': '2.0', 'method': 'get_commands', 'result': {'commands': {}}, 'recipient': '9846IXI2WWKR'}
okt 24 14:11:39 Desktop-Ubuntu mopidy[9883]: DEBUG    [HttpServer] mopidy_iris.handlers Iris websocket message received: {"jsonrpc":"2.0","id":166661349900392,"method":"get_commands"}
okt 24 14:11:39 Desktop-Ubuntu mopidy[9883]: DEBUG    [HttpServer] mopidy_iris.core {'id': 166661349900268, 'jsonrpc': '2.0', 'method': 'get_radio', 'result': {'radio': {'enabled': 0, 'seed_artists': [], 'seed_genres': [], 'seed_tracks': [], 'results': []}}, 'recipient': '9846IXI2WWKR'}
okt 24 14:11:39 Desktop-Ubuntu mopidy[9883]: DEBUG    [HttpServer] mopidy_iris.handlers Iris websocket message received: {"jsonrpc":"2.0","id":166661349900268,"method":"get_radio"}
okt 24 14:11:39 Desktop-Ubuntu mopidy[9883]: DEBUG    [HttpServer] mopidy_iris.core {'id': 166661349900121, 'jsonrpc': '2.0', 'method': 'get_shared_config', 'result': {'shared_config': {}}, 'recipient': '9846IXI2WWKR'}
okt 24 14:11:39 Desktop-Ubuntu mopidy[9883]: DEBUG    [HttpServer] mopidy_iris.handlers Iris websocket message received: {"jsonrpc":"2.0","id":166661349900121,"method":"get_shared_config"}
okt 24 14:11:39 Desktop-Ubuntu mopidy[9883]: DEBUG    [HttpServer] mopidy_iris.core {'id': 166661349900095, 'jsonrpc': '2.0', 'method': 'get_config', 'result': {'config': {'is_root': False, 'spotify_username': False, 'country': 'NZ', 'locale': 'en_NZ', 'snapcast_enabled': True, 'snapcast_host': 'localhost', 'snapcast_port': '1780', 'snapcast_ssl': False, 'snapcast_stream': 'Default', 'spotify_authorization_url': 'https://jamesbarnsley.co.nz/iris/auth_spotify.php', 'lastfm_authorization_url': 'https://jamesbarnsley.co.nz/iris/auth_lastfm.php', 'genius_authorization_url': 'https://jamesbarnsley.co.nz/iris/auth_genius.php', 'shared_config': {}}}, 'recipient': '9846IXI2WWKR'}
okt 24 14:11:39 Desktop-Ubuntu mopidy[9883]: DEBUG    [HttpServer] mopidy_iris.handlers Iris websocket message received: {"jsonrpc":"2.0","id":166661349900095,"method":"get_config"}
okt 24 14:11:39 Desktop-Ubuntu mopidy[9883]: DEBUG    [HttpServer] mopidy_iris.core {'id': 166661349899825, 'jsonrpc': '2.0', 'method': 'update_connection', 'result': {'connection': {'connection_id': '9846IXI2WWKR', 'ip': '127.0.0.1', 'created': '2022-10-24 14:11:38', 'username': 166656148284185, 'client_id': 166656148284193}}, 'recipient': '9846IXI2WWKR'}
okt 24 14:11:39 Desktop-Ubuntu mopidy[9883]: DEBUG    [HttpServer] mopidy_iris.core {'method': 'connection_changed', 'params': {'connection': {'connection_id': '9846IXI2WWKR', 'ip': '127.0.0.1', 'created': '2022-10-24 14:11:38', 'username': 166656148284185, 'client_id': 166656148284193}}}
okt 24 14:11:39 Desktop-Ubuntu mopidy[9883]: DEBUG    [HttpServer] mopidy_iris.handlers Iris websocket message received: {"jsonrpc":"2.0","id":166661349899825,"method":"update_connection","params":{"username":166656148284185,"client_id":166656148284193}}
okt 24 14:11:39 Desktop-Ubuntu mopidy[9883]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 0, "result": {"core.get_uri_schemes": {"description": "Get list of URI schemes we can handle", "params": []}, "core.get_version": {"description": "Get version of the Mopidy core API", "params": []}, "core.history.get_history": {"description": "Get the track history.\\n\\nThe timestamps are milliseconds since epoch.\\n\\n:returns: the track history\\n:rtype: list of (timestamp, :class:`mopidy.models.Ref`) tuples", "params": []}, "core.history.get_length": {"description": "Get the number of tracks in the history.\\n\\n:returns: the history length\\n:rtype: int", "params": []}, "core.library.browse": {"description": "Browse directories and tracks at the given ``uri``.\\n\\n``uri`` is a string which represents some directory belonging to a\\nbackend. To get the intial root directories for backends pass\\n:class:`None` as the URI.\\n\\nReturns a list of :class:`mopidy.models.Ref` objects for the\\ndirectories and tracks at the given ``uri``.\\n\\nThe :class:`~mopidy.models.Ref` objects representing tracks keep the\\ntrack\'s original URI. A matching pair of objects can look like this::\\n\\n    Track(uri=\'dummy:/foo.mp3\', name=\'foo\', artists=..., album=...)\\n    Ref.track(uri=\'dummy:/foo.mp3\', name=\'foo\')\\n\\nThe :class:`~mopidy.models.Ref` objects representing directories have\\nbackend specific URIs. These are opaque values, so no one but the\\nbackend that created them should try and derive any meaning from them.\\nThe only valid exception to this is checking the scheme, as it is used\\nto route browse requests to the correct backend.\\n\\nFor example, the dummy library\'s ``/bar`` directory could be returned\\nlike this::\\n\\n    Ref.directory(uri=\'dummy:directory:/bar\', name=\'bar\')\\n\\n:param string uri: URI to browse\\n:rtype: list of :class:`mopidy.models.Ref`\\n\\n.. versionadded:: 0.18", "params": [{"name": "uri"}]}, "core.library.get_distinct": {"description": "List distinct values for a given field from the library.\\n\\nThis has mainly been added to support the list commands the MPD\\nprotocol supports in a more sane fashion. Other frontends are not\\nrecommended to use this method.\\n\\n:param string field: Any one of ``uri``, ``track_name``, ``album``,\\n    ``artist``, ``albumartist``, ``composer``, ``performer``,\\n    ``track_no``, ``genre``, ``date``, ``comment``, ``disc_no``,\\n    ``musicbrainz_albumid``, ``musicbrainz_artistid``, or\\n    ``musicbrainz_trackid``.\\n:param dict query: Query to use for limiting results, see\\n    :meth:`search` for details about the query format.\\n:rtype: set of values corresponding to the requested field type.\\n\\n.. versionadded:: 1.0", "params": [{"name": "field"}, {"name": "query", "default": null}]}, "core.library.get_images": {"description": "Lookup the images for the given URIs\\n\\nBackends can use this to return image URIs for any URI they know about\\nbe it tracks, albums, playlists. The lookup result is a dictionary\\nmapping the provided URIs to lists of images.\\n\\nUnknown URIs or URIs the corresponding backend couldn\'t find anything\\nfor will simply return an empty list for that URI.\\n\\n:param uris: list of URIs to find images for\\n:type uris: list of string\\n:rtype: {uri: tuple of :class:`mopidy.models.Image`}\\n\\n.. versionadded:: 1.0", "params": [{"name": "uris"}]}, "core.library.lookup": {"description": "Lookup the given URIs.\\n\\nIf the URI expands to multiple tracks, the returned list will contain\\nthem all.\\n\\n:param uris: track URIs\\n:type uris: list of string\\n:rtype: {uri: list of :class:`mopidy.models.Track`}", "params": [{"name": "uris"}]}, "core.library.refresh": {"description": "Refresh library. Limit to URI and below if an URI is given.\\n\\n:param uri: directory or track URI\\n:type uri: string", "params": [{"name": "uri", "default": null}]}, "core.library.search": {"description": "Search the library for tracks where ``field`` contains ``values``.\\n\\n``field`` can be one of ``uri``, ``track_name``, ``album``, ``artist``,\\n``albumartist``, ``composer``, ``performer``, ``track_no``, ``genre``,\\n``date``, ``comment``, ``disc_no``, ``musicbrainz_albumid``,\\n``musicbrainz_artistid``, ``musicbrainz_trackid`` or ``any``.\\n\\nIf ``uris`` is given, the search is limited to results from within the\\nURI roots. For example passing ``uris=[\'file:\']`` will limit the search\\nto the local backend.\\n\\nExamples::\\n\\n    # Returns results matching \'a\' in any backend\\n    search({\'any\': [\'a\']})\\n\\n    # Returns results matching artist \'xyz\' in any backend\\n    search({\'artist\': [\'xyz\']})\\n\\n    # Returns results matching \'a\' and \'b\' and artist \'xyz\' in any\\n    # backend\\n    search({\'any\': [\'a\', \'b\'], \'artist\': [\'xyz\']})\\n\\n    # Returns results matching \'a\' if within the given URI roots\\n    # \\"file:///media/music\\" and \\"spotify:\\"\\n    search({\'any\': [\'a\']}, uris=[\'file:///media/music\', \'spotify:\'])\\n\\n    # Returns results matching artist \'xyz\' and \'abc\' in any backend\\n    search({\'artist\': [\'xyz\', \'abc\']})\\n\\n:param query: one or more queries to search for\\n:type query: dict\\n:param uris: zero or more URI roots to limit the search to\\n:type uris: list of string or :class:`None`\\n:param exact: if the search should use exact matching\\n:type exact: :class:`bool`\\n:rtype: list of :class:`mopidy.models.SearchResult`\\n\\n.. versionadded:: 1.0\\n    The ``exact`` keyword argument.", "params": [{"name": "query"}, {"name": "uris", "default": null}, {"name": "exact", "default": false}]}, "core.mixer.get_mute": {"description": "Get mute state.\\n\\n:class:`True` if muted, :class:`False` unmuted, :class:`None` if\\nunknown.", "params": []}, "core.mixer.get_volume": {"description": "Get the volume.\\n\\nInteger in range [0..100] or :class:`None` if unknown.\\n\\nThe volume scale is linear.", "params": []}, "core.mixer.set_mute": {"description": "Set mute state.\\n\\n:class:`True` to mute, :class:`False` to unmute.\\n\\nReturns :class:`True` if call is successful, otherwise :class:`False`.", "params": [{"name": "mute"}]}, "core.mixer.set_volume": {"description": "Set the volume.\\n\\nThe volume is defined as an integer in range [0..100].\\n\\nThe volume scale is linear.\\n\\nReturns :class:`True` if call is successful, otherwise :class:`False`.", "params": [{"name": "volume"}]}, "core.playback.get_current_tl_track": {"description": "Get the currently playing or selected track.\\n\\nReturns a :class:`mopidy.models.TlTrack` or :class:`None`.", "params": []}, "core.playback.get_current_tlid": {"description": "Get the currently playing or selected TLID.\\n\\nExtracted from :meth:`get_current_tl_track` for convenience.\\n\\nReturns a :class:`int` or :class:`None`.\\n\\n.. versionadded:: 1.1", "params": []}, "core.playback.get_current_track": {"description": "Get the currently playing or selected track.\\n\\nExtracted from :meth:`get_current_tl_track` for convenience.\\n\\nReturns a :class:`mopidy.models.Track` or :class:`None`.", "params": []}, "core.playback.get_state": {"description": "Get The playback state.", "params": []}, "core.playback.get_stream_title": {"description": "Get the current stream title or :class:`None`.", "params": []}, "core.playback.get_time_position": {"description": "Get time position in milliseconds.", "params": []}, "core.playback.next": {"description": "Change to the next track.\\n\\nThe current playback state will be kept. If it was playing, playing\\nwill continue. If it was paused, it will still be paused, etc.", "params": []}, "core.playback.pause": {"description": "Pause playback.", "params": []}, "core.playback.play": {"description": "Play the given track, or if the given tl_track and tlid is\\n:class:`None`, play the currently active track.\\n\\nNote that the track **must** already be in the tracklist.\\n\\n.. deprecated:: 3.0\\n    The ``tl_track`` argument. Use ``tlid`` instead.\\n\\n:param tl_track: track to play\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:param tlid: TLID of the track to play\\n:type tlid: :class:`int` or :class:`None`", "params": [{"name": "tl_track", "default": null}, {"name": "tlid", "default": null}]}, "core.playback.previous": {"description": "Change to the previous track.\\n\\nThe current playback state will be kept. If it was playing, playing\\nwill continue. If it was paused, it will still be paused, etc.", "params": []}, "core.playback.resume": {"description": "If paused, resume playing the current track.", "params": []}, "core.playback.seek": {"description": "Seeks to time position given in milliseconds.\\n\\n:param time_position: time position in milliseconds\\n:type time_position: int\\n:rtype: :class:`True` if successful, else :class:`False`", "params": [{"name": "time_position"}]}, "core.playback.set_state": {"description": "Set the playback state.\\n\\nMust be :attr:`PLAYING`, :attr:`PAUSED`, or :attr:`STOPPED`.\\n\\nPossible states and transitions:\\n\\n.. digraph:: state_transitions\\n\\n    \\"STOPPED\\" -> \\"PLAYING\\" [ label=\\"play\\" ]\\n    \\"STOPPED\\" -> \\"PAUSED\\" [ label=\\"pause\\" ]\\n    \\"PLAYING\\" -> \\"STOPPED\\" [ label=\\"stop\\" ]\\n    \\"PLAYING\\" -> \\"PAUSED\\" [ label=\\"pause\\" ]\\n    \\"PLAYING\\" -> \\"PLAYING\\" [ label=\\"play\\" ]\\n    \\"PAUSED\\" -> \\"PLAYING\\" [ label=\\"resume\\" ]\\n    \\"PAUSED\\" -> \\"STOPPED\\" [ label=\\"stop\\" ]", "params": [{"name": "new_state"}]}, "core.playback.stop": {"description": "Stop playing.", "params": []}, "core.playlists.as_list": {"description": "Get a list of the currently available playlists.\\n\\nReturns a list of :class:`~mopidy.models.Ref` objects referring to the\\nplaylists. In other words, no information about the playlists\' content\\nis given.\\n\\n:rtype: list of :class:`mopidy.models.Ref`\\n\\n.. versionadded:: 1.0", "params": []}, "core.playlists.create": {"description": "Create a new playlist.\\n\\nIf ``uri_scheme`` matches an URI scheme handled by a current backend,\\nthat backend is asked to create the playlist. If ``uri_scheme`` is\\n:class:`None` or doesn\'t match a current backend, the first backend is\\nasked to create the playlist.\\n\\nAll new playlists must be created by calling this method, and **not**\\nby creating new instances of :class:`mopidy.models.Playlist`.\\n\\n:param name: name of the new playlist\\n:type name: string\\n:param uri_scheme: use the backend matching the URI scheme\\n:type uri_scheme: string\\n:rtype: :class:`mopidy.models.Playlist` or :class:`None`", "params": [{"name": "name"}, {"name": "uri_scheme", "default": null}]}, "core.playlists.delete": {"description": "Delete playlist identified by the URI.\\n\\nIf the URI doesn\'t match the URI schemes handled by the current\\nbackends, nothing happens.\\n\\nReturns :class:`True` if deleted, :class:`False` otherwise.\\n\\n:param uri: URI of the playlist to delete\\n:type uri: string\\n:rtype: :class:`bool`\\n\\n.. versionchanged:: 2.2\\n    Return type defined.", "params": [{"name": "uri"}]}, "core.playlists.get_items": {"description": "Get the items in a playlist specified by ``uri``.\\n\\nReturns a list of :class:`~mopidy.models.Ref` objects referring to the\\nplaylist\'s items.\\n\\nIf a playlist with the given ``uri`` doesn\'t exist, it returns\\n:class:`None`.\\n\\n:rtype: list of :class:`mopidy.models.Ref`, or :class:`None`\\n\\n.. versionadded:: 1.0", "params": [{"name": "uri"}]}, "core.playlists.get_uri_schemes": {"description": "Get the list of URI schemes that support playlists.\\n\\n:rtype: list of string\\n\\n.. versionadded:: 2.0", "params": []}, "core.playlists.lookup": {"description": "Lookup playlist with given URI in both the set of playlists and in any\\nother playlist sources. Returns :class:`None` if not found.\\n\\n:param uri: playlist URI\\n:type uri: string\\n:rtype: :class:`mopidy.models.Playlist` or :class:`None`", "params": [{"name": "uri"}]}, "core.playlists.refresh": {"description": "Refresh the playlists in :attr:`playlists`.\\n\\nIf ``uri_scheme`` is :class:`None`, all backends are asked to refresh.\\nIf ``uri_scheme`` is an URI scheme handled by a backend, only that\\nbackend is asked to refresh. If ``uri_scheme`` doesn\'t match any\\ncurrent backend, nothing happens.\\n\\n:param uri_scheme: limit to the backend matching the URI scheme\\n:type uri_scheme: string", "params": [{"name": "uri_scheme", "default": null}]}, "core.playlists.save": {"description": "Save the playlist.\\n\\nFor a playlist to be saveable, it must have the ``uri`` attribute set.\\nYou must not set the ``uri`` atribute yourself, but use playlist\\nobjects returned by :meth:`create` or retrieved from :attr:`playlists`,\\nwhich will always give you saveable playlists.\\n\\nThe method returns the saved playlist. The return playlist may differ\\nfrom the saved playlist. E.g. if the playlist name was changed, the\\nreturned playlist may have a different URI. The caller of this method\\nmust throw away the playlist sent to this method, and use the\\nreturned playlist instead.\\n\\nIf the playlist\'s URI isn\'t set or doesn\'t match the URI scheme of a\\ncurrent backend, nothing is done and :class:`None` is returned.\\n\\n:param playlist: the playlist\\n:type playlist: :class:`mopidy.models.Playlist`\\n:rtype: :class:`mopidy.models.Playlist` or :class:`None`", "params": [{"name": "playlist"}]}, "core.tracklist.add": {"description": "Add tracks to the tracklist.\\n\\nIf ``uris`` is given instead of ``tracks``, the URIs are\\nlooked up in the library and the resulting tracks are added to the\\ntracklist.\\n\\nIf ``at_position`` is given, the tracks are inserted at the given\\nposition in the tracklist. If ``at_position`` is not given, the tracks\\nare appended to the end of the tracklist.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.\\n\\n:param tracks: tracks to add\\n:type tracks: list of :class:`mopidy.models.Track` or :class:`None`\\n:param at_position: position in tracklist to add tracks\\n:type at_position: int or :class:`None`\\n:param uris: list of URIs for tracks to add\\n:type uris: list of string or :class:`None`\\n:rtype: list of :class:`mopidy.models.TlTrack`\\n\\n.. versionadded:: 1.0\\n    The ``uris`` argument.\\n\\n.. deprecated:: 1.0\\n    The ``tracks`` argument. Use ``uris``.", "params": [{"name": "tracks", "default": null}, {"name": "at_position", "default": null}, {"name": "uris", "default": null}]}, "core.tracklist.clear": {"description": "Clear the tracklist.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.", "params": []}, "core.tracklist.eot_track": {"description": "The track that will be played after the given track.\\n\\nNot necessarily the same track as :meth:`next_track`.\\n\\n.. deprecated:: 3.0\\n    Use :meth:`get_eot_tlid` instead.\\n\\n:param tl_track: the reference track\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:rtype: :class:`mopidy.models.TlTrack` or :class:`None`", "params": [{"name": "tl_track"}]}, "core.tracklist.filter": {"description": "Filter the tracklist by the given criteria.\\n\\nEach rule in the criteria consists of a model field and a list of\\nvalues to compare it against. If the model field matches any of the\\nvalues, it may be returned.\\n\\nOnly tracks that match all the given criteria are returned.\\n\\nExamples::\\n\\n    # Returns tracks with TLIDs 1, 2, 3, or 4 (tracklist ID)\\n    filter({\'tlid\': [1, 2, 3, 4]})\\n\\n    # Returns track with URIs \'xyz\' or \'abc\'\\n    filter({\'uri\': [\'xyz\', \'abc\']})\\n\\n    # Returns track with a matching TLIDs (1, 3 or 6) and a\\n    # matching URI (\'xyz\' or \'abc\')\\n    filter({\'tlid\': [1, 3, 6], \'uri\': [\'xyz\', \'abc\']})\\n\\n:param criteria: one or more rules to match by\\n:type criteria: dict, of (string, list) pairs\\n:rtype: list of :class:`mopidy.models.TlTrack`", "params": [{"name": "criteria"}]}, "core.tracklist.get_consume": {"description": "Get consume mode.\\n\\n:class:`True`\\n    Tracks are removed from the tracklist when they have been played.\\n:class:`False`\\n    Tracks are not removed from the tracklist.", "params": []}, "core.tracklist.get_eot_tlid": {"description": "The TLID of the track that will be played after the current track.\\n\\nNot necessarily the same TLID as returned by :meth:`get_next_tlid`.\\n\\n:rtype: :class:`int` or :class:`None`\\n\\n.. versionadded:: 1.1", "params": []}, "core.tracklist.get_length": {"description": "Get length of the tracklist.", "params": []}, "core.tracklist.get_next_tlid": {"description": "The tlid of the track that will be played if calling\\n:meth:`mopidy.core.PlaybackController.next()`.\\n\\nFor normal playback this is the next track in the tracklist. If repeat\\nis enabled the next track can loop around the tracklist. When random is\\nenabled this should be a random track, all tracks should be played once\\nbefore the tracklist repeats.\\n\\n:rtype: :class:`int` or :class:`None`\\n\\n.. versionadded:: 1.1", "params": []}, "core.tracklist.get_previous_tlid": {"description": "Returns the TLID of the track that will be played if calling\\n:meth:`mopidy.core.PlaybackController.previous()`.\\n\\nFor normal playback this is the previous track in the tracklist. If\\nrandom and/or consume is enabled it should return the current track\\ninstead.\\n\\n:rtype: :class:`int` or :class:`None`\\n\\n.. versionadded:: 1.1", "params": []}, "core.tracklist.get_random": {"description": "Get random mode.\\n\\n:class:`True`\\n    Tracks are selected at random from the tracklist.\\n:class:`False`\\n    Tracks are played in the order of the tracklist.", "params": []}, "core.tracklist.get_repeat": {"description": "Get repeat mode.\\n\\n:class:`True`\\n    The tracklist is played repeatedly.\\n:class:`False`\\n    The tracklist is played once.", "params": []}, "core.tracklist.get_single": {"description": "Get single mode.\\n\\n:class:`True`\\n    Playback is stopped after current song, unless in ``repeat`` mode.\\n:class:`False`\\n    Playback continues after current song.", "params": []}, "core.tracklist.get_tl_tracks": {"description": "Get tracklist as list of :class:`mopidy.models.TlTrack`.", "params": []}, "core.tracklist.get_tracks": {"description": "Get tracklist as list of :class:`mopidy.models.Track`.", "params": []}, "core.tracklist.get_version": {"description": "Get the tracklist version.\\n\\nInteger which is increased every time the tracklist is changed. Is not\\nreset before Mopidy is restarted.", "params": []}, "core.tracklist.index": {"description": "The position of the given track in the tracklist.\\n\\nIf neither *tl_track* or *tlid* is given we return the index of\\nthe currently playing track.\\n\\n:param tl_track: the track to find the index of\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:param tlid: TLID of the track to find the index of\\n:type tlid: :class:`int` or :class:`None`\\n:rtype: :class:`int` or :class:`None`\\n\\n.. versionadded:: 1.1\\n    The *tlid* parameter", "params": [{"name": "tl_track", "default": null}, {"name": "tlid", "default": null}]}, "core.tracklist.move": {"description": "Move the tracks in the slice ``[start:end]`` to ``to_position``.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.\\n\\n:param start: position of first track to move\\n:type start: int\\n:param end: position after last track to move\\n:type end: int\\n:param to_position: new position for the tracks\\n:type to_position: int", "params": [{"name": "start"}, {"name": "end"}, {"name": "to_position"}]}, "core.tracklist.next_track": {"description": "The track that will be played if calling\\n:meth:`mopidy.core.PlaybackController.next()`.\\n\\nFor normal playback this is the next track in the tracklist. If repeat\\nis enabled the next track can loop around the tracklist. When random is\\nenabled this should be a random track, all tracks should be played once\\nbefore the tracklist repeats.\\n\\n.. deprecated:: 3.0\\n    Use :meth:`get_next_tlid` instead.\\n\\n:param tl_track: the reference track\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:rtype: :class:`mopidy.models.TlTrack` or :class:`None`", "params": [{"name": "tl_track"}]}, "core.tracklist.previous_track": {"description": "Returns the track that will be played if calling\\n:meth:`mopidy.core.PlaybackController.previous()`.\\n\\nFor normal playback this is the previous track in the tracklist. If\\nrandom and/or consume is enabled it should return the current track\\ninstead.\\n\\n.. deprecated:: 3.0\\n    Use :meth:`get_previous_tlid` instead.\\n\\n:param tl_track: the reference track\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:rtype: :class:`mopidy.models.TlTrack` or :class:`None`", "params": [{"name": "tl_track"}]}, "core.tracklist.remove": {"description": "Remove the matching tracks from the tracklist.\\n\\nUses :meth:`filter()` to lookup the tracks to remove.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.\\n\\n:param criteria: one or more rules to match by\\n:type criteria: dict, of (string, list) pairs\\n:rtype: list of :class:`mopidy.models.TlTrack` that were removed", "params": [{"name": "criteria"}]}, "core.tracklist.set_consume": {"description": "Set consume mode.\\n\\n:class:`True`\\n    Tracks are removed from the tracklist when they have been played.\\n:class:`False`\\n    Tracks are not removed from the tracklist.", "params": [{"name": "value"}]}, "core.tracklist.set_random": {"description": "Set random mode.\\n\\n:class:`True`\\n    Tracks are selected at random from the tracklist.\\n:class:`False`\\n    Tracks are played in the order of the tracklist.", "params": [{"name": "value"}]}, "core.tracklist.set_repeat": {"description": "Set repeat mode.\\n\\nTo repeat a single track, set both ``repeat`` and ``single``.\\n\\n:class:`True`\\n    The tracklist is played repeatedly.\\n:class:`False`\\n    The tracklist is played once.", "params": [{"name": "value"}]}, "core.tracklist.set_single": {"description": "Set single mode.\\n\\n:class:`True`\\n    Playback is stopped after current song, unless in ``repeat`` mode.\\n:class:`False`\\n    Playback continues after current song.", "params": [{"name": "value"}]}, "core.tracklist.shuffle": {"description": "Shuffles the entire tracklist. If ``start`` and ``end`` is given only\\nshuffles the slice ``[start:end]``.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.\\n\\n:param start: position of first track to shuffle\\n:type start: int or :class:`None`\\n:param end: position after last track to shuffle\\n:type end: int or :class:`None`", "params": [{"name": "start", "default": null}, {"name": "end", "default": null}]}, "core.tracklist.slice": {"description": "Returns a slice of the tracklist, limited by the given start and end\\npositions.\\n\\n:param start: position of first track to include in slice\\n:type start: int\\n:param end: position after last track to include in slice\\n:type end: int\\n:rtype: :class:`mopidy.models.TlTrack`", "params": [{"name": "start"}, {"name": "end"}]}}}'
okt 24 14:11:38 Desktop-Ubuntu mopidy[9883]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.describe","jsonrpc":"2.0","id":0}'
okt 24 14:11:38 Desktop-Ubuntu mopidy[9883]: DEBUG    [HttpServer] mopidy_iris.core {'method': 'connection_added', 'params': {'connection': {'connection_id': '9846IXI2WWKR', 'ip': '127.0.0.1', 'created': '2022-10-24 14:11:38'}}}
okt 24 14:11:38 Desktop-Ubuntu mopidy[9883]: DEBUG    [HttpServer] mopidy_iris.core <mopidy_iris.handlers.WebsocketHandler object at 0x7f42395a1630>
okt 24 14:11:38 Desktop-Ubuntu mopidy[9883]: DEBUG    [HttpServer] mopidy_iris.core Connection added
okt 24 14:11:38 Desktop-Ubuntu mopidy[9883]: INFO     [HttpServer] tornado.access 101 GET /iris/ws/ (127.0.0.1) 0.50ms
okt 24 14:11:38 Desktop-Ubuntu mopidy[9883]: DEBUG    [HttpServer] mopidy.http.handlers New WebSocket connection from 127.0.0.1
okt 24 14:11:38 Desktop-Ubuntu mopidy[9883]: INFO     [HttpServer] tornado.access 101 GET /mopidy/ws/ (127.0.0.1) 0.59ms
okt 24 14:11:38 Desktop-Ubuntu mopidy[9883]: INFO     [HttpServer] tornado.access 200 GET /iris/assets/favicon.png (127.0.0.1) 0.75ms
okt 24 14:11:37 Desktop-Ubuntu mopidy[9883]: INFO     [HttpServer] tornado.access 200 GET /iris/app.min.js?v=1666559547 (127.0.0.1) 11.08ms
okt 24 14:11:37 Desktop-Ubuntu mopidy[9883]: INFO     [HttpServer] tornado.access 200 GET /iris/app.min.css?v=1666559547 (127.0.0.1) 5.13ms
okt 24 14:11:37 Desktop-Ubuntu mopidy[9883]: INFO     [HttpServer] tornado.access 200 GET /iris/assets/app-icon.svg (127.0.0.1) 0.72ms
okt 24 14:11:37 Desktop-Ubuntu mopidy[9883]: DEBUG    [HttpServer] mopidy.http.handlers Closed WebSocket connection from 127.0.0.1
okt 24 14:11:37 Desktop-Ubuntu mopidy[9883]: INFO     [HttpServer] tornado.access 200 GET /iris/library/browse/Files/ZmlsZTovLy9ob21lL2dlcmFyZC9NdXNpYw== (127.0.0.1) 5.88ms
okt 24 14:11:34 Desktop-Ubuntu mopidy[9883]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 47, "result": null}'
okt 24 14:11:34 Desktop-Ubuntu mopidy[9883]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.playback.get_stream_title","params":{},"jsonrpc":"2.0","id":47}'
okt 24 14:11:34 Desktop-Ubuntu mopidy[9883]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 46, "result": ["file", "http", "https", "local", "m3u", "rtsp"]}'
okt 24 14:11:34 Desktop-Ubuntu mopidy[9883]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.get_uri_schemes","params":{},"jsonrpc":"2.0","id":46}'
okt 24 14:11:34 Desktop-Ubuntu mopidy[9883]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 45, "result": 0}'
okt 24 14:11:34 Desktop-Ubuntu mopidy[9883]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.playback.get_time_position","params":{},"jsonrpc":"2.0","id":45}'
okt 24 14:11:34 Desktop-Ubuntu mopidy[9883]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 44, "result": []}'
okt 24 14:11:34 Desktop-Ubuntu mopidy[9883]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_tl_tracks","params":{},"jsonrpc":"2.0","id":44}'
okt 24 14:11:34 Desktop-Ubuntu mopidy[9883]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 43, "result": false}'
okt 24 14:11:34 Desktop-Ubuntu mopidy[9883]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_repeat","params":{},"jsonrpc":"2.0","id":43}'
okt 24 14:11:34 Desktop-Ubuntu mopidy[9883]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 42, "result": false}'
okt 24 14:11:34 Desktop-Ubuntu mopidy[9883]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_random","params":{},"jsonrpc":"2.0","id":42}'
okt 24 14:11:34 Desktop-Ubuntu mopidy[9883]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 41, "result": false}'
okt 24 14:11:34 Desktop-Ubuntu mopidy[9883]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_consume","params":{},"jsonrpc":"2.0","id":41}'
okt 24 14:11:34 Desktop-Ubuntu mopidy[9883]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 40, "result": false}'
okt 24 14:11:34 Desktop-Ubuntu mopidy[9883]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.mixer.get_mute","params":{},"jsonrpc":"2.0","id":40}'
okt 24 14:11:34 Desktop-Ubuntu mopidy[9883]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 39, "result": 100}'
okt 24 14:11:34 Desktop-Ubuntu mopidy[9883]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.mixer.get_volume","params":{},"jsonrpc":"2.0","id":39}'
okt 24 14:11:34 Desktop-Ubuntu mopidy[9883]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 38, "result": "stopped"}'
okt 24 14:11:34 Desktop-Ubuntu mopidy[9883]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.playback.get_state","params":{},"jsonrpc":"2.0","id":38}'
okt 24 14:11:34 Desktop-Ubuntu mopidy[9883]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 37, "result": null}'
okt 24 14:11:34 Desktop-Ubuntu mopidy[9883]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.playback.get_current_tl_track","params":{},"jsonrpc":"2.0","id":37}'
okt 24 14:11:34 Desktop-Ubuntu mopidy[9883]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 36, "result": {"core.get_uri_schemes": {"description": "Get list of URI schemes we can handle", "params": []}, "core.get_version": {"description": "Get version of the Mopidy core API", "params": []}, "core.history.get_history": {"description": "Get the track history.\\n\\nThe timestamps are milliseconds since epoch.\\n\\n:returns: the track history\\n:rtype: list of (timestamp, :class:`mopidy.models.Ref`) tuples", "params": []}, "core.history.get_length": {"description": "Get the number of tracks in the history.\\n\\n:returns: the history length\\n:rtype: int", "params": []}, "core.library.browse": {"description": "Browse directories and tracks at the given ``uri``.\\n\\n``uri`` is a string which represents some directory belonging to a\\nbackend. To get the intial root directories for backends pass\\n:class:`None` as the URI.\\n\\nReturns a list of :class:`mopidy.models.Ref` objects for the\\ndirectories and tracks at the given ``uri``.\\n\\nThe :class:`~mopidy.models.Ref` objects representing tracks keep the\\ntrack\'s original URI. A matching pair of objects can look like this::\\n\\n    Track(uri=\'dummy:/foo.mp3\', name=\'foo\', artists=..., album=...)\\n    Ref.track(uri=\'dummy:/foo.mp3\', name=\'foo\')\\n\\nThe :class:`~mopidy.models.Ref` objects representing directories have\\nbackend specific URIs. These are opaque values, so no one but the\\nbackend that created them should try and derive any meaning from them.\\nThe only valid exception to this is checking the scheme, as it is used\\nto route browse requests to the correct backend.\\n\\nFor example, the dummy library\'s ``/bar`` directory could be returned\\nlike this::\\n\\n    Ref.directory(uri=\'dummy:directory:/bar\', name=\'bar\')\\n\\n:param string uri: URI to browse\\n:rtype: list of :class:`mopidy.models.Ref`\\n\\n.. versionadded:: 0.18", "params": [{"name": "uri"}]}, "core.library.get_distinct": {"description": "List distinct values for a given field from the library.\\n\\nThis has mainly been added to support the list commands the MPD\\nprotocol supports in a more sane fashion. Other frontends are not\\nrecommended to use this method.\\n\\n:param string field: Any one of ``uri``, ``track_name``, ``album``,\\n    ``artist``, ``albumartist``, ``composer``, ``performer``,\\n    ``track_no``, ``genre``, ``date``, ``comment``, ``disc_no``,\\n    ``musicbrainz_albumid``, ``musicbrainz_artistid``, or\\n    ``musicbrainz_trackid``.\\n:param dict query: Query to use for limiting results, see\\n    :meth:`search` for details about the query format.\\n:rtype: set of values corresponding to the requested field type.\\n\\n.. versionadded:: 1.0", "params": [{"name": "field"}, {"name": "query", "default": null}]}, "core.library.get_images": {"description": "Lookup the images for the given URIs\\n\\nBackends can use this to return image URIs for any URI they know about\\nbe it tracks, albums, playlists. The lookup result is a dictionary\\nmapping the provided URIs to lists of images.\\n\\nUnknown URIs or URIs the corresponding backend couldn\'t find anything\\nfor will simply return an empty list for that URI.\\n\\n:param uris: list of URIs to find images for\\n:type uris: list of string\\n:rtype: {uri: tuple of :class:`mopidy.models.Image`}\\n\\n.. versionadded:: 1.0", "params": [{"name": "uris"}]}, "core.library.lookup": {"description": "Lookup the given URIs.\\n\\nIf the URI expands to multiple tracks, the returned list will contain\\nthem all.\\n\\n:param uris: track URIs\\n:type uris: list of string\\n:rtype: {uri: list of :class:`mopidy.models.Track`}", "params": [{"name": "uris"}]}, "core.library.refresh": {"description": "Refresh library. Limit to URI and below if an URI is given.\\n\\n:param uri: directory or track URI\\n:type uri: string", "params": [{"name": "uri", "default": null}]}, "core.library.search": {"description": "Search the library for tracks where ``field`` contains ``values``.\\n\\n``field`` can be one of ``uri``, ``track_name``, ``album``, ``artist``,\\n``albumartist``, ``composer``, ``performer``, ``track_no``, ``genre``,\\n``date``, ``comment``, ``disc_no``, ``musicbrainz_albumid``,\\n``musicbrainz_artistid``, ``musicbrainz_trackid`` or ``any``.\\n\\nIf ``uris`` is given, the search is limited to results from within the\\nURI roots. For example passing ``uris=[\'file:\']`` will limit the search\\nto the local backend.\\n\\nExamples::\\n\\n    # Returns results matching \'a\' in any backend\\n    search({\'any\': [\'a\']})\\n\\n    # Returns results matching artist \'xyz\' in any backend\\n    search({\'artist\': [\'xyz\']})\\n\\n    # Returns results matching \'a\' and \'b\' and artist \'xyz\' in any\\n    # backend\\n    search({\'any\': [\'a\', \'b\'], \'artist\': [\'xyz\']})\\n\\n    # Returns results matching \'a\' if within the given URI roots\\n    # \\"file:///media/music\\" and \\"spotify:\\"\\n    search({\'any\': [\'a\']}, uris=[\'file:///media/music\', \'spotify:\'])\\n\\n    # Returns results matching artist \'xyz\' and \'abc\' in any backend\\n    search({\'artist\': [\'xyz\', \'abc\']})\\n\\n:param query: one or more queries to search for\\n:type query: dict\\n:param uris: zero or more URI roots to limit the search to\\n:type uris: list of string or :class:`None`\\n:param exact: if the search should use exact matching\\n:type exact: :class:`bool`\\n:rtype: list of :class:`mopidy.models.SearchResult`\\n\\n.. versionadded:: 1.0\\n    The ``exact`` keyword argument.", "params": [{"name": "query"}, {"name": "uris", "default": null}, {"name": "exact", "default": false}]}, "core.mixer.get_mute": {"description": "Get mute state.\\n\\n:class:`True` if muted, :class:`False` unmuted, :class:`None` if\\nunknown.", "params": []}, "core.mixer.get_volume": {"description": "Get the volume.\\n\\nInteger in range [0..100] or :class:`None` if unknown.\\n\\nThe volume scale is linear.", "params": []}, "core.mixer.set_mute": {"description": "Set mute state.\\n\\n:class:`True` to mute, :class:`False` to unmute.\\n\\nReturns :class:`True` if call is successful, otherwise :class:`False`.", "params": [{"name": "mute"}]}, "core.mixer.set_volume": {"description": "Set the volume.\\n\\nThe volume is defined as an integer in range [0..100].\\n\\nThe volume scale is linear.\\n\\nReturns :class:`True` if call is successful, otherwise :class:`False`.", "params": [{"name": "volume"}]}, "core.playback.get_current_tl_track": {"description": "Get the currently playing or selected track.\\n\\nReturns a :class:`mopidy.models.TlTrack` or :class:`None`.", "params": []}, "core.playback.get_current_tlid": {"description": "Get the currently playing or selected TLID.\\n\\nExtracted from :meth:`get_current_tl_track` for convenience.\\n\\nReturns a :class:`int` or :class:`None`.\\n\\n.. versionadded:: 1.1", "params": []}, "core.playback.get_current_track": {"description": "Get the currently playing or selected track.\\n\\nExtracted from :meth:`get_current_tl_track` for convenience.\\n\\nReturns a :class:`mopidy.models.Track` or :class:`None`.", "params": []}, "core.playback.get_state": {"description": "Get The playback state.", "params": []}, "core.playback.get_stream_title": {"description": "Get the current stream title or :class:`None`.", "params": []}, "core.playback.get_time_position": {"description": "Get time position in milliseconds.", "params": []}, "core.playback.next": {"description": "Change to the next track.\\n\\nThe current playback state will be kept. If it was playing, playing\\nwill continue. If it was paused, it will still be paused, etc.", "params": []}, "core.playback.pause": {"description": "Pause playback.", "params": []}, "core.playback.play": {"description": "Play the given track, or if the given tl_track and tlid is\\n:class:`None`, play the currently active track.\\n\\nNote that the track **must** already be in the tracklist.\\n\\n.. deprecated:: 3.0\\n    The ``tl_track`` argument. Use ``tlid`` instead.\\n\\n:param tl_track: track to play\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:param tlid: TLID of the track to play\\n:type tlid: :class:`int` or :class:`None`", "params": [{"name": "tl_track", "default": null}, {"name": "tlid", "default": null}]}, "core.playback.previous": {"description": "Change to the previous track.\\n\\nThe current playback state will be kept. If it was playing, playing\\nwill continue. If it was paused, it will still be paused, etc.", "params": []}, "core.playback.resume": {"description": "If paused, resume playing the current track.", "params": []}, "core.playback.seek": {"description": "Seeks to time position given in milliseconds.\\n\\n:param time_position: time position in milliseconds\\n:type time_position: int\\n:rtype: :class:`True` if successful, else :class:`False`", "params": [{"name": "time_position"}]}, "core.playback.set_state": {"description": "Set the playback state.\\n\\nMust be :attr:`PLAYING`, :attr:`PAUSED`, or :attr:`STOPPED`.\\n\\nPossible states and transitions:\\n\\n.. digraph:: state_transitions\\n\\n    \\"STOPPED\\" -> \\"PLAYING\\" [ label=\\"play\\" ]\\n    \\"STOPPED\\" -> \\"PAUSED\\" [ label=\\"pause\\" ]\\n    \\"PLAYING\\" -> \\"STOPPED\\" [ label=\\"stop\\" ]\\n    \\"PLAYING\\" -> \\"PAUSED\\" [ label=\\"pause\\" ]\\n    \\"PLAYING\\" -> \\"PLAYING\\" [ label=\\"play\\" ]\\n    \\"PAUSED\\" -> \\"PLAYING\\" [ label=\\"resume\\" ]\\n    \\"PAUSED\\" -> \\"STOPPED\\" [ label=\\"stop\\" ]", "params": [{"name": "new_state"}]}, "core.playback.stop": {"description": "Stop playing.", "params": []}, "core.playlists.as_list": {"description": "Get a list of the currently available playlists.\\n\\nReturns a list of :class:`~mopidy.models.Ref` objects referring to the\\nplaylists. In other words, no information about the playlists\' content\\nis given.\\n\\n:rtype: list of :class:`mopidy.models.Ref`\\n\\n.. versionadded:: 1.0", "params": []}, "core.playlists.create": {"description": "Create a new playlist.\\n\\nIf ``uri_scheme`` matches an URI scheme handled by a current backend,\\nthat backend is asked to create the playlist. If ``uri_scheme`` is\\n:class:`None` or doesn\'t match a current backend, the first backend is\\nasked to create the playlist.\\n\\nAll new playlists must be created by calling this method, and **not**\\nby creating new instances of :class:`mopidy.models.Playlist`.\\n\\n:param name: name of the new playlist\\n:type name: string\\n:param uri_scheme: use the backend matching the URI scheme\\n:type uri_scheme: string\\n:rtype: :class:`mopidy.models.Playlist` or :class:`None`", "params": [{"name": "name"}, {"name": "uri_scheme", "default": null}]}, "core.playlists.delete": {"description": "Delete playlist identified by the URI.\\n\\nIf the URI doesn\'t match the URI schemes handled by the current\\nbackends, nothing happens.\\n\\nReturns :class:`True` if deleted, :class:`False` otherwise.\\n\\n:param uri: URI of the playlist to delete\\n:type uri: string\\n:rtype: :class:`bool`\\n\\n.. versionchanged:: 2.2\\n    Return type defined.", "params": [{"name": "uri"}]}, "core.playlists.get_items": {"description": "Get the items in a playlist specified by ``uri``.\\n\\nReturns a list of :class:`~mopidy.models.Ref` objects referring to the\\nplaylist\'s items.\\n\\nIf a playlist with the given ``uri`` doesn\'t exist, it returns\\n:class:`None`.\\n\\n:rtype: list of :class:`mopidy.models.Ref`, or :class:`None`\\n\\n.. versionadded:: 1.0", "params": [{"name": "uri"}]}, "core.playlists.get_uri_schemes": {"description": "Get the list of URI schemes that support playlists.\\n\\n:rtype: list of string\\n\\n.. versionadded:: 2.0", "params": []}, "core.playlists.lookup": {"description": "Lookup playlist with given URI in both the set of playlists and in any\\nother playlist sources. Returns :class:`None` if not found.\\n\\n:param uri: playlist URI\\n:type uri: string\\n:rtype: :class:`mopidy.models.Playlist` or :class:`None`", "params": [{"name": "uri"}]}, "core.playlists.refresh": {"description": "Refresh the playlists in :attr:`playlists`.\\n\\nIf ``uri_scheme`` is :class:`None`, all backends are asked to refresh.\\nIf ``uri_scheme`` is an URI scheme handled by a backend, only that\\nbackend is asked to refresh. If ``uri_scheme`` doesn\'t match any\\ncurrent backend, nothing happens.\\n\\n:param uri_scheme: limit to the backend matching the URI scheme\\n:type uri_scheme: string", "params": [{"name": "uri_scheme", "default": null}]}, "core.playlists.save": {"description": "Save the playlist.\\n\\nFor a playlist to be saveable, it must have the ``uri`` attribute set.\\nYou must not set the ``uri`` atribute yourself, but use playlist\\nobjects returned by :meth:`create` or retrieved from :attr:`playlists`,\\nwhich will always give you saveable playlists.\\n\\nThe method returns the saved playlist. The return playlist may differ\\nfrom the saved playlist. E.g. if the playlist name was changed, the\\nreturned playlist may have a different URI. The caller of this method\\nmust throw away the playlist sent to this method, and use the\\nreturned playlist instead.\\n\\nIf the playlist\'s URI isn\'t set or doesn\'t match the URI scheme of a\\ncurrent backend, nothing is done and :class:`None` is returned.\\n\\n:param playlist: the playlist\\n:type playlist: :class:`mopidy.models.Playlist`\\n:rtype: :class:`mopidy.models.Playlist` or :class:`None`", "params": [{"name": "playlist"}]}, "core.tracklist.add": {"description": "Add tracks to the tracklist.\\n\\nIf ``uris`` is given instead of ``tracks``, the URIs are\\nlooked up in the library and the resulting tracks are added to the\\ntracklist.\\n\\nIf ``at_position`` is given, the tracks are inserted at the given\\nposition in the tracklist. If ``at_position`` is not given, the tracks\\nare appended to the end of the tracklist.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.\\n\\n:param tracks: tracks to add\\n:type tracks: list of :class:`mopidy.models.Track` or :class:`None`\\n:param at_position: position in tracklist to add tracks\\n:type at_position: int or :class:`None`\\n:param uris: list of URIs for tracks to add\\n:type uris: list of string or :class:`None`\\n:rtype: list of :class:`mopidy.models.TlTrack`\\n\\n.. versionadded:: 1.0\\n    The ``uris`` argument.\\n\\n.. deprecated:: 1.0\\n    The ``tracks`` argument. Use ``uris``.", "params": [{"name": "tracks", "default": null}, {"name": "at_position", "default": null}, {"name": "uris", "default": null}]}, "core.tracklist.clear": {"description": "Clear the tracklist.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.", "params": []}, "core.tracklist.eot_track": {"description": "The track that will be played after the given track.\\n\\nNot necessarily the same track as :meth:`next_track`.\\n\\n.. deprecated:: 3.0\\n    Use :meth:`get_eot_tlid` instead.\\n\\n:param tl_track: the reference track\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:rtype: :class:`mopidy.models.TlTrack` or :class:`None`", "params": [{"name": "tl_track"}]}, "core.tracklist.filter": {"description": "Filter the tracklist by the given criteria.\\n\\nEach rule in the criteria consists of a model field and a list of\\nvalues to compare it against. If the model field matches any of the\\nvalues, it may be returned.\\n\\nOnly tracks that match all the given criteria are returned.\\n\\nExamples::\\n\\n    # Returns tracks with TLIDs 1, 2, 3, or 4 (tracklist ID)\\n    filter({\'tlid\': [1, 2, 3, 4]})\\n\\n    # Returns track with URIs \'xyz\' or \'abc\'\\n    filter({\'uri\': [\'xyz\', \'abc\']})\\n\\n    # Returns track with a matching TLIDs (1, 3 or 6) and a\\n    # matching URI (\'xyz\' or \'abc\')\\n    filter({\'tlid\': [1, 3, 6], \'uri\': [\'xyz\', \'abc\']})\\n\\n:param criteria: one or more rules to match by\\n:type criteria: dict, of (string, list) pairs\\n:rtype: list of :class:`mopidy.models.TlTrack`", "params": [{"name": "criteria"}]}, "core.tracklist.get_consume": {"description": "Get consume mode.\\n\\n:class:`True`\\n    Tracks are removed from the tracklist when they have been played.\\n:class:`False`\\n    Tracks are not removed from the tracklist.", "params": []}, "core.tracklist.get_eot_tlid": {"description": "The TLID of the track that will be played after the current track.\\n\\nNot necessarily the same TLID as returned by :meth:`get_next_tlid`.\\n\\n:rtype: :class:`int` or :class:`None`\\n\\n.. versionadded:: 1.1", "params": []}, "core.tracklist.get_length": {"description": "Get length of the tracklist.", "params": []}, "core.tracklist.get_next_tlid": {"description": "The tlid of the track that will be played if calling\\n:meth:`mopidy.core.PlaybackController.next()`.\\n\\nFor normal playback this is the next track in the tracklist. If repeat\\nis enabled the next track can loop around the tracklist. When random is\\nenabled this should be a random track, all tracks should be played once\\nbefore the tracklist repeats.\\n\\n:rtype: :class:`int` or :class:`None`\\n\\n.. versionadded:: 1.1", "params": []}, "core.tracklist.get_previous_tlid": {"description": "Returns the TLID of the track that will be played if calling\\n:meth:`mopidy.core.PlaybackController.previous()`.\\n\\nFor normal playback this is the previous track in the tracklist. If\\nrandom and/or consume is enabled it should return the current track\\ninstead.\\n\\n:rtype: :class:`int` or :class:`None`\\n\\n.. versionadded:: 1.1", "params": []}, "core.tracklist.get_random": {"description": "Get random mode.\\n\\n:class:`True`\\n    Tracks are selected at random from the tracklist.\\n:class:`False`\\n    Tracks are played in the order of the tracklist.", "params": []}, "core.tracklist.get_repeat": {"description": "Get repeat mode.\\n\\n:class:`True`\\n    The tracklist is played repeatedly.\\n:class:`False`\\n    The tracklist is played once.", "params": []}, "core.tracklist.get_single": {"description": "Get single mode.\\n\\n:class:`True`\\n    Playback is stopped after current song, unless in ``repeat`` mode.\\n:class:`False`\\n    Playback continues after current song.", "params": []}, "core.tracklist.get_tl_tracks": {"description": "Get tracklist as list of :class:`mopidy.models.TlTrack`.", "params": []}, "core.tracklist.get_tracks": {"description": "Get tracklist as list of :class:`mopidy.models.Track`.", "params": []}, "core.tracklist.get_version": {"description": "Get the tracklist version.\\n\\nInteger which is increased every time the tracklist is changed. Is not\\nreset before Mopidy is restarted.", "params": []}, "core.tracklist.index": {"description": "The position of the given track in the tracklist.\\n\\nIf neither *tl_track* or *tlid* is given we return the index of\\nthe currently playing track.\\n\\n:param tl_track: the track to find the index of\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:param tlid: TLID of the track to find the index of\\n:type tlid: :class:`int` or :class:`None`\\n:rtype: :class:`int` or :class:`None`\\n\\n.. versionadded:: 1.1\\n    The *tlid* parameter", "params": [{"name": "tl_track", "default": null}, {"name": "tlid", "default": null}]}, "core.tracklist.move": {"description": "Move the tracks in the slice ``[start:end]`` to ``to_position``.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.\\n\\n:param start: position of first track to move\\n:type start: int\\n:param end: position after last track to move\\n:type end: int\\n:param to_position: new position for the tracks\\n:type to_position: int", "params": [{"name": "start"}, {"name": "end"}, {"name": "to_position"}]}, "core.tracklist.next_track": {"description": "The track that will be played if calling\\n:meth:`mopidy.core.PlaybackController.next()`.\\n\\nFor normal playback this is the next track in the tracklist. If repeat\\nis enabled the next track can loop around the tracklist. When random is\\nenabled this should be a random track, all tracks should be played once\\nbefore the tracklist repeats.\\n\\n.. deprecated:: 3.0\\n    Use :meth:`get_next_tlid` instead.\\n\\n:param tl_track: the reference track\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:rtype: :class:`mopidy.models.TlTrack` or :class:`None`", "params": [{"name": "tl_track"}]}, "core.tracklist.previous_track": {"description": "Returns the track that will be played if calling\\n:meth:`mopidy.core.PlaybackController.previous()`.\\n\\nFor normal playback this is the previous track in the tracklist. If\\nrandom and/or consume is enabled it should return the current track\\ninstead.\\n\\n.. deprecated:: 3.0\\n    Use :meth:`get_previous_tlid` instead.\\n\\n:param tl_track: the reference track\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:rtype: :class:`mopidy.models.TlTrack` or :class:`None`", "params": [{"name": "tl_track"}]}, "core.tracklist.remove": {"description": "Remove the matching tracks from the tracklist.\\n\\nUses :meth:`filter()` to lookup the tracks to remove.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.\\n\\n:param criteria: one or more rules to match by\\n:type criteria: dict, of (string, list) pairs\\n:rtype: list of :class:`mopidy.models.TlTrack` that were removed", "params": [{"name": "criteria"}]}, "core.tracklist.set_consume": {"description": "Set consume mode.\\n\\n:class:`True`\\n    Tracks are removed from the tracklist when they have been played.\\n:class:`False`\\n    Tracks are not removed from the tracklist.", "params": [{"name": "value"}]}, "core.tracklist.set_random": {"description": "Set random mode.\\n\\n:class:`True`\\n    Tracks are selected at random from the tracklist.\\n:class:`False`\\n    Tracks are played in the order of the tracklist.", "params": [{"name": "value"}]}, "core.tracklist.set_repeat": {"description": "Set repeat mode.\\n\\nTo repeat a single track, set both ``repeat`` and ``single``.\\n\\n:class:`True`\\n    The tracklist is played repeatedly.\\n:class:`False`\\n    The tracklist is played once.", "params": [{"name": "value"}]}, "core.tracklist.set_single": {"description": "Set single mode.\\n\\n:class:`True`\\n    Playback is stopped after current song, unless in ``repeat`` mode.\\n:class:`False`\\n    Playback continues after current song.", "params": [{"name": "value"}]}, "core.tracklist.shuffle": {"description": "Shuffles the entire tracklist. If ``start`` and ``end`` is given only\\nshuffles the slice ``[start:end]``.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.\\n\\n:param start: position of first track to shuffle\\n:type start: int or :class:`None`\\n:param end: position after last track to shuffle\\n:type end: int or :class:`None`", "params": [{"name": "start", "default": null}, {"name": "end", "default": null}]}, "core.tracklist.slice": {"description": "Returns a slice of the tracklist, limited by the given start and end\\npositions.\\n\\n:param start: position of first track to include in slice\\n:type start: int\\n:param end: position after last track to include in slice\\n:type end: int\\n:rtype: :class:`mopidy.models.TlTrack`", "params": [{"name": "start"}, {"name": "end"}]}}}'
okt 24 14:11:34 Desktop-Ubuntu mopidy[9883]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.describe","jsonrpc":"2.0","id":36}'
okt 24 14:11:34 Desktop-Ubuntu mopidy[9883]: DEBUG    [HttpServer] mopidy.http.handlers New WebSocket connection from 127.0.0.1
okt 24 14:11:34 Desktop-Ubuntu mopidy[9883]: INFO     [HttpServer] tornado.access 101 GET /mopidy/ws/ (127.0.0.1) 19.48ms
okt 24 14:11:34 Desktop-Ubuntu mopidy[9883]: DEBUG    [HttpFrontend-11 (_actor_loop)] mopidy.zeroconf Zeroconf service 'Mopidy HTTP server on Desktop-Ubuntu' (_mopidy-http._tcp at []:6680): Published
okt 24 14:11:34 Desktop-Ubuntu mopidy[9883]: DEBUG    [HttpFrontend-11 (_actor_loop)] mopidy.zeroconf Zeroconf service 'Mopidy HTTP server on Desktop-Ubuntu' (_http._tcp at []:6680): Published
okt 24 14:11:34 Desktop-Ubuntu mopidy[9883]:     '/': <class 'tornado.web.RedirectHandler'>
okt 24 14:11:34 Desktop-Ubuntu mopidy[9883]:     '/mopidy/': <class 'mopidy.http.handlers.ClientListHandler'>
okt 24 14:11:34 Desktop-Ubuntu mopidy[9883]:     '/mopidy/(.+)': <class 'mopidy.http.handlers.StaticFileHandler'>
okt 24 14:11:34 Desktop-Ubuntu mopidy[9883]:     '/mopidy/rpc': <class 'mopidy.http.handlers.JsonRpcHandler'>
okt 24 14:11:34 Desktop-Ubuntu mopidy[9883]:     '/mopidy/ws/?': <class 'mopidy.http.handlers.WebSocketHandler'>
okt 24 14:11:34 Desktop-Ubuntu mopidy[9883]:     '/mopidy': <class 'mopidy.http.handlers.AddSlashHandler'>
okt 24 14:11:34 Desktop-Ubuntu mopidy[9883]:     '/iris/(.*)': <class 'mopidy_iris.handlers.ReactRouterHandler'>
okt 24 14:11:34 Desktop-Ubuntu mopidy[9883]:     '/iris/((.*)(?:css|js|json|map)$)': <class 'tornado.web.StaticFileHandler'>
okt 24 14:11:34 Desktop-Ubuntu mopidy[9883]:     '/iris/assets/(.*)': <class 'tornado.web.StaticFileHandler'>
okt 24 14:11:34 Desktop-Ubuntu mopidy[9883]:     '/iris/ws/?': <class 'mopidy_iris.handlers.WebsocketHandler'>
okt 24 14:11:34 Desktop-Ubuntu mopidy[9883]:     '/iris/http/([^/]*)': <class 'mopidy_iris.handlers.HttpHandler'>
okt 24 14:11:34 Desktop-Ubuntu mopidy[9883]:     '/iris': <class 'mopidy.http.handlers.AddSlashHandler'>
okt 24 14:11:34 Desktop-Ubuntu mopidy[9883]:     '/local/(.+)': <class 'mopidy_local.web.ImageHandler'>
okt 24 14:11:34 Desktop-Ubuntu mopidy[9883]:     '/local/(index.html)?': <class 'mopidy_local.web.IndexHandler'>
okt 24 14:11:34 Desktop-Ubuntu mopidy[9883]:     '/local': <class 'mopidy.http.handlers.AddSlashHandler'>
okt 24 14:11:34 Desktop-Ubuntu mopidy[9883]: DEBUG    [HttpServer] mopidy.http.actor HTTP routes from extensions:
okt 24 14:11:34 Desktop-Ubuntu mopidy[9883]: DEBUG    [HttpServer] mopidy.http.actor Default webclient is mopidy
okt 24 14:11:34 Desktop-Ubuntu mopidy[9883]: DEBUG    [HttpServer] mopidy.http.actor Loaded HTTP extension: mopidy
okt 24 14:11:34 Desktop-Ubuntu mopidy[9883]: DEBUG    [HttpServer] mopidy.http.actor Loaded HTTP extension: iris
okt 24 14:11:34 Desktop-Ubuntu mopidy[9883]: DEBUG    [HttpServer] mopidy.http.actor Loaded HTTP extension: local
okt 24 14:11:34 Desktop-Ubuntu mopidy[9883]: INFO     [MainThread] mopidy.commands Starting GLib mainloop
okt 24 14:11:34 Desktop-Ubuntu mopidy[9883]: DEBUG    [HttpServer] asyncio Using selector: EpollSelector
okt 24 14:11:34 Desktop-Ubuntu mopidy[9883]: TRACE    [MainThread] mopidy.internal.timer HttpFrontend took 0ms
okt 24 14:11:34 Desktop-Ubuntu mopidy[9883]: INFO     [HttpFrontend-11 (_actor_loop)] mopidy.http.actor HTTP server running at [::ffff:127.0.0.1]:6680
okt 24 14:11:34 Desktop-Ubuntu mopidy[9883]: DEBUG    [MainThread] pykka Starting HttpFrontend (urn:uuid:3b6f8569-0143-401a-a85e-ac40be91cde8)
okt 24 14:11:34 Desktop-Ubuntu mopidy[9883]: DEBUG    [MainThread] pykka Registered HttpFrontend (urn:uuid:3b6f8569-0143-401a-a85e-ac40be91cde8)
okt 24 14:11:34 Desktop-Ubuntu mopidy[9883]: DEBUG    [MainThread] mopidy.http.actor Starting HTTP server
okt 24 14:11:34 Desktop-Ubuntu mopidy[9883]: TRACE    [MainThread] mopidy.internal.timer IrisFrontend took 0ms
okt 24 14:11:34 Desktop-Ubuntu mopidy[9883]: INFO     [IrisFrontend-9 (_actor_loop)] mopidy_iris.core Starting Iris 3.64.1
okt 24 14:11:34 Desktop-Ubuntu mopidy[9883]: DEBUG    [MainThread] pykka Starting IrisFrontend (urn:uuid:5e40d329-e3e5-4aec-a1ec-5191498e8ccd)
okt 24 14:11:34 Desktop-Ubuntu mopidy[9883]: DEBUG    [MainThread] pykka Registered IrisFrontend (urn:uuid:5e40d329-e3e5-4aec-a1ec-5191498e8ccd)
okt 24 14:11:34 Desktop-Ubuntu mopidy[9883]: TRACE    [MainThread] mopidy.internal.timer YTMusicScrobbleFE took 0ms
okt 24 14:11:34 Desktop-Ubuntu mopidy[9883]: DEBUG    [MainThread] pykka Starting YTMusicScrobbleFE (urn:uuid:86e6de88-ebd1-46f3-ae15-feaf21fc3980)
okt 24 14:11:34 Desktop-Ubuntu mopidy[9883]: DEBUG    [MainThread] pykka Registered YTMusicScrobbleFE (urn:uuid:86e6de88-ebd1-46f3-ae15-feaf21fc3980)
okt 24 14:11:34 Desktop-Ubuntu mopidy[9883]: INFO     [MainThread] mopidy.commands Starting Mopidy frontends: YTMusicScrobbleFE, IrisFrontend, HttpFrontend
okt 24 14:11:34 Desktop-Ubuntu mopidy[9883]: DEBUG    [MainThread] pykka Starting Core (urn:uuid:9901c714-be3a-4a28-9b6b-eab85474c633)
okt 24 14:11:34 Desktop-Ubuntu mopidy[9883]: DEBUG    [MainThread] pykka Registered Core (urn:uuid:9901c714-be3a-4a28-9b6b-eab85474c633)
okt 24 14:11:34 Desktop-Ubuntu mopidy[9883]: INFO     [MainThread] mopidy.commands Starting Mopidy core
okt 24 14:11:34 Desktop-Ubuntu mopidy[9883]: TRACE    [MainThread] mopidy.internal.timer StreamBackend took 6ms
okt 24 14:11:34 Desktop-Ubuntu mopidy[9883]: DEBUG    [MainThread] pykka Starting StreamBackend (urn:uuid:df627c7c-4a8b-4b45-a576-d82e07ff6ee5)
okt 24 14:11:34 Desktop-Ubuntu mopidy[9883]: DEBUG    [MainThread] pykka Registered StreamBackend (urn:uuid:df627c7c-4a8b-4b45-a576-d82e07ff6ee5)
okt 24 14:11:34 Desktop-Ubuntu mopidy[9883]: INFO     [Audio-2 (_actor_loop)] mopidy.audio.actor Audio output set to "pulsesink server=127.0.0.1"
okt 24 14:11:34 Desktop-Ubuntu mopidy[9883]: TRACE    [MainThread] mopidy.internal.timer M3UBackend took 1ms
okt 24 14:11:34 Desktop-Ubuntu mopidy[9883]: DEBUG    [MainThread] pykka Starting M3UBackend (urn:uuid:db0f0f98-9bb1-4cb1-8ede-e5e432d37ce8)
okt 24 14:11:34 Desktop-Ubuntu mopidy[9883]: DEBUG    [MainThread] pykka Registered M3UBackend (urn:uuid:db0f0f98-9bb1-4cb1-8ede-e5e432d37ce8)
okt 24 14:11:34 Desktop-Ubuntu mopidy[9883]: TRACE    [MainThread] mopidy.internal.timer FileBackend took 3ms
okt 24 14:11:34 Desktop-Ubuntu mopidy[9883]: DEBUG    [MainThread] pykka Starting FileBackend (urn:uuid:3d9aee10-d09d-4b49-8cc6-6995732760ae)
okt 24 14:11:34 Desktop-Ubuntu mopidy[9883]: DEBUG    [MainThread] pykka Registered FileBackend (urn:uuid:3d9aee10-d09d-4b49-8cc6-6995732760ae)
okt 24 14:11:34 Desktop-Ubuntu mopidy[9883]: DEBUG    [MainThread] mopidy.file.library Failed expanding path ($XDG_MUSIC_DIR) from file/media_dirs config value.
okt 24 14:11:34 Desktop-Ubuntu mopidy[9883]: AttributeError: 'YTMusic' object has no attribute 'headers'
okt 24 14:11:34 Desktop-Ubuntu mopidy[9883]:     if 'x-goog-visitor-id' not in self.headers:
okt 24 14:11:34 Desktop-Ubuntu mopidy[9883]:   File "/usr/local/lib/python3.10/dist-packages/ytmusicapi/ytmusic.py", line 98, in __init__
okt 24 14:11:34 Desktop-Ubuntu mopidy[9883]:     self.api = YTMusic(self._ytmusicapi_auth_json)
okt 24 14:11:34 Desktop-Ubuntu mopidy[9883]:   File "/usr/local/lib/python3.10/dist-packages/mopidy_ytmusic/backend.py", line 65, in __init__
okt 24 14:11:34 Desktop-Ubuntu mopidy[9883]:     obj = cls(*args, **kwargs)
okt 24 14:11:34 Desktop-Ubuntu mopidy[9883]:   File "/usr/lib/python3/dist-packages/pykka/_actor.py", line 91, in start
okt 24 14:11:34 Desktop-Ubuntu mopidy[9883]:     backend = backend_class.start(
okt 24 14:11:34 Desktop-Ubuntu mopidy[9883]:   File "/usr/lib/python3/dist-packages/mopidy/commands.py", line 412, in start_backends
okt 24 14:11:34 Desktop-Ubuntu mopidy[9883]:     yield
okt 24 14:11:34 Desktop-Ubuntu mopidy[9883]:   File "/usr/lib/python3/dist-packages/mopidy/commands.py", line 248, in _actor_error_handling
okt 24 14:11:34 Desktop-Ubuntu mopidy[9883]: Traceback (most recent call last):
okt 24 14:11:34 Desktop-Ubuntu mopidy[9883]: ERROR    [MainThread] mopidy.commands Got un-handled exception from YTMusicBackend
okt 24 14:11:34 Desktop-Ubuntu mopidy[9883]: TRACE    [MainThread] mopidy.internal.timer LocalBackend took 4ms
okt 24 14:11:34 Desktop-Ubuntu mopidy[9883]: DEBUG    [MainThread] pykka Starting LocalBackend (urn:uuid:6ded6449-41fd-40bd-8499-c0cdbe913b55)
okt 24 14:11:34 Desktop-Ubuntu mopidy[9883]: DEBUG    [MainThread] pykka Registered LocalBackend (urn:uuid:6ded6449-41fd-40bd-8499-c0cdbe913b55)
okt 24 14:11:34 Desktop-Ubuntu mopidy[9883]: INFO     [MainThread] mopidy.commands Starting Mopidy backends: LocalBackend, YTMusicBackend, FileBackend, M3UBackend, StreamBackend
okt 24 14:11:34 Desktop-Ubuntu mopidy[9883]: DEBUG    [MainThread] pykka Starting Audio (urn:uuid:bfe5da4e-fcac-4f6f-bdb9-89d0b3cd8ab5)
okt 24 14:11:34 Desktop-Ubuntu mopidy[9883]: DEBUG    [MainThread] pykka Registered Audio (urn:uuid:bfe5da4e-fcac-4f6f-bdb9-89d0b3cd8ab5)
okt 24 14:11:34 Desktop-Ubuntu mopidy[9883]: INFO     [MainThread] mopidy.commands Starting Mopidy audio
okt 24 14:11:34 Desktop-Ubuntu mopidy[9883]: DEBUG    [MainThread] mopidy.commands Mixer volume left unchanged
okt 24 14:11:34 Desktop-Ubuntu mopidy[9883]: DEBUG    [MainThread] pykka Starting SoftwareMixer (urn:uuid:4133444e-2142-406b-beb3-735dc7cdb14e)
okt 24 14:11:34 Desktop-Ubuntu mopidy[9883]: DEBUG    [MainThread] pykka Registered SoftwareMixer (urn:uuid:4133444e-2142-406b-beb3-735dc7cdb14e)
okt 24 14:11:34 Desktop-Ubuntu mopidy[9883]: INFO     [MainThread] mopidy.commands Starting Mopidy mixer: SoftwareMixer
okt 24 14:11:34 Desktop-Ubuntu mopidy[9883]: DEBUG    [MainThread] mopidy.commands Available Mopidy mixers: SoftwareMixer
okt 24 14:11:34 Desktop-Ubuntu mopidy[9883]: INFO     [MainThread] mopidy.__main__ Disabled extensions: soundcloud, youtube
okt 24 14:11:34 Desktop-Ubuntu mopidy[9883]: INFO     [MainThread] mopidy.__main__ Enabled extensions: iris, local, http, ytmusic, m3u, file, stream, softwaremixer
okt 24 14:11:34 Desktop-Ubuntu mopidy[9883]: DEBUG    [MainThread] mopidy.ext Validating extension: stream
okt 24 14:11:34 Desktop-Ubuntu mopidy[9883]: DEBUG    [MainThread] mopidy.ext Validating extension: softwaremixer
okt 24 14:11:34 Desktop-Ubuntu mopidy[9883]: DEBUG    [MainThread] mopidy.ext Validating extension: m3u
okt 24 14:11:34 Desktop-Ubuntu mopidy[9883]: DEBUG    [MainThread] mopidy.ext Validating extension: http
okt 24 14:11:34 Desktop-Ubuntu mopidy[9883]: DEBUG    [MainThread] mopidy.ext Validating extension: file
okt 24 14:11:34 Desktop-Ubuntu mopidy[9883]: DEBUG    [MainThread] mopidy.ext Validating extension: iris
okt 24 14:11:34 Desktop-Ubuntu mopidy[9883]: DEBUG    [MainThread] mopidy.ext Validating extension: ytmusic
okt 24 14:11:34 Desktop-Ubuntu mopidy[9883]: DEBUG    [MainThread] mopidy.ext Validating extension: soundcloud
okt 24 14:11:34 Desktop-Ubuntu mopidy[9883]: DEBUG    [MainThread] mopidy.ext Validating extension: local
okt 24 14:11:33 Desktop-Ubuntu mopidy[9883]: DEBUG    [MainThread] mopidy.ext Validating extension: youtube
okt 24 14:11:33 Desktop-Ubuntu mopidy[9883]: WARNING  [MainThread] mopidy.config Ignoring config section 'jukebox' because no matching extension was found
okt 24 14:11:33 Desktop-Ubuntu mopidy[9883]: INFO     [MainThread] mopidy.config Loading config from command line options
okt 24 14:11:33 Desktop-Ubuntu mopidy[9883]: INFO     [MainThread] mopidy.config Loading config from file:///etc/mopidy/mopidy.conf
okt 24 14:11:33 Desktop-Ubuntu mopidy[9883]: INFO     [MainThread] mopidy.config Loading config from file:///usr/share/mopidy/conf.d/mopidy.conf
okt 24 14:11:33 Desktop-Ubuntu mopidy[9883]: INFO     [MainThread] mopidy.config Loading config from builtin defaults
okt 24 14:11:33 Desktop-Ubuntu mopidy[9883]: DEBUG    [MainThread] mopidy.config.keyring Fetching passwords from your keyring failed. Any passwords stored in the keyring will not be available. (org.freedesktop.DBus.Error.NotSupported: Unable to autolaunch a dbus-daemon without a $DISPLAY for X11)
okt 24 14:11:33 Desktop-Ubuntu mopidy[9883]: DEBUG    [MainThread] mopidy.ext Discovered extensions: youtube, local, soundcloud, ytmusic, iris, file, http, m3u, softwaremixer, stream
okt 24 14:11:33 Desktop-Ubuntu mopidy[9883]: DEBUG    [MainThread] mopidy.ext Loaded extension: Mopidy-Stream 3.3.0
okt 24 14:11:33 Desktop-Ubuntu mopidy[9883]: DEBUG    [MainThread] mopidy.ext Loading entry point: stream = mopidy.stream:Extension
okt 24 14:11:33 Desktop-Ubuntu mopidy[9883]: DEBUG    [MainThread] mopidy.ext Loaded extension: Mopidy-SoftwareMixer 3.3.0
okt 24 14:11:33 Desktop-Ubuntu mopidy[9883]: DEBUG    [MainThread] mopidy.ext Loading entry point: softwaremixer = mopidy.softwaremixer:Extension
okt 24 14:11:33 Desktop-Ubuntu mopidy[9883]: DEBUG    [MainThread] mopidy.ext Loaded extension: Mopidy-M3U 3.3.0
okt 24 14:11:33 Desktop-Ubuntu mopidy[9883]: DEBUG    [MainThread] mopidy.ext Loading entry point: m3u = mopidy.m3u:Extension
okt 24 14:11:33 Desktop-Ubuntu mopidy[9883]: DEBUG    [MainThread] mopidy.ext Loaded extension: Mopidy-HTTP 3.3.0
okt 24 14:11:33 Desktop-Ubuntu mopidy[9883]: DEBUG    [MainThread] mopidy.ext Loading entry point: http = mopidy.http:Extension
okt 24 14:11:33 Desktop-Ubuntu mopidy[9883]: DEBUG    [MainThread] mopidy.ext Loaded extension: Mopidy-File 3.3.0
okt 24 14:11:33 Desktop-Ubuntu mopidy[9883]: DEBUG    [MainThread] mopidy.ext Loading entry point: file = mopidy.file:Extension
okt 24 14:11:33 Desktop-Ubuntu mopidy[9883]: DEBUG    [MainThread] mopidy.ext Loaded extension: Mopidy-Iris 3.64.1
okt 24 14:11:33 Desktop-Ubuntu mopidy[9883]: DEBUG    [MainThread] mopidy.ext Loading entry point: iris = mopidy_iris:Extension
okt 24 14:11:33 Desktop-Ubuntu mopidy[9883]: DEBUG    [MainThread] mopidy.ext Loaded extension: Mopidy-YTMusic 0.3.7
okt 24 14:11:33 Desktop-Ubuntu mopidy[9883]: DEBUG    [MainThread] mopidy.ext Loading entry point: ytmusic = mopidy_ytmusic:Extension
okt 24 14:11:33 Desktop-Ubuntu mopidy[9883]: DEBUG    [MainThread] mopidy.ext Loaded extension: Mopidy-SoundCloud 3.0.1
okt 24 14:11:33 Desktop-Ubuntu mopidy[9883]: DEBUG    [MainThread] mopidy.ext Loading entry point: soundcloud = mopidy_soundcloud:Extension
okt 24 14:11:33 Desktop-Ubuntu mopidy[9883]: DEBUG    [MainThread] mopidy.ext Loaded extension: Mopidy-Local 3.2.1
okt 24 14:11:33 Desktop-Ubuntu mopidy[9883]: DEBUG    [MainThread] mopidy.ext Loading entry point: local = mopidy_local:Extension
okt 24 14:11:33 Desktop-Ubuntu mopidy[9883]: DEBUG    [MainThread] mopidy.ext Loaded extension: Mopidy-YouTube 3.6.1
okt 24 14:11:33 Desktop-Ubuntu mopidy[9883]: DEBUG    [MainThread] mopidy.ext Loading entry point: youtube = mopidy_youtube:Extension
okt 24 14:11:33 Desktop-Ubuntu mopidy[9883]: INFO     [MainThread] mopidy.__main__ Starting Mopidy 3.3.0
okt 24 14:11:33 Desktop-Ubuntu systemd[1]: Started Mopidy music server.
okt 24 14:11:33 Desktop-Ubuntu systemd[1]: Starting Mopidy music server...
okt 24 14:11:33 Desktop-Ubuntu systemd[1]: mopidy.service: Consumed 1.174s CPU time.
okt 24 14:11:33 Desktop-Ubuntu systemd[1]: Stopped Mopidy music server.
okt 24 14:11:33 Desktop-Ubuntu systemd[1]: mopidy.service: Deactivated successfully.
okt 24 14:11:33 Desktop-Ubuntu mopidy[9389]: Failed loading provided credentials. Make sure to provide a string or a file path. Reason: Expecting value: line 1 column 1 (char 0)
okt 24 14:11:33 Desktop-Ubuntu mopidy[9389]: DEBUG    [MainThread] mopidy.internal.process All actors stopped.
okt 24 14:11:33 Desktop-Ubuntu mopidy[9389]: DEBUG    [SoftwareMixer-1 (_actor_loop)] pykka Stopped SoftwareMixer (urn:uuid:ca7581c7-3591-489f-887e-a18f712dc63a)
okt 24 14:11:33 Desktop-Ubuntu mopidy[9389]: DEBUG    [SoftwareMixer-1 (_actor_loop)] pykka Unregistered SoftwareMixer (urn:uuid:ca7581c7-3591-489f-887e-a18f712dc63a)
okt 24 14:11:33 Desktop-Ubuntu mopidy[9389]: DEBUG    [MainThread] mopidy.internal.process Stopping 1 instance(s) of SoftwareMixer
okt 24 14:11:33 Desktop-Ubuntu mopidy[9389]: INFO     [MainThread] mopidy.commands Stopping Mopidy mixer
okt 24 14:11:33 Desktop-Ubuntu mopidy[9389]: DEBUG    [Audio-2 (_actor_loop)] pykka Stopped Audio (urn:uuid:b4b30284-c3cf-43a7-b63a-7d2f2178fcdf)
okt 24 14:11:33 Desktop-Ubuntu mopidy[9389]: DEBUG    [Audio-2 (_actor_loop)] pykka Unregistered Audio (urn:uuid:b4b30284-c3cf-43a7-b63a-7d2f2178fcdf)
okt 24 14:11:33 Desktop-Ubuntu mopidy[9389]: DEBUG    [MainThread] mopidy.internal.process Stopping 1 instance(s) of Audio
okt 24 14:11:33 Desktop-Ubuntu mopidy[9389]: INFO     [MainThread] mopidy.commands Stopping Mopidy audio
okt 24 14:11:33 Desktop-Ubuntu mopidy[9389]: DEBUG    [StreamBackend-6 (_actor_loop)] pykka Stopped StreamBackend (urn:uuid:0272e786-23cc-4350-a3ce-93d5f2145e68)
okt 24 14:11:33 Desktop-Ubuntu mopidy[9389]: DEBUG    [StreamBackend-6 (_actor_loop)] pykka Unregistered StreamBackend (urn:uuid:0272e786-23cc-4350-a3ce-93d5f2145e68)
okt 24 14:11:33 Desktop-Ubuntu mopidy[9389]: DEBUG    [MainThread] mopidy.internal.process Stopping 1 instance(s) of StreamBackend
okt 24 14:11:33 Desktop-Ubuntu mopidy[9389]: DEBUG    [M3UBackend-5 (_actor_loop)] pykka Stopped M3UBackend (urn:uuid:65987a95-b62a-4473-9630-f687c65de443)
okt 24 14:11:33 Desktop-Ubuntu mopidy[9389]: DEBUG    [M3UBackend-5 (_actor_loop)] pykka Unregistered M3UBackend (urn:uuid:65987a95-b62a-4473-9630-f687c65de443)
okt 24 14:11:33 Desktop-Ubuntu mopidy[9389]: DEBUG    [MainThread] mopidy.internal.process Stopping 1 instance(s) of M3UBackend
okt 24 14:11:33 Desktop-Ubuntu mopidy[9389]: DEBUG    [FileBackend-4 (_actor_loop)] pykka Stopped FileBackend (urn:uuid:a01f6a0d-7a4d-4ead-adc4-bb60412631a1)
okt 24 14:11:33 Desktop-Ubuntu mopidy[9389]: DEBUG    [FileBackend-4 (_actor_loop)] pykka Unregistered FileBackend (urn:uuid:a01f6a0d-7a4d-4ead-adc4-bb60412631a1)
okt 24 14:11:33 Desktop-Ubuntu mopidy[9389]: DEBUG    [MainThread] mopidy.internal.process Stopping 1 instance(s) of FileBackend
okt 24 14:11:33 Desktop-Ubuntu mopidy[9389]: DEBUG    [MainThread] mopidy.internal.process Stopping 0 instance(s) of YTMusicBackend
okt 24 14:11:33 Desktop-Ubuntu mopidy[9389]: DEBUG    [LocalBackend-3 (_actor_loop)] pykka Stopped LocalBackend (urn:uuid:5340202c-789f-415b-a953-a9d5330f73b6)
okt 24 14:11:33 Desktop-Ubuntu mopidy[9389]: DEBUG    [LocalBackend-3 (_actor_loop)] pykka Unregistered LocalBackend (urn:uuid:5340202c-789f-415b-a953-a9d5330f73b6)
okt 24 14:11:33 Desktop-Ubuntu mopidy[9389]: DEBUG    [MainThread] mopidy.internal.process Stopping 1 instance(s) of LocalBackend
okt 24 14:11:33 Desktop-Ubuntu mopidy[9389]: INFO     [MainThread] mopidy.commands Stopping Mopidy backends
okt 24 14:11:33 Desktop-Ubuntu mopidy[9389]: DEBUG    [Core-7 (_actor_loop)] pykka Stopped Core (urn:uuid:cdfbd935-f4ba-4ed2-9f6d-4106ff966c3b)
okt 24 14:11:33 Desktop-Ubuntu mopidy[9389]: DEBUG    [Core-7 (_actor_loop)] pykka Unregistered Core (urn:uuid:cdfbd935-f4ba-4ed2-9f6d-4106ff966c3b)
okt 24 14:11:33 Desktop-Ubuntu mopidy[9389]: DEBUG    [MainThread] mopidy.internal.process Stopping 1 instance(s) of Core
okt 24 14:11:33 Desktop-Ubuntu mopidy[9389]: INFO     [MainThread] mopidy.commands Stopping Mopidy core
okt 24 14:11:33 Desktop-Ubuntu mopidy[9389]: DEBUG    [HttpServer] mopidy.http.actor Stopped HTTP server
okt 24 14:11:33 Desktop-Ubuntu mopidy[9389]: DEBUG    [HttpFrontend-11 (_actor_loop)] mopidy.http.actor Stopping HTTP server
okt 24 14:11:33 Desktop-Ubuntu mopidy[9389]: DEBUG    [HttpFrontend-11 (_actor_loop)] mopidy.zeroconf Zeroconf service 'Mopidy HTTP server on Desktop-Ubuntu' (_mopidy-http._tcp at []:6680): Unpublished
okt 24 14:11:33 Desktop-Ubuntu mopidy[9389]: DEBUG    [HttpFrontend-11 (_actor_loop)] mopidy.zeroconf Zeroconf service 'Mopidy HTTP server on Desktop-Ubuntu' (_http._tcp at []:6680): Unpublished
okt 24 14:11:33 Desktop-Ubuntu mopidy[9389]: DEBUG    [HttpFrontend-11 (_actor_loop)] pykka Stopped HttpFrontend (urn:uuid:7bd6c8af-bd71-42ea-88fd-93f63d4ab09b)
okt 24 14:11:33 Desktop-Ubuntu mopidy[9389]: DEBUG    [HttpFrontend-11 (_actor_loop)] pykka Unregistered HttpFrontend (urn:uuid:7bd6c8af-bd71-42ea-88fd-93f63d4ab09b)
okt 24 14:11:33 Desktop-Ubuntu mopidy[9389]: DEBUG    [MainThread] mopidy.internal.process Stopping 1 instance(s) of HttpFrontend
okt 24 14:11:33 Desktop-Ubuntu mopidy[9389]: INFO     [IrisFrontend-9 (_actor_loop)] mopidy_iris.core Stopping Iris
okt 24 14:11:33 Desktop-Ubuntu mopidy[9389]: DEBUG    [IrisFrontend-9 (_actor_loop)] pykka Stopped IrisFrontend (urn:uuid:b5e740e4-d830-4f97-836d-6f396c34a656)
okt 24 14:11:33 Desktop-Ubuntu mopidy[9389]: DEBUG    [IrisFrontend-9 (_actor_loop)] pykka Unregistered IrisFrontend (urn:uuid:b5e740e4-d830-4f97-836d-6f396c34a656)
okt 24 14:11:33 Desktop-Ubuntu mopidy[9389]: DEBUG    [MainThread] mopidy.internal.process Stopping 1 instance(s) of IrisFrontend
okt 24 14:11:33 Desktop-Ubuntu mopidy[9389]: DEBUG    [YTMusicScrobbleFE-8 (_actor_loop)] pykka Stopped YTMusicScrobbleFE (urn:uuid:eca1ffc5-d146-4646-954b-18398f132ea5)
okt 24 14:11:33 Desktop-Ubuntu mopidy[9389]: DEBUG    [YTMusicScrobbleFE-8 (_actor_loop)] pykka Unregistered YTMusicScrobbleFE (urn:uuid:eca1ffc5-d146-4646-954b-18398f132ea5)
okt 24 14:11:33 Desktop-Ubuntu mopidy[9389]: DEBUG    [MainThread] mopidy.internal.process Stopping 1 instance(s) of YTMusicScrobbleFE
okt 24 14:11:33 Desktop-Ubuntu mopidy[9389]: INFO     [MainThread] mopidy.commands Stopping Mopidy frontends
okt 24 14:11:33 Desktop-Ubuntu mopidy[9389]: INFO     [MainThread] mopidy.commands GLib mainloop got SIGTERM. Exiting...
okt 24 14:11:33 Desktop-Ubuntu systemd[1]: Stopping Mopidy music server...
okt 24 13:45:04 Desktop-Ubuntu mopidy[9389]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 35, "result": 0}'
okt 24 13:45:04 Desktop-Ubuntu mopidy[9389]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.playback.get_time_position","params":{},"jsonrpc":"2.0","id":35}'
okt 24 13:44:54 Desktop-Ubuntu mopidy[9389]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 34, "result": 0}'
okt 24 13:44:54 Desktop-Ubuntu mopidy[9389]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.playback.get_time_position","params":{},"jsonrpc":"2.0","id":34}'
okt 24 13:44:44 Desktop-Ubuntu mopidy[9389]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 33, "result": 0}'
okt 24 13:44:44 Desktop-Ubuntu mopidy[9389]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.playback.get_time_position","params":{},"jsonrpc":"2.0","id":33}'
okt 24 13:44:34 Desktop-Ubuntu mopidy[9389]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 32, "result": 0}'
okt 24 13:44:34 Desktop-Ubuntu mopidy[9389]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.playback.get_time_position","params":{},"jsonrpc":"2.0","id":32}'
okt 24 13:44:26 Desktop-Ubuntu mopidy[9389]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 31, "result": 3}'
okt 24 13:44:26 Desktop-Ubuntu mopidy[9389]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_next_tlid","params":{},"jsonrpc":"2.0","id":31}'
okt 24 13:44:25 Desktop-Ubuntu mopidy[9389]: DEBUG    [HttpServer] mopidy_iris.core {'id': 166661186537098, 'jsonrpc': '2.0', 'method': 'broadcast', 'result': {'message': 'Broadcast to 1 connections'}, 'recipient': 'RU8GMBK10Y3T'}
okt 24 13:44:25 Desktop-Ubuntu mopidy[9389]: DEBUG    [HttpServer] mopidy_iris.core {'method': 'notification', 'params': {'notification': {'content': '166656148284185 changed track'}}, 'connection_id': 'RU8GMBK10Y3T'}
okt 24 13:44:25 Desktop-Ubuntu mopidy[9389]: DEBUG    [HttpServer] mopidy_iris.handlers Iris websocket message received: {"jsonrpc":"2.0","id":166661186537098,"method":"broadcast","params":{"method":"notification","params":{"notification":{"content":"166656148284185 changed track"}}}}
okt 24 13:44:25 Desktop-Ubuntu mopidy[9389]: DEBUG    [HttpServer] mopidy_iris.core {'id': 166661186536029, 'jsonrpc': '2.0', 'method': 'add_queue_metadata', 'result': {'message': 'Added queue metadata'}, 'recipient': 'RU8GMBK10Y3T'}
okt 24 13:44:25 Desktop-Ubuntu mopidy[9389]: DEBUG    [HttpServer] mopidy_iris.core {'method': 'queue_metadata_changed', 'params': {'queue_metadata': {'tlid_2': {'tlid': 2, 'added_from': {'uri': 'iris:browse:file:///home/gerard/Music', 'name': 'Browse', 'type': 'browse'}, 'added_by': 166656148284185}, 'tlid_1': {'tlid': 1, 'added_from': {'uri': 'iris:browse:file:///home/gerard/Music', 'name': 'Browse', 'type': 'browse'}, 'added_by': 166656148284185}, 'tlid_3': {'tlid': 3, 'added_from': {'uri': 'iris:browse:file:///home/gerard/Music', 'name': 'Browse', 'type': 'browse'}, 'added_by': 166656148284185}}}}
okt 24 13:44:25 Desktop-Ubuntu mopidy[9389]: DEBUG    [HttpServer] mopidy_iris.handlers Iris websocket message received: {"jsonrpc":"2.0","id":166661186536029,"method":"add_queue_metadata","params":{"tlids":[3],"added_from":{"uri":"iris:browse:file:///home/gerard/Music","name":"Browse","type":"browse"},"added_by":166656148284185}}
okt 24 13:44:25 Desktop-Ubuntu mopidy[9389]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 30, "result": [{"__model__": "TlTrack", "tlid": 3, "track": {"__model__": "Track", "uri": "file:///home/gerard/Music/test.mp3", "name": "Symphony No. 40 in G Minor, K. 550 - I. Molto Allegro", "artists": [{"__model__": "Artist", "name": "Czech National Symphony Orchestra"}], "album": {"__model__": "Album", "name": "Musopen Kickstarter Project", "artists": [{"__model__": "Artist", "name": "Czech National Symphony Orchestra"}]}, "composers": [{"__model__": "Artist", "name": "Wolfgang Amadeus Mozart"}], "genre": "Classical", "length": 358848}}, {"__model__": "TlTrack", "tlid": 2, "track": {"__model__": "Track", "uri": "file:///home/gerard/Music/test.mp3", "name": "Symphony No. 40 in G Minor, K. 550 - I. Molto Allegro", "artists": [{"__model__": "Artist", "name": "Czech National Symphony Orchestra"}], "album": {"__model__": "Album", "name": "Musopen Kickstarter Project", "artists": [{"__model__": "Artist", "name": "Czech National Symphony Orchestra"}]}, "composers": [{"__model__": "Artist", "name": "Wolfgang Amadeus Mozart"}], "genre": "Classical", "length": 358848}}, {"__model__": "TlTrack", "tlid": 1, "track": {"__model__": "Track", "uri": "file:///home/gerard/Music/test.mp3", "name": "Symphony No. 40 in G Minor, K. 550 - I. Molto Allegro", "artists": [{"__model__": "Artist", "name": "Czech National Symphony Orchestra"}], "album": {"__model__": "Album", "name": "Musopen Kickstarter Project", "artists": [{"__model__": "Artist", "name": "Czech National Symphony Orchestra"}]}, "composers": [{"__model__": "Artist", "name": "Wolfgang Amadeus Mozart"}], "genre": "Classical", "length": 358848}}]}'
okt 24 13:44:25 Desktop-Ubuntu mopidy[9389]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_tl_tracks","params":{},"jsonrpc":"2.0","id":30}'
okt 24 13:44:25 Desktop-Ubuntu mopidy[9389]: DEBUG    [Core-7 (_actor_loop)] mopidy.listener Sending volume_changed to CoreListener: {'volume': 100}
okt 24 13:44:25 Desktop-Ubuntu mopidy[9389]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 29, "result": null}'
okt 24 13:44:25 Desktop-Ubuntu mopidy[9389]: DEBUG    [Core-7 (_actor_loop)] mopidy.listener Sending volume_changed to CoreListener: {'volume': 100}
okt 24 13:44:25 Desktop-Ubuntu mopidy[9389]: DEBUG    [Core-7 (_actor_loop)] mopidy.listener Sending volume_changed to CoreListener: {'volume': 100}
okt 24 13:44:25 Desktop-Ubuntu mopidy[9389]: WARNING  [Core-7 (_actor_loop)] mopidy.core.tracklist Track is not playable: file:///home/gerard/Music/test.mp3
okt 24 13:44:25 Desktop-Ubuntu mopidy[9389]: DEBUG    [MainThread] mopidy.audio.gst Changing state to GST_STATE_NULL: result=GST_STATE_CHANGE_SUCCESS
okt 24 13:44:25 Desktop-Ubuntu mopidy[9389]: WARNING  [Audio-2 (_actor_loop)] mopidy.audio.actor Setting GStreamer state to GST_STATE_PLAYING failed
okt 24 13:44:25 Desktop-Ubuntu mopidy[9389]: DEBUG    [Audio-2 (_actor_loop)] mopidy.audio.gst Changing state to GST_STATE_PLAYING: result=GST_STATE_CHANGE_FAILURE
okt 24 13:44:25 Desktop-Ubuntu mopidy[9389]: DEBUG    [MainThread] mopidy.audio.gst Got ERROR bus message: error=GLib.Error('Failed to connect: Connection refused', 'gst-resource-error-quark', 1) debug='../ext/pulse/pulsesink.c(615): gst_pulseringbuffer_open_device (): /GstBin:audio-sink/mopidy+audio+actor+_Outputs:mopidy+audio+actor+_outputs0/GstBin:bin0/GstPulseSink:pulsesink0'
okt 24 13:44:25 Desktop-Ubuntu mopidy[9389]: ERROR    [MainThread] mopidy.audio.gst GStreamer error: Failed to connect: Connection refused
okt 24 13:44:25 Desktop-Ubuntu mopidy[9389]: DEBUG    [SoftwareMixer-1 (_actor_loop)] mopidy.listener Sending volume_changed to MixerListener: {'volume': 100}
okt 24 13:44:25 Desktop-Ubuntu mopidy[9389]: DEBUG    [SoftwareMixer-1 (_actor_loop)] mopidy.mixer Mixer event: volume_changed(volume=100)
okt 24 13:44:25 Desktop-Ubuntu mopidy[9389]: DEBUG    [Audio-2 (_actor_loop)] mopidy.audio.actor Flags: 2
okt 24 13:44:25 Desktop-Ubuntu mopidy[9389]: DEBUG    [MainThread] mopidy.audio.gst Got STATE_CHANGED bus message: old=GST_STATE_NULL new=GST_STATE_READY pending=GST_STATE_VOID_PENDING
okt 24 13:44:25 Desktop-Ubuntu mopidy[9389]: DEBUG    [Audio-2 (_actor_loop)] mopidy.audio.gst Changing state to GST_STATE_READY: result=GST_STATE_CHANGE_SUCCESS
okt 24 13:44:25 Desktop-Ubuntu mopidy[9389]: WARNING  [Core-7 (_actor_loop)] mopidy.core.tracklist Track is not playable: file:///home/gerard/Music/test.mp3
okt 24 13:44:25 Desktop-Ubuntu mopidy[9389]: DEBUG    [MainThread] mopidy.audio.gst Changing state to GST_STATE_NULL: result=GST_STATE_CHANGE_SUCCESS
okt 24 13:44:25 Desktop-Ubuntu mopidy[9389]: WARNING  [Audio-2 (_actor_loop)] mopidy.audio.actor Setting GStreamer state to GST_STATE_PLAYING failed
okt 24 13:44:25 Desktop-Ubuntu mopidy[9389]: DEBUG    [MainThread] mopidy.audio.gst Got ERROR bus message: error=GLib.Error('Failed to connect: Connection refused', 'gst-resource-error-quark', 1) debug='../ext/pulse/pulsesink.c(615): gst_pulseringbuffer_open_device (): /GstBin:audio-sink/mopidy+audio+actor+_Outputs:mopidy+audio+actor+_outputs0/GstBin:bin0/GstPulseSink:pulsesink0'
okt 24 13:44:25 Desktop-Ubuntu mopidy[9389]: DEBUG    [Audio-2 (_actor_loop)] mopidy.audio.gst Changing state to GST_STATE_PLAYING: result=GST_STATE_CHANGE_FAILURE
okt 24 13:44:25 Desktop-Ubuntu mopidy[9389]: ERROR    [MainThread] mopidy.audio.gst GStreamer error: Failed to connect: Connection refused
okt 24 13:44:25 Desktop-Ubuntu mopidy[9389]: DEBUG    [SoftwareMixer-1 (_actor_loop)] mopidy.listener Sending volume_changed to MixerListener: {'volume': 100}
okt 24 13:44:25 Desktop-Ubuntu mopidy[9389]: DEBUG    [SoftwareMixer-1 (_actor_loop)] mopidy.mixer Mixer event: volume_changed(volume=100)
okt 24 13:44:25 Desktop-Ubuntu mopidy[9389]: DEBUG    [Audio-2 (_actor_loop)] mopidy.audio.actor Flags: 2
okt 24 13:44:25 Desktop-Ubuntu mopidy[9389]: DEBUG    [MainThread] mopidy.audio.gst Got STATE_CHANGED bus message: old=GST_STATE_NULL new=GST_STATE_READY pending=GST_STATE_VOID_PENDING
okt 24 13:44:25 Desktop-Ubuntu mopidy[9389]: DEBUG    [Audio-2 (_actor_loop)] mopidy.audio.gst Changing state to GST_STATE_READY: result=GST_STATE_CHANGE_SUCCESS
okt 24 13:44:25 Desktop-Ubuntu mopidy[9389]: WARNING  [Core-7 (_actor_loop)] mopidy.core.tracklist Track is not playable: file:///home/gerard/Music/test.mp3
okt 24 13:44:25 Desktop-Ubuntu mopidy[9389]: DEBUG    [MainThread] mopidy.audio.gst Changing state to GST_STATE_NULL: result=GST_STATE_CHANGE_SUCCESS
okt 24 13:44:25 Desktop-Ubuntu mopidy[9389]: WARNING  [Audio-2 (_actor_loop)] mopidy.audio.actor Setting GStreamer state to GST_STATE_PLAYING failed
okt 24 13:44:25 Desktop-Ubuntu mopidy[9389]: DEBUG    [MainThread] mopidy.audio.gst Got ERROR bus message: error=GLib.Error('Failed to connect: Connection refused', 'gst-resource-error-quark', 1) debug='../ext/pulse/pulsesink.c(615): gst_pulseringbuffer_open_device (): /GstBin:audio-sink/mopidy+audio+actor+_Outputs:mopidy+audio+actor+_outputs0/GstBin:bin0/GstPulseSink:pulsesink0'
okt 24 13:44:25 Desktop-Ubuntu mopidy[9389]: DEBUG    [Audio-2 (_actor_loop)] mopidy.audio.gst Changing state to GST_STATE_PLAYING: result=GST_STATE_CHANGE_FAILURE
okt 24 13:44:25 Desktop-Ubuntu mopidy[9389]: ERROR    [MainThread] mopidy.audio.gst GStreamer error: Failed to connect: Connection refused
okt 24 13:44:25 Desktop-Ubuntu mopidy[9389]: DEBUG    [SoftwareMixer-1 (_actor_loop)] mopidy.listener Sending volume_changed to MixerListener: {'volume': 100}
okt 24 13:44:25 Desktop-Ubuntu mopidy[9389]: DEBUG    [SoftwareMixer-1 (_actor_loop)] mopidy.mixer Mixer event: volume_changed(volume=100)
okt 24 13:44:25 Desktop-Ubuntu mopidy[9389]: DEBUG    [Audio-2 (_actor_loop)] mopidy.audio.actor Flags: 2
okt 24 13:44:25 Desktop-Ubuntu mopidy[9389]: DEBUG    [MainThread] mopidy.audio.gst Got STATE_CHANGED bus message: old=GST_STATE_NULL new=GST_STATE_READY pending=GST_STATE_VOID_PENDING
okt 24 13:44:25 Desktop-Ubuntu mopidy[9389]: DEBUG    [Audio-2 (_actor_loop)] mopidy.audio.gst Changing state to GST_STATE_READY: result=GST_STATE_CHANGE_SUCCESS
okt 24 13:44:25 Desktop-Ubuntu mopidy[9389]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.playback.play","params":{"tlid":3},"jsonrpc":"2.0","id":29}'
okt 24 13:44:25 Desktop-Ubuntu mopidy[9389]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 28, "result": [{"__model__": "TlTrack", "tlid": 3, "track": {"__model__": "Track", "uri": "file:///home/gerard/Music/test.mp3", "name": "Symphony No. 40 in G Minor, K. 550 - I. Molto Allegro", "artists": [{"__model__": "Artist", "name": "Czech National Symphony Orchestra"}], "album": {"__model__": "Album", "name": "Musopen Kickstarter Project", "artists": [{"__model__": "Artist", "name": "Czech National Symphony Orchestra"}]}, "composers": [{"__model__": "Artist", "name": "Wolfgang Amadeus Mozart"}], "genre": "Classical", "length": 358848}}]}'
okt 24 13:44:25 Desktop-Ubuntu mopidy[9389]: DEBUG    [Core-7 (_actor_loop)] mopidy.listener Sending tracklist_changed to CoreListener: {}
okt 24 13:44:25 Desktop-Ubuntu mopidy[9389]: DEBUG    [Core-7 (_actor_loop)] mopidy.core.tracklist Triggering event: tracklist_changed()
okt 24 13:44:25 Desktop-Ubuntu mopidy[9389]: TRACE    [FileBackend-4 (_actor_loop)] mopidy.audio.scan element pipeline4: GstMessageAsyncDone, running-time=(guint64)18446744073709551615;
okt 24 13:44:25 Desktop-Ubuntu mopidy[9389]: TRACE    [FileBackend-4 (_actor_loop)] mopidy.audio.scan element fakesink3: GstMessageTag, taglist=(taglist)"taglist\,\ encoder\=\(string\)\"LAME\\\ 32bi...
okt 24 13:44:25 Desktop-Ubuntu mopidy[9389]: TRACE    [FileBackend-4 (_actor_loop)] mopidy.audio.scan element fakesink3: GstMessageTag, taglist=(taglist)"taglist\,\ encoder\=\(string\)\"LAME\\\ 32bi...
okt 24 13:44:25 Desktop-Ubuntu mopidy[9389]: TRACE    [FileBackend-4 (_actor_loop)] mopidy.audio.scan element mpegaudioparse3: GstMessageDurationChanged;
okt 24 13:44:25 Desktop-Ubuntu mopidy[9389]: TRACE    [FileBackend-4 (_actor_loop)] mopidy.audio.scan element decodebin4: have-audio;
okt 24 13:44:25 Desktop-Ubuntu mopidy[9389]: DEBUG    [FileBackend-4 (_actor_loop)] mopidy.file.library Looking up file URI: file:///home/gerard/Music/test.mp3
okt 24 13:44:25 Desktop-Ubuntu mopidy[9389]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.add","params":{"uris":["file:///home/gerard/Music/test.mp3"],"at_position":0},"jsonrpc":"2.0","id":28}'
okt 24 13:44:24 Desktop-Ubuntu mopidy[9389]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 27, "result": 0}'
okt 24 13:44:24 Desktop-Ubuntu mopidy[9389]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.playback.get_time_position","params":{},"jsonrpc":"2.0","id":27}'
okt 24 13:44:24 Desktop-Ubuntu mopidy[9389]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 26, "result": 2}'
okt 24 13:44:24 Desktop-Ubuntu mopidy[9389]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_next_tlid","params":{},"jsonrpc":"2.0","id":26}'
okt 24 13:44:23 Desktop-Ubuntu mopidy[9389]: DEBUG    [HttpServer] mopidy_iris.core {'id': 166661186314153, 'jsonrpc': '2.0', 'method': 'broadcast', 'result': {'message': 'Broadcast to 1 connections'}, 'recipient': 'RU8GMBK10Y3T'}
okt 24 13:44:23 Desktop-Ubuntu mopidy[9389]: DEBUG    [HttpServer] mopidy_iris.core {'method': 'notification', 'params': {'notification': {'content': '166656148284185 changed track'}}, 'connection_id': 'RU8GMBK10Y3T'}
okt 24 13:44:23 Desktop-Ubuntu mopidy[9389]: DEBUG    [HttpServer] mopidy_iris.handlers Iris websocket message received: {"jsonrpc":"2.0","id":166661186314153,"method":"broadcast","params":{"method":"notification","params":{"notification":{"content":"166656148284185 changed track"}}}}
okt 24 13:44:23 Desktop-Ubuntu mopidy[9389]: DEBUG    [HttpServer] mopidy_iris.core {'id': 166661186313222, 'jsonrpc': '2.0', 'method': 'add_queue_metadata', 'result': {'message': 'Added queue metadata'}, 'recipient': 'RU8GMBK10Y3T'}
okt 24 13:44:23 Desktop-Ubuntu mopidy[9389]: DEBUG    [HttpServer] mopidy_iris.core {'method': 'queue_metadata_changed', 'params': {'queue_metadata': {'tlid_1': {'tlid': 1, 'added_from': {'uri': 'iris:browse:file:///home/gerard/Music', 'name': 'Browse', 'type': 'browse'}, 'added_by': 166656148284185}, 'tlid_2': {'tlid': 2, 'added_from': {'uri': 'iris:browse:file:///home/gerard/Music', 'name': 'Browse', 'type': 'browse'}, 'added_by': 166656148284185}}}}
okt 24 13:44:23 Desktop-Ubuntu mopidy[9389]: DEBUG    [HttpServer] mopidy_iris.handlers Iris websocket message received: {"jsonrpc":"2.0","id":166661186313222,"method":"add_queue_metadata","params":{"tlids":[2],"added_from":{"uri":"iris:browse:file:///home/gerard/Music","name":"Browse","type":"browse"},"added_by":166656148284185}}
okt 24 13:44:23 Desktop-Ubuntu mopidy[9389]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 25, "result": [{"__model__": "TlTrack", "tlid": 2, "track": {"__model__": "Track", "uri": "file:///home/gerard/Music/test.mp3", "name": "Symphony No. 40 in G Minor, K. 550 - I. Molto Allegro", "artists": [{"__model__": "Artist", "name": "Czech National Symphony Orchestra"}], "album": {"__model__": "Album", "name": "Musopen Kickstarter Project", "artists": [{"__model__": "Artist", "name": "Czech National Symphony Orchestra"}]}, "composers": [{"__model__": "Artist", "name": "Wolfgang Amadeus Mozart"}], "genre": "Classical", "length": 358848}}, {"__model__": "TlTrack", "tlid": 1, "track": {"__model__": "Track", "uri": "file:///home/gerard/Music/test.mp3", "name": "Symphony No. 40 in G Minor, K. 550 - I. Molto Allegro", "artists": [{"__model__": "Artist", "name": "Czech National Symphony Orchestra"}], "album": {"__model__": "Album", "name": "Musopen Kickstarter Project", "artists": [{"__model__": "Artist", "name": "Czech National Symphony Orchestra"}]}, "composers": [{"__model__": "Artist", "name": "Wolfgang Amadeus Mozart"}], "genre": "Classical", "length": 358848}}]}'
okt 24 13:44:23 Desktop-Ubuntu mopidy[9389]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_tl_tracks","params":{},"jsonrpc":"2.0","id":25}'
okt 24 13:44:23 Desktop-Ubuntu mopidy[9389]: DEBUG    [Core-7 (_actor_loop)] mopidy.listener Sending volume_changed to CoreListener: {'volume': 100}
okt 24 13:44:23 Desktop-Ubuntu mopidy[9389]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 24, "result": null}'
okt 24 13:44:23 Desktop-Ubuntu mopidy[9389]: DEBUG    [Core-7 (_actor_loop)] mopidy.listener Sending volume_changed to CoreListener: {'volume': 100}
okt 24 13:44:23 Desktop-Ubuntu mopidy[9389]: WARNING  [Core-7 (_actor_loop)] mopidy.core.tracklist Track is not playable: file:///home/gerard/Music/test.mp3
okt 24 13:44:23 Desktop-Ubuntu mopidy[9389]: DEBUG    [MainThread] mopidy.audio.gst Changing state to GST_STATE_NULL: result=GST_STATE_CHANGE_SUCCESS
okt 24 13:44:23 Desktop-Ubuntu mopidy[9389]: WARNING  [Audio-2 (_actor_loop)] mopidy.audio.actor Setting GStreamer state to GST_STATE_PLAYING failed
okt 24 13:44:23 Desktop-Ubuntu mopidy[9389]: DEBUG    [Audio-2 (_actor_loop)] mopidy.audio.gst Changing state to GST_STATE_PLAYING: result=GST_STATE_CHANGE_FAILURE
okt 24 13:44:23 Desktop-Ubuntu mopidy[9389]: DEBUG    [MainThread] mopidy.audio.gst Got ERROR bus message: error=GLib.Error('Failed to connect: Connection refused', 'gst-resource-error-quark', 1) debug='../ext/pulse/pulsesink.c(615): gst_pulseringbuffer_open_device (): /GstBin:audio-sink/mopidy+audio+actor+_Outputs:mopidy+audio+actor+_outputs0/GstBin:bin0/GstPulseSink:pulsesink0'
okt 24 13:44:23 Desktop-Ubuntu mopidy[9389]: ERROR    [MainThread] mopidy.audio.gst GStreamer error: Failed to connect: Connection refused
okt 24 13:44:23 Desktop-Ubuntu mopidy[9389]: DEBUG    [SoftwareMixer-1 (_actor_loop)] mopidy.listener Sending volume_changed to MixerListener: {'volume': 100}
okt 24 13:44:23 Desktop-Ubuntu mopidy[9389]: DEBUG    [SoftwareMixer-1 (_actor_loop)] mopidy.mixer Mixer event: volume_changed(volume=100)
okt 24 13:44:23 Desktop-Ubuntu mopidy[9389]: DEBUG    [Audio-2 (_actor_loop)] mopidy.audio.actor Flags: 2
okt 24 13:44:23 Desktop-Ubuntu mopidy[9389]: DEBUG    [MainThread] mopidy.audio.gst Got STATE_CHANGED bus message: old=GST_STATE_NULL new=GST_STATE_READY pending=GST_STATE_VOID_PENDING
okt 24 13:44:23 Desktop-Ubuntu mopidy[9389]: DEBUG    [Audio-2 (_actor_loop)] mopidy.audio.gst Changing state to GST_STATE_READY: result=GST_STATE_CHANGE_SUCCESS
okt 24 13:44:23 Desktop-Ubuntu mopidy[9389]: WARNING  [Core-7 (_actor_loop)] mopidy.core.tracklist Track is not playable: file:///home/gerard/Music/test.mp3
okt 24 13:44:23 Desktop-Ubuntu mopidy[9389]: DEBUG    [MainThread] mopidy.audio.gst Changing state to GST_STATE_NULL: result=GST_STATE_CHANGE_SUCCESS
okt 24 13:44:23 Desktop-Ubuntu mopidy[9389]: WARNING  [Audio-2 (_actor_loop)] mopidy.audio.actor Setting GStreamer state to GST_STATE_PLAYING failed
okt 24 13:44:23 Desktop-Ubuntu mopidy[9389]: DEBUG    [MainThread] mopidy.audio.gst Got ERROR bus message: error=GLib.Error('Failed to connect: Connection refused', 'gst-resource-error-quark', 1) debug='../ext/pulse/pulsesink.c(615): gst_pulseringbuffer_open_device (): /GstBin:audio-sink/mopidy+audio+actor+_Outputs:mopidy+audio+actor+_outputs0/GstBin:bin0/GstPulseSink:pulsesink0'
okt 24 13:44:23 Desktop-Ubuntu mopidy[9389]: DEBUG    [Audio-2 (_actor_loop)] mopidy.audio.gst Changing state to GST_STATE_PLAYING: result=GST_STATE_CHANGE_FAILURE
okt 24 13:44:23 Desktop-Ubuntu mopidy[9389]: ERROR    [MainThread] mopidy.audio.gst GStreamer error: Failed to connect: Connection refused
okt 24 13:44:23 Desktop-Ubuntu mopidy[9389]: DEBUG    [SoftwareMixer-1 (_actor_loop)] mopidy.listener Sending volume_changed to MixerListener: {'volume': 100}
okt 24 13:44:23 Desktop-Ubuntu mopidy[9389]: DEBUG    [SoftwareMixer-1 (_actor_loop)] mopidy.mixer Mixer event: volume_changed(volume=100)
okt 24 13:44:23 Desktop-Ubuntu mopidy[9389]: DEBUG    [Audio-2 (_actor_loop)] mopidy.audio.actor Flags: 2
okt 24 13:44:23 Desktop-Ubuntu mopidy[9389]: DEBUG    [MainThread] mopidy.audio.gst Got STATE_CHANGED bus message: old=GST_STATE_NULL new=GST_STATE_READY pending=GST_STATE_VOID_PENDING
okt 24 13:44:23 Desktop-Ubuntu mopidy[9389]: DEBUG    [Audio-2 (_actor_loop)] mopidy.audio.gst Changing state to GST_STATE_READY: result=GST_STATE_CHANGE_SUCCESS
okt 24 13:44:23 Desktop-Ubuntu mopidy[9389]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.playback.play","params":{"tlid":2},"jsonrpc":"2.0","id":24}'
okt 24 13:44:23 Desktop-Ubuntu mopidy[9389]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 23, "result": [{"__model__": "TlTrack", "tlid": 2, "track": {"__model__": "Track", "uri": "file:///home/gerard/Music/test.mp3", "name": "Symphony No. 40 in G Minor, K. 550 - I. Molto Allegro", "artists": [{"__model__": "Artist", "name": "Czech National Symphony Orchestra"}], "album": {"__model__": "Album", "name": "Musopen Kickstarter Project", "artists": [{"__model__": "Artist", "name": "Czech National Symphony Orchestra"}]}, "composers": [{"__model__": "Artist", "name": "Wolfgang Amadeus Mozart"}], "genre": "Classical", "length": 358848}}]}'
okt 24 13:44:23 Desktop-Ubuntu mopidy[9389]: DEBUG    [Core-7 (_actor_loop)] mopidy.listener Sending tracklist_changed to CoreListener: {}
okt 24 13:44:23 Desktop-Ubuntu mopidy[9389]: DEBUG    [Core-7 (_actor_loop)] mopidy.core.tracklist Triggering event: tracklist_changed()
okt 24 13:44:23 Desktop-Ubuntu mopidy[9389]: TRACE    [FileBackend-4 (_actor_loop)] mopidy.audio.scan element pipeline3: GstMessageAsyncDone, running-time=(guint64)18446744073709551615;
okt 24 13:44:23 Desktop-Ubuntu mopidy[9389]: TRACE    [FileBackend-4 (_actor_loop)] mopidy.audio.scan element fakesink2: GstMessageTag, taglist=(taglist)"taglist\,\ encoder\=\(string\)\"LAME\\\ 32bi...
okt 24 13:44:23 Desktop-Ubuntu mopidy[9389]: TRACE    [FileBackend-4 (_actor_loop)] mopidy.audio.scan element fakesink2: GstMessageTag, taglist=(taglist)"taglist\,\ encoder\=\(string\)\"LAME\\\ 32bi...
okt 24 13:44:23 Desktop-Ubuntu mopidy[9389]: TRACE    [FileBackend-4 (_actor_loop)] mopidy.audio.scan element mpegaudioparse2: GstMessageDurationChanged;
okt 24 13:44:23 Desktop-Ubuntu mopidy[9389]: TRACE    [FileBackend-4 (_actor_loop)] mopidy.audio.scan element decodebin3: have-audio;
okt 24 13:44:23 Desktop-Ubuntu mopidy[9389]: DEBUG    [FileBackend-4 (_actor_loop)] mopidy.file.library Looking up file URI: file:///home/gerard/Music/test.mp3
okt 24 13:44:23 Desktop-Ubuntu mopidy[9389]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.add","params":{"uris":["file:///home/gerard/Music/test.mp3"],"at_position":0},"jsonrpc":"2.0","id":23}'
okt 24 13:44:21 Desktop-Ubuntu mopidy[9389]: DEBUG    [HttpServer] mopidy_iris.core {'id': 166661186172757, 'jsonrpc': '2.0', 'method': 'broadcast', 'result': {'message': 'Broadcast to 1 connections'}, 'recipient': 'RU8GMBK10Y3T'}
okt 24 13:44:21 Desktop-Ubuntu mopidy[9389]: DEBUG    [HttpServer] mopidy_iris.core {'method': 'notification', 'params': {'notification': {'content': '166656148284185 started playback', 'icon': False}}, 'connection_id': 'RU8GMBK10Y3T'}
okt 24 13:44:21 Desktop-Ubuntu mopidy[9389]: DEBUG    [HttpServer] mopidy_iris.handlers Iris websocket message received: {"jsonrpc":"2.0","id":166661186172757,"method":"broadcast","params":{"method":"notification","params":{"notification":{"content":"166656148284185 started playback","icon":false}}}}
okt 24 13:44:21 Desktop-Ubuntu mopidy[9389]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 22, "result": null}'
okt 24 13:44:21 Desktop-Ubuntu mopidy[9389]: DEBUG    [MainThread] mopidy.audio.gst Changing state to GST_STATE_NULL: result=GST_STATE_CHANGE_SUCCESS
okt 24 13:44:21 Desktop-Ubuntu mopidy[9389]: DEBUG    [Core-7 (_actor_loop)] mopidy.listener Sending volume_changed to CoreListener: {'volume': 100}
okt 24 13:44:21 Desktop-Ubuntu mopidy[9389]: WARNING  [Core-7 (_actor_loop)] mopidy.core.tracklist Track is not playable: file:///home/gerard/Music/test.mp3
okt 24 13:44:21 Desktop-Ubuntu mopidy[9389]: DEBUG    [MainThread] mopidy.audio.gst Got ERROR bus message: error=GLib.Error('Failed to connect: Connection refused', 'gst-resource-error-quark', 1) debug='../ext/pulse/pulsesink.c(615): gst_pulseringbuffer_open_device (): /GstBin:audio-sink/mopidy+audio+actor+_Outputs:mopidy+audio+actor+_outputs0/GstBin:bin0/GstPulseSink:pulsesink0'
okt 24 13:44:21 Desktop-Ubuntu mopidy[9389]: WARNING  [Audio-2 (_actor_loop)] mopidy.audio.actor Setting GStreamer state to GST_STATE_PLAYING failed
okt 24 13:44:21 Desktop-Ubuntu mopidy[9389]: DEBUG    [Audio-2 (_actor_loop)] mopidy.audio.gst Changing state to GST_STATE_PLAYING: result=GST_STATE_CHANGE_FAILURE
okt 24 13:44:21 Desktop-Ubuntu mopidy[9389]: ERROR    [MainThread] mopidy.audio.gst GStreamer error: Failed to connect: Connection refused
okt 24 13:44:21 Desktop-Ubuntu mopidy[9389]: DEBUG    [SoftwareMixer-1 (_actor_loop)] mopidy.listener Sending volume_changed to MixerListener: {'volume': 100}
okt 24 13:44:21 Desktop-Ubuntu mopidy[9389]: DEBUG    [SoftwareMixer-1 (_actor_loop)] mopidy.mixer Mixer event: volume_changed(volume=100)
okt 24 13:44:21 Desktop-Ubuntu mopidy[9389]: DEBUG    [Audio-2 (_actor_loop)] mopidy.audio.actor Flags: 2
okt 24 13:44:21 Desktop-Ubuntu mopidy[9389]: DEBUG    [MainThread] mopidy.audio.gst Got STATE_CHANGED bus message: old=GST_STATE_NULL new=GST_STATE_READY pending=GST_STATE_VOID_PENDING
okt 24 13:44:21 Desktop-Ubuntu mopidy[9389]: DEBUG    [Audio-2 (_actor_loop)] mopidy.audio.gst Changing state to GST_STATE_READY: result=GST_STATE_CHANGE_SUCCESS
okt 24 13:44:21 Desktop-Ubuntu mopidy[9389]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.playback.play","params":{},"jsonrpc":"2.0","id":22}'
okt 24 13:44:21 Desktop-Ubuntu mopidy[9389]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 21, "result": 1}'
okt 24 13:44:21 Desktop-Ubuntu mopidy[9389]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_next_tlid","params":{},"jsonrpc":"2.0","id":21}'
okt 24 13:44:20 Desktop-Ubuntu mopidy[9389]: DEBUG    [HttpServer] mopidy_iris.core {'id': 166661186029130, 'jsonrpc': '2.0', 'method': 'broadcast', 'result': {'message': 'Broadcast to 1 connections'}, 'recipient': 'RU8GMBK10Y3T'}
okt 24 13:44:20 Desktop-Ubuntu mopidy[9389]: DEBUG    [HttpServer] mopidy_iris.core {'method': 'notification', 'params': {'notification': {'content': '166656148284185 changed track'}}, 'connection_id': 'RU8GMBK10Y3T'}
okt 24 13:44:20 Desktop-Ubuntu mopidy[9389]: DEBUG    [HttpServer] mopidy_iris.handlers Iris websocket message received: {"jsonrpc":"2.0","id":166661186029130,"method":"broadcast","params":{"method":"notification","params":{"notification":{"content":"166656148284185 changed track"}}}}
okt 24 13:44:20 Desktop-Ubuntu mopidy[9389]: DEBUG    [HttpServer] mopidy_iris.core {'id': 166661186026912, 'jsonrpc': '2.0', 'method': 'add_queue_metadata', 'result': {'message': 'Added queue metadata'}, 'recipient': 'RU8GMBK10Y3T'}
okt 24 13:44:20 Desktop-Ubuntu mopidy[9389]: DEBUG    [HttpServer] mopidy_iris.core {'method': 'queue_metadata_changed', 'params': {'queue_metadata': {'tlid_1': {'tlid': 1, 'added_from': {'uri': 'iris:browse:file:///home/gerard/Music', 'name': 'Browse', 'type': 'browse'}, 'added_by': 166656148284185}}}}
okt 24 13:44:20 Desktop-Ubuntu mopidy[9389]: DEBUG    [HttpServer] mopidy_iris.handlers Iris websocket message received: {"jsonrpc":"2.0","id":166661186026912,"method":"add_queue_metadata","params":{"tlids":[1],"added_from":{"uri":"iris:browse:file:///home/gerard/Music","name":"Browse","type":"browse"},"added_by":166656148284185}}
okt 24 13:44:20 Desktop-Ubuntu mopidy[9389]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 20, "result": [{"__model__": "TlTrack", "tlid": 1, "track": {"__model__": "Track", "uri": "file:///home/gerard/Music/test.mp3", "name": "Symphony No. 40 in G Minor, K. 550 - I. Molto Allegro", "artists": [{"__model__": "Artist", "name": "Czech National Symphony Orchestra"}], "album": {"__model__": "Album", "name": "Musopen Kickstarter Project", "artists": [{"__model__": "Artist", "name": "Czech National Symphony Orchestra"}]}, "composers": [{"__model__": "Artist", "name": "Wolfgang Amadeus Mozart"}], "genre": "Classical", "length": 358848}}]}'
okt 24 13:44:20 Desktop-Ubuntu mopidy[9389]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_tl_tracks","params":{},"jsonrpc":"2.0","id":20}'
okt 24 13:44:20 Desktop-Ubuntu mopidy[9389]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 19, "result": null}'
okt 24 13:44:20 Desktop-Ubuntu mopidy[9389]: DEBUG    [Core-7 (_actor_loop)] mopidy.listener Sending volume_changed to CoreListener: {'volume': 100}
okt 24 13:44:20 Desktop-Ubuntu mopidy[9389]: WARNING  [Core-7 (_actor_loop)] mopidy.core.tracklist Track is not playable: file:///home/gerard/Music/test.mp3
okt 24 13:44:20 Desktop-Ubuntu mopidy[9389]: DEBUG    [MainThread] mopidy.audio.gst Changing state to GST_STATE_NULL: result=GST_STATE_CHANGE_SUCCESS
okt 24 13:44:20 Desktop-Ubuntu mopidy[9389]: WARNING  [Audio-2 (_actor_loop)] mopidy.audio.actor Setting GStreamer state to GST_STATE_PLAYING failed
okt 24 13:44:20 Desktop-Ubuntu mopidy[9389]: DEBUG    [Audio-2 (_actor_loop)] mopidy.audio.gst Changing state to GST_STATE_PLAYING: result=GST_STATE_CHANGE_FAILURE
okt 24 13:44:20 Desktop-Ubuntu mopidy[9389]: DEBUG    [MainThread] mopidy.audio.gst Got ERROR bus message: error=GLib.Error('Failed to connect: Connection refused', 'gst-resource-error-quark', 1) debug='../ext/pulse/pulsesink.c(615): gst_pulseringbuffer_open_device (): /GstBin:audio-sink/mopidy+audio+actor+_Outputs:mopidy+audio+actor+_outputs0/GstBin:bin0/GstPulseSink:pulsesink0'
okt 24 13:44:20 Desktop-Ubuntu mopidy[9389]: ERROR    [MainThread] mopidy.audio.gst GStreamer error: Failed to connect: Connection refused
okt 24 13:44:20 Desktop-Ubuntu mopidy[9389]: DEBUG    [SoftwareMixer-1 (_actor_loop)] mopidy.listener Sending volume_changed to MixerListener: {'volume': 100}
okt 24 13:44:20 Desktop-Ubuntu mopidy[9389]: DEBUG    [SoftwareMixer-1 (_actor_loop)] mopidy.mixer Mixer event: volume_changed(volume=100)
okt 24 13:44:20 Desktop-Ubuntu mopidy[9389]: DEBUG    [Audio-2 (_actor_loop)] mopidy.audio.actor Flags: 2
okt 24 13:44:20 Desktop-Ubuntu mopidy[9389]: DEBUG    [MainThread] mopidy.audio.gst Got STATE_CHANGED bus message: old=GST_STATE_NULL new=GST_STATE_READY pending=GST_STATE_VOID_PENDING
okt 24 13:44:20 Desktop-Ubuntu mopidy[9389]: DEBUG    [Audio-2 (_actor_loop)] mopidy.audio.gst Changing state to GST_STATE_READY: result=GST_STATE_CHANGE_SUCCESS
okt 24 13:44:20 Desktop-Ubuntu mopidy[9389]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.playback.play","params":{"tlid":1},"jsonrpc":"2.0","id":19}'
okt 24 13:44:20 Desktop-Ubuntu mopidy[9389]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 18, "result": [{"__model__": "TlTrack", "tlid": 1, "track": {"__model__": "Track", "uri": "file:///home/gerard/Music/test.mp3", "name": "Symphony No. 40 in G Minor, K. 550 - I. Molto Allegro", "artists": [{"__model__": "Artist", "name": "Czech National Symphony Orchestra"}], "album": {"__model__": "Album", "name": "Musopen Kickstarter Project", "artists": [{"__model__": "Artist", "name": "Czech National Symphony Orchestra"}]}, "composers": [{"__model__": "Artist", "name": "Wolfgang Amadeus Mozart"}], "genre": "Classical", "length": 358848}}]}'
okt 24 13:44:20 Desktop-Ubuntu mopidy[9389]: DEBUG    [Core-7 (_actor_loop)] mopidy.listener Sending tracklist_changed to CoreListener: {}
okt 24 13:44:20 Desktop-Ubuntu mopidy[9389]: DEBUG    [Core-7 (_actor_loop)] mopidy.core.tracklist Triggering event: tracklist_changed()
okt 24 13:44:20 Desktop-Ubuntu mopidy[9389]: TRACE    [FileBackend-4 (_actor_loop)] mopidy.audio.scan element pipeline2: GstMessageAsyncDone, running-time=(guint64)18446744073709551615;
okt 24 13:44:20 Desktop-Ubuntu mopidy[9389]: TRACE    [FileBackend-4 (_actor_loop)] mopidy.audio.scan element fakesink1: GstMessageTag, taglist=(taglist)"taglist\,\ encoder\=\(string\)\"LAME\\\ 32bi...
okt 24 13:44:20 Desktop-Ubuntu mopidy[9389]: TRACE    [FileBackend-4 (_actor_loop)] mopidy.audio.scan element fakesink1: GstMessageTag, taglist=(taglist)"taglist\,\ encoder\=\(string\)\"LAME\\\ 32bi...
okt 24 13:44:20 Desktop-Ubuntu mopidy[9389]: TRACE    [FileBackend-4 (_actor_loop)] mopidy.audio.scan element mpegaudioparse1: GstMessageDurationChanged;
okt 24 13:44:20 Desktop-Ubuntu mopidy[9389]: TRACE    [FileBackend-4 (_actor_loop)] mopidy.audio.scan element decodebin2: have-audio;
okt 24 13:44:20 Desktop-Ubuntu mopidy[9389]: DEBUG    [FileBackend-4 (_actor_loop)] mopidy.file.library Looking up file URI: file:///home/gerard/Music/test.mp3
okt 24 13:44:20 Desktop-Ubuntu mopidy[9389]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.add","params":{"uris":["file:///home/gerard/Music/test.mp3"],"at_position":0},"jsonrpc":"2.0","id":18}'
okt 24 13:44:19 Desktop-Ubuntu mopidy[9389]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 17, "result": {"file:///home/gerard/Music/test.mp3": [{"__model__": "Track", "uri": "file:///home/gerard/Music/test.mp3", "name": "Symphony No. 40 in G Minor, K. 550 - I. Molto Allegro", "artists": [{"__model__": "Artist", "name": "Czech National Symphony Orchestra"}], "album": {"__model__": "Album", "name": "Musopen Kickstarter Project", "artists": [{"__model__": "Artist", "name": "Czech National Symphony Orchestra"}]}, "composers": [{"__model__": "Artist", "name": "Wolfgang Amadeus Mozart"}], "genre": "Classical", "length": 358848}]}}'
okt 24 13:44:18 Desktop-Ubuntu mopidy[9389]: TRACE    [FileBackend-4 (_actor_loop)] mopidy.audio.scan element pipeline1: GstMessageAsyncDone, running-time=(guint64)18446744073709551615;
okt 24 13:44:18 Desktop-Ubuntu mopidy[9389]: TRACE    [FileBackend-4 (_actor_loop)] mopidy.audio.scan element fakesink0: GstMessageTag, taglist=(taglist)"taglist\,\ encoder\=\(string\)\"LAME\\\ 32bi...
okt 24 13:44:18 Desktop-Ubuntu mopidy[9389]: TRACE    [FileBackend-4 (_actor_loop)] mopidy.audio.scan element fakesink0: GstMessageTag, taglist=(taglist)"taglist\,\ encoder\=\(string\)\"LAME\\\ 32bi...
okt 24 13:44:18 Desktop-Ubuntu mopidy[9389]: TRACE    [FileBackend-4 (_actor_loop)] mopidy.audio.scan element mpegaudioparse0: GstMessageDurationChanged;
okt 24 13:44:18 Desktop-Ubuntu mopidy[9389]: TRACE    [FileBackend-4 (_actor_loop)] mopidy.audio.scan element decodebin1: have-audio;
okt 24 13:44:18 Desktop-Ubuntu mopidy[9389]: DEBUG    [FileBackend-4 (_actor_loop)] mopidy.file.library Looking up file URI: file:///home/gerard/Music/test.mp3
okt 24 13:44:18 Desktop-Ubuntu mopidy[9389]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.library.lookup","params":{"uris":["file:///home/gerard/Music/test.mp3"]},"jsonrpc":"2.0","id":17}'
okt 24 13:44:18 Desktop-Ubuntu mopidy[9389]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 16, "result": [{"__model__": "Ref", "uri": "file:///home/gerard/Music/test.mp3", "name": "test.mp3", "type": "track"}]}'
okt 24 13:44:18 Desktop-Ubuntu mopidy[9389]: DEBUG    [FileBackend-4 (_actor_loop)] mopidy.file.library Browsing files at: file:///home/gerard/Music
okt 24 13:44:18 Desktop-Ubuntu mopidy[9389]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.library.browse","params":{"uri":"file:///home/gerard/Music"},"jsonrpc":"2.0","id":16}'
okt 24 13:44:18 Desktop-Ubuntu mopidy[9389]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 15, "result": {"file:///home/gerard/Music": [{"__model__": "Track", "uri": "file:///home/gerard/Music", "name": "Music"}]}}'
okt 24 13:44:18 Desktop-Ubuntu mopidy[9389]: WARNING  [FileBackend-4 (_actor_loop)] mopidy.file.library Failed looking up file:///home/gerard/Music: gst-resource-error-quark: "/home/gerard/Music" is a directory. (5)
okt 24 13:44:18 Desktop-Ubuntu mopidy[9389]: TRACE    [FileBackend-4 (_actor_loop)] mopidy.audio.scan element filesrc0: GstMessageError, gerror=(GError)NULL, debug=(string)"../plugins/elements/gstf...
okt 24 13:44:18 Desktop-Ubuntu mopidy[9389]: DEBUG    [FileBackend-4 (_actor_loop)] mopidy.file.library Looking up file URI: file:///home/gerard/Music
okt 24 13:44:18 Desktop-Ubuntu mopidy[9389]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.library.lookup","params":{"uris":["file:///home/gerard/Music"]},"jsonrpc":"2.0","id":15}'
okt 24 13:44:17 Desktop-Ubuntu mopidy[9389]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 14, "result": [{"__model__": "Ref", "uri": "file:///home/gerard/Music", "name": "Files", "type": "directory"}, {"__model__": "Ref", "uri": "local:directory", "name": "Local media", "type": "directory"}]}'
okt 24 13:44:17 Desktop-Ubuntu mopidy[9389]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.library.browse","params":{"uri":null},"jsonrpc":"2.0","id":14}'
okt 24 13:44:16 Desktop-Ubuntu mopidy[9389]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 13, "result": []}'
okt 24 13:44:16 Desktop-Ubuntu mopidy[9389]: ERROR    [LocalBackend-3 (_actor_loop)] mopidy_local.library Error browsing local:directory?type=genre: no such table: search
okt 24 13:44:16 Desktop-Ubuntu mopidy[9389]:     
okt 24 13:44:16 Desktop-Ubuntu mopidy[9389]:      WHERE field IS NOT NULL
okt 24 13:44:16 Desktop-Ubuntu mopidy[9389]:       FROM search
okt 24 13:44:16 Desktop-Ubuntu mopidy[9389]:     SELECT DISTINCT genre AS field
okt 24 13:44:16 Desktop-Ubuntu mopidy[9389]: DEBUG    [LocalBackend-3 (_actor_loop)] mopidy_local.schema SQLite list query []:
okt 24 13:44:16 Desktop-Ubuntu mopidy[9389]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.library.browse","params":{"uri":"local:directory?type=genre"},"jsonrpc":"2.0","id":13}'
okt 24 13:44:16 Desktop-Ubuntu mopidy[9389]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 12, "result": {"local:directory?type=genre": []}}'
okt 24 13:44:16 Desktop-Ubuntu mopidy[9389]: ERROR    [LocalBackend-3 (_actor_loop)] mopidy_local.library Lookup error for local:directory?type=genre: Invalid lookup URI
okt 24 13:44:16 Desktop-Ubuntu mopidy[9389]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.library.lookup","params":{"uris":["local:directory?type=genre"]},"jsonrpc":"2.0","id":12}'
okt 24 13:44:15 Desktop-Ubuntu mopidy[9389]: DEBUG    [HttpServer] mopidy_iris.core {'id': 166661185497551, 'jsonrpc': '2.0', 'method': 'get_version', 'result': {'version': {'current': '3.64.1', 'latest': '3.64.1', 'is_root': False, 'upgrade_available': False}}, 'recipient': 'RU8GMBK10Y3T'}
okt 24 13:44:14 Desktop-Ubuntu mopidy[9389]: DEBUG    [HttpServer] mopidy_iris.handlers Iris websocket message received: {"jsonrpc":"2.0","id":166661185497551,"method":"get_version"}
okt 24 13:44:14 Desktop-Ubuntu mopidy[9389]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 11, "result": null}'
okt 24 13:44:14 Desktop-Ubuntu mopidy[9389]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.playback.get_stream_title","params":{},"jsonrpc":"2.0","id":11}'
okt 24 13:44:14 Desktop-Ubuntu mopidy[9389]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 10, "result": ["file", "http", "https", "local", "m3u", "rtsp"]}'
okt 24 13:44:14 Desktop-Ubuntu mopidy[9389]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.get_uri_schemes","params":{},"jsonrpc":"2.0","id":10}'
okt 24 13:44:14 Desktop-Ubuntu mopidy[9389]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 9, "result": 0}'
okt 24 13:44:14 Desktop-Ubuntu mopidy[9389]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.playback.get_time_position","params":{},"jsonrpc":"2.0","id":9}'
okt 24 13:44:14 Desktop-Ubuntu mopidy[9389]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 8, "result": []}'
okt 24 13:44:14 Desktop-Ubuntu mopidy[9389]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_tl_tracks","params":{},"jsonrpc":"2.0","id":8}'
okt 24 13:44:14 Desktop-Ubuntu mopidy[9389]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 7, "result": false}'
okt 24 13:44:14 Desktop-Ubuntu mopidy[9389]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_repeat","params":{},"jsonrpc":"2.0","id":7}'
okt 24 13:44:14 Desktop-Ubuntu mopidy[9389]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 6, "result": false}'
okt 24 13:44:14 Desktop-Ubuntu mopidy[9389]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_random","params":{},"jsonrpc":"2.0","id":6}'
okt 24 13:44:14 Desktop-Ubuntu mopidy[9389]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 5, "result": false}'
okt 24 13:44:14 Desktop-Ubuntu mopidy[9389]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_consume","params":{},"jsonrpc":"2.0","id":5}'
okt 24 13:44:14 Desktop-Ubuntu mopidy[9389]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 4, "result": false}'
okt 24 13:44:14 Desktop-Ubuntu mopidy[9389]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.mixer.get_mute","params":{},"jsonrpc":"2.0","id":4}'
okt 24 13:44:14 Desktop-Ubuntu mopidy[9389]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 3, "result": 100}'
okt 24 13:44:14 Desktop-Ubuntu mopidy[9389]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.mixer.get_volume","params":{},"jsonrpc":"2.0","id":3}'
okt 24 13:44:14 Desktop-Ubuntu mopidy[9389]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 2, "result": "stopped"}'
okt 24 13:44:14 Desktop-Ubuntu mopidy[9389]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.playback.get_state","params":{},"jsonrpc":"2.0","id":2}'
okt 24 13:44:14 Desktop-Ubuntu mopidy[9389]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 1, "result": null}'
okt 24 13:44:14 Desktop-Ubuntu mopidy[9389]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.playback.get_current_tl_track","params":{},"jsonrpc":"2.0","id":1}'
okt 24 13:44:14 Desktop-Ubuntu mopidy[9389]: DEBUG    [HttpServer] mopidy_iris.core {'id': 166661185447348, 'jsonrpc': '2.0', 'method': 'get_queue_metadata', 'result': {'queue_metadata': {}}, 'recipient': 'RU8GMBK10Y3T'}
okt 24 13:44:14 Desktop-Ubuntu mopidy[9389]: DEBUG    [HttpServer] mopidy_iris.handlers Iris websocket message received: {"jsonrpc":"2.0","id":166661185447348,"method":"get_queue_metadata"}
okt 24 13:44:14 Desktop-Ubuntu mopidy[9389]: DEBUG    [HttpServer] mopidy_iris.core {'id': 166661185447225, 'jsonrpc': '2.0', 'method': 'get_pinned', 'result': {'pinned': []}, 'recipient': 'RU8GMBK10Y3T'}
okt 24 13:44:14 Desktop-Ubuntu mopidy[9389]: DEBUG    [HttpServer] mopidy_iris.handlers Iris websocket message received: {"jsonrpc":"2.0","id":166661185447225,"method":"get_pinned"}
okt 24 13:44:14 Desktop-Ubuntu mopidy[9389]: DEBUG    [HttpServer] mopidy_iris.core {'id': 166661185447114, 'jsonrpc': '2.0', 'method': 'get_commands', 'result': {'commands': {}}, 'recipient': 'RU8GMBK10Y3T'}
okt 24 13:44:14 Desktop-Ubuntu mopidy[9389]: DEBUG    [HttpServer] mopidy_iris.handlers Iris websocket message received: {"jsonrpc":"2.0","id":166661185447114,"method":"get_commands"}
okt 24 13:44:14 Desktop-Ubuntu mopidy[9389]: DEBUG    [HttpServer] mopidy_iris.core {'id': 166661185446940, 'jsonrpc': '2.0', 'method': 'get_radio', 'result': {'radio': {'enabled': 0, 'seed_artists': [], 'seed_genres': [], 'seed_tracks': [], 'results': []}}, 'recipient': 'RU8GMBK10Y3T'}
okt 24 13:44:14 Desktop-Ubuntu mopidy[9389]: DEBUG    [HttpServer] mopidy_iris.handlers Iris websocket message received: {"jsonrpc":"2.0","id":166661185446940,"method":"get_radio"}
okt 24 13:44:14 Desktop-Ubuntu mopidy[9389]: DEBUG    [HttpServer] mopidy_iris.core {'id': 166661185446821, 'jsonrpc': '2.0', 'method': 'get_shared_config', 'result': {'shared_config': {}}, 'recipient': 'RU8GMBK10Y3T'}
okt 24 13:44:14 Desktop-Ubuntu mopidy[9389]: DEBUG    [HttpServer] mopidy_iris.handlers Iris websocket message received: {"jsonrpc":"2.0","id":166661185446821,"method":"get_shared_config"}
okt 24 13:44:14 Desktop-Ubuntu mopidy[9389]: DEBUG    [HttpServer] mopidy_iris.core {'id': 166661185446742, 'jsonrpc': '2.0', 'method': 'get_config', 'result': {'config': {'is_root': False, 'spotify_username': False, 'country': 'NZ', 'locale': 'en_NZ', 'snapcast_enabled': True, 'snapcast_host': 'localhost', 'snapcast_port': '1780', 'snapcast_ssl': False, 'snapcast_stream': 'Default', 'spotify_authorization_url': 'https://jamesbarnsley.co.nz/iris/auth_spotify.php', 'lastfm_authorization_url': 'https://jamesbarnsley.co.nz/iris/auth_lastfm.php', 'genius_authorization_url': 'https://jamesbarnsley.co.nz/iris/auth_genius.php', 'shared_config': {}}}, 'recipient': 'RU8GMBK10Y3T'}
okt 24 13:44:14 Desktop-Ubuntu mopidy[9389]: DEBUG    [HttpServer] mopidy_iris.handlers Iris websocket message received: {"jsonrpc":"2.0","id":166661185446742,"method":"get_config"}
okt 24 13:44:14 Desktop-Ubuntu mopidy[9389]: DEBUG    [HttpServer] mopidy_iris.core {'id': 166661185446623, 'jsonrpc': '2.0', 'method': 'update_connection', 'result': {'connection': {'connection_id': 'RU8GMBK10Y3T', 'ip': '127.0.0.1', 'created': '2022-10-24 13:44:14', 'username': 166656148284185, 'client_id': 166656148284193}}, 'recipient': 'RU8GMBK10Y3T'}
okt 24 13:44:14 Desktop-Ubuntu mopidy[9389]: DEBUG    [HttpServer] mopidy_iris.core {'method': 'connection_changed', 'params': {'connection': {'connection_id': 'RU8GMBK10Y3T', 'ip': '127.0.0.1', 'created': '2022-10-24 13:44:14', 'username': 166656148284185, 'client_id': 166656148284193}}}
okt 24 13:44:14 Desktop-Ubuntu mopidy[9389]: DEBUG    [HttpServer] mopidy_iris.handlers Iris websocket message received: {"jsonrpc":"2.0","id":166661185446623,"method":"update_connection","params":{"username":166656148284185,"client_id":166656148284193}}
okt 24 13:44:14 Desktop-Ubuntu mopidy[9389]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 0, "result": {"core.get_uri_schemes": {"description": "Get list of URI schemes we can handle", "params": []}, "core.get_version": {"description": "Get version of the Mopidy core API", "params": []}, "core.history.get_history": {"description": "Get the track history.\\n\\nThe timestamps are milliseconds since epoch.\\n\\n:returns: the track history\\n:rtype: list of (timestamp, :class:`mopidy.models.Ref`) tuples", "params": []}, "core.history.get_length": {"description": "Get the number of tracks in the history.\\n\\n:returns: the history length\\n:rtype: int", "params": []}, "core.library.browse": {"description": "Browse directories and tracks at the given ``uri``.\\n\\n``uri`` is a string which represents some directory belonging to a\\nbackend. To get the intial root directories for backends pass\\n:class:`None` as the URI.\\n\\nReturns a list of :class:`mopidy.models.Ref` objects for the\\ndirectories and tracks at the given ``uri``.\\n\\nThe :class:`~mopidy.models.Ref` objects representing tracks keep the\\ntrack\'s original URI. A matching pair of objects can look like this::\\n\\n    Track(uri=\'dummy:/foo.mp3\', name=\'foo\', artists=..., album=...)\\n    Ref.track(uri=\'dummy:/foo.mp3\', name=\'foo\')\\n\\nThe :class:`~mopidy.models.Ref` objects representing directories have\\nbackend specific URIs. These are opaque values, so no one but the\\nbackend that created them should try and derive any meaning from them.\\nThe only valid exception to this is checking the scheme, as it is used\\nto route browse requests to the correct backend.\\n\\nFor example, the dummy library\'s ``/bar`` directory could be returned\\nlike this::\\n\\n    Ref.directory(uri=\'dummy:directory:/bar\', name=\'bar\')\\n\\n:param string uri: URI to browse\\n:rtype: list of :class:`mopidy.models.Ref`\\n\\n.. versionadded:: 0.18", "params": [{"name": "uri"}]}, "core.library.get_distinct": {"description": "List distinct values for a given field from the library.\\n\\nThis has mainly been added to support the list commands the MPD\\nprotocol supports in a more sane fashion. Other frontends are not\\nrecommended to use this method.\\n\\n:param string field: Any one of ``uri``, ``track_name``, ``album``,\\n    ``artist``, ``albumartist``, ``composer``, ``performer``,\\n    ``track_no``, ``genre``, ``date``, ``comment``, ``disc_no``,\\n    ``musicbrainz_albumid``, ``musicbrainz_artistid``, or\\n    ``musicbrainz_trackid``.\\n:param dict query: Query to use for limiting results, see\\n    :meth:`search` for details about the query format.\\n:rtype: set of values corresponding to the requested field type.\\n\\n.. versionadded:: 1.0", "params": [{"name": "field"}, {"name": "query", "default": null}]}, "core.library.get_images": {"description": "Lookup the images for the given URIs\\n\\nBackends can use this to return image URIs for any URI they know about\\nbe it tracks, albums, playlists. The lookup result is a dictionary\\nmapping the provided URIs to lists of images.\\n\\nUnknown URIs or URIs the corresponding backend couldn\'t find anything\\nfor will simply return an empty list for that URI.\\n\\n:param uris: list of URIs to find images for\\n:type uris: list of string\\n:rtype: {uri: tuple of :class:`mopidy.models.Image`}\\n\\n.. versionadded:: 1.0", "params": [{"name": "uris"}]}, "core.library.lookup": {"description": "Lookup the given URIs.\\n\\nIf the URI expands to multiple tracks, the returned list will contain\\nthem all.\\n\\n:param uris: track URIs\\n:type uris: list of string\\n:rtype: {uri: list of :class:`mopidy.models.Track`}", "params": [{"name": "uris"}]}, "core.library.refresh": {"description": "Refresh library. Limit to URI and below if an URI is given.\\n\\n:param uri: directory or track URI\\n:type uri: string", "params": [{"name": "uri", "default": null}]}, "core.library.search": {"description": "Search the library for tracks where ``field`` contains ``values``.\\n\\n``field`` can be one of ``uri``, ``track_name``, ``album``, ``artist``,\\n``albumartist``, ``composer``, ``performer``, ``track_no``, ``genre``,\\n``date``, ``comment``, ``disc_no``, ``musicbrainz_albumid``,\\n``musicbrainz_artistid``, ``musicbrainz_trackid`` or ``any``.\\n\\nIf ``uris`` is given, the search is limited to results from within the\\nURI roots. For example passing ``uris=[\'file:\']`` will limit the search\\nto the local backend.\\n\\nExamples::\\n\\n    # Returns results matching \'a\' in any backend\\n    search({\'any\': [\'a\']})\\n\\n    # Returns results matching artist \'xyz\' in any backend\\n    search({\'artist\': [\'xyz\']})\\n\\n    # Returns results matching \'a\' and \'b\' and artist \'xyz\' in any\\n    # backend\\n    search({\'any\': [\'a\', \'b\'], \'artist\': [\'xyz\']})\\n\\n    # Returns results matching \'a\' if within the given URI roots\\n    # \\"file:///media/music\\" and \\"spotify:\\"\\n    search({\'any\': [\'a\']}, uris=[\'file:///media/music\', \'spotify:\'])\\n\\n    # Returns results matching artist \'xyz\' and \'abc\' in any backend\\n    search({\'artist\': [\'xyz\', \'abc\']})\\n\\n:param query: one or more queries to search for\\n:type query: dict\\n:param uris: zero or more URI roots to limit the search to\\n:type uris: list of string or :class:`None`\\n:param exact: if the search should use exact matching\\n:type exact: :class:`bool`\\n:rtype: list of :class:`mopidy.models.SearchResult`\\n\\n.. versionadded:: 1.0\\n    The ``exact`` keyword argument.", "params": [{"name": "query"}, {"name": "uris", "default": null}, {"name": "exact", "default": false}]}, "core.mixer.get_mute": {"description": "Get mute state.\\n\\n:class:`True` if muted, :class:`False` unmuted, :class:`None` if\\nunknown.", "params": []}, "core.mixer.get_volume": {"description": "Get the volume.\\n\\nInteger in range [0..100] or :class:`None` if unknown.\\n\\nThe volume scale is linear.", "params": []}, "core.mixer.set_mute": {"description": "Set mute state.\\n\\n:class:`True` to mute, :class:`False` to unmute.\\n\\nReturns :class:`True` if call is successful, otherwise :class:`False`.", "params": [{"name": "mute"}]}, "core.mixer.set_volume": {"description": "Set the volume.\\n\\nThe volume is defined as an integer in range [0..100].\\n\\nThe volume scale is linear.\\n\\nReturns :class:`True` if call is successful, otherwise :class:`False`.", "params": [{"name": "volume"}]}, "core.playback.get_current_tl_track": {"description": "Get the currently playing or selected track.\\n\\nReturns a :class:`mopidy.models.TlTrack` or :class:`None`.", "params": []}, "core.playback.get_current_tlid": {"description": "Get the currently playing or selected TLID.\\n\\nExtracted from :meth:`get_current_tl_track` for convenience.\\n\\nReturns a :class:`int` or :class:`None`.\\n\\n.. versionadded:: 1.1", "params": []}, "core.playback.get_current_track": {"description": "Get the currently playing or selected track.\\n\\nExtracted from :meth:`get_current_tl_track` for convenience.\\n\\nReturns a :class:`mopidy.models.Track` or :class:`None`.", "params": []}, "core.playback.get_state": {"description": "Get The playback state.", "params": []}, "core.playback.get_stream_title": {"description": "Get the current stream title or :class:`None`.", "params": []}, "core.playback.get_time_position": {"description": "Get time position in milliseconds.", "params": []}, "core.playback.next": {"description": "Change to the next track.\\n\\nThe current playback state will be kept. If it was playing, playing\\nwill continue. If it was paused, it will still be paused, etc.", "params": []}, "core.playback.pause": {"description": "Pause playback.", "params": []}, "core.playback.play": {"description": "Play the given track, or if the given tl_track and tlid is\\n:class:`None`, play the currently active track.\\n\\nNote that the track **must** already be in the tracklist.\\n\\n.. deprecated:: 3.0\\n    The ``tl_track`` argument. Use ``tlid`` instead.\\n\\n:param tl_track: track to play\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:param tlid: TLID of the track to play\\n:type tlid: :class:`int` or :class:`None`", "params": [{"name": "tl_track", "default": null}, {"name": "tlid", "default": null}]}, "core.playback.previous": {"description": "Change to the previous track.\\n\\nThe current playback state will be kept. If it was playing, playing\\nwill continue. If it was paused, it will still be paused, etc.", "params": []}, "core.playback.resume": {"description": "If paused, resume playing the current track.", "params": []}, "core.playback.seek": {"description": "Seeks to time position given in milliseconds.\\n\\n:param time_position: time position in milliseconds\\n:type time_position: int\\n:rtype: :class:`True` if successful, else :class:`False`", "params": [{"name": "time_position"}]}, "core.playback.set_state": {"description": "Set the playback state.\\n\\nMust be :attr:`PLAYING`, :attr:`PAUSED`, or :attr:`STOPPED`.\\n\\nPossible states and transitions:\\n\\n.. digraph:: state_transitions\\n\\n    \\"STOPPED\\" -> \\"PLAYING\\" [ label=\\"play\\" ]\\n    \\"STOPPED\\" -> \\"PAUSED\\" [ label=\\"pause\\" ]\\n    \\"PLAYING\\" -> \\"STOPPED\\" [ label=\\"stop\\" ]\\n    \\"PLAYING\\" -> \\"PAUSED\\" [ label=\\"pause\\" ]\\n    \\"PLAYING\\" -> \\"PLAYING\\" [ label=\\"play\\" ]\\n    \\"PAUSED\\" -> \\"PLAYING\\" [ label=\\"resume\\" ]\\n    \\"PAUSED\\" -> \\"STOPPED\\" [ label=\\"stop\\" ]", "params": [{"name": "new_state"}]}, "core.playback.stop": {"description": "Stop playing.", "params": []}, "core.playlists.as_list": {"description": "Get a list of the currently available playlists.\\n\\nReturns a list of :class:`~mopidy.models.Ref` objects referring to the\\nplaylists. In other words, no information about the playlists\' content\\nis given.\\n\\n:rtype: list of :class:`mopidy.models.Ref`\\n\\n.. versionadded:: 1.0", "params": []}, "core.playlists.create": {"description": "Create a new playlist.\\n\\nIf ``uri_scheme`` matches an URI scheme handled by a current backend,\\nthat backend is asked to create the playlist. If ``uri_scheme`` is\\n:class:`None` or doesn\'t match a current backend, the first backend is\\nasked to create the playlist.\\n\\nAll new playlists must be created by calling this method, and **not**\\nby creating new instances of :class:`mopidy.models.Playlist`.\\n\\n:param name: name of the new playlist\\n:type name: string\\n:param uri_scheme: use the backend matching the URI scheme\\n:type uri_scheme: string\\n:rtype: :class:`mopidy.models.Playlist` or :class:`None`", "params": [{"name": "name"}, {"name": "uri_scheme", "default": null}]}, "core.playlists.delete": {"description": "Delete playlist identified by the URI.\\n\\nIf the URI doesn\'t match the URI schemes handled by the current\\nbackends, nothing happens.\\n\\nReturns :class:`True` if deleted, :class:`False` otherwise.\\n\\n:param uri: URI of the playlist to delete\\n:type uri: string\\n:rtype: :class:`bool`\\n\\n.. versionchanged:: 2.2\\n    Return type defined.", "params": [{"name": "uri"}]}, "core.playlists.get_items": {"description": "Get the items in a playlist specified by ``uri``.\\n\\nReturns a list of :class:`~mopidy.models.Ref` objects referring to the\\nplaylist\'s items.\\n\\nIf a playlist with the given ``uri`` doesn\'t exist, it returns\\n:class:`None`.\\n\\n:rtype: list of :class:`mopidy.models.Ref`, or :class:`None`\\n\\n.. versionadded:: 1.0", "params": [{"name": "uri"}]}, "core.playlists.get_uri_schemes": {"description": "Get the list of URI schemes that support playlists.\\n\\n:rtype: list of string\\n\\n.. versionadded:: 2.0", "params": []}, "core.playlists.lookup": {"description": "Lookup playlist with given URI in both the set of playlists and in any\\nother playlist sources. Returns :class:`None` if not found.\\n\\n:param uri: playlist URI\\n:type uri: string\\n:rtype: :class:`mopidy.models.Playlist` or :class:`None`", "params": [{"name": "uri"}]}, "core.playlists.refresh": {"description": "Refresh the playlists in :attr:`playlists`.\\n\\nIf ``uri_scheme`` is :class:`None`, all backends are asked to refresh.\\nIf ``uri_scheme`` is an URI scheme handled by a backend, only that\\nbackend is asked to refresh. If ``uri_scheme`` doesn\'t match any\\ncurrent backend, nothing happens.\\n\\n:param uri_scheme: limit to the backend matching the URI scheme\\n:type uri_scheme: string", "params": [{"name": "uri_scheme", "default": null}]}, "core.playlists.save": {"description": "Save the playlist.\\n\\nFor a playlist to be saveable, it must have the ``uri`` attribute set.\\nYou must not set the ``uri`` atribute yourself, but use playlist\\nobjects returned by :meth:`create` or retrieved from :attr:`playlists`,\\nwhich will always give you saveable playlists.\\n\\nThe method returns the saved playlist. The return playlist may differ\\nfrom the saved playlist. E.g. if the playlist name was changed, the\\nreturned playlist may have a different URI. The caller of this method\\nmust throw away the playlist sent to this method, and use the\\nreturned playlist instead.\\n\\nIf the playlist\'s URI isn\'t set or doesn\'t match the URI scheme of a\\ncurrent backend, nothing is done and :class:`None` is returned.\\n\\n:param playlist: the playlist\\n:type playlist: :class:`mopidy.models.Playlist`\\n:rtype: :class:`mopidy.models.Playlist` or :class:`None`", "params": [{"name": "playlist"}]}, "core.tracklist.add": {"description": "Add tracks to the tracklist.\\n\\nIf ``uris`` is given instead of ``tracks``, the URIs are\\nlooked up in the library and the resulting tracks are added to the\\ntracklist.\\n\\nIf ``at_position`` is given, the tracks are inserted at the given\\nposition in the tracklist. If ``at_position`` is not given, the tracks\\nare appended to the end of the tracklist.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.\\n\\n:param tracks: tracks to add\\n:type tracks: list of :class:`mopidy.models.Track` or :class:`None`\\n:param at_position: position in tracklist to add tracks\\n:type at_position: int or :class:`None`\\n:param uris: list of URIs for tracks to add\\n:type uris: list of string or :class:`None`\\n:rtype: list of :class:`mopidy.models.TlTrack`\\n\\n.. versionadded:: 1.0\\n    The ``uris`` argument.\\n\\n.. deprecated:: 1.0\\n    The ``tracks`` argument. Use ``uris``.", "params": [{"name": "tracks", "default": null}, {"name": "at_position", "default": null}, {"name": "uris", "default": null}]}, "core.tracklist.clear": {"description": "Clear the tracklist.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.", "params": []}, "core.tracklist.eot_track": {"description": "The track that will be played after the given track.\\n\\nNot necessarily the same track as :meth:`next_track`.\\n\\n.. deprecated:: 3.0\\n    Use :meth:`get_eot_tlid` instead.\\n\\n:param tl_track: the reference track\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:rtype: :class:`mopidy.models.TlTrack` or :class:`None`", "params": [{"name": "tl_track"}]}, "core.tracklist.filter": {"description": "Filter the tracklist by the given criteria.\\n\\nEach rule in the criteria consists of a model field and a list of\\nvalues to compare it against. If the model field matches any of the\\nvalues, it may be returned.\\n\\nOnly tracks that match all the given criteria are returned.\\n\\nExamples::\\n\\n    # Returns tracks with TLIDs 1, 2, 3, or 4 (tracklist ID)\\n    filter({\'tlid\': [1, 2, 3, 4]})\\n\\n    # Returns track with URIs \'xyz\' or \'abc\'\\n    filter({\'uri\': [\'xyz\', \'abc\']})\\n\\n    # Returns track with a matching TLIDs (1, 3 or 6) and a\\n    # matching URI (\'xyz\' or \'abc\')\\n    filter({\'tlid\': [1, 3, 6], \'uri\': [\'xyz\', \'abc\']})\\n\\n:param criteria: one or more rules to match by\\n:type criteria: dict, of (string, list) pairs\\n:rtype: list of :class:`mopidy.models.TlTrack`", "params": [{"name": "criteria"}]}, "core.tracklist.get_consume": {"description": "Get consume mode.\\n\\n:class:`True`\\n    Tracks are removed from the tracklist when they have been played.\\n:class:`False`\\n    Tracks are not removed from the tracklist.", "params": []}, "core.tracklist.get_eot_tlid": {"description": "The TLID of the track that will be played after the current track.\\n\\nNot necessarily the same TLID as returned by :meth:`get_next_tlid`.\\n\\n:rtype: :class:`int` or :class:`None`\\n\\n.. versionadded:: 1.1", "params": []}, "core.tracklist.get_length": {"description": "Get length of the tracklist.", "params": []}, "core.tracklist.get_next_tlid": {"description": "The tlid of the track that will be played if calling\\n:meth:`mopidy.core.PlaybackController.next()`.\\n\\nFor normal playback this is the next track in the tracklist. If repeat\\nis enabled the next track can loop around the tracklist. When random is\\nenabled this should be a random track, all tracks should be played once\\nbefore the tracklist repeats.\\n\\n:rtype: :class:`int` or :class:`None`\\n\\n.. versionadded:: 1.1", "params": []}, "core.tracklist.get_previous_tlid": {"description": "Returns the TLID of the track that will be played if calling\\n:meth:`mopidy.core.PlaybackController.previous()`.\\n\\nFor normal playback this is the previous track in the tracklist. If\\nrandom and/or consume is enabled it should return the current track\\ninstead.\\n\\n:rtype: :class:`int` or :class:`None`\\n\\n.. versionadded:: 1.1", "params": []}, "core.tracklist.get_random": {"description": "Get random mode.\\n\\n:class:`True`\\n    Tracks are selected at random from the tracklist.\\n:class:`False`\\n    Tracks are played in the order of the tracklist.", "params": []}, "core.tracklist.get_repeat": {"description": "Get repeat mode.\\n\\n:class:`True`\\n    The tracklist is played repeatedly.\\n:class:`False`\\n    The tracklist is played once.", "params": []}, "core.tracklist.get_single": {"description": "Get single mode.\\n\\n:class:`True`\\n    Playback is stopped after current song, unless in ``repeat`` mode.\\n:class:`False`\\n    Playback continues after current song.", "params": []}, "core.tracklist.get_tl_tracks": {"description": "Get tracklist as list of :class:`mopidy.models.TlTrack`.", "params": []}, "core.tracklist.get_tracks": {"description": "Get tracklist as list of :class:`mopidy.models.Track`.", "params": []}, "core.tracklist.get_version": {"description": "Get the tracklist version.\\n\\nInteger which is increased every time the tracklist is changed. Is not\\nreset before Mopidy is restarted.", "params": []}, "core.tracklist.index": {"description": "The position of the given track in the tracklist.\\n\\nIf neither *tl_track* or *tlid* is given we return the index of\\nthe currently playing track.\\n\\n:param tl_track: the track to find the index of\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:param tlid: TLID of the track to find the index of\\n:type tlid: :class:`int` or :class:`None`\\n:rtype: :class:`int` or :class:`None`\\n\\n.. versionadded:: 1.1\\n    The *tlid* parameter", "params": [{"name": "tl_track", "default": null}, {"name": "tlid", "default": null}]}, "core.tracklist.move": {"description": "Move the tracks in the slice ``[start:end]`` to ``to_position``.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.\\n\\n:param start: position of first track to move\\n:type start: int\\n:param end: position after last track to move\\n:type end: int\\n:param to_position: new position for the tracks\\n:type to_position: int", "params": [{"name": "start"}, {"name": "end"}, {"name": "to_position"}]}, "core.tracklist.next_track": {"description": "The track that will be played if calling\\n:meth:`mopidy.core.PlaybackController.next()`.\\n\\nFor normal playback this is the next track in the tracklist. If repeat\\nis enabled the next track can loop around the tracklist. When random is\\nenabled this should be a random track, all tracks should be played once\\nbefore the tracklist repeats.\\n\\n.. deprecated:: 3.0\\n    Use :meth:`get_next_tlid` instead.\\n\\n:param tl_track: the reference track\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:rtype: :class:`mopidy.models.TlTrack` or :class:`None`", "params": [{"name": "tl_track"}]}, "core.tracklist.previous_track": {"description": "Returns the track that will be played if calling\\n:meth:`mopidy.core.PlaybackController.previous()`.\\n\\nFor normal playback this is the previous track in the tracklist. If\\nrandom and/or consume is enabled it should return the current track\\ninstead.\\n\\n.. deprecated:: 3.0\\n    Use :meth:`get_previous_tlid` instead.\\n\\n:param tl_track: the reference track\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:rtype: :class:`mopidy.models.TlTrack` or :class:`None`", "params": [{"name": "tl_track"}]}, "core.tracklist.remove": {"description": "Remove the matching tracks from the tracklist.\\n\\nUses :meth:`filter()` to lookup the tracks to remove.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.\\n\\n:param criteria: one or more rules to match by\\n:type criteria: dict, of (string, list) pairs\\n:rtype: list of :class:`mopidy.models.TlTrack` that were removed", "params": [{"name": "criteria"}]}, "core.tracklist.set_consume": {"description": "Set consume mode.\\n\\n:class:`True`\\n    Tracks are removed from the tracklist when they have been played.\\n:class:`False`\\n    Tracks are not removed from the tracklist.", "params": [{"name": "value"}]}, "core.tracklist.set_random": {"description": "Set random mode.\\n\\n:class:`True`\\n    Tracks are selected at random from the tracklist.\\n:class:`False`\\n    Tracks are played in the order of the tracklist.", "params": [{"name": "value"}]}, "core.tracklist.set_repeat": {"description": "Set repeat mode.\\n\\nTo repeat a single track, set both ``repeat`` and ``single``.\\n\\n:class:`True`\\n    The tracklist is played repeatedly.\\n:class:`False`\\n    The tracklist is played once.", "params": [{"name": "value"}]}, "core.tracklist.set_single": {"description": "Set single mode.\\n\\n:class:`True`\\n    Playback is stopped after current song, unless in ``repeat`` mode.\\n:class:`False`\\n    Playback continues after current song.", "params": [{"name": "value"}]}, "core.tracklist.shuffle": {"description": "Shuffles the entire tracklist. If ``start`` and ``end`` is given only\\nshuffles the slice ``[start:end]``.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.\\n\\n:param start: position of first track to shuffle\\n:type start: int or :class:`None`\\n:param end: position after last track to shuffle\\n:type end: int or :class:`None`", "params": [{"name": "start", "default": null}, {"name": "end", "default": null}]}, "core.tracklist.slice": {"description": "Returns a slice of the tracklist, limited by the given start and end\\npositions.\\n\\n:param start: position of first track to include in slice\\n:type start: int\\n:param end: position after last track to include in slice\\n:type end: int\\n:rtype: :class:`mopidy.models.TlTrack`", "params": [{"name": "start"}, {"name": "end"}]}}}'
okt 24 13:44:14 Desktop-Ubuntu mopidy[9389]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.describe","jsonrpc":"2.0","id":0}'
okt 24 13:44:14 Desktop-Ubuntu mopidy[9389]: DEBUG    [HttpServer] mopidy_iris.core {'method': 'connection_added', 'params': {'connection': {'connection_id': 'RU8GMBK10Y3T', 'ip': '127.0.0.1', 'created': '2022-10-24 13:44:14'}}}
okt 24 13:44:14 Desktop-Ubuntu mopidy[9389]: DEBUG    [HttpServer] mopidy_iris.core <mopidy_iris.handlers.WebsocketHandler object at 0x7f3b793c9960>
okt 24 13:44:14 Desktop-Ubuntu mopidy[9389]: DEBUG    [HttpServer] mopidy_iris.core Connection added
okt 24 13:44:14 Desktop-Ubuntu mopidy[9389]: INFO     [HttpServer] tornado.access 101 GET /iris/ws/ (127.0.0.1) 0.52ms
okt 24 13:44:14 Desktop-Ubuntu mopidy[9389]: DEBUG    [HttpServer] mopidy.http.handlers New WebSocket connection from 127.0.0.1
okt 24 13:44:14 Desktop-Ubuntu mopidy[9389]: INFO     [HttpServer] tornado.access 101 GET /mopidy/ws/ (127.0.0.1) 0.61ms
okt 24 13:44:14 Desktop-Ubuntu mopidy[9389]: INFO     [HttpServer] tornado.access 200 GET /iris/assets/favicon.png (127.0.0.1) 0.73ms
okt 24 13:44:14 Desktop-Ubuntu mopidy[9389]: INFO     [HttpServer] tornado.access 200 GET /iris/library/browse/Genres/null (127.0.0.1) 0.69ms
okt 24 13:44:13 Desktop-Ubuntu mopidy[9389]: INFO     [HttpServer] tornado.access 200 GET /iris/app.min.js?v=1666559547 (127.0.0.1) 11.31ms
okt 24 13:44:13 Desktop-Ubuntu mopidy[9389]: INFO     [HttpServer] tornado.access 200 GET /iris/app.min.css?v=1666559547 (127.0.0.1) 5.26ms
okt 24 13:44:13 Desktop-Ubuntu mopidy[9389]: INFO     [HttpServer] tornado.access 200 GET /iris/assets/app-icon.svg (127.0.0.1) 0.74ms
okt 24 13:44:13 Desktop-Ubuntu mopidy[9389]: DEBUG    [HttpServer] mopidy.http.handlers Closed WebSocket connection from 127.0.0.1
okt 24 13:44:13 Desktop-Ubuntu mopidy[9389]: DEBUG    [HttpServer] mopidy_iris.core {'method': 'connection_removed', 'params': {'connection': {'connection_id': '85XBUNFR2ZX7', 'ip': '127.0.0.1', 'created': '2022-10-24 13:43:59', 'username': 166656148284185, 'client_id': 166656148284193}}}
okt 24 13:44:13 Desktop-Ubuntu mopidy[9389]: INFO     [HttpServer] tornado.access 200 GET /iris/library/browse/Genres/bG9jYWw6ZGlyZWN0b3J5P3R5cGU9Z2VucmU= (127.0.0.1) 6.13ms
okt 24 13:44:00 Desktop-Ubuntu mopidy[9389]: DEBUG    [HttpServer] mopidy_iris.core {'id': 166661184061985, 'jsonrpc': '2.0', 'method': 'get_version', 'result': {'version': {'current': '3.64.1', 'latest': '3.64.1', 'is_root': False, 'upgrade_available': False}}, 'recipient': '85XBUNFR2ZX7'}
okt 24 13:44:00 Desktop-Ubuntu mopidy[9389]: DEBUG    [HttpServer] mopidy_iris.handlers Iris websocket message received: {"jsonrpc":"2.0","id":166661184061985,"method":"get_version"}
okt 24 13:43:59 Desktop-Ubuntu mopidy[9389]: DEBUG    [HttpServer] mopidy_iris.core {'id': 166661183964486, 'jsonrpc': '2.0', 'method': 'get_queue_metadata', 'result': {'queue_metadata': {}}, 'recipient': '85XBUNFR2ZX7'}
okt 24 13:43:59 Desktop-Ubuntu mopidy[9389]: DEBUG    [HttpServer] mopidy_iris.handlers Iris websocket message received: {"jsonrpc":"2.0","id":166661183964486,"method":"get_queue_metadata"}
okt 24 13:43:59 Desktop-Ubuntu mopidy[9389]: DEBUG    [HttpServer] mopidy_iris.core {'id': 166661183964376, 'jsonrpc': '2.0', 'method': 'get_pinned', 'result': {'pinned': []}, 'recipient': '85XBUNFR2ZX7'}
okt 24 13:43:59 Desktop-Ubuntu mopidy[9389]: DEBUG    [HttpServer] mopidy_iris.handlers Iris websocket message received: {"jsonrpc":"2.0","id":166661183964376,"method":"get_pinned"}
okt 24 13:43:59 Desktop-Ubuntu mopidy[9389]: DEBUG    [HttpServer] mopidy_iris.core {'id': 166661183964282, 'jsonrpc': '2.0', 'method': 'get_commands', 'result': {'commands': {}}, 'recipient': '85XBUNFR2ZX7'}
okt 24 13:43:59 Desktop-Ubuntu mopidy[9389]: DEBUG    [HttpServer] mopidy_iris.handlers Iris websocket message received: {"jsonrpc":"2.0","id":166661183964282,"method":"get_commands"}
okt 24 13:43:59 Desktop-Ubuntu mopidy[9389]: DEBUG    [HttpServer] mopidy_iris.core {'id': 166661183964115, 'jsonrpc': '2.0', 'method': 'get_radio', 'result': {'radio': {'enabled': 0, 'seed_artists': [], 'seed_genres': [], 'seed_tracks': [], 'results': []}}, 'recipient': '85XBUNFR2ZX7'}
okt 24 13:43:59 Desktop-Ubuntu mopidy[9389]: DEBUG    [HttpServer] mopidy_iris.handlers Iris websocket message received: {"jsonrpc":"2.0","id":166661183964115,"method":"get_radio"}
okt 24 13:43:59 Desktop-Ubuntu mopidy[9389]: DEBUG    [HttpServer] mopidy_iris.core {'id': 16666118396406, 'jsonrpc': '2.0', 'method': 'get_shared_config', 'result': {'shared_config': {}}, 'recipient': '85XBUNFR2ZX7'}
okt 24 13:43:59 Desktop-Ubuntu mopidy[9389]: DEBUG    [HttpServer] mopidy_iris.handlers Iris websocket message received: {"jsonrpc":"2.0","id":16666118396406,"method":"get_shared_config"}
okt 24 13:43:59 Desktop-Ubuntu mopidy[9389]: DEBUG    [HttpServer] mopidy_iris.core {'id': 166661183963916, 'jsonrpc': '2.0', 'method': 'get_config', 'result': {'config': {'is_root': False, 'spotify_username': False, 'country': 'NZ', 'locale': 'en_NZ', 'snapcast_enabled': True, 'snapcast_host': 'localhost', 'snapcast_port': '1780', 'snapcast_ssl': False, 'snapcast_stream': 'Default', 'spotify_authorization_url': 'https://jamesbarnsley.co.nz/iris/auth_spotify.php', 'lastfm_authorization_url': 'https://jamesbarnsley.co.nz/iris/auth_lastfm.php', 'genius_authorization_url': 'https://jamesbarnsley.co.nz/iris/auth_genius.php', 'shared_config': {}}}, 'recipient': '85XBUNFR2ZX7'}
okt 24 13:43:59 Desktop-Ubuntu mopidy[9389]: DEBUG    [HttpServer] mopidy_iris.handlers Iris websocket message received: {"jsonrpc":"2.0","id":166661183963916,"method":"get_config"}
okt 24 13:43:59 Desktop-Ubuntu mopidy[9389]: DEBUG    [HttpServer] mopidy_iris.core {'id': 166661183963795, 'jsonrpc': '2.0', 'method': 'update_connection', 'result': {'connection': {'connection_id': '85XBUNFR2ZX7', 'ip': '127.0.0.1', 'created': '2022-10-24 13:43:59', 'username': 166656148284185, 'client_id': 166656148284193}}, 'recipient': '85XBUNFR2ZX7'}
okt 24 13:43:59 Desktop-Ubuntu mopidy[9389]: DEBUG    [HttpServer] mopidy_iris.core {'method': 'connection_changed', 'params': {'connection': {'connection_id': '85XBUNFR2ZX7', 'ip': '127.0.0.1', 'created': '2022-10-24 13:43:59', 'username': 166656148284185, 'client_id': 166656148284193}}}
okt 24 13:43:59 Desktop-Ubuntu mopidy[9389]: DEBUG    [HttpServer] mopidy_iris.handlers Iris websocket message received: {"jsonrpc":"2.0","id":166661183963795,"method":"update_connection","params":{"username":166656148284185,"client_id":166656148284193}}
okt 24 13:43:59 Desktop-Ubuntu mopidy[9389]: DEBUG    [HttpServer] mopidy_iris.core {'method': 'connection_added', 'params': {'connection': {'connection_id': '85XBUNFR2ZX7', 'ip': '127.0.0.1', 'created': '2022-10-24 13:43:59'}}}
okt 24 13:43:59 Desktop-Ubuntu mopidy[9389]: DEBUG    [HttpServer] mopidy_iris.core <mopidy_iris.handlers.WebsocketHandler object at 0x7f3b793483a0>
okt 24 13:43:59 Desktop-Ubuntu mopidy[9389]: DEBUG    [HttpServer] mopidy_iris.core Connection added
okt 24 13:43:59 Desktop-Ubuntu mopidy[9389]: INFO     [HttpServer] tornado.access 101 GET /iris/ws/ (127.0.0.1) 0.52ms
okt 24 13:43:55 Desktop-Ubuntu mopidy[9389]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 38, "result": null}'
okt 24 13:43:55 Desktop-Ubuntu mopidy[9389]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.playback.get_stream_title","params":{},"jsonrpc":"2.0","id":38}'
okt 24 13:43:55 Desktop-Ubuntu mopidy[9389]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 37, "result": ["file", "http", "https", "local", "m3u", "rtsp"]}'
okt 24 13:43:55 Desktop-Ubuntu mopidy[9389]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.get_uri_schemes","params":{},"jsonrpc":"2.0","id":37}'
okt 24 13:43:55 Desktop-Ubuntu mopidy[9389]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 36, "result": 0}'
okt 24 13:43:55 Desktop-Ubuntu mopidy[9389]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.playback.get_time_position","params":{},"jsonrpc":"2.0","id":36}'
okt 24 13:43:55 Desktop-Ubuntu mopidy[9389]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 35, "result": []}'
okt 24 13:43:55 Desktop-Ubuntu mopidy[9389]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_tl_tracks","params":{},"jsonrpc":"2.0","id":35}'
okt 24 13:43:55 Desktop-Ubuntu mopidy[9389]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 34, "result": false}'
okt 24 13:43:55 Desktop-Ubuntu mopidy[9389]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_repeat","params":{},"jsonrpc":"2.0","id":34}'
okt 24 13:43:55 Desktop-Ubuntu mopidy[9389]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 33, "result": false}'
okt 24 13:43:55 Desktop-Ubuntu mopidy[9389]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_random","params":{},"jsonrpc":"2.0","id":33}'
okt 24 13:43:55 Desktop-Ubuntu mopidy[9389]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 32, "result": false}'
okt 24 13:43:55 Desktop-Ubuntu mopidy[9389]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_consume","params":{},"jsonrpc":"2.0","id":32}'
okt 24 13:43:55 Desktop-Ubuntu mopidy[9389]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 31, "result": false}'
okt 24 13:43:55 Desktop-Ubuntu mopidy[9389]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.mixer.get_mute","params":{},"jsonrpc":"2.0","id":31}'
okt 24 13:43:55 Desktop-Ubuntu mopidy[9389]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 30, "result": 100}'
okt 24 13:43:55 Desktop-Ubuntu mopidy[9389]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.mixer.get_volume","params":{},"jsonrpc":"2.0","id":30}'
okt 24 13:43:55 Desktop-Ubuntu mopidy[9389]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 29, "result": "stopped"}'
okt 24 13:43:55 Desktop-Ubuntu mopidy[9389]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.playback.get_state","params":{},"jsonrpc":"2.0","id":29}'
okt 24 13:43:55 Desktop-Ubuntu mopidy[9389]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 28, "result": null}'
okt 24 13:43:55 Desktop-Ubuntu mopidy[9389]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.playback.get_current_tl_track","params":{},"jsonrpc":"2.0","id":28}'
okt 24 13:43:55 Desktop-Ubuntu mopidy[9389]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 27, "result": {"core.get_uri_schemes": {"description": "Get list of URI schemes we can handle", "params": []}, "core.get_version": {"description": "Get version of the Mopidy core API", "params": []}, "core.history.get_history": {"description": "Get the track history.\\n\\nThe timestamps are milliseconds since epoch.\\n\\n:returns: the track history\\n:rtype: list of (timestamp, :class:`mopidy.models.Ref`) tuples", "params": []}, "core.history.get_length": {"description": "Get the number of tracks in the history.\\n\\n:returns: the history length\\n:rtype: int", "params": []}, "core.library.browse": {"description": "Browse directories and tracks at the given ``uri``.\\n\\n``uri`` is a string which represents some directory belonging to a\\nbackend. To get the intial root directories for backends pass\\n:class:`None` as the URI.\\n\\nReturns a list of :class:`mopidy.models.Ref` objects for the\\ndirectories and tracks at the given ``uri``.\\n\\nThe :class:`~mopidy.models.Ref` objects representing tracks keep the\\ntrack\'s original URI. A matching pair of objects can look like this::\\n\\n    Track(uri=\'dummy:/foo.mp3\', name=\'foo\', artists=..., album=...)\\n    Ref.track(uri=\'dummy:/foo.mp3\', name=\'foo\')\\n\\nThe :class:`~mopidy.models.Ref` objects representing directories have\\nbackend specific URIs. These are opaque values, so no one but the\\nbackend that created them should try and derive any meaning from them.\\nThe only valid exception to this is checking the scheme, as it is used\\nto route browse requests to the correct backend.\\n\\nFor example, the dummy library\'s ``/bar`` directory could be returned\\nlike this::\\n\\n    Ref.directory(uri=\'dummy:directory:/bar\', name=\'bar\')\\n\\n:param string uri: URI to browse\\n:rtype: list of :class:`mopidy.models.Ref`\\n\\n.. versionadded:: 0.18", "params": [{"name": "uri"}]}, "core.library.get_distinct": {"description": "List distinct values for a given field from the library.\\n\\nThis has mainly been added to support the list commands the MPD\\nprotocol supports in a more sane fashion. Other frontends are not\\nrecommended to use this method.\\n\\n:param string field: Any one of ``uri``, ``track_name``, ``album``,\\n    ``artist``, ``albumartist``, ``composer``, ``performer``,\\n    ``track_no``, ``genre``, ``date``, ``comment``, ``disc_no``,\\n    ``musicbrainz_albumid``, ``musicbrainz_artistid``, or\\n    ``musicbrainz_trackid``.\\n:param dict query: Query to use for limiting results, see\\n    :meth:`search` for details about the query format.\\n:rtype: set of values corresponding to the requested field type.\\n\\n.. versionadded:: 1.0", "params": [{"name": "field"}, {"name": "query", "default": null}]}, "core.library.get_images": {"description": "Lookup the images for the given URIs\\n\\nBackends can use this to return image URIs for any URI they know about\\nbe it tracks, albums, playlists. The lookup result is a dictionary\\nmapping the provided URIs to lists of images.\\n\\nUnknown URIs or URIs the corresponding backend couldn\'t find anything\\nfor will simply return an empty list for that URI.\\n\\n:param uris: list of URIs to find images for\\n:type uris: list of string\\n:rtype: {uri: tuple of :class:`mopidy.models.Image`}\\n\\n.. versionadded:: 1.0", "params": [{"name": "uris"}]}, "core.library.lookup": {"description": "Lookup the given URIs.\\n\\nIf the URI expands to multiple tracks, the returned list will contain\\nthem all.\\n\\n:param uris: track URIs\\n:type uris: list of string\\n:rtype: {uri: list of :class:`mopidy.models.Track`}", "params": [{"name": "uris"}]}, "core.library.refresh": {"description": "Refresh library. Limit to URI and below if an URI is given.\\n\\n:param uri: directory or track URI\\n:type uri: string", "params": [{"name": "uri", "default": null}]}, "core.library.search": {"description": "Search the library for tracks where ``field`` contains ``values``.\\n\\n``field`` can be one of ``uri``, ``track_name``, ``album``, ``artist``,\\n``albumartist``, ``composer``, ``performer``, ``track_no``, ``genre``,\\n``date``, ``comment``, ``disc_no``, ``musicbrainz_albumid``,\\n``musicbrainz_artistid``, ``musicbrainz_trackid`` or ``any``.\\n\\nIf ``uris`` is given, the search is limited to results from within the\\nURI roots. For example passing ``uris=[\'file:\']`` will limit the search\\nto the local backend.\\n\\nExamples::\\n\\n    # Returns results matching \'a\' in any backend\\n    search({\'any\': [\'a\']})\\n\\n    # Returns results matching artist \'xyz\' in any backend\\n    search({\'artist\': [\'xyz\']})\\n\\n    # Returns results matching \'a\' and \'b\' and artist \'xyz\' in any\\n    # backend\\n    search({\'any\': [\'a\', \'b\'], \'artist\': [\'xyz\']})\\n\\n    # Returns results matching \'a\' if within the given URI roots\\n    # \\"file:///media/music\\" and \\"spotify:\\"\\n    search({\'any\': [\'a\']}, uris=[\'file:///media/music\', \'spotify:\'])\\n\\n    # Returns results matching artist \'xyz\' and \'abc\' in any backend\\n    search({\'artist\': [\'xyz\', \'abc\']})\\n\\n:param query: one or more queries to search for\\n:type query: dict\\n:param uris: zero or more URI roots to limit the search to\\n:type uris: list of string or :class:`None`\\n:param exact: if the search should use exact matching\\n:type exact: :class:`bool`\\n:rtype: list of :class:`mopidy.models.SearchResult`\\n\\n.. versionadded:: 1.0\\n    The ``exact`` keyword argument.", "params": [{"name": "query"}, {"name": "uris", "default": null}, {"name": "exact", "default": false}]}, "core.mixer.get_mute": {"description": "Get mute state.\\n\\n:class:`True` if muted, :class:`False` unmuted, :class:`None` if\\nunknown.", "params": []}, "core.mixer.get_volume": {"description": "Get the volume.\\n\\nInteger in range [0..100] or :class:`None` if unknown.\\n\\nThe volume scale is linear.", "params": []}, "core.mixer.set_mute": {"description": "Set mute state.\\n\\n:class:`True` to mute, :class:`False` to unmute.\\n\\nReturns :class:`True` if call is successful, otherwise :class:`False`.", "params": [{"name": "mute"}]}, "core.mixer.set_volume": {"description": "Set the volume.\\n\\nThe volume is defined as an integer in range [0..100].\\n\\nThe volume scale is linear.\\n\\nReturns :class:`True` if call is successful, otherwise :class:`False`.", "params": [{"name": "volume"}]}, "core.playback.get_current_tl_track": {"description": "Get the currently playing or selected track.\\n\\nReturns a :class:`mopidy.models.TlTrack` or :class:`None`.", "params": []}, "core.playback.get_current_tlid": {"description": "Get the currently playing or selected TLID.\\n\\nExtracted from :meth:`get_current_tl_track` for convenience.\\n\\nReturns a :class:`int` or :class:`None`.\\n\\n.. versionadded:: 1.1", "params": []}, "core.playback.get_current_track": {"description": "Get the currently playing or selected track.\\n\\nExtracted from :meth:`get_current_tl_track` for convenience.\\n\\nReturns a :class:`mopidy.models.Track` or :class:`None`.", "params": []}, "core.playback.get_state": {"description": "Get The playback state.", "params": []}, "core.playback.get_stream_title": {"description": "Get the current stream title or :class:`None`.", "params": []}, "core.playback.get_time_position": {"description": "Get time position in milliseconds.", "params": []}, "core.playback.next": {"description": "Change to the next track.\\n\\nThe current playback state will be kept. If it was playing, playing\\nwill continue. If it was paused, it will still be paused, etc.", "params": []}, "core.playback.pause": {"description": "Pause playback.", "params": []}, "core.playback.play": {"description": "Play the given track, or if the given tl_track and tlid is\\n:class:`None`, play the currently active track.\\n\\nNote that the track **must** already be in the tracklist.\\n\\n.. deprecated:: 3.0\\n    The ``tl_track`` argument. Use ``tlid`` instead.\\n\\n:param tl_track: track to play\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:param tlid: TLID of the track to play\\n:type tlid: :class:`int` or :class:`None`", "params": [{"name": "tl_track", "default": null}, {"name": "tlid", "default": null}]}, "core.playback.previous": {"description": "Change to the previous track.\\n\\nThe current playback state will be kept. If it was playing, playing\\nwill continue. If it was paused, it will still be paused, etc.", "params": []}, "core.playback.resume": {"description": "If paused, resume playing the current track.", "params": []}, "core.playback.seek": {"description": "Seeks to time position given in milliseconds.\\n\\n:param time_position: time position in milliseconds\\n:type time_position: int\\n:rtype: :class:`True` if successful, else :class:`False`", "params": [{"name": "time_position"}]}, "core.playback.set_state": {"description": "Set the playback state.\\n\\nMust be :attr:`PLAYING`, :attr:`PAUSED`, or :attr:`STOPPED`.\\n\\nPossible states and transitions:\\n\\n.. digraph:: state_transitions\\n\\n    \\"STOPPED\\" -> \\"PLAYING\\" [ label=\\"play\\" ]\\n    \\"STOPPED\\" -> \\"PAUSED\\" [ label=\\"pause\\" ]\\n    \\"PLAYING\\" -> \\"STOPPED\\" [ label=\\"stop\\" ]\\n    \\"PLAYING\\" -> \\"PAUSED\\" [ label=\\"pause\\" ]\\n    \\"PLAYING\\" -> \\"PLAYING\\" [ label=\\"play\\" ]\\n    \\"PAUSED\\" -> \\"PLAYING\\" [ label=\\"resume\\" ]\\n    \\"PAUSED\\" -> \\"STOPPED\\" [ label=\\"stop\\" ]", "params": [{"name": "new_state"}]}, "core.playback.stop": {"description": "Stop playing.", "params": []}, "core.playlists.as_list": {"description": "Get a list of the currently available playlists.\\n\\nReturns a list of :class:`~mopidy.models.Ref` objects referring to the\\nplaylists. In other words, no information about the playlists\' content\\nis given.\\n\\n:rtype: list of :class:`mopidy.models.Ref`\\n\\n.. versionadded:: 1.0", "params": []}, "core.playlists.create": {"description": "Create a new playlist.\\n\\nIf ``uri_scheme`` matches an URI scheme handled by a current backend,\\nthat backend is asked to create the playlist. If ``uri_scheme`` is\\n:class:`None` or doesn\'t match a current backend, the first backend is\\nasked to create the playlist.\\n\\nAll new playlists must be created by calling this method, and **not**\\nby creating new instances of :class:`mopidy.models.Playlist`.\\n\\n:param name: name of the new playlist\\n:type name: string\\n:param uri_scheme: use the backend matching the URI scheme\\n:type uri_scheme: string\\n:rtype: :class:`mopidy.models.Playlist` or :class:`None`", "params": [{"name": "name"}, {"name": "uri_scheme", "default": null}]}, "core.playlists.delete": {"description": "Delete playlist identified by the URI.\\n\\nIf the URI doesn\'t match the URI schemes handled by the current\\nbackends, nothing happens.\\n\\nReturns :class:`True` if deleted, :class:`False` otherwise.\\n\\n:param uri: URI of the playlist to delete\\n:type uri: string\\n:rtype: :class:`bool`\\n\\n.. versionchanged:: 2.2\\n    Return type defined.", "params": [{"name": "uri"}]}, "core.playlists.get_items": {"description": "Get the items in a playlist specified by ``uri``.\\n\\nReturns a list of :class:`~mopidy.models.Ref` objects referring to the\\nplaylist\'s items.\\n\\nIf a playlist with the given ``uri`` doesn\'t exist, it returns\\n:class:`None`.\\n\\n:rtype: list of :class:`mopidy.models.Ref`, or :class:`None`\\n\\n.. versionadded:: 1.0", "params": [{"name": "uri"}]}, "core.playlists.get_uri_schemes": {"description": "Get the list of URI schemes that support playlists.\\n\\n:rtype: list of string\\n\\n.. versionadded:: 2.0", "params": []}, "core.playlists.lookup": {"description": "Lookup playlist with given URI in both the set of playlists and in any\\nother playlist sources. Returns :class:`None` if not found.\\n\\n:param uri: playlist URI\\n:type uri: string\\n:rtype: :class:`mopidy.models.Playlist` or :class:`None`", "params": [{"name": "uri"}]}, "core.playlists.refresh": {"description": "Refresh the playlists in :attr:`playlists`.\\n\\nIf ``uri_scheme`` is :class:`None`, all backends are asked to refresh.\\nIf ``uri_scheme`` is an URI scheme handled by a backend, only that\\nbackend is asked to refresh. If ``uri_scheme`` doesn\'t match any\\ncurrent backend, nothing happens.\\n\\n:param uri_scheme: limit to the backend matching the URI scheme\\n:type uri_scheme: string", "params": [{"name": "uri_scheme", "default": null}]}, "core.playlists.save": {"description": "Save the playlist.\\n\\nFor a playlist to be saveable, it must have the ``uri`` attribute set.\\nYou must not set the ``uri`` atribute yourself, but use playlist\\nobjects returned by :meth:`create` or retrieved from :attr:`playlists`,\\nwhich will always give you saveable playlists.\\n\\nThe method returns the saved playlist. The return playlist may differ\\nfrom the saved playlist. E.g. if the playlist name was changed, the\\nreturned playlist may have a different URI. The caller of this method\\nmust throw away the playlist sent to this method, and use the\\nreturned playlist instead.\\n\\nIf the playlist\'s URI isn\'t set or doesn\'t match the URI scheme of a\\ncurrent backend, nothing is done and :class:`None` is returned.\\n\\n:param playlist: the playlist\\n:type playlist: :class:`mopidy.models.Playlist`\\n:rtype: :class:`mopidy.models.Playlist` or :class:`None`", "params": [{"name": "playlist"}]}, "core.tracklist.add": {"description": "Add tracks to the tracklist.\\n\\nIf ``uris`` is given instead of ``tracks``, the URIs are\\nlooked up in the library and the resulting tracks are added to the\\ntracklist.\\n\\nIf ``at_position`` is given, the tracks are inserted at the given\\nposition in the tracklist. If ``at_position`` is not given, the tracks\\nare appended to the end of the tracklist.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.\\n\\n:param tracks: tracks to add\\n:type tracks: list of :class:`mopidy.models.Track` or :class:`None`\\n:param at_position: position in tracklist to add tracks\\n:type at_position: int or :class:`None`\\n:param uris: list of URIs for tracks to add\\n:type uris: list of string or :class:`None`\\n:rtype: list of :class:`mopidy.models.TlTrack`\\n\\n.. versionadded:: 1.0\\n    The ``uris`` argument.\\n\\n.. deprecated:: 1.0\\n    The ``tracks`` argument. Use ``uris``.", "params": [{"name": "tracks", "default": null}, {"name": "at_position", "default": null}, {"name": "uris", "default": null}]}, "core.tracklist.clear": {"description": "Clear the tracklist.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.", "params": []}, "core.tracklist.eot_track": {"description": "The track that will be played after the given track.\\n\\nNot necessarily the same track as :meth:`next_track`.\\n\\n.. deprecated:: 3.0\\n    Use :meth:`get_eot_tlid` instead.\\n\\n:param tl_track: the reference track\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:rtype: :class:`mopidy.models.TlTrack` or :class:`None`", "params": [{"name": "tl_track"}]}, "core.tracklist.filter": {"description": "Filter the tracklist by the given criteria.\\n\\nEach rule in the criteria consists of a model field and a list of\\nvalues to compare it against. If the model field matches any of the\\nvalues, it may be returned.\\n\\nOnly tracks that match all the given criteria are returned.\\n\\nExamples::\\n\\n    # Returns tracks with TLIDs 1, 2, 3, or 4 (tracklist ID)\\n    filter({\'tlid\': [1, 2, 3, 4]})\\n\\n    # Returns track with URIs \'xyz\' or \'abc\'\\n    filter({\'uri\': [\'xyz\', \'abc\']})\\n\\n    # Returns track with a matching TLIDs (1, 3 or 6) and a\\n    # matching URI (\'xyz\' or \'abc\')\\n    filter({\'tlid\': [1, 3, 6], \'uri\': [\'xyz\', \'abc\']})\\n\\n:param criteria: one or more rules to match by\\n:type criteria: dict, of (string, list) pairs\\n:rtype: list of :class:`mopidy.models.TlTrack`", "params": [{"name": "criteria"}]}, "core.tracklist.get_consume": {"description": "Get consume mode.\\n\\n:class:`True`\\n    Tracks are removed from the tracklist when they have been played.\\n:class:`False`\\n    Tracks are not removed from the tracklist.", "params": []}, "core.tracklist.get_eot_tlid": {"description": "The TLID of the track that will be played after the current track.\\n\\nNot necessarily the same TLID as returned by :meth:`get_next_tlid`.\\n\\n:rtype: :class:`int` or :class:`None`\\n\\n.. versionadded:: 1.1", "params": []}, "core.tracklist.get_length": {"description": "Get length of the tracklist.", "params": []}, "core.tracklist.get_next_tlid": {"description": "The tlid of the track that will be played if calling\\n:meth:`mopidy.core.PlaybackController.next()`.\\n\\nFor normal playback this is the next track in the tracklist. If repeat\\nis enabled the next track can loop around the tracklist. When random is\\nenabled this should be a random track, all tracks should be played once\\nbefore the tracklist repeats.\\n\\n:rtype: :class:`int` or :class:`None`\\n\\n.. versionadded:: 1.1", "params": []}, "core.tracklist.get_previous_tlid": {"description": "Returns the TLID of the track that will be played if calling\\n:meth:`mopidy.core.PlaybackController.previous()`.\\n\\nFor normal playback this is the previous track in the tracklist. If\\nrandom and/or consume is enabled it should return the current track\\ninstead.\\n\\n:rtype: :class:`int` or :class:`None`\\n\\n.. versionadded:: 1.1", "params": []}, "core.tracklist.get_random": {"description": "Get random mode.\\n\\n:class:`True`\\n    Tracks are selected at random from the tracklist.\\n:class:`False`\\n    Tracks are played in the order of the tracklist.", "params": []}, "core.tracklist.get_repeat": {"description": "Get repeat mode.\\n\\n:class:`True`\\n    The tracklist is played repeatedly.\\n:class:`False`\\n    The tracklist is played once.", "params": []}, "core.tracklist.get_single": {"description": "Get single mode.\\n\\n:class:`True`\\n    Playback is stopped after current song, unless in ``repeat`` mode.\\n:class:`False`\\n    Playback continues after current song.", "params": []}, "core.tracklist.get_tl_tracks": {"description": "Get tracklist as list of :class:`mopidy.models.TlTrack`.", "params": []}, "core.tracklist.get_tracks": {"description": "Get tracklist as list of :class:`mopidy.models.Track`.", "params": []}, "core.tracklist.get_version": {"description": "Get the tracklist version.\\n\\nInteger which is increased every time the tracklist is changed. Is not\\nreset before Mopidy is restarted.", "params": []}, "core.tracklist.index": {"description": "The position of the given track in the tracklist.\\n\\nIf neither *tl_track* or *tlid* is given we return the index of\\nthe currently playing track.\\n\\n:param tl_track: the track to find the index of\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:param tlid: TLID of the track to find the index of\\n:type tlid: :class:`int` or :class:`None`\\n:rtype: :class:`int` or :class:`None`\\n\\n.. versionadded:: 1.1\\n    The *tlid* parameter", "params": [{"name": "tl_track", "default": null}, {"name": "tlid", "default": null}]}, "core.tracklist.move": {"description": "Move the tracks in the slice ``[start:end]`` to ``to_position``.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.\\n\\n:param start: position of first track to move\\n:type start: int\\n:param end: position after last track to move\\n:type end: int\\n:param to_position: new position for the tracks\\n:type to_position: int", "params": [{"name": "start"}, {"name": "end"}, {"name": "to_position"}]}, "core.tracklist.next_track": {"description": "The track that will be played if calling\\n:meth:`mopidy.core.PlaybackController.next()`.\\n\\nFor normal playback this is the next track in the tracklist. If repeat\\nis enabled the next track can loop around the tracklist. When random is\\nenabled this should be a random track, all tracks should be played once\\nbefore the tracklist repeats.\\n\\n.. deprecated:: 3.0\\n    Use :meth:`get_next_tlid` instead.\\n\\n:param tl_track: the reference track\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:rtype: :class:`mopidy.models.TlTrack` or :class:`None`", "params": [{"name": "tl_track"}]}, "core.tracklist.previous_track": {"description": "Returns the track that will be played if calling\\n:meth:`mopidy.core.PlaybackController.previous()`.\\n\\nFor normal playback this is the previous track in the tracklist. If\\nrandom and/or consume is enabled it should return the current track\\ninstead.\\n\\n.. deprecated:: 3.0\\n    Use :meth:`get_previous_tlid` instead.\\n\\n:param tl_track: the reference track\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:rtype: :class:`mopidy.models.TlTrack` or :class:`None`", "params": [{"name": "tl_track"}]}, "core.tracklist.remove": {"description": "Remove the matching tracks from the tracklist.\\n\\nUses :meth:`filter()` to lookup the tracks to remove.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.\\n\\n:param criteria: one or more rules to match by\\n:type criteria: dict, of (string, list) pairs\\n:rtype: list of :class:`mopidy.models.TlTrack` that were removed", "params": [{"name": "criteria"}]}, "core.tracklist.set_consume": {"description": "Set consume mode.\\n\\n:class:`True`\\n    Tracks are removed from the tracklist when they have been played.\\n:class:`False`\\n    Tracks are not removed from the tracklist.", "params": [{"name": "value"}]}, "core.tracklist.set_random": {"description": "Set random mode.\\n\\n:class:`True`\\n    Tracks are selected at random from the tracklist.\\n:class:`False`\\n    Tracks are played in the order of the tracklist.", "params": [{"name": "value"}]}, "core.tracklist.set_repeat": {"description": "Set repeat mode.\\n\\nTo repeat a single track, set both ``repeat`` and ``single``.\\n\\n:class:`True`\\n    The tracklist is played repeatedly.\\n:class:`False`\\n    The tracklist is played once.", "params": [{"name": "value"}]}, "core.tracklist.set_single": {"description": "Set single mode.\\n\\n:class:`True`\\n    Playback is stopped after current song, unless in ``repeat`` mode.\\n:class:`False`\\n    Playback continues after current song.", "params": [{"name": "value"}]}, "core.tracklist.shuffle": {"description": "Shuffles the entire tracklist. If ``start`` and ``end`` is given only\\nshuffles the slice ``[start:end]``.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.\\n\\n:param start: position of first track to shuffle\\n:type start: int or :class:`None`\\n:param end: position after last track to shuffle\\n:type end: int or :class:`None`", "params": [{"name": "start", "default": null}, {"name": "end", "default": null}]}, "core.tracklist.slice": {"description": "Returns a slice of the tracklist, limited by the given start and end\\npositions.\\n\\n:param start: position of first track to include in slice\\n:type start: int\\n:param end: position after last track to include in slice\\n:type end: int\\n:rtype: :class:`mopidy.models.TlTrack`", "params": [{"name": "start"}, {"name": "end"}]}}}'
okt 24 13:43:55 Desktop-Ubuntu mopidy[9389]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.describe","jsonrpc":"2.0","id":27}'
okt 24 13:43:55 Desktop-Ubuntu mopidy[9389]: DEBUG    [HttpServer] mopidy.http.handlers New WebSocket connection from 127.0.0.1
okt 24 13:43:55 Desktop-Ubuntu mopidy[9389]: INFO     [HttpServer] tornado.access 101 GET /mopidy/ws/ (127.0.0.1) 19.23ms
okt 24 13:43:54 Desktop-Ubuntu mopidy[9389]: DEBUG    [HttpFrontend-11 (_actor_loop)] mopidy.zeroconf Zeroconf service 'Mopidy HTTP server on Desktop-Ubuntu' (_mopidy-http._tcp at []:6680): Published
okt 24 13:43:54 Desktop-Ubuntu mopidy[9389]: DEBUG    [HttpFrontend-11 (_actor_loop)] mopidy.zeroconf Zeroconf service 'Mopidy HTTP server on Desktop-Ubuntu' (_http._tcp at []:6680): Published
okt 24 13:43:54 Desktop-Ubuntu mopidy[9389]:     '/': <class 'tornado.web.RedirectHandler'>
okt 24 13:43:54 Desktop-Ubuntu mopidy[9389]:     '/mopidy/': <class 'mopidy.http.handlers.ClientListHandler'>
okt 24 13:43:54 Desktop-Ubuntu mopidy[9389]:     '/mopidy/(.+)': <class 'mopidy.http.handlers.StaticFileHandler'>
okt 24 13:43:54 Desktop-Ubuntu mopidy[9389]:     '/mopidy/rpc': <class 'mopidy.http.handlers.JsonRpcHandler'>
okt 24 13:43:54 Desktop-Ubuntu mopidy[9389]:     '/mopidy/ws/?': <class 'mopidy.http.handlers.WebSocketHandler'>
okt 24 13:43:54 Desktop-Ubuntu mopidy[9389]:     '/mopidy': <class 'mopidy.http.handlers.AddSlashHandler'>
okt 24 13:43:54 Desktop-Ubuntu mopidy[9389]:     '/iris/(.*)': <class 'mopidy_iris.handlers.ReactRouterHandler'>
okt 24 13:43:54 Desktop-Ubuntu mopidy[9389]:     '/iris/((.*)(?:css|js|json|map)$)': <class 'tornado.web.StaticFileHandler'>
okt 24 13:43:54 Desktop-Ubuntu mopidy[9389]:     '/iris/assets/(.*)': <class 'tornado.web.StaticFileHandler'>
okt 24 13:43:54 Desktop-Ubuntu mopidy[9389]:     '/iris/ws/?': <class 'mopidy_iris.handlers.WebsocketHandler'>
okt 24 13:43:54 Desktop-Ubuntu mopidy[9389]:     '/iris/http/([^/]*)': <class 'mopidy_iris.handlers.HttpHandler'>
okt 24 13:43:54 Desktop-Ubuntu mopidy[9389]:     '/iris': <class 'mopidy.http.handlers.AddSlashHandler'>
okt 24 13:43:54 Desktop-Ubuntu mopidy[9389]:     '/local/(.+)': <class 'mopidy_local.web.ImageHandler'>
okt 24 13:43:54 Desktop-Ubuntu mopidy[9389]:     '/local/(index.html)?': <class 'mopidy_local.web.IndexHandler'>
okt 24 13:43:54 Desktop-Ubuntu mopidy[9389]:     '/local': <class 'mopidy.http.handlers.AddSlashHandler'>
okt 24 13:43:54 Desktop-Ubuntu mopidy[9389]: DEBUG    [HttpServer] mopidy.http.actor HTTP routes from extensions:
okt 24 13:43:54 Desktop-Ubuntu mopidy[9389]: DEBUG    [HttpServer] mopidy.http.actor Default webclient is mopidy
okt 24 13:43:54 Desktop-Ubuntu mopidy[9389]: DEBUG    [HttpServer] mopidy.http.actor Loaded HTTP extension: mopidy
okt 24 13:43:54 Desktop-Ubuntu mopidy[9389]: DEBUG    [HttpServer] mopidy.http.actor Loaded HTTP extension: iris
okt 24 13:43:54 Desktop-Ubuntu mopidy[9389]: DEBUG    [HttpServer] mopidy.http.actor Loaded HTTP extension: local
okt 24 13:43:54 Desktop-Ubuntu mopidy[9389]: DEBUG    [HttpServer] asyncio Using selector: EpollSelector
okt 24 13:43:54 Desktop-Ubuntu mopidy[9389]: INFO     [MainThread] mopidy.commands Starting GLib mainloop
okt 24 13:43:54 Desktop-Ubuntu mopidy[9389]: TRACE    [MainThread] mopidy.internal.timer HttpFrontend took 0ms
okt 24 13:43:54 Desktop-Ubuntu mopidy[9389]: INFO     [HttpFrontend-11 (_actor_loop)] mopidy.http.actor HTTP server running at [::ffff:127.0.0.1]:6680
okt 24 13:43:54 Desktop-Ubuntu mopidy[9389]: DEBUG    [MainThread] pykka Starting HttpFrontend (urn:uuid:7bd6c8af-bd71-42ea-88fd-93f63d4ab09b)
okt 24 13:43:54 Desktop-Ubuntu mopidy[9389]: DEBUG    [MainThread] pykka Registered HttpFrontend (urn:uuid:7bd6c8af-bd71-42ea-88fd-93f63d4ab09b)
okt 24 13:43:54 Desktop-Ubuntu mopidy[9389]: DEBUG    [MainThread] mopidy.http.actor Starting HTTP server
okt 24 13:43:54 Desktop-Ubuntu mopidy[9389]: TRACE    [MainThread] mopidy.internal.timer IrisFrontend took 0ms
okt 24 13:43:54 Desktop-Ubuntu mopidy[9389]: INFO     [IrisFrontend-9 (_actor_loop)] mopidy_iris.core Starting Iris 3.64.1
okt 24 13:43:54 Desktop-Ubuntu mopidy[9389]: DEBUG    [MainThread] pykka Starting IrisFrontend (urn:uuid:b5e740e4-d830-4f97-836d-6f396c34a656)
okt 24 13:43:54 Desktop-Ubuntu mopidy[9389]: DEBUG    [MainThread] pykka Registered IrisFrontend (urn:uuid:b5e740e4-d830-4f97-836d-6f396c34a656)
okt 24 13:43:54 Desktop-Ubuntu mopidy[9389]: TRACE    [MainThread] mopidy.internal.timer YTMusicScrobbleFE took 0ms
okt 24 13:43:54 Desktop-Ubuntu mopidy[9389]: DEBUG    [MainThread] pykka Starting YTMusicScrobbleFE (urn:uuid:eca1ffc5-d146-4646-954b-18398f132ea5)
okt 24 13:43:54 Desktop-Ubuntu mopidy[9389]: DEBUG    [MainThread] pykka Registered YTMusicScrobbleFE (urn:uuid:eca1ffc5-d146-4646-954b-18398f132ea5)
okt 24 13:43:54 Desktop-Ubuntu mopidy[9389]: INFO     [MainThread] mopidy.commands Starting Mopidy frontends: YTMusicScrobbleFE, IrisFrontend, HttpFrontend
okt 24 13:43:54 Desktop-Ubuntu mopidy[9389]: DEBUG    [MainThread] pykka Starting Core (urn:uuid:cdfbd935-f4ba-4ed2-9f6d-4106ff966c3b)
okt 24 13:43:54 Desktop-Ubuntu mopidy[9389]: DEBUG    [MainThread] pykka Registered Core (urn:uuid:cdfbd935-f4ba-4ed2-9f6d-4106ff966c3b)
okt 24 13:43:54 Desktop-Ubuntu mopidy[9389]: INFO     [MainThread] mopidy.commands Starting Mopidy core
okt 24 13:43:54 Desktop-Ubuntu mopidy[9389]: TRACE    [MainThread] mopidy.internal.timer StreamBackend took 6ms
okt 24 13:43:54 Desktop-Ubuntu mopidy[9389]: DEBUG    [MainThread] pykka Starting StreamBackend (urn:uuid:0272e786-23cc-4350-a3ce-93d5f2145e68)
okt 24 13:43:54 Desktop-Ubuntu mopidy[9389]: DEBUG    [MainThread] pykka Registered StreamBackend (urn:uuid:0272e786-23cc-4350-a3ce-93d5f2145e68)
okt 24 13:43:54 Desktop-Ubuntu mopidy[9389]: TRACE    [MainThread] mopidy.internal.timer M3UBackend took 1ms
okt 24 13:43:54 Desktop-Ubuntu mopidy[9389]: INFO     [Audio-2 (_actor_loop)] mopidy.audio.actor Audio output set to "pulsesink server=127.0.0.1"
okt 24 13:43:54 Desktop-Ubuntu mopidy[9389]: DEBUG    [MainThread] pykka Starting M3UBackend (urn:uuid:65987a95-b62a-4473-9630-f687c65de443)
okt 24 13:43:54 Desktop-Ubuntu mopidy[9389]: DEBUG    [MainThread] pykka Registered M3UBackend (urn:uuid:65987a95-b62a-4473-9630-f687c65de443)
okt 24 13:43:54 Desktop-Ubuntu mopidy[9389]: TRACE    [MainThread] mopidy.internal.timer FileBackend took 3ms
okt 24 13:43:54 Desktop-Ubuntu mopidy[9389]: DEBUG    [MainThread] pykka Starting FileBackend (urn:uuid:a01f6a0d-7a4d-4ead-adc4-bb60412631a1)
okt 24 13:43:54 Desktop-Ubuntu mopidy[9389]: DEBUG    [MainThread] pykka Registered FileBackend (urn:uuid:a01f6a0d-7a4d-4ead-adc4-bb60412631a1)
okt 24 13:43:54 Desktop-Ubuntu mopidy[9389]: DEBUG    [MainThread] mopidy.file.library Failed expanding path ($XDG_MUSIC_DIR) from file/media_dirs config value.
okt 24 13:43:54 Desktop-Ubuntu mopidy[9389]: AttributeError: 'YTMusic' object has no attribute 'headers'
okt 24 13:43:54 Desktop-Ubuntu mopidy[9389]:     if 'x-goog-visitor-id' not in self.headers:
okt 24 13:43:54 Desktop-Ubuntu mopidy[9389]:   File "/usr/local/lib/python3.10/dist-packages/ytmusicapi/ytmusic.py", line 98, in __init__
okt 24 13:43:54 Desktop-Ubuntu mopidy[9389]:     self.api = YTMusic(self._ytmusicapi_auth_json)
okt 24 13:43:54 Desktop-Ubuntu mopidy[9389]:   File "/usr/local/lib/python3.10/dist-packages/mopidy_ytmusic/backend.py", line 65, in __init__
okt 24 13:43:54 Desktop-Ubuntu mopidy[9389]:     obj = cls(*args, **kwargs)
okt 24 13:43:54 Desktop-Ubuntu mopidy[9389]:   File "/usr/lib/python3/dist-packages/pykka/_actor.py", line 91, in start
okt 24 13:43:54 Desktop-Ubuntu mopidy[9389]:     backend = backend_class.start(
okt 24 13:43:54 Desktop-Ubuntu mopidy[9389]:   File "/usr/lib/python3/dist-packages/mopidy/commands.py", line 412, in start_backends
okt 24 13:43:54 Desktop-Ubuntu mopidy[9389]:     yield
okt 24 13:43:54 Desktop-Ubuntu mopidy[9389]:   File "/usr/lib/python3/dist-packages/mopidy/commands.py", line 248, in _actor_error_handling
okt 24 13:43:54 Desktop-Ubuntu mopidy[9389]: Traceback (most recent call last):
okt 24 13:43:54 Desktop-Ubuntu mopidy[9389]: ERROR    [MainThread] mopidy.commands Got un-handled exception from YTMusicBackend
okt 24 13:43:54 Desktop-Ubuntu mopidy[9389]: TRACE    [MainThread] mopidy.internal.timer LocalBackend took 3ms
okt 24 13:43:54 Desktop-Ubuntu mopidy[9389]: DEBUG    [MainThread] pykka Starting LocalBackend (urn:uuid:5340202c-789f-415b-a953-a9d5330f73b6)
okt 24 13:43:54 Desktop-Ubuntu mopidy[9389]: DEBUG    [MainThread] pykka Registered LocalBackend (urn:uuid:5340202c-789f-415b-a953-a9d5330f73b6)
okt 24 13:43:54 Desktop-Ubuntu mopidy[9389]: INFO     [MainThread] mopidy.commands Starting Mopidy backends: LocalBackend, YTMusicBackend, FileBackend, M3UBackend, StreamBackend
okt 24 13:43:54 Desktop-Ubuntu mopidy[9389]: DEBUG    [MainThread] pykka Starting Audio (urn:uuid:b4b30284-c3cf-43a7-b63a-7d2f2178fcdf)
okt 24 13:43:54 Desktop-Ubuntu mopidy[9389]: DEBUG    [MainThread] pykka Registered Audio (urn:uuid:b4b30284-c3cf-43a7-b63a-7d2f2178fcdf)
okt 24 13:43:54 Desktop-Ubuntu mopidy[9389]: INFO     [MainThread] mopidy.commands Starting Mopidy audio
okt 24 13:43:54 Desktop-Ubuntu mopidy[9389]: DEBUG    [MainThread] mopidy.commands Mixer volume left unchanged
okt 24 13:43:54 Desktop-Ubuntu mopidy[9389]: DEBUG    [MainThread] pykka Starting SoftwareMixer (urn:uuid:ca7581c7-3591-489f-887e-a18f712dc63a)
okt 24 13:43:54 Desktop-Ubuntu mopidy[9389]: DEBUG    [MainThread] pykka Registered SoftwareMixer (urn:uuid:ca7581c7-3591-489f-887e-a18f712dc63a)
okt 24 13:43:54 Desktop-Ubuntu mopidy[9389]: INFO     [MainThread] mopidy.commands Starting Mopidy mixer: SoftwareMixer
okt 24 13:43:54 Desktop-Ubuntu mopidy[9389]: DEBUG    [MainThread] mopidy.commands Available Mopidy mixers: SoftwareMixer
okt 24 13:43:54 Desktop-Ubuntu mopidy[9389]: INFO     [MainThread] mopidy.__main__ Disabled extensions: youtube, soundcloud
okt 24 13:43:54 Desktop-Ubuntu mopidy[9389]: INFO     [MainThread] mopidy.__main__ Enabled extensions: file, http, iris, m3u, stream, local, ytmusic, softwaremixer
okt 24 13:43:54 Desktop-Ubuntu mopidy[9389]: DEBUG    [MainThread] mopidy.ext Validating extension: stream
okt 24 13:43:54 Desktop-Ubuntu mopidy[9389]: DEBUG    [MainThread] mopidy.ext Validating extension: softwaremixer
okt 24 13:43:54 Desktop-Ubuntu mopidy[9389]: DEBUG    [MainThread] mopidy.ext Validating extension: m3u
okt 24 13:43:54 Desktop-Ubuntu mopidy[9389]: DEBUG    [MainThread] mopidy.ext Validating extension: http
okt 24 13:43:54 Desktop-Ubuntu mopidy[9389]: DEBUG    [MainThread] mopidy.ext Validating extension: file
okt 24 13:43:54 Desktop-Ubuntu mopidy[9389]: DEBUG    [MainThread] mopidy.ext Validating extension: iris
okt 24 13:43:54 Desktop-Ubuntu mopidy[9389]: DEBUG    [MainThread] mopidy.ext Validating extension: ytmusic
okt 24 13:43:54 Desktop-Ubuntu mopidy[9389]: DEBUG    [MainThread] mopidy.ext Validating extension: soundcloud
okt 24 13:43:54 Desktop-Ubuntu mopidy[9389]: DEBUG    [MainThread] mopidy.ext Validating extension: local
okt 24 13:43:54 Desktop-Ubuntu mopidy[9389]: DEBUG    [MainThread] mopidy.ext Validating extension: youtube
okt 24 13:43:54 Desktop-Ubuntu mopidy[9389]: WARNING  [MainThread] mopidy.config Ignoring config section 'jukebox' because no matching extension was found
okt 24 13:43:54 Desktop-Ubuntu mopidy[9389]: INFO     [MainThread] mopidy.config Loading config from command line options
okt 24 13:43:54 Desktop-Ubuntu mopidy[9389]: INFO     [MainThread] mopidy.config Loading config from file:///etc/mopidy/mopidy.conf
okt 24 13:43:54 Desktop-Ubuntu mopidy[9389]: INFO     [MainThread] mopidy.config Loading config from file:///usr/share/mopidy/conf.d/mopidy.conf
okt 24 13:43:54 Desktop-Ubuntu mopidy[9389]: INFO     [MainThread] mopidy.config Loading config from builtin defaults
okt 24 13:43:54 Desktop-Ubuntu mopidy[9389]: DEBUG    [MainThread] mopidy.config.keyring Fetching passwords from your keyring failed. Any passwords stored in the keyring will not be available. (org.freedesktop.DBus.Error.NotSupported: Unable to autolaunch a dbus-daemon without a $DISPLAY for X11)
okt 24 13:43:54 Desktop-Ubuntu mopidy[9389]: DEBUG    [MainThread] mopidy.ext Discovered extensions: youtube, local, soundcloud, ytmusic, iris, file, http, m3u, softwaremixer, stream
okt 24 13:43:54 Desktop-Ubuntu mopidy[9389]: DEBUG    [MainThread] mopidy.ext Loaded extension: Mopidy-Stream 3.3.0
okt 24 13:43:54 Desktop-Ubuntu mopidy[9389]: DEBUG    [MainThread] mopidy.ext Loading entry point: stream = mopidy.stream:Extension
okt 24 13:43:54 Desktop-Ubuntu mopidy[9389]: DEBUG    [MainThread] mopidy.ext Loaded extension: Mopidy-SoftwareMixer 3.3.0
okt 24 13:43:54 Desktop-Ubuntu mopidy[9389]: DEBUG    [MainThread] mopidy.ext Loading entry point: softwaremixer = mopidy.softwaremixer:Extension
okt 24 13:43:54 Desktop-Ubuntu mopidy[9389]: DEBUG    [MainThread] mopidy.ext Loaded extension: Mopidy-M3U 3.3.0
okt 24 13:43:54 Desktop-Ubuntu mopidy[9389]: DEBUG    [MainThread] mopidy.ext Loading entry point: m3u = mopidy.m3u:Extension
okt 24 13:43:54 Desktop-Ubuntu mopidy[9389]: DEBUG    [MainThread] mopidy.ext Loaded extension: Mopidy-HTTP 3.3.0
okt 24 13:43:54 Desktop-Ubuntu mopidy[9389]: DEBUG    [MainThread] mopidy.ext Loading entry point: http = mopidy.http:Extension
okt 24 13:43:54 Desktop-Ubuntu mopidy[9389]: DEBUG    [MainThread] mopidy.ext Loaded extension: Mopidy-File 3.3.0
okt 24 13:43:54 Desktop-Ubuntu mopidy[9389]: DEBUG    [MainThread] mopidy.ext Loading entry point: file = mopidy.file:Extension
okt 24 13:43:54 Desktop-Ubuntu mopidy[9389]: DEBUG    [MainThread] mopidy.ext Loaded extension: Mopidy-Iris 3.64.1
okt 24 13:43:54 Desktop-Ubuntu mopidy[9389]: DEBUG    [MainThread] mopidy.ext Loading entry point: iris = mopidy_iris:Extension
okt 24 13:43:54 Desktop-Ubuntu mopidy[9389]: DEBUG    [MainThread] mopidy.ext Loaded extension: Mopidy-YTMusic 0.3.7
okt 24 13:43:54 Desktop-Ubuntu mopidy[9389]: DEBUG    [MainThread] mopidy.ext Loading entry point: ytmusic = mopidy_ytmusic:Extension
okt 24 13:43:54 Desktop-Ubuntu mopidy[9389]: DEBUG    [MainThread] mopidy.ext Loaded extension: Mopidy-SoundCloud 3.0.1
okt 24 13:43:54 Desktop-Ubuntu mopidy[9389]: DEBUG    [MainThread] mopidy.ext Loading entry point: soundcloud = mopidy_soundcloud:Extension
okt 24 13:43:54 Desktop-Ubuntu mopidy[9389]: DEBUG    [MainThread] mopidy.ext Loaded extension: Mopidy-Local 3.2.1
okt 24 13:43:54 Desktop-Ubuntu mopidy[9389]: DEBUG    [MainThread] mopidy.ext Loading entry point: local = mopidy_local:Extension
okt 24 13:43:54 Desktop-Ubuntu mopidy[9389]: DEBUG    [MainThread] mopidy.ext Loaded extension: Mopidy-YouTube 3.6.1
okt 24 13:43:54 Desktop-Ubuntu mopidy[9389]: DEBUG    [MainThread] mopidy.ext Loading entry point: youtube = mopidy_youtube:Extension
okt 24 13:43:54 Desktop-Ubuntu mopidy[9389]: INFO     [MainThread] mopidy.__main__ Starting Mopidy 3.3.0
okt 24 13:43:54 Desktop-Ubuntu systemd[1]: Started Mopidy music server.
okt 24 13:43:54 Desktop-Ubuntu systemd[1]: Starting Mopidy music server...
okt 24 13:43:54 Desktop-Ubuntu systemd[1]: Stopped Mopidy music server.
okt 24 13:43:54 Desktop-Ubuntu systemd[1]: mopidy.service: Deactivated successfully.
okt 24 13:43:54 Desktop-Ubuntu mopidy[9199]: Failed loading provided credentials. Make sure to provide a string or a file path. Reason: Expecting value: line 1 column 1 (char 0)
okt 24 13:43:54 Desktop-Ubuntu mopidy[9199]: DEBUG    [MainThread] mopidy.internal.process All actors stopped.
okt 24 13:43:54 Desktop-Ubuntu mopidy[9199]: DEBUG    [SoftwareMixer-1 (_actor_loop)] pykka Stopped SoftwareMixer (urn:uuid:b1fd26d1-484f-4733-9133-0ebb16dea9cd)
okt 24 13:43:54 Desktop-Ubuntu mopidy[9199]: DEBUG    [SoftwareMixer-1 (_actor_loop)] pykka Unregistered SoftwareMixer (urn:uuid:b1fd26d1-484f-4733-9133-0ebb16dea9cd)
okt 24 13:43:54 Desktop-Ubuntu mopidy[9199]: DEBUG    [MainThread] mopidy.internal.process Stopping 1 instance(s) of SoftwareMixer
okt 24 13:43:54 Desktop-Ubuntu mopidy[9199]: INFO     [MainThread] mopidy.commands Stopping Mopidy mixer
okt 24 13:43:54 Desktop-Ubuntu mopidy[9199]: DEBUG    [Audio-2 (_actor_loop)] pykka Stopped Audio (urn:uuid:47f05b82-0a89-4bdd-8548-d26b220ea3bc)
okt 24 13:43:54 Desktop-Ubuntu mopidy[9199]: DEBUG    [Audio-2 (_actor_loop)] pykka Unregistered Audio (urn:uuid:47f05b82-0a89-4bdd-8548-d26b220ea3bc)
okt 24 13:43:54 Desktop-Ubuntu mopidy[9199]: DEBUG    [MainThread] mopidy.internal.process Stopping 1 instance(s) of Audio
okt 24 13:43:54 Desktop-Ubuntu mopidy[9199]: INFO     [MainThread] mopidy.commands Stopping Mopidy audio
okt 24 13:43:54 Desktop-Ubuntu mopidy[9199]: DEBUG    [StreamBackend-6 (_actor_loop)] pykka Stopped StreamBackend (urn:uuid:ad3ef142-3b49-4b44-8dd7-4e504fa902f9)
okt 24 13:43:54 Desktop-Ubuntu mopidy[9199]: DEBUG    [StreamBackend-6 (_actor_loop)] pykka Unregistered StreamBackend (urn:uuid:ad3ef142-3b49-4b44-8dd7-4e504fa902f9)
okt 24 13:43:54 Desktop-Ubuntu mopidy[9199]: DEBUG    [MainThread] mopidy.internal.process Stopping 1 instance(s) of StreamBackend
okt 24 13:43:54 Desktop-Ubuntu mopidy[9199]: DEBUG    [M3UBackend-5 (_actor_loop)] pykka Stopped M3UBackend (urn:uuid:45ef3004-7ea9-4964-b49e-f32e35011ed0)
okt 24 13:43:54 Desktop-Ubuntu mopidy[9199]: DEBUG    [M3UBackend-5 (_actor_loop)] pykka Unregistered M3UBackend (urn:uuid:45ef3004-7ea9-4964-b49e-f32e35011ed0)
okt 24 13:43:54 Desktop-Ubuntu mopidy[9199]: DEBUG    [MainThread] mopidy.internal.process Stopping 1 instance(s) of M3UBackend
okt 24 13:43:54 Desktop-Ubuntu mopidy[9199]: DEBUG    [FileBackend-4 (_actor_loop)] pykka Stopped FileBackend (urn:uuid:57e2972b-c471-4f62-9e32-9179d6b3b935)
okt 24 13:43:54 Desktop-Ubuntu mopidy[9199]: DEBUG    [FileBackend-4 (_actor_loop)] pykka Unregistered FileBackend (urn:uuid:57e2972b-c471-4f62-9e32-9179d6b3b935)
okt 24 13:43:54 Desktop-Ubuntu mopidy[9199]: DEBUG    [MainThread] mopidy.internal.process Stopping 1 instance(s) of FileBackend
okt 24 13:43:54 Desktop-Ubuntu mopidy[9199]: DEBUG    [MainThread] mopidy.internal.process Stopping 0 instance(s) of YTMusicBackend
okt 24 13:43:54 Desktop-Ubuntu mopidy[9199]: DEBUG    [LocalBackend-3 (_actor_loop)] pykka Stopped LocalBackend (urn:uuid:522ef81f-05d3-4a00-9b58-c7dfb667b2fc)
okt 24 13:43:54 Desktop-Ubuntu mopidy[9199]: DEBUG    [LocalBackend-3 (_actor_loop)] pykka Unregistered LocalBackend (urn:uuid:522ef81f-05d3-4a00-9b58-c7dfb667b2fc)
okt 24 13:43:54 Desktop-Ubuntu mopidy[9199]: DEBUG    [MainThread] mopidy.internal.process Stopping 1 instance(s) of LocalBackend
okt 24 13:43:54 Desktop-Ubuntu mopidy[9199]: INFO     [MainThread] mopidy.commands Stopping Mopidy backends
okt 24 13:43:54 Desktop-Ubuntu mopidy[9199]: DEBUG    [Core-7 (_actor_loop)] pykka Stopped Core (urn:uuid:af443314-68f8-404b-9fde-a9e7e2ab1b76)
okt 24 13:43:54 Desktop-Ubuntu mopidy[9199]: DEBUG    [Core-7 (_actor_loop)] pykka Unregistered Core (urn:uuid:af443314-68f8-404b-9fde-a9e7e2ab1b76)
okt 24 13:43:54 Desktop-Ubuntu mopidy[9199]: DEBUG    [MainThread] mopidy.internal.process Stopping 1 instance(s) of Core
okt 24 13:43:54 Desktop-Ubuntu mopidy[9199]: DEBUG    [HttpServer] mopidy.http.actor Stopped HTTP server
okt 24 13:43:54 Desktop-Ubuntu mopidy[9199]: INFO     [MainThread] mopidy.commands Stopping Mopidy core
okt 24 13:43:54 Desktop-Ubuntu mopidy[9199]: DEBUG    [HttpFrontend-11 (_actor_loop)] mopidy.http.actor Stopping HTTP server
okt 24 13:43:54 Desktop-Ubuntu mopidy[9199]: DEBUG    [HttpFrontend-11 (_actor_loop)] mopidy.zeroconf Zeroconf service 'Mopidy HTTP server on Desktop-Ubuntu' (_mopidy-http._tcp at []:6680): Unpublished
okt 24 13:43:54 Desktop-Ubuntu mopidy[9199]: DEBUG    [HttpFrontend-11 (_actor_loop)] mopidy.zeroconf Zeroconf service 'Mopidy HTTP server on Desktop-Ubuntu' (_http._tcp at []:6680): Unpublished
okt 24 13:43:54 Desktop-Ubuntu mopidy[9199]: DEBUG    [HttpFrontend-11 (_actor_loop)] pykka Stopped HttpFrontend (urn:uuid:be67131a-2883-415a-8db9-6d26453f325f)
okt 24 13:43:54 Desktop-Ubuntu mopidy[9199]: DEBUG    [HttpFrontend-11 (_actor_loop)] pykka Unregistered HttpFrontend (urn:uuid:be67131a-2883-415a-8db9-6d26453f325f)
okt 24 13:43:54 Desktop-Ubuntu mopidy[9199]: DEBUG    [MainThread] mopidy.internal.process Stopping 1 instance(s) of HttpFrontend
okt 24 13:43:54 Desktop-Ubuntu mopidy[9199]: INFO     [IrisFrontend-9 (_actor_loop)] mopidy_iris.core Stopping Iris
okt 24 13:43:54 Desktop-Ubuntu mopidy[9199]: DEBUG    [IrisFrontend-9 (_actor_loop)] pykka Stopped IrisFrontend (urn:uuid:2e8c6a13-163a-4df4-bf79-cbc82ea41e0e)
okt 24 13:43:54 Desktop-Ubuntu mopidy[9199]: DEBUG    [IrisFrontend-9 (_actor_loop)] pykka Unregistered IrisFrontend (urn:uuid:2e8c6a13-163a-4df4-bf79-cbc82ea41e0e)
okt 24 13:43:54 Desktop-Ubuntu mopidy[9199]: DEBUG    [MainThread] mopidy.internal.process Stopping 1 instance(s) of IrisFrontend
okt 24 13:43:54 Desktop-Ubuntu mopidy[9199]: DEBUG    [YTMusicScrobbleFE-8 (_actor_loop)] pykka Stopped YTMusicScrobbleFE (urn:uuid:bf001144-be38-42ac-8fa2-aa215ac7c42d)
okt 24 13:43:54 Desktop-Ubuntu mopidy[9199]: DEBUG    [YTMusicScrobbleFE-8 (_actor_loop)] pykka Unregistered YTMusicScrobbleFE (urn:uuid:bf001144-be38-42ac-8fa2-aa215ac7c42d)
okt 24 13:43:54 Desktop-Ubuntu mopidy[9199]: DEBUG    [MainThread] mopidy.internal.process Stopping 1 instance(s) of YTMusicScrobbleFE
okt 24 13:43:54 Desktop-Ubuntu mopidy[9199]: INFO     [MainThread] mopidy.commands Stopping Mopidy frontends
okt 24 13:43:54 Desktop-Ubuntu mopidy[9199]: INFO     [MainThread] mopidy.commands GLib mainloop got SIGTERM. Exiting...
okt 24 13:43:54 Desktop-Ubuntu systemd[1]: Stopping Mopidy music server...
okt 24 13:43:12 Desktop-Ubuntu mopidy[9199]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 26, "result": []}'
okt 24 13:43:12 Desktop-Ubuntu mopidy[9199]: ERROR    [LocalBackend-3 (_actor_loop)] mopidy_local.library Error browsing local:directory?type=genre: no such table: search
okt 24 13:43:12 Desktop-Ubuntu mopidy[9199]:     
okt 24 13:43:12 Desktop-Ubuntu mopidy[9199]:      WHERE field IS NOT NULL
okt 24 13:43:12 Desktop-Ubuntu mopidy[9199]:       FROM search
okt 24 13:43:12 Desktop-Ubuntu mopidy[9199]:     SELECT DISTINCT genre AS field
okt 24 13:43:12 Desktop-Ubuntu mopidy[9199]: DEBUG    [LocalBackend-3 (_actor_loop)] mopidy_local.schema SQLite list query []:
okt 24 13:43:12 Desktop-Ubuntu mopidy[9199]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.library.browse","params":{"uri":"local:directory?type=genre"},"jsonrpc":"2.0","id":26}'
okt 24 13:43:12 Desktop-Ubuntu mopidy[9199]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 25, "result": {"local:directory?type=genre": []}}'
okt 24 13:43:12 Desktop-Ubuntu mopidy[9199]: ERROR    [LocalBackend-3 (_actor_loop)] mopidy_local.library Lookup error for local:directory?type=genre: Invalid lookup URI
okt 24 13:43:12 Desktop-Ubuntu mopidy[9199]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.library.lookup","params":{"uris":["local:directory?type=genre"]},"jsonrpc":"2.0","id":25}'
okt 24 13:43:10 Desktop-Ubuntu mopidy[9199]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 24, "result": [{"__model__": "Ref", "uri": "local:directory?type=album", "name": "Albums", "type": "directory"}, {"__model__": "Ref", "uri": "local:directory?type=artist", "name": "Artists", "type": "directory"}, {"__model__": "Ref", "uri": "local:directory?type=artist&role=composer", "name": "Composers", "type": "directory"}, {"__model__": "Ref", "uri": "local:directory?type=genre", "name": "Genres", "type": "directory"}, {"__model__": "Ref", "uri": "local:directory?type=artist&role=performer", "name": "Performers", "type": "directory"}, {"__model__": "Ref", "uri": "local:directory?type=date&format=%25Y", "name": "Release Years", "type": "directory"}, {"__model__": "Ref", "uri": "local:directory?type=track", "name": "Tracks", "type": "directory"}, {"__model__": "Ref", "uri": "local:directory?max-age=604800", "name": "Last Week\'s Updates", "type": "directory"}, {"__model__": "Ref", "uri": "local:directory?max-age=2592000", "name": "Last Month\'s Updates", "type": "directory"}]}'
okt 24 13:43:10 Desktop-Ubuntu mopidy[9199]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.library.browse","params":{"uri":"local:directory"},"jsonrpc":"2.0","id":24}'
okt 24 13:43:10 Desktop-Ubuntu mopidy[9199]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 23, "result": {"local:directory": []}}'
okt 24 13:43:10 Desktop-Ubuntu mopidy[9199]: ERROR    [LocalBackend-3 (_actor_loop)] mopidy_local.library Lookup error for local:directory: Invalid lookup URI
okt 24 13:43:10 Desktop-Ubuntu mopidy[9199]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.library.lookup","params":{"uris":["local:directory"]},"jsonrpc":"2.0","id":23}'
okt 24 13:43:09 Desktop-Ubuntu mopidy[9199]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 22, "result": [{"__model__": "Ref", "uri": "local:directory", "name": "Local media", "type": "directory"}]}'
okt 24 13:43:09 Desktop-Ubuntu mopidy[9199]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.library.browse","params":{"uri":null},"jsonrpc":"2.0","id":22}'
okt 24 13:43:08 Desktop-Ubuntu mopidy[9199]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 21, "result": []}'
okt 24 13:43:08 Desktop-Ubuntu mopidy[9199]: ERROR    [LocalBackend-3 (_actor_loop)] mopidy_local.library Error browsing local:directory?type=album: no such table: album
okt 24 13:43:08 Desktop-Ubuntu mopidy[9199]:     
okt 24 13:43:08 Desktop-Ubuntu mopidy[9199]:      ORDER BY type, name COLLATE NOCASE
okt 24 13:43:08 Desktop-Ubuntu mopidy[9199]:      WHERE 1
okt 24 13:43:08 Desktop-Ubuntu mopidy[9199]:       FROM album
okt 24 13:43:08 Desktop-Ubuntu mopidy[9199]:     SELECT 'album' AS type, uri AS uri, name AS name
okt 24 13:43:08 Desktop-Ubuntu mopidy[9199]: DEBUG    [LocalBackend-3 (_actor_loop)] mopidy_local.schema SQLite browse query []:
okt 24 13:43:08 Desktop-Ubuntu mopidy[9199]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.library.browse","params":{"uri":"local:directory?type=album"},"jsonrpc":"2.0","id":21}'
okt 24 13:43:08 Desktop-Ubuntu mopidy[9199]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 20, "result": {"local:directory?type=album": []}}'
okt 24 13:43:08 Desktop-Ubuntu mopidy[9199]: ERROR    [LocalBackend-3 (_actor_loop)] mopidy_local.library Lookup error for local:directory?type=album: Invalid lookup URI
okt 24 13:43:08 Desktop-Ubuntu mopidy[9199]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.library.lookup","params":{"uris":["local:directory?type=album"]},"jsonrpc":"2.0","id":20}'
okt 24 13:43:07 Desktop-Ubuntu mopidy[9199]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 19, "result": [{"__model__": "Ref", "uri": "local:directory?type=album", "name": "Albums", "type": "directory"}, {"__model__": "Ref", "uri": "local:directory?type=artist", "name": "Artists", "type": "directory"}, {"__model__": "Ref", "uri": "local:directory?type=artist&role=composer", "name": "Composers", "type": "directory"}, {"__model__": "Ref", "uri": "local:directory?type=genre", "name": "Genres", "type": "directory"}, {"__model__": "Ref", "uri": "local:directory?type=artist&role=performer", "name": "Performers", "type": "directory"}, {"__model__": "Ref", "uri": "local:directory?type=date&format=%25Y", "name": "Release Years", "type": "directory"}, {"__model__": "Ref", "uri": "local:directory?type=track", "name": "Tracks", "type": "directory"}, {"__model__": "Ref", "uri": "local:directory?max-age=604800", "name": "Last Week\'s Updates", "type": "directory"}, {"__model__": "Ref", "uri": "local:directory?max-age=2592000", "name": "Last Month\'s Updates", "type": "directory"}]}'
okt 24 13:43:07 Desktop-Ubuntu mopidy[9199]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.library.browse","params":{"uri":"local:directory"},"jsonrpc":"2.0","id":19}'
okt 24 13:43:07 Desktop-Ubuntu mopidy[9199]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 18, "result": {"local:directory": []}}'
okt 24 13:43:07 Desktop-Ubuntu mopidy[9199]: ERROR    [LocalBackend-3 (_actor_loop)] mopidy_local.library Lookup error for local:directory: Invalid lookup URI
okt 24 13:43:07 Desktop-Ubuntu mopidy[9199]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.library.lookup","params":{"uris":["local:directory"]},"jsonrpc":"2.0","id":18}'
okt 24 13:43:06 Desktop-Ubuntu mopidy[9199]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 17, "result": [{"__model__": "Ref", "uri": "local:directory", "name": "Local media", "type": "directory"}]}'
okt 24 13:43:06 Desktop-Ubuntu mopidy[9199]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.library.browse","params":{"uri":null},"jsonrpc":"2.0","id":17}'
okt 24 13:43:03 Desktop-Ubuntu mopidy[9199]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 16, "result": []}'
okt 24 13:43:03 Desktop-Ubuntu mopidy[9199]: ERROR    [LocalBackend-3 (_actor_loop)] mopidy_local.library Error browsing local:directory?type=track: no such table: track
okt 24 13:43:03 Desktop-Ubuntu mopidy[9199]:     
okt 24 13:43:03 Desktop-Ubuntu mopidy[9199]:      ORDER BY type, name COLLATE NOCASE
okt 24 13:43:03 Desktop-Ubuntu mopidy[9199]:      WHERE 1
okt 24 13:43:03 Desktop-Ubuntu mopidy[9199]:       FROM track
okt 24 13:43:03 Desktop-Ubuntu mopidy[9199]:     SELECT 'track' AS type, uri AS uri, name AS name
okt 24 13:43:03 Desktop-Ubuntu mopidy[9199]: DEBUG    [LocalBackend-3 (_actor_loop)] mopidy_local.schema SQLite browse query []:
okt 24 13:43:03 Desktop-Ubuntu mopidy[9199]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.library.browse","params":{"uri":"local:directory?type=track"},"jsonrpc":"2.0","id":16}'
okt 24 13:43:03 Desktop-Ubuntu mopidy[9199]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 15, "result": {"local:directory?type=track": []}}'
okt 24 13:43:03 Desktop-Ubuntu mopidy[9199]: ERROR    [LocalBackend-3 (_actor_loop)] mopidy_local.library Lookup error for local:directory?type=track: Invalid lookup URI
okt 24 13:43:03 Desktop-Ubuntu mopidy[9199]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.library.lookup","params":{"uris":["local:directory?type=track"]},"jsonrpc":"2.0","id":15}'
okt 24 13:42:54 Desktop-Ubuntu mopidy[9199]: INFO     [HttpServer] tornado.access 304 GET /iris/library/browse/Local%20media/null (127.0.0.1) 1.02ms
okt 24 13:42:53 Desktop-Ubuntu mopidy[9199]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 14, "result": [{"__model__": "Ref", "uri": "local:directory?type=album", "name": "Albums", "type": "directory"}, {"__model__": "Ref", "uri": "local:directory?type=artist", "name": "Artists", "type": "directory"}, {"__model__": "Ref", "uri": "local:directory?type=artist&role=composer", "name": "Composers", "type": "directory"}, {"__model__": "Ref", "uri": "local:directory?type=genre", "name": "Genres", "type": "directory"}, {"__model__": "Ref", "uri": "local:directory?type=artist&role=performer", "name": "Performers", "type": "directory"}, {"__model__": "Ref", "uri": "local:directory?type=date&format=%25Y", "name": "Release Years", "type": "directory"}, {"__model__": "Ref", "uri": "local:directory?type=track", "name": "Tracks", "type": "directory"}, {"__model__": "Ref", "uri": "local:directory?max-age=604800", "name": "Last Week\'s Updates", "type": "directory"}, {"__model__": "Ref", "uri": "local:directory?max-age=2592000", "name": "Last Month\'s Updates", "type": "directory"}]}'
okt 24 13:42:53 Desktop-Ubuntu mopidy[9199]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.library.browse","params":{"uri":"local:directory"},"jsonrpc":"2.0","id":14}'
okt 24 13:42:53 Desktop-Ubuntu mopidy[9199]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 13, "result": {"local:directory": []}}'
okt 24 13:42:53 Desktop-Ubuntu mopidy[9199]: ERROR    [LocalBackend-3 (_actor_loop)] mopidy_local.library Lookup error for local:directory: Invalid lookup URI
okt 24 13:42:53 Desktop-Ubuntu mopidy[9199]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.library.lookup","params":{"uris":["local:directory"]},"jsonrpc":"2.0","id":13}'
okt 24 13:42:52 Desktop-Ubuntu mopidy[9199]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 12, "result": [{"__model__": "Ref", "uri": "local:directory", "name": "Local media", "type": "directory"}]}'
okt 24 13:42:52 Desktop-Ubuntu mopidy[9199]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.library.browse","params":{"uri":null},"jsonrpc":"2.0","id":12}'
okt 24 13:42:51 Desktop-Ubuntu mopidy[9199]: DEBUG    [HttpServer] mopidy_iris.core {'id': 166661177171964, 'jsonrpc': '2.0', 'method': 'get_version', 'result': {'version': {'current': '3.64.1', 'latest': '3.64.1', 'is_root': False, 'upgrade_available': False}}, 'recipient': '9JXOOKPJ0HH7'}
okt 24 13:42:51 Desktop-Ubuntu mopidy[9199]: DEBUG    [HttpServer] mopidy_iris.handlers Iris websocket message received: {"jsonrpc":"2.0","id":166661177171964,"method":"get_version"}
okt 24 13:42:51 Desktop-Ubuntu mopidy[9199]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 11, "result": null}'
okt 24 13:42:51 Desktop-Ubuntu mopidy[9199]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.playback.get_stream_title","params":{},"jsonrpc":"2.0","id":11}'
okt 24 13:42:51 Desktop-Ubuntu mopidy[9199]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 10, "result": ["file", "http", "https", "local", "m3u", "rtsp"]}'
okt 24 13:42:51 Desktop-Ubuntu mopidy[9199]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.get_uri_schemes","params":{},"jsonrpc":"2.0","id":10}'
okt 24 13:42:51 Desktop-Ubuntu mopidy[9199]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 9, "result": 0}'
okt 24 13:42:51 Desktop-Ubuntu mopidy[9199]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.playback.get_time_position","params":{},"jsonrpc":"2.0","id":9}'
okt 24 13:42:51 Desktop-Ubuntu mopidy[9199]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 8, "result": []}'
okt 24 13:42:51 Desktop-Ubuntu mopidy[9199]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_tl_tracks","params":{},"jsonrpc":"2.0","id":8}'
okt 24 13:42:51 Desktop-Ubuntu mopidy[9199]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 7, "result": false}'
okt 24 13:42:51 Desktop-Ubuntu mopidy[9199]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_repeat","params":{},"jsonrpc":"2.0","id":7}'
okt 24 13:42:51 Desktop-Ubuntu mopidy[9199]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 6, "result": false}'
okt 24 13:42:51 Desktop-Ubuntu mopidy[9199]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_random","params":{},"jsonrpc":"2.0","id":6}'
okt 24 13:42:51 Desktop-Ubuntu mopidy[9199]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 5, "result": false}'
okt 24 13:42:51 Desktop-Ubuntu mopidy[9199]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_consume","params":{},"jsonrpc":"2.0","id":5}'
okt 24 13:42:51 Desktop-Ubuntu mopidy[9199]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 4, "result": false}'
okt 24 13:42:51 Desktop-Ubuntu mopidy[9199]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.mixer.get_mute","params":{},"jsonrpc":"2.0","id":4}'
okt 24 13:42:51 Desktop-Ubuntu mopidy[9199]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 3, "result": 100}'
okt 24 13:42:51 Desktop-Ubuntu mopidy[9199]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.mixer.get_volume","params":{},"jsonrpc":"2.0","id":3}'
okt 24 13:42:51 Desktop-Ubuntu mopidy[9199]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 2, "result": "stopped"}'
okt 24 13:42:51 Desktop-Ubuntu mopidy[9199]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.playback.get_state","params":{},"jsonrpc":"2.0","id":2}'
okt 24 13:42:51 Desktop-Ubuntu mopidy[9199]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 1, "result": null}'
okt 24 13:42:51 Desktop-Ubuntu mopidy[9199]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.playback.get_current_tl_track","params":{},"jsonrpc":"2.0","id":1}'
okt 24 13:42:51 Desktop-Ubuntu mopidy[9199]: DEBUG    [HttpServer] mopidy_iris.core {'id': 166661177121730, 'jsonrpc': '2.0', 'method': 'get_queue_metadata', 'result': {'queue_metadata': {}}, 'recipient': '9JXOOKPJ0HH7'}
okt 24 13:42:51 Desktop-Ubuntu mopidy[9199]: DEBUG    [HttpServer] mopidy_iris.handlers Iris websocket message received: {"jsonrpc":"2.0","id":166661177121730,"method":"get_queue_metadata"}
okt 24 13:42:51 Desktop-Ubuntu mopidy[9199]: DEBUG    [HttpServer] mopidy_iris.core {'id': 166661177121614, 'jsonrpc': '2.0', 'method': 'get_pinned', 'result': {'pinned': []}, 'recipient': '9JXOOKPJ0HH7'}
okt 24 13:42:51 Desktop-Ubuntu mopidy[9199]: DEBUG    [HttpServer] mopidy_iris.handlers Iris websocket message received: {"jsonrpc":"2.0","id":166661177121614,"method":"get_pinned"}
okt 24 13:42:51 Desktop-Ubuntu mopidy[9199]: DEBUG    [HttpServer] mopidy_iris.core {'id': 166661177121574, 'jsonrpc': '2.0', 'method': 'get_commands', 'result': {'commands': {}}, 'recipient': '9JXOOKPJ0HH7'}
okt 24 13:42:51 Desktop-Ubuntu mopidy[9199]: DEBUG    [HttpServer] mopidy_iris.handlers Iris websocket message received: {"jsonrpc":"2.0","id":166661177121574,"method":"get_commands"}
okt 24 13:42:51 Desktop-Ubuntu mopidy[9199]: DEBUG    [HttpServer] mopidy_iris.core {'id': 16666117712142, 'jsonrpc': '2.0', 'method': 'get_radio', 'result': {'radio': {'enabled': 0, 'seed_artists': [], 'seed_genres': [], 'seed_tracks': [], 'results': []}}, 'recipient': '9JXOOKPJ0HH7'}
okt 24 13:42:51 Desktop-Ubuntu mopidy[9199]: DEBUG    [HttpServer] mopidy_iris.handlers Iris websocket message received: {"jsonrpc":"2.0","id":16666117712142,"method":"get_radio"}
okt 24 13:42:51 Desktop-Ubuntu mopidy[9199]: DEBUG    [HttpServer] mopidy_iris.core {'id': 166661177121392, 'jsonrpc': '2.0', 'method': 'get_shared_config', 'result': {'shared_config': {}}, 'recipient': '9JXOOKPJ0HH7'}
okt 24 13:42:51 Desktop-Ubuntu mopidy[9199]: DEBUG    [HttpServer] mopidy_iris.handlers Iris websocket message received: {"jsonrpc":"2.0","id":166661177121392,"method":"get_shared_config"}
okt 24 13:42:51 Desktop-Ubuntu mopidy[9199]: DEBUG    [HttpServer] mopidy_iris.core {'id': 166661177121250, 'jsonrpc': '2.0', 'method': 'get_config', 'result': {'config': {'is_root': False, 'spotify_username': False, 'country': 'NZ', 'locale': 'en_NZ', 'snapcast_enabled': True, 'snapcast_host': 'localhost', 'snapcast_port': '1780', 'snapcast_ssl': False, 'snapcast_stream': 'Default', 'spotify_authorization_url': 'https://jamesbarnsley.co.nz/iris/auth_spotify.php', 'lastfm_authorization_url': 'https://jamesbarnsley.co.nz/iris/auth_lastfm.php', 'genius_authorization_url': 'https://jamesbarnsley.co.nz/iris/auth_genius.php', 'shared_config': {}}}, 'recipient': '9JXOOKPJ0HH7'}
okt 24 13:42:51 Desktop-Ubuntu mopidy[9199]: DEBUG    [HttpServer] mopidy_iris.handlers Iris websocket message received: {"jsonrpc":"2.0","id":166661177121250,"method":"get_config"}
okt 24 13:42:51 Desktop-Ubuntu mopidy[9199]: DEBUG    [HttpServer] mopidy_iris.core {'id': 166661177121120, 'jsonrpc': '2.0', 'method': 'update_connection', 'result': {'connection': {'connection_id': '9JXOOKPJ0HH7', 'ip': '127.0.0.1', 'created': '2022-10-24 13:42:51', 'username': 166656148284185, 'client_id': 166656148284193}}, 'recipient': '9JXOOKPJ0HH7'}
okt 24 13:42:51 Desktop-Ubuntu mopidy[9199]: DEBUG    [HttpServer] mopidy_iris.core {'method': 'connection_changed', 'params': {'connection': {'connection_id': '9JXOOKPJ0HH7', 'ip': '127.0.0.1', 'created': '2022-10-24 13:42:51', 'username': 166656148284185, 'client_id': 166656148284193}}}
okt 24 13:42:51 Desktop-Ubuntu mopidy[9199]: DEBUG    [HttpServer] mopidy_iris.handlers Iris websocket message received: {"jsonrpc":"2.0","id":166661177121120,"method":"update_connection","params":{"username":166656148284185,"client_id":166656148284193}}
okt 24 13:42:51 Desktop-Ubuntu mopidy[9199]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 0, "result": {"core.get_uri_schemes": {"description": "Get list of URI schemes we can handle", "params": []}, "core.get_version": {"description": "Get version of the Mopidy core API", "params": []}, "core.history.get_history": {"description": "Get the track history.\\n\\nThe timestamps are milliseconds since epoch.\\n\\n:returns: the track history\\n:rtype: list of (timestamp, :class:`mopidy.models.Ref`) tuples", "params": []}, "core.history.get_length": {"description": "Get the number of tracks in the history.\\n\\n:returns: the history length\\n:rtype: int", "params": []}, "core.library.browse": {"description": "Browse directories and tracks at the given ``uri``.\\n\\n``uri`` is a string which represents some directory belonging to a\\nbackend. To get the intial root directories for backends pass\\n:class:`None` as the URI.\\n\\nReturns a list of :class:`mopidy.models.Ref` objects for the\\ndirectories and tracks at the given ``uri``.\\n\\nThe :class:`~mopidy.models.Ref` objects representing tracks keep the\\ntrack\'s original URI. A matching pair of objects can look like this::\\n\\n    Track(uri=\'dummy:/foo.mp3\', name=\'foo\', artists=..., album=...)\\n    Ref.track(uri=\'dummy:/foo.mp3\', name=\'foo\')\\n\\nThe :class:`~mopidy.models.Ref` objects representing directories have\\nbackend specific URIs. These are opaque values, so no one but the\\nbackend that created them should try and derive any meaning from them.\\nThe only valid exception to this is checking the scheme, as it is used\\nto route browse requests to the correct backend.\\n\\nFor example, the dummy library\'s ``/bar`` directory could be returned\\nlike this::\\n\\n    Ref.directory(uri=\'dummy:directory:/bar\', name=\'bar\')\\n\\n:param string uri: URI to browse\\n:rtype: list of :class:`mopidy.models.Ref`\\n\\n.. versionadded:: 0.18", "params": [{"name": "uri"}]}, "core.library.get_distinct": {"description": "List distinct values for a given field from the library.\\n\\nThis has mainly been added to support the list commands the MPD\\nprotocol supports in a more sane fashion. Other frontends are not\\nrecommended to use this method.\\n\\n:param string field: Any one of ``uri``, ``track_name``, ``album``,\\n    ``artist``, ``albumartist``, ``composer``, ``performer``,\\n    ``track_no``, ``genre``, ``date``, ``comment``, ``disc_no``,\\n    ``musicbrainz_albumid``, ``musicbrainz_artistid``, or\\n    ``musicbrainz_trackid``.\\n:param dict query: Query to use for limiting results, see\\n    :meth:`search` for details about the query format.\\n:rtype: set of values corresponding to the requested field type.\\n\\n.. versionadded:: 1.0", "params": [{"name": "field"}, {"name": "query", "default": null}]}, "core.library.get_images": {"description": "Lookup the images for the given URIs\\n\\nBackends can use this to return image URIs for any URI they know about\\nbe it tracks, albums, playlists. The lookup result is a dictionary\\nmapping the provided URIs to lists of images.\\n\\nUnknown URIs or URIs the corresponding backend couldn\'t find anything\\nfor will simply return an empty list for that URI.\\n\\n:param uris: list of URIs to find images for\\n:type uris: list of string\\n:rtype: {uri: tuple of :class:`mopidy.models.Image`}\\n\\n.. versionadded:: 1.0", "params": [{"name": "uris"}]}, "core.library.lookup": {"description": "Lookup the given URIs.\\n\\nIf the URI expands to multiple tracks, the returned list will contain\\nthem all.\\n\\n:param uris: track URIs\\n:type uris: list of string\\n:rtype: {uri: list of :class:`mopidy.models.Track`}", "params": [{"name": "uris"}]}, "core.library.refresh": {"description": "Refresh library. Limit to URI and below if an URI is given.\\n\\n:param uri: directory or track URI\\n:type uri: string", "params": [{"name": "uri", "default": null}]}, "core.library.search": {"description": "Search the library for tracks where ``field`` contains ``values``.\\n\\n``field`` can be one of ``uri``, ``track_name``, ``album``, ``artist``,\\n``albumartist``, ``composer``, ``performer``, ``track_no``, ``genre``,\\n``date``, ``comment``, ``disc_no``, ``musicbrainz_albumid``,\\n``musicbrainz_artistid``, ``musicbrainz_trackid`` or ``any``.\\n\\nIf ``uris`` is given, the search is limited to results from within the\\nURI roots. For example passing ``uris=[\'file:\']`` will limit the search\\nto the local backend.\\n\\nExamples::\\n\\n    # Returns results matching \'a\' in any backend\\n    search({\'any\': [\'a\']})\\n\\n    # Returns results matching artist \'xyz\' in any backend\\n    search({\'artist\': [\'xyz\']})\\n\\n    # Returns results matching \'a\' and \'b\' and artist \'xyz\' in any\\n    # backend\\n    search({\'any\': [\'a\', \'b\'], \'artist\': [\'xyz\']})\\n\\n    # Returns results matching \'a\' if within the given URI roots\\n    # \\"file:///media/music\\" and \\"spotify:\\"\\n    search({\'any\': [\'a\']}, uris=[\'file:///media/music\', \'spotify:\'])\\n\\n    # Returns results matching artist \'xyz\' and \'abc\' in any backend\\n    search({\'artist\': [\'xyz\', \'abc\']})\\n\\n:param query: one or more queries to search for\\n:type query: dict\\n:param uris: zero or more URI roots to limit the search to\\n:type uris: list of string or :class:`None`\\n:param exact: if the search should use exact matching\\n:type exact: :class:`bool`\\n:rtype: list of :class:`mopidy.models.SearchResult`\\n\\n.. versionadded:: 1.0\\n    The ``exact`` keyword argument.", "params": [{"name": "query"}, {"name": "uris", "default": null}, {"name": "exact", "default": false}]}, "core.mixer.get_mute": {"description": "Get mute state.\\n\\n:class:`True` if muted, :class:`False` unmuted, :class:`None` if\\nunknown.", "params": []}, "core.mixer.get_volume": {"description": "Get the volume.\\n\\nInteger in range [0..100] or :class:`None` if unknown.\\n\\nThe volume scale is linear.", "params": []}, "core.mixer.set_mute": {"description": "Set mute state.\\n\\n:class:`True` to mute, :class:`False` to unmute.\\n\\nReturns :class:`True` if call is successful, otherwise :class:`False`.", "params": [{"name": "mute"}]}, "core.mixer.set_volume": {"description": "Set the volume.\\n\\nThe volume is defined as an integer in range [0..100].\\n\\nThe volume scale is linear.\\n\\nReturns :class:`True` if call is successful, otherwise :class:`False`.", "params": [{"name": "volume"}]}, "core.playback.get_current_tl_track": {"description": "Get the currently playing or selected track.\\n\\nReturns a :class:`mopidy.models.TlTrack` or :class:`None`.", "params": []}, "core.playback.get_current_tlid": {"description": "Get the currently playing or selected TLID.\\n\\nExtracted from :meth:`get_current_tl_track` for convenience.\\n\\nReturns a :class:`int` or :class:`None`.\\n\\n.. versionadded:: 1.1", "params": []}, "core.playback.get_current_track": {"description": "Get the currently playing or selected track.\\n\\nExtracted from :meth:`get_current_tl_track` for convenience.\\n\\nReturns a :class:`mopidy.models.Track` or :class:`None`.", "params": []}, "core.playback.get_state": {"description": "Get The playback state.", "params": []}, "core.playback.get_stream_title": {"description": "Get the current stream title or :class:`None`.", "params": []}, "core.playback.get_time_position": {"description": "Get time position in milliseconds.", "params": []}, "core.playback.next": {"description": "Change to the next track.\\n\\nThe current playback state will be kept. If it was playing, playing\\nwill continue. If it was paused, it will still be paused, etc.", "params": []}, "core.playback.pause": {"description": "Pause playback.", "params": []}, "core.playback.play": {"description": "Play the given track, or if the given tl_track and tlid is\\n:class:`None`, play the currently active track.\\n\\nNote that the track **must** already be in the tracklist.\\n\\n.. deprecated:: 3.0\\n    The ``tl_track`` argument. Use ``tlid`` instead.\\n\\n:param tl_track: track to play\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:param tlid: TLID of the track to play\\n:type tlid: :class:`int` or :class:`None`", "params": [{"name": "tl_track", "default": null}, {"name": "tlid", "default": null}]}, "core.playback.previous": {"description": "Change to the previous track.\\n\\nThe current playback state will be kept. If it was playing, playing\\nwill continue. If it was paused, it will still be paused, etc.", "params": []}, "core.playback.resume": {"description": "If paused, resume playing the current track.", "params": []}, "core.playback.seek": {"description": "Seeks to time position given in milliseconds.\\n\\n:param time_position: time position in milliseconds\\n:type time_position: int\\n:rtype: :class:`True` if successful, else :class:`False`", "params": [{"name": "time_position"}]}, "core.playback.set_state": {"description": "Set the playback state.\\n\\nMust be :attr:`PLAYING`, :attr:`PAUSED`, or :attr:`STOPPED`.\\n\\nPossible states and transitions:\\n\\n.. digraph:: state_transitions\\n\\n    \\"STOPPED\\" -> \\"PLAYING\\" [ label=\\"play\\" ]\\n    \\"STOPPED\\" -> \\"PAUSED\\" [ label=\\"pause\\" ]\\n    \\"PLAYING\\" -> \\"STOPPED\\" [ label=\\"stop\\" ]\\n    \\"PLAYING\\" -> \\"PAUSED\\" [ label=\\"pause\\" ]\\n    \\"PLAYING\\" -> \\"PLAYING\\" [ label=\\"play\\" ]\\n    \\"PAUSED\\" -> \\"PLAYING\\" [ label=\\"resume\\" ]\\n    \\"PAUSED\\" -> \\"STOPPED\\" [ label=\\"stop\\" ]", "params": [{"name": "new_state"}]}, "core.playback.stop": {"description": "Stop playing.", "params": []}, "core.playlists.as_list": {"description": "Get a list of the currently available playlists.\\n\\nReturns a list of :class:`~mopidy.models.Ref` objects referring to the\\nplaylists. In other words, no information about the playlists\' content\\nis given.\\n\\n:rtype: list of :class:`mopidy.models.Ref`\\n\\n.. versionadded:: 1.0", "params": []}, "core.playlists.create": {"description": "Create a new playlist.\\n\\nIf ``uri_scheme`` matches an URI scheme handled by a current backend,\\nthat backend is asked to create the playlist. If ``uri_scheme`` is\\n:class:`None` or doesn\'t match a current backend, the first backend is\\nasked to create the playlist.\\n\\nAll new playlists must be created by calling this method, and **not**\\nby creating new instances of :class:`mopidy.models.Playlist`.\\n\\n:param name: name of the new playlist\\n:type name: string\\n:param uri_scheme: use the backend matching the URI scheme\\n:type uri_scheme: string\\n:rtype: :class:`mopidy.models.Playlist` or :class:`None`", "params": [{"name": "name"}, {"name": "uri_scheme", "default": null}]}, "core.playlists.delete": {"description": "Delete playlist identified by the URI.\\n\\nIf the URI doesn\'t match the URI schemes handled by the current\\nbackends, nothing happens.\\n\\nReturns :class:`True` if deleted, :class:`False` otherwise.\\n\\n:param uri: URI of the playlist to delete\\n:type uri: string\\n:rtype: :class:`bool`\\n\\n.. versionchanged:: 2.2\\n    Return type defined.", "params": [{"name": "uri"}]}, "core.playlists.get_items": {"description": "Get the items in a playlist specified by ``uri``.\\n\\nReturns a list of :class:`~mopidy.models.Ref` objects referring to the\\nplaylist\'s items.\\n\\nIf a playlist with the given ``uri`` doesn\'t exist, it returns\\n:class:`None`.\\n\\n:rtype: list of :class:`mopidy.models.Ref`, or :class:`None`\\n\\n.. versionadded:: 1.0", "params": [{"name": "uri"}]}, "core.playlists.get_uri_schemes": {"description": "Get the list of URI schemes that support playlists.\\n\\n:rtype: list of string\\n\\n.. versionadded:: 2.0", "params": []}, "core.playlists.lookup": {"description": "Lookup playlist with given URI in both the set of playlists and in any\\nother playlist sources. Returns :class:`None` if not found.\\n\\n:param uri: playlist URI\\n:type uri: string\\n:rtype: :class:`mopidy.models.Playlist` or :class:`None`", "params": [{"name": "uri"}]}, "core.playlists.refresh": {"description": "Refresh the playlists in :attr:`playlists`.\\n\\nIf ``uri_scheme`` is :class:`None`, all backends are asked to refresh.\\nIf ``uri_scheme`` is an URI scheme handled by a backend, only that\\nbackend is asked to refresh. If ``uri_scheme`` doesn\'t match any\\ncurrent backend, nothing happens.\\n\\n:param uri_scheme: limit to the backend matching the URI scheme\\n:type uri_scheme: string", "params": [{"name": "uri_scheme", "default": null}]}, "core.playlists.save": {"description": "Save the playlist.\\n\\nFor a playlist to be saveable, it must have the ``uri`` attribute set.\\nYou must not set the ``uri`` atribute yourself, but use playlist\\nobjects returned by :meth:`create` or retrieved from :attr:`playlists`,\\nwhich will always give you saveable playlists.\\n\\nThe method returns the saved playlist. The return playlist may differ\\nfrom the saved playlist. E.g. if the playlist name was changed, the\\nreturned playlist may have a different URI. The caller of this method\\nmust throw away the playlist sent to this method, and use the\\nreturned playlist instead.\\n\\nIf the playlist\'s URI isn\'t set or doesn\'t match the URI scheme of a\\ncurrent backend, nothing is done and :class:`None` is returned.\\n\\n:param playlist: the playlist\\n:type playlist: :class:`mopidy.models.Playlist`\\n:rtype: :class:`mopidy.models.Playlist` or :class:`None`", "params": [{"name": "playlist"}]}, "core.tracklist.add": {"description": "Add tracks to the tracklist.\\n\\nIf ``uris`` is given instead of ``tracks``, the URIs are\\nlooked up in the library and the resulting tracks are added to the\\ntracklist.\\n\\nIf ``at_position`` is given, the tracks are inserted at the given\\nposition in the tracklist. If ``at_position`` is not given, the tracks\\nare appended to the end of the tracklist.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.\\n\\n:param tracks: tracks to add\\n:type tracks: list of :class:`mopidy.models.Track` or :class:`None`\\n:param at_position: position in tracklist to add tracks\\n:type at_position: int or :class:`None`\\n:param uris: list of URIs for tracks to add\\n:type uris: list of string or :class:`None`\\n:rtype: list of :class:`mopidy.models.TlTrack`\\n\\n.. versionadded:: 1.0\\n    The ``uris`` argument.\\n\\n.. deprecated:: 1.0\\n    The ``tracks`` argument. Use ``uris``.", "params": [{"name": "tracks", "default": null}, {"name": "at_position", "default": null}, {"name": "uris", "default": null}]}, "core.tracklist.clear": {"description": "Clear the tracklist.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.", "params": []}, "core.tracklist.eot_track": {"description": "The track that will be played after the given track.\\n\\nNot necessarily the same track as :meth:`next_track`.\\n\\n.. deprecated:: 3.0\\n    Use :meth:`get_eot_tlid` instead.\\n\\n:param tl_track: the reference track\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:rtype: :class:`mopidy.models.TlTrack` or :class:`None`", "params": [{"name": "tl_track"}]}, "core.tracklist.filter": {"description": "Filter the tracklist by the given criteria.\\n\\nEach rule in the criteria consists of a model field and a list of\\nvalues to compare it against. If the model field matches any of the\\nvalues, it may be returned.\\n\\nOnly tracks that match all the given criteria are returned.\\n\\nExamples::\\n\\n    # Returns tracks with TLIDs 1, 2, 3, or 4 (tracklist ID)\\n    filter({\'tlid\': [1, 2, 3, 4]})\\n\\n    # Returns track with URIs \'xyz\' or \'abc\'\\n    filter({\'uri\': [\'xyz\', \'abc\']})\\n\\n    # Returns track with a matching TLIDs (1, 3 or 6) and a\\n    # matching URI (\'xyz\' or \'abc\')\\n    filter({\'tlid\': [1, 3, 6], \'uri\': [\'xyz\', \'abc\']})\\n\\n:param criteria: one or more rules to match by\\n:type criteria: dict, of (string, list) pairs\\n:rtype: list of :class:`mopidy.models.TlTrack`", "params": [{"name": "criteria"}]}, "core.tracklist.get_consume": {"description": "Get consume mode.\\n\\n:class:`True`\\n    Tracks are removed from the tracklist when they have been played.\\n:class:`False`\\n    Tracks are not removed from the tracklist.", "params": []}, "core.tracklist.get_eot_tlid": {"description": "The TLID of the track that will be played after the current track.\\n\\nNot necessarily the same TLID as returned by :meth:`get_next_tlid`.\\n\\n:rtype: :class:`int` or :class:`None`\\n\\n.. versionadded:: 1.1", "params": []}, "core.tracklist.get_length": {"description": "Get length of the tracklist.", "params": []}, "core.tracklist.get_next_tlid": {"description": "The tlid of the track that will be played if calling\\n:meth:`mopidy.core.PlaybackController.next()`.\\n\\nFor normal playback this is the next track in the tracklist. If repeat\\nis enabled the next track can loop around the tracklist. When random is\\nenabled this should be a random track, all tracks should be played once\\nbefore the tracklist repeats.\\n\\n:rtype: :class:`int` or :class:`None`\\n\\n.. versionadded:: 1.1", "params": []}, "core.tracklist.get_previous_tlid": {"description": "Returns the TLID of the track that will be played if calling\\n:meth:`mopidy.core.PlaybackController.previous()`.\\n\\nFor normal playback this is the previous track in the tracklist. If\\nrandom and/or consume is enabled it should return the current track\\ninstead.\\n\\n:rtype: :class:`int` or :class:`None`\\n\\n.. versionadded:: 1.1", "params": []}, "core.tracklist.get_random": {"description": "Get random mode.\\n\\n:class:`True`\\n    Tracks are selected at random from the tracklist.\\n:class:`False`\\n    Tracks are played in the order of the tracklist.", "params": []}, "core.tracklist.get_repeat": {"description": "Get repeat mode.\\n\\n:class:`True`\\n    The tracklist is played repeatedly.\\n:class:`False`\\n    The tracklist is played once.", "params": []}, "core.tracklist.get_single": {"description": "Get single mode.\\n\\n:class:`True`\\n    Playback is stopped after current song, unless in ``repeat`` mode.\\n:class:`False`\\n    Playback continues after current song.", "params": []}, "core.tracklist.get_tl_tracks": {"description": "Get tracklist as list of :class:`mopidy.models.TlTrack`.", "params": []}, "core.tracklist.get_tracks": {"description": "Get tracklist as list of :class:`mopidy.models.Track`.", "params": []}, "core.tracklist.get_version": {"description": "Get the tracklist version.\\n\\nInteger which is increased every time the tracklist is changed. Is not\\nreset before Mopidy is restarted.", "params": []}, "core.tracklist.index": {"description": "The position of the given track in the tracklist.\\n\\nIf neither *tl_track* or *tlid* is given we return the index of\\nthe currently playing track.\\n\\n:param tl_track: the track to find the index of\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:param tlid: TLID of the track to find the index of\\n:type tlid: :class:`int` or :class:`None`\\n:rtype: :class:`int` or :class:`None`\\n\\n.. versionadded:: 1.1\\n    The *tlid* parameter", "params": [{"name": "tl_track", "default": null}, {"name": "tlid", "default": null}]}, "core.tracklist.move": {"description": "Move the tracks in the slice ``[start:end]`` to ``to_position``.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.\\n\\n:param start: position of first track to move\\n:type start: int\\n:param end: position after last track to move\\n:type end: int\\n:param to_position: new position for the tracks\\n:type to_position: int", "params": [{"name": "start"}, {"name": "end"}, {"name": "to_position"}]}, "core.tracklist.next_track": {"description": "The track that will be played if calling\\n:meth:`mopidy.core.PlaybackController.next()`.\\n\\nFor normal playback this is the next track in the tracklist. If repeat\\nis enabled the next track can loop around the tracklist. When random is\\nenabled this should be a random track, all tracks should be played once\\nbefore the tracklist repeats.\\n\\n.. deprecated:: 3.0\\n    Use :meth:`get_next_tlid` instead.\\n\\n:param tl_track: the reference track\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:rtype: :class:`mopidy.models.TlTrack` or :class:`None`", "params": [{"name": "tl_track"}]}, "core.tracklist.previous_track": {"description": "Returns the track that will be played if calling\\n:meth:`mopidy.core.PlaybackController.previous()`.\\n\\nFor normal playback this is the previous track in the tracklist. If\\nrandom and/or consume is enabled it should return the current track\\ninstead.\\n\\n.. deprecated:: 3.0\\n    Use :meth:`get_previous_tlid` instead.\\n\\n:param tl_track: the reference track\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:rtype: :class:`mopidy.models.TlTrack` or :class:`None`", "params": [{"name": "tl_track"}]}, "core.tracklist.remove": {"description": "Remove the matching tracks from the tracklist.\\n\\nUses :meth:`filter()` to lookup the tracks to remove.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.\\n\\n:param criteria: one or more rules to match by\\n:type criteria: dict, of (string, list) pairs\\n:rtype: list of :class:`mopidy.models.TlTrack` that were removed", "params": [{"name": "criteria"}]}, "core.tracklist.set_consume": {"description": "Set consume mode.\\n\\n:class:`True`\\n    Tracks are removed from the tracklist when they have been played.\\n:class:`False`\\n    Tracks are not removed from the tracklist.", "params": [{"name": "value"}]}, "core.tracklist.set_random": {"description": "Set random mode.\\n\\n:class:`True`\\n    Tracks are selected at random from the tracklist.\\n:class:`False`\\n    Tracks are played in the order of the tracklist.", "params": [{"name": "value"}]}, "core.tracklist.set_repeat": {"description": "Set repeat mode.\\n\\nTo repeat a single track, set both ``repeat`` and ``single``.\\n\\n:class:`True`\\n    The tracklist is played repeatedly.\\n:class:`False`\\n    The tracklist is played once.", "params": [{"name": "value"}]}, "core.tracklist.set_single": {"description": "Set single mode.\\n\\n:class:`True`\\n    Playback is stopped after current song, unless in ``repeat`` mode.\\n:class:`False`\\n    Playback continues after current song.", "params": [{"name": "value"}]}, "core.tracklist.shuffle": {"description": "Shuffles the entire tracklist. If ``start`` and ``end`` is given only\\nshuffles the slice ``[start:end]``.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.\\n\\n:param start: position of first track to shuffle\\n:type start: int or :class:`None`\\n:param end: position after last track to shuffle\\n:type end: int or :class:`None`", "params": [{"name": "start", "default": null}, {"name": "end", "default": null}]}, "core.tracklist.slice": {"description": "Returns a slice of the tracklist, limited by the given start and end\\npositions.\\n\\n:param start: position of first track to include in slice\\n:type start: int\\n:param end: position after last track to include in slice\\n:type end: int\\n:rtype: :class:`mopidy.models.TlTrack`", "params": [{"name": "start"}, {"name": "end"}]}}}'
okt 24 13:42:51 Desktop-Ubuntu mopidy[9199]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.describe","jsonrpc":"2.0","id":0}'
okt 24 13:42:51 Desktop-Ubuntu mopidy[9199]: DEBUG    [HttpServer] mopidy_iris.core {'method': 'connection_added', 'params': {'connection': {'connection_id': '9JXOOKPJ0HH7', 'ip': '127.0.0.1', 'created': '2022-10-24 13:42:51'}}}
okt 24 13:42:51 Desktop-Ubuntu mopidy[9199]: DEBUG    [HttpServer] mopidy_iris.core <mopidy_iris.handlers.WebsocketHandler object at 0x7fc7403c98d0>
okt 24 13:42:51 Desktop-Ubuntu mopidy[9199]: DEBUG    [HttpServer] mopidy_iris.core Connection added
okt 24 13:42:51 Desktop-Ubuntu mopidy[9199]: INFO     [HttpServer] tornado.access 101 GET /iris/ws/ (127.0.0.1) 0.48ms
okt 24 13:42:51 Desktop-Ubuntu mopidy[9199]: DEBUG    [HttpServer] mopidy.http.handlers New WebSocket connection from 127.0.0.1
okt 24 13:42:51 Desktop-Ubuntu mopidy[9199]: INFO     [HttpServer] tornado.access 101 GET /mopidy/ws/ (127.0.0.1) 0.62ms
okt 24 13:42:50 Desktop-Ubuntu mopidy[9199]: INFO     [HttpServer] tornado.access 200 GET /iris/assets/favicon.png (127.0.0.1) 0.71ms
okt 24 13:42:49 Desktop-Ubuntu mopidy[9199]: INFO     [HttpServer] tornado.access 200 GET /iris/app.min.js?v=1666559547 (127.0.0.1) 11.09ms
okt 24 13:42:49 Desktop-Ubuntu mopidy[9199]: INFO     [HttpServer] tornado.access 200 GET /iris/app.min.css?v=1666559547 (127.0.0.1) 5.09ms
okt 24 13:42:49 Desktop-Ubuntu mopidy[9199]: INFO     [HttpServer] tornado.access 200 GET /iris/assets/app-icon.svg (127.0.0.1) 0.73ms
okt 24 13:42:49 Desktop-Ubuntu mopidy[9199]: DEBUG    [HttpServer] mopidy.http.handlers Closed WebSocket connection from 127.0.0.1
okt 24 13:42:49 Desktop-Ubuntu mopidy[9199]: DEBUG    [HttpServer] mopidy_iris.core {'method': 'connection_removed', 'params': {'connection': {'connection_id': 'BGN90U3JXPRP', 'ip': '127.0.0.1', 'created': '2022-10-24 13:42:37', 'username': 166656148284185, 'client_id': 166656148284193}}}
okt 24 13:42:49 Desktop-Ubuntu mopidy[9199]: INFO     [HttpServer] tornado.access 200 GET /iris/library/browse (127.0.0.1) 6.14ms
okt 24 13:42:37 Desktop-Ubuntu mopidy[9199]: DEBUG    [HttpServer] mopidy_iris.core {'id': 166661175775419, 'jsonrpc': '2.0', 'method': 'get_version', 'result': {'version': {'current': '3.64.1', 'latest': '3.64.1', 'is_root': False, 'upgrade_available': False}}, 'recipient': 'BGN90U3JXPRP'}
okt 24 13:42:37 Desktop-Ubuntu mopidy[9199]: DEBUG    [HttpServer] mopidy_iris.handlers Iris websocket message received: {"jsonrpc":"2.0","id":166661175775419,"method":"get_version"}
okt 24 13:42:37 Desktop-Ubuntu mopidy[9199]: DEBUG    [HttpServer] mopidy_iris.core {'id': 166661175725365, 'jsonrpc': '2.0', 'method': 'get_queue_metadata', 'result': {'queue_metadata': {}}, 'recipient': 'BGN90U3JXPRP'}
okt 24 13:42:37 Desktop-Ubuntu mopidy[9199]: DEBUG    [HttpServer] mopidy_iris.handlers Iris websocket message received: {"jsonrpc":"2.0","id":166661175725365,"method":"get_queue_metadata"}
okt 24 13:42:37 Desktop-Ubuntu mopidy[9199]: DEBUG    [HttpServer] mopidy_iris.core {'id': 166661175725237, 'jsonrpc': '2.0', 'method': 'get_pinned', 'result': {'pinned': []}, 'recipient': 'BGN90U3JXPRP'}
okt 24 13:42:37 Desktop-Ubuntu mopidy[9199]: DEBUG    [HttpServer] mopidy_iris.handlers Iris websocket message received: {"jsonrpc":"2.0","id":166661175725237,"method":"get_pinned"}
okt 24 13:42:37 Desktop-Ubuntu mopidy[9199]: DEBUG    [HttpServer] mopidy_iris.core {'id': 16666117572517, 'jsonrpc': '2.0', 'method': 'get_commands', 'result': {'commands': {}}, 'recipient': 'BGN90U3JXPRP'}
okt 24 13:42:37 Desktop-Ubuntu mopidy[9199]: DEBUG    [HttpServer] mopidy_iris.handlers Iris websocket message received: {"jsonrpc":"2.0","id":16666117572517,"method":"get_commands"}
okt 24 13:42:37 Desktop-Ubuntu mopidy[9199]: DEBUG    [HttpServer] mopidy_iris.core {'id': 166661175725197, 'jsonrpc': '2.0', 'method': 'get_radio', 'result': {'radio': {'enabled': 0, 'seed_artists': [], 'seed_genres': [], 'seed_tracks': [], 'results': []}}, 'recipient': 'BGN90U3JXPRP'}
okt 24 13:42:37 Desktop-Ubuntu mopidy[9199]: DEBUG    [HttpServer] mopidy_iris.handlers Iris websocket message received: {"jsonrpc":"2.0","id":166661175725197,"method":"get_radio"}
okt 24 13:42:37 Desktop-Ubuntu mopidy[9199]: DEBUG    [HttpServer] mopidy_iris.core {'id': 166661175725063, 'jsonrpc': '2.0', 'method': 'get_shared_config', 'result': {'shared_config': {}}, 'recipient': 'BGN90U3JXPRP'}
okt 24 13:42:37 Desktop-Ubuntu mopidy[9199]: DEBUG    [HttpServer] mopidy_iris.handlers Iris websocket message received: {"jsonrpc":"2.0","id":166661175725063,"method":"get_shared_config"}
okt 24 13:42:37 Desktop-Ubuntu mopidy[9199]: DEBUG    [HttpServer] mopidy_iris.core {'id': 166661175724917, 'jsonrpc': '2.0', 'method': 'get_config', 'result': {'config': {'is_root': False, 'spotify_username': False, 'country': 'NZ', 'locale': 'en_NZ', 'snapcast_enabled': True, 'snapcast_host': 'localhost', 'snapcast_port': '1780', 'snapcast_ssl': False, 'snapcast_stream': 'Default', 'spotify_authorization_url': 'https://jamesbarnsley.co.nz/iris/auth_spotify.php', 'lastfm_authorization_url': 'https://jamesbarnsley.co.nz/iris/auth_lastfm.php', 'genius_authorization_url': 'https://jamesbarnsley.co.nz/iris/auth_genius.php', 'shared_config': {}}}, 'recipient': 'BGN90U3JXPRP'}
okt 24 13:42:37 Desktop-Ubuntu mopidy[9199]: DEBUG    [HttpServer] mopidy_iris.handlers Iris websocket message received: {"jsonrpc":"2.0","id":166661175724917,"method":"get_config"}
okt 24 13:42:37 Desktop-Ubuntu mopidy[9199]: DEBUG    [HttpServer] mopidy_iris.core {'id': 166661175724881, 'jsonrpc': '2.0', 'method': 'update_connection', 'result': {'connection': {'connection_id': 'BGN90U3JXPRP', 'ip': '127.0.0.1', 'created': '2022-10-24 13:42:37', 'username': 166656148284185, 'client_id': 166656148284193}}, 'recipient': 'BGN90U3JXPRP'}
okt 24 13:42:37 Desktop-Ubuntu mopidy[9199]: DEBUG    [HttpServer] mopidy_iris.core {'method': 'connection_changed', 'params': {'connection': {'connection_id': 'BGN90U3JXPRP', 'ip': '127.0.0.1', 'created': '2022-10-24 13:42:37', 'username': 166656148284185, 'client_id': 166656148284193}}}
okt 24 13:42:37 Desktop-Ubuntu mopidy[9199]: DEBUG    [HttpServer] mopidy_iris.handlers Iris websocket message received: {"jsonrpc":"2.0","id":166661175724881,"method":"update_connection","params":{"username":166656148284185,"client_id":166656148284193}}
okt 24 13:42:37 Desktop-Ubuntu mopidy[9199]: DEBUG    [HttpServer] mopidy_iris.core {'method': 'connection_added', 'params': {'connection': {'connection_id': 'BGN90U3JXPRP', 'ip': '127.0.0.1', 'created': '2022-10-24 13:42:37'}}}
okt 24 13:42:37 Desktop-Ubuntu mopidy[9199]: DEBUG    [HttpServer] mopidy_iris.core <mopidy_iris.handlers.WebsocketHandler object at 0x7fc740334040>
okt 24 13:42:37 Desktop-Ubuntu mopidy[9199]: DEBUG    [HttpServer] mopidy_iris.core Connection added
okt 24 13:42:37 Desktop-Ubuntu mopidy[9199]: INFO     [HttpServer] tornado.access 101 GET /iris/ws/ (127.0.0.1) 0.55ms
okt 24 13:42:33 Desktop-Ubuntu mopidy[9199]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 73, "result": null}'
okt 24 13:42:33 Desktop-Ubuntu mopidy[9199]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.playback.get_stream_title","params":{},"jsonrpc":"2.0","id":73}'
okt 24 13:42:33 Desktop-Ubuntu mopidy[9199]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 72, "result": ["file", "http", "https", "local", "m3u", "rtsp"]}'
okt 24 13:42:33 Desktop-Ubuntu mopidy[9199]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.get_uri_schemes","params":{},"jsonrpc":"2.0","id":72}'
okt 24 13:42:33 Desktop-Ubuntu mopidy[9199]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 71, "result": 0}'
okt 24 13:42:33 Desktop-Ubuntu mopidy[9199]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.playback.get_time_position","params":{},"jsonrpc":"2.0","id":71}'
okt 24 13:42:33 Desktop-Ubuntu mopidy[9199]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 70, "result": []}'
okt 24 13:42:33 Desktop-Ubuntu mopidy[9199]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_tl_tracks","params":{},"jsonrpc":"2.0","id":70}'
okt 24 13:42:33 Desktop-Ubuntu mopidy[9199]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 69, "result": false}'
okt 24 13:42:33 Desktop-Ubuntu mopidy[9199]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_repeat","params":{},"jsonrpc":"2.0","id":69}'
okt 24 13:42:33 Desktop-Ubuntu mopidy[9199]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 68, "result": false}'
okt 24 13:42:33 Desktop-Ubuntu mopidy[9199]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_random","params":{},"jsonrpc":"2.0","id":68}'
okt 24 13:42:33 Desktop-Ubuntu mopidy[9199]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 67, "result": false}'
okt 24 13:42:33 Desktop-Ubuntu mopidy[9199]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_consume","params":{},"jsonrpc":"2.0","id":67}'
okt 24 13:42:33 Desktop-Ubuntu mopidy[9199]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 66, "result": false}'
okt 24 13:42:33 Desktop-Ubuntu mopidy[9199]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.mixer.get_mute","params":{},"jsonrpc":"2.0","id":66}'
okt 24 13:42:33 Desktop-Ubuntu mopidy[9199]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 65, "result": 100}'
okt 24 13:42:33 Desktop-Ubuntu mopidy[9199]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.mixer.get_volume","params":{},"jsonrpc":"2.0","id":65}'
okt 24 13:42:33 Desktop-Ubuntu mopidy[9199]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 64, "result": "stopped"}'
okt 24 13:42:33 Desktop-Ubuntu mopidy[9199]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.playback.get_state","params":{},"jsonrpc":"2.0","id":64}'
okt 24 13:42:33 Desktop-Ubuntu mopidy[9199]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 63, "result": null}'
okt 24 13:42:33 Desktop-Ubuntu mopidy[9199]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.playback.get_current_tl_track","params":{},"jsonrpc":"2.0","id":63}'
okt 24 13:42:33 Desktop-Ubuntu mopidy[9199]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 62, "result": {"core.get_uri_schemes": {"description": "Get list of URI schemes we can handle", "params": []}, "core.get_version": {"description": "Get version of the Mopidy core API", "params": []}, "core.history.get_history": {"description": "Get the track history.\\n\\nThe timestamps are milliseconds since epoch.\\n\\n:returns: the track history\\n:rtype: list of (timestamp, :class:`mopidy.models.Ref`) tuples", "params": []}, "core.history.get_length": {"description": "Get the number of tracks in the history.\\n\\n:returns: the history length\\n:rtype: int", "params": []}, "core.library.browse": {"description": "Browse directories and tracks at the given ``uri``.\\n\\n``uri`` is a string which represents some directory belonging to a\\nbackend. To get the intial root directories for backends pass\\n:class:`None` as the URI.\\n\\nReturns a list of :class:`mopidy.models.Ref` objects for the\\ndirectories and tracks at the given ``uri``.\\n\\nThe :class:`~mopidy.models.Ref` objects representing tracks keep the\\ntrack\'s original URI. A matching pair of objects can look like this::\\n\\n    Track(uri=\'dummy:/foo.mp3\', name=\'foo\', artists=..., album=...)\\n    Ref.track(uri=\'dummy:/foo.mp3\', name=\'foo\')\\n\\nThe :class:`~mopidy.models.Ref` objects representing directories have\\nbackend specific URIs. These are opaque values, so no one but the\\nbackend that created them should try and derive any meaning from them.\\nThe only valid exception to this is checking the scheme, as it is used\\nto route browse requests to the correct backend.\\n\\nFor example, the dummy library\'s ``/bar`` directory could be returned\\nlike this::\\n\\n    Ref.directory(uri=\'dummy:directory:/bar\', name=\'bar\')\\n\\n:param string uri: URI to browse\\n:rtype: list of :class:`mopidy.models.Ref`\\n\\n.. versionadded:: 0.18", "params": [{"name": "uri"}]}, "core.library.get_distinct": {"description": "List distinct values for a given field from the library.\\n\\nThis has mainly been added to support the list commands the MPD\\nprotocol supports in a more sane fashion. Other frontends are not\\nrecommended to use this method.\\n\\n:param string field: Any one of ``uri``, ``track_name``, ``album``,\\n    ``artist``, ``albumartist``, ``composer``, ``performer``,\\n    ``track_no``, ``genre``, ``date``, ``comment``, ``disc_no``,\\n    ``musicbrainz_albumid``, ``musicbrainz_artistid``, or\\n    ``musicbrainz_trackid``.\\n:param dict query: Query to use for limiting results, see\\n    :meth:`search` for details about the query format.\\n:rtype: set of values corresponding to the requested field type.\\n\\n.. versionadded:: 1.0", "params": [{"name": "field"}, {"name": "query", "default": null}]}, "core.library.get_images": {"description": "Lookup the images for the given URIs\\n\\nBackends can use this to return image URIs for any URI they know about\\nbe it tracks, albums, playlists. The lookup result is a dictionary\\nmapping the provided URIs to lists of images.\\n\\nUnknown URIs or URIs the corresponding backend couldn\'t find anything\\nfor will simply return an empty list for that URI.\\n\\n:param uris: list of URIs to find images for\\n:type uris: list of string\\n:rtype: {uri: tuple of :class:`mopidy.models.Image`}\\n\\n.. versionadded:: 1.0", "params": [{"name": "uris"}]}, "core.library.lookup": {"description": "Lookup the given URIs.\\n\\nIf the URI expands to multiple tracks, the returned list will contain\\nthem all.\\n\\n:param uris: track URIs\\n:type uris: list of string\\n:rtype: {uri: list of :class:`mopidy.models.Track`}", "params": [{"name": "uris"}]}, "core.library.refresh": {"description": "Refresh library. Limit to URI and below if an URI is given.\\n\\n:param uri: directory or track URI\\n:type uri: string", "params": [{"name": "uri", "default": null}]}, "core.library.search": {"description": "Search the library for tracks where ``field`` contains ``values``.\\n\\n``field`` can be one of ``uri``, ``track_name``, ``album``, ``artist``,\\n``albumartist``, ``composer``, ``performer``, ``track_no``, ``genre``,\\n``date``, ``comment``, ``disc_no``, ``musicbrainz_albumid``,\\n``musicbrainz_artistid``, ``musicbrainz_trackid`` or ``any``.\\n\\nIf ``uris`` is given, the search is limited to results from within the\\nURI roots. For example passing ``uris=[\'file:\']`` will limit the search\\nto the local backend.\\n\\nExamples::\\n\\n    # Returns results matching \'a\' in any backend\\n    search({\'any\': [\'a\']})\\n\\n    # Returns results matching artist \'xyz\' in any backend\\n    search({\'artist\': [\'xyz\']})\\n\\n    # Returns results matching \'a\' and \'b\' and artist \'xyz\' in any\\n    # backend\\n    search({\'any\': [\'a\', \'b\'], \'artist\': [\'xyz\']})\\n\\n    # Returns results matching \'a\' if within the given URI roots\\n    # \\"file:///media/music\\" and \\"spotify:\\"\\n    search({\'any\': [\'a\']}, uris=[\'file:///media/music\', \'spotify:\'])\\n\\n    # Returns results matching artist \'xyz\' and \'abc\' in any backend\\n    search({\'artist\': [\'xyz\', \'abc\']})\\n\\n:param query: one or more queries to search for\\n:type query: dict\\n:param uris: zero or more URI roots to limit the search to\\n:type uris: list of string or :class:`None`\\n:param exact: if the search should use exact matching\\n:type exact: :class:`bool`\\n:rtype: list of :class:`mopidy.models.SearchResult`\\n\\n.. versionadded:: 1.0\\n    The ``exact`` keyword argument.", "params": [{"name": "query"}, {"name": "uris", "default": null}, {"name": "exact", "default": false}]}, "core.mixer.get_mute": {"description": "Get mute state.\\n\\n:class:`True` if muted, :class:`False` unmuted, :class:`None` if\\nunknown.", "params": []}, "core.mixer.get_volume": {"description": "Get the volume.\\n\\nInteger in range [0..100] or :class:`None` if unknown.\\n\\nThe volume scale is linear.", "params": []}, "core.mixer.set_mute": {"description": "Set mute state.\\n\\n:class:`True` to mute, :class:`False` to unmute.\\n\\nReturns :class:`True` if call is successful, otherwise :class:`False`.", "params": [{"name": "mute"}]}, "core.mixer.set_volume": {"description": "Set the volume.\\n\\nThe volume is defined as an integer in range [0..100].\\n\\nThe volume scale is linear.\\n\\nReturns :class:`True` if call is successful, otherwise :class:`False`.", "params": [{"name": "volume"}]}, "core.playback.get_current_tl_track": {"description": "Get the currently playing or selected track.\\n\\nReturns a :class:`mopidy.models.TlTrack` or :class:`None`.", "params": []}, "core.playback.get_current_tlid": {"description": "Get the currently playing or selected TLID.\\n\\nExtracted from :meth:`get_current_tl_track` for convenience.\\n\\nReturns a :class:`int` or :class:`None`.\\n\\n.. versionadded:: 1.1", "params": []}, "core.playback.get_current_track": {"description": "Get the currently playing or selected track.\\n\\nExtracted from :meth:`get_current_tl_track` for convenience.\\n\\nReturns a :class:`mopidy.models.Track` or :class:`None`.", "params": []}, "core.playback.get_state": {"description": "Get The playback state.", "params": []}, "core.playback.get_stream_title": {"description": "Get the current stream title or :class:`None`.", "params": []}, "core.playback.get_time_position": {"description": "Get time position in milliseconds.", "params": []}, "core.playback.next": {"description": "Change to the next track.\\n\\nThe current playback state will be kept. If it was playing, playing\\nwill continue. If it was paused, it will still be paused, etc.", "params": []}, "core.playback.pause": {"description": "Pause playback.", "params": []}, "core.playback.play": {"description": "Play the given track, or if the given tl_track and tlid is\\n:class:`None`, play the currently active track.\\n\\nNote that the track **must** already be in the tracklist.\\n\\n.. deprecated:: 3.0\\n    The ``tl_track`` argument. Use ``tlid`` instead.\\n\\n:param tl_track: track to play\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:param tlid: TLID of the track to play\\n:type tlid: :class:`int` or :class:`None`", "params": [{"name": "tl_track", "default": null}, {"name": "tlid", "default": null}]}, "core.playback.previous": {"description": "Change to the previous track.\\n\\nThe current playback state will be kept. If it was playing, playing\\nwill continue. If it was paused, it will still be paused, etc.", "params": []}, "core.playback.resume": {"description": "If paused, resume playing the current track.", "params": []}, "core.playback.seek": {"description": "Seeks to time position given in milliseconds.\\n\\n:param time_position: time position in milliseconds\\n:type time_position: int\\n:rtype: :class:`True` if successful, else :class:`False`", "params": [{"name": "time_position"}]}, "core.playback.set_state": {"description": "Set the playback state.\\n\\nMust be :attr:`PLAYING`, :attr:`PAUSED`, or :attr:`STOPPED`.\\n\\nPossible states and transitions:\\n\\n.. digraph:: state_transitions\\n\\n    \\"STOPPED\\" -> \\"PLAYING\\" [ label=\\"play\\" ]\\n    \\"STOPPED\\" -> \\"PAUSED\\" [ label=\\"pause\\" ]\\n    \\"PLAYING\\" -> \\"STOPPED\\" [ label=\\"stop\\" ]\\n    \\"PLAYING\\" -> \\"PAUSED\\" [ label=\\"pause\\" ]\\n    \\"PLAYING\\" -> \\"PLAYING\\" [ label=\\"play\\" ]\\n    \\"PAUSED\\" -> \\"PLAYING\\" [ label=\\"resume\\" ]\\n    \\"PAUSED\\" -> \\"STOPPED\\" [ label=\\"stop\\" ]", "params": [{"name": "new_state"}]}, "core.playback.stop": {"description": "Stop playing.", "params": []}, "core.playlists.as_list": {"description": "Get a list of the currently available playlists.\\n\\nReturns a list of :class:`~mopidy.models.Ref` objects referring to the\\nplaylists. In other words, no information about the playlists\' content\\nis given.\\n\\n:rtype: list of :class:`mopidy.models.Ref`\\n\\n.. versionadded:: 1.0", "params": []}, "core.playlists.create": {"description": "Create a new playlist.\\n\\nIf ``uri_scheme`` matches an URI scheme handled by a current backend,\\nthat backend is asked to create the playlist. If ``uri_scheme`` is\\n:class:`None` or doesn\'t match a current backend, the first backend is\\nasked to create the playlist.\\n\\nAll new playlists must be created by calling this method, and **not**\\nby creating new instances of :class:`mopidy.models.Playlist`.\\n\\n:param name: name of the new playlist\\n:type name: string\\n:param uri_scheme: use the backend matching the URI scheme\\n:type uri_scheme: string\\n:rtype: :class:`mopidy.models.Playlist` or :class:`None`", "params": [{"name": "name"}, {"name": "uri_scheme", "default": null}]}, "core.playlists.delete": {"description": "Delete playlist identified by the URI.\\n\\nIf the URI doesn\'t match the URI schemes handled by the current\\nbackends, nothing happens.\\n\\nReturns :class:`True` if deleted, :class:`False` otherwise.\\n\\n:param uri: URI of the playlist to delete\\n:type uri: string\\n:rtype: :class:`bool`\\n\\n.. versionchanged:: 2.2\\n    Return type defined.", "params": [{"name": "uri"}]}, "core.playlists.get_items": {"description": "Get the items in a playlist specified by ``uri``.\\n\\nReturns a list of :class:`~mopidy.models.Ref` objects referring to the\\nplaylist\'s items.\\n\\nIf a playlist with the given ``uri`` doesn\'t exist, it returns\\n:class:`None`.\\n\\n:rtype: list of :class:`mopidy.models.Ref`, or :class:`None`\\n\\n.. versionadded:: 1.0", "params": [{"name": "uri"}]}, "core.playlists.get_uri_schemes": {"description": "Get the list of URI schemes that support playlists.\\n\\n:rtype: list of string\\n\\n.. versionadded:: 2.0", "params": []}, "core.playlists.lookup": {"description": "Lookup playlist with given URI in both the set of playlists and in any\\nother playlist sources. Returns :class:`None` if not found.\\n\\n:param uri: playlist URI\\n:type uri: string\\n:rtype: :class:`mopidy.models.Playlist` or :class:`None`", "params": [{"name": "uri"}]}, "core.playlists.refresh": {"description": "Refresh the playlists in :attr:`playlists`.\\n\\nIf ``uri_scheme`` is :class:`None`, all backends are asked to refresh.\\nIf ``uri_scheme`` is an URI scheme handled by a backend, only that\\nbackend is asked to refresh. If ``uri_scheme`` doesn\'t match any\\ncurrent backend, nothing happens.\\n\\n:param uri_scheme: limit to the backend matching the URI scheme\\n:type uri_scheme: string", "params": [{"name": "uri_scheme", "default": null}]}, "core.playlists.save": {"description": "Save the playlist.\\n\\nFor a playlist to be saveable, it must have the ``uri`` attribute set.\\nYou must not set the ``uri`` atribute yourself, but use playlist\\nobjects returned by :meth:`create` or retrieved from :attr:`playlists`,\\nwhich will always give you saveable playlists.\\n\\nThe method returns the saved playlist. The return playlist may differ\\nfrom the saved playlist. E.g. if the playlist name was changed, the\\nreturned playlist may have a different URI. The caller of this method\\nmust throw away the playlist sent to this method, and use the\\nreturned playlist instead.\\n\\nIf the playlist\'s URI isn\'t set or doesn\'t match the URI scheme of a\\ncurrent backend, nothing is done and :class:`None` is returned.\\n\\n:param playlist: the playlist\\n:type playlist: :class:`mopidy.models.Playlist`\\n:rtype: :class:`mopidy.models.Playlist` or :class:`None`", "params": [{"name": "playlist"}]}, "core.tracklist.add": {"description": "Add tracks to the tracklist.\\n\\nIf ``uris`` is given instead of ``tracks``, the URIs are\\nlooked up in the library and the resulting tracks are added to the\\ntracklist.\\n\\nIf ``at_position`` is given, the tracks are inserted at the given\\nposition in the tracklist. If ``at_position`` is not given, the tracks\\nare appended to the end of the tracklist.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.\\n\\n:param tracks: tracks to add\\n:type tracks: list of :class:`mopidy.models.Track` or :class:`None`\\n:param at_position: position in tracklist to add tracks\\n:type at_position: int or :class:`None`\\n:param uris: list of URIs for tracks to add\\n:type uris: list of string or :class:`None`\\n:rtype: list of :class:`mopidy.models.TlTrack`\\n\\n.. versionadded:: 1.0\\n    The ``uris`` argument.\\n\\n.. deprecated:: 1.0\\n    The ``tracks`` argument. Use ``uris``.", "params": [{"name": "tracks", "default": null}, {"name": "at_position", "default": null}, {"name": "uris", "default": null}]}, "core.tracklist.clear": {"description": "Clear the tracklist.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.", "params": []}, "core.tracklist.eot_track": {"description": "The track that will be played after the given track.\\n\\nNot necessarily the same track as :meth:`next_track`.\\n\\n.. deprecated:: 3.0\\n    Use :meth:`get_eot_tlid` instead.\\n\\n:param tl_track: the reference track\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:rtype: :class:`mopidy.models.TlTrack` or :class:`None`", "params": [{"name": "tl_track"}]}, "core.tracklist.filter": {"description": "Filter the tracklist by the given criteria.\\n\\nEach rule in the criteria consists of a model field and a list of\\nvalues to compare it against. If the model field matches any of the\\nvalues, it may be returned.\\n\\nOnly tracks that match all the given criteria are returned.\\n\\nExamples::\\n\\n    # Returns tracks with TLIDs 1, 2, 3, or 4 (tracklist ID)\\n    filter({\'tlid\': [1, 2, 3, 4]})\\n\\n    # Returns track with URIs \'xyz\' or \'abc\'\\n    filter({\'uri\': [\'xyz\', \'abc\']})\\n\\n    # Returns track with a matching TLIDs (1, 3 or 6) and a\\n    # matching URI (\'xyz\' or \'abc\')\\n    filter({\'tlid\': [1, 3, 6], \'uri\': [\'xyz\', \'abc\']})\\n\\n:param criteria: one or more rules to match by\\n:type criteria: dict, of (string, list) pairs\\n:rtype: list of :class:`mopidy.models.TlTrack`", "params": [{"name": "criteria"}]}, "core.tracklist.get_consume": {"description": "Get consume mode.\\n\\n:class:`True`\\n    Tracks are removed from the tracklist when they have been played.\\n:class:`False`\\n    Tracks are not removed from the tracklist.", "params": []}, "core.tracklist.get_eot_tlid": {"description": "The TLID of the track that will be played after the current track.\\n\\nNot necessarily the same TLID as returned by :meth:`get_next_tlid`.\\n\\n:rtype: :class:`int` or :class:`None`\\n\\n.. versionadded:: 1.1", "params": []}, "core.tracklist.get_length": {"description": "Get length of the tracklist.", "params": []}, "core.tracklist.get_next_tlid": {"description": "The tlid of the track that will be played if calling\\n:meth:`mopidy.core.PlaybackController.next()`.\\n\\nFor normal playback this is the next track in the tracklist. If repeat\\nis enabled the next track can loop around the tracklist. When random is\\nenabled this should be a random track, all tracks should be played once\\nbefore the tracklist repeats.\\n\\n:rtype: :class:`int` or :class:`None`\\n\\n.. versionadded:: 1.1", "params": []}, "core.tracklist.get_previous_tlid": {"description": "Returns the TLID of the track that will be played if calling\\n:meth:`mopidy.core.PlaybackController.previous()`.\\n\\nFor normal playback this is the previous track in the tracklist. If\\nrandom and/or consume is enabled it should return the current track\\ninstead.\\n\\n:rtype: :class:`int` or :class:`None`\\n\\n.. versionadded:: 1.1", "params": []}, "core.tracklist.get_random": {"description": "Get random mode.\\n\\n:class:`True`\\n    Tracks are selected at random from the tracklist.\\n:class:`False`\\n    Tracks are played in the order of the tracklist.", "params": []}, "core.tracklist.get_repeat": {"description": "Get repeat mode.\\n\\n:class:`True`\\n    The tracklist is played repeatedly.\\n:class:`False`\\n    The tracklist is played once.", "params": []}, "core.tracklist.get_single": {"description": "Get single mode.\\n\\n:class:`True`\\n    Playback is stopped after current song, unless in ``repeat`` mode.\\n:class:`False`\\n    Playback continues after current song.", "params": []}, "core.tracklist.get_tl_tracks": {"description": "Get tracklist as list of :class:`mopidy.models.TlTrack`.", "params": []}, "core.tracklist.get_tracks": {"description": "Get tracklist as list of :class:`mopidy.models.Track`.", "params": []}, "core.tracklist.get_version": {"description": "Get the tracklist version.\\n\\nInteger which is increased every time the tracklist is changed. Is not\\nreset before Mopidy is restarted.", "params": []}, "core.tracklist.index": {"description": "The position of the given track in the tracklist.\\n\\nIf neither *tl_track* or *tlid* is given we return the index of\\nthe currently playing track.\\n\\n:param tl_track: the track to find the index of\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:param tlid: TLID of the track to find the index of\\n:type tlid: :class:`int` or :class:`None`\\n:rtype: :class:`int` or :class:`None`\\n\\n.. versionadded:: 1.1\\n    The *tlid* parameter", "params": [{"name": "tl_track", "default": null}, {"name": "tlid", "default": null}]}, "core.tracklist.move": {"description": "Move the tracks in the slice ``[start:end]`` to ``to_position``.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.\\n\\n:param start: position of first track to move\\n:type start: int\\n:param end: position after last track to move\\n:type end: int\\n:param to_position: new position for the tracks\\n:type to_position: int", "params": [{"name": "start"}, {"name": "end"}, {"name": "to_position"}]}, "core.tracklist.next_track": {"description": "The track that will be played if calling\\n:meth:`mopidy.core.PlaybackController.next()`.\\n\\nFor normal playback this is the next track in the tracklist. If repeat\\nis enabled the next track can loop around the tracklist. When random is\\nenabled this should be a random track, all tracks should be played once\\nbefore the tracklist repeats.\\n\\n.. deprecated:: 3.0\\n    Use :meth:`get_next_tlid` instead.\\n\\n:param tl_track: the reference track\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:rtype: :class:`mopidy.models.TlTrack` or :class:`None`", "params": [{"name": "tl_track"}]}, "core.tracklist.previous_track": {"description": "Returns the track that will be played if calling\\n:meth:`mopidy.core.PlaybackController.previous()`.\\n\\nFor normal playback this is the previous track in the tracklist. If\\nrandom and/or consume is enabled it should return the current track\\ninstead.\\n\\n.. deprecated:: 3.0\\n    Use :meth:`get_previous_tlid` instead.\\n\\n:param tl_track: the reference track\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:rtype: :class:`mopidy.models.TlTrack` or :class:`None`", "params": [{"name": "tl_track"}]}, "core.tracklist.remove": {"description": "Remove the matching tracks from the tracklist.\\n\\nUses :meth:`filter()` to lookup the tracks to remove.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.\\n\\n:param criteria: one or more rules to match by\\n:type criteria: dict, of (string, list) pairs\\n:rtype: list of :class:`mopidy.models.TlTrack` that were removed", "params": [{"name": "criteria"}]}, "core.tracklist.set_consume": {"description": "Set consume mode.\\n\\n:class:`True`\\n    Tracks are removed from the tracklist when they have been played.\\n:class:`False`\\n    Tracks are not removed from the tracklist.", "params": [{"name": "value"}]}, "core.tracklist.set_random": {"description": "Set random mode.\\n\\n:class:`True`\\n    Tracks are selected at random from the tracklist.\\n:class:`False`\\n    Tracks are played in the order of the tracklist.", "params": [{"name": "value"}]}, "core.tracklist.set_repeat": {"description": "Set repeat mode.\\n\\nTo repeat a single track, set both ``repeat`` and ``single``.\\n\\n:class:`True`\\n    The tracklist is played repeatedly.\\n:class:`False`\\n    The tracklist is played once.", "params": [{"name": "value"}]}, "core.tracklist.set_single": {"description": "Set single mode.\\n\\n:class:`True`\\n    Playback is stopped after current song, unless in ``repeat`` mode.\\n:class:`False`\\n    Playback continues after current song.", "params": [{"name": "value"}]}, "core.tracklist.shuffle": {"description": "Shuffles the entire tracklist. If ``start`` and ``end`` is given only\\nshuffles the slice ``[start:end]``.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.\\n\\n:param start: position of first track to shuffle\\n:type start: int or :class:`None`\\n:param end: position after last track to shuffle\\n:type end: int or :class:`None`", "params": [{"name": "start", "default": null}, {"name": "end", "default": null}]}, "core.tracklist.slice": {"description": "Returns a slice of the tracklist, limited by the given start and end\\npositions.\\n\\n:param start: position of first track to include in slice\\n:type start: int\\n:param end: position after last track to include in slice\\n:type end: int\\n:rtype: :class:`mopidy.models.TlTrack`", "params": [{"name": "start"}, {"name": "end"}]}}}'
okt 24 13:42:33 Desktop-Ubuntu mopidy[9199]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.describe","jsonrpc":"2.0","id":62}'
okt 24 13:42:33 Desktop-Ubuntu mopidy[9199]: DEBUG    [HttpServer] mopidy.http.handlers New WebSocket connection from 127.0.0.1
okt 24 13:42:33 Desktop-Ubuntu mopidy[9199]: INFO     [HttpServer] tornado.access 101 GET /mopidy/ws/ (127.0.0.1) 19.60ms
okt 24 13:42:32 Desktop-Ubuntu mopidy[9199]: DEBUG    [HttpFrontend-11 (_actor_loop)] mopidy.zeroconf Zeroconf service 'Mopidy HTTP server on Desktop-Ubuntu' (_mopidy-http._tcp at []:6680): Published
okt 24 13:42:32 Desktop-Ubuntu mopidy[9199]: DEBUG    [HttpFrontend-11 (_actor_loop)] mopidy.zeroconf Zeroconf service 'Mopidy HTTP server on Desktop-Ubuntu' (_http._tcp at []:6680): Published
okt 24 13:42:32 Desktop-Ubuntu mopidy[9199]:     '/': <class 'tornado.web.RedirectHandler'>
okt 24 13:42:32 Desktop-Ubuntu mopidy[9199]:     '/mopidy/': <class 'mopidy.http.handlers.ClientListHandler'>
okt 24 13:42:32 Desktop-Ubuntu mopidy[9199]:     '/mopidy/(.+)': <class 'mopidy.http.handlers.StaticFileHandler'>
okt 24 13:42:32 Desktop-Ubuntu mopidy[9199]:     '/mopidy/rpc': <class 'mopidy.http.handlers.JsonRpcHandler'>
okt 24 13:42:32 Desktop-Ubuntu mopidy[9199]:     '/mopidy/ws/?': <class 'mopidy.http.handlers.WebSocketHandler'>
okt 24 13:42:32 Desktop-Ubuntu mopidy[9199]:     '/mopidy': <class 'mopidy.http.handlers.AddSlashHandler'>
okt 24 13:42:32 Desktop-Ubuntu mopidy[9199]:     '/iris/(.*)': <class 'mopidy_iris.handlers.ReactRouterHandler'>
okt 24 13:42:32 Desktop-Ubuntu mopidy[9199]:     '/iris/((.*)(?:css|js|json|map)$)': <class 'tornado.web.StaticFileHandler'>
okt 24 13:42:32 Desktop-Ubuntu mopidy[9199]:     '/iris/assets/(.*)': <class 'tornado.web.StaticFileHandler'>
okt 24 13:42:32 Desktop-Ubuntu mopidy[9199]:     '/iris/ws/?': <class 'mopidy_iris.handlers.WebsocketHandler'>
okt 24 13:42:32 Desktop-Ubuntu mopidy[9199]:     '/iris/http/([^/]*)': <class 'mopidy_iris.handlers.HttpHandler'>
okt 24 13:42:32 Desktop-Ubuntu mopidy[9199]:     '/iris': <class 'mopidy.http.handlers.AddSlashHandler'>
okt 24 13:42:32 Desktop-Ubuntu mopidy[9199]:     '/local/(.+)': <class 'mopidy_local.web.ImageHandler'>
okt 24 13:42:32 Desktop-Ubuntu mopidy[9199]:     '/local/(index.html)?': <class 'mopidy_local.web.IndexHandler'>
okt 24 13:42:32 Desktop-Ubuntu mopidy[9199]:     '/local': <class 'mopidy.http.handlers.AddSlashHandler'>
okt 24 13:42:32 Desktop-Ubuntu mopidy[9199]: DEBUG    [HttpServer] mopidy.http.actor HTTP routes from extensions:
okt 24 13:42:32 Desktop-Ubuntu mopidy[9199]: DEBUG    [HttpServer] mopidy.http.actor Default webclient is mopidy
okt 24 13:42:32 Desktop-Ubuntu mopidy[9199]: DEBUG    [HttpServer] mopidy.http.actor Loaded HTTP extension: mopidy
okt 24 13:42:32 Desktop-Ubuntu mopidy[9199]: DEBUG    [HttpServer] mopidy.http.actor Loaded HTTP extension: iris
okt 24 13:42:32 Desktop-Ubuntu mopidy[9199]: DEBUG    [HttpServer] mopidy.http.actor Loaded HTTP extension: local
okt 24 13:42:32 Desktop-Ubuntu mopidy[9199]: INFO     [MainThread] mopidy.commands Starting GLib mainloop
okt 24 13:42:32 Desktop-Ubuntu mopidy[9199]: DEBUG    [HttpServer] asyncio Using selector: EpollSelector
okt 24 13:42:32 Desktop-Ubuntu mopidy[9199]: TRACE    [MainThread] mopidy.internal.timer HttpFrontend took 1ms
okt 24 13:42:32 Desktop-Ubuntu mopidy[9199]: INFO     [HttpFrontend-11 (_actor_loop)] mopidy.http.actor HTTP server running at [::ffff:127.0.0.1]:6680
okt 24 13:42:32 Desktop-Ubuntu mopidy[9199]: DEBUG    [MainThread] pykka Starting HttpFrontend (urn:uuid:be67131a-2883-415a-8db9-6d26453f325f)
okt 24 13:42:32 Desktop-Ubuntu mopidy[9199]: DEBUG    [MainThread] pykka Registered HttpFrontend (urn:uuid:be67131a-2883-415a-8db9-6d26453f325f)
okt 24 13:42:32 Desktop-Ubuntu mopidy[9199]: DEBUG    [MainThread] mopidy.http.actor Starting HTTP server
okt 24 13:42:32 Desktop-Ubuntu mopidy[9199]: TRACE    [MainThread] mopidy.internal.timer IrisFrontend took 0ms
okt 24 13:42:32 Desktop-Ubuntu mopidy[9199]: INFO     [IrisFrontend-9 (_actor_loop)] mopidy_iris.core Starting Iris 3.64.1
okt 24 13:42:32 Desktop-Ubuntu mopidy[9199]: DEBUG    [MainThread] pykka Starting IrisFrontend (urn:uuid:2e8c6a13-163a-4df4-bf79-cbc82ea41e0e)
okt 24 13:42:32 Desktop-Ubuntu mopidy[9199]: DEBUG    [MainThread] pykka Registered IrisFrontend (urn:uuid:2e8c6a13-163a-4df4-bf79-cbc82ea41e0e)
okt 24 13:42:32 Desktop-Ubuntu mopidy[9199]: TRACE    [MainThread] mopidy.internal.timer YTMusicScrobbleFE took 0ms
okt 24 13:42:32 Desktop-Ubuntu mopidy[9199]: DEBUG    [MainThread] pykka Starting YTMusicScrobbleFE (urn:uuid:bf001144-be38-42ac-8fa2-aa215ac7c42d)
okt 24 13:42:32 Desktop-Ubuntu mopidy[9199]: DEBUG    [MainThread] pykka Registered YTMusicScrobbleFE (urn:uuid:bf001144-be38-42ac-8fa2-aa215ac7c42d)
okt 24 13:42:32 Desktop-Ubuntu mopidy[9199]: INFO     [MainThread] mopidy.commands Starting Mopidy frontends: YTMusicScrobbleFE, IrisFrontend, HttpFrontend
okt 24 13:42:32 Desktop-Ubuntu mopidy[9199]: DEBUG    [MainThread] pykka Starting Core (urn:uuid:af443314-68f8-404b-9fde-a9e7e2ab1b76)
okt 24 13:42:32 Desktop-Ubuntu mopidy[9199]: DEBUG    [MainThread] pykka Registered Core (urn:uuid:af443314-68f8-404b-9fde-a9e7e2ab1b76)
okt 24 13:42:32 Desktop-Ubuntu mopidy[9199]: INFO     [MainThread] mopidy.commands Starting Mopidy core
okt 24 13:42:32 Desktop-Ubuntu mopidy[9199]: TRACE    [MainThread] mopidy.internal.timer StreamBackend took 6ms
okt 24 13:42:32 Desktop-Ubuntu mopidy[9199]: DEBUG    [MainThread] pykka Starting StreamBackend (urn:uuid:ad3ef142-3b49-4b44-8dd7-4e504fa902f9)
okt 24 13:42:32 Desktop-Ubuntu mopidy[9199]: DEBUG    [MainThread] pykka Registered StreamBackend (urn:uuid:ad3ef142-3b49-4b44-8dd7-4e504fa902f9)
okt 24 13:42:32 Desktop-Ubuntu mopidy[9199]: INFO     [Audio-2 (_actor_loop)] mopidy.audio.actor Audio output set to "pulsesink server=127.0.0.1"
okt 24 13:42:32 Desktop-Ubuntu mopidy[9199]: TRACE    [MainThread] mopidy.internal.timer M3UBackend took 1ms
okt 24 13:42:32 Desktop-Ubuntu mopidy[9199]: DEBUG    [MainThread] pykka Starting M3UBackend (urn:uuid:45ef3004-7ea9-4964-b49e-f32e35011ed0)
okt 24 13:42:32 Desktop-Ubuntu mopidy[9199]: DEBUG    [MainThread] pykka Registered M3UBackend (urn:uuid:45ef3004-7ea9-4964-b49e-f32e35011ed0)
okt 24 13:42:32 Desktop-Ubuntu mopidy[9199]: TRACE    [MainThread] mopidy.internal.timer FileBackend took 3ms
okt 24 13:42:32 Desktop-Ubuntu mopidy[9199]: DEBUG    [MainThread] pykka Starting FileBackend (urn:uuid:57e2972b-c471-4f62-9e32-9179d6b3b935)
okt 24 13:42:32 Desktop-Ubuntu mopidy[9199]: DEBUG    [MainThread] pykka Registered FileBackend (urn:uuid:57e2972b-c471-4f62-9e32-9179d6b3b935)
okt 24 13:42:32 Desktop-Ubuntu mopidy[9199]: DEBUG    [MainThread] mopidy.file.library Failed expanding path ($XDG_MUSIC_DIR) from file/media_dirs config value.
okt 24 13:42:32 Desktop-Ubuntu mopidy[9199]: AttributeError: 'YTMusic' object has no attribute 'headers'
okt 24 13:42:32 Desktop-Ubuntu mopidy[9199]:     if 'x-goog-visitor-id' not in self.headers:
okt 24 13:42:32 Desktop-Ubuntu mopidy[9199]:   File "/usr/local/lib/python3.10/dist-packages/ytmusicapi/ytmusic.py", line 98, in __init__
okt 24 13:42:32 Desktop-Ubuntu mopidy[9199]:     self.api = YTMusic(self._ytmusicapi_auth_json)
okt 24 13:42:32 Desktop-Ubuntu mopidy[9199]:   File "/usr/local/lib/python3.10/dist-packages/mopidy_ytmusic/backend.py", line 65, in __init__
okt 24 13:42:32 Desktop-Ubuntu mopidy[9199]:     obj = cls(*args, **kwargs)
okt 24 13:42:32 Desktop-Ubuntu mopidy[9199]:   File "/usr/lib/python3/dist-packages/pykka/_actor.py", line 91, in start
okt 24 13:42:32 Desktop-Ubuntu mopidy[9199]:     backend = backend_class.start(
okt 24 13:42:32 Desktop-Ubuntu mopidy[9199]:   File "/usr/lib/python3/dist-packages/mopidy/commands.py", line 412, in start_backends
okt 24 13:42:32 Desktop-Ubuntu mopidy[9199]:     yield
okt 24 13:42:32 Desktop-Ubuntu mopidy[9199]:   File "/usr/lib/python3/dist-packages/mopidy/commands.py", line 248, in _actor_error_handling
okt 24 13:42:32 Desktop-Ubuntu mopidy[9199]: Traceback (most recent call last):
okt 24 13:42:32 Desktop-Ubuntu mopidy[9199]: ERROR    [MainThread] mopidy.commands Got un-handled exception from YTMusicBackend
okt 24 13:42:32 Desktop-Ubuntu mopidy[9199]: TRACE    [MainThread] mopidy.internal.timer LocalBackend took 4ms
okt 24 13:42:32 Desktop-Ubuntu mopidy[9199]: DEBUG    [MainThread] pykka Starting LocalBackend (urn:uuid:522ef81f-05d3-4a00-9b58-c7dfb667b2fc)
okt 24 13:42:32 Desktop-Ubuntu mopidy[9199]: DEBUG    [MainThread] pykka Registered LocalBackend (urn:uuid:522ef81f-05d3-4a00-9b58-c7dfb667b2fc)
okt 24 13:42:32 Desktop-Ubuntu mopidy[9199]: INFO     [MainThread] mopidy.commands Starting Mopidy backends: LocalBackend, YTMusicBackend, FileBackend, M3UBackend, StreamBackend
okt 24 13:42:32 Desktop-Ubuntu mopidy[9199]: DEBUG    [MainThread] pykka Starting Audio (urn:uuid:47f05b82-0a89-4bdd-8548-d26b220ea3bc)
okt 24 13:42:32 Desktop-Ubuntu mopidy[9199]: DEBUG    [MainThread] pykka Registered Audio (urn:uuid:47f05b82-0a89-4bdd-8548-d26b220ea3bc)
okt 24 13:42:32 Desktop-Ubuntu mopidy[9199]: INFO     [MainThread] mopidy.commands Starting Mopidy audio
okt 24 13:42:32 Desktop-Ubuntu mopidy[9199]: DEBUG    [MainThread] mopidy.commands Mixer volume left unchanged
okt 24 13:42:32 Desktop-Ubuntu mopidy[9199]: DEBUG    [MainThread] pykka Starting SoftwareMixer (urn:uuid:b1fd26d1-484f-4733-9133-0ebb16dea9cd)
okt 24 13:42:32 Desktop-Ubuntu mopidy[9199]: DEBUG    [MainThread] pykka Registered SoftwareMixer (urn:uuid:b1fd26d1-484f-4733-9133-0ebb16dea9cd)
okt 24 13:42:32 Desktop-Ubuntu mopidy[9199]: INFO     [MainThread] mopidy.commands Starting Mopidy mixer: SoftwareMixer
okt 24 13:42:32 Desktop-Ubuntu mopidy[9199]: DEBUG    [MainThread] mopidy.commands Available Mopidy mixers: SoftwareMixer
okt 24 13:42:32 Desktop-Ubuntu mopidy[9199]: INFO     [MainThread] mopidy.__main__ Disabled extensions: soundcloud, youtube
okt 24 13:42:32 Desktop-Ubuntu mopidy[9199]: INFO     [MainThread] mopidy.__main__ Enabled extensions: local, http, file, iris, softwaremixer, ytmusic, stream, m3u
okt 24 13:42:32 Desktop-Ubuntu mopidy[9199]: DEBUG    [MainThread] mopidy.ext Validating extension: stream
okt 24 13:42:32 Desktop-Ubuntu mopidy[9199]: DEBUG    [MainThread] mopidy.ext Validating extension: softwaremixer
okt 24 13:42:32 Desktop-Ubuntu mopidy[9199]: DEBUG    [MainThread] mopidy.ext Validating extension: m3u
okt 24 13:42:32 Desktop-Ubuntu mopidy[9199]: DEBUG    [MainThread] mopidy.ext Validating extension: http
okt 24 13:42:32 Desktop-Ubuntu mopidy[9199]: DEBUG    [MainThread] mopidy.ext Validating extension: file
okt 24 13:42:32 Desktop-Ubuntu mopidy[9199]: DEBUG    [MainThread] mopidy.ext Validating extension: iris
okt 24 13:42:32 Desktop-Ubuntu mopidy[9199]: DEBUG    [MainThread] mopidy.ext Validating extension: ytmusic
okt 24 13:42:32 Desktop-Ubuntu mopidy[9199]: DEBUG    [MainThread] mopidy.ext Validating extension: soundcloud
okt 24 13:42:32 Desktop-Ubuntu mopidy[9199]: DEBUG    [MainThread] mopidy.ext Validating extension: local
okt 24 13:42:32 Desktop-Ubuntu mopidy[9199]: DEBUG    [MainThread] mopidy.ext Validating extension: youtube
okt 24 13:42:32 Desktop-Ubuntu mopidy[9199]: WARNING  [MainThread] mopidy.config Ignoring config section 'jukebox' because no matching extension was found
okt 24 13:42:32 Desktop-Ubuntu mopidy[9199]: INFO     [MainThread] mopidy.config Loading config from command line options
okt 24 13:42:32 Desktop-Ubuntu mopidy[9199]: INFO     [MainThread] mopidy.config Loading config from file:///etc/mopidy/mopidy.conf
okt 24 13:42:32 Desktop-Ubuntu mopidy[9199]: INFO     [MainThread] mopidy.config Loading config from file:///usr/share/mopidy/conf.d/mopidy.conf
okt 24 13:42:32 Desktop-Ubuntu mopidy[9199]: INFO     [MainThread] mopidy.config Loading config from builtin defaults
okt 24 13:42:32 Desktop-Ubuntu mopidy[9199]: DEBUG    [MainThread] mopidy.config.keyring Fetching passwords from your keyring failed. Any passwords stored in the keyring will not be available. (org.freedesktop.DBus.Error.NotSupported: Unable to autolaunch a dbus-daemon without a $DISPLAY for X11)
okt 24 13:42:32 Desktop-Ubuntu mopidy[9199]: DEBUG    [MainThread] mopidy.ext Discovered extensions: youtube, local, soundcloud, ytmusic, iris, file, http, m3u, softwaremixer, stream
okt 24 13:42:32 Desktop-Ubuntu mopidy[9199]: DEBUG    [MainThread] mopidy.ext Loaded extension: Mopidy-Stream 3.3.0
okt 24 13:42:32 Desktop-Ubuntu mopidy[9199]: DEBUG    [MainThread] mopidy.ext Loading entry point: stream = mopidy.stream:Extension
okt 24 13:42:32 Desktop-Ubuntu mopidy[9199]: DEBUG    [MainThread] mopidy.ext Loaded extension: Mopidy-SoftwareMixer 3.3.0
okt 24 13:42:32 Desktop-Ubuntu mopidy[9199]: DEBUG    [MainThread] mopidy.ext Loading entry point: softwaremixer = mopidy.softwaremixer:Extension
okt 24 13:42:32 Desktop-Ubuntu mopidy[9199]: DEBUG    [MainThread] mopidy.ext Loaded extension: Mopidy-M3U 3.3.0
okt 24 13:42:32 Desktop-Ubuntu mopidy[9199]: DEBUG    [MainThread] mopidy.ext Loading entry point: m3u = mopidy.m3u:Extension
okt 24 13:42:32 Desktop-Ubuntu mopidy[9199]: DEBUG    [MainThread] mopidy.ext Loaded extension: Mopidy-HTTP 3.3.0
okt 24 13:42:32 Desktop-Ubuntu mopidy[9199]: DEBUG    [MainThread] mopidy.ext Loading entry point: http = mopidy.http:Extension
okt 24 13:42:32 Desktop-Ubuntu mopidy[9199]: DEBUG    [MainThread] mopidy.ext Loaded extension: Mopidy-File 3.3.0
okt 24 13:42:32 Desktop-Ubuntu mopidy[9199]: DEBUG    [MainThread] mopidy.ext Loading entry point: file = mopidy.file:Extension
okt 24 13:42:32 Desktop-Ubuntu mopidy[9199]: DEBUG    [MainThread] mopidy.ext Loaded extension: Mopidy-Iris 3.64.1
okt 24 13:42:32 Desktop-Ubuntu mopidy[9199]: DEBUG    [MainThread] mopidy.ext Loading entry point: iris = mopidy_iris:Extension
okt 24 13:42:32 Desktop-Ubuntu mopidy[9199]: DEBUG    [MainThread] mopidy.ext Loaded extension: Mopidy-YTMusic 0.3.7
okt 24 13:42:32 Desktop-Ubuntu mopidy[9199]: DEBUG    [MainThread] mopidy.ext Loading entry point: ytmusic = mopidy_ytmusic:Extension
okt 24 13:42:32 Desktop-Ubuntu mopidy[9199]: DEBUG    [MainThread] mopidy.ext Loaded extension: Mopidy-SoundCloud 3.0.1
okt 24 13:42:32 Desktop-Ubuntu mopidy[9199]: DEBUG    [MainThread] mopidy.ext Loading entry point: soundcloud = mopidy_soundcloud:Extension
okt 24 13:42:32 Desktop-Ubuntu mopidy[9199]: DEBUG    [MainThread] mopidy.ext Loaded extension: Mopidy-Local 3.2.1
okt 24 13:42:32 Desktop-Ubuntu mopidy[9199]: DEBUG    [MainThread] mopidy.ext Loading entry point: local = mopidy_local:Extension
okt 24 13:42:32 Desktop-Ubuntu mopidy[9199]: DEBUG    [MainThread] mopidy.ext Loaded extension: Mopidy-YouTube 3.6.1
okt 24 13:42:32 Desktop-Ubuntu mopidy[9199]: DEBUG    [MainThread] mopidy.ext Loading entry point: youtube = mopidy_youtube:Extension
okt 24 13:42:32 Desktop-Ubuntu mopidy[9199]: INFO     [MainThread] mopidy.__main__ Starting Mopidy 3.3.0
okt 24 13:42:32 Desktop-Ubuntu systemd[1]: Started Mopidy music server.
okt 24 13:42:32 Desktop-Ubuntu systemd[1]: Starting Mopidy music server...
okt 24 13:42:32 Desktop-Ubuntu systemd[1]: Stopped Mopidy music server.
okt 24 13:42:32 Desktop-Ubuntu systemd[1]: mopidy.service: Deactivated successfully.
okt 24 13:42:32 Desktop-Ubuntu mopidy[9074]: Failed loading provided credentials. Make sure to provide a string or a file path. Reason: Expecting value: line 1 column 1 (char 0)
okt 24 13:42:32 Desktop-Ubuntu mopidy[9074]: DEBUG    [MainThread] mopidy.internal.process All actors stopped.
okt 24 13:42:32 Desktop-Ubuntu mopidy[9074]: DEBUG    [SoftwareMixer-1 (_actor_loop)] pykka Stopped SoftwareMixer (urn:uuid:9247fa34-da1a-46e6-ae1d-d2711627dcfd)
okt 24 13:42:32 Desktop-Ubuntu mopidy[9074]: DEBUG    [SoftwareMixer-1 (_actor_loop)] pykka Unregistered SoftwareMixer (urn:uuid:9247fa34-da1a-46e6-ae1d-d2711627dcfd)
okt 24 13:42:32 Desktop-Ubuntu mopidy[9074]: DEBUG    [MainThread] mopidy.internal.process Stopping 1 instance(s) of SoftwareMixer
okt 24 13:42:32 Desktop-Ubuntu mopidy[9074]: INFO     [MainThread] mopidy.commands Stopping Mopidy mixer
okt 24 13:42:32 Desktop-Ubuntu mopidy[9074]: DEBUG    [Audio-2 (_actor_loop)] pykka Stopped Audio (urn:uuid:3fdc4f44-e688-4c6a-9c44-55a5ffae88fc)
okt 24 13:42:32 Desktop-Ubuntu mopidy[9074]: DEBUG    [Audio-2 (_actor_loop)] pykka Unregistered Audio (urn:uuid:3fdc4f44-e688-4c6a-9c44-55a5ffae88fc)
okt 24 13:42:32 Desktop-Ubuntu mopidy[9074]: DEBUG    [MainThread] mopidy.internal.process Stopping 1 instance(s) of Audio
okt 24 13:42:32 Desktop-Ubuntu mopidy[9074]: INFO     [MainThread] mopidy.commands Stopping Mopidy audio
okt 24 13:42:32 Desktop-Ubuntu mopidy[9074]: DEBUG    [StreamBackend-5 (_actor_loop)] pykka Stopped StreamBackend (urn:uuid:8c66c4de-06d8-4911-861c-92afc9864c97)
okt 24 13:42:32 Desktop-Ubuntu mopidy[9074]: DEBUG    [StreamBackend-5 (_actor_loop)] pykka Unregistered StreamBackend (urn:uuid:8c66c4de-06d8-4911-861c-92afc9864c97)
okt 24 13:42:32 Desktop-Ubuntu mopidy[9074]: DEBUG    [MainThread] mopidy.internal.process Stopping 1 instance(s) of StreamBackend
okt 24 13:42:32 Desktop-Ubuntu mopidy[9074]: DEBUG    [M3UBackend-4 (_actor_loop)] pykka Stopped M3UBackend (urn:uuid:9e8e1afd-3b11-4e63-96ce-67fd61e20235)
okt 24 13:42:32 Desktop-Ubuntu mopidy[9074]: DEBUG    [M3UBackend-4 (_actor_loop)] pykka Unregistered M3UBackend (urn:uuid:9e8e1afd-3b11-4e63-96ce-67fd61e20235)
okt 24 13:42:32 Desktop-Ubuntu mopidy[9074]: DEBUG    [MainThread] mopidy.internal.process Stopping 1 instance(s) of M3UBackend
okt 24 13:42:32 Desktop-Ubuntu mopidy[9074]: DEBUG    [FileBackend-3 (_actor_loop)] pykka Stopped FileBackend (urn:uuid:08b22bca-75c7-4542-9584-c15246e6ca36)
okt 24 13:42:32 Desktop-Ubuntu mopidy[9074]: DEBUG    [FileBackend-3 (_actor_loop)] pykka Unregistered FileBackend (urn:uuid:08b22bca-75c7-4542-9584-c15246e6ca36)
okt 24 13:42:32 Desktop-Ubuntu mopidy[9074]: DEBUG    [MainThread] mopidy.internal.process Stopping 1 instance(s) of FileBackend
okt 24 13:42:32 Desktop-Ubuntu mopidy[9074]: DEBUG    [MainThread] mopidy.internal.process Stopping 0 instance(s) of YTMusicBackend
okt 24 13:42:32 Desktop-Ubuntu mopidy[9074]: INFO     [MainThread] mopidy.commands Stopping Mopidy backends
okt 24 13:42:32 Desktop-Ubuntu mopidy[9074]: DEBUG    [Core-6 (_actor_loop)] pykka Stopped Core (urn:uuid:fe9d21c4-ae57-45f6-8b6f-2fe6b0fd3dc0)
okt 24 13:42:32 Desktop-Ubuntu mopidy[9074]: DEBUG    [Core-6 (_actor_loop)] pykka Unregistered Core (urn:uuid:fe9d21c4-ae57-45f6-8b6f-2fe6b0fd3dc0)
okt 24 13:42:32 Desktop-Ubuntu mopidy[9074]: DEBUG    [MainThread] mopidy.internal.process Stopping 1 instance(s) of Core
okt 24 13:42:32 Desktop-Ubuntu mopidy[9074]: INFO     [MainThread] mopidy.commands Stopping Mopidy core
okt 24 13:42:32 Desktop-Ubuntu mopidy[9074]: DEBUG    [HttpServer] mopidy.http.actor Stopped HTTP server
okt 24 13:42:32 Desktop-Ubuntu mopidy[9074]: DEBUG    [HttpFrontend-10 (_actor_loop)] mopidy.http.actor Stopping HTTP server
okt 24 13:42:32 Desktop-Ubuntu mopidy[9074]: DEBUG    [HttpFrontend-10 (_actor_loop)] mopidy.zeroconf Zeroconf service 'Mopidy HTTP server on Desktop-Ubuntu' (_mopidy-http._tcp at []:6680): Unpublished
okt 24 13:42:32 Desktop-Ubuntu mopidy[9074]: DEBUG    [HttpFrontend-10 (_actor_loop)] mopidy.zeroconf Zeroconf service 'Mopidy HTTP server on Desktop-Ubuntu' (_http._tcp at []:6680): Unpublished
okt 24 13:42:32 Desktop-Ubuntu mopidy[9074]: DEBUG    [HttpFrontend-10 (_actor_loop)] pykka Stopped HttpFrontend (urn:uuid:a536ce1f-1f6c-4977-a513-9225433fcb6f)
okt 24 13:42:32 Desktop-Ubuntu mopidy[9074]: DEBUG    [HttpFrontend-10 (_actor_loop)] pykka Unregistered HttpFrontend (urn:uuid:a536ce1f-1f6c-4977-a513-9225433fcb6f)
okt 24 13:42:32 Desktop-Ubuntu mopidy[9074]: DEBUG    [MainThread] mopidy.internal.process Stopping 1 instance(s) of HttpFrontend
okt 24 13:42:32 Desktop-Ubuntu mopidy[9074]: INFO     [IrisFrontend-8 (_actor_loop)] mopidy_iris.core Stopping Iris
okt 24 13:42:32 Desktop-Ubuntu mopidy[9074]: DEBUG    [IrisFrontend-8 (_actor_loop)] pykka Stopped IrisFrontend (urn:uuid:be852634-af15-48a8-90e2-292c05dfe19c)
okt 24 13:42:32 Desktop-Ubuntu mopidy[9074]: DEBUG    [IrisFrontend-8 (_actor_loop)] pykka Unregistered IrisFrontend (urn:uuid:be852634-af15-48a8-90e2-292c05dfe19c)
okt 24 13:42:32 Desktop-Ubuntu mopidy[9074]: DEBUG    [MainThread] mopidy.internal.process Stopping 1 instance(s) of IrisFrontend
okt 24 13:42:32 Desktop-Ubuntu mopidy[9074]: DEBUG    [YTMusicScrobbleFE-7 (_actor_loop)] pykka Stopped YTMusicScrobbleFE (urn:uuid:fc8c4274-4bb6-453d-832e-d6522fb7ae9d)
okt 24 13:42:32 Desktop-Ubuntu mopidy[9074]: DEBUG    [YTMusicScrobbleFE-7 (_actor_loop)] pykka Unregistered YTMusicScrobbleFE (urn:uuid:fc8c4274-4bb6-453d-832e-d6522fb7ae9d)
okt 24 13:42:32 Desktop-Ubuntu mopidy[9074]: DEBUG    [MainThread] mopidy.internal.process Stopping 1 instance(s) of YTMusicScrobbleFE
okt 24 13:42:32 Desktop-Ubuntu mopidy[9074]: INFO     [MainThread] mopidy.commands Stopping Mopidy frontends
okt 24 13:42:32 Desktop-Ubuntu systemd[1]: Stopping Mopidy music server...
okt 24 13:42:32 Desktop-Ubuntu mopidy[9074]: INFO     [MainThread] mopidy.commands GLib mainloop got SIGTERM. Exiting...
okt 24 13:42:25 Desktop-Ubuntu mopidy[9074]: DEBUG    [HttpServer] mopidy_iris.core {'id': 166661174500866, 'jsonrpc': '2.0', 'method': 'get_version', 'result': {'version': {'current': '3.64.1', 'latest': '3.64.1', 'is_root': False, 'upgrade_available': False}}, 'recipient': 'PHPMZ71SACQA'}
okt 24 13:42:25 Desktop-Ubuntu mopidy[9074]: DEBUG    [HttpServer] mopidy_iris.handlers Iris websocket message received: {"jsonrpc":"2.0","id":166661174500866,"method":"get_version"}
okt 24 13:42:24 Desktop-Ubuntu mopidy[9074]: DEBUG    [HttpServer] mopidy_iris.core {'id': 166661174450753, 'jsonrpc': '2.0', 'method': 'get_queue_metadata', 'result': {'queue_metadata': {}}, 'recipient': 'PHPMZ71SACQA'}
okt 24 13:42:24 Desktop-Ubuntu mopidy[9074]: DEBUG    [HttpServer] mopidy_iris.handlers Iris websocket message received: {"jsonrpc":"2.0","id":166661174450753,"method":"get_queue_metadata"}
okt 24 13:42:24 Desktop-Ubuntu mopidy[9074]: DEBUG    [HttpServer] mopidy_iris.core {'id': 166661174450630, 'jsonrpc': '2.0', 'method': 'get_pinned', 'result': {'pinned': []}, 'recipient': 'PHPMZ71SACQA'}
okt 24 13:42:24 Desktop-Ubuntu mopidy[9074]: DEBUG    [HttpServer] mopidy_iris.handlers Iris websocket message received: {"jsonrpc":"2.0","id":166661174450630,"method":"get_pinned"}
okt 24 13:42:24 Desktop-Ubuntu mopidy[9074]: DEBUG    [HttpServer] mopidy_iris.core {'id': 166661174450561, 'jsonrpc': '2.0', 'method': 'get_commands', 'result': {'commands': {}}, 'recipient': 'PHPMZ71SACQA'}
okt 24 13:42:24 Desktop-Ubuntu mopidy[9074]: DEBUG    [HttpServer] mopidy_iris.handlers Iris websocket message received: {"jsonrpc":"2.0","id":166661174450561,"method":"get_commands"}
okt 24 13:42:24 Desktop-Ubuntu mopidy[9074]: DEBUG    [HttpServer] mopidy_iris.core {'id': 166661174450435, 'jsonrpc': '2.0', 'method': 'get_radio', 'result': {'radio': {'enabled': 0, 'seed_artists': [], 'seed_genres': [], 'seed_tracks': [], 'results': []}}, 'recipient': 'PHPMZ71SACQA'}
okt 24 13:42:24 Desktop-Ubuntu mopidy[9074]: DEBUG    [HttpServer] mopidy_iris.handlers Iris websocket message received: {"jsonrpc":"2.0","id":166661174450435,"method":"get_radio"}
okt 24 13:42:24 Desktop-Ubuntu mopidy[9074]: DEBUG    [HttpServer] mopidy_iris.core {'id': 166661174450376, 'jsonrpc': '2.0', 'method': 'get_shared_config', 'result': {'shared_config': {}}, 'recipient': 'PHPMZ71SACQA'}
okt 24 13:42:24 Desktop-Ubuntu mopidy[9074]: DEBUG    [HttpServer] mopidy_iris.handlers Iris websocket message received: {"jsonrpc":"2.0","id":166661174450376,"method":"get_shared_config"}
okt 24 13:42:24 Desktop-Ubuntu mopidy[9074]: DEBUG    [HttpServer] mopidy_iris.core {'id': 166661174450215, 'jsonrpc': '2.0', 'method': 'get_config', 'result': {'config': {'is_root': False, 'spotify_username': False, 'country': 'NZ', 'locale': 'en_NZ', 'snapcast_enabled': True, 'snapcast_host': 'localhost', 'snapcast_port': '1780', 'snapcast_ssl': False, 'snapcast_stream': 'Default', 'spotify_authorization_url': 'https://jamesbarnsley.co.nz/iris/auth_spotify.php', 'lastfm_authorization_url': 'https://jamesbarnsley.co.nz/iris/auth_lastfm.php', 'genius_authorization_url': 'https://jamesbarnsley.co.nz/iris/auth_genius.php', 'shared_config': {}}}, 'recipient': 'PHPMZ71SACQA'}
okt 24 13:42:24 Desktop-Ubuntu mopidy[9074]: DEBUG    [HttpServer] mopidy_iris.handlers Iris websocket message received: {"jsonrpc":"2.0","id":166661174450215,"method":"get_config"}
okt 24 13:42:24 Desktop-Ubuntu mopidy[9074]: DEBUG    [HttpServer] mopidy_iris.core {'id': 166661174450195, 'jsonrpc': '2.0', 'method': 'update_connection', 'result': {'connection': {'connection_id': 'PHPMZ71SACQA', 'ip': '127.0.0.1', 'created': '2022-10-24 13:42:24', 'username': 166656148284185, 'client_id': 166656148284193}}, 'recipient': 'PHPMZ71SACQA'}
okt 24 13:42:24 Desktop-Ubuntu mopidy[9074]: DEBUG    [HttpServer] mopidy_iris.core {'method': 'connection_changed', 'params': {'connection': {'connection_id': 'PHPMZ71SACQA', 'ip': '127.0.0.1', 'created': '2022-10-24 13:42:24', 'username': 166656148284185, 'client_id': 166656148284193}}}
okt 24 13:42:24 Desktop-Ubuntu mopidy[9074]: DEBUG    [HttpServer] mopidy_iris.handlers Iris websocket message received: {"jsonrpc":"2.0","id":166661174450195,"method":"update_connection","params":{"username":166656148284185,"client_id":166656148284193}}
okt 24 13:42:24 Desktop-Ubuntu mopidy[9074]: DEBUG    [HttpServer] mopidy_iris.core {'method': 'connection_added', 'params': {'connection': {'connection_id': 'PHPMZ71SACQA', 'ip': '127.0.0.1', 'created': '2022-10-24 13:42:24'}}}
okt 24 13:42:24 Desktop-Ubuntu mopidy[9074]: DEBUG    [HttpServer] mopidy_iris.core <mopidy_iris.handlers.WebsocketHandler object at 0x7f4bddcd29e0>
okt 24 13:42:24 Desktop-Ubuntu mopidy[9074]: DEBUG    [HttpServer] mopidy_iris.core Connection added
okt 24 13:42:24 Desktop-Ubuntu mopidy[9074]: INFO     [HttpServer] tornado.access 101 GET /iris/ws/ (127.0.0.1) 0.52ms
okt 24 13:42:20 Desktop-Ubuntu mopidy[9074]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 61, "result": null}'
okt 24 13:42:20 Desktop-Ubuntu mopidy[9074]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.playback.get_stream_title","params":{},"jsonrpc":"2.0","id":61}'
okt 24 13:42:20 Desktop-Ubuntu mopidy[9074]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 60, "result": ["file", "http", "https", "m3u", "rtsp"]}'
okt 24 13:42:20 Desktop-Ubuntu mopidy[9074]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.get_uri_schemes","params":{},"jsonrpc":"2.0","id":60}'
okt 24 13:42:20 Desktop-Ubuntu mopidy[9074]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 59, "result": 0}'
okt 24 13:42:20 Desktop-Ubuntu mopidy[9074]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.playback.get_time_position","params":{},"jsonrpc":"2.0","id":59}'
okt 24 13:42:20 Desktop-Ubuntu mopidy[9074]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 58, "result": []}'
okt 24 13:42:20 Desktop-Ubuntu mopidy[9074]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_tl_tracks","params":{},"jsonrpc":"2.0","id":58}'
okt 24 13:42:20 Desktop-Ubuntu mopidy[9074]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 57, "result": false}'
okt 24 13:42:20 Desktop-Ubuntu mopidy[9074]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_repeat","params":{},"jsonrpc":"2.0","id":57}'
okt 24 13:42:20 Desktop-Ubuntu mopidy[9074]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 56, "result": false}'
okt 24 13:42:20 Desktop-Ubuntu mopidy[9074]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_random","params":{},"jsonrpc":"2.0","id":56}'
okt 24 13:42:20 Desktop-Ubuntu mopidy[9074]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 55, "result": false}'
okt 24 13:42:20 Desktop-Ubuntu mopidy[9074]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_consume","params":{},"jsonrpc":"2.0","id":55}'
okt 24 13:42:20 Desktop-Ubuntu mopidy[9074]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 54, "result": false}'
okt 24 13:42:20 Desktop-Ubuntu mopidy[9074]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.mixer.get_mute","params":{},"jsonrpc":"2.0","id":54}'
okt 24 13:42:20 Desktop-Ubuntu mopidy[9074]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 53, "result": 100}'
okt 24 13:42:20 Desktop-Ubuntu mopidy[9074]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.mixer.get_volume","params":{},"jsonrpc":"2.0","id":53}'
okt 24 13:42:20 Desktop-Ubuntu mopidy[9074]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 52, "result": "stopped"}'
okt 24 13:42:20 Desktop-Ubuntu mopidy[9074]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.playback.get_state","params":{},"jsonrpc":"2.0","id":52}'
okt 24 13:42:20 Desktop-Ubuntu mopidy[9074]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 51, "result": null}'
okt 24 13:42:20 Desktop-Ubuntu mopidy[9074]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.playback.get_current_tl_track","params":{},"jsonrpc":"2.0","id":51}'
okt 24 13:42:20 Desktop-Ubuntu mopidy[9074]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 50, "result": {"core.get_uri_schemes": {"description": "Get list of URI schemes we can handle", "params": []}, "core.get_version": {"description": "Get version of the Mopidy core API", "params": []}, "core.history.get_history": {"description": "Get the track history.\\n\\nThe timestamps are milliseconds since epoch.\\n\\n:returns: the track history\\n:rtype: list of (timestamp, :class:`mopidy.models.Ref`) tuples", "params": []}, "core.history.get_length": {"description": "Get the number of tracks in the history.\\n\\n:returns: the history length\\n:rtype: int", "params": []}, "core.library.browse": {"description": "Browse directories and tracks at the given ``uri``.\\n\\n``uri`` is a string which represents some directory belonging to a\\nbackend. To get the intial root directories for backends pass\\n:class:`None` as the URI.\\n\\nReturns a list of :class:`mopidy.models.Ref` objects for the\\ndirectories and tracks at the given ``uri``.\\n\\nThe :class:`~mopidy.models.Ref` objects representing tracks keep the\\ntrack\'s original URI. A matching pair of objects can look like this::\\n\\n    Track(uri=\'dummy:/foo.mp3\', name=\'foo\', artists=..., album=...)\\n    Ref.track(uri=\'dummy:/foo.mp3\', name=\'foo\')\\n\\nThe :class:`~mopidy.models.Ref` objects representing directories have\\nbackend specific URIs. These are opaque values, so no one but the\\nbackend that created them should try and derive any meaning from them.\\nThe only valid exception to this is checking the scheme, as it is used\\nto route browse requests to the correct backend.\\n\\nFor example, the dummy library\'s ``/bar`` directory could be returned\\nlike this::\\n\\n    Ref.directory(uri=\'dummy:directory:/bar\', name=\'bar\')\\n\\n:param string uri: URI to browse\\n:rtype: list of :class:`mopidy.models.Ref`\\n\\n.. versionadded:: 0.18", "params": [{"name": "uri"}]}, "core.library.get_distinct": {"description": "List distinct values for a given field from the library.\\n\\nThis has mainly been added to support the list commands the MPD\\nprotocol supports in a more sane fashion. Other frontends are not\\nrecommended to use this method.\\n\\n:param string field: Any one of ``uri``, ``track_name``, ``album``,\\n    ``artist``, ``albumartist``, ``composer``, ``performer``,\\n    ``track_no``, ``genre``, ``date``, ``comment``, ``disc_no``,\\n    ``musicbrainz_albumid``, ``musicbrainz_artistid``, or\\n    ``musicbrainz_trackid``.\\n:param dict query: Query to use for limiting results, see\\n    :meth:`search` for details about the query format.\\n:rtype: set of values corresponding to the requested field type.\\n\\n.. versionadded:: 1.0", "params": [{"name": "field"}, {"name": "query", "default": null}]}, "core.library.get_images": {"description": "Lookup the images for the given URIs\\n\\nBackends can use this to return image URIs for any URI they know about\\nbe it tracks, albums, playlists. The lookup result is a dictionary\\nmapping the provided URIs to lists of images.\\n\\nUnknown URIs or URIs the corresponding backend couldn\'t find anything\\nfor will simply return an empty list for that URI.\\n\\n:param uris: list of URIs to find images for\\n:type uris: list of string\\n:rtype: {uri: tuple of :class:`mopidy.models.Image`}\\n\\n.. versionadded:: 1.0", "params": [{"name": "uris"}]}, "core.library.lookup": {"description": "Lookup the given URIs.\\n\\nIf the URI expands to multiple tracks, the returned list will contain\\nthem all.\\n\\n:param uris: track URIs\\n:type uris: list of string\\n:rtype: {uri: list of :class:`mopidy.models.Track`}", "params": [{"name": "uris"}]}, "core.library.refresh": {"description": "Refresh library. Limit to URI and below if an URI is given.\\n\\n:param uri: directory or track URI\\n:type uri: string", "params": [{"name": "uri", "default": null}]}, "core.library.search": {"description": "Search the library for tracks where ``field`` contains ``values``.\\n\\n``field`` can be one of ``uri``, ``track_name``, ``album``, ``artist``,\\n``albumartist``, ``composer``, ``performer``, ``track_no``, ``genre``,\\n``date``, ``comment``, ``disc_no``, ``musicbrainz_albumid``,\\n``musicbrainz_artistid``, ``musicbrainz_trackid`` or ``any``.\\n\\nIf ``uris`` is given, the search is limited to results from within the\\nURI roots. For example passing ``uris=[\'file:\']`` will limit the search\\nto the local backend.\\n\\nExamples::\\n\\n    # Returns results matching \'a\' in any backend\\n    search({\'any\': [\'a\']})\\n\\n    # Returns results matching artist \'xyz\' in any backend\\n    search({\'artist\': [\'xyz\']})\\n\\n    # Returns results matching \'a\' and \'b\' and artist \'xyz\' in any\\n    # backend\\n    search({\'any\': [\'a\', \'b\'], \'artist\': [\'xyz\']})\\n\\n    # Returns results matching \'a\' if within the given URI roots\\n    # \\"file:///media/music\\" and \\"spotify:\\"\\n    search({\'any\': [\'a\']}, uris=[\'file:///media/music\', \'spotify:\'])\\n\\n    # Returns results matching artist \'xyz\' and \'abc\' in any backend\\n    search({\'artist\': [\'xyz\', \'abc\']})\\n\\n:param query: one or more queries to search for\\n:type query: dict\\n:param uris: zero or more URI roots to limit the search to\\n:type uris: list of string or :class:`None`\\n:param exact: if the search should use exact matching\\n:type exact: :class:`bool`\\n:rtype: list of :class:`mopidy.models.SearchResult`\\n\\n.. versionadded:: 1.0\\n    The ``exact`` keyword argument.", "params": [{"name": "query"}, {"name": "uris", "default": null}, {"name": "exact", "default": false}]}, "core.mixer.get_mute": {"description": "Get mute state.\\n\\n:class:`True` if muted, :class:`False` unmuted, :class:`None` if\\nunknown.", "params": []}, "core.mixer.get_volume": {"description": "Get the volume.\\n\\nInteger in range [0..100] or :class:`None` if unknown.\\n\\nThe volume scale is linear.", "params": []}, "core.mixer.set_mute": {"description": "Set mute state.\\n\\n:class:`True` to mute, :class:`False` to unmute.\\n\\nReturns :class:`True` if call is successful, otherwise :class:`False`.", "params": [{"name": "mute"}]}, "core.mixer.set_volume": {"description": "Set the volume.\\n\\nThe volume is defined as an integer in range [0..100].\\n\\nThe volume scale is linear.\\n\\nReturns :class:`True` if call is successful, otherwise :class:`False`.", "params": [{"name": "volume"}]}, "core.playback.get_current_tl_track": {"description": "Get the currently playing or selected track.\\n\\nReturns a :class:`mopidy.models.TlTrack` or :class:`None`.", "params": []}, "core.playback.get_current_tlid": {"description": "Get the currently playing or selected TLID.\\n\\nExtracted from :meth:`get_current_tl_track` for convenience.\\n\\nReturns a :class:`int` or :class:`None`.\\n\\n.. versionadded:: 1.1", "params": []}, "core.playback.get_current_track": {"description": "Get the currently playing or selected track.\\n\\nExtracted from :meth:`get_current_tl_track` for convenience.\\n\\nReturns a :class:`mopidy.models.Track` or :class:`None`.", "params": []}, "core.playback.get_state": {"description": "Get The playback state.", "params": []}, "core.playback.get_stream_title": {"description": "Get the current stream title or :class:`None`.", "params": []}, "core.playback.get_time_position": {"description": "Get time position in milliseconds.", "params": []}, "core.playback.next": {"description": "Change to the next track.\\n\\nThe current playback state will be kept. If it was playing, playing\\nwill continue. If it was paused, it will still be paused, etc.", "params": []}, "core.playback.pause": {"description": "Pause playback.", "params": []}, "core.playback.play": {"description": "Play the given track, or if the given tl_track and tlid is\\n:class:`None`, play the currently active track.\\n\\nNote that the track **must** already be in the tracklist.\\n\\n.. deprecated:: 3.0\\n    The ``tl_track`` argument. Use ``tlid`` instead.\\n\\n:param tl_track: track to play\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:param tlid: TLID of the track to play\\n:type tlid: :class:`int` or :class:`None`", "params": [{"name": "tl_track", "default": null}, {"name": "tlid", "default": null}]}, "core.playback.previous": {"description": "Change to the previous track.\\n\\nThe current playback state will be kept. If it was playing, playing\\nwill continue. If it was paused, it will still be paused, etc.", "params": []}, "core.playback.resume": {"description": "If paused, resume playing the current track.", "params": []}, "core.playback.seek": {"description": "Seeks to time position given in milliseconds.\\n\\n:param time_position: time position in milliseconds\\n:type time_position: int\\n:rtype: :class:`True` if successful, else :class:`False`", "params": [{"name": "time_position"}]}, "core.playback.set_state": {"description": "Set the playback state.\\n\\nMust be :attr:`PLAYING`, :attr:`PAUSED`, or :attr:`STOPPED`.\\n\\nPossible states and transitions:\\n\\n.. digraph:: state_transitions\\n\\n    \\"STOPPED\\" -> \\"PLAYING\\" [ label=\\"play\\" ]\\n    \\"STOPPED\\" -> \\"PAUSED\\" [ label=\\"pause\\" ]\\n    \\"PLAYING\\" -> \\"STOPPED\\" [ label=\\"stop\\" ]\\n    \\"PLAYING\\" -> \\"PAUSED\\" [ label=\\"pause\\" ]\\n    \\"PLAYING\\" -> \\"PLAYING\\" [ label=\\"play\\" ]\\n    \\"PAUSED\\" -> \\"PLAYING\\" [ label=\\"resume\\" ]\\n    \\"PAUSED\\" -> \\"STOPPED\\" [ label=\\"stop\\" ]", "params": [{"name": "new_state"}]}, "core.playback.stop": {"description": "Stop playing.", "params": []}, "core.playlists.as_list": {"description": "Get a list of the currently available playlists.\\n\\nReturns a list of :class:`~mopidy.models.Ref` objects referring to the\\nplaylists. In other words, no information about the playlists\' content\\nis given.\\n\\n:rtype: list of :class:`mopidy.models.Ref`\\n\\n.. versionadded:: 1.0", "params": []}, "core.playlists.create": {"description": "Create a new playlist.\\n\\nIf ``uri_scheme`` matches an URI scheme handled by a current backend,\\nthat backend is asked to create the playlist. If ``uri_scheme`` is\\n:class:`None` or doesn\'t match a current backend, the first backend is\\nasked to create the playlist.\\n\\nAll new playlists must be created by calling this method, and **not**\\nby creating new instances of :class:`mopidy.models.Playlist`.\\n\\n:param name: name of the new playlist\\n:type name: string\\n:param uri_scheme: use the backend matching the URI scheme\\n:type uri_scheme: string\\n:rtype: :class:`mopidy.models.Playlist` or :class:`None`", "params": [{"name": "name"}, {"name": "uri_scheme", "default": null}]}, "core.playlists.delete": {"description": "Delete playlist identified by the URI.\\n\\nIf the URI doesn\'t match the URI schemes handled by the current\\nbackends, nothing happens.\\n\\nReturns :class:`True` if deleted, :class:`False` otherwise.\\n\\n:param uri: URI of the playlist to delete\\n:type uri: string\\n:rtype: :class:`bool`\\n\\n.. versionchanged:: 2.2\\n    Return type defined.", "params": [{"name": "uri"}]}, "core.playlists.get_items": {"description": "Get the items in a playlist specified by ``uri``.\\n\\nReturns a list of :class:`~mopidy.models.Ref` objects referring to the\\nplaylist\'s items.\\n\\nIf a playlist with the given ``uri`` doesn\'t exist, it returns\\n:class:`None`.\\n\\n:rtype: list of :class:`mopidy.models.Ref`, or :class:`None`\\n\\n.. versionadded:: 1.0", "params": [{"name": "uri"}]}, "core.playlists.get_uri_schemes": {"description": "Get the list of URI schemes that support playlists.\\n\\n:rtype: list of string\\n\\n.. versionadded:: 2.0", "params": []}, "core.playlists.lookup": {"description": "Lookup playlist with given URI in both the set of playlists and in any\\nother playlist sources. Returns :class:`None` if not found.\\n\\n:param uri: playlist URI\\n:type uri: string\\n:rtype: :class:`mopidy.models.Playlist` or :class:`None`", "params": [{"name": "uri"}]}, "core.playlists.refresh": {"description": "Refresh the playlists in :attr:`playlists`.\\n\\nIf ``uri_scheme`` is :class:`None`, all backends are asked to refresh.\\nIf ``uri_scheme`` is an URI scheme handled by a backend, only that\\nbackend is asked to refresh. If ``uri_scheme`` doesn\'t match any\\ncurrent backend, nothing happens.\\n\\n:param uri_scheme: limit to the backend matching the URI scheme\\n:type uri_scheme: string", "params": [{"name": "uri_scheme", "default": null}]}, "core.playlists.save": {"description": "Save the playlist.\\n\\nFor a playlist to be saveable, it must have the ``uri`` attribute set.\\nYou must not set the ``uri`` atribute yourself, but use playlist\\nobjects returned by :meth:`create` or retrieved from :attr:`playlists`,\\nwhich will always give you saveable playlists.\\n\\nThe method returns the saved playlist. The return playlist may differ\\nfrom the saved playlist. E.g. if the playlist name was changed, the\\nreturned playlist may have a different URI. The caller of this method\\nmust throw away the playlist sent to this method, and use the\\nreturned playlist instead.\\n\\nIf the playlist\'s URI isn\'t set or doesn\'t match the URI scheme of a\\ncurrent backend, nothing is done and :class:`None` is returned.\\n\\n:param playlist: the playlist\\n:type playlist: :class:`mopidy.models.Playlist`\\n:rtype: :class:`mopidy.models.Playlist` or :class:`None`", "params": [{"name": "playlist"}]}, "core.tracklist.add": {"description": "Add tracks to the tracklist.\\n\\nIf ``uris`` is given instead of ``tracks``, the URIs are\\nlooked up in the library and the resulting tracks are added to the\\ntracklist.\\n\\nIf ``at_position`` is given, the tracks are inserted at the given\\nposition in the tracklist. If ``at_position`` is not given, the tracks\\nare appended to the end of the tracklist.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.\\n\\n:param tracks: tracks to add\\n:type tracks: list of :class:`mopidy.models.Track` or :class:`None`\\n:param at_position: position in tracklist to add tracks\\n:type at_position: int or :class:`None`\\n:param uris: list of URIs for tracks to add\\n:type uris: list of string or :class:`None`\\n:rtype: list of :class:`mopidy.models.TlTrack`\\n\\n.. versionadded:: 1.0\\n    The ``uris`` argument.\\n\\n.. deprecated:: 1.0\\n    The ``tracks`` argument. Use ``uris``.", "params": [{"name": "tracks", "default": null}, {"name": "at_position", "default": null}, {"name": "uris", "default": null}]}, "core.tracklist.clear": {"description": "Clear the tracklist.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.", "params": []}, "core.tracklist.eot_track": {"description": "The track that will be played after the given track.\\n\\nNot necessarily the same track as :meth:`next_track`.\\n\\n.. deprecated:: 3.0\\n    Use :meth:`get_eot_tlid` instead.\\n\\n:param tl_track: the reference track\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:rtype: :class:`mopidy.models.TlTrack` or :class:`None`", "params": [{"name": "tl_track"}]}, "core.tracklist.filter": {"description": "Filter the tracklist by the given criteria.\\n\\nEach rule in the criteria consists of a model field and a list of\\nvalues to compare it against. If the model field matches any of the\\nvalues, it may be returned.\\n\\nOnly tracks that match all the given criteria are returned.\\n\\nExamples::\\n\\n    # Returns tracks with TLIDs 1, 2, 3, or 4 (tracklist ID)\\n    filter({\'tlid\': [1, 2, 3, 4]})\\n\\n    # Returns track with URIs \'xyz\' or \'abc\'\\n    filter({\'uri\': [\'xyz\', \'abc\']})\\n\\n    # Returns track with a matching TLIDs (1, 3 or 6) and a\\n    # matching URI (\'xyz\' or \'abc\')\\n    filter({\'tlid\': [1, 3, 6], \'uri\': [\'xyz\', \'abc\']})\\n\\n:param criteria: one or more rules to match by\\n:type criteria: dict, of (string, list) pairs\\n:rtype: list of :class:`mopidy.models.TlTrack`", "params": [{"name": "criteria"}]}, "core.tracklist.get_consume": {"description": "Get consume mode.\\n\\n:class:`True`\\n    Tracks are removed from the tracklist when they have been played.\\n:class:`False`\\n    Tracks are not removed from the tracklist.", "params": []}, "core.tracklist.get_eot_tlid": {"description": "The TLID of the track that will be played after the current track.\\n\\nNot necessarily the same TLID as returned by :meth:`get_next_tlid`.\\n\\n:rtype: :class:`int` or :class:`None`\\n\\n.. versionadded:: 1.1", "params": []}, "core.tracklist.get_length": {"description": "Get length of the tracklist.", "params": []}, "core.tracklist.get_next_tlid": {"description": "The tlid of the track that will be played if calling\\n:meth:`mopidy.core.PlaybackController.next()`.\\n\\nFor normal playback this is the next track in the tracklist. If repeat\\nis enabled the next track can loop around the tracklist. When random is\\nenabled this should be a random track, all tracks should be played once\\nbefore the tracklist repeats.\\n\\n:rtype: :class:`int` or :class:`None`\\n\\n.. versionadded:: 1.1", "params": []}, "core.tracklist.get_previous_tlid": {"description": "Returns the TLID of the track that will be played if calling\\n:meth:`mopidy.core.PlaybackController.previous()`.\\n\\nFor normal playback this is the previous track in the tracklist. If\\nrandom and/or consume is enabled it should return the current track\\ninstead.\\n\\n:rtype: :class:`int` or :class:`None`\\n\\n.. versionadded:: 1.1", "params": []}, "core.tracklist.get_random": {"description": "Get random mode.\\n\\n:class:`True`\\n    Tracks are selected at random from the tracklist.\\n:class:`False`\\n    Tracks are played in the order of the tracklist.", "params": []}, "core.tracklist.get_repeat": {"description": "Get repeat mode.\\n\\n:class:`True`\\n    The tracklist is played repeatedly.\\n:class:`False`\\n    The tracklist is played once.", "params": []}, "core.tracklist.get_single": {"description": "Get single mode.\\n\\n:class:`True`\\n    Playback is stopped after current song, unless in ``repeat`` mode.\\n:class:`False`\\n    Playback continues after current song.", "params": []}, "core.tracklist.get_tl_tracks": {"description": "Get tracklist as list of :class:`mopidy.models.TlTrack`.", "params": []}, "core.tracklist.get_tracks": {"description": "Get tracklist as list of :class:`mopidy.models.Track`.", "params": []}, "core.tracklist.get_version": {"description": "Get the tracklist version.\\n\\nInteger which is increased every time the tracklist is changed. Is not\\nreset before Mopidy is restarted.", "params": []}, "core.tracklist.index": {"description": "The position of the given track in the tracklist.\\n\\nIf neither *tl_track* or *tlid* is given we return the index of\\nthe currently playing track.\\n\\n:param tl_track: the track to find the index of\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:param tlid: TLID of the track to find the index of\\n:type tlid: :class:`int` or :class:`None`\\n:rtype: :class:`int` or :class:`None`\\n\\n.. versionadded:: 1.1\\n    The *tlid* parameter", "params": [{"name": "tl_track", "default": null}, {"name": "tlid", "default": null}]}, "core.tracklist.move": {"description": "Move the tracks in the slice ``[start:end]`` to ``to_position``.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.\\n\\n:param start: position of first track to move\\n:type start: int\\n:param end: position after last track to move\\n:type end: int\\n:param to_position: new position for the tracks\\n:type to_position: int", "params": [{"name": "start"}, {"name": "end"}, {"name": "to_position"}]}, "core.tracklist.next_track": {"description": "The track that will be played if calling\\n:meth:`mopidy.core.PlaybackController.next()`.\\n\\nFor normal playback this is the next track in the tracklist. If repeat\\nis enabled the next track can loop around the tracklist. When random is\\nenabled this should be a random track, all tracks should be played once\\nbefore the tracklist repeats.\\n\\n.. deprecated:: 3.0\\n    Use :meth:`get_next_tlid` instead.\\n\\n:param tl_track: the reference track\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:rtype: :class:`mopidy.models.TlTrack` or :class:`None`", "params": [{"name": "tl_track"}]}, "core.tracklist.previous_track": {"description": "Returns the track that will be played if calling\\n:meth:`mopidy.core.PlaybackController.previous()`.\\n\\nFor normal playback this is the previous track in the tracklist. If\\nrandom and/or consume is enabled it should return the current track\\ninstead.\\n\\n.. deprecated:: 3.0\\n    Use :meth:`get_previous_tlid` instead.\\n\\n:param tl_track: the reference track\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:rtype: :class:`mopidy.models.TlTrack` or :class:`None`", "params": [{"name": "tl_track"}]}, "core.tracklist.remove": {"description": "Remove the matching tracks from the tracklist.\\n\\nUses :meth:`filter()` to lookup the tracks to remove.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.\\n\\n:param criteria: one or more rules to match by\\n:type criteria: dict, of (string, list) pairs\\n:rtype: list of :class:`mopidy.models.TlTrack` that were removed", "params": [{"name": "criteria"}]}, "core.tracklist.set_consume": {"description": "Set consume mode.\\n\\n:class:`True`\\n    Tracks are removed from the tracklist when they have been played.\\n:class:`False`\\n    Tracks are not removed from the tracklist.", "params": [{"name": "value"}]}, "core.tracklist.set_random": {"description": "Set random mode.\\n\\n:class:`True`\\n    Tracks are selected at random from the tracklist.\\n:class:`False`\\n    Tracks are played in the order of the tracklist.", "params": [{"name": "value"}]}, "core.tracklist.set_repeat": {"description": "Set repeat mode.\\n\\nTo repeat a single track, set both ``repeat`` and ``single``.\\n\\n:class:`True`\\n    The tracklist is played repeatedly.\\n:class:`False`\\n    The tracklist is played once.", "params": [{"name": "value"}]}, "core.tracklist.set_single": {"description": "Set single mode.\\n\\n:class:`True`\\n    Playback is stopped after current song, unless in ``repeat`` mode.\\n:class:`False`\\n    Playback continues after current song.", "params": [{"name": "value"}]}, "core.tracklist.shuffle": {"description": "Shuffles the entire tracklist. If ``start`` and ``end`` is given only\\nshuffles the slice ``[start:end]``.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.\\n\\n:param start: position of first track to shuffle\\n:type start: int or :class:`None`\\n:param end: position after last track to shuffle\\n:type end: int or :class:`None`", "params": [{"name": "start", "default": null}, {"name": "end", "default": null}]}, "core.tracklist.slice": {"description": "Returns a slice of the tracklist, limited by the given start and end\\npositions.\\n\\n:param start: position of first track to include in slice\\n:type start: int\\n:param end: position after last track to include in slice\\n:type end: int\\n:rtype: :class:`mopidy.models.TlTrack`", "params": [{"name": "start"}, {"name": "end"}]}}}'
okt 24 13:42:20 Desktop-Ubuntu mopidy[9074]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.describe","jsonrpc":"2.0","id":50}'
okt 24 13:42:20 Desktop-Ubuntu mopidy[9074]: DEBUG    [HttpServer] mopidy.http.handlers New WebSocket connection from 127.0.0.1
okt 24 13:42:20 Desktop-Ubuntu mopidy[9074]: INFO     [HttpServer] tornado.access 101 GET /mopidy/ws/ (127.0.0.1) 19.30ms
okt 24 13:42:20 Desktop-Ubuntu mopidy[9074]: DEBUG    [HttpFrontend-10 (_actor_loop)] mopidy.zeroconf Zeroconf service 'Mopidy HTTP server on Desktop-Ubuntu' (_mopidy-http._tcp at []:6680): Published
okt 24 13:42:20 Desktop-Ubuntu mopidy[9074]: DEBUG    [HttpFrontend-10 (_actor_loop)] mopidy.zeroconf Zeroconf service 'Mopidy HTTP server on Desktop-Ubuntu' (_http._tcp at []:6680): Published
okt 24 13:42:20 Desktop-Ubuntu mopidy[9074]:     '/': <class 'tornado.web.RedirectHandler'>
okt 24 13:42:20 Desktop-Ubuntu mopidy[9074]:     '/mopidy/': <class 'mopidy.http.handlers.ClientListHandler'>
okt 24 13:42:20 Desktop-Ubuntu mopidy[9074]:     '/mopidy/(.+)': <class 'mopidy.http.handlers.StaticFileHandler'>
okt 24 13:42:20 Desktop-Ubuntu mopidy[9074]:     '/mopidy/rpc': <class 'mopidy.http.handlers.JsonRpcHandler'>
okt 24 13:42:20 Desktop-Ubuntu mopidy[9074]:     '/mopidy/ws/?': <class 'mopidy.http.handlers.WebSocketHandler'>
okt 24 13:42:20 Desktop-Ubuntu mopidy[9074]:     '/mopidy': <class 'mopidy.http.handlers.AddSlashHandler'>
okt 24 13:42:20 Desktop-Ubuntu mopidy[9074]:     '/iris/(.*)': <class 'mopidy_iris.handlers.ReactRouterHandler'>
okt 24 13:42:20 Desktop-Ubuntu mopidy[9074]:     '/iris/((.*)(?:css|js|json|map)$)': <class 'tornado.web.StaticFileHandler'>
okt 24 13:42:20 Desktop-Ubuntu mopidy[9074]:     '/iris/assets/(.*)': <class 'tornado.web.StaticFileHandler'>
okt 24 13:42:20 Desktop-Ubuntu mopidy[9074]:     '/iris/ws/?': <class 'mopidy_iris.handlers.WebsocketHandler'>
okt 24 13:42:20 Desktop-Ubuntu mopidy[9074]:     '/iris/http/([^/]*)': <class 'mopidy_iris.handlers.HttpHandler'>
okt 24 13:42:20 Desktop-Ubuntu mopidy[9074]:     '/iris': <class 'mopidy.http.handlers.AddSlashHandler'>
okt 24 13:42:20 Desktop-Ubuntu mopidy[9074]: DEBUG    [HttpServer] mopidy.http.actor HTTP routes from extensions:
okt 24 13:42:20 Desktop-Ubuntu mopidy[9074]: DEBUG    [HttpServer] mopidy.http.actor Default webclient is mopidy
okt 24 13:42:20 Desktop-Ubuntu mopidy[9074]: DEBUG    [HttpServer] mopidy.http.actor Loaded HTTP extension: mopidy
okt 24 13:42:20 Desktop-Ubuntu mopidy[9074]: DEBUG    [HttpServer] mopidy.http.actor Loaded HTTP extension: iris
okt 24 13:42:20 Desktop-Ubuntu mopidy[9074]: DEBUG    [HttpServer] asyncio Using selector: EpollSelector
okt 24 13:42:20 Desktop-Ubuntu mopidy[9074]: INFO     [MainThread] mopidy.commands Starting GLib mainloop
okt 24 13:42:20 Desktop-Ubuntu mopidy[9074]: TRACE    [MainThread] mopidy.internal.timer HttpFrontend took 0ms
okt 24 13:42:20 Desktop-Ubuntu mopidy[9074]: INFO     [HttpFrontend-10 (_actor_loop)] mopidy.http.actor HTTP server running at [::ffff:127.0.0.1]:6680
okt 24 13:42:20 Desktop-Ubuntu mopidy[9074]: DEBUG    [MainThread] pykka Starting HttpFrontend (urn:uuid:a536ce1f-1f6c-4977-a513-9225433fcb6f)
okt 24 13:42:20 Desktop-Ubuntu mopidy[9074]: DEBUG    [MainThread] pykka Registered HttpFrontend (urn:uuid:a536ce1f-1f6c-4977-a513-9225433fcb6f)
okt 24 13:42:20 Desktop-Ubuntu mopidy[9074]: DEBUG    [MainThread] mopidy.http.actor Starting HTTP server
okt 24 13:42:20 Desktop-Ubuntu mopidy[9074]: TRACE    [MainThread] mopidy.internal.timer IrisFrontend took 0ms
okt 24 13:42:20 Desktop-Ubuntu mopidy[9074]: INFO     [IrisFrontend-8 (_actor_loop)] mopidy_iris.core Starting Iris 3.64.1
okt 24 13:42:20 Desktop-Ubuntu mopidy[9074]: DEBUG    [MainThread] pykka Starting IrisFrontend (urn:uuid:be852634-af15-48a8-90e2-292c05dfe19c)
okt 24 13:42:20 Desktop-Ubuntu mopidy[9074]: DEBUG    [MainThread] pykka Registered IrisFrontend (urn:uuid:be852634-af15-48a8-90e2-292c05dfe19c)
okt 24 13:42:20 Desktop-Ubuntu mopidy[9074]: TRACE    [MainThread] mopidy.internal.timer YTMusicScrobbleFE took 0ms
okt 24 13:42:20 Desktop-Ubuntu mopidy[9074]: DEBUG    [MainThread] pykka Starting YTMusicScrobbleFE (urn:uuid:fc8c4274-4bb6-453d-832e-d6522fb7ae9d)
okt 24 13:42:20 Desktop-Ubuntu mopidy[9074]: DEBUG    [MainThread] pykka Registered YTMusicScrobbleFE (urn:uuid:fc8c4274-4bb6-453d-832e-d6522fb7ae9d)
okt 24 13:42:20 Desktop-Ubuntu mopidy[9074]: INFO     [MainThread] mopidy.commands Starting Mopidy frontends: YTMusicScrobbleFE, IrisFrontend, HttpFrontend
okt 24 13:42:20 Desktop-Ubuntu mopidy[9074]: DEBUG    [MainThread] pykka Starting Core (urn:uuid:fe9d21c4-ae57-45f6-8b6f-2fe6b0fd3dc0)
okt 24 13:42:20 Desktop-Ubuntu mopidy[9074]: DEBUG    [MainThread] pykka Registered Core (urn:uuid:fe9d21c4-ae57-45f6-8b6f-2fe6b0fd3dc0)
okt 24 13:42:20 Desktop-Ubuntu mopidy[9074]: INFO     [MainThread] mopidy.commands Starting Mopidy core
okt 24 13:42:20 Desktop-Ubuntu mopidy[9074]: TRACE    [MainThread] mopidy.internal.timer StreamBackend took 5ms
okt 24 13:42:20 Desktop-Ubuntu mopidy[9074]: DEBUG    [MainThread] pykka Starting StreamBackend (urn:uuid:8c66c4de-06d8-4911-861c-92afc9864c97)
okt 24 13:42:20 Desktop-Ubuntu mopidy[9074]: DEBUG    [MainThread] pykka Registered StreamBackend (urn:uuid:8c66c4de-06d8-4911-861c-92afc9864c97)
okt 24 13:42:20 Desktop-Ubuntu mopidy[9074]: INFO     [Audio-2 (_actor_loop)] mopidy.audio.actor Audio output set to "pulsesink server=127.0.0.1"
okt 24 13:42:20 Desktop-Ubuntu mopidy[9074]: TRACE    [MainThread] mopidy.internal.timer M3UBackend took 2ms
okt 24 13:42:20 Desktop-Ubuntu mopidy[9074]: DEBUG    [MainThread] pykka Starting M3UBackend (urn:uuid:9e8e1afd-3b11-4e63-96ce-67fd61e20235)
okt 24 13:42:20 Desktop-Ubuntu mopidy[9074]: DEBUG    [MainThread] pykka Registered M3UBackend (urn:uuid:9e8e1afd-3b11-4e63-96ce-67fd61e20235)
okt 24 13:42:20 Desktop-Ubuntu mopidy[9074]: TRACE    [MainThread] mopidy.internal.timer FileBackend took 2ms
okt 24 13:42:20 Desktop-Ubuntu mopidy[9074]: DEBUG    [MainThread] pykka Starting FileBackend (urn:uuid:08b22bca-75c7-4542-9584-c15246e6ca36)
okt 24 13:42:20 Desktop-Ubuntu mopidy[9074]: DEBUG    [MainThread] pykka Registered FileBackend (urn:uuid:08b22bca-75c7-4542-9584-c15246e6ca36)
okt 24 13:42:20 Desktop-Ubuntu mopidy[9074]: DEBUG    [MainThread] mopidy.file.library Failed expanding path ($XDG_MUSIC_DIR) from file/media_dirs config value.
okt 24 13:42:20 Desktop-Ubuntu mopidy[9074]: AttributeError: 'YTMusic' object has no attribute 'headers'
okt 24 13:42:20 Desktop-Ubuntu mopidy[9074]:     if 'x-goog-visitor-id' not in self.headers:
okt 24 13:42:20 Desktop-Ubuntu mopidy[9074]:   File "/usr/local/lib/python3.10/dist-packages/ytmusicapi/ytmusic.py", line 98, in __init__
okt 24 13:42:20 Desktop-Ubuntu mopidy[9074]:     self.api = YTMusic(self._ytmusicapi_auth_json)
okt 24 13:42:20 Desktop-Ubuntu mopidy[9074]:   File "/usr/local/lib/python3.10/dist-packages/mopidy_ytmusic/backend.py", line 65, in __init__
okt 24 13:42:20 Desktop-Ubuntu mopidy[9074]:     obj = cls(*args, **kwargs)
okt 24 13:42:20 Desktop-Ubuntu mopidy[9074]:   File "/usr/lib/python3/dist-packages/pykka/_actor.py", line 91, in start
okt 24 13:42:20 Desktop-Ubuntu mopidy[9074]:     backend = backend_class.start(
okt 24 13:42:20 Desktop-Ubuntu mopidy[9074]:   File "/usr/lib/python3/dist-packages/mopidy/commands.py", line 412, in start_backends
okt 24 13:42:20 Desktop-Ubuntu mopidy[9074]:     yield
okt 24 13:42:20 Desktop-Ubuntu mopidy[9074]:   File "/usr/lib/python3/dist-packages/mopidy/commands.py", line 248, in _actor_error_handling
okt 24 13:42:20 Desktop-Ubuntu mopidy[9074]: Traceback (most recent call last):
okt 24 13:42:20 Desktop-Ubuntu mopidy[9074]: ERROR    [MainThread] mopidy.commands Got un-handled exception from YTMusicBackend
okt 24 13:42:20 Desktop-Ubuntu mopidy[9074]: INFO     [MainThread] mopidy.commands Starting Mopidy backends: YTMusicBackend, FileBackend, M3UBackend, StreamBackend
okt 24 13:42:20 Desktop-Ubuntu mopidy[9074]: DEBUG    [MainThread] pykka Starting Audio (urn:uuid:3fdc4f44-e688-4c6a-9c44-55a5ffae88fc)
okt 24 13:42:20 Desktop-Ubuntu mopidy[9074]: DEBUG    [MainThread] pykka Registered Audio (urn:uuid:3fdc4f44-e688-4c6a-9c44-55a5ffae88fc)
okt 24 13:42:20 Desktop-Ubuntu mopidy[9074]: INFO     [MainThread] mopidy.commands Starting Mopidy audio
okt 24 13:42:20 Desktop-Ubuntu mopidy[9074]: DEBUG    [MainThread] mopidy.commands Mixer volume left unchanged
okt 24 13:42:20 Desktop-Ubuntu mopidy[9074]: DEBUG    [MainThread] pykka Starting SoftwareMixer (urn:uuid:9247fa34-da1a-46e6-ae1d-d2711627dcfd)
okt 24 13:42:20 Desktop-Ubuntu mopidy[9074]: DEBUG    [MainThread] pykka Registered SoftwareMixer (urn:uuid:9247fa34-da1a-46e6-ae1d-d2711627dcfd)
okt 24 13:42:20 Desktop-Ubuntu mopidy[9074]: INFO     [MainThread] mopidy.commands Starting Mopidy mixer: SoftwareMixer
okt 24 13:42:20 Desktop-Ubuntu mopidy[9074]: DEBUG    [MainThread] mopidy.commands Available Mopidy mixers: SoftwareMixer
okt 24 13:42:20 Desktop-Ubuntu mopidy[9074]: WARNING  [MainThread] mopidy.__main__ Please fix the extension configuration errors or disable the extensions to silence these messages.
okt 24 13:42:20 Desktop-Ubuntu mopidy[9074]: WARNING  [MainThread] mopidy.__main__   local/media_dir must be set.
okt 24 13:42:20 Desktop-Ubuntu mopidy[9074]: WARNING  [MainThread] mopidy.__main__ Found local configuration errors. The extension has been automatically disabled:
okt 24 13:42:20 Desktop-Ubuntu mopidy[9074]: INFO     [MainThread] mopidy.__main__ Disabled extensions: soundcloud, youtube, local
okt 24 13:42:20 Desktop-Ubuntu mopidy[9074]: INFO     [MainThread] mopidy.__main__ Enabled extensions: softwaremixer, stream, file, iris, m3u, ytmusic, http
okt 24 13:42:20 Desktop-Ubuntu mopidy[9074]: DEBUG    [MainThread] mopidy.ext Validating extension: stream
okt 24 13:42:20 Desktop-Ubuntu mopidy[9074]: DEBUG    [MainThread] mopidy.ext Validating extension: softwaremixer
okt 24 13:42:20 Desktop-Ubuntu mopidy[9074]: DEBUG    [MainThread] mopidy.ext Validating extension: m3u
okt 24 13:42:20 Desktop-Ubuntu mopidy[9074]: DEBUG    [MainThread] mopidy.ext Validating extension: http
okt 24 13:42:20 Desktop-Ubuntu mopidy[9074]: DEBUG    [MainThread] mopidy.ext Validating extension: file
okt 24 13:42:19 Desktop-Ubuntu mopidy[9074]: DEBUG    [MainThread] mopidy.ext Validating extension: iris
okt 24 13:42:19 Desktop-Ubuntu mopidy[9074]: DEBUG    [MainThread] mopidy.ext Validating extension: ytmusic
okt 24 13:42:19 Desktop-Ubuntu mopidy[9074]: DEBUG    [MainThread] mopidy.ext Validating extension: soundcloud
okt 24 13:42:19 Desktop-Ubuntu mopidy[9074]: DEBUG    [MainThread] mopidy.ext Validating extension: local
okt 24 13:42:19 Desktop-Ubuntu mopidy[9074]: DEBUG    [MainThread] mopidy.ext Validating extension: youtube
okt 24 13:42:19 Desktop-Ubuntu mopidy[9074]: WARNING  [MainThread] mopidy.config Ignoring config section 'jukebox' because no matching extension was found
okt 24 13:42:19 Desktop-Ubuntu mopidy[9074]: INFO     [MainThread] mopidy.config Loading config from command line options
okt 24 13:42:19 Desktop-Ubuntu mopidy[9074]: INFO     [MainThread] mopidy.config Loading config from file:///etc/mopidy/mopidy.conf
okt 24 13:42:19 Desktop-Ubuntu mopidy[9074]: INFO     [MainThread] mopidy.config Loading config from file:///usr/share/mopidy/conf.d/mopidy.conf
okt 24 13:42:19 Desktop-Ubuntu mopidy[9074]: INFO     [MainThread] mopidy.config Loading config from builtin defaults
okt 24 13:42:19 Desktop-Ubuntu mopidy[9074]: DEBUG    [MainThread] mopidy.config.keyring Fetching passwords from your keyring failed. Any passwords stored in the keyring will not be available. (org.freedesktop.DBus.Error.NotSupported: Unable to autolaunch a dbus-daemon without a $DISPLAY for X11)
okt 24 13:42:19 Desktop-Ubuntu mopidy[9074]: DEBUG    [MainThread] mopidy.ext Discovered extensions: youtube, local, soundcloud, ytmusic, iris, file, http, m3u, softwaremixer, stream
okt 24 13:42:19 Desktop-Ubuntu mopidy[9074]: DEBUG    [MainThread] mopidy.ext Loaded extension: Mopidy-Stream 3.3.0
okt 24 13:42:19 Desktop-Ubuntu mopidy[9074]: DEBUG    [MainThread] mopidy.ext Loading entry point: stream = mopidy.stream:Extension
okt 24 13:42:19 Desktop-Ubuntu mopidy[9074]: DEBUG    [MainThread] mopidy.ext Loaded extension: Mopidy-SoftwareMixer 3.3.0
okt 24 13:42:19 Desktop-Ubuntu mopidy[9074]: DEBUG    [MainThread] mopidy.ext Loading entry point: softwaremixer = mopidy.softwaremixer:Extension
okt 24 13:42:19 Desktop-Ubuntu mopidy[9074]: DEBUG    [MainThread] mopidy.ext Loaded extension: Mopidy-M3U 3.3.0
okt 24 13:42:19 Desktop-Ubuntu mopidy[9074]: DEBUG    [MainThread] mopidy.ext Loading entry point: m3u = mopidy.m3u:Extension
okt 24 13:42:19 Desktop-Ubuntu mopidy[9074]: DEBUG    [MainThread] mopidy.ext Loaded extension: Mopidy-HTTP 3.3.0
okt 24 13:42:19 Desktop-Ubuntu mopidy[9074]: DEBUG    [MainThread] mopidy.ext Loading entry point: http = mopidy.http:Extension
okt 24 13:42:19 Desktop-Ubuntu mopidy[9074]: DEBUG    [MainThread] mopidy.ext Loaded extension: Mopidy-File 3.3.0
okt 24 13:42:19 Desktop-Ubuntu mopidy[9074]: DEBUG    [MainThread] mopidy.ext Loading entry point: file = mopidy.file:Extension
okt 24 13:42:19 Desktop-Ubuntu mopidy[9074]: DEBUG    [MainThread] mopidy.ext Loaded extension: Mopidy-Iris 3.64.1
okt 24 13:42:19 Desktop-Ubuntu mopidy[9074]: DEBUG    [MainThread] mopidy.ext Loading entry point: iris = mopidy_iris:Extension
okt 24 13:42:19 Desktop-Ubuntu mopidy[9074]: DEBUG    [MainThread] mopidy.ext Loaded extension: Mopidy-YTMusic 0.3.7
okt 24 13:42:19 Desktop-Ubuntu mopidy[9074]: DEBUG    [MainThread] mopidy.ext Loading entry point: ytmusic = mopidy_ytmusic:Extension
okt 24 13:42:19 Desktop-Ubuntu mopidy[9074]: DEBUG    [MainThread] mopidy.ext Loaded extension: Mopidy-SoundCloud 3.0.1
okt 24 13:42:19 Desktop-Ubuntu mopidy[9074]: DEBUG    [MainThread] mopidy.ext Loading entry point: soundcloud = mopidy_soundcloud:Extension
okt 24 13:42:19 Desktop-Ubuntu mopidy[9074]: DEBUG    [MainThread] mopidy.ext Loaded extension: Mopidy-Local 3.2.1
okt 24 13:42:19 Desktop-Ubuntu mopidy[9074]: DEBUG    [MainThread] mopidy.ext Loading entry point: local = mopidy_local:Extension
okt 24 13:42:19 Desktop-Ubuntu mopidy[9074]: DEBUG    [MainThread] mopidy.ext Loaded extension: Mopidy-YouTube 3.6.1
okt 24 13:42:19 Desktop-Ubuntu mopidy[9074]: DEBUG    [MainThread] mopidy.ext Loading entry point: youtube = mopidy_youtube:Extension
okt 24 13:42:19 Desktop-Ubuntu mopidy[9074]: INFO     [MainThread] mopidy.__main__ Starting Mopidy 3.3.0
okt 24 13:42:19 Desktop-Ubuntu systemd[1]: Started Mopidy music server.
okt 24 13:42:19 Desktop-Ubuntu systemd[1]: Starting Mopidy music server...
okt 24 13:42:19 Desktop-Ubuntu systemd[1]: Stopped Mopidy music server.
okt 24 13:42:19 Desktop-Ubuntu systemd[1]: mopidy.service: Deactivated successfully.
okt 24 13:42:19 Desktop-Ubuntu mopidy[8918]: Failed loading provided credentials. Make sure to provide a string or a file path. Reason: Expecting value: line 1 column 1 (char 0)
okt 24 13:42:19 Desktop-Ubuntu mopidy[8918]: DEBUG    [MainThread] mopidy.internal.process All actors stopped.
okt 24 13:42:19 Desktop-Ubuntu mopidy[8918]: DEBUG    [SoftwareMixer-1 (_actor_loop)] pykka Stopped SoftwareMixer (urn:uuid:c12c4b72-7f17-41bc-8715-76afe9a677aa)
okt 24 13:42:19 Desktop-Ubuntu mopidy[8918]: DEBUG    [SoftwareMixer-1 (_actor_loop)] pykka Unregistered SoftwareMixer (urn:uuid:c12c4b72-7f17-41bc-8715-76afe9a677aa)
okt 24 13:42:19 Desktop-Ubuntu mopidy[8918]: DEBUG    [MainThread] mopidy.internal.process Stopping 1 instance(s) of SoftwareMixer
okt 24 13:42:19 Desktop-Ubuntu mopidy[8918]: INFO     [MainThread] mopidy.commands Stopping Mopidy mixer
okt 24 13:42:19 Desktop-Ubuntu mopidy[8918]: DEBUG    [Audio-2 (_actor_loop)] pykka Stopped Audio (urn:uuid:4165b3cc-63d2-433d-b1d5-ea80b84027ca)
okt 24 13:42:19 Desktop-Ubuntu mopidy[8918]: DEBUG    [Audio-2 (_actor_loop)] pykka Unregistered Audio (urn:uuid:4165b3cc-63d2-433d-b1d5-ea80b84027ca)
okt 24 13:42:19 Desktop-Ubuntu mopidy[8918]: DEBUG    [MainThread] mopidy.internal.process Stopping 1 instance(s) of Audio
okt 24 13:42:19 Desktop-Ubuntu mopidy[8918]: INFO     [MainThread] mopidy.commands Stopping Mopidy audio
okt 24 13:42:19 Desktop-Ubuntu mopidy[8918]: DEBUG    [StreamBackend-5 (_actor_loop)] pykka Stopped StreamBackend (urn:uuid:cb24d0bb-14f4-4219-8dba-33de617f6dc4)
okt 24 13:42:19 Desktop-Ubuntu mopidy[8918]: DEBUG    [StreamBackend-5 (_actor_loop)] pykka Unregistered StreamBackend (urn:uuid:cb24d0bb-14f4-4219-8dba-33de617f6dc4)
okt 24 13:42:19 Desktop-Ubuntu mopidy[8918]: DEBUG    [MainThread] mopidy.internal.process Stopping 1 instance(s) of StreamBackend
okt 24 13:42:19 Desktop-Ubuntu mopidy[8918]: DEBUG    [M3UBackend-4 (_actor_loop)] pykka Stopped M3UBackend (urn:uuid:f6d79b66-f651-44a3-aad7-4220d9f7e41e)
okt 24 13:42:19 Desktop-Ubuntu mopidy[8918]: DEBUG    [M3UBackend-4 (_actor_loop)] pykka Unregistered M3UBackend (urn:uuid:f6d79b66-f651-44a3-aad7-4220d9f7e41e)
okt 24 13:42:19 Desktop-Ubuntu mopidy[8918]: DEBUG    [MainThread] mopidy.internal.process Stopping 1 instance(s) of M3UBackend
okt 24 13:42:19 Desktop-Ubuntu mopidy[8918]: DEBUG    [FileBackend-3 (_actor_loop)] pykka Stopped FileBackend (urn:uuid:5b3c4540-5480-447c-b37c-b7a1ce4d898e)
okt 24 13:42:19 Desktop-Ubuntu mopidy[8918]: DEBUG    [FileBackend-3 (_actor_loop)] pykka Unregistered FileBackend (urn:uuid:5b3c4540-5480-447c-b37c-b7a1ce4d898e)
okt 24 13:42:19 Desktop-Ubuntu mopidy[8918]: DEBUG    [HttpServer] mopidy.http.actor Stopped HTTP server
okt 24 13:42:19 Desktop-Ubuntu mopidy[8918]: DEBUG    [MainThread] mopidy.internal.process Stopping 1 instance(s) of FileBackend
okt 24 13:42:19 Desktop-Ubuntu mopidy[8918]: DEBUG    [MainThread] mopidy.internal.process Stopping 0 instance(s) of YTMusicBackend
okt 24 13:42:19 Desktop-Ubuntu mopidy[8918]: INFO     [MainThread] mopidy.commands Stopping Mopidy backends
okt 24 13:42:19 Desktop-Ubuntu mopidy[8918]: DEBUG    [Core-6 (_actor_loop)] pykka Stopped Core (urn:uuid:d1507165-f159-4923-9492-598ed8b14345)
okt 24 13:42:19 Desktop-Ubuntu mopidy[8918]: DEBUG    [Core-6 (_actor_loop)] pykka Unregistered Core (urn:uuid:d1507165-f159-4923-9492-598ed8b14345)
okt 24 13:42:19 Desktop-Ubuntu mopidy[8918]: DEBUG    [MainThread] mopidy.internal.process Stopping 1 instance(s) of Core
okt 24 13:42:19 Desktop-Ubuntu mopidy[8918]: INFO     [MainThread] mopidy.commands Stopping Mopidy core
okt 24 13:42:19 Desktop-Ubuntu mopidy[8918]: DEBUG    [HttpFrontend-10 (_actor_loop)] mopidy.http.actor Stopping HTTP server
okt 24 13:42:19 Desktop-Ubuntu mopidy[8918]: DEBUG    [HttpFrontend-10 (_actor_loop)] mopidy.zeroconf Zeroconf service 'Mopidy HTTP server on Desktop-Ubuntu' (_mopidy-http._tcp at []:6680): Unpublished
okt 24 13:42:19 Desktop-Ubuntu mopidy[8918]: DEBUG    [HttpFrontend-10 (_actor_loop)] mopidy.zeroconf Zeroconf service 'Mopidy HTTP server on Desktop-Ubuntu' (_http._tcp at []:6680): Unpublished
okt 24 13:42:19 Desktop-Ubuntu mopidy[8918]: DEBUG    [HttpFrontend-10 (_actor_loop)] pykka Stopped HttpFrontend (urn:uuid:e8a4a63c-d500-4298-bf42-b2a1559da85f)
okt 24 13:42:19 Desktop-Ubuntu mopidy[8918]: DEBUG    [HttpFrontend-10 (_actor_loop)] pykka Unregistered HttpFrontend (urn:uuid:e8a4a63c-d500-4298-bf42-b2a1559da85f)
okt 24 13:42:19 Desktop-Ubuntu mopidy[8918]: DEBUG    [MainThread] mopidy.internal.process Stopping 1 instance(s) of HttpFrontend
okt 24 13:42:19 Desktop-Ubuntu mopidy[8918]: INFO     [IrisFrontend-8 (_actor_loop)] mopidy_iris.core Stopping Iris
okt 24 13:42:19 Desktop-Ubuntu mopidy[8918]: DEBUG    [IrisFrontend-8 (_actor_loop)] pykka Stopped IrisFrontend (urn:uuid:e7b24e55-196a-407e-a145-161c67b3cbc1)
okt 24 13:42:19 Desktop-Ubuntu mopidy[8918]: DEBUG    [IrisFrontend-8 (_actor_loop)] pykka Unregistered IrisFrontend (urn:uuid:e7b24e55-196a-407e-a145-161c67b3cbc1)
okt 24 13:42:19 Desktop-Ubuntu mopidy[8918]: DEBUG    [MainThread] mopidy.internal.process Stopping 1 instance(s) of IrisFrontend
okt 24 13:42:19 Desktop-Ubuntu mopidy[8918]: DEBUG    [YTMusicScrobbleFE-7 (_actor_loop)] pykka Stopped YTMusicScrobbleFE (urn:uuid:c9a95270-8602-494f-b67f-f805106b7dd8)
okt 24 13:42:19 Desktop-Ubuntu mopidy[8918]: DEBUG    [YTMusicScrobbleFE-7 (_actor_loop)] pykka Unregistered YTMusicScrobbleFE (urn:uuid:c9a95270-8602-494f-b67f-f805106b7dd8)
okt 24 13:42:19 Desktop-Ubuntu mopidy[8918]: DEBUG    [MainThread] mopidy.internal.process Stopping 1 instance(s) of YTMusicScrobbleFE
okt 24 13:42:19 Desktop-Ubuntu mopidy[8918]: INFO     [MainThread] mopidy.commands Stopping Mopidy frontends
okt 24 13:42:19 Desktop-Ubuntu mopidy[8918]: INFO     [MainThread] mopidy.commands GLib mainloop got SIGTERM. Exiting...
okt 24 13:42:19 Desktop-Ubuntu systemd[1]: Stopping Mopidy music server...
okt 24 13:41:27 Desktop-Ubuntu mopidy[8918]: DEBUG    [HttpServer] mopidy_iris.core {'id': 166661168757779, 'jsonrpc': '2.0', 'method': 'get_version', 'result': {'version': {'current': '3.64.1', 'latest': '3.64.1', 'is_root': False, 'upgrade_available': False}}, 'recipient': 'ZFEUCCBFHIF3'}
okt 24 13:41:27 Desktop-Ubuntu mopidy[8918]: DEBUG    [HttpServer] mopidy_iris.handlers Iris websocket message received: {"jsonrpc":"2.0","id":166661168757779,"method":"get_version"}
okt 24 13:41:27 Desktop-Ubuntu mopidy[8918]: DEBUG    [HttpServer] mopidy_iris.core {'id': 166661168707567, 'jsonrpc': '2.0', 'method': 'get_queue_metadata', 'result': {'queue_metadata': {}}, 'recipient': 'ZFEUCCBFHIF3'}
okt 24 13:41:27 Desktop-Ubuntu mopidy[8918]: DEBUG    [HttpServer] mopidy_iris.handlers Iris websocket message received: {"jsonrpc":"2.0","id":166661168707567,"method":"get_queue_metadata"}
okt 24 13:41:27 Desktop-Ubuntu mopidy[8918]: DEBUG    [HttpServer] mopidy_iris.core {'id': 16666116870743, 'jsonrpc': '2.0', 'method': 'get_pinned', 'result': {'pinned': []}, 'recipient': 'ZFEUCCBFHIF3'}
okt 24 13:41:27 Desktop-Ubuntu mopidy[8918]: DEBUG    [HttpServer] mopidy_iris.handlers Iris websocket message received: {"jsonrpc":"2.0","id":16666116870743,"method":"get_pinned"}
okt 24 13:41:27 Desktop-Ubuntu mopidy[8918]: DEBUG    [HttpServer] mopidy_iris.core {'id': 166661168707383, 'jsonrpc': '2.0', 'method': 'get_commands', 'result': {'commands': {}}, 'recipient': 'ZFEUCCBFHIF3'}
okt 24 13:41:27 Desktop-Ubuntu mopidy[8918]: DEBUG    [HttpServer] mopidy_iris.handlers Iris websocket message received: {"jsonrpc":"2.0","id":166661168707383,"method":"get_commands"}
okt 24 13:41:27 Desktop-Ubuntu mopidy[8918]: DEBUG    [HttpServer] mopidy_iris.core {'id': 166661168707277, 'jsonrpc': '2.0', 'method': 'get_radio', 'result': {'radio': {'enabled': 0, 'seed_artists': [], 'seed_genres': [], 'seed_tracks': [], 'results': []}}, 'recipient': 'ZFEUCCBFHIF3'}
okt 24 13:41:27 Desktop-Ubuntu mopidy[8918]: DEBUG    [HttpServer] mopidy_iris.handlers Iris websocket message received: {"jsonrpc":"2.0","id":166661168707277,"method":"get_radio"}
okt 24 13:41:27 Desktop-Ubuntu mopidy[8918]: DEBUG    [HttpServer] mopidy_iris.core {'id': 166661168707186, 'jsonrpc': '2.0', 'method': 'get_shared_config', 'result': {'shared_config': {}}, 'recipient': 'ZFEUCCBFHIF3'}
okt 24 13:41:27 Desktop-Ubuntu mopidy[8918]: DEBUG    [HttpServer] mopidy_iris.handlers Iris websocket message received: {"jsonrpc":"2.0","id":166661168707186,"method":"get_shared_config"}
okt 24 13:41:27 Desktop-Ubuntu mopidy[8918]: DEBUG    [HttpServer] mopidy_iris.core {'id': 166661168707151, 'jsonrpc': '2.0', 'method': 'get_config', 'result': {'config': {'is_root': False, 'spotify_username': False, 'country': 'NZ', 'locale': 'en_NZ', 'snapcast_enabled': True, 'snapcast_host': 'localhost', 'snapcast_port': '1780', 'snapcast_ssl': False, 'snapcast_stream': 'Default', 'spotify_authorization_url': 'https://jamesbarnsley.co.nz/iris/auth_spotify.php', 'lastfm_authorization_url': 'https://jamesbarnsley.co.nz/iris/auth_lastfm.php', 'genius_authorization_url': 'https://jamesbarnsley.co.nz/iris/auth_genius.php', 'shared_config': {}}}, 'recipient': 'ZFEUCCBFHIF3'}
okt 24 13:41:27 Desktop-Ubuntu mopidy[8918]: DEBUG    [HttpServer] mopidy_iris.handlers Iris websocket message received: {"jsonrpc":"2.0","id":166661168707151,"method":"get_config"}
okt 24 13:41:27 Desktop-Ubuntu mopidy[8918]: DEBUG    [HttpServer] mopidy_iris.core {'id': 166661168706930, 'jsonrpc': '2.0', 'method': 'update_connection', 'result': {'connection': {'connection_id': 'ZFEUCCBFHIF3', 'ip': '127.0.0.1', 'created': '2022-10-24 13:41:27', 'username': 166656148284185, 'client_id': 166656148284193}}, 'recipient': 'ZFEUCCBFHIF3'}
okt 24 13:41:27 Desktop-Ubuntu mopidy[8918]: DEBUG    [HttpServer] mopidy_iris.core {'method': 'connection_changed', 'params': {'connection': {'connection_id': 'ZFEUCCBFHIF3', 'ip': '127.0.0.1', 'created': '2022-10-24 13:41:27', 'username': 166656148284185, 'client_id': 166656148284193}}}
okt 24 13:41:27 Desktop-Ubuntu mopidy[8918]: DEBUG    [HttpServer] mopidy_iris.handlers Iris websocket message received: {"jsonrpc":"2.0","id":166661168706930,"method":"update_connection","params":{"username":166656148284185,"client_id":166656148284193}}
okt 24 13:41:27 Desktop-Ubuntu mopidy[8918]: DEBUG    [HttpServer] mopidy_iris.core {'method': 'connection_added', 'params': {'connection': {'connection_id': 'ZFEUCCBFHIF3', 'ip': '127.0.0.1', 'created': '2022-10-24 13:41:27'}}}
okt 24 13:41:27 Desktop-Ubuntu mopidy[8918]: DEBUG    [HttpServer] mopidy_iris.core <mopidy_iris.handlers.WebsocketHandler object at 0x7f1378422770>
okt 24 13:41:27 Desktop-Ubuntu mopidy[8918]: DEBUG    [HttpServer] mopidy_iris.core Connection added
okt 24 13:41:27 Desktop-Ubuntu mopidy[8918]: INFO     [HttpServer] tornado.access 101 GET /iris/ws/ (127.0.0.1) 0.51ms
okt 24 13:41:23 Desktop-Ubuntu mopidy[8918]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 49, "result": null}'
okt 24 13:41:23 Desktop-Ubuntu mopidy[8918]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.playback.get_stream_title","params":{},"jsonrpc":"2.0","id":49}'
okt 24 13:41:23 Desktop-Ubuntu mopidy[8918]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 48, "result": ["file", "http", "https", "m3u", "rtsp"]}'
okt 24 13:41:23 Desktop-Ubuntu mopidy[8918]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.get_uri_schemes","params":{},"jsonrpc":"2.0","id":48}'
okt 24 13:41:23 Desktop-Ubuntu mopidy[8918]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 47, "result": 0}'
okt 24 13:41:23 Desktop-Ubuntu mopidy[8918]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.playback.get_time_position","params":{},"jsonrpc":"2.0","id":47}'
okt 24 13:41:23 Desktop-Ubuntu mopidy[8918]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 46, "result": []}'
okt 24 13:41:23 Desktop-Ubuntu mopidy[8918]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_tl_tracks","params":{},"jsonrpc":"2.0","id":46}'
okt 24 13:41:23 Desktop-Ubuntu mopidy[8918]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 45, "result": false}'
okt 24 13:41:23 Desktop-Ubuntu mopidy[8918]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_repeat","params":{},"jsonrpc":"2.0","id":45}'
okt 24 13:41:23 Desktop-Ubuntu mopidy[8918]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 44, "result": false}'
okt 24 13:41:23 Desktop-Ubuntu mopidy[8918]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_random","params":{},"jsonrpc":"2.0","id":44}'
okt 24 13:41:23 Desktop-Ubuntu mopidy[8918]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 43, "result": false}'
okt 24 13:41:23 Desktop-Ubuntu mopidy[8918]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_consume","params":{},"jsonrpc":"2.0","id":43}'
okt 24 13:41:23 Desktop-Ubuntu mopidy[8918]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 42, "result": false}'
okt 24 13:41:23 Desktop-Ubuntu mopidy[8918]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.mixer.get_mute","params":{},"jsonrpc":"2.0","id":42}'
okt 24 13:41:23 Desktop-Ubuntu mopidy[8918]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 41, "result": 100}'
okt 24 13:41:23 Desktop-Ubuntu mopidy[8918]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.mixer.get_volume","params":{},"jsonrpc":"2.0","id":41}'
okt 24 13:41:23 Desktop-Ubuntu mopidy[8918]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 40, "result": "stopped"}'
okt 24 13:41:23 Desktop-Ubuntu mopidy[8918]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.playback.get_state","params":{},"jsonrpc":"2.0","id":40}'
okt 24 13:41:23 Desktop-Ubuntu mopidy[8918]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 39, "result": null}'
okt 24 13:41:23 Desktop-Ubuntu mopidy[8918]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.playback.get_current_tl_track","params":{},"jsonrpc":"2.0","id":39}'
okt 24 13:41:23 Desktop-Ubuntu mopidy[8918]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 38, "result": {"core.get_uri_schemes": {"description": "Get list of URI schemes we can handle", "params": []}, "core.get_version": {"description": "Get version of the Mopidy core API", "params": []}, "core.history.get_history": {"description": "Get the track history.\\n\\nThe timestamps are milliseconds since epoch.\\n\\n:returns: the track history\\n:rtype: list of (timestamp, :class:`mopidy.models.Ref`) tuples", "params": []}, "core.history.get_length": {"description": "Get the number of tracks in the history.\\n\\n:returns: the history length\\n:rtype: int", "params": []}, "core.library.browse": {"description": "Browse directories and tracks at the given ``uri``.\\n\\n``uri`` is a string which represents some directory belonging to a\\nbackend. To get the intial root directories for backends pass\\n:class:`None` as the URI.\\n\\nReturns a list of :class:`mopidy.models.Ref` objects for the\\ndirectories and tracks at the given ``uri``.\\n\\nThe :class:`~mopidy.models.Ref` objects representing tracks keep the\\ntrack\'s original URI. A matching pair of objects can look like this::\\n\\n    Track(uri=\'dummy:/foo.mp3\', name=\'foo\', artists=..., album=...)\\n    Ref.track(uri=\'dummy:/foo.mp3\', name=\'foo\')\\n\\nThe :class:`~mopidy.models.Ref` objects representing directories have\\nbackend specific URIs. These are opaque values, so no one but the\\nbackend that created them should try and derive any meaning from them.\\nThe only valid exception to this is checking the scheme, as it is used\\nto route browse requests to the correct backend.\\n\\nFor example, the dummy library\'s ``/bar`` directory could be returned\\nlike this::\\n\\n    Ref.directory(uri=\'dummy:directory:/bar\', name=\'bar\')\\n\\n:param string uri: URI to browse\\n:rtype: list of :class:`mopidy.models.Ref`\\n\\n.. versionadded:: 0.18", "params": [{"name": "uri"}]}, "core.library.get_distinct": {"description": "List distinct values for a given field from the library.\\n\\nThis has mainly been added to support the list commands the MPD\\nprotocol supports in a more sane fashion. Other frontends are not\\nrecommended to use this method.\\n\\n:param string field: Any one of ``uri``, ``track_name``, ``album``,\\n    ``artist``, ``albumartist``, ``composer``, ``performer``,\\n    ``track_no``, ``genre``, ``date``, ``comment``, ``disc_no``,\\n    ``musicbrainz_albumid``, ``musicbrainz_artistid``, or\\n    ``musicbrainz_trackid``.\\n:param dict query: Query to use for limiting results, see\\n    :meth:`search` for details about the query format.\\n:rtype: set of values corresponding to the requested field type.\\n\\n.. versionadded:: 1.0", "params": [{"name": "field"}, {"name": "query", "default": null}]}, "core.library.get_images": {"description": "Lookup the images for the given URIs\\n\\nBackends can use this to return image URIs for any URI they know about\\nbe it tracks, albums, playlists. The lookup result is a dictionary\\nmapping the provided URIs to lists of images.\\n\\nUnknown URIs or URIs the corresponding backend couldn\'t find anything\\nfor will simply return an empty list for that URI.\\n\\n:param uris: list of URIs to find images for\\n:type uris: list of string\\n:rtype: {uri: tuple of :class:`mopidy.models.Image`}\\n\\n.. versionadded:: 1.0", "params": [{"name": "uris"}]}, "core.library.lookup": {"description": "Lookup the given URIs.\\n\\nIf the URI expands to multiple tracks, the returned list will contain\\nthem all.\\n\\n:param uris: track URIs\\n:type uris: list of string\\n:rtype: {uri: list of :class:`mopidy.models.Track`}", "params": [{"name": "uris"}]}, "core.library.refresh": {"description": "Refresh library. Limit to URI and below if an URI is given.\\n\\n:param uri: directory or track URI\\n:type uri: string", "params": [{"name": "uri", "default": null}]}, "core.library.search": {"description": "Search the library for tracks where ``field`` contains ``values``.\\n\\n``field`` can be one of ``uri``, ``track_name``, ``album``, ``artist``,\\n``albumartist``, ``composer``, ``performer``, ``track_no``, ``genre``,\\n``date``, ``comment``, ``disc_no``, ``musicbrainz_albumid``,\\n``musicbrainz_artistid``, ``musicbrainz_trackid`` or ``any``.\\n\\nIf ``uris`` is given, the search is limited to results from within the\\nURI roots. For example passing ``uris=[\'file:\']`` will limit the search\\nto the local backend.\\n\\nExamples::\\n\\n    # Returns results matching \'a\' in any backend\\n    search({\'any\': [\'a\']})\\n\\n    # Returns results matching artist \'xyz\' in any backend\\n    search({\'artist\': [\'xyz\']})\\n\\n    # Returns results matching \'a\' and \'b\' and artist \'xyz\' in any\\n    # backend\\n    search({\'any\': [\'a\', \'b\'], \'artist\': [\'xyz\']})\\n\\n    # Returns results matching \'a\' if within the given URI roots\\n    # \\"file:///media/music\\" and \\"spotify:\\"\\n    search({\'any\': [\'a\']}, uris=[\'file:///media/music\', \'spotify:\'])\\n\\n    # Returns results matching artist \'xyz\' and \'abc\' in any backend\\n    search({\'artist\': [\'xyz\', \'abc\']})\\n\\n:param query: one or more queries to search for\\n:type query: dict\\n:param uris: zero or more URI roots to limit the search to\\n:type uris: list of string or :class:`None`\\n:param exact: if the search should use exact matching\\n:type exact: :class:`bool`\\n:rtype: list of :class:`mopidy.models.SearchResult`\\n\\n.. versionadded:: 1.0\\n    The ``exact`` keyword argument.", "params": [{"name": "query"}, {"name": "uris", "default": null}, {"name": "exact", "default": false}]}, "core.mixer.get_mute": {"description": "Get mute state.\\n\\n:class:`True` if muted, :class:`False` unmuted, :class:`None` if\\nunknown.", "params": []}, "core.mixer.get_volume": {"description": "Get the volume.\\n\\nInteger in range [0..100] or :class:`None` if unknown.\\n\\nThe volume scale is linear.", "params": []}, "core.mixer.set_mute": {"description": "Set mute state.\\n\\n:class:`True` to mute, :class:`False` to unmute.\\n\\nReturns :class:`True` if call is successful, otherwise :class:`False`.", "params": [{"name": "mute"}]}, "core.mixer.set_volume": {"description": "Set the volume.\\n\\nThe volume is defined as an integer in range [0..100].\\n\\nThe volume scale is linear.\\n\\nReturns :class:`True` if call is successful, otherwise :class:`False`.", "params": [{"name": "volume"}]}, "core.playback.get_current_tl_track": {"description": "Get the currently playing or selected track.\\n\\nReturns a :class:`mopidy.models.TlTrack` or :class:`None`.", "params": []}, "core.playback.get_current_tlid": {"description": "Get the currently playing or selected TLID.\\n\\nExtracted from :meth:`get_current_tl_track` for convenience.\\n\\nReturns a :class:`int` or :class:`None`.\\n\\n.. versionadded:: 1.1", "params": []}, "core.playback.get_current_track": {"description": "Get the currently playing or selected track.\\n\\nExtracted from :meth:`get_current_tl_track` for convenience.\\n\\nReturns a :class:`mopidy.models.Track` or :class:`None`.", "params": []}, "core.playback.get_state": {"description": "Get The playback state.", "params": []}, "core.playback.get_stream_title": {"description": "Get the current stream title or :class:`None`.", "params": []}, "core.playback.get_time_position": {"description": "Get time position in milliseconds.", "params": []}, "core.playback.next": {"description": "Change to the next track.\\n\\nThe current playback state will be kept. If it was playing, playing\\nwill continue. If it was paused, it will still be paused, etc.", "params": []}, "core.playback.pause": {"description": "Pause playback.", "params": []}, "core.playback.play": {"description": "Play the given track, or if the given tl_track and tlid is\\n:class:`None`, play the currently active track.\\n\\nNote that the track **must** already be in the tracklist.\\n\\n.. deprecated:: 3.0\\n    The ``tl_track`` argument. Use ``tlid`` instead.\\n\\n:param tl_track: track to play\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:param tlid: TLID of the track to play\\n:type tlid: :class:`int` or :class:`None`", "params": [{"name": "tl_track", "default": null}, {"name": "tlid", "default": null}]}, "core.playback.previous": {"description": "Change to the previous track.\\n\\nThe current playback state will be kept. If it was playing, playing\\nwill continue. If it was paused, it will still be paused, etc.", "params": []}, "core.playback.resume": {"description": "If paused, resume playing the current track.", "params": []}, "core.playback.seek": {"description": "Seeks to time position given in milliseconds.\\n\\n:param time_position: time position in milliseconds\\n:type time_position: int\\n:rtype: :class:`True` if successful, else :class:`False`", "params": [{"name": "time_position"}]}, "core.playback.set_state": {"description": "Set the playback state.\\n\\nMust be :attr:`PLAYING`, :attr:`PAUSED`, or :attr:`STOPPED`.\\n\\nPossible states and transitions:\\n\\n.. digraph:: state_transitions\\n\\n    \\"STOPPED\\" -> \\"PLAYING\\" [ label=\\"play\\" ]\\n    \\"STOPPED\\" -> \\"PAUSED\\" [ label=\\"pause\\" ]\\n    \\"PLAYING\\" -> \\"STOPPED\\" [ label=\\"stop\\" ]\\n    \\"PLAYING\\" -> \\"PAUSED\\" [ label=\\"pause\\" ]\\n    \\"PLAYING\\" -> \\"PLAYING\\" [ label=\\"play\\" ]\\n    \\"PAUSED\\" -> \\"PLAYING\\" [ label=\\"resume\\" ]\\n    \\"PAUSED\\" -> \\"STOPPED\\" [ label=\\"stop\\" ]", "params": [{"name": "new_state"}]}, "core.playback.stop": {"description": "Stop playing.", "params": []}, "core.playlists.as_list": {"description": "Get a list of the currently available playlists.\\n\\nReturns a list of :class:`~mopidy.models.Ref` objects referring to the\\nplaylists. In other words, no information about the playlists\' content\\nis given.\\n\\n:rtype: list of :class:`mopidy.models.Ref`\\n\\n.. versionadded:: 1.0", "params": []}, "core.playlists.create": {"description": "Create a new playlist.\\n\\nIf ``uri_scheme`` matches an URI scheme handled by a current backend,\\nthat backend is asked to create the playlist. If ``uri_scheme`` is\\n:class:`None` or doesn\'t match a current backend, the first backend is\\nasked to create the playlist.\\n\\nAll new playlists must be created by calling this method, and **not**\\nby creating new instances of :class:`mopidy.models.Playlist`.\\n\\n:param name: name of the new playlist\\n:type name: string\\n:param uri_scheme: use the backend matching the URI scheme\\n:type uri_scheme: string\\n:rtype: :class:`mopidy.models.Playlist` or :class:`None`", "params": [{"name": "name"}, {"name": "uri_scheme", "default": null}]}, "core.playlists.delete": {"description": "Delete playlist identified by the URI.\\n\\nIf the URI doesn\'t match the URI schemes handled by the current\\nbackends, nothing happens.\\n\\nReturns :class:`True` if deleted, :class:`False` otherwise.\\n\\n:param uri: URI of the playlist to delete\\n:type uri: string\\n:rtype: :class:`bool`\\n\\n.. versionchanged:: 2.2\\n    Return type defined.", "params": [{"name": "uri"}]}, "core.playlists.get_items": {"description": "Get the items in a playlist specified by ``uri``.\\n\\nReturns a list of :class:`~mopidy.models.Ref` objects referring to the\\nplaylist\'s items.\\n\\nIf a playlist with the given ``uri`` doesn\'t exist, it returns\\n:class:`None`.\\n\\n:rtype: list of :class:`mopidy.models.Ref`, or :class:`None`\\n\\n.. versionadded:: 1.0", "params": [{"name": "uri"}]}, "core.playlists.get_uri_schemes": {"description": "Get the list of URI schemes that support playlists.\\n\\n:rtype: list of string\\n\\n.. versionadded:: 2.0", "params": []}, "core.playlists.lookup": {"description": "Lookup playlist with given URI in both the set of playlists and in any\\nother playlist sources. Returns :class:`None` if not found.\\n\\n:param uri: playlist URI\\n:type uri: string\\n:rtype: :class:`mopidy.models.Playlist` or :class:`None`", "params": [{"name": "uri"}]}, "core.playlists.refresh": {"description": "Refresh the playlists in :attr:`playlists`.\\n\\nIf ``uri_scheme`` is :class:`None`, all backends are asked to refresh.\\nIf ``uri_scheme`` is an URI scheme handled by a backend, only that\\nbackend is asked to refresh. If ``uri_scheme`` doesn\'t match any\\ncurrent backend, nothing happens.\\n\\n:param uri_scheme: limit to the backend matching the URI scheme\\n:type uri_scheme: string", "params": [{"name": "uri_scheme", "default": null}]}, "core.playlists.save": {"description": "Save the playlist.\\n\\nFor a playlist to be saveable, it must have the ``uri`` attribute set.\\nYou must not set the ``uri`` atribute yourself, but use playlist\\nobjects returned by :meth:`create` or retrieved from :attr:`playlists`,\\nwhich will always give you saveable playlists.\\n\\nThe method returns the saved playlist. The return playlist may differ\\nfrom the saved playlist. E.g. if the playlist name was changed, the\\nreturned playlist may have a different URI. The caller of this method\\nmust throw away the playlist sent to this method, and use the\\nreturned playlist instead.\\n\\nIf the playlist\'s URI isn\'t set or doesn\'t match the URI scheme of a\\ncurrent backend, nothing is done and :class:`None` is returned.\\n\\n:param playlist: the playlist\\n:type playlist: :class:`mopidy.models.Playlist`\\n:rtype: :class:`mopidy.models.Playlist` or :class:`None`", "params": [{"name": "playlist"}]}, "core.tracklist.add": {"description": "Add tracks to the tracklist.\\n\\nIf ``uris`` is given instead of ``tracks``, the URIs are\\nlooked up in the library and the resulting tracks are added to the\\ntracklist.\\n\\nIf ``at_position`` is given, the tracks are inserted at the given\\nposition in the tracklist. If ``at_position`` is not given, the tracks\\nare appended to the end of the tracklist.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.\\n\\n:param tracks: tracks to add\\n:type tracks: list of :class:`mopidy.models.Track` or :class:`None`\\n:param at_position: position in tracklist to add tracks\\n:type at_position: int or :class:`None`\\n:param uris: list of URIs for tracks to add\\n:type uris: list of string or :class:`None`\\n:rtype: list of :class:`mopidy.models.TlTrack`\\n\\n.. versionadded:: 1.0\\n    The ``uris`` argument.\\n\\n.. deprecated:: 1.0\\n    The ``tracks`` argument. Use ``uris``.", "params": [{"name": "tracks", "default": null}, {"name": "at_position", "default": null}, {"name": "uris", "default": null}]}, "core.tracklist.clear": {"description": "Clear the tracklist.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.", "params": []}, "core.tracklist.eot_track": {"description": "The track that will be played after the given track.\\n\\nNot necessarily the same track as :meth:`next_track`.\\n\\n.. deprecated:: 3.0\\n    Use :meth:`get_eot_tlid` instead.\\n\\n:param tl_track: the reference track\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:rtype: :class:`mopidy.models.TlTrack` or :class:`None`", "params": [{"name": "tl_track"}]}, "core.tracklist.filter": {"description": "Filter the tracklist by the given criteria.\\n\\nEach rule in the criteria consists of a model field and a list of\\nvalues to compare it against. If the model field matches any of the\\nvalues, it may be returned.\\n\\nOnly tracks that match all the given criteria are returned.\\n\\nExamples::\\n\\n    # Returns tracks with TLIDs 1, 2, 3, or 4 (tracklist ID)\\n    filter({\'tlid\': [1, 2, 3, 4]})\\n\\n    # Returns track with URIs \'xyz\' or \'abc\'\\n    filter({\'uri\': [\'xyz\', \'abc\']})\\n\\n    # Returns track with a matching TLIDs (1, 3 or 6) and a\\n    # matching URI (\'xyz\' or \'abc\')\\n    filter({\'tlid\': [1, 3, 6], \'uri\': [\'xyz\', \'abc\']})\\n\\n:param criteria: one or more rules to match by\\n:type criteria: dict, of (string, list) pairs\\n:rtype: list of :class:`mopidy.models.TlTrack`", "params": [{"name": "criteria"}]}, "core.tracklist.get_consume": {"description": "Get consume mode.\\n\\n:class:`True`\\n    Tracks are removed from the tracklist when they have been played.\\n:class:`False`\\n    Tracks are not removed from the tracklist.", "params": []}, "core.tracklist.get_eot_tlid": {"description": "The TLID of the track that will be played after the current track.\\n\\nNot necessarily the same TLID as returned by :meth:`get_next_tlid`.\\n\\n:rtype: :class:`int` or :class:`None`\\n\\n.. versionadded:: 1.1", "params": []}, "core.tracklist.get_length": {"description": "Get length of the tracklist.", "params": []}, "core.tracklist.get_next_tlid": {"description": "The tlid of the track that will be played if calling\\n:meth:`mopidy.core.PlaybackController.next()`.\\n\\nFor normal playback this is the next track in the tracklist. If repeat\\nis enabled the next track can loop around the tracklist. When random is\\nenabled this should be a random track, all tracks should be played once\\nbefore the tracklist repeats.\\n\\n:rtype: :class:`int` or :class:`None`\\n\\n.. versionadded:: 1.1", "params": []}, "core.tracklist.get_previous_tlid": {"description": "Returns the TLID of the track that will be played if calling\\n:meth:`mopidy.core.PlaybackController.previous()`.\\n\\nFor normal playback this is the previous track in the tracklist. If\\nrandom and/or consume is enabled it should return the current track\\ninstead.\\n\\n:rtype: :class:`int` or :class:`None`\\n\\n.. versionadded:: 1.1", "params": []}, "core.tracklist.get_random": {"description": "Get random mode.\\n\\n:class:`True`\\n    Tracks are selected at random from the tracklist.\\n:class:`False`\\n    Tracks are played in the order of the tracklist.", "params": []}, "core.tracklist.get_repeat": {"description": "Get repeat mode.\\n\\n:class:`True`\\n    The tracklist is played repeatedly.\\n:class:`False`\\n    The tracklist is played once.", "params": []}, "core.tracklist.get_single": {"description": "Get single mode.\\n\\n:class:`True`\\n    Playback is stopped after current song, unless in ``repeat`` mode.\\n:class:`False`\\n    Playback continues after current song.", "params": []}, "core.tracklist.get_tl_tracks": {"description": "Get tracklist as list of :class:`mopidy.models.TlTrack`.", "params": []}, "core.tracklist.get_tracks": {"description": "Get tracklist as list of :class:`mopidy.models.Track`.", "params": []}, "core.tracklist.get_version": {"description": "Get the tracklist version.\\n\\nInteger which is increased every time the tracklist is changed. Is not\\nreset before Mopidy is restarted.", "params": []}, "core.tracklist.index": {"description": "The position of the given track in the tracklist.\\n\\nIf neither *tl_track* or *tlid* is given we return the index of\\nthe currently playing track.\\n\\n:param tl_track: the track to find the index of\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:param tlid: TLID of the track to find the index of\\n:type tlid: :class:`int` or :class:`None`\\n:rtype: :class:`int` or :class:`None`\\n\\n.. versionadded:: 1.1\\n    The *tlid* parameter", "params": [{"name": "tl_track", "default": null}, {"name": "tlid", "default": null}]}, "core.tracklist.move": {"description": "Move the tracks in the slice ``[start:end]`` to ``to_position``.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.\\n\\n:param start: position of first track to move\\n:type start: int\\n:param end: position after last track to move\\n:type end: int\\n:param to_position: new position for the tracks\\n:type to_position: int", "params": [{"name": "start"}, {"name": "end"}, {"name": "to_position"}]}, "core.tracklist.next_track": {"description": "The track that will be played if calling\\n:meth:`mopidy.core.PlaybackController.next()`.\\n\\nFor normal playback this is the next track in the tracklist. If repeat\\nis enabled the next track can loop around the tracklist. When random is\\nenabled this should be a random track, all tracks should be played once\\nbefore the tracklist repeats.\\n\\n.. deprecated:: 3.0\\n    Use :meth:`get_next_tlid` instead.\\n\\n:param tl_track: the reference track\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:rtype: :class:`mopidy.models.TlTrack` or :class:`None`", "params": [{"name": "tl_track"}]}, "core.tracklist.previous_track": {"description": "Returns the track that will be played if calling\\n:meth:`mopidy.core.PlaybackController.previous()`.\\n\\nFor normal playback this is the previous track in the tracklist. If\\nrandom and/or consume is enabled it should return the current track\\ninstead.\\n\\n.. deprecated:: 3.0\\n    Use :meth:`get_previous_tlid` instead.\\n\\n:param tl_track: the reference track\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:rtype: :class:`mopidy.models.TlTrack` or :class:`None`", "params": [{"name": "tl_track"}]}, "core.tracklist.remove": {"description": "Remove the matching tracks from the tracklist.\\n\\nUses :meth:`filter()` to lookup the tracks to remove.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.\\n\\n:param criteria: one or more rules to match by\\n:type criteria: dict, of (string, list) pairs\\n:rtype: list of :class:`mopidy.models.TlTrack` that were removed", "params": [{"name": "criteria"}]}, "core.tracklist.set_consume": {"description": "Set consume mode.\\n\\n:class:`True`\\n    Tracks are removed from the tracklist when they have been played.\\n:class:`False`\\n    Tracks are not removed from the tracklist.", "params": [{"name": "value"}]}, "core.tracklist.set_random": {"description": "Set random mode.\\n\\n:class:`True`\\n    Tracks are selected at random from the tracklist.\\n:class:`False`\\n    Tracks are played in the order of the tracklist.", "params": [{"name": "value"}]}, "core.tracklist.set_repeat": {"description": "Set repeat mode.\\n\\nTo repeat a single track, set both ``repeat`` and ``single``.\\n\\n:class:`True`\\n    The tracklist is played repeatedly.\\n:class:`False`\\n    The tracklist is played once.", "params": [{"name": "value"}]}, "core.tracklist.set_single": {"description": "Set single mode.\\n\\n:class:`True`\\n    Playback is stopped after current song, unless in ``repeat`` mode.\\n:class:`False`\\n    Playback continues after current song.", "params": [{"name": "value"}]}, "core.tracklist.shuffle": {"description": "Shuffles the entire tracklist. If ``start`` and ``end`` is given only\\nshuffles the slice ``[start:end]``.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.\\n\\n:param start: position of first track to shuffle\\n:type start: int or :class:`None`\\n:param end: position after last track to shuffle\\n:type end: int or :class:`None`", "params": [{"name": "start", "default": null}, {"name": "end", "default": null}]}, "core.tracklist.slice": {"description": "Returns a slice of the tracklist, limited by the given start and end\\npositions.\\n\\n:param start: position of first track to include in slice\\n:type start: int\\n:param end: position after last track to include in slice\\n:type end: int\\n:rtype: :class:`mopidy.models.TlTrack`", "params": [{"name": "start"}, {"name": "end"}]}}}'
okt 24 13:41:23 Desktop-Ubuntu mopidy[8918]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.describe","jsonrpc":"2.0","id":38}'
okt 24 13:41:23 Desktop-Ubuntu mopidy[8918]: DEBUG    [HttpServer] mopidy.http.handlers New WebSocket connection from 127.0.0.1
okt 24 13:41:23 Desktop-Ubuntu mopidy[8918]: INFO     [HttpServer] tornado.access 101 GET /mopidy/ws/ (127.0.0.1) 19.44ms
okt 24 13:41:22 Desktop-Ubuntu mopidy[8918]: DEBUG    [HttpFrontend-10 (_actor_loop)] mopidy.zeroconf Zeroconf service 'Mopidy HTTP server on Desktop-Ubuntu' (_mopidy-http._tcp at []:6680): Published
okt 24 13:41:22 Desktop-Ubuntu mopidy[8918]: DEBUG    [HttpFrontend-10 (_actor_loop)] mopidy.zeroconf Zeroconf service 'Mopidy HTTP server on Desktop-Ubuntu' (_http._tcp at []:6680): Published
okt 24 13:41:22 Desktop-Ubuntu mopidy[8918]:     '/': <class 'tornado.web.RedirectHandler'>
okt 24 13:41:22 Desktop-Ubuntu mopidy[8918]:     '/mopidy/': <class 'mopidy.http.handlers.ClientListHandler'>
okt 24 13:41:22 Desktop-Ubuntu mopidy[8918]:     '/mopidy/(.+)': <class 'mopidy.http.handlers.StaticFileHandler'>
okt 24 13:41:22 Desktop-Ubuntu mopidy[8918]:     '/mopidy/rpc': <class 'mopidy.http.handlers.JsonRpcHandler'>
okt 24 13:41:22 Desktop-Ubuntu mopidy[8918]:     '/mopidy/ws/?': <class 'mopidy.http.handlers.WebSocketHandler'>
okt 24 13:41:22 Desktop-Ubuntu mopidy[8918]:     '/mopidy': <class 'mopidy.http.handlers.AddSlashHandler'>
okt 24 13:41:22 Desktop-Ubuntu mopidy[8918]:     '/iris/(.*)': <class 'mopidy_iris.handlers.ReactRouterHandler'>
okt 24 13:41:22 Desktop-Ubuntu mopidy[8918]:     '/iris/((.*)(?:css|js|json|map)$)': <class 'tornado.web.StaticFileHandler'>
okt 24 13:41:22 Desktop-Ubuntu mopidy[8918]:     '/iris/assets/(.*)': <class 'tornado.web.StaticFileHandler'>
okt 24 13:41:22 Desktop-Ubuntu mopidy[8918]:     '/iris/ws/?': <class 'mopidy_iris.handlers.WebsocketHandler'>
okt 24 13:41:22 Desktop-Ubuntu mopidy[8918]:     '/iris/http/([^/]*)': <class 'mopidy_iris.handlers.HttpHandler'>
okt 24 13:41:22 Desktop-Ubuntu mopidy[8918]:     '/iris': <class 'mopidy.http.handlers.AddSlashHandler'>
okt 24 13:41:22 Desktop-Ubuntu mopidy[8918]: DEBUG    [HttpServer] mopidy.http.actor HTTP routes from extensions:
okt 24 13:41:22 Desktop-Ubuntu mopidy[8918]: DEBUG    [HttpServer] mopidy.http.actor Default webclient is mopidy
okt 24 13:41:22 Desktop-Ubuntu mopidy[8918]: DEBUG    [HttpServer] mopidy.http.actor Loaded HTTP extension: mopidy
okt 24 13:41:22 Desktop-Ubuntu mopidy[8918]: DEBUG    [HttpServer] mopidy.http.actor Loaded HTTP extension: iris
okt 24 13:41:22 Desktop-Ubuntu mopidy[8918]: DEBUG    [HttpServer] asyncio Using selector: EpollSelector
okt 24 13:41:22 Desktop-Ubuntu mopidy[8918]: INFO     [MainThread] mopidy.commands Starting GLib mainloop
okt 24 13:41:22 Desktop-Ubuntu mopidy[8918]: TRACE    [MainThread] mopidy.internal.timer HttpFrontend took 1ms
okt 24 13:41:22 Desktop-Ubuntu mopidy[8918]: INFO     [HttpFrontend-10 (_actor_loop)] mopidy.http.actor HTTP server running at [::ffff:127.0.0.1]:6680
okt 24 13:41:22 Desktop-Ubuntu mopidy[8918]: DEBUG    [MainThread] pykka Starting HttpFrontend (urn:uuid:e8a4a63c-d500-4298-bf42-b2a1559da85f)
okt 24 13:41:22 Desktop-Ubuntu mopidy[8918]: DEBUG    [MainThread] pykka Registered HttpFrontend (urn:uuid:e8a4a63c-d500-4298-bf42-b2a1559da85f)
okt 24 13:41:22 Desktop-Ubuntu mopidy[8918]: DEBUG    [MainThread] mopidy.http.actor Starting HTTP server
okt 24 13:41:22 Desktop-Ubuntu mopidy[8918]: TRACE    [MainThread] mopidy.internal.timer IrisFrontend took 0ms
okt 24 13:41:22 Desktop-Ubuntu mopidy[8918]: INFO     [IrisFrontend-8 (_actor_loop)] mopidy_iris.core Starting Iris 3.64.1
okt 24 13:41:22 Desktop-Ubuntu mopidy[8918]: DEBUG    [MainThread] pykka Starting IrisFrontend (urn:uuid:e7b24e55-196a-407e-a145-161c67b3cbc1)
okt 24 13:41:22 Desktop-Ubuntu mopidy[8918]: DEBUG    [MainThread] pykka Registered IrisFrontend (urn:uuid:e7b24e55-196a-407e-a145-161c67b3cbc1)
okt 24 13:41:22 Desktop-Ubuntu mopidy[8918]: TRACE    [MainThread] mopidy.internal.timer YTMusicScrobbleFE took 0ms
okt 24 13:41:22 Desktop-Ubuntu mopidy[8918]: DEBUG    [MainThread] pykka Starting YTMusicScrobbleFE (urn:uuid:c9a95270-8602-494f-b67f-f805106b7dd8)
okt 24 13:41:22 Desktop-Ubuntu mopidy[8918]: DEBUG    [MainThread] pykka Registered YTMusicScrobbleFE (urn:uuid:c9a95270-8602-494f-b67f-f805106b7dd8)
okt 24 13:41:22 Desktop-Ubuntu mopidy[8918]: INFO     [MainThread] mopidy.commands Starting Mopidy frontends: YTMusicScrobbleFE, IrisFrontend, HttpFrontend
okt 24 13:41:22 Desktop-Ubuntu mopidy[8918]: DEBUG    [MainThread] pykka Starting Core (urn:uuid:d1507165-f159-4923-9492-598ed8b14345)
okt 24 13:41:22 Desktop-Ubuntu mopidy[8918]: DEBUG    [MainThread] pykka Registered Core (urn:uuid:d1507165-f159-4923-9492-598ed8b14345)
okt 24 13:41:22 Desktop-Ubuntu mopidy[8918]: INFO     [MainThread] mopidy.commands Starting Mopidy core
okt 24 13:41:22 Desktop-Ubuntu mopidy[8918]: TRACE    [MainThread] mopidy.internal.timer StreamBackend took 5ms
okt 24 13:41:22 Desktop-Ubuntu mopidy[8918]: DEBUG    [MainThread] pykka Starting StreamBackend (urn:uuid:cb24d0bb-14f4-4219-8dba-33de617f6dc4)
okt 24 13:41:22 Desktop-Ubuntu mopidy[8918]: DEBUG    [MainThread] pykka Registered StreamBackend (urn:uuid:cb24d0bb-14f4-4219-8dba-33de617f6dc4)
okt 24 13:41:22 Desktop-Ubuntu mopidy[8918]: INFO     [Audio-2 (_actor_loop)] mopidy.audio.actor Audio output set to "pulsesink server=127.0.0.1"
okt 24 13:41:22 Desktop-Ubuntu mopidy[8918]: TRACE    [MainThread] mopidy.internal.timer M3UBackend took 3ms
okt 24 13:41:22 Desktop-Ubuntu mopidy[8918]: DEBUG    [MainThread] pykka Starting M3UBackend (urn:uuid:f6d79b66-f651-44a3-aad7-4220d9f7e41e)
okt 24 13:41:22 Desktop-Ubuntu mopidy[8918]: DEBUG    [MainThread] pykka Registered M3UBackend (urn:uuid:f6d79b66-f651-44a3-aad7-4220d9f7e41e)
okt 24 13:41:22 Desktop-Ubuntu mopidy[8918]: TRACE    [MainThread] mopidy.internal.timer FileBackend took 2ms
okt 24 13:41:22 Desktop-Ubuntu mopidy[8918]: DEBUG    [MainThread] pykka Starting FileBackend (urn:uuid:5b3c4540-5480-447c-b37c-b7a1ce4d898e)
okt 24 13:41:22 Desktop-Ubuntu mopidy[8918]: DEBUG    [MainThread] pykka Registered FileBackend (urn:uuid:5b3c4540-5480-447c-b37c-b7a1ce4d898e)
okt 24 13:41:22 Desktop-Ubuntu mopidy[8918]: DEBUG    [MainThread] mopidy.file.library Failed expanding path ($XDG_MUSIC_DIR) from file/media_dirs config value.
okt 24 13:41:22 Desktop-Ubuntu mopidy[8918]: AttributeError: 'YTMusic' object has no attribute 'headers'
okt 24 13:41:22 Desktop-Ubuntu mopidy[8918]:     if 'x-goog-visitor-id' not in self.headers:
okt 24 13:41:22 Desktop-Ubuntu mopidy[8918]:   File "/usr/local/lib/python3.10/dist-packages/ytmusicapi/ytmusic.py", line 98, in __init__
okt 24 13:41:22 Desktop-Ubuntu mopidy[8918]:     self.api = YTMusic(self._ytmusicapi_auth_json)
okt 24 13:41:22 Desktop-Ubuntu mopidy[8918]:   File "/usr/local/lib/python3.10/dist-packages/mopidy_ytmusic/backend.py", line 65, in __init__
okt 24 13:41:22 Desktop-Ubuntu mopidy[8918]:     obj = cls(*args, **kwargs)
okt 24 13:41:22 Desktop-Ubuntu mopidy[8918]:   File "/usr/lib/python3/dist-packages/pykka/_actor.py", line 91, in start
okt 24 13:41:22 Desktop-Ubuntu mopidy[8918]:     backend = backend_class.start(
okt 24 13:41:22 Desktop-Ubuntu mopidy[8918]:   File "/usr/lib/python3/dist-packages/mopidy/commands.py", line 412, in start_backends
okt 24 13:41:22 Desktop-Ubuntu mopidy[8918]:     yield
okt 24 13:41:22 Desktop-Ubuntu mopidy[8918]:   File "/usr/lib/python3/dist-packages/mopidy/commands.py", line 248, in _actor_error_handling
okt 24 13:41:22 Desktop-Ubuntu mopidy[8918]: Traceback (most recent call last):
okt 24 13:41:22 Desktop-Ubuntu mopidy[8918]: ERROR    [MainThread] mopidy.commands Got un-handled exception from YTMusicBackend
okt 24 13:41:22 Desktop-Ubuntu mopidy[8918]: INFO     [MainThread] mopidy.commands Starting Mopidy backends: YTMusicBackend, FileBackend, M3UBackend, StreamBackend
okt 24 13:41:22 Desktop-Ubuntu mopidy[8918]: DEBUG    [MainThread] pykka Starting Audio (urn:uuid:4165b3cc-63d2-433d-b1d5-ea80b84027ca)
okt 24 13:41:22 Desktop-Ubuntu mopidy[8918]: DEBUG    [MainThread] pykka Registered Audio (urn:uuid:4165b3cc-63d2-433d-b1d5-ea80b84027ca)
okt 24 13:41:22 Desktop-Ubuntu mopidy[8918]: INFO     [MainThread] mopidy.commands Starting Mopidy audio
okt 24 13:41:22 Desktop-Ubuntu mopidy[8918]: DEBUG    [MainThread] mopidy.commands Mixer volume left unchanged
okt 24 13:41:22 Desktop-Ubuntu mopidy[8918]: DEBUG    [MainThread] pykka Starting SoftwareMixer (urn:uuid:c12c4b72-7f17-41bc-8715-76afe9a677aa)
okt 24 13:41:22 Desktop-Ubuntu mopidy[8918]: DEBUG    [MainThread] pykka Registered SoftwareMixer (urn:uuid:c12c4b72-7f17-41bc-8715-76afe9a677aa)
okt 24 13:41:22 Desktop-Ubuntu mopidy[8918]: INFO     [MainThread] mopidy.commands Starting Mopidy mixer: SoftwareMixer
okt 24 13:41:22 Desktop-Ubuntu mopidy[8918]: DEBUG    [MainThread] mopidy.commands Available Mopidy mixers: SoftwareMixer
okt 24 13:41:22 Desktop-Ubuntu mopidy[8918]: WARNING  [MainThread] mopidy.__main__ Please fix the extension configuration errors or disable the extensions to silence these messages.
okt 24 13:41:22 Desktop-Ubuntu mopidy[8918]: WARNING  [MainThread] mopidy.__main__   local/media_dir must be set.
okt 24 13:41:22 Desktop-Ubuntu mopidy[8918]: WARNING  [MainThread] mopidy.__main__ Found local configuration errors. The extension has been automatically disabled:
okt 24 13:41:22 Desktop-Ubuntu mopidy[8918]: INFO     [MainThread] mopidy.__main__ Disabled extensions: youtube, local, soundcloud
okt 24 13:41:22 Desktop-Ubuntu mopidy[8918]: INFO     [MainThread] mopidy.__main__ Enabled extensions: stream, ytmusic, http, softwaremixer, m3u, iris, file
okt 24 13:41:22 Desktop-Ubuntu mopidy[8918]: DEBUG    [MainThread] mopidy.ext Validating extension: stream
okt 24 13:41:22 Desktop-Ubuntu mopidy[8918]: DEBUG    [MainThread] mopidy.ext Validating extension: softwaremixer
okt 24 13:41:22 Desktop-Ubuntu mopidy[8918]: DEBUG    [MainThread] mopidy.ext Validating extension: m3u
okt 24 13:41:22 Desktop-Ubuntu mopidy[8918]: DEBUG    [MainThread] mopidy.ext Validating extension: http
okt 24 13:41:22 Desktop-Ubuntu mopidy[8918]: DEBUG    [MainThread] mopidy.ext Validating extension: file
okt 24 13:41:22 Desktop-Ubuntu mopidy[8918]: DEBUG    [MainThread] mopidy.ext Validating extension: iris
okt 24 13:41:22 Desktop-Ubuntu mopidy[8918]: DEBUG    [MainThread] mopidy.ext Validating extension: ytmusic
okt 24 13:41:22 Desktop-Ubuntu mopidy[8918]: DEBUG    [MainThread] mopidy.ext Validating extension: soundcloud
okt 24 13:41:22 Desktop-Ubuntu mopidy[8918]: DEBUG    [MainThread] mopidy.ext Validating extension: local
okt 24 13:41:22 Desktop-Ubuntu mopidy[8918]: DEBUG    [MainThread] mopidy.ext Validating extension: youtube
okt 24 13:41:22 Desktop-Ubuntu mopidy[8918]: WARNING  [MainThread] mopidy.config Ignoring config section 'jukebox' because no matching extension was found
okt 24 13:41:22 Desktop-Ubuntu mopidy[8918]: INFO     [MainThread] mopidy.config Loading config from command line options
okt 24 13:41:22 Desktop-Ubuntu mopidy[8918]: INFO     [MainThread] mopidy.config Loading config from file:///etc/mopidy/mopidy.conf
okt 24 13:41:22 Desktop-Ubuntu mopidy[8918]: INFO     [MainThread] mopidy.config Loading config from file:///usr/share/mopidy/conf.d/mopidy.conf
okt 24 13:41:22 Desktop-Ubuntu mopidy[8918]: INFO     [MainThread] mopidy.config Loading config from builtin defaults
okt 24 13:41:22 Desktop-Ubuntu mopidy[8918]: DEBUG    [MainThread] mopidy.config.keyring Fetching passwords from your keyring failed. Any passwords stored in the keyring will not be available. (org.freedesktop.DBus.Error.NotSupported: Unable to autolaunch a dbus-daemon without a $DISPLAY for X11)
okt 24 13:41:22 Desktop-Ubuntu mopidy[8918]: DEBUG    [MainThread] mopidy.ext Discovered extensions: youtube, local, soundcloud, ytmusic, iris, file, http, m3u, softwaremixer, stream
okt 24 13:41:22 Desktop-Ubuntu mopidy[8918]: DEBUG    [MainThread] mopidy.ext Loaded extension: Mopidy-Stream 3.3.0
okt 24 13:41:22 Desktop-Ubuntu mopidy[8918]: DEBUG    [MainThread] mopidy.ext Loading entry point: stream = mopidy.stream:Extension
okt 24 13:41:22 Desktop-Ubuntu mopidy[8918]: DEBUG    [MainThread] mopidy.ext Loaded extension: Mopidy-SoftwareMixer 3.3.0
okt 24 13:41:22 Desktop-Ubuntu mopidy[8918]: DEBUG    [MainThread] mopidy.ext Loading entry point: softwaremixer = mopidy.softwaremixer:Extension
okt 24 13:41:22 Desktop-Ubuntu mopidy[8918]: DEBUG    [MainThread] mopidy.ext Loaded extension: Mopidy-M3U 3.3.0
okt 24 13:41:22 Desktop-Ubuntu mopidy[8918]: DEBUG    [MainThread] mopidy.ext Loading entry point: m3u = mopidy.m3u:Extension
okt 24 13:41:22 Desktop-Ubuntu mopidy[8918]: DEBUG    [MainThread] mopidy.ext Loaded extension: Mopidy-HTTP 3.3.0
okt 24 13:41:22 Desktop-Ubuntu mopidy[8918]: DEBUG    [MainThread] mopidy.ext Loading entry point: http = mopidy.http:Extension
okt 24 13:41:22 Desktop-Ubuntu mopidy[8918]: DEBUG    [MainThread] mopidy.ext Loaded extension: Mopidy-File 3.3.0
okt 24 13:41:22 Desktop-Ubuntu mopidy[8918]: DEBUG    [MainThread] mopidy.ext Loading entry point: file = mopidy.file:Extension
okt 24 13:41:22 Desktop-Ubuntu mopidy[8918]: DEBUG    [MainThread] mopidy.ext Loaded extension: Mopidy-Iris 3.64.1
okt 24 13:41:22 Desktop-Ubuntu mopidy[8918]: DEBUG    [MainThread] mopidy.ext Loading entry point: iris = mopidy_iris:Extension
okt 24 13:41:22 Desktop-Ubuntu mopidy[8918]: DEBUG    [MainThread] mopidy.ext Loaded extension: Mopidy-YTMusic 0.3.7
okt 24 13:41:22 Desktop-Ubuntu mopidy[8918]: DEBUG    [MainThread] mopidy.ext Loading entry point: ytmusic = mopidy_ytmusic:Extension
okt 24 13:41:22 Desktop-Ubuntu mopidy[8918]: DEBUG    [MainThread] mopidy.ext Loaded extension: Mopidy-SoundCloud 3.0.1
okt 24 13:41:22 Desktop-Ubuntu mopidy[8918]: DEBUG    [MainThread] mopidy.ext Loading entry point: soundcloud = mopidy_soundcloud:Extension
okt 24 13:41:22 Desktop-Ubuntu mopidy[8918]: DEBUG    [MainThread] mopidy.ext Loaded extension: Mopidy-Local 3.2.1
okt 24 13:41:22 Desktop-Ubuntu mopidy[8918]: DEBUG    [MainThread] mopidy.ext Loading entry point: local = mopidy_local:Extension
okt 24 13:41:22 Desktop-Ubuntu mopidy[8918]: DEBUG    [MainThread] mopidy.ext Loaded extension: Mopidy-YouTube 3.6.1
okt 24 13:41:22 Desktop-Ubuntu mopidy[8918]: DEBUG    [MainThread] mopidy.ext Loading entry point: youtube = mopidy_youtube:Extension
okt 24 13:41:22 Desktop-Ubuntu mopidy[8918]: INFO     [MainThread] mopidy.__main__ Starting Mopidy 3.3.0
okt 24 13:41:22 Desktop-Ubuntu systemd[1]: Started Mopidy music server.
okt 24 13:41:22 Desktop-Ubuntu systemd[1]: Starting Mopidy music server...
okt 24 13:41:22 Desktop-Ubuntu systemd[1]: Stopped Mopidy music server.
okt 24 13:41:22 Desktop-Ubuntu systemd[1]: mopidy.service: Deactivated successfully.
okt 24 13:41:21 Desktop-Ubuntu mopidy[8712]: Failed loading provided credentials. Make sure to provide a string or a file path. Reason: Expecting value: line 1 column 1 (char 0)
okt 24 13:41:21 Desktop-Ubuntu mopidy[8712]: DEBUG    [MainThread] mopidy.internal.process All actors stopped.
okt 24 13:41:21 Desktop-Ubuntu mopidy[8712]: DEBUG    [SoftwareMixer-1 (_actor_loop)] pykka Stopped SoftwareMixer (urn:uuid:32bea29c-13c4-4749-adb5-57b45afe38e1)
okt 24 13:41:21 Desktop-Ubuntu mopidy[8712]: DEBUG    [SoftwareMixer-1 (_actor_loop)] pykka Unregistered SoftwareMixer (urn:uuid:32bea29c-13c4-4749-adb5-57b45afe38e1)
okt 24 13:41:21 Desktop-Ubuntu mopidy[8712]: DEBUG    [MainThread] mopidy.internal.process Stopping 1 instance(s) of SoftwareMixer
okt 24 13:41:21 Desktop-Ubuntu mopidy[8712]: INFO     [MainThread] mopidy.commands Stopping Mopidy mixer
okt 24 13:41:21 Desktop-Ubuntu mopidy[8712]: DEBUG    [Audio-2 (_actor_loop)] pykka Stopped Audio (urn:uuid:c33f495b-7b82-4a26-873c-948861a4bfdf)
okt 24 13:41:21 Desktop-Ubuntu mopidy[8712]: DEBUG    [Audio-2 (_actor_loop)] pykka Unregistered Audio (urn:uuid:c33f495b-7b82-4a26-873c-948861a4bfdf)
okt 24 13:41:21 Desktop-Ubuntu mopidy[8712]: DEBUG    [MainThread] mopidy.internal.process Stopping 1 instance(s) of Audio
okt 24 13:41:21 Desktop-Ubuntu mopidy[8712]: INFO     [MainThread] mopidy.commands Stopping Mopidy audio
okt 24 13:41:21 Desktop-Ubuntu mopidy[8712]: DEBUG    [StreamBackend-5 (_actor_loop)] pykka Stopped StreamBackend (urn:uuid:8925327d-dfa6-4d96-9a3d-35e27bd58f30)
okt 24 13:41:21 Desktop-Ubuntu mopidy[8712]: DEBUG    [StreamBackend-5 (_actor_loop)] pykka Unregistered StreamBackend (urn:uuid:8925327d-dfa6-4d96-9a3d-35e27bd58f30)
okt 24 13:41:21 Desktop-Ubuntu mopidy[8712]: DEBUG    [MainThread] mopidy.internal.process Stopping 1 instance(s) of StreamBackend
okt 24 13:41:21 Desktop-Ubuntu mopidy[8712]: DEBUG    [M3UBackend-4 (_actor_loop)] pykka Stopped M3UBackend (urn:uuid:81cdab19-9966-4f71-8faf-edd0dfdc8d9f)
okt 24 13:41:21 Desktop-Ubuntu mopidy[8712]: DEBUG    [M3UBackend-4 (_actor_loop)] pykka Unregistered M3UBackend (urn:uuid:81cdab19-9966-4f71-8faf-edd0dfdc8d9f)
okt 24 13:41:21 Desktop-Ubuntu mopidy[8712]: DEBUG    [MainThread] mopidy.internal.process Stopping 1 instance(s) of M3UBackend
okt 24 13:41:21 Desktop-Ubuntu mopidy[8712]: DEBUG    [FileBackend-3 (_actor_loop)] pykka Stopped FileBackend (urn:uuid:1841631d-df1c-4916-babb-fe882393c610)
okt 24 13:41:21 Desktop-Ubuntu mopidy[8712]: DEBUG    [FileBackend-3 (_actor_loop)] pykka Unregistered FileBackend (urn:uuid:1841631d-df1c-4916-babb-fe882393c610)
okt 24 13:41:21 Desktop-Ubuntu mopidy[8712]: DEBUG    [MainThread] mopidy.internal.process Stopping 1 instance(s) of FileBackend
okt 24 13:41:21 Desktop-Ubuntu mopidy[8712]: DEBUG    [MainThread] mopidy.internal.process Stopping 0 instance(s) of YTMusicBackend
okt 24 13:41:21 Desktop-Ubuntu mopidy[8712]: INFO     [MainThread] mopidy.commands Stopping Mopidy backends
okt 24 13:41:21 Desktop-Ubuntu mopidy[8712]: DEBUG    [Core-6 (_actor_loop)] pykka Stopped Core (urn:uuid:6122c51c-b1b4-4437-bdee-8298cc844319)
okt 24 13:41:21 Desktop-Ubuntu mopidy[8712]: DEBUG    [Core-6 (_actor_loop)] pykka Unregistered Core (urn:uuid:6122c51c-b1b4-4437-bdee-8298cc844319)
okt 24 13:41:21 Desktop-Ubuntu mopidy[8712]: DEBUG    [MainThread] mopidy.internal.process Stopping 1 instance(s) of Core
okt 24 13:41:21 Desktop-Ubuntu mopidy[8712]: INFO     [MainThread] mopidy.commands Stopping Mopidy core
okt 24 13:41:21 Desktop-Ubuntu mopidy[8712]: DEBUG    [HttpServer] mopidy.http.actor Stopped HTTP server
okt 24 13:41:21 Desktop-Ubuntu mopidy[8712]: DEBUG    [HttpFrontend-10 (_actor_loop)] mopidy.http.actor Stopping HTTP server
okt 24 13:41:21 Desktop-Ubuntu mopidy[8712]: DEBUG    [HttpFrontend-10 (_actor_loop)] mopidy.zeroconf Zeroconf service 'Mopidy HTTP server on Desktop-Ubuntu' (_mopidy-http._tcp at []:6680): Unpublished
okt 24 13:41:21 Desktop-Ubuntu mopidy[8712]: DEBUG    [HttpFrontend-10 (_actor_loop)] mopidy.zeroconf Zeroconf service 'Mopidy HTTP server on Desktop-Ubuntu' (_http._tcp at []:6680): Unpublished
okt 24 13:41:21 Desktop-Ubuntu mopidy[8712]: DEBUG    [HttpFrontend-10 (_actor_loop)] pykka Stopped HttpFrontend (urn:uuid:440ad57b-820e-4f2a-82a0-02ebeeb26001)
okt 24 13:41:21 Desktop-Ubuntu mopidy[8712]: DEBUG    [HttpFrontend-10 (_actor_loop)] pykka Unregistered HttpFrontend (urn:uuid:440ad57b-820e-4f2a-82a0-02ebeeb26001)
okt 24 13:41:21 Desktop-Ubuntu mopidy[8712]: DEBUG    [MainThread] mopidy.internal.process Stopping 1 instance(s) of HttpFrontend
okt 24 13:41:21 Desktop-Ubuntu mopidy[8712]: INFO     [IrisFrontend-8 (_actor_loop)] mopidy_iris.core Stopping Iris
okt 24 13:41:21 Desktop-Ubuntu mopidy[8712]: DEBUG    [IrisFrontend-8 (_actor_loop)] pykka Stopped IrisFrontend (urn:uuid:8534feaf-5622-47dc-b7e9-a9f234216870)
okt 24 13:41:21 Desktop-Ubuntu mopidy[8712]: DEBUG    [IrisFrontend-8 (_actor_loop)] pykka Unregistered IrisFrontend (urn:uuid:8534feaf-5622-47dc-b7e9-a9f234216870)
okt 24 13:41:21 Desktop-Ubuntu mopidy[8712]: DEBUG    [MainThread] mopidy.internal.process Stopping 1 instance(s) of IrisFrontend
okt 24 13:41:21 Desktop-Ubuntu mopidy[8712]: DEBUG    [YTMusicScrobbleFE-7 (_actor_loop)] pykka Stopped YTMusicScrobbleFE (urn:uuid:dc32c773-e4e1-4fb7-afd3-4a186acccc8b)
okt 24 13:41:21 Desktop-Ubuntu mopidy[8712]: DEBUG    [YTMusicScrobbleFE-7 (_actor_loop)] pykka Unregistered YTMusicScrobbleFE (urn:uuid:dc32c773-e4e1-4fb7-afd3-4a186acccc8b)
okt 24 13:41:21 Desktop-Ubuntu mopidy[8712]: DEBUG    [MainThread] mopidy.internal.process Stopping 1 instance(s) of YTMusicScrobbleFE
okt 24 13:41:21 Desktop-Ubuntu mopidy[8712]: INFO     [MainThread] mopidy.commands Stopping Mopidy frontends
okt 24 13:41:21 Desktop-Ubuntu mopidy[8712]: INFO     [MainThread] mopidy.commands GLib mainloop got SIGTERM. Exiting...
okt 24 13:41:21 Desktop-Ubuntu systemd[1]: Stopping Mopidy music server...
okt 24 13:39:19 Desktop-Ubuntu mopidy[8712]: DEBUG    [HttpServer] mopidy_iris.core {'id': 166661155982169, 'jsonrpc': '2.0', 'method': 'get_version', 'result': {'version': {'current': '3.64.1', 'latest': '3.64.1', 'is_root': False, 'upgrade_available': False}}, 'recipient': 'T00FAV1K9FUY'}
okt 24 13:39:19 Desktop-Ubuntu mopidy[8712]: DEBUG    [HttpServer] mopidy_iris.handlers Iris websocket message received: {"jsonrpc":"2.0","id":166661155982169,"method":"get_version"}
okt 24 13:39:19 Desktop-Ubuntu mopidy[8712]: DEBUG    [HttpServer] mopidy_iris.core {'id': 166661155932077, 'jsonrpc': '2.0', 'method': 'get_queue_metadata', 'result': {'queue_metadata': {}}, 'recipient': 'T00FAV1K9FUY'}
okt 24 13:39:19 Desktop-Ubuntu mopidy[8712]: DEBUG    [HttpServer] mopidy_iris.handlers Iris websocket message received: {"jsonrpc":"2.0","id":166661155932077,"method":"get_queue_metadata"}
okt 24 13:39:19 Desktop-Ubuntu mopidy[8712]: DEBUG    [HttpServer] mopidy_iris.core {'id': 166661155931964, 'jsonrpc': '2.0', 'method': 'get_pinned', 'result': {'pinned': []}, 'recipient': 'T00FAV1K9FUY'}
okt 24 13:39:19 Desktop-Ubuntu mopidy[8712]: DEBUG    [HttpServer] mopidy_iris.handlers Iris websocket message received: {"jsonrpc":"2.0","id":166661155931964,"method":"get_pinned"}
okt 24 13:39:19 Desktop-Ubuntu mopidy[8712]: DEBUG    [HttpServer] mopidy_iris.core {'id': 166661155931785, 'jsonrpc': '2.0', 'method': 'get_commands', 'result': {'commands': {}}, 'recipient': 'T00FAV1K9FUY'}
okt 24 13:39:19 Desktop-Ubuntu mopidy[8712]: DEBUG    [HttpServer] mopidy_iris.handlers Iris websocket message received: {"jsonrpc":"2.0","id":166661155931785,"method":"get_commands"}
okt 24 13:39:19 Desktop-Ubuntu mopidy[8712]: DEBUG    [HttpServer] mopidy_iris.core {'id': 166661155931751, 'jsonrpc': '2.0', 'method': 'get_radio', 'result': {'radio': {'enabled': 0, 'seed_artists': [], 'seed_genres': [], 'seed_tracks': [], 'results': []}}, 'recipient': 'T00FAV1K9FUY'}
okt 24 13:39:19 Desktop-Ubuntu mopidy[8712]: DEBUG    [HttpServer] mopidy_iris.handlers Iris websocket message received: {"jsonrpc":"2.0","id":166661155931751,"method":"get_radio"}
okt 24 13:39:19 Desktop-Ubuntu mopidy[8712]: DEBUG    [HttpServer] mopidy_iris.core {'id': 166661155931636, 'jsonrpc': '2.0', 'method': 'get_shared_config', 'result': {'shared_config': {}}, 'recipient': 'T00FAV1K9FUY'}
okt 24 13:39:19 Desktop-Ubuntu mopidy[8712]: DEBUG    [HttpServer] mopidy_iris.handlers Iris websocket message received: {"jsonrpc":"2.0","id":166661155931636,"method":"get_shared_config"}
okt 24 13:39:19 Desktop-Ubuntu mopidy[8712]: DEBUG    [HttpServer] mopidy_iris.core {'id': 166661155931534, 'jsonrpc': '2.0', 'method': 'get_config', 'result': {'config': {'is_root': False, 'spotify_username': False, 'country': 'NZ', 'locale': 'en_NZ', 'snapcast_enabled': True, 'snapcast_host': 'localhost', 'snapcast_port': '1780', 'snapcast_ssl': False, 'snapcast_stream': 'Default', 'spotify_authorization_url': 'https://jamesbarnsley.co.nz/iris/auth_spotify.php', 'lastfm_authorization_url': 'https://jamesbarnsley.co.nz/iris/auth_lastfm.php', 'genius_authorization_url': 'https://jamesbarnsley.co.nz/iris/auth_genius.php', 'shared_config': {}}}, 'recipient': 'T00FAV1K9FUY'}
okt 24 13:39:19 Desktop-Ubuntu mopidy[8712]: DEBUG    [HttpServer] mopidy_iris.handlers Iris websocket message received: {"jsonrpc":"2.0","id":166661155931534,"method":"get_config"}
okt 24 13:39:19 Desktop-Ubuntu mopidy[8712]: DEBUG    [HttpServer] mopidy_iris.core {'id': 166661155931390, 'jsonrpc': '2.0', 'method': 'update_connection', 'result': {'connection': {'connection_id': 'T00FAV1K9FUY', 'ip': '127.0.0.1', 'created': '2022-10-24 13:39:19', 'username': 166656148284185, 'client_id': 166656148284193}}, 'recipient': 'T00FAV1K9FUY'}
okt 24 13:39:19 Desktop-Ubuntu mopidy[8712]: DEBUG    [HttpServer] mopidy_iris.core {'method': 'connection_changed', 'params': {'connection': {'connection_id': 'T00FAV1K9FUY', 'ip': '127.0.0.1', 'created': '2022-10-24 13:39:19', 'username': 166656148284185, 'client_id': 166656148284193}}}
okt 24 13:39:19 Desktop-Ubuntu mopidy[8712]: DEBUG    [HttpServer] mopidy_iris.handlers Iris websocket message received: {"jsonrpc":"2.0","id":166661155931390,"method":"update_connection","params":{"username":166656148284185,"client_id":166656148284193}}
okt 24 13:39:19 Desktop-Ubuntu mopidy[8712]: DEBUG    [HttpServer] mopidy_iris.core {'method': 'connection_added', 'params': {'connection': {'connection_id': 'T00FAV1K9FUY', 'ip': '127.0.0.1', 'created': '2022-10-24 13:39:19'}}}
okt 24 13:39:19 Desktop-Ubuntu mopidy[8712]: DEBUG    [HttpServer] mopidy_iris.core <mopidy_iris.handlers.WebsocketHandler object at 0x7f5c3bad2b30>
okt 24 13:39:19 Desktop-Ubuntu mopidy[8712]: DEBUG    [HttpServer] mopidy_iris.core Connection added
okt 24 13:39:19 Desktop-Ubuntu mopidy[8712]: INFO     [HttpServer] tornado.access 101 GET /iris/ws/ (127.0.0.1) 0.51ms
okt 24 13:39:15 Desktop-Ubuntu mopidy[8712]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 37, "result": null}'
okt 24 13:39:15 Desktop-Ubuntu mopidy[8712]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.playback.get_stream_title","params":{},"jsonrpc":"2.0","id":37}'
okt 24 13:39:15 Desktop-Ubuntu mopidy[8712]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 36, "result": ["file", "http", "https", "m3u", "rtsp"]}'
okt 24 13:39:15 Desktop-Ubuntu mopidy[8712]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.get_uri_schemes","params":{},"jsonrpc":"2.0","id":36}'
okt 24 13:39:15 Desktop-Ubuntu mopidy[8712]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 35, "result": 0}'
okt 24 13:39:15 Desktop-Ubuntu mopidy[8712]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.playback.get_time_position","params":{},"jsonrpc":"2.0","id":35}'
okt 24 13:39:15 Desktop-Ubuntu mopidy[8712]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 34, "result": []}'
okt 24 13:39:15 Desktop-Ubuntu mopidy[8712]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_tl_tracks","params":{},"jsonrpc":"2.0","id":34}'
okt 24 13:39:15 Desktop-Ubuntu mopidy[8712]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 33, "result": false}'
okt 24 13:39:15 Desktop-Ubuntu mopidy[8712]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_repeat","params":{},"jsonrpc":"2.0","id":33}'
okt 24 13:39:15 Desktop-Ubuntu mopidy[8712]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 32, "result": false}'
okt 24 13:39:15 Desktop-Ubuntu mopidy[8712]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_random","params":{},"jsonrpc":"2.0","id":32}'
okt 24 13:39:15 Desktop-Ubuntu mopidy[8712]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 31, "result": false}'
okt 24 13:39:15 Desktop-Ubuntu mopidy[8712]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_consume","params":{},"jsonrpc":"2.0","id":31}'
okt 24 13:39:15 Desktop-Ubuntu mopidy[8712]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 30, "result": false}'
okt 24 13:39:15 Desktop-Ubuntu mopidy[8712]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.mixer.get_mute","params":{},"jsonrpc":"2.0","id":30}'
okt 24 13:39:15 Desktop-Ubuntu mopidy[8712]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 29, "result": 100}'
okt 24 13:39:15 Desktop-Ubuntu mopidy[8712]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.mixer.get_volume","params":{},"jsonrpc":"2.0","id":29}'
okt 24 13:39:15 Desktop-Ubuntu mopidy[8712]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 28, "result": "stopped"}'
okt 24 13:39:15 Desktop-Ubuntu mopidy[8712]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.playback.get_state","params":{},"jsonrpc":"2.0","id":28}'
okt 24 13:39:15 Desktop-Ubuntu mopidy[8712]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 27, "result": null}'
okt 24 13:39:15 Desktop-Ubuntu mopidy[8712]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.playback.get_current_tl_track","params":{},"jsonrpc":"2.0","id":27}'
okt 24 13:39:15 Desktop-Ubuntu mopidy[8712]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 26, "result": {"core.get_uri_schemes": {"description": "Get list of URI schemes we can handle", "params": []}, "core.get_version": {"description": "Get version of the Mopidy core API", "params": []}, "core.history.get_history": {"description": "Get the track history.\\n\\nThe timestamps are milliseconds since epoch.\\n\\n:returns: the track history\\n:rtype: list of (timestamp, :class:`mopidy.models.Ref`) tuples", "params": []}, "core.history.get_length": {"description": "Get the number of tracks in the history.\\n\\n:returns: the history length\\n:rtype: int", "params": []}, "core.library.browse": {"description": "Browse directories and tracks at the given ``uri``.\\n\\n``uri`` is a string which represents some directory belonging to a\\nbackend. To get the intial root directories for backends pass\\n:class:`None` as the URI.\\n\\nReturns a list of :class:`mopidy.models.Ref` objects for the\\ndirectories and tracks at the given ``uri``.\\n\\nThe :class:`~mopidy.models.Ref` objects representing tracks keep the\\ntrack\'s original URI. A matching pair of objects can look like this::\\n\\n    Track(uri=\'dummy:/foo.mp3\', name=\'foo\', artists=..., album=...)\\n    Ref.track(uri=\'dummy:/foo.mp3\', name=\'foo\')\\n\\nThe :class:`~mopidy.models.Ref` objects representing directories have\\nbackend specific URIs. These are opaque values, so no one but the\\nbackend that created them should try and derive any meaning from them.\\nThe only valid exception to this is checking the scheme, as it is used\\nto route browse requests to the correct backend.\\n\\nFor example, the dummy library\'s ``/bar`` directory could be returned\\nlike this::\\n\\n    Ref.directory(uri=\'dummy:directory:/bar\', name=\'bar\')\\n\\n:param string uri: URI to browse\\n:rtype: list of :class:`mopidy.models.Ref`\\n\\n.. versionadded:: 0.18", "params": [{"name": "uri"}]}, "core.library.get_distinct": {"description": "List distinct values for a given field from the library.\\n\\nThis has mainly been added to support the list commands the MPD\\nprotocol supports in a more sane fashion. Other frontends are not\\nrecommended to use this method.\\n\\n:param string field: Any one of ``uri``, ``track_name``, ``album``,\\n    ``artist``, ``albumartist``, ``composer``, ``performer``,\\n    ``track_no``, ``genre``, ``date``, ``comment``, ``disc_no``,\\n    ``musicbrainz_albumid``, ``musicbrainz_artistid``, or\\n    ``musicbrainz_trackid``.\\n:param dict query: Query to use for limiting results, see\\n    :meth:`search` for details about the query format.\\n:rtype: set of values corresponding to the requested field type.\\n\\n.. versionadded:: 1.0", "params": [{"name": "field"}, {"name": "query", "default": null}]}, "core.library.get_images": {"description": "Lookup the images for the given URIs\\n\\nBackends can use this to return image URIs for any URI they know about\\nbe it tracks, albums, playlists. The lookup result is a dictionary\\nmapping the provided URIs to lists of images.\\n\\nUnknown URIs or URIs the corresponding backend couldn\'t find anything\\nfor will simply return an empty list for that URI.\\n\\n:param uris: list of URIs to find images for\\n:type uris: list of string\\n:rtype: {uri: tuple of :class:`mopidy.models.Image`}\\n\\n.. versionadded:: 1.0", "params": [{"name": "uris"}]}, "core.library.lookup": {"description": "Lookup the given URIs.\\n\\nIf the URI expands to multiple tracks, the returned list will contain\\nthem all.\\n\\n:param uris: track URIs\\n:type uris: list of string\\n:rtype: {uri: list of :class:`mopidy.models.Track`}", "params": [{"name": "uris"}]}, "core.library.refresh": {"description": "Refresh library. Limit to URI and below if an URI is given.\\n\\n:param uri: directory or track URI\\n:type uri: string", "params": [{"name": "uri", "default": null}]}, "core.library.search": {"description": "Search the library for tracks where ``field`` contains ``values``.\\n\\n``field`` can be one of ``uri``, ``track_name``, ``album``, ``artist``,\\n``albumartist``, ``composer``, ``performer``, ``track_no``, ``genre``,\\n``date``, ``comment``, ``disc_no``, ``musicbrainz_albumid``,\\n``musicbrainz_artistid``, ``musicbrainz_trackid`` or ``any``.\\n\\nIf ``uris`` is given, the search is limited to results from within the\\nURI roots. For example passing ``uris=[\'file:\']`` will limit the search\\nto the local backend.\\n\\nExamples::\\n\\n    # Returns results matching \'a\' in any backend\\n    search({\'any\': [\'a\']})\\n\\n    # Returns results matching artist \'xyz\' in any backend\\n    search({\'artist\': [\'xyz\']})\\n\\n    # Returns results matching \'a\' and \'b\' and artist \'xyz\' in any\\n    # backend\\n    search({\'any\': [\'a\', \'b\'], \'artist\': [\'xyz\']})\\n\\n    # Returns results matching \'a\' if within the given URI roots\\n    # \\"file:///media/music\\" and \\"spotify:\\"\\n    search({\'any\': [\'a\']}, uris=[\'file:///media/music\', \'spotify:\'])\\n\\n    # Returns results matching artist \'xyz\' and \'abc\' in any backend\\n    search({\'artist\': [\'xyz\', \'abc\']})\\n\\n:param query: one or more queries to search for\\n:type query: dict\\n:param uris: zero or more URI roots to limit the search to\\n:type uris: list of string or :class:`None`\\n:param exact: if the search should use exact matching\\n:type exact: :class:`bool`\\n:rtype: list of :class:`mopidy.models.SearchResult`\\n\\n.. versionadded:: 1.0\\n    The ``exact`` keyword argument.", "params": [{"name": "query"}, {"name": "uris", "default": null}, {"name": "exact", "default": false}]}, "core.mixer.get_mute": {"description": "Get mute state.\\n\\n:class:`True` if muted, :class:`False` unmuted, :class:`None` if\\nunknown.", "params": []}, "core.mixer.get_volume": {"description": "Get the volume.\\n\\nInteger in range [0..100] or :class:`None` if unknown.\\n\\nThe volume scale is linear.", "params": []}, "core.mixer.set_mute": {"description": "Set mute state.\\n\\n:class:`True` to mute, :class:`False` to unmute.\\n\\nReturns :class:`True` if call is successful, otherwise :class:`False`.", "params": [{"name": "mute"}]}, "core.mixer.set_volume": {"description": "Set the volume.\\n\\nThe volume is defined as an integer in range [0..100].\\n\\nThe volume scale is linear.\\n\\nReturns :class:`True` if call is successful, otherwise :class:`False`.", "params": [{"name": "volume"}]}, "core.playback.get_current_tl_track": {"description": "Get the currently playing or selected track.\\n\\nReturns a :class:`mopidy.models.TlTrack` or :class:`None`.", "params": []}, "core.playback.get_current_tlid": {"description": "Get the currently playing or selected TLID.\\n\\nExtracted from :meth:`get_current_tl_track` for convenience.\\n\\nReturns a :class:`int` or :class:`None`.\\n\\n.. versionadded:: 1.1", "params": []}, "core.playback.get_current_track": {"description": "Get the currently playing or selected track.\\n\\nExtracted from :meth:`get_current_tl_track` for convenience.\\n\\nReturns a :class:`mopidy.models.Track` or :class:`None`.", "params": []}, "core.playback.get_state": {"description": "Get The playback state.", "params": []}, "core.playback.get_stream_title": {"description": "Get the current stream title or :class:`None`.", "params": []}, "core.playback.get_time_position": {"description": "Get time position in milliseconds.", "params": []}, "core.playback.next": {"description": "Change to the next track.\\n\\nThe current playback state will be kept. If it was playing, playing\\nwill continue. If it was paused, it will still be paused, etc.", "params": []}, "core.playback.pause": {"description": "Pause playback.", "params": []}, "core.playback.play": {"description": "Play the given track, or if the given tl_track and tlid is\\n:class:`None`, play the currently active track.\\n\\nNote that the track **must** already be in the tracklist.\\n\\n.. deprecated:: 3.0\\n    The ``tl_track`` argument. Use ``tlid`` instead.\\n\\n:param tl_track: track to play\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:param tlid: TLID of the track to play\\n:type tlid: :class:`int` or :class:`None`", "params": [{"name": "tl_track", "default": null}, {"name": "tlid", "default": null}]}, "core.playback.previous": {"description": "Change to the previous track.\\n\\nThe current playback state will be kept. If it was playing, playing\\nwill continue. If it was paused, it will still be paused, etc.", "params": []}, "core.playback.resume": {"description": "If paused, resume playing the current track.", "params": []}, "core.playback.seek": {"description": "Seeks to time position given in milliseconds.\\n\\n:param time_position: time position in milliseconds\\n:type time_position: int\\n:rtype: :class:`True` if successful, else :class:`False`", "params": [{"name": "time_position"}]}, "core.playback.set_state": {"description": "Set the playback state.\\n\\nMust be :attr:`PLAYING`, :attr:`PAUSED`, or :attr:`STOPPED`.\\n\\nPossible states and transitions:\\n\\n.. digraph:: state_transitions\\n\\n    \\"STOPPED\\" -> \\"PLAYING\\" [ label=\\"play\\" ]\\n    \\"STOPPED\\" -> \\"PAUSED\\" [ label=\\"pause\\" ]\\n    \\"PLAYING\\" -> \\"STOPPED\\" [ label=\\"stop\\" ]\\n    \\"PLAYING\\" -> \\"PAUSED\\" [ label=\\"pause\\" ]\\n    \\"PLAYING\\" -> \\"PLAYING\\" [ label=\\"play\\" ]\\n    \\"PAUSED\\" -> \\"PLAYING\\" [ label=\\"resume\\" ]\\n    \\"PAUSED\\" -> \\"STOPPED\\" [ label=\\"stop\\" ]", "params": [{"name": "new_state"}]}, "core.playback.stop": {"description": "Stop playing.", "params": []}, "core.playlists.as_list": {"description": "Get a list of the currently available playlists.\\n\\nReturns a list of :class:`~mopidy.models.Ref` objects referring to the\\nplaylists. In other words, no information about the playlists\' content\\nis given.\\n\\n:rtype: list of :class:`mopidy.models.Ref`\\n\\n.. versionadded:: 1.0", "params": []}, "core.playlists.create": {"description": "Create a new playlist.\\n\\nIf ``uri_scheme`` matches an URI scheme handled by a current backend,\\nthat backend is asked to create the playlist. If ``uri_scheme`` is\\n:class:`None` or doesn\'t match a current backend, the first backend is\\nasked to create the playlist.\\n\\nAll new playlists must be created by calling this method, and **not**\\nby creating new instances of :class:`mopidy.models.Playlist`.\\n\\n:param name: name of the new playlist\\n:type name: string\\n:param uri_scheme: use the backend matching the URI scheme\\n:type uri_scheme: string\\n:rtype: :class:`mopidy.models.Playlist` or :class:`None`", "params": [{"name": "name"}, {"name": "uri_scheme", "default": null}]}, "core.playlists.delete": {"description": "Delete playlist identified by the URI.\\n\\nIf the URI doesn\'t match the URI schemes handled by the current\\nbackends, nothing happens.\\n\\nReturns :class:`True` if deleted, :class:`False` otherwise.\\n\\n:param uri: URI of the playlist to delete\\n:type uri: string\\n:rtype: :class:`bool`\\n\\n.. versionchanged:: 2.2\\n    Return type defined.", "params": [{"name": "uri"}]}, "core.playlists.get_items": {"description": "Get the items in a playlist specified by ``uri``.\\n\\nReturns a list of :class:`~mopidy.models.Ref` objects referring to the\\nplaylist\'s items.\\n\\nIf a playlist with the given ``uri`` doesn\'t exist, it returns\\n:class:`None`.\\n\\n:rtype: list of :class:`mopidy.models.Ref`, or :class:`None`\\n\\n.. versionadded:: 1.0", "params": [{"name": "uri"}]}, "core.playlists.get_uri_schemes": {"description": "Get the list of URI schemes that support playlists.\\n\\n:rtype: list of string\\n\\n.. versionadded:: 2.0", "params": []}, "core.playlists.lookup": {"description": "Lookup playlist with given URI in both the set of playlists and in any\\nother playlist sources. Returns :class:`None` if not found.\\n\\n:param uri: playlist URI\\n:type uri: string\\n:rtype: :class:`mopidy.models.Playlist` or :class:`None`", "params": [{"name": "uri"}]}, "core.playlists.refresh": {"description": "Refresh the playlists in :attr:`playlists`.\\n\\nIf ``uri_scheme`` is :class:`None`, all backends are asked to refresh.\\nIf ``uri_scheme`` is an URI scheme handled by a backend, only that\\nbackend is asked to refresh. If ``uri_scheme`` doesn\'t match any\\ncurrent backend, nothing happens.\\n\\n:param uri_scheme: limit to the backend matching the URI scheme\\n:type uri_scheme: string", "params": [{"name": "uri_scheme", "default": null}]}, "core.playlists.save": {"description": "Save the playlist.\\n\\nFor a playlist to be saveable, it must have the ``uri`` attribute set.\\nYou must not set the ``uri`` atribute yourself, but use playlist\\nobjects returned by :meth:`create` or retrieved from :attr:`playlists`,\\nwhich will always give you saveable playlists.\\n\\nThe method returns the saved playlist. The return playlist may differ\\nfrom the saved playlist. E.g. if the playlist name was changed, the\\nreturned playlist may have a different URI. The caller of this method\\nmust throw away the playlist sent to this method, and use the\\nreturned playlist instead.\\n\\nIf the playlist\'s URI isn\'t set or doesn\'t match the URI scheme of a\\ncurrent backend, nothing is done and :class:`None` is returned.\\n\\n:param playlist: the playlist\\n:type playlist: :class:`mopidy.models.Playlist`\\n:rtype: :class:`mopidy.models.Playlist` or :class:`None`", "params": [{"name": "playlist"}]}, "core.tracklist.add": {"description": "Add tracks to the tracklist.\\n\\nIf ``uris`` is given instead of ``tracks``, the URIs are\\nlooked up in the library and the resulting tracks are added to the\\ntracklist.\\n\\nIf ``at_position`` is given, the tracks are inserted at the given\\nposition in the tracklist. If ``at_position`` is not given, the tracks\\nare appended to the end of the tracklist.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.\\n\\n:param tracks: tracks to add\\n:type tracks: list of :class:`mopidy.models.Track` or :class:`None`\\n:param at_position: position in tracklist to add tracks\\n:type at_position: int or :class:`None`\\n:param uris: list of URIs for tracks to add\\n:type uris: list of string or :class:`None`\\n:rtype: list of :class:`mopidy.models.TlTrack`\\n\\n.. versionadded:: 1.0\\n    The ``uris`` argument.\\n\\n.. deprecated:: 1.0\\n    The ``tracks`` argument. Use ``uris``.", "params": [{"name": "tracks", "default": null}, {"name": "at_position", "default": null}, {"name": "uris", "default": null}]}, "core.tracklist.clear": {"description": "Clear the tracklist.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.", "params": []}, "core.tracklist.eot_track": {"description": "The track that will be played after the given track.\\n\\nNot necessarily the same track as :meth:`next_track`.\\n\\n.. deprecated:: 3.0\\n    Use :meth:`get_eot_tlid` instead.\\n\\n:param tl_track: the reference track\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:rtype: :class:`mopidy.models.TlTrack` or :class:`None`", "params": [{"name": "tl_track"}]}, "core.tracklist.filter": {"description": "Filter the tracklist by the given criteria.\\n\\nEach rule in the criteria consists of a model field and a list of\\nvalues to compare it against. If the model field matches any of the\\nvalues, it may be returned.\\n\\nOnly tracks that match all the given criteria are returned.\\n\\nExamples::\\n\\n    # Returns tracks with TLIDs 1, 2, 3, or 4 (tracklist ID)\\n    filter({\'tlid\': [1, 2, 3, 4]})\\n\\n    # Returns track with URIs \'xyz\' or \'abc\'\\n    filter({\'uri\': [\'xyz\', \'abc\']})\\n\\n    # Returns track with a matching TLIDs (1, 3 or 6) and a\\n    # matching URI (\'xyz\' or \'abc\')\\n    filter({\'tlid\': [1, 3, 6], \'uri\': [\'xyz\', \'abc\']})\\n\\n:param criteria: one or more rules to match by\\n:type criteria: dict, of (string, list) pairs\\n:rtype: list of :class:`mopidy.models.TlTrack`", "params": [{"name": "criteria"}]}, "core.tracklist.get_consume": {"description": "Get consume mode.\\n\\n:class:`True`\\n    Tracks are removed from the tracklist when they have been played.\\n:class:`False`\\n    Tracks are not removed from the tracklist.", "params": []}, "core.tracklist.get_eot_tlid": {"description": "The TLID of the track that will be played after the current track.\\n\\nNot necessarily the same TLID as returned by :meth:`get_next_tlid`.\\n\\n:rtype: :class:`int` or :class:`None`\\n\\n.. versionadded:: 1.1", "params": []}, "core.tracklist.get_length": {"description": "Get length of the tracklist.", "params": []}, "core.tracklist.get_next_tlid": {"description": "The tlid of the track that will be played if calling\\n:meth:`mopidy.core.PlaybackController.next()`.\\n\\nFor normal playback this is the next track in the tracklist. If repeat\\nis enabled the next track can loop around the tracklist. When random is\\nenabled this should be a random track, all tracks should be played once\\nbefore the tracklist repeats.\\n\\n:rtype: :class:`int` or :class:`None`\\n\\n.. versionadded:: 1.1", "params": []}, "core.tracklist.get_previous_tlid": {"description": "Returns the TLID of the track that will be played if calling\\n:meth:`mopidy.core.PlaybackController.previous()`.\\n\\nFor normal playback this is the previous track in the tracklist. If\\nrandom and/or consume is enabled it should return the current track\\ninstead.\\n\\n:rtype: :class:`int` or :class:`None`\\n\\n.. versionadded:: 1.1", "params": []}, "core.tracklist.get_random": {"description": "Get random mode.\\n\\n:class:`True`\\n    Tracks are selected at random from the tracklist.\\n:class:`False`\\n    Tracks are played in the order of the tracklist.", "params": []}, "core.tracklist.get_repeat": {"description": "Get repeat mode.\\n\\n:class:`True`\\n    The tracklist is played repeatedly.\\n:class:`False`\\n    The tracklist is played once.", "params": []}, "core.tracklist.get_single": {"description": "Get single mode.\\n\\n:class:`True`\\n    Playback is stopped after current song, unless in ``repeat`` mode.\\n:class:`False`\\n    Playback continues after current song.", "params": []}, "core.tracklist.get_tl_tracks": {"description": "Get tracklist as list of :class:`mopidy.models.TlTrack`.", "params": []}, "core.tracklist.get_tracks": {"description": "Get tracklist as list of :class:`mopidy.models.Track`.", "params": []}, "core.tracklist.get_version": {"description": "Get the tracklist version.\\n\\nInteger which is increased every time the tracklist is changed. Is not\\nreset before Mopidy is restarted.", "params": []}, "core.tracklist.index": {"description": "The position of the given track in the tracklist.\\n\\nIf neither *tl_track* or *tlid* is given we return the index of\\nthe currently playing track.\\n\\n:param tl_track: the track to find the index of\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:param tlid: TLID of the track to find the index of\\n:type tlid: :class:`int` or :class:`None`\\n:rtype: :class:`int` or :class:`None`\\n\\n.. versionadded:: 1.1\\n    The *tlid* parameter", "params": [{"name": "tl_track", "default": null}, {"name": "tlid", "default": null}]}, "core.tracklist.move": {"description": "Move the tracks in the slice ``[start:end]`` to ``to_position``.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.\\n\\n:param start: position of first track to move\\n:type start: int\\n:param end: position after last track to move\\n:type end: int\\n:param to_position: new position for the tracks\\n:type to_position: int", "params": [{"name": "start"}, {"name": "end"}, {"name": "to_position"}]}, "core.tracklist.next_track": {"description": "The track that will be played if calling\\n:meth:`mopidy.core.PlaybackController.next()`.\\n\\nFor normal playback this is the next track in the tracklist. If repeat\\nis enabled the next track can loop around the tracklist. When random is\\nenabled this should be a random track, all tracks should be played once\\nbefore the tracklist repeats.\\n\\n.. deprecated:: 3.0\\n    Use :meth:`get_next_tlid` instead.\\n\\n:param tl_track: the reference track\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:rtype: :class:`mopidy.models.TlTrack` or :class:`None`", "params": [{"name": "tl_track"}]}, "core.tracklist.previous_track": {"description": "Returns the track that will be played if calling\\n:meth:`mopidy.core.PlaybackController.previous()`.\\n\\nFor normal playback this is the previous track in the tracklist. If\\nrandom and/or consume is enabled it should return the current track\\ninstead.\\n\\n.. deprecated:: 3.0\\n    Use :meth:`get_previous_tlid` instead.\\n\\n:param tl_track: the reference track\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:rtype: :class:`mopidy.models.TlTrack` or :class:`None`", "params": [{"name": "tl_track"}]}, "core.tracklist.remove": {"description": "Remove the matching tracks from the tracklist.\\n\\nUses :meth:`filter()` to lookup the tracks to remove.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.\\n\\n:param criteria: one or more rules to match by\\n:type criteria: dict, of (string, list) pairs\\n:rtype: list of :class:`mopidy.models.TlTrack` that were removed", "params": [{"name": "criteria"}]}, "core.tracklist.set_consume": {"description": "Set consume mode.\\n\\n:class:`True`\\n    Tracks are removed from the tracklist when they have been played.\\n:class:`False`\\n    Tracks are not removed from the tracklist.", "params": [{"name": "value"}]}, "core.tracklist.set_random": {"description": "Set random mode.\\n\\n:class:`True`\\n    Tracks are selected at random from the tracklist.\\n:class:`False`\\n    Tracks are played in the order of the tracklist.", "params": [{"name": "value"}]}, "core.tracklist.set_repeat": {"description": "Set repeat mode.\\n\\nTo repeat a single track, set both ``repeat`` and ``single``.\\n\\n:class:`True`\\n    The tracklist is played repeatedly.\\n:class:`False`\\n    The tracklist is played once.", "params": [{"name": "value"}]}, "core.tracklist.set_single": {"description": "Set single mode.\\n\\n:class:`True`\\n    Playback is stopped after current song, unless in ``repeat`` mode.\\n:class:`False`\\n    Playback continues after current song.", "params": [{"name": "value"}]}, "core.tracklist.shuffle": {"description": "Shuffles the entire tracklist. If ``start`` and ``end`` is given only\\nshuffles the slice ``[start:end]``.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.\\n\\n:param start: position of first track to shuffle\\n:type start: int or :class:`None`\\n:param end: position after last track to shuffle\\n:type end: int or :class:`None`", "params": [{"name": "start", "default": null}, {"name": "end", "default": null}]}, "core.tracklist.slice": {"description": "Returns a slice of the tracklist, limited by the given start and end\\npositions.\\n\\n:param start: position of first track to include in slice\\n:type start: int\\n:param end: position after last track to include in slice\\n:type end: int\\n:rtype: :class:`mopidy.models.TlTrack`", "params": [{"name": "start"}, {"name": "end"}]}}}'
okt 24 13:39:15 Desktop-Ubuntu mopidy[8712]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.describe","jsonrpc":"2.0","id":26}'
okt 24 13:39:15 Desktop-Ubuntu mopidy[8712]: DEBUG    [HttpServer] mopidy.http.handlers New WebSocket connection from 127.0.0.1
okt 24 13:39:15 Desktop-Ubuntu mopidy[8712]: INFO     [HttpServer] tornado.access 101 GET /mopidy/ws/ (127.0.0.1) 19.54ms
okt 24 13:39:15 Desktop-Ubuntu mopidy[8712]: DEBUG    [HttpFrontend-10 (_actor_loop)] mopidy.zeroconf Zeroconf service 'Mopidy HTTP server on Desktop-Ubuntu' (_mopidy-http._tcp at []:6680): Published
okt 24 13:39:15 Desktop-Ubuntu mopidy[8712]: DEBUG    [HttpFrontend-10 (_actor_loop)] mopidy.zeroconf Zeroconf service 'Mopidy HTTP server on Desktop-Ubuntu' (_http._tcp at []:6680): Published
okt 24 13:39:14 Desktop-Ubuntu mopidy[8712]:     '/': <class 'tornado.web.RedirectHandler'>
okt 24 13:39:14 Desktop-Ubuntu mopidy[8712]:     '/mopidy/': <class 'mopidy.http.handlers.ClientListHandler'>
okt 24 13:39:14 Desktop-Ubuntu mopidy[8712]:     '/mopidy/(.+)': <class 'mopidy.http.handlers.StaticFileHandler'>
okt 24 13:39:14 Desktop-Ubuntu mopidy[8712]:     '/mopidy/rpc': <class 'mopidy.http.handlers.JsonRpcHandler'>
okt 24 13:39:14 Desktop-Ubuntu mopidy[8712]:     '/mopidy/ws/?': <class 'mopidy.http.handlers.WebSocketHandler'>
okt 24 13:39:14 Desktop-Ubuntu mopidy[8712]:     '/mopidy': <class 'mopidy.http.handlers.AddSlashHandler'>
okt 24 13:39:14 Desktop-Ubuntu mopidy[8712]:     '/iris/(.*)': <class 'mopidy_iris.handlers.ReactRouterHandler'>
okt 24 13:39:14 Desktop-Ubuntu mopidy[8712]:     '/iris/((.*)(?:css|js|json|map)$)': <class 'tornado.web.StaticFileHandler'>
okt 24 13:39:14 Desktop-Ubuntu mopidy[8712]:     '/iris/assets/(.*)': <class 'tornado.web.StaticFileHandler'>
okt 24 13:39:14 Desktop-Ubuntu mopidy[8712]:     '/iris/ws/?': <class 'mopidy_iris.handlers.WebsocketHandler'>
okt 24 13:39:14 Desktop-Ubuntu mopidy[8712]:     '/iris/http/([^/]*)': <class 'mopidy_iris.handlers.HttpHandler'>
okt 24 13:39:14 Desktop-Ubuntu mopidy[8712]:     '/iris': <class 'mopidy.http.handlers.AddSlashHandler'>
okt 24 13:39:14 Desktop-Ubuntu mopidy[8712]: DEBUG    [HttpServer] mopidy.http.actor HTTP routes from extensions:
okt 24 13:39:14 Desktop-Ubuntu mopidy[8712]: DEBUG    [HttpServer] mopidy.http.actor Default webclient is mopidy
okt 24 13:39:14 Desktop-Ubuntu mopidy[8712]: DEBUG    [HttpServer] mopidy.http.actor Loaded HTTP extension: mopidy
okt 24 13:39:14 Desktop-Ubuntu mopidy[8712]: DEBUG    [HttpServer] mopidy.http.actor Loaded HTTP extension: iris
okt 24 13:39:14 Desktop-Ubuntu mopidy[8712]: DEBUG    [HttpServer] asyncio Using selector: EpollSelector
okt 24 13:39:14 Desktop-Ubuntu mopidy[8712]: INFO     [MainThread] mopidy.commands Starting GLib mainloop
okt 24 13:39:14 Desktop-Ubuntu mopidy[8712]: TRACE    [MainThread] mopidy.internal.timer HttpFrontend took 1ms
okt 24 13:39:14 Desktop-Ubuntu mopidy[8712]: INFO     [HttpFrontend-10 (_actor_loop)] mopidy.http.actor HTTP server running at [::ffff:127.0.0.1]:6680
okt 24 13:39:14 Desktop-Ubuntu mopidy[8712]: DEBUG    [MainThread] pykka Starting HttpFrontend (urn:uuid:440ad57b-820e-4f2a-82a0-02ebeeb26001)
okt 24 13:39:14 Desktop-Ubuntu mopidy[8712]: DEBUG    [MainThread] pykka Registered HttpFrontend (urn:uuid:440ad57b-820e-4f2a-82a0-02ebeeb26001)
okt 24 13:39:14 Desktop-Ubuntu mopidy[8712]: DEBUG    [MainThread] mopidy.http.actor Starting HTTP server
okt 24 13:39:14 Desktop-Ubuntu mopidy[8712]: TRACE    [MainThread] mopidy.internal.timer IrisFrontend took 0ms
okt 24 13:39:14 Desktop-Ubuntu mopidy[8712]: INFO     [IrisFrontend-8 (_actor_loop)] mopidy_iris.core Starting Iris 3.64.1
okt 24 13:39:14 Desktop-Ubuntu mopidy[8712]: DEBUG    [MainThread] pykka Starting IrisFrontend (urn:uuid:8534feaf-5622-47dc-b7e9-a9f234216870)
okt 24 13:39:14 Desktop-Ubuntu mopidy[8712]: DEBUG    [MainThread] pykka Registered IrisFrontend (urn:uuid:8534feaf-5622-47dc-b7e9-a9f234216870)
okt 24 13:39:14 Desktop-Ubuntu mopidy[8712]: TRACE    [MainThread] mopidy.internal.timer YTMusicScrobbleFE took 0ms
okt 24 13:39:14 Desktop-Ubuntu mopidy[8712]: DEBUG    [MainThread] pykka Starting YTMusicScrobbleFE (urn:uuid:dc32c773-e4e1-4fb7-afd3-4a186acccc8b)
okt 24 13:39:14 Desktop-Ubuntu mopidy[8712]: DEBUG    [MainThread] pykka Registered YTMusicScrobbleFE (urn:uuid:dc32c773-e4e1-4fb7-afd3-4a186acccc8b)
okt 24 13:39:14 Desktop-Ubuntu mopidy[8712]: INFO     [MainThread] mopidy.commands Starting Mopidy frontends: YTMusicScrobbleFE, IrisFrontend, HttpFrontend
okt 24 13:39:14 Desktop-Ubuntu mopidy[8712]: DEBUG    [MainThread] pykka Starting Core (urn:uuid:6122c51c-b1b4-4437-bdee-8298cc844319)
okt 24 13:39:14 Desktop-Ubuntu mopidy[8712]: DEBUG    [MainThread] pykka Registered Core (urn:uuid:6122c51c-b1b4-4437-bdee-8298cc844319)
okt 24 13:39:14 Desktop-Ubuntu mopidy[8712]: INFO     [MainThread] mopidy.commands Starting Mopidy core
okt 24 13:39:14 Desktop-Ubuntu mopidy[8712]: TRACE    [MainThread] mopidy.internal.timer StreamBackend took 5ms
okt 24 13:39:14 Desktop-Ubuntu mopidy[8712]: DEBUG    [MainThread] pykka Starting StreamBackend (urn:uuid:8925327d-dfa6-4d96-9a3d-35e27bd58f30)
okt 24 13:39:14 Desktop-Ubuntu mopidy[8712]: DEBUG    [MainThread] pykka Registered StreamBackend (urn:uuid:8925327d-dfa6-4d96-9a3d-35e27bd58f30)
okt 24 13:39:14 Desktop-Ubuntu mopidy[8712]: INFO     [Audio-2 (_actor_loop)] mopidy.audio.actor Audio output set to "pulsesink server=127.0.0.1"
okt 24 13:39:14 Desktop-Ubuntu mopidy[8712]: TRACE    [MainThread] mopidy.internal.timer M3UBackend took 2ms
okt 24 13:39:14 Desktop-Ubuntu mopidy[8712]: DEBUG    [MainThread] pykka Starting M3UBackend (urn:uuid:81cdab19-9966-4f71-8faf-edd0dfdc8d9f)
okt 24 13:39:14 Desktop-Ubuntu mopidy[8712]: DEBUG    [MainThread] pykka Registered M3UBackend (urn:uuid:81cdab19-9966-4f71-8faf-edd0dfdc8d9f)
okt 24 13:39:14 Desktop-Ubuntu mopidy[8712]: TRACE    [MainThread] mopidy.internal.timer FileBackend took 2ms
okt 24 13:39:14 Desktop-Ubuntu mopidy[8712]: DEBUG    [MainThread] pykka Starting FileBackend (urn:uuid:1841631d-df1c-4916-babb-fe882393c610)
okt 24 13:39:14 Desktop-Ubuntu mopidy[8712]: DEBUG    [MainThread] pykka Registered FileBackend (urn:uuid:1841631d-df1c-4916-babb-fe882393c610)
okt 24 13:39:14 Desktop-Ubuntu mopidy[8712]: DEBUG    [MainThread] mopidy.file.library Failed expanding path ($XDG_MUSIC_DIR) from file/media_dirs config value.
okt 24 13:39:14 Desktop-Ubuntu mopidy[8712]: AttributeError: 'YTMusic' object has no attribute 'headers'
okt 24 13:39:14 Desktop-Ubuntu mopidy[8712]:     if 'x-goog-visitor-id' not in self.headers:
okt 24 13:39:14 Desktop-Ubuntu mopidy[8712]:   File "/usr/local/lib/python3.10/dist-packages/ytmusicapi/ytmusic.py", line 98, in __init__
okt 24 13:39:14 Desktop-Ubuntu mopidy[8712]:     self.api = YTMusic(self._ytmusicapi_auth_json)
okt 24 13:39:14 Desktop-Ubuntu mopidy[8712]:   File "/usr/local/lib/python3.10/dist-packages/mopidy_ytmusic/backend.py", line 65, in __init__
okt 24 13:39:14 Desktop-Ubuntu mopidy[8712]:     obj = cls(*args, **kwargs)
okt 24 13:39:14 Desktop-Ubuntu mopidy[8712]:   File "/usr/lib/python3/dist-packages/pykka/_actor.py", line 91, in start
okt 24 13:39:14 Desktop-Ubuntu mopidy[8712]:     backend = backend_class.start(
okt 24 13:39:14 Desktop-Ubuntu mopidy[8712]:   File "/usr/lib/python3/dist-packages/mopidy/commands.py", line 412, in start_backends
okt 24 13:39:14 Desktop-Ubuntu mopidy[8712]:     yield
okt 24 13:39:14 Desktop-Ubuntu mopidy[8712]:   File "/usr/lib/python3/dist-packages/mopidy/commands.py", line 248, in _actor_error_handling
okt 24 13:39:14 Desktop-Ubuntu mopidy[8712]: Traceback (most recent call last):
okt 24 13:39:14 Desktop-Ubuntu mopidy[8712]: ERROR    [MainThread] mopidy.commands Got un-handled exception from YTMusicBackend
okt 24 13:39:14 Desktop-Ubuntu mopidy[8712]: INFO     [MainThread] mopidy.commands Starting Mopidy backends: YTMusicBackend, FileBackend, M3UBackend, StreamBackend
okt 24 13:39:14 Desktop-Ubuntu mopidy[8712]: DEBUG    [MainThread] pykka Starting Audio (urn:uuid:c33f495b-7b82-4a26-873c-948861a4bfdf)
okt 24 13:39:14 Desktop-Ubuntu mopidy[8712]: DEBUG    [MainThread] pykka Registered Audio (urn:uuid:c33f495b-7b82-4a26-873c-948861a4bfdf)
okt 24 13:39:14 Desktop-Ubuntu mopidy[8712]: INFO     [MainThread] mopidy.commands Starting Mopidy audio
okt 24 13:39:14 Desktop-Ubuntu mopidy[8712]: DEBUG    [MainThread] mopidy.commands Mixer volume left unchanged
okt 24 13:39:14 Desktop-Ubuntu mopidy[8712]: DEBUG    [MainThread] pykka Starting SoftwareMixer (urn:uuid:32bea29c-13c4-4749-adb5-57b45afe38e1)
okt 24 13:39:14 Desktop-Ubuntu mopidy[8712]: DEBUG    [MainThread] pykka Registered SoftwareMixer (urn:uuid:32bea29c-13c4-4749-adb5-57b45afe38e1)
okt 24 13:39:14 Desktop-Ubuntu mopidy[8712]: INFO     [MainThread] mopidy.commands Starting Mopidy mixer: SoftwareMixer
okt 24 13:39:14 Desktop-Ubuntu mopidy[8712]: DEBUG    [MainThread] mopidy.commands Available Mopidy mixers: SoftwareMixer
okt 24 13:39:14 Desktop-Ubuntu mopidy[8712]: WARNING  [MainThread] mopidy.__main__ Please fix the extension configuration errors or disable the extensions to silence these messages.
okt 24 13:39:14 Desktop-Ubuntu mopidy[8712]: WARNING  [MainThread] mopidy.__main__   local/media_dir must be set.
okt 24 13:39:14 Desktop-Ubuntu mopidy[8712]: WARNING  [MainThread] mopidy.__main__ Found local configuration errors. The extension has been automatically disabled:
okt 24 13:39:14 Desktop-Ubuntu mopidy[8712]: INFO     [MainThread] mopidy.__main__ Disabled extensions: soundcloud, youtube, local
okt 24 13:39:14 Desktop-Ubuntu mopidy[8712]: INFO     [MainThread] mopidy.__main__ Enabled extensions: http, stream, softwaremixer, m3u, ytmusic, file, iris
okt 24 13:39:14 Desktop-Ubuntu mopidy[8712]: DEBUG    [MainThread] mopidy.ext Validating extension: stream
okt 24 13:39:14 Desktop-Ubuntu mopidy[8712]: DEBUG    [MainThread] mopidy.ext Validating extension: softwaremixer
okt 24 13:39:14 Desktop-Ubuntu mopidy[8712]: DEBUG    [MainThread] mopidy.ext Validating extension: m3u
okt 24 13:39:14 Desktop-Ubuntu mopidy[8712]: DEBUG    [MainThread] mopidy.ext Validating extension: http
okt 24 13:39:14 Desktop-Ubuntu mopidy[8712]: DEBUG    [MainThread] mopidy.ext Validating extension: file
okt 24 13:39:14 Desktop-Ubuntu mopidy[8712]: DEBUG    [MainThread] mopidy.ext Validating extension: iris
okt 24 13:39:14 Desktop-Ubuntu mopidy[8712]: DEBUG    [MainThread] mopidy.ext Validating extension: ytmusic
okt 24 13:39:14 Desktop-Ubuntu mopidy[8712]: DEBUG    [MainThread] mopidy.ext Validating extension: soundcloud
okt 24 13:39:14 Desktop-Ubuntu mopidy[8712]: DEBUG    [MainThread] mopidy.ext Validating extension: local
okt 24 13:39:14 Desktop-Ubuntu mopidy[8712]: DEBUG    [MainThread] mopidy.ext Validating extension: youtube
okt 24 13:39:14 Desktop-Ubuntu mopidy[8712]: WARNING  [MainThread] mopidy.config Ignoring config section 'jukebox' because no matching extension was found
okt 24 13:39:14 Desktop-Ubuntu mopidy[8712]: INFO     [MainThread] mopidy.config Loading config from command line options
okt 24 13:39:14 Desktop-Ubuntu mopidy[8712]: INFO     [MainThread] mopidy.config Loading config from file:///etc/mopidy/mopidy.conf
okt 24 13:39:14 Desktop-Ubuntu mopidy[8712]: INFO     [MainThread] mopidy.config Loading config from file:///usr/share/mopidy/conf.d/mopidy.conf
okt 24 13:39:14 Desktop-Ubuntu mopidy[8712]: INFO     [MainThread] mopidy.config Loading config from builtin defaults
okt 24 13:39:14 Desktop-Ubuntu mopidy[8712]: DEBUG    [MainThread] mopidy.config.keyring Fetching passwords from your keyring failed. Any passwords stored in the keyring will not be available. (org.freedesktop.DBus.Error.NotSupported: Unable to autolaunch a dbus-daemon without a $DISPLAY for X11)
okt 24 13:39:14 Desktop-Ubuntu mopidy[8712]: DEBUG    [MainThread] mopidy.ext Discovered extensions: youtube, local, soundcloud, ytmusic, iris, file, http, m3u, softwaremixer, stream
okt 24 13:39:14 Desktop-Ubuntu mopidy[8712]: DEBUG    [MainThread] mopidy.ext Loaded extension: Mopidy-Stream 3.3.0
okt 24 13:39:14 Desktop-Ubuntu mopidy[8712]: DEBUG    [MainThread] mopidy.ext Loading entry point: stream = mopidy.stream:Extension
okt 24 13:39:14 Desktop-Ubuntu mopidy[8712]: DEBUG    [MainThread] mopidy.ext Loaded extension: Mopidy-SoftwareMixer 3.3.0
okt 24 13:39:14 Desktop-Ubuntu mopidy[8712]: DEBUG    [MainThread] mopidy.ext Loading entry point: softwaremixer = mopidy.softwaremixer:Extension
okt 24 13:39:14 Desktop-Ubuntu mopidy[8712]: DEBUG    [MainThread] mopidy.ext Loaded extension: Mopidy-M3U 3.3.0
okt 24 13:39:14 Desktop-Ubuntu mopidy[8712]: DEBUG    [MainThread] mopidy.ext Loading entry point: m3u = mopidy.m3u:Extension
okt 24 13:39:14 Desktop-Ubuntu mopidy[8712]: DEBUG    [MainThread] mopidy.ext Loaded extension: Mopidy-HTTP 3.3.0
okt 24 13:39:14 Desktop-Ubuntu mopidy[8712]: DEBUG    [MainThread] mopidy.ext Loading entry point: http = mopidy.http:Extension
okt 24 13:39:14 Desktop-Ubuntu mopidy[8712]: DEBUG    [MainThread] mopidy.ext Loaded extension: Mopidy-File 3.3.0
okt 24 13:39:14 Desktop-Ubuntu mopidy[8712]: DEBUG    [MainThread] mopidy.ext Loading entry point: file = mopidy.file:Extension
okt 24 13:39:14 Desktop-Ubuntu mopidy[8712]: DEBUG    [MainThread] mopidy.ext Loaded extension: Mopidy-Iris 3.64.1
okt 24 13:39:14 Desktop-Ubuntu mopidy[8712]: DEBUG    [MainThread] mopidy.ext Loading entry point: iris = mopidy_iris:Extension
okt 24 13:39:14 Desktop-Ubuntu mopidy[8712]: DEBUG    [MainThread] mopidy.ext Loaded extension: Mopidy-YTMusic 0.3.7
okt 24 13:39:14 Desktop-Ubuntu mopidy[8712]: DEBUG    [MainThread] mopidy.ext Loading entry point: ytmusic = mopidy_ytmusic:Extension
okt 24 13:39:14 Desktop-Ubuntu mopidy[8712]: DEBUG    [MainThread] mopidy.ext Loaded extension: Mopidy-SoundCloud 3.0.1
okt 24 13:39:14 Desktop-Ubuntu mopidy[8712]: DEBUG    [MainThread] mopidy.ext Loading entry point: soundcloud = mopidy_soundcloud:Extension
okt 24 13:39:14 Desktop-Ubuntu mopidy[8712]: DEBUG    [MainThread] mopidy.ext Loaded extension: Mopidy-Local 3.2.1
okt 24 13:39:14 Desktop-Ubuntu mopidy[8712]: DEBUG    [MainThread] mopidy.ext Loading entry point: local = mopidy_local:Extension
okt 24 13:39:14 Desktop-Ubuntu mopidy[8712]: DEBUG    [MainThread] mopidy.ext Loaded extension: Mopidy-YouTube 3.6.1
okt 24 13:39:14 Desktop-Ubuntu mopidy[8712]: DEBUG    [MainThread] mopidy.ext Loading entry point: youtube = mopidy_youtube:Extension
okt 24 13:39:14 Desktop-Ubuntu mopidy[8712]: INFO     [MainThread] mopidy.__main__ Starting Mopidy 3.3.0
okt 24 13:39:14 Desktop-Ubuntu systemd[1]: Started Mopidy music server.
okt 24 13:39:14 Desktop-Ubuntu systemd[1]: Starting Mopidy music server...
okt 24 13:39:14 Desktop-Ubuntu systemd[1]: Stopped Mopidy music server.
okt 24 13:39:14 Desktop-Ubuntu systemd[1]: mopidy.service: Deactivated successfully.
okt 24 13:39:14 Desktop-Ubuntu mopidy[8549]: Failed loading provided credentials. Make sure to provide a string or a file path. Reason: Expecting value: line 1 column 1 (char 0)
okt 24 13:39:14 Desktop-Ubuntu mopidy[8549]: DEBUG    [MainThread] mopidy.internal.process All actors stopped.
okt 24 13:39:14 Desktop-Ubuntu mopidy[8549]: DEBUG    [SoftwareMixer-1 (_actor_loop)] pykka Stopped SoftwareMixer (urn:uuid:66943319-8bdb-4079-8035-1ae4ac9d54f7)
okt 24 13:39:14 Desktop-Ubuntu mopidy[8549]: DEBUG    [SoftwareMixer-1 (_actor_loop)] pykka Unregistered SoftwareMixer (urn:uuid:66943319-8bdb-4079-8035-1ae4ac9d54f7)
okt 24 13:39:14 Desktop-Ubuntu mopidy[8549]: DEBUG    [MainThread] mopidy.internal.process Stopping 1 instance(s) of SoftwareMixer
okt 24 13:39:14 Desktop-Ubuntu mopidy[8549]: INFO     [MainThread] mopidy.commands Stopping Mopidy mixer
okt 24 13:39:14 Desktop-Ubuntu mopidy[8549]: DEBUG    [Audio-2 (_actor_loop)] pykka Stopped Audio (urn:uuid:b5ff608d-d07b-4024-9475-4e7e35169b6d)
okt 24 13:39:14 Desktop-Ubuntu mopidy[8549]: DEBUG    [Audio-2 (_actor_loop)] pykka Unregistered Audio (urn:uuid:b5ff608d-d07b-4024-9475-4e7e35169b6d)
okt 24 13:39:14 Desktop-Ubuntu mopidy[8549]: DEBUG    [MainThread] mopidy.internal.process Stopping 1 instance(s) of Audio
okt 24 13:39:14 Desktop-Ubuntu mopidy[8549]: INFO     [MainThread] mopidy.commands Stopping Mopidy audio
okt 24 13:39:14 Desktop-Ubuntu mopidy[8549]: DEBUG    [StreamBackend-5 (_actor_loop)] pykka Stopped StreamBackend (urn:uuid:96fc5aa1-00ed-46c6-88e8-87a1facb50a7)
okt 24 13:39:14 Desktop-Ubuntu mopidy[8549]: DEBUG    [StreamBackend-5 (_actor_loop)] pykka Unregistered StreamBackend (urn:uuid:96fc5aa1-00ed-46c6-88e8-87a1facb50a7)
okt 24 13:39:14 Desktop-Ubuntu mopidy[8549]: DEBUG    [MainThread] mopidy.internal.process Stopping 1 instance(s) of StreamBackend
okt 24 13:39:14 Desktop-Ubuntu mopidy[8549]: DEBUG    [M3UBackend-4 (_actor_loop)] pykka Stopped M3UBackend (urn:uuid:0442e5e1-34ec-4027-afe3-ade7531e2392)
okt 24 13:39:14 Desktop-Ubuntu mopidy[8549]: DEBUG    [M3UBackend-4 (_actor_loop)] pykka Unregistered M3UBackend (urn:uuid:0442e5e1-34ec-4027-afe3-ade7531e2392)
okt 24 13:39:14 Desktop-Ubuntu mopidy[8549]: DEBUG    [MainThread] mopidy.internal.process Stopping 1 instance(s) of M3UBackend
okt 24 13:39:14 Desktop-Ubuntu mopidy[8549]: DEBUG    [FileBackend-3 (_actor_loop)] pykka Stopped FileBackend (urn:uuid:6609671c-ab77-4f14-a699-3d1a877e4517)
okt 24 13:39:14 Desktop-Ubuntu mopidy[8549]: DEBUG    [FileBackend-3 (_actor_loop)] pykka Unregistered FileBackend (urn:uuid:6609671c-ab77-4f14-a699-3d1a877e4517)
okt 24 13:39:14 Desktop-Ubuntu mopidy[8549]: DEBUG    [MainThread] mopidy.internal.process Stopping 1 instance(s) of FileBackend
okt 24 13:39:14 Desktop-Ubuntu mopidy[8549]: DEBUG    [MainThread] mopidy.internal.process Stopping 0 instance(s) of YTMusicBackend
okt 24 13:39:14 Desktop-Ubuntu mopidy[8549]: INFO     [MainThread] mopidy.commands Stopping Mopidy backends
okt 24 13:39:14 Desktop-Ubuntu mopidy[8549]: DEBUG    [Core-6 (_actor_loop)] pykka Stopped Core (urn:uuid:71e7c5c3-bae8-45d6-b78f-76ce291aeb39)
okt 24 13:39:14 Desktop-Ubuntu mopidy[8549]: DEBUG    [Core-6 (_actor_loop)] pykka Unregistered Core (urn:uuid:71e7c5c3-bae8-45d6-b78f-76ce291aeb39)
okt 24 13:39:14 Desktop-Ubuntu mopidy[8549]: DEBUG    [HttpServer] mopidy.http.actor Stopped HTTP server
okt 24 13:39:14 Desktop-Ubuntu mopidy[8549]: DEBUG    [MainThread] mopidy.internal.process Stopping 1 instance(s) of Core
okt 24 13:39:14 Desktop-Ubuntu mopidy[8549]: INFO     [MainThread] mopidy.commands Stopping Mopidy core
okt 24 13:39:14 Desktop-Ubuntu mopidy[8549]: DEBUG    [HttpFrontend-10 (_actor_loop)] mopidy.http.actor Stopping HTTP server
okt 24 13:39:14 Desktop-Ubuntu mopidy[8549]: DEBUG    [HttpFrontend-10 (_actor_loop)] mopidy.zeroconf Zeroconf service 'Mopidy HTTP server on Desktop-Ubuntu' (_mopidy-http._tcp at []:6680): Unpublished
okt 24 13:39:14 Desktop-Ubuntu mopidy[8549]: DEBUG    [HttpFrontend-10 (_actor_loop)] mopidy.zeroconf Zeroconf service 'Mopidy HTTP server on Desktop-Ubuntu' (_http._tcp at []:6680): Unpublished
okt 24 13:39:14 Desktop-Ubuntu mopidy[8549]: DEBUG    [HttpFrontend-10 (_actor_loop)] pykka Stopped HttpFrontend (urn:uuid:ca8f4dd1-3679-42a0-927c-4f1a7d4f31f6)
okt 24 13:39:14 Desktop-Ubuntu mopidy[8549]: DEBUG    [HttpFrontend-10 (_actor_loop)] pykka Unregistered HttpFrontend (urn:uuid:ca8f4dd1-3679-42a0-927c-4f1a7d4f31f6)
okt 24 13:39:14 Desktop-Ubuntu mopidy[8549]: DEBUG    [MainThread] mopidy.internal.process Stopping 1 instance(s) of HttpFrontend
okt 24 13:39:14 Desktop-Ubuntu mopidy[8549]: INFO     [IrisFrontend-8 (_actor_loop)] mopidy_iris.core Stopping Iris
okt 24 13:39:14 Desktop-Ubuntu mopidy[8549]: DEBUG    [IrisFrontend-8 (_actor_loop)] pykka Stopped IrisFrontend (urn:uuid:00afaac0-454b-4909-ba20-c6e4132042ea)
okt 24 13:39:14 Desktop-Ubuntu mopidy[8549]: DEBUG    [IrisFrontend-8 (_actor_loop)] pykka Unregistered IrisFrontend (urn:uuid:00afaac0-454b-4909-ba20-c6e4132042ea)
okt 24 13:39:14 Desktop-Ubuntu mopidy[8549]: DEBUG    [MainThread] mopidy.internal.process Stopping 1 instance(s) of IrisFrontend
okt 24 13:39:14 Desktop-Ubuntu mopidy[8549]: DEBUG    [YTMusicScrobbleFE-7 (_actor_loop)] pykka Stopped YTMusicScrobbleFE (urn:uuid:486acb54-722c-4e5f-9ef1-fab5d635dc03)
okt 24 13:39:14 Desktop-Ubuntu mopidy[8549]: DEBUG    [YTMusicScrobbleFE-7 (_actor_loop)] pykka Unregistered YTMusicScrobbleFE (urn:uuid:486acb54-722c-4e5f-9ef1-fab5d635dc03)
okt 24 13:39:14 Desktop-Ubuntu mopidy[8549]: DEBUG    [MainThread] mopidy.internal.process Stopping 1 instance(s) of YTMusicScrobbleFE
okt 24 13:39:14 Desktop-Ubuntu mopidy[8549]: INFO     [MainThread] mopidy.commands Stopping Mopidy frontends
okt 24 13:39:14 Desktop-Ubuntu mopidy[8549]: INFO     [MainThread] mopidy.commands GLib mainloop got SIGTERM. Exiting...
okt 24 13:39:14 Desktop-Ubuntu systemd[1]: Stopping Mopidy music server...
okt 24 13:37:38 Desktop-Ubuntu mopidy[8549]: DEBUG    [HttpServer] mopidy_iris.core {'id': 166661145810192, 'jsonrpc': '2.0', 'method': 'get_version', 'result': {'version': {'current': '3.64.1', 'latest': '3.64.1', 'is_root': False, 'upgrade_available': False}}, 'recipient': '59M2IBUSQCMX'}
okt 24 13:37:38 Desktop-Ubuntu mopidy[8549]: DEBUG    [HttpServer] mopidy_iris.handlers Iris websocket message received: {"jsonrpc":"2.0","id":166661145810192,"method":"get_version"}
okt 24 13:37:37 Desktop-Ubuntu mopidy[8549]: DEBUG    [HttpServer] mopidy_iris.core {'id': 166661145760019, 'jsonrpc': '2.0', 'method': 'get_queue_metadata', 'result': {'queue_metadata': {}}, 'recipient': '59M2IBUSQCMX'}
okt 24 13:37:37 Desktop-Ubuntu mopidy[8549]: DEBUG    [HttpServer] mopidy_iris.handlers Iris websocket message received: {"jsonrpc":"2.0","id":166661145760019,"method":"get_queue_metadata"}
okt 24 13:37:37 Desktop-Ubuntu mopidy[8549]: DEBUG    [HttpServer] mopidy_iris.core {'id': 166661145759981, 'jsonrpc': '2.0', 'method': 'get_pinned', 'result': {'pinned': []}, 'recipient': '59M2IBUSQCMX'}
okt 24 13:37:37 Desktop-Ubuntu mopidy[8549]: DEBUG    [HttpServer] mopidy_iris.handlers Iris websocket message received: {"jsonrpc":"2.0","id":166661145759981,"method":"get_pinned"}
okt 24 13:37:37 Desktop-Ubuntu mopidy[8549]: DEBUG    [HttpServer] mopidy_iris.core {'id': 166661145759824, 'jsonrpc': '2.0', 'method': 'get_commands', 'result': {'commands': {}}, 'recipient': '59M2IBUSQCMX'}
okt 24 13:37:37 Desktop-Ubuntu mopidy[8549]: DEBUG    [HttpServer] mopidy_iris.handlers Iris websocket message received: {"jsonrpc":"2.0","id":166661145759824,"method":"get_commands"}
okt 24 13:37:37 Desktop-Ubuntu mopidy[8549]: DEBUG    [HttpServer] mopidy_iris.core {'id': 166661145759799, 'jsonrpc': '2.0', 'method': 'get_radio', 'result': {'radio': {'enabled': 0, 'seed_artists': [], 'seed_genres': [], 'seed_tracks': [], 'results': []}}, 'recipient': '59M2IBUSQCMX'}
okt 24 13:37:37 Desktop-Ubuntu mopidy[8549]: DEBUG    [HttpServer] mopidy_iris.handlers Iris websocket message received: {"jsonrpc":"2.0","id":166661145759799,"method":"get_radio"}
okt 24 13:37:37 Desktop-Ubuntu mopidy[8549]: DEBUG    [HttpServer] mopidy_iris.core {'id': 166661145759617, 'jsonrpc': '2.0', 'method': 'get_shared_config', 'result': {'shared_config': {}}, 'recipient': '59M2IBUSQCMX'}
okt 24 13:37:37 Desktop-Ubuntu mopidy[8549]: DEBUG    [HttpServer] mopidy_iris.handlers Iris websocket message received: {"jsonrpc":"2.0","id":166661145759617,"method":"get_shared_config"}
okt 24 13:37:37 Desktop-Ubuntu mopidy[8549]: DEBUG    [HttpServer] mopidy_iris.core {'id': 166661145759584, 'jsonrpc': '2.0', 'method': 'get_config', 'result': {'config': {'is_root': False, 'spotify_username': False, 'country': 'NZ', 'locale': 'en_NZ', 'snapcast_enabled': True, 'snapcast_host': 'localhost', 'snapcast_port': '1780', 'snapcast_ssl': False, 'snapcast_stream': 'Default', 'spotify_authorization_url': 'https://jamesbarnsley.co.nz/iris/auth_spotify.php', 'lastfm_authorization_url': 'https://jamesbarnsley.co.nz/iris/auth_lastfm.php', 'genius_authorization_url': 'https://jamesbarnsley.co.nz/iris/auth_genius.php', 'shared_config': {}}}, 'recipient': '59M2IBUSQCMX'}
okt 24 13:37:37 Desktop-Ubuntu mopidy[8549]: DEBUG    [HttpServer] mopidy_iris.handlers Iris websocket message received: {"jsonrpc":"2.0","id":166661145759584,"method":"get_config"}
okt 24 13:37:37 Desktop-Ubuntu mopidy[8549]: DEBUG    [HttpServer] mopidy_iris.core {'id': 166661145759435, 'jsonrpc': '2.0', 'method': 'update_connection', 'result': {'connection': {'connection_id': '59M2IBUSQCMX', 'ip': '127.0.0.1', 'created': '2022-10-24 13:37:37', 'username': 166656148284185, 'client_id': 166656148284193}}, 'recipient': '59M2IBUSQCMX'}
okt 24 13:37:37 Desktop-Ubuntu mopidy[8549]: DEBUG    [HttpServer] mopidy_iris.core {'method': 'connection_changed', 'params': {'connection': {'connection_id': '59M2IBUSQCMX', 'ip': '127.0.0.1', 'created': '2022-10-24 13:37:37', 'username': 166656148284185, 'client_id': 166656148284193}}}
okt 24 13:37:37 Desktop-Ubuntu mopidy[8549]: DEBUG    [HttpServer] mopidy_iris.handlers Iris websocket message received: {"jsonrpc":"2.0","id":166661145759435,"method":"update_connection","params":{"username":166656148284185,"client_id":166656148284193}}
okt 24 13:37:37 Desktop-Ubuntu mopidy[8549]: DEBUG    [HttpServer] mopidy_iris.core {'method': 'connection_added', 'params': {'connection': {'connection_id': '59M2IBUSQCMX', 'ip': '127.0.0.1', 'created': '2022-10-24 13:37:37'}}}
okt 24 13:37:37 Desktop-Ubuntu mopidy[8549]: DEBUG    [HttpServer] mopidy_iris.core <mopidy_iris.handlers.WebsocketHandler object at 0x7f9958c26a70>
okt 24 13:37:37 Desktop-Ubuntu mopidy[8549]: DEBUG    [HttpServer] mopidy_iris.core Connection added
okt 24 13:37:37 Desktop-Ubuntu mopidy[8549]: INFO     [HttpServer] tornado.access 101 GET /iris/ws/ (127.0.0.1) 0.55ms
okt 24 13:37:33 Desktop-Ubuntu mopidy[8549]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 25, "result": null}'
okt 24 13:37:33 Desktop-Ubuntu mopidy[8549]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.playback.get_stream_title","params":{},"jsonrpc":"2.0","id":25}'
okt 24 13:37:33 Desktop-Ubuntu mopidy[8549]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 24, "result": ["file", "http", "https", "m3u", "rtsp"]}'
okt 24 13:37:33 Desktop-Ubuntu mopidy[8549]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.get_uri_schemes","params":{},"jsonrpc":"2.0","id":24}'
okt 24 13:37:33 Desktop-Ubuntu mopidy[8549]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 23, "result": 0}'
okt 24 13:37:33 Desktop-Ubuntu mopidy[8549]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.playback.get_time_position","params":{},"jsonrpc":"2.0","id":23}'
okt 24 13:37:33 Desktop-Ubuntu mopidy[8549]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 22, "result": []}'
okt 24 13:37:33 Desktop-Ubuntu mopidy[8549]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_tl_tracks","params":{},"jsonrpc":"2.0","id":22}'
okt 24 13:37:33 Desktop-Ubuntu mopidy[8549]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 21, "result": false}'
okt 24 13:37:33 Desktop-Ubuntu mopidy[8549]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_repeat","params":{},"jsonrpc":"2.0","id":21}'
okt 24 13:37:33 Desktop-Ubuntu mopidy[8549]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 20, "result": false}'
okt 24 13:37:33 Desktop-Ubuntu mopidy[8549]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_random","params":{},"jsonrpc":"2.0","id":20}'
okt 24 13:37:33 Desktop-Ubuntu mopidy[8549]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 19, "result": false}'
okt 24 13:37:33 Desktop-Ubuntu mopidy[8549]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_consume","params":{},"jsonrpc":"2.0","id":19}'
okt 24 13:37:33 Desktop-Ubuntu mopidy[8549]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 18, "result": false}'
okt 24 13:37:33 Desktop-Ubuntu mopidy[8549]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.mixer.get_mute","params":{},"jsonrpc":"2.0","id":18}'
okt 24 13:37:33 Desktop-Ubuntu mopidy[8549]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 17, "result": 100}'
okt 24 13:37:33 Desktop-Ubuntu mopidy[8549]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.mixer.get_volume","params":{},"jsonrpc":"2.0","id":17}'
okt 24 13:37:33 Desktop-Ubuntu mopidy[8549]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 16, "result": "stopped"}'
okt 24 13:37:33 Desktop-Ubuntu mopidy[8549]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.playback.get_state","params":{},"jsonrpc":"2.0","id":16}'
okt 24 13:37:33 Desktop-Ubuntu mopidy[8549]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 15, "result": null}'
okt 24 13:37:33 Desktop-Ubuntu mopidy[8549]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.playback.get_current_tl_track","params":{},"jsonrpc":"2.0","id":15}'
okt 24 13:37:33 Desktop-Ubuntu mopidy[8549]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 14, "result": {"core.get_uri_schemes": {"description": "Get list of URI schemes we can handle", "params": []}, "core.get_version": {"description": "Get version of the Mopidy core API", "params": []}, "core.history.get_history": {"description": "Get the track history.\\n\\nThe timestamps are milliseconds since epoch.\\n\\n:returns: the track history\\n:rtype: list of (timestamp, :class:`mopidy.models.Ref`) tuples", "params": []}, "core.history.get_length": {"description": "Get the number of tracks in the history.\\n\\n:returns: the history length\\n:rtype: int", "params": []}, "core.library.browse": {"description": "Browse directories and tracks at the given ``uri``.\\n\\n``uri`` is a string which represents some directory belonging to a\\nbackend. To get the intial root directories for backends pass\\n:class:`None` as the URI.\\n\\nReturns a list of :class:`mopidy.models.Ref` objects for the\\ndirectories and tracks at the given ``uri``.\\n\\nThe :class:`~mopidy.models.Ref` objects representing tracks keep the\\ntrack\'s original URI. A matching pair of objects can look like this::\\n\\n    Track(uri=\'dummy:/foo.mp3\', name=\'foo\', artists=..., album=...)\\n    Ref.track(uri=\'dummy:/foo.mp3\', name=\'foo\')\\n\\nThe :class:`~mopidy.models.Ref` objects representing directories have\\nbackend specific URIs. These are opaque values, so no one but the\\nbackend that created them should try and derive any meaning from them.\\nThe only valid exception to this is checking the scheme, as it is used\\nto route browse requests to the correct backend.\\n\\nFor example, the dummy library\'s ``/bar`` directory could be returned\\nlike this::\\n\\n    Ref.directory(uri=\'dummy:directory:/bar\', name=\'bar\')\\n\\n:param string uri: URI to browse\\n:rtype: list of :class:`mopidy.models.Ref`\\n\\n.. versionadded:: 0.18", "params": [{"name": "uri"}]}, "core.library.get_distinct": {"description": "List distinct values for a given field from the library.\\n\\nThis has mainly been added to support the list commands the MPD\\nprotocol supports in a more sane fashion. Other frontends are not\\nrecommended to use this method.\\n\\n:param string field: Any one of ``uri``, ``track_name``, ``album``,\\n    ``artist``, ``albumartist``, ``composer``, ``performer``,\\n    ``track_no``, ``genre``, ``date``, ``comment``, ``disc_no``,\\n    ``musicbrainz_albumid``, ``musicbrainz_artistid``, or\\n    ``musicbrainz_trackid``.\\n:param dict query: Query to use for limiting results, see\\n    :meth:`search` for details about the query format.\\n:rtype: set of values corresponding to the requested field type.\\n\\n.. versionadded:: 1.0", "params": [{"name": "field"}, {"name": "query", "default": null}]}, "core.library.get_images": {"description": "Lookup the images for the given URIs\\n\\nBackends can use this to return image URIs for any URI they know about\\nbe it tracks, albums, playlists. The lookup result is a dictionary\\nmapping the provided URIs to lists of images.\\n\\nUnknown URIs or URIs the corresponding backend couldn\'t find anything\\nfor will simply return an empty list for that URI.\\n\\n:param uris: list of URIs to find images for\\n:type uris: list of string\\n:rtype: {uri: tuple of :class:`mopidy.models.Image`}\\n\\n.. versionadded:: 1.0", "params": [{"name": "uris"}]}, "core.library.lookup": {"description": "Lookup the given URIs.\\n\\nIf the URI expands to multiple tracks, the returned list will contain\\nthem all.\\n\\n:param uris: track URIs\\n:type uris: list of string\\n:rtype: {uri: list of :class:`mopidy.models.Track`}", "params": [{"name": "uris"}]}, "core.library.refresh": {"description": "Refresh library. Limit to URI and below if an URI is given.\\n\\n:param uri: directory or track URI\\n:type uri: string", "params": [{"name": "uri", "default": null}]}, "core.library.search": {"description": "Search the library for tracks where ``field`` contains ``values``.\\n\\n``field`` can be one of ``uri``, ``track_name``, ``album``, ``artist``,\\n``albumartist``, ``composer``, ``performer``, ``track_no``, ``genre``,\\n``date``, ``comment``, ``disc_no``, ``musicbrainz_albumid``,\\n``musicbrainz_artistid``, ``musicbrainz_trackid`` or ``any``.\\n\\nIf ``uris`` is given, the search is limited to results from within the\\nURI roots. For example passing ``uris=[\'file:\']`` will limit the search\\nto the local backend.\\n\\nExamples::\\n\\n    # Returns results matching \'a\' in any backend\\n    search({\'any\': [\'a\']})\\n\\n    # Returns results matching artist \'xyz\' in any backend\\n    search({\'artist\': [\'xyz\']})\\n\\n    # Returns results matching \'a\' and \'b\' and artist \'xyz\' in any\\n    # backend\\n    search({\'any\': [\'a\', \'b\'], \'artist\': [\'xyz\']})\\n\\n    # Returns results matching \'a\' if within the given URI roots\\n    # \\"file:///media/music\\" and \\"spotify:\\"\\n    search({\'any\': [\'a\']}, uris=[\'file:///media/music\', \'spotify:\'])\\n\\n    # Returns results matching artist \'xyz\' and \'abc\' in any backend\\n    search({\'artist\': [\'xyz\', \'abc\']})\\n\\n:param query: one or more queries to search for\\n:type query: dict\\n:param uris: zero or more URI roots to limit the search to\\n:type uris: list of string or :class:`None`\\n:param exact: if the search should use exact matching\\n:type exact: :class:`bool`\\n:rtype: list of :class:`mopidy.models.SearchResult`\\n\\n.. versionadded:: 1.0\\n    The ``exact`` keyword argument.", "params": [{"name": "query"}, {"name": "uris", "default": null}, {"name": "exact", "default": false}]}, "core.mixer.get_mute": {"description": "Get mute state.\\n\\n:class:`True` if muted, :class:`False` unmuted, :class:`None` if\\nunknown.", "params": []}, "core.mixer.get_volume": {"description": "Get the volume.\\n\\nInteger in range [0..100] or :class:`None` if unknown.\\n\\nThe volume scale is linear.", "params": []}, "core.mixer.set_mute": {"description": "Set mute state.\\n\\n:class:`True` to mute, :class:`False` to unmute.\\n\\nReturns :class:`True` if call is successful, otherwise :class:`False`.", "params": [{"name": "mute"}]}, "core.mixer.set_volume": {"description": "Set the volume.\\n\\nThe volume is defined as an integer in range [0..100].\\n\\nThe volume scale is linear.\\n\\nReturns :class:`True` if call is successful, otherwise :class:`False`.", "params": [{"name": "volume"}]}, "core.playback.get_current_tl_track": {"description": "Get the currently playing or selected track.\\n\\nReturns a :class:`mopidy.models.TlTrack` or :class:`None`.", "params": []}, "core.playback.get_current_tlid": {"description": "Get the currently playing or selected TLID.\\n\\nExtracted from :meth:`get_current_tl_track` for convenience.\\n\\nReturns a :class:`int` or :class:`None`.\\n\\n.. versionadded:: 1.1", "params": []}, "core.playback.get_current_track": {"description": "Get the currently playing or selected track.\\n\\nExtracted from :meth:`get_current_tl_track` for convenience.\\n\\nReturns a :class:`mopidy.models.Track` or :class:`None`.", "params": []}, "core.playback.get_state": {"description": "Get The playback state.", "params": []}, "core.playback.get_stream_title": {"description": "Get the current stream title or :class:`None`.", "params": []}, "core.playback.get_time_position": {"description": "Get time position in milliseconds.", "params": []}, "core.playback.next": {"description": "Change to the next track.\\n\\nThe current playback state will be kept. If it was playing, playing\\nwill continue. If it was paused, it will still be paused, etc.", "params": []}, "core.playback.pause": {"description": "Pause playback.", "params": []}, "core.playback.play": {"description": "Play the given track, or if the given tl_track and tlid is\\n:class:`None`, play the currently active track.\\n\\nNote that the track **must** already be in the tracklist.\\n\\n.. deprecated:: 3.0\\n    The ``tl_track`` argument. Use ``tlid`` instead.\\n\\n:param tl_track: track to play\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:param tlid: TLID of the track to play\\n:type tlid: :class:`int` or :class:`None`", "params": [{"name": "tl_track", "default": null}, {"name": "tlid", "default": null}]}, "core.playback.previous": {"description": "Change to the previous track.\\n\\nThe current playback state will be kept. If it was playing, playing\\nwill continue. If it was paused, it will still be paused, etc.", "params": []}, "core.playback.resume": {"description": "If paused, resume playing the current track.", "params": []}, "core.playback.seek": {"description": "Seeks to time position given in milliseconds.\\n\\n:param time_position: time position in milliseconds\\n:type time_position: int\\n:rtype: :class:`True` if successful, else :class:`False`", "params": [{"name": "time_position"}]}, "core.playback.set_state": {"description": "Set the playback state.\\n\\nMust be :attr:`PLAYING`, :attr:`PAUSED`, or :attr:`STOPPED`.\\n\\nPossible states and transitions:\\n\\n.. digraph:: state_transitions\\n\\n    \\"STOPPED\\" -> \\"PLAYING\\" [ label=\\"play\\" ]\\n    \\"STOPPED\\" -> \\"PAUSED\\" [ label=\\"pause\\" ]\\n    \\"PLAYING\\" -> \\"STOPPED\\" [ label=\\"stop\\" ]\\n    \\"PLAYING\\" -> \\"PAUSED\\" [ label=\\"pause\\" ]\\n    \\"PLAYING\\" -> \\"PLAYING\\" [ label=\\"play\\" ]\\n    \\"PAUSED\\" -> \\"PLAYING\\" [ label=\\"resume\\" ]\\n    \\"PAUSED\\" -> \\"STOPPED\\" [ label=\\"stop\\" ]", "params": [{"name": "new_state"}]}, "core.playback.stop": {"description": "Stop playing.", "params": []}, "core.playlists.as_list": {"description": "Get a list of the currently available playlists.\\n\\nReturns a list of :class:`~mopidy.models.Ref` objects referring to the\\nplaylists. In other words, no information about the playlists\' content\\nis given.\\n\\n:rtype: list of :class:`mopidy.models.Ref`\\n\\n.. versionadded:: 1.0", "params": []}, "core.playlists.create": {"description": "Create a new playlist.\\n\\nIf ``uri_scheme`` matches an URI scheme handled by a current backend,\\nthat backend is asked to create the playlist. If ``uri_scheme`` is\\n:class:`None` or doesn\'t match a current backend, the first backend is\\nasked to create the playlist.\\n\\nAll new playlists must be created by calling this method, and **not**\\nby creating new instances of :class:`mopidy.models.Playlist`.\\n\\n:param name: name of the new playlist\\n:type name: string\\n:param uri_scheme: use the backend matching the URI scheme\\n:type uri_scheme: string\\n:rtype: :class:`mopidy.models.Playlist` or :class:`None`", "params": [{"name": "name"}, {"name": "uri_scheme", "default": null}]}, "core.playlists.delete": {"description": "Delete playlist identified by the URI.\\n\\nIf the URI doesn\'t match the URI schemes handled by the current\\nbackends, nothing happens.\\n\\nReturns :class:`True` if deleted, :class:`False` otherwise.\\n\\n:param uri: URI of the playlist to delete\\n:type uri: string\\n:rtype: :class:`bool`\\n\\n.. versionchanged:: 2.2\\n    Return type defined.", "params": [{"name": "uri"}]}, "core.playlists.get_items": {"description": "Get the items in a playlist specified by ``uri``.\\n\\nReturns a list of :class:`~mopidy.models.Ref` objects referring to the\\nplaylist\'s items.\\n\\nIf a playlist with the given ``uri`` doesn\'t exist, it returns\\n:class:`None`.\\n\\n:rtype: list of :class:`mopidy.models.Ref`, or :class:`None`\\n\\n.. versionadded:: 1.0", "params": [{"name": "uri"}]}, "core.playlists.get_uri_schemes": {"description": "Get the list of URI schemes that support playlists.\\n\\n:rtype: list of string\\n\\n.. versionadded:: 2.0", "params": []}, "core.playlists.lookup": {"description": "Lookup playlist with given URI in both the set of playlists and in any\\nother playlist sources. Returns :class:`None` if not found.\\n\\n:param uri: playlist URI\\n:type uri: string\\n:rtype: :class:`mopidy.models.Playlist` or :class:`None`", "params": [{"name": "uri"}]}, "core.playlists.refresh": {"description": "Refresh the playlists in :attr:`playlists`.\\n\\nIf ``uri_scheme`` is :class:`None`, all backends are asked to refresh.\\nIf ``uri_scheme`` is an URI scheme handled by a backend, only that\\nbackend is asked to refresh. If ``uri_scheme`` doesn\'t match any\\ncurrent backend, nothing happens.\\n\\n:param uri_scheme: limit to the backend matching the URI scheme\\n:type uri_scheme: string", "params": [{"name": "uri_scheme", "default": null}]}, "core.playlists.save": {"description": "Save the playlist.\\n\\nFor a playlist to be saveable, it must have the ``uri`` attribute set.\\nYou must not set the ``uri`` atribute yourself, but use playlist\\nobjects returned by :meth:`create` or retrieved from :attr:`playlists`,\\nwhich will always give you saveable playlists.\\n\\nThe method returns the saved playlist. The return playlist may differ\\nfrom the saved playlist. E.g. if the playlist name was changed, the\\nreturned playlist may have a different URI. The caller of this method\\nmust throw away the playlist sent to this method, and use the\\nreturned playlist instead.\\n\\nIf the playlist\'s URI isn\'t set or doesn\'t match the URI scheme of a\\ncurrent backend, nothing is done and :class:`None` is returned.\\n\\n:param playlist: the playlist\\n:type playlist: :class:`mopidy.models.Playlist`\\n:rtype: :class:`mopidy.models.Playlist` or :class:`None`", "params": [{"name": "playlist"}]}, "core.tracklist.add": {"description": "Add tracks to the tracklist.\\n\\nIf ``uris`` is given instead of ``tracks``, the URIs are\\nlooked up in the library and the resulting tracks are added to the\\ntracklist.\\n\\nIf ``at_position`` is given, the tracks are inserted at the given\\nposition in the tracklist. If ``at_position`` is not given, the tracks\\nare appended to the end of the tracklist.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.\\n\\n:param tracks: tracks to add\\n:type tracks: list of :class:`mopidy.models.Track` or :class:`None`\\n:param at_position: position in tracklist to add tracks\\n:type at_position: int or :class:`None`\\n:param uris: list of URIs for tracks to add\\n:type uris: list of string or :class:`None`\\n:rtype: list of :class:`mopidy.models.TlTrack`\\n\\n.. versionadded:: 1.0\\n    The ``uris`` argument.\\n\\n.. deprecated:: 1.0\\n    The ``tracks`` argument. Use ``uris``.", "params": [{"name": "tracks", "default": null}, {"name": "at_position", "default": null}, {"name": "uris", "default": null}]}, "core.tracklist.clear": {"description": "Clear the tracklist.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.", "params": []}, "core.tracklist.eot_track": {"description": "The track that will be played after the given track.\\n\\nNot necessarily the same track as :meth:`next_track`.\\n\\n.. deprecated:: 3.0\\n    Use :meth:`get_eot_tlid` instead.\\n\\n:param tl_track: the reference track\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:rtype: :class:`mopidy.models.TlTrack` or :class:`None`", "params": [{"name": "tl_track"}]}, "core.tracklist.filter": {"description": "Filter the tracklist by the given criteria.\\n\\nEach rule in the criteria consists of a model field and a list of\\nvalues to compare it against. If the model field matches any of the\\nvalues, it may be returned.\\n\\nOnly tracks that match all the given criteria are returned.\\n\\nExamples::\\n\\n    # Returns tracks with TLIDs 1, 2, 3, or 4 (tracklist ID)\\n    filter({\'tlid\': [1, 2, 3, 4]})\\n\\n    # Returns track with URIs \'xyz\' or \'abc\'\\n    filter({\'uri\': [\'xyz\', \'abc\']})\\n\\n    # Returns track with a matching TLIDs (1, 3 or 6) and a\\n    # matching URI (\'xyz\' or \'abc\')\\n    filter({\'tlid\': [1, 3, 6], \'uri\': [\'xyz\', \'abc\']})\\n\\n:param criteria: one or more rules to match by\\n:type criteria: dict, of (string, list) pairs\\n:rtype: list of :class:`mopidy.models.TlTrack`", "params": [{"name": "criteria"}]}, "core.tracklist.get_consume": {"description": "Get consume mode.\\n\\n:class:`True`\\n    Tracks are removed from the tracklist when they have been played.\\n:class:`False`\\n    Tracks are not removed from the tracklist.", "params": []}, "core.tracklist.get_eot_tlid": {"description": "The TLID of the track that will be played after the current track.\\n\\nNot necessarily the same TLID as returned by :meth:`get_next_tlid`.\\n\\n:rtype: :class:`int` or :class:`None`\\n\\n.. versionadded:: 1.1", "params": []}, "core.tracklist.get_length": {"description": "Get length of the tracklist.", "params": []}, "core.tracklist.get_next_tlid": {"description": "The tlid of the track that will be played if calling\\n:meth:`mopidy.core.PlaybackController.next()`.\\n\\nFor normal playback this is the next track in the tracklist. If repeat\\nis enabled the next track can loop around the tracklist. When random is\\nenabled this should be a random track, all tracks should be played once\\nbefore the tracklist repeats.\\n\\n:rtype: :class:`int` or :class:`None`\\n\\n.. versionadded:: 1.1", "params": []}, "core.tracklist.get_previous_tlid": {"description": "Returns the TLID of the track that will be played if calling\\n:meth:`mopidy.core.PlaybackController.previous()`.\\n\\nFor normal playback this is the previous track in the tracklist. If\\nrandom and/or consume is enabled it should return the current track\\ninstead.\\n\\n:rtype: :class:`int` or :class:`None`\\n\\n.. versionadded:: 1.1", "params": []}, "core.tracklist.get_random": {"description": "Get random mode.\\n\\n:class:`True`\\n    Tracks are selected at random from the tracklist.\\n:class:`False`\\n    Tracks are played in the order of the tracklist.", "params": []}, "core.tracklist.get_repeat": {"description": "Get repeat mode.\\n\\n:class:`True`\\n    The tracklist is played repeatedly.\\n:class:`False`\\n    The tracklist is played once.", "params": []}, "core.tracklist.get_single": {"description": "Get single mode.\\n\\n:class:`True`\\n    Playback is stopped after current song, unless in ``repeat`` mode.\\n:class:`False`\\n    Playback continues after current song.", "params": []}, "core.tracklist.get_tl_tracks": {"description": "Get tracklist as list of :class:`mopidy.models.TlTrack`.", "params": []}, "core.tracklist.get_tracks": {"description": "Get tracklist as list of :class:`mopidy.models.Track`.", "params": []}, "core.tracklist.get_version": {"description": "Get the tracklist version.\\n\\nInteger which is increased every time the tracklist is changed. Is not\\nreset before Mopidy is restarted.", "params": []}, "core.tracklist.index": {"description": "The position of the given track in the tracklist.\\n\\nIf neither *tl_track* or *tlid* is given we return the index of\\nthe currently playing track.\\n\\n:param tl_track: the track to find the index of\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:param tlid: TLID of the track to find the index of\\n:type tlid: :class:`int` or :class:`None`\\n:rtype: :class:`int` or :class:`None`\\n\\n.. versionadded:: 1.1\\n    The *tlid* parameter", "params": [{"name": "tl_track", "default": null}, {"name": "tlid", "default": null}]}, "core.tracklist.move": {"description": "Move the tracks in the slice ``[start:end]`` to ``to_position``.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.\\n\\n:param start: position of first track to move\\n:type start: int\\n:param end: position after last track to move\\n:type end: int\\n:param to_position: new position for the tracks\\n:type to_position: int", "params": [{"name": "start"}, {"name": "end"}, {"name": "to_position"}]}, "core.tracklist.next_track": {"description": "The track that will be played if calling\\n:meth:`mopidy.core.PlaybackController.next()`.\\n\\nFor normal playback this is the next track in the tracklist. If repeat\\nis enabled the next track can loop around the tracklist. When random is\\nenabled this should be a random track, all tracks should be played once\\nbefore the tracklist repeats.\\n\\n.. deprecated:: 3.0\\n    Use :meth:`get_next_tlid` instead.\\n\\n:param tl_track: the reference track\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:rtype: :class:`mopidy.models.TlTrack` or :class:`None`", "params": [{"name": "tl_track"}]}, "core.tracklist.previous_track": {"description": "Returns the track that will be played if calling\\n:meth:`mopidy.core.PlaybackController.previous()`.\\n\\nFor normal playback this is the previous track in the tracklist. If\\nrandom and/or consume is enabled it should return the current track\\ninstead.\\n\\n.. deprecated:: 3.0\\n    Use :meth:`get_previous_tlid` instead.\\n\\n:param tl_track: the reference track\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:rtype: :class:`mopidy.models.TlTrack` or :class:`None`", "params": [{"name": "tl_track"}]}, "core.tracklist.remove": {"description": "Remove the matching tracks from the tracklist.\\n\\nUses :meth:`filter()` to lookup the tracks to remove.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.\\n\\n:param criteria: one or more rules to match by\\n:type criteria: dict, of (string, list) pairs\\n:rtype: list of :class:`mopidy.models.TlTrack` that were removed", "params": [{"name": "criteria"}]}, "core.tracklist.set_consume": {"description": "Set consume mode.\\n\\n:class:`True`\\n    Tracks are removed from the tracklist when they have been played.\\n:class:`False`\\n    Tracks are not removed from the tracklist.", "params": [{"name": "value"}]}, "core.tracklist.set_random": {"description": "Set random mode.\\n\\n:class:`True`\\n    Tracks are selected at random from the tracklist.\\n:class:`False`\\n    Tracks are played in the order of the tracklist.", "params": [{"name": "value"}]}, "core.tracklist.set_repeat": {"description": "Set repeat mode.\\n\\nTo repeat a single track, set both ``repeat`` and ``single``.\\n\\n:class:`True`\\n    The tracklist is played repeatedly.\\n:class:`False`\\n    The tracklist is played once.", "params": [{"name": "value"}]}, "core.tracklist.set_single": {"description": "Set single mode.\\n\\n:class:`True`\\n    Playback is stopped after current song, unless in ``repeat`` mode.\\n:class:`False`\\n    Playback continues after current song.", "params": [{"name": "value"}]}, "core.tracklist.shuffle": {"description": "Shuffles the entire tracklist. If ``start`` and ``end`` is given only\\nshuffles the slice ``[start:end]``.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.\\n\\n:param start: position of first track to shuffle\\n:type start: int or :class:`None`\\n:param end: position after last track to shuffle\\n:type end: int or :class:`None`", "params": [{"name": "start", "default": null}, {"name": "end", "default": null}]}, "core.tracklist.slice": {"description": "Returns a slice of the tracklist, limited by the given start and end\\npositions.\\n\\n:param start: position of first track to include in slice\\n:type start: int\\n:param end: position after last track to include in slice\\n:type end: int\\n:rtype: :class:`mopidy.models.TlTrack`", "params": [{"name": "start"}, {"name": "end"}]}}}'
okt 24 13:37:33 Desktop-Ubuntu mopidy[8549]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.describe","jsonrpc":"2.0","id":14}'
okt 24 13:37:33 Desktop-Ubuntu mopidy[8549]: DEBUG    [HttpServer] mopidy.http.handlers New WebSocket connection from 127.0.0.1
okt 24 13:37:33 Desktop-Ubuntu mopidy[8549]: INFO     [HttpServer] tornado.access 101 GET /mopidy/ws/ (127.0.0.1) 20.03ms
okt 24 13:37:33 Desktop-Ubuntu mopidy[8549]: DEBUG    [HttpFrontend-10 (_actor_loop)] mopidy.zeroconf Zeroconf service 'Mopidy HTTP server on Desktop-Ubuntu' (_mopidy-http._tcp at []:6680): Published
okt 24 13:37:33 Desktop-Ubuntu mopidy[8549]: DEBUG    [HttpFrontend-10 (_actor_loop)] mopidy.zeroconf Zeroconf service 'Mopidy HTTP server on Desktop-Ubuntu' (_http._tcp at []:6680): Published
okt 24 13:37:33 Desktop-Ubuntu mopidy[8549]:     '/': <class 'tornado.web.RedirectHandler'>
okt 24 13:37:33 Desktop-Ubuntu mopidy[8549]:     '/mopidy/': <class 'mopidy.http.handlers.ClientListHandler'>
okt 24 13:37:33 Desktop-Ubuntu mopidy[8549]:     '/mopidy/(.+)': <class 'mopidy.http.handlers.StaticFileHandler'>
okt 24 13:37:33 Desktop-Ubuntu mopidy[8549]:     '/mopidy/rpc': <class 'mopidy.http.handlers.JsonRpcHandler'>
okt 24 13:37:33 Desktop-Ubuntu mopidy[8549]:     '/mopidy/ws/?': <class 'mopidy.http.handlers.WebSocketHandler'>
okt 24 13:37:33 Desktop-Ubuntu mopidy[8549]:     '/mopidy': <class 'mopidy.http.handlers.AddSlashHandler'>
okt 24 13:37:33 Desktop-Ubuntu mopidy[8549]:     '/iris/(.*)': <class 'mopidy_iris.handlers.ReactRouterHandler'>
okt 24 13:37:33 Desktop-Ubuntu mopidy[8549]:     '/iris/((.*)(?:css|js|json|map)$)': <class 'tornado.web.StaticFileHandler'>
okt 24 13:37:33 Desktop-Ubuntu mopidy[8549]:     '/iris/assets/(.*)': <class 'tornado.web.StaticFileHandler'>
okt 24 13:37:33 Desktop-Ubuntu mopidy[8549]:     '/iris/ws/?': <class 'mopidy_iris.handlers.WebsocketHandler'>
okt 24 13:37:33 Desktop-Ubuntu mopidy[8549]:     '/iris/http/([^/]*)': <class 'mopidy_iris.handlers.HttpHandler'>
okt 24 13:37:33 Desktop-Ubuntu mopidy[8549]:     '/iris': <class 'mopidy.http.handlers.AddSlashHandler'>
okt 24 13:37:33 Desktop-Ubuntu mopidy[8549]: DEBUG    [HttpServer] mopidy.http.actor HTTP routes from extensions:
okt 24 13:37:33 Desktop-Ubuntu mopidy[8549]: DEBUG    [HttpServer] mopidy.http.actor Default webclient is mopidy
okt 24 13:37:33 Desktop-Ubuntu mopidy[8549]: DEBUG    [HttpServer] mopidy.http.actor Loaded HTTP extension: mopidy
okt 24 13:37:33 Desktop-Ubuntu mopidy[8549]: DEBUG    [HttpServer] mopidy.http.actor Loaded HTTP extension: iris
okt 24 13:37:33 Desktop-Ubuntu mopidy[8549]: DEBUG    [HttpServer] asyncio Using selector: EpollSelector
okt 24 13:37:33 Desktop-Ubuntu mopidy[8549]: INFO     [MainThread] mopidy.commands Starting GLib mainloop
okt 24 13:37:33 Desktop-Ubuntu mopidy[8549]: TRACE    [MainThread] mopidy.internal.timer HttpFrontend took 1ms
okt 24 13:37:33 Desktop-Ubuntu mopidy[8549]: INFO     [HttpFrontend-10 (_actor_loop)] mopidy.http.actor HTTP server running at [::ffff:127.0.0.1]:6680
okt 24 13:37:33 Desktop-Ubuntu mopidy[8549]: DEBUG    [MainThread] pykka Starting HttpFrontend (urn:uuid:ca8f4dd1-3679-42a0-927c-4f1a7d4f31f6)
okt 24 13:37:33 Desktop-Ubuntu mopidy[8549]: DEBUG    [MainThread] pykka Registered HttpFrontend (urn:uuid:ca8f4dd1-3679-42a0-927c-4f1a7d4f31f6)
okt 24 13:37:33 Desktop-Ubuntu mopidy[8549]: DEBUG    [MainThread] mopidy.http.actor Starting HTTP server
okt 24 13:37:33 Desktop-Ubuntu mopidy[8549]: TRACE    [MainThread] mopidy.internal.timer IrisFrontend took 0ms
okt 24 13:37:33 Desktop-Ubuntu mopidy[8549]: INFO     [IrisFrontend-8 (_actor_loop)] mopidy_iris.core Starting Iris 3.64.1
okt 24 13:37:33 Desktop-Ubuntu mopidy[8549]: DEBUG    [MainThread] pykka Starting IrisFrontend (urn:uuid:00afaac0-454b-4909-ba20-c6e4132042ea)
okt 24 13:37:33 Desktop-Ubuntu mopidy[8549]: DEBUG    [MainThread] pykka Registered IrisFrontend (urn:uuid:00afaac0-454b-4909-ba20-c6e4132042ea)
okt 24 13:37:33 Desktop-Ubuntu mopidy[8549]: TRACE    [MainThread] mopidy.internal.timer YTMusicScrobbleFE took 0ms
okt 24 13:37:33 Desktop-Ubuntu mopidy[8549]: DEBUG    [MainThread] pykka Starting YTMusicScrobbleFE (urn:uuid:486acb54-722c-4e5f-9ef1-fab5d635dc03)
okt 24 13:37:33 Desktop-Ubuntu mopidy[8549]: DEBUG    [MainThread] pykka Registered YTMusicScrobbleFE (urn:uuid:486acb54-722c-4e5f-9ef1-fab5d635dc03)
okt 24 13:37:33 Desktop-Ubuntu mopidy[8549]: INFO     [MainThread] mopidy.commands Starting Mopidy frontends: YTMusicScrobbleFE, IrisFrontend, HttpFrontend
okt 24 13:37:33 Desktop-Ubuntu mopidy[8549]: DEBUG    [MainThread] pykka Starting Core (urn:uuid:71e7c5c3-bae8-45d6-b78f-76ce291aeb39)
okt 24 13:37:33 Desktop-Ubuntu mopidy[8549]: DEBUG    [MainThread] pykka Registered Core (urn:uuid:71e7c5c3-bae8-45d6-b78f-76ce291aeb39)
okt 24 13:37:33 Desktop-Ubuntu mopidy[8549]: INFO     [MainThread] mopidy.commands Starting Mopidy core
okt 24 13:37:33 Desktop-Ubuntu mopidy[8549]: TRACE    [MainThread] mopidy.internal.timer StreamBackend took 6ms
okt 24 13:37:33 Desktop-Ubuntu mopidy[8549]: DEBUG    [MainThread] pykka Starting StreamBackend (urn:uuid:96fc5aa1-00ed-46c6-88e8-87a1facb50a7)
okt 24 13:37:33 Desktop-Ubuntu mopidy[8549]: DEBUG    [MainThread] pykka Registered StreamBackend (urn:uuid:96fc5aa1-00ed-46c6-88e8-87a1facb50a7)
okt 24 13:37:33 Desktop-Ubuntu mopidy[8549]: INFO     [Audio-2 (_actor_loop)] mopidy.audio.actor Audio output set to "pulsesink server=127.0.0.1"
okt 24 13:37:33 Desktop-Ubuntu mopidy[8549]: TRACE    [MainThread] mopidy.internal.timer M3UBackend took 3ms
okt 24 13:37:33 Desktop-Ubuntu mopidy[8549]: DEBUG    [MainThread] pykka Starting M3UBackend (urn:uuid:0442e5e1-34ec-4027-afe3-ade7531e2392)
okt 24 13:37:33 Desktop-Ubuntu mopidy[8549]: DEBUG    [MainThread] pykka Registered M3UBackend (urn:uuid:0442e5e1-34ec-4027-afe3-ade7531e2392)
okt 24 13:37:33 Desktop-Ubuntu mopidy[8549]: TRACE    [MainThread] mopidy.internal.timer FileBackend took 2ms
okt 24 13:37:33 Desktop-Ubuntu mopidy[8549]: DEBUG    [MainThread] pykka Starting FileBackend (urn:uuid:6609671c-ab77-4f14-a699-3d1a877e4517)
okt 24 13:37:33 Desktop-Ubuntu mopidy[8549]: DEBUG    [MainThread] pykka Registered FileBackend (urn:uuid:6609671c-ab77-4f14-a699-3d1a877e4517)
okt 24 13:37:33 Desktop-Ubuntu mopidy[8549]: DEBUG    [MainThread] mopidy.file.library Failed expanding path ($XDG_MUSIC_DIR) from file/media_dirs config value.
okt 24 13:37:33 Desktop-Ubuntu mopidy[8549]: AttributeError: 'YTMusic' object has no attribute 'headers'
okt 24 13:37:33 Desktop-Ubuntu mopidy[8549]:     if 'x-goog-visitor-id' not in self.headers:
okt 24 13:37:33 Desktop-Ubuntu mopidy[8549]:   File "/usr/local/lib/python3.10/dist-packages/ytmusicapi/ytmusic.py", line 98, in __init__
okt 24 13:37:33 Desktop-Ubuntu mopidy[8549]:     self.api = YTMusic(self._ytmusicapi_auth_json)
okt 24 13:37:33 Desktop-Ubuntu mopidy[8549]:   File "/usr/local/lib/python3.10/dist-packages/mopidy_ytmusic/backend.py", line 65, in __init__
okt 24 13:37:33 Desktop-Ubuntu mopidy[8549]:     obj = cls(*args, **kwargs)
okt 24 13:37:33 Desktop-Ubuntu mopidy[8549]:   File "/usr/lib/python3/dist-packages/pykka/_actor.py", line 91, in start
okt 24 13:37:33 Desktop-Ubuntu mopidy[8549]:     backend = backend_class.start(
okt 24 13:37:33 Desktop-Ubuntu mopidy[8549]:   File "/usr/lib/python3/dist-packages/mopidy/commands.py", line 412, in start_backends
okt 24 13:37:33 Desktop-Ubuntu mopidy[8549]:     yield
okt 24 13:37:33 Desktop-Ubuntu mopidy[8549]:   File "/usr/lib/python3/dist-packages/mopidy/commands.py", line 248, in _actor_error_handling
okt 24 13:37:33 Desktop-Ubuntu mopidy[8549]: Traceback (most recent call last):
okt 24 13:37:33 Desktop-Ubuntu mopidy[8549]: ERROR    [MainThread] mopidy.commands Got un-handled exception from YTMusicBackend
okt 24 13:37:33 Desktop-Ubuntu mopidy[8549]: INFO     [MainThread] mopidy.commands Starting Mopidy backends: YTMusicBackend, FileBackend, M3UBackend, StreamBackend
okt 24 13:37:33 Desktop-Ubuntu mopidy[8549]: DEBUG    [MainThread] pykka Starting Audio (urn:uuid:b5ff608d-d07b-4024-9475-4e7e35169b6d)
okt 24 13:37:33 Desktop-Ubuntu mopidy[8549]: DEBUG    [MainThread] pykka Registered Audio (urn:uuid:b5ff608d-d07b-4024-9475-4e7e35169b6d)
okt 24 13:37:33 Desktop-Ubuntu mopidy[8549]: INFO     [MainThread] mopidy.commands Starting Mopidy audio
okt 24 13:37:33 Desktop-Ubuntu mopidy[8549]: DEBUG    [MainThread] mopidy.commands Mixer volume left unchanged
okt 24 13:37:33 Desktop-Ubuntu mopidy[8549]: DEBUG    [MainThread] pykka Starting SoftwareMixer (urn:uuid:66943319-8bdb-4079-8035-1ae4ac9d54f7)
okt 24 13:37:33 Desktop-Ubuntu mopidy[8549]: DEBUG    [MainThread] pykka Registered SoftwareMixer (urn:uuid:66943319-8bdb-4079-8035-1ae4ac9d54f7)
okt 24 13:37:33 Desktop-Ubuntu mopidy[8549]: INFO     [MainThread] mopidy.commands Starting Mopidy mixer: SoftwareMixer
okt 24 13:37:33 Desktop-Ubuntu mopidy[8549]: DEBUG    [MainThread] mopidy.commands Available Mopidy mixers: SoftwareMixer
okt 24 13:37:33 Desktop-Ubuntu mopidy[8549]: WARNING  [MainThread] mopidy.__main__ Please fix the extension configuration errors or disable the extensions to silence these messages.
okt 24 13:37:33 Desktop-Ubuntu mopidy[8549]: WARNING  [MainThread] mopidy.__main__   local/media_dir must be set.
okt 24 13:37:33 Desktop-Ubuntu mopidy[8549]: WARNING  [MainThread] mopidy.__main__ Found local configuration errors. The extension has been automatically disabled:
okt 24 13:37:33 Desktop-Ubuntu mopidy[8549]: INFO     [MainThread] mopidy.__main__ Disabled extensions: youtube, soundcloud, local
okt 24 13:37:33 Desktop-Ubuntu mopidy[8549]: INFO     [MainThread] mopidy.__main__ Enabled extensions: stream, iris, softwaremixer, file, ytmusic, m3u, http
okt 24 13:37:33 Desktop-Ubuntu mopidy[8549]: DEBUG    [MainThread] mopidy.ext Validating extension: stream
okt 24 13:37:33 Desktop-Ubuntu mopidy[8549]: DEBUG    [MainThread] mopidy.ext Validating extension: softwaremixer
okt 24 13:37:33 Desktop-Ubuntu mopidy[8549]: DEBUG    [MainThread] mopidy.ext Validating extension: m3u
okt 24 13:37:33 Desktop-Ubuntu mopidy[8549]: DEBUG    [MainThread] mopidy.ext Validating extension: http
okt 24 13:37:33 Desktop-Ubuntu mopidy[8549]: DEBUG    [MainThread] mopidy.ext Validating extension: file
okt 24 13:37:33 Desktop-Ubuntu mopidy[8549]: DEBUG    [MainThread] mopidy.ext Validating extension: iris
okt 24 13:37:33 Desktop-Ubuntu mopidy[8549]: DEBUG    [MainThread] mopidy.ext Validating extension: ytmusic
okt 24 13:37:33 Desktop-Ubuntu mopidy[8549]: DEBUG    [MainThread] mopidy.ext Validating extension: soundcloud
okt 24 13:37:33 Desktop-Ubuntu mopidy[8549]: DEBUG    [MainThread] mopidy.ext Validating extension: local
okt 24 13:37:32 Desktop-Ubuntu mopidy[8549]: DEBUG    [MainThread] mopidy.ext Validating extension: youtube
okt 24 13:37:32 Desktop-Ubuntu mopidy[8549]: WARNING  [MainThread] mopidy.config Ignoring config section 'jukebox' because no matching extension was found
okt 24 13:37:32 Desktop-Ubuntu mopidy[8549]: INFO     [MainThread] mopidy.config Loading config from command line options
okt 24 13:37:32 Desktop-Ubuntu mopidy[8549]: INFO     [MainThread] mopidy.config Loading config from file:///etc/mopidy/mopidy.conf
okt 24 13:37:32 Desktop-Ubuntu mopidy[8549]: INFO     [MainThread] mopidy.config Loading config from file:///usr/share/mopidy/conf.d/mopidy.conf
okt 24 13:37:32 Desktop-Ubuntu mopidy[8549]: INFO     [MainThread] mopidy.config Loading config from builtin defaults
okt 24 13:37:32 Desktop-Ubuntu mopidy[8549]: DEBUG    [MainThread] mopidy.config.keyring Fetching passwords from your keyring failed. Any passwords stored in the keyring will not be available. (org.freedesktop.DBus.Error.NotSupported: Unable to autolaunch a dbus-daemon without a $DISPLAY for X11)
okt 24 13:37:32 Desktop-Ubuntu mopidy[8549]: DEBUG    [MainThread] mopidy.ext Discovered extensions: youtube, local, soundcloud, ytmusic, iris, file, http, m3u, softwaremixer, stream
okt 24 13:37:32 Desktop-Ubuntu mopidy[8549]: DEBUG    [MainThread] mopidy.ext Loaded extension: Mopidy-Stream 3.3.0
okt 24 13:37:32 Desktop-Ubuntu mopidy[8549]: DEBUG    [MainThread] mopidy.ext Loading entry point: stream = mopidy.stream:Extension
okt 24 13:37:32 Desktop-Ubuntu mopidy[8549]: DEBUG    [MainThread] mopidy.ext Loaded extension: Mopidy-SoftwareMixer 3.3.0
okt 24 13:37:32 Desktop-Ubuntu mopidy[8549]: DEBUG    [MainThread] mopidy.ext Loading entry point: softwaremixer = mopidy.softwaremixer:Extension
okt 24 13:37:32 Desktop-Ubuntu mopidy[8549]: DEBUG    [MainThread] mopidy.ext Loaded extension: Mopidy-M3U 3.3.0
okt 24 13:37:32 Desktop-Ubuntu mopidy[8549]: DEBUG    [MainThread] mopidy.ext Loading entry point: m3u = mopidy.m3u:Extension
okt 24 13:37:32 Desktop-Ubuntu mopidy[8549]: DEBUG    [MainThread] mopidy.ext Loaded extension: Mopidy-HTTP 3.3.0
okt 24 13:37:32 Desktop-Ubuntu mopidy[8549]: DEBUG    [MainThread] mopidy.ext Loading entry point: http = mopidy.http:Extension
okt 24 13:37:32 Desktop-Ubuntu mopidy[8549]: DEBUG    [MainThread] mopidy.ext Loaded extension: Mopidy-File 3.3.0
okt 24 13:37:32 Desktop-Ubuntu mopidy[8549]: DEBUG    [MainThread] mopidy.ext Loading entry point: file = mopidy.file:Extension
okt 24 13:37:32 Desktop-Ubuntu mopidy[8549]: DEBUG    [MainThread] mopidy.ext Loaded extension: Mopidy-Iris 3.64.1
okt 24 13:37:32 Desktop-Ubuntu mopidy[8549]: DEBUG    [MainThread] mopidy.ext Loading entry point: iris = mopidy_iris:Extension
okt 24 13:37:32 Desktop-Ubuntu mopidy[8549]: DEBUG    [MainThread] mopidy.ext Loaded extension: Mopidy-YTMusic 0.3.7
okt 24 13:37:32 Desktop-Ubuntu mopidy[8549]: DEBUG    [MainThread] mopidy.ext Loading entry point: ytmusic = mopidy_ytmusic:Extension
okt 24 13:37:32 Desktop-Ubuntu mopidy[8549]: DEBUG    [MainThread] mopidy.ext Loaded extension: Mopidy-SoundCloud 3.0.1
okt 24 13:37:32 Desktop-Ubuntu mopidy[8549]: DEBUG    [MainThread] mopidy.ext Loading entry point: soundcloud = mopidy_soundcloud:Extension
okt 24 13:37:32 Desktop-Ubuntu mopidy[8549]: DEBUG    [MainThread] mopidy.ext Loaded extension: Mopidy-Local 3.2.1
okt 24 13:37:32 Desktop-Ubuntu mopidy[8549]: DEBUG    [MainThread] mopidy.ext Loading entry point: local = mopidy_local:Extension
okt 24 13:37:32 Desktop-Ubuntu mopidy[8549]: DEBUG    [MainThread] mopidy.ext Loaded extension: Mopidy-YouTube 3.6.1
okt 24 13:37:32 Desktop-Ubuntu mopidy[8549]: DEBUG    [MainThread] mopidy.ext Loading entry point: youtube = mopidy_youtube:Extension
okt 24 13:37:32 Desktop-Ubuntu mopidy[8549]: INFO     [MainThread] mopidy.__main__ Starting Mopidy 3.3.0
okt 24 13:37:32 Desktop-Ubuntu systemd[1]: Started Mopidy music server.
okt 24 13:37:32 Desktop-Ubuntu systemd[1]: Starting Mopidy music server...
okt 24 13:37:32 Desktop-Ubuntu systemd[1]: Stopped Mopidy music server.
okt 24 13:37:32 Desktop-Ubuntu systemd[1]: mopidy.service: Deactivated successfully.
okt 24 13:37:32 Desktop-Ubuntu mopidy[7828]: Failed loading provided credentials. Make sure to provide a string or a file path. Reason: Expecting value: line 1 column 1 (char 0)
okt 24 13:37:32 Desktop-Ubuntu mopidy[7828]: DEBUG    [MainThread] mopidy.internal.process All actors stopped.
okt 24 13:37:32 Desktop-Ubuntu mopidy[7828]: DEBUG    [SoftwareMixer-1 (_actor_loop)] pykka Stopped SoftwareMixer (urn:uuid:09d53b82-abc2-4b4f-8846-81a8de97ca92)
okt 24 13:37:32 Desktop-Ubuntu mopidy[7828]: DEBUG    [SoftwareMixer-1 (_actor_loop)] pykka Unregistered SoftwareMixer (urn:uuid:09d53b82-abc2-4b4f-8846-81a8de97ca92)
okt 24 13:37:32 Desktop-Ubuntu mopidy[7828]: DEBUG    [MainThread] mopidy.internal.process Stopping 1 instance(s) of SoftwareMixer
okt 24 13:37:32 Desktop-Ubuntu mopidy[7828]: INFO     [MainThread] mopidy.commands Stopping Mopidy mixer
okt 24 13:37:32 Desktop-Ubuntu mopidy[7828]: DEBUG    [Audio-2 (_actor_loop)] pykka Stopped Audio (urn:uuid:d278babb-a263-4a42-a8de-3a19f1346efc)
okt 24 13:37:32 Desktop-Ubuntu mopidy[7828]: DEBUG    [Audio-2 (_actor_loop)] pykka Unregistered Audio (urn:uuid:d278babb-a263-4a42-a8de-3a19f1346efc)
okt 24 13:37:32 Desktop-Ubuntu mopidy[7828]: DEBUG    [MainThread] mopidy.internal.process Stopping 1 instance(s) of Audio
okt 24 13:37:32 Desktop-Ubuntu mopidy[7828]: INFO     [MainThread] mopidy.commands Stopping Mopidy audio
okt 24 13:37:32 Desktop-Ubuntu mopidy[7828]: DEBUG    [StreamBackend-5 (_actor_loop)] pykka Stopped StreamBackend (urn:uuid:8735f735-14c6-4e8c-8b99-a3dd9bfc91c8)
okt 24 13:37:32 Desktop-Ubuntu mopidy[7828]: DEBUG    [StreamBackend-5 (_actor_loop)] pykka Unregistered StreamBackend (urn:uuid:8735f735-14c6-4e8c-8b99-a3dd9bfc91c8)
okt 24 13:37:32 Desktop-Ubuntu mopidy[7828]: DEBUG    [MainThread] mopidy.internal.process Stopping 1 instance(s) of StreamBackend
okt 24 13:37:32 Desktop-Ubuntu mopidy[7828]: DEBUG    [M3UBackend-4 (_actor_loop)] pykka Stopped M3UBackend (urn:uuid:53baa082-014a-4387-8818-029ce1531275)
okt 24 13:37:32 Desktop-Ubuntu mopidy[7828]: DEBUG    [M3UBackend-4 (_actor_loop)] pykka Unregistered M3UBackend (urn:uuid:53baa082-014a-4387-8818-029ce1531275)
okt 24 13:37:32 Desktop-Ubuntu mopidy[7828]: DEBUG    [MainThread] mopidy.internal.process Stopping 1 instance(s) of M3UBackend
okt 24 13:37:32 Desktop-Ubuntu mopidy[7828]: DEBUG    [FileBackend-3 (_actor_loop)] pykka Stopped FileBackend (urn:uuid:bf13b2fd-34d0-4a0f-8b41-cd8412652ed4)
okt 24 13:37:32 Desktop-Ubuntu mopidy[7828]: DEBUG    [FileBackend-3 (_actor_loop)] pykka Unregistered FileBackend (urn:uuid:bf13b2fd-34d0-4a0f-8b41-cd8412652ed4)
okt 24 13:37:32 Desktop-Ubuntu mopidy[7828]: DEBUG    [MainThread] mopidy.internal.process Stopping 1 instance(s) of FileBackend
okt 24 13:37:32 Desktop-Ubuntu mopidy[7828]: DEBUG    [MainThread] mopidy.internal.process Stopping 0 instance(s) of YTMusicBackend
okt 24 13:37:32 Desktop-Ubuntu mopidy[7828]: INFO     [MainThread] mopidy.commands Stopping Mopidy backends
okt 24 13:37:32 Desktop-Ubuntu mopidy[7828]: DEBUG    [Core-6 (_actor_loop)] pykka Stopped Core (urn:uuid:a4a378dd-9d35-473b-92c8-886ddc513a9c)
okt 24 13:37:32 Desktop-Ubuntu mopidy[7828]: DEBUG    [HttpServer] mopidy.http.actor Stopped HTTP server
okt 24 13:37:32 Desktop-Ubuntu mopidy[7828]: DEBUG    [Core-6 (_actor_loop)] pykka Unregistered Core (urn:uuid:a4a378dd-9d35-473b-92c8-886ddc513a9c)
okt 24 13:37:32 Desktop-Ubuntu mopidy[7828]: DEBUG    [MainThread] mopidy.internal.process Stopping 1 instance(s) of Core
okt 24 13:37:32 Desktop-Ubuntu mopidy[7828]: INFO     [MainThread] mopidy.commands Stopping Mopidy core
okt 24 13:37:32 Desktop-Ubuntu mopidy[7828]: DEBUG    [HttpFrontend-10 (_actor_loop)] mopidy.http.actor Stopping HTTP server
okt 24 13:37:32 Desktop-Ubuntu mopidy[7828]: DEBUG    [HttpFrontend-10 (_actor_loop)] mopidy.zeroconf Zeroconf service 'Mopidy HTTP server on Desktop-Ubuntu' (_mopidy-http._tcp at []:6680): Unpublished
okt 24 13:37:32 Desktop-Ubuntu mopidy[7828]: DEBUG    [HttpFrontend-10 (_actor_loop)] mopidy.zeroconf Zeroconf service 'Mopidy HTTP server on Desktop-Ubuntu' (_http._tcp at []:6680): Unpublished
okt 24 13:37:32 Desktop-Ubuntu mopidy[7828]: DEBUG    [HttpFrontend-10 (_actor_loop)] pykka Stopped HttpFrontend (urn:uuid:41ded34b-1c9b-413b-8d27-d4a57ebaf25d)
okt 24 13:37:32 Desktop-Ubuntu mopidy[7828]: DEBUG    [HttpFrontend-10 (_actor_loop)] pykka Unregistered HttpFrontend (urn:uuid:41ded34b-1c9b-413b-8d27-d4a57ebaf25d)
okt 24 13:37:32 Desktop-Ubuntu mopidy[7828]: DEBUG    [MainThread] mopidy.internal.process Stopping 1 instance(s) of HttpFrontend
okt 24 13:37:32 Desktop-Ubuntu mopidy[7828]: INFO     [IrisFrontend-8 (_actor_loop)] mopidy_iris.core Stopping Iris
okt 24 13:37:32 Desktop-Ubuntu mopidy[7828]: DEBUG    [IrisFrontend-8 (_actor_loop)] pykka Stopped IrisFrontend (urn:uuid:74de270c-0621-43b9-a543-739304561bb2)
okt 24 13:37:32 Desktop-Ubuntu mopidy[7828]: DEBUG    [IrisFrontend-8 (_actor_loop)] pykka Unregistered IrisFrontend (urn:uuid:74de270c-0621-43b9-a543-739304561bb2)
okt 24 13:37:32 Desktop-Ubuntu mopidy[7828]: DEBUG    [MainThread] mopidy.internal.process Stopping 1 instance(s) of IrisFrontend
okt 24 13:37:32 Desktop-Ubuntu mopidy[7828]: DEBUG    [YTMusicScrobbleFE-7 (_actor_loop)] pykka Stopped YTMusicScrobbleFE (urn:uuid:86f430cd-9b68-4e37-82fa-1fcd4d5bed96)
okt 24 13:37:32 Desktop-Ubuntu mopidy[7828]: DEBUG    [YTMusicScrobbleFE-7 (_actor_loop)] pykka Unregistered YTMusicScrobbleFE (urn:uuid:86f430cd-9b68-4e37-82fa-1fcd4d5bed96)
okt 24 13:37:32 Desktop-Ubuntu mopidy[7828]: DEBUG    [MainThread] mopidy.internal.process Stopping 1 instance(s) of YTMusicScrobbleFE
okt 24 13:37:32 Desktop-Ubuntu mopidy[7828]: INFO     [MainThread] mopidy.commands Stopping Mopidy frontends
okt 24 13:37:32 Desktop-Ubuntu mopidy[7828]: INFO     [MainThread] mopidy.commands GLib mainloop got SIGTERM. Exiting...
okt 24 13:37:32 Desktop-Ubuntu systemd[1]: Stopping Mopidy music server...
okt 24 13:34:12 Desktop-Ubuntu mopidy[7828]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 13, "result": []}'
okt 24 13:34:12 Desktop-Ubuntu mopidy[7828]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.library.browse","params":{"uri":null},"jsonrpc":"2.0","id":13}'
okt 24 13:34:10 Desktop-Ubuntu mopidy[7828]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 12, "result": []}'
okt 24 13:34:10 Desktop-Ubuntu mopidy[7828]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.library.browse","params":{"uri":null},"jsonrpc":"2.0","id":12}'
okt 24 13:34:09 Desktop-Ubuntu mopidy[7828]: DEBUG    [HttpServer] mopidy_iris.core {'id': 166661124929586, 'jsonrpc': '2.0', 'method': 'get_version', 'result': {'version': {'current': '3.64.1', 'latest': '3.64.1', 'is_root': False, 'upgrade_available': False}}, 'recipient': '3ARYDTO90YNL'}
okt 24 13:34:09 Desktop-Ubuntu mopidy[7828]: DEBUG    [HttpServer] mopidy_iris.handlers Iris websocket message received: {"jsonrpc":"2.0","id":166661124929586,"method":"get_version"}
okt 24 13:34:08 Desktop-Ubuntu mopidy[7828]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 11, "result": null}'
okt 24 13:34:08 Desktop-Ubuntu mopidy[7828]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.playback.get_stream_title","params":{},"jsonrpc":"2.0","id":11}'
okt 24 13:34:08 Desktop-Ubuntu mopidy[7828]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 10, "result": ["file", "http", "https", "m3u", "rtsp"]}'
okt 24 13:34:08 Desktop-Ubuntu mopidy[7828]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.get_uri_schemes","params":{},"jsonrpc":"2.0","id":10}'
okt 24 13:34:08 Desktop-Ubuntu mopidy[7828]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 9, "result": 0}'
okt 24 13:34:08 Desktop-Ubuntu mopidy[7828]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.playback.get_time_position","params":{},"jsonrpc":"2.0","id":9}'
okt 24 13:34:08 Desktop-Ubuntu mopidy[7828]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 8, "result": []}'
okt 24 13:34:08 Desktop-Ubuntu mopidy[7828]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_tl_tracks","params":{},"jsonrpc":"2.0","id":8}'
okt 24 13:34:08 Desktop-Ubuntu mopidy[7828]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 7, "result": false}'
okt 24 13:34:08 Desktop-Ubuntu mopidy[7828]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_repeat","params":{},"jsonrpc":"2.0","id":7}'
okt 24 13:34:08 Desktop-Ubuntu mopidy[7828]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 6, "result": false}'
okt 24 13:34:08 Desktop-Ubuntu mopidy[7828]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_random","params":{},"jsonrpc":"2.0","id":6}'
okt 24 13:34:08 Desktop-Ubuntu mopidy[7828]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 5, "result": false}'
okt 24 13:34:08 Desktop-Ubuntu mopidy[7828]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_consume","params":{},"jsonrpc":"2.0","id":5}'
okt 24 13:34:08 Desktop-Ubuntu mopidy[7828]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 4, "result": false}'
okt 24 13:34:08 Desktop-Ubuntu mopidy[7828]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.mixer.get_mute","params":{},"jsonrpc":"2.0","id":4}'
okt 24 13:34:08 Desktop-Ubuntu mopidy[7828]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 3, "result": 100}'
okt 24 13:34:08 Desktop-Ubuntu mopidy[7828]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.mixer.get_volume","params":{},"jsonrpc":"2.0","id":3}'
okt 24 13:34:08 Desktop-Ubuntu mopidy[7828]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 2, "result": "stopped"}'
okt 24 13:34:08 Desktop-Ubuntu mopidy[7828]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.playback.get_state","params":{},"jsonrpc":"2.0","id":2}'
okt 24 13:34:08 Desktop-Ubuntu mopidy[7828]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 1, "result": null}'
okt 24 13:34:08 Desktop-Ubuntu mopidy[7828]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.playback.get_current_tl_track","params":{},"jsonrpc":"2.0","id":1}'
okt 24 13:34:08 Desktop-Ubuntu mopidy[7828]: DEBUG    [HttpServer] mopidy_iris.core {'id': 166661124879451, 'jsonrpc': '2.0', 'method': 'get_queue_metadata', 'result': {'queue_metadata': {}}, 'recipient': '3ARYDTO90YNL'}
okt 24 13:34:08 Desktop-Ubuntu mopidy[7828]: DEBUG    [HttpServer] mopidy_iris.handlers Iris websocket message received: {"jsonrpc":"2.0","id":166661124879451,"method":"get_queue_metadata"}
okt 24 13:34:08 Desktop-Ubuntu mopidy[7828]: DEBUG    [HttpServer] mopidy_iris.core {'id': 166661124879399, 'jsonrpc': '2.0', 'method': 'get_pinned', 'result': {'pinned': []}, 'recipient': '3ARYDTO90YNL'}
okt 24 13:34:08 Desktop-Ubuntu mopidy[7828]: DEBUG    [HttpServer] mopidy_iris.handlers Iris websocket message received: {"jsonrpc":"2.0","id":166661124879399,"method":"get_pinned"}
okt 24 13:34:08 Desktop-Ubuntu mopidy[7828]: DEBUG    [HttpServer] mopidy_iris.core {'id': 166661124879255, 'jsonrpc': '2.0', 'method': 'get_commands', 'result': {'commands': {}}, 'recipient': '3ARYDTO90YNL'}
okt 24 13:34:08 Desktop-Ubuntu mopidy[7828]: DEBUG    [HttpServer] mopidy_iris.handlers Iris websocket message received: {"jsonrpc":"2.0","id":166661124879255,"method":"get_commands"}
okt 24 13:34:08 Desktop-Ubuntu mopidy[7828]: DEBUG    [HttpServer] mopidy_iris.core {'id': 166661124879162, 'jsonrpc': '2.0', 'method': 'get_radio', 'result': {'radio': {'enabled': 0, 'seed_artists': [], 'seed_genres': [], 'seed_tracks': [], 'results': []}}, 'recipient': '3ARYDTO90YNL'}
okt 24 13:34:08 Desktop-Ubuntu mopidy[7828]: DEBUG    [HttpServer] mopidy_iris.handlers Iris websocket message received: {"jsonrpc":"2.0","id":166661124879162,"method":"get_radio"}
okt 24 13:34:08 Desktop-Ubuntu mopidy[7828]: DEBUG    [HttpServer] mopidy_iris.core {'id': 166661124878980, 'jsonrpc': '2.0', 'method': 'get_shared_config', 'result': {'shared_config': {}}, 'recipient': '3ARYDTO90YNL'}
okt 24 13:34:08 Desktop-Ubuntu mopidy[7828]: DEBUG    [HttpServer] mopidy_iris.handlers Iris websocket message received: {"jsonrpc":"2.0","id":166661124878980,"method":"get_shared_config"}
okt 24 13:34:08 Desktop-Ubuntu mopidy[7828]: DEBUG    [HttpServer] mopidy_iris.core {'id': 166661124878970, 'jsonrpc': '2.0', 'method': 'get_config', 'result': {'config': {'is_root': False, 'spotify_username': False, 'country': 'NZ', 'locale': 'en_NZ', 'snapcast_enabled': True, 'snapcast_host': 'localhost', 'snapcast_port': '1780', 'snapcast_ssl': False, 'snapcast_stream': 'Default', 'spotify_authorization_url': 'https://jamesbarnsley.co.nz/iris/auth_spotify.php', 'lastfm_authorization_url': 'https://jamesbarnsley.co.nz/iris/auth_lastfm.php', 'genius_authorization_url': 'https://jamesbarnsley.co.nz/iris/auth_genius.php', 'shared_config': {}}}, 'recipient': '3ARYDTO90YNL'}
okt 24 13:34:08 Desktop-Ubuntu mopidy[7828]: DEBUG    [HttpServer] mopidy_iris.handlers Iris websocket message received: {"jsonrpc":"2.0","id":166661124878970,"method":"get_config"}
okt 24 13:34:08 Desktop-Ubuntu mopidy[7828]: DEBUG    [HttpServer] mopidy_iris.core {'id': 166661124878745, 'jsonrpc': '2.0', 'method': 'update_connection', 'result': {'connection': {'connection_id': '3ARYDTO90YNL', 'ip': '127.0.0.1', 'created': '2022-10-24 13:34:08', 'username': 166656148284185, 'client_id': 166656148284193}}, 'recipient': '3ARYDTO90YNL'}
okt 24 13:34:08 Desktop-Ubuntu mopidy[7828]: DEBUG    [HttpServer] mopidy_iris.core {'method': 'connection_changed', 'params': {'connection': {'connection_id': '3ARYDTO90YNL', 'ip': '127.0.0.1', 'created': '2022-10-24 13:34:08', 'username': 166656148284185, 'client_id': 166656148284193}}}
okt 24 13:34:08 Desktop-Ubuntu mopidy[7828]: DEBUG    [HttpServer] mopidy_iris.handlers Iris websocket message received: {"jsonrpc":"2.0","id":166661124878745,"method":"update_connection","params":{"username":166656148284185,"client_id":166656148284193}}
okt 24 13:34:08 Desktop-Ubuntu mopidy[7828]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 0, "result": {"core.get_uri_schemes": {"description": "Get list of URI schemes we can handle", "params": []}, "core.get_version": {"description": "Get version of the Mopidy core API", "params": []}, "core.history.get_history": {"description": "Get the track history.\\n\\nThe timestamps are milliseconds since epoch.\\n\\n:returns: the track history\\n:rtype: list of (timestamp, :class:`mopidy.models.Ref`) tuples", "params": []}, "core.history.get_length": {"description": "Get the number of tracks in the history.\\n\\n:returns: the history length\\n:rtype: int", "params": []}, "core.library.browse": {"description": "Browse directories and tracks at the given ``uri``.\\n\\n``uri`` is a string which represents some directory belonging to a\\nbackend. To get the intial root directories for backends pass\\n:class:`None` as the URI.\\n\\nReturns a list of :class:`mopidy.models.Ref` objects for the\\ndirectories and tracks at the given ``uri``.\\n\\nThe :class:`~mopidy.models.Ref` objects representing tracks keep the\\ntrack\'s original URI. A matching pair of objects can look like this::\\n\\n    Track(uri=\'dummy:/foo.mp3\', name=\'foo\', artists=..., album=...)\\n    Ref.track(uri=\'dummy:/foo.mp3\', name=\'foo\')\\n\\nThe :class:`~mopidy.models.Ref` objects representing directories have\\nbackend specific URIs. These are opaque values, so no one but the\\nbackend that created them should try and derive any meaning from them.\\nThe only valid exception to this is checking the scheme, as it is used\\nto route browse requests to the correct backend.\\n\\nFor example, the dummy library\'s ``/bar`` directory could be returned\\nlike this::\\n\\n    Ref.directory(uri=\'dummy:directory:/bar\', name=\'bar\')\\n\\n:param string uri: URI to browse\\n:rtype: list of :class:`mopidy.models.Ref`\\n\\n.. versionadded:: 0.18", "params": [{"name": "uri"}]}, "core.library.get_distinct": {"description": "List distinct values for a given field from the library.\\n\\nThis has mainly been added to support the list commands the MPD\\nprotocol supports in a more sane fashion. Other frontends are not\\nrecommended to use this method.\\n\\n:param string field: Any one of ``uri``, ``track_name``, ``album``,\\n    ``artist``, ``albumartist``, ``composer``, ``performer``,\\n    ``track_no``, ``genre``, ``date``, ``comment``, ``disc_no``,\\n    ``musicbrainz_albumid``, ``musicbrainz_artistid``, or\\n    ``musicbrainz_trackid``.\\n:param dict query: Query to use for limiting results, see\\n    :meth:`search` for details about the query format.\\n:rtype: set of values corresponding to the requested field type.\\n\\n.. versionadded:: 1.0", "params": [{"name": "field"}, {"name": "query", "default": null}]}, "core.library.get_images": {"description": "Lookup the images for the given URIs\\n\\nBackends can use this to return image URIs for any URI they know about\\nbe it tracks, albums, playlists. The lookup result is a dictionary\\nmapping the provided URIs to lists of images.\\n\\nUnknown URIs or URIs the corresponding backend couldn\'t find anything\\nfor will simply return an empty list for that URI.\\n\\n:param uris: list of URIs to find images for\\n:type uris: list of string\\n:rtype: {uri: tuple of :class:`mopidy.models.Image`}\\n\\n.. versionadded:: 1.0", "params": [{"name": "uris"}]}, "core.library.lookup": {"description": "Lookup the given URIs.\\n\\nIf the URI expands to multiple tracks, the returned list will contain\\nthem all.\\n\\n:param uris: track URIs\\n:type uris: list of string\\n:rtype: {uri: list of :class:`mopidy.models.Track`}", "params": [{"name": "uris"}]}, "core.library.refresh": {"description": "Refresh library. Limit to URI and below if an URI is given.\\n\\n:param uri: directory or track URI\\n:type uri: string", "params": [{"name": "uri", "default": null}]}, "core.library.search": {"description": "Search the library for tracks where ``field`` contains ``values``.\\n\\n``field`` can be one of ``uri``, ``track_name``, ``album``, ``artist``,\\n``albumartist``, ``composer``, ``performer``, ``track_no``, ``genre``,\\n``date``, ``comment``, ``disc_no``, ``musicbrainz_albumid``,\\n``musicbrainz_artistid``, ``musicbrainz_trackid`` or ``any``.\\n\\nIf ``uris`` is given, the search is limited to results from within the\\nURI roots. For example passing ``uris=[\'file:\']`` will limit the search\\nto the local backend.\\n\\nExamples::\\n\\n    # Returns results matching \'a\' in any backend\\n    search({\'any\': [\'a\']})\\n\\n    # Returns results matching artist \'xyz\' in any backend\\n    search({\'artist\': [\'xyz\']})\\n\\n    # Returns results matching \'a\' and \'b\' and artist \'xyz\' in any\\n    # backend\\n    search({\'any\': [\'a\', \'b\'], \'artist\': [\'xyz\']})\\n\\n    # Returns results matching \'a\' if within the given URI roots\\n    # \\"file:///media/music\\" and \\"spotify:\\"\\n    search({\'any\': [\'a\']}, uris=[\'file:///media/music\', \'spotify:\'])\\n\\n    # Returns results matching artist \'xyz\' and \'abc\' in any backend\\n    search({\'artist\': [\'xyz\', \'abc\']})\\n\\n:param query: one or more queries to search for\\n:type query: dict\\n:param uris: zero or more URI roots to limit the search to\\n:type uris: list of string or :class:`None`\\n:param exact: if the search should use exact matching\\n:type exact: :class:`bool`\\n:rtype: list of :class:`mopidy.models.SearchResult`\\n\\n.. versionadded:: 1.0\\n    The ``exact`` keyword argument.", "params": [{"name": "query"}, {"name": "uris", "default": null}, {"name": "exact", "default": false}]}, "core.mixer.get_mute": {"description": "Get mute state.\\n\\n:class:`True` if muted, :class:`False` unmuted, :class:`None` if\\nunknown.", "params": []}, "core.mixer.get_volume": {"description": "Get the volume.\\n\\nInteger in range [0..100] or :class:`None` if unknown.\\n\\nThe volume scale is linear.", "params": []}, "core.mixer.set_mute": {"description": "Set mute state.\\n\\n:class:`True` to mute, :class:`False` to unmute.\\n\\nReturns :class:`True` if call is successful, otherwise :class:`False`.", "params": [{"name": "mute"}]}, "core.mixer.set_volume": {"description": "Set the volume.\\n\\nThe volume is defined as an integer in range [0..100].\\n\\nThe volume scale is linear.\\n\\nReturns :class:`True` if call is successful, otherwise :class:`False`.", "params": [{"name": "volume"}]}, "core.playback.get_current_tl_track": {"description": "Get the currently playing or selected track.\\n\\nReturns a :class:`mopidy.models.TlTrack` or :class:`None`.", "params": []}, "core.playback.get_current_tlid": {"description": "Get the currently playing or selected TLID.\\n\\nExtracted from :meth:`get_current_tl_track` for convenience.\\n\\nReturns a :class:`int` or :class:`None`.\\n\\n.. versionadded:: 1.1", "params": []}, "core.playback.get_current_track": {"description": "Get the currently playing or selected track.\\n\\nExtracted from :meth:`get_current_tl_track` for convenience.\\n\\nReturns a :class:`mopidy.models.Track` or :class:`None`.", "params": []}, "core.playback.get_state": {"description": "Get The playback state.", "params": []}, "core.playback.get_stream_title": {"description": "Get the current stream title or :class:`None`.", "params": []}, "core.playback.get_time_position": {"description": "Get time position in milliseconds.", "params": []}, "core.playback.next": {"description": "Change to the next track.\\n\\nThe current playback state will be kept. If it was playing, playing\\nwill continue. If it was paused, it will still be paused, etc.", "params": []}, "core.playback.pause": {"description": "Pause playback.", "params": []}, "core.playback.play": {"description": "Play the given track, or if the given tl_track and tlid is\\n:class:`None`, play the currently active track.\\n\\nNote that the track **must** already be in the tracklist.\\n\\n.. deprecated:: 3.0\\n    The ``tl_track`` argument. Use ``tlid`` instead.\\n\\n:param tl_track: track to play\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:param tlid: TLID of the track to play\\n:type tlid: :class:`int` or :class:`None`", "params": [{"name": "tl_track", "default": null}, {"name": "tlid", "default": null}]}, "core.playback.previous": {"description": "Change to the previous track.\\n\\nThe current playback state will be kept. If it was playing, playing\\nwill continue. If it was paused, it will still be paused, etc.", "params": []}, "core.playback.resume": {"description": "If paused, resume playing the current track.", "params": []}, "core.playback.seek": {"description": "Seeks to time position given in milliseconds.\\n\\n:param time_position: time position in milliseconds\\n:type time_position: int\\n:rtype: :class:`True` if successful, else :class:`False`", "params": [{"name": "time_position"}]}, "core.playback.set_state": {"description": "Set the playback state.\\n\\nMust be :attr:`PLAYING`, :attr:`PAUSED`, or :attr:`STOPPED`.\\n\\nPossible states and transitions:\\n\\n.. digraph:: state_transitions\\n\\n    \\"STOPPED\\" -> \\"PLAYING\\" [ label=\\"play\\" ]\\n    \\"STOPPED\\" -> \\"PAUSED\\" [ label=\\"pause\\" ]\\n    \\"PLAYING\\" -> \\"STOPPED\\" [ label=\\"stop\\" ]\\n    \\"PLAYING\\" -> \\"PAUSED\\" [ label=\\"pause\\" ]\\n    \\"PLAYING\\" -> \\"PLAYING\\" [ label=\\"play\\" ]\\n    \\"PAUSED\\" -> \\"PLAYING\\" [ label=\\"resume\\" ]\\n    \\"PAUSED\\" -> \\"STOPPED\\" [ label=\\"stop\\" ]", "params": [{"name": "new_state"}]}, "core.playback.stop": {"description": "Stop playing.", "params": []}, "core.playlists.as_list": {"description": "Get a list of the currently available playlists.\\n\\nReturns a list of :class:`~mopidy.models.Ref` objects referring to the\\nplaylists. In other words, no information about the playlists\' content\\nis given.\\n\\n:rtype: list of :class:`mopidy.models.Ref`\\n\\n.. versionadded:: 1.0", "params": []}, "core.playlists.create": {"description": "Create a new playlist.\\n\\nIf ``uri_scheme`` matches an URI scheme handled by a current backend,\\nthat backend is asked to create the playlist. If ``uri_scheme`` is\\n:class:`None` or doesn\'t match a current backend, the first backend is\\nasked to create the playlist.\\n\\nAll new playlists must be created by calling this method, and **not**\\nby creating new instances of :class:`mopidy.models.Playlist`.\\n\\n:param name: name of the new playlist\\n:type name: string\\n:param uri_scheme: use the backend matching the URI scheme\\n:type uri_scheme: string\\n:rtype: :class:`mopidy.models.Playlist` or :class:`None`", "params": [{"name": "name"}, {"name": "uri_scheme", "default": null}]}, "core.playlists.delete": {"description": "Delete playlist identified by the URI.\\n\\nIf the URI doesn\'t match the URI schemes handled by the current\\nbackends, nothing happens.\\n\\nReturns :class:`True` if deleted, :class:`False` otherwise.\\n\\n:param uri: URI of the playlist to delete\\n:type uri: string\\n:rtype: :class:`bool`\\n\\n.. versionchanged:: 2.2\\n    Return type defined.", "params": [{"name": "uri"}]}, "core.playlists.get_items": {"description": "Get the items in a playlist specified by ``uri``.\\n\\nReturns a list of :class:`~mopidy.models.Ref` objects referring to the\\nplaylist\'s items.\\n\\nIf a playlist with the given ``uri`` doesn\'t exist, it returns\\n:class:`None`.\\n\\n:rtype: list of :class:`mopidy.models.Ref`, or :class:`None`\\n\\n.. versionadded:: 1.0", "params": [{"name": "uri"}]}, "core.playlists.get_uri_schemes": {"description": "Get the list of URI schemes that support playlists.\\n\\n:rtype: list of string\\n\\n.. versionadded:: 2.0", "params": []}, "core.playlists.lookup": {"description": "Lookup playlist with given URI in both the set of playlists and in any\\nother playlist sources. Returns :class:`None` if not found.\\n\\n:param uri: playlist URI\\n:type uri: string\\n:rtype: :class:`mopidy.models.Playlist` or :class:`None`", "params": [{"name": "uri"}]}, "core.playlists.refresh": {"description": "Refresh the playlists in :attr:`playlists`.\\n\\nIf ``uri_scheme`` is :class:`None`, all backends are asked to refresh.\\nIf ``uri_scheme`` is an URI scheme handled by a backend, only that\\nbackend is asked to refresh. If ``uri_scheme`` doesn\'t match any\\ncurrent backend, nothing happens.\\n\\n:param uri_scheme: limit to the backend matching the URI scheme\\n:type uri_scheme: string", "params": [{"name": "uri_scheme", "default": null}]}, "core.playlists.save": {"description": "Save the playlist.\\n\\nFor a playlist to be saveable, it must have the ``uri`` attribute set.\\nYou must not set the ``uri`` atribute yourself, but use playlist\\nobjects returned by :meth:`create` or retrieved from :attr:`playlists`,\\nwhich will always give you saveable playlists.\\n\\nThe method returns the saved playlist. The return playlist may differ\\nfrom the saved playlist. E.g. if the playlist name was changed, the\\nreturned playlist may have a different URI. The caller of this method\\nmust throw away the playlist sent to this method, and use the\\nreturned playlist instead.\\n\\nIf the playlist\'s URI isn\'t set or doesn\'t match the URI scheme of a\\ncurrent backend, nothing is done and :class:`None` is returned.\\n\\n:param playlist: the playlist\\n:type playlist: :class:`mopidy.models.Playlist`\\n:rtype: :class:`mopidy.models.Playlist` or :class:`None`", "params": [{"name": "playlist"}]}, "core.tracklist.add": {"description": "Add tracks to the tracklist.\\n\\nIf ``uris`` is given instead of ``tracks``, the URIs are\\nlooked up in the library and the resulting tracks are added to the\\ntracklist.\\n\\nIf ``at_position`` is given, the tracks are inserted at the given\\nposition in the tracklist. If ``at_position`` is not given, the tracks\\nare appended to the end of the tracklist.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.\\n\\n:param tracks: tracks to add\\n:type tracks: list of :class:`mopidy.models.Track` or :class:`None`\\n:param at_position: position in tracklist to add tracks\\n:type at_position: int or :class:`None`\\n:param uris: list of URIs for tracks to add\\n:type uris: list of string or :class:`None`\\n:rtype: list of :class:`mopidy.models.TlTrack`\\n\\n.. versionadded:: 1.0\\n    The ``uris`` argument.\\n\\n.. deprecated:: 1.0\\n    The ``tracks`` argument. Use ``uris``.", "params": [{"name": "tracks", "default": null}, {"name": "at_position", "default": null}, {"name": "uris", "default": null}]}, "core.tracklist.clear": {"description": "Clear the tracklist.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.", "params": []}, "core.tracklist.eot_track": {"description": "The track that will be played after the given track.\\n\\nNot necessarily the same track as :meth:`next_track`.\\n\\n.. deprecated:: 3.0\\n    Use :meth:`get_eot_tlid` instead.\\n\\n:param tl_track: the reference track\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:rtype: :class:`mopidy.models.TlTrack` or :class:`None`", "params": [{"name": "tl_track"}]}, "core.tracklist.filter": {"description": "Filter the tracklist by the given criteria.\\n\\nEach rule in the criteria consists of a model field and a list of\\nvalues to compare it against. If the model field matches any of the\\nvalues, it may be returned.\\n\\nOnly tracks that match all the given criteria are returned.\\n\\nExamples::\\n\\n    # Returns tracks with TLIDs 1, 2, 3, or 4 (tracklist ID)\\n    filter({\'tlid\': [1, 2, 3, 4]})\\n\\n    # Returns track with URIs \'xyz\' or \'abc\'\\n    filter({\'uri\': [\'xyz\', \'abc\']})\\n\\n    # Returns track with a matching TLIDs (1, 3 or 6) and a\\n    # matching URI (\'xyz\' or \'abc\')\\n    filter({\'tlid\': [1, 3, 6], \'uri\': [\'xyz\', \'abc\']})\\n\\n:param criteria: one or more rules to match by\\n:type criteria: dict, of (string, list) pairs\\n:rtype: list of :class:`mopidy.models.TlTrack`", "params": [{"name": "criteria"}]}, "core.tracklist.get_consume": {"description": "Get consume mode.\\n\\n:class:`True`\\n    Tracks are removed from the tracklist when they have been played.\\n:class:`False`\\n    Tracks are not removed from the tracklist.", "params": []}, "core.tracklist.get_eot_tlid": {"description": "The TLID of the track that will be played after the current track.\\n\\nNot necessarily the same TLID as returned by :meth:`get_next_tlid`.\\n\\n:rtype: :class:`int` or :class:`None`\\n\\n.. versionadded:: 1.1", "params": []}, "core.tracklist.get_length": {"description": "Get length of the tracklist.", "params": []}, "core.tracklist.get_next_tlid": {"description": "The tlid of the track that will be played if calling\\n:meth:`mopidy.core.PlaybackController.next()`.\\n\\nFor normal playback this is the next track in the tracklist. If repeat\\nis enabled the next track can loop around the tracklist. When random is\\nenabled this should be a random track, all tracks should be played once\\nbefore the tracklist repeats.\\n\\n:rtype: :class:`int` or :class:`None`\\n\\n.. versionadded:: 1.1", "params": []}, "core.tracklist.get_previous_tlid": {"description": "Returns the TLID of the track that will be played if calling\\n:meth:`mopidy.core.PlaybackController.previous()`.\\n\\nFor normal playback this is the previous track in the tracklist. If\\nrandom and/or consume is enabled it should return the current track\\ninstead.\\n\\n:rtype: :class:`int` or :class:`None`\\n\\n.. versionadded:: 1.1", "params": []}, "core.tracklist.get_random": {"description": "Get random mode.\\n\\n:class:`True`\\n    Tracks are selected at random from the tracklist.\\n:class:`False`\\n    Tracks are played in the order of the tracklist.", "params": []}, "core.tracklist.get_repeat": {"description": "Get repeat mode.\\n\\n:class:`True`\\n    The tracklist is played repeatedly.\\n:class:`False`\\n    The tracklist is played once.", "params": []}, "core.tracklist.get_single": {"description": "Get single mode.\\n\\n:class:`True`\\n    Playback is stopped after current song, unless in ``repeat`` mode.\\n:class:`False`\\n    Playback continues after current song.", "params": []}, "core.tracklist.get_tl_tracks": {"description": "Get tracklist as list of :class:`mopidy.models.TlTrack`.", "params": []}, "core.tracklist.get_tracks": {"description": "Get tracklist as list of :class:`mopidy.models.Track`.", "params": []}, "core.tracklist.get_version": {"description": "Get the tracklist version.\\n\\nInteger which is increased every time the tracklist is changed. Is not\\nreset before Mopidy is restarted.", "params": []}, "core.tracklist.index": {"description": "The position of the given track in the tracklist.\\n\\nIf neither *tl_track* or *tlid* is given we return the index of\\nthe currently playing track.\\n\\n:param tl_track: the track to find the index of\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:param tlid: TLID of the track to find the index of\\n:type tlid: :class:`int` or :class:`None`\\n:rtype: :class:`int` or :class:`None`\\n\\n.. versionadded:: 1.1\\n    The *tlid* parameter", "params": [{"name": "tl_track", "default": null}, {"name": "tlid", "default": null}]}, "core.tracklist.move": {"description": "Move the tracks in the slice ``[start:end]`` to ``to_position``.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.\\n\\n:param start: position of first track to move\\n:type start: int\\n:param end: position after last track to move\\n:type end: int\\n:param to_position: new position for the tracks\\n:type to_position: int", "params": [{"name": "start"}, {"name": "end"}, {"name": "to_position"}]}, "core.tracklist.next_track": {"description": "The track that will be played if calling\\n:meth:`mopidy.core.PlaybackController.next()`.\\n\\nFor normal playback this is the next track in the tracklist. If repeat\\nis enabled the next track can loop around the tracklist. When random is\\nenabled this should be a random track, all tracks should be played once\\nbefore the tracklist repeats.\\n\\n.. deprecated:: 3.0\\n    Use :meth:`get_next_tlid` instead.\\n\\n:param tl_track: the reference track\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:rtype: :class:`mopidy.models.TlTrack` or :class:`None`", "params": [{"name": "tl_track"}]}, "core.tracklist.previous_track": {"description": "Returns the track that will be played if calling\\n:meth:`mopidy.core.PlaybackController.previous()`.\\n\\nFor normal playback this is the previous track in the tracklist. If\\nrandom and/or consume is enabled it should return the current track\\ninstead.\\n\\n.. deprecated:: 3.0\\n    Use :meth:`get_previous_tlid` instead.\\n\\n:param tl_track: the reference track\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:rtype: :class:`mopidy.models.TlTrack` or :class:`None`", "params": [{"name": "tl_track"}]}, "core.tracklist.remove": {"description": "Remove the matching tracks from the tracklist.\\n\\nUses :meth:`filter()` to lookup the tracks to remove.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.\\n\\n:param criteria: one or more rules to match by\\n:type criteria: dict, of (string, list) pairs\\n:rtype: list of :class:`mopidy.models.TlTrack` that were removed", "params": [{"name": "criteria"}]}, "core.tracklist.set_consume": {"description": "Set consume mode.\\n\\n:class:`True`\\n    Tracks are removed from the tracklist when they have been played.\\n:class:`False`\\n    Tracks are not removed from the tracklist.", "params": [{"name": "value"}]}, "core.tracklist.set_random": {"description": "Set random mode.\\n\\n:class:`True`\\n    Tracks are selected at random from the tracklist.\\n:class:`False`\\n    Tracks are played in the order of the tracklist.", "params": [{"name": "value"}]}, "core.tracklist.set_repeat": {"description": "Set repeat mode.\\n\\nTo repeat a single track, set both ``repeat`` and ``single``.\\n\\n:class:`True`\\n    The tracklist is played repeatedly.\\n:class:`False`\\n    The tracklist is played once.", "params": [{"name": "value"}]}, "core.tracklist.set_single": {"description": "Set single mode.\\n\\n:class:`True`\\n    Playback is stopped after current song, unless in ``repeat`` mode.\\n:class:`False`\\n    Playback continues after current song.", "params": [{"name": "value"}]}, "core.tracklist.shuffle": {"description": "Shuffles the entire tracklist. If ``start`` and ``end`` is given only\\nshuffles the slice ``[start:end]``.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.\\n\\n:param start: position of first track to shuffle\\n:type start: int or :class:`None`\\n:param end: position after last track to shuffle\\n:type end: int or :class:`None`", "params": [{"name": "start", "default": null}, {"name": "end", "default": null}]}, "core.tracklist.slice": {"description": "Returns a slice of the tracklist, limited by the given start and end\\npositions.\\n\\n:param start: position of first track to include in slice\\n:type start: int\\n:param end: position after last track to include in slice\\n:type end: int\\n:rtype: :class:`mopidy.models.TlTrack`", "params": [{"name": "start"}, {"name": "end"}]}}}'
okt 24 13:34:08 Desktop-Ubuntu mopidy[7828]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.describe","jsonrpc":"2.0","id":0}'
okt 24 13:34:08 Desktop-Ubuntu mopidy[7828]: DEBUG    [HttpServer] mopidy_iris.core {'method': 'connection_added', 'params': {'connection': {'connection_id': '3ARYDTO90YNL', 'ip': '127.0.0.1', 'created': '2022-10-24 13:34:08'}}}
okt 24 13:34:08 Desktop-Ubuntu mopidy[7828]: DEBUG    [HttpServer] mopidy_iris.core <mopidy_iris.handlers.WebsocketHandler object at 0x7f3e0814fbe0>
okt 24 13:34:08 Desktop-Ubuntu mopidy[7828]: DEBUG    [HttpServer] mopidy_iris.core Connection added
okt 24 13:34:08 Desktop-Ubuntu mopidy[7828]: INFO     [HttpServer] tornado.access 101 GET /iris/ws/ (127.0.0.1) 0.46ms
okt 24 13:34:08 Desktop-Ubuntu mopidy[7828]: DEBUG    [HttpServer] mopidy.http.handlers New WebSocket connection from 127.0.0.1
okt 24 13:34:08 Desktop-Ubuntu mopidy[7828]: INFO     [HttpServer] tornado.access 101 GET /mopidy/ws/ (127.0.0.1) 0.58ms
okt 24 13:34:08 Desktop-Ubuntu mopidy[7828]: INFO     [HttpServer] tornado.access 200 GET /iris/assets/favicon.png (127.0.0.1) 0.73ms
okt 24 13:34:07 Desktop-Ubuntu mopidy[7828]: INFO     [HttpServer] tornado.access 200 GET /iris/app.min.js?v=1666559547 (127.0.0.1) 18.01ms
okt 24 13:34:07 Desktop-Ubuntu mopidy[7828]: INFO     [HttpServer] tornado.access 200 GET /iris/app.min.css?v=1666559547 (127.0.0.1) 4.99ms
okt 24 13:34:07 Desktop-Ubuntu mopidy[7828]: INFO     [HttpServer] tornado.access 200 GET /iris/assets/app-icon.svg (127.0.0.1) 0.71ms
okt 24 13:34:07 Desktop-Ubuntu mopidy[7828]: DEBUG    [HttpServer] mopidy_iris.core {'method': 'connection_removed', 'params': {'connection': {'connection_id': '5SQXZA12DQZ4', 'ip': '127.0.0.1', 'created': '2022-10-24 13:33:57', 'username': 166656148284185, 'client_id': 166656148284193}}}
okt 24 13:34:07 Desktop-Ubuntu mopidy[7828]: DEBUG    [HttpServer] mopidy.http.handlers Closed WebSocket connection from 127.0.0.1
okt 24 13:34:07 Desktop-Ubuntu mopidy[7828]: INFO     [HttpServer] tornado.access 200 GET /iris/library/browse (127.0.0.1) 5.29ms
okt 24 13:34:05 Desktop-Ubuntu mopidy[7828]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 26, "result": []}'
okt 24 13:34:05 Desktop-Ubuntu mopidy[7828]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.library.browse","params":{"uri":null},"jsonrpc":"2.0","id":26}'
okt 24 13:33:58 Desktop-Ubuntu mopidy[7828]: DEBUG    [HttpServer] mopidy_iris.core {'id': 166661123813444, 'jsonrpc': '2.0', 'method': 'get_version', 'result': {'version': {'current': '3.64.1', 'latest': '3.64.1', 'is_root': False, 'upgrade_available': False}}, 'recipient': '5SQXZA12DQZ4'}
okt 24 13:33:58 Desktop-Ubuntu mopidy[7828]: DEBUG    [HttpServer] mopidy_iris.handlers Iris websocket message received: {"jsonrpc":"2.0","id":166661123813444,"method":"get_version"}
okt 24 13:33:57 Desktop-Ubuntu mopidy[7828]: DEBUG    [HttpServer] mopidy_iris.core {'id': 166661123763360, 'jsonrpc': '2.0', 'method': 'get_queue_metadata', 'result': {'queue_metadata': {}}, 'recipient': '5SQXZA12DQZ4'}
okt 24 13:33:57 Desktop-Ubuntu mopidy[7828]: DEBUG    [HttpServer] mopidy_iris.handlers Iris websocket message received: {"jsonrpc":"2.0","id":166661123763360,"method":"get_queue_metadata"}
okt 24 13:33:57 Desktop-Ubuntu mopidy[7828]: DEBUG    [HttpServer] mopidy_iris.core {'id': 166661123763280, 'jsonrpc': '2.0', 'method': 'get_pinned', 'result': {'pinned': []}, 'recipient': '5SQXZA12DQZ4'}
okt 24 13:33:57 Desktop-Ubuntu mopidy[7828]: DEBUG    [HttpServer] mopidy_iris.handlers Iris websocket message received: {"jsonrpc":"2.0","id":166661123763280,"method":"get_pinned"}
okt 24 13:33:57 Desktop-Ubuntu mopidy[7828]: DEBUG    [HttpServer] mopidy_iris.core {'id': 166661123763130, 'jsonrpc': '2.0', 'method': 'get_commands', 'result': {'commands': {}}, 'recipient': '5SQXZA12DQZ4'}
okt 24 13:33:57 Desktop-Ubuntu mopidy[7828]: DEBUG    [HttpServer] mopidy_iris.handlers Iris websocket message received: {"jsonrpc":"2.0","id":166661123763130,"method":"get_commands"}
okt 24 13:33:57 Desktop-Ubuntu mopidy[7828]: DEBUG    [HttpServer] mopidy_iris.core {'id': 166661123763078, 'jsonrpc': '2.0', 'method': 'get_radio', 'result': {'radio': {'enabled': 0, 'seed_artists': [], 'seed_genres': [], 'seed_tracks': [], 'results': []}}, 'recipient': '5SQXZA12DQZ4'}
okt 24 13:33:57 Desktop-Ubuntu mopidy[7828]: DEBUG    [HttpServer] mopidy_iris.handlers Iris websocket message received: {"jsonrpc":"2.0","id":166661123763078,"method":"get_radio"}
okt 24 13:33:57 Desktop-Ubuntu mopidy[7828]: DEBUG    [HttpServer] mopidy_iris.core {'id': 166661123762934, 'jsonrpc': '2.0', 'method': 'get_shared_config', 'result': {'shared_config': {}}, 'recipient': '5SQXZA12DQZ4'}
okt 24 13:33:57 Desktop-Ubuntu mopidy[7828]: DEBUG    [HttpServer] mopidy_iris.handlers Iris websocket message received: {"jsonrpc":"2.0","id":166661123762934,"method":"get_shared_config"}
okt 24 13:33:57 Desktop-Ubuntu mopidy[7828]: DEBUG    [HttpServer] mopidy_iris.core {'id': 166661123762837, 'jsonrpc': '2.0', 'method': 'get_config', 'result': {'config': {'is_root': False, 'spotify_username': False, 'country': 'NZ', 'locale': 'en_NZ', 'snapcast_enabled': True, 'snapcast_host': 'localhost', 'snapcast_port': '1780', 'snapcast_ssl': False, 'snapcast_stream': 'Default', 'spotify_authorization_url': 'https://jamesbarnsley.co.nz/iris/auth_spotify.php', 'lastfm_authorization_url': 'https://jamesbarnsley.co.nz/iris/auth_lastfm.php', 'genius_authorization_url': 'https://jamesbarnsley.co.nz/iris/auth_genius.php', 'shared_config': {}}}, 'recipient': '5SQXZA12DQZ4'}
okt 24 13:33:57 Desktop-Ubuntu mopidy[7828]: DEBUG    [HttpServer] mopidy_iris.handlers Iris websocket message received: {"jsonrpc":"2.0","id":166661123762837,"method":"get_config"}
okt 24 13:33:57 Desktop-Ubuntu mopidy[7828]: DEBUG    [HttpServer] mopidy_iris.core {'id': 166661123762651, 'jsonrpc': '2.0', 'method': 'update_connection', 'result': {'connection': {'connection_id': '5SQXZA12DQZ4', 'ip': '127.0.0.1', 'created': '2022-10-24 13:33:57', 'username': 166656148284185, 'client_id': 166656148284193}}, 'recipient': '5SQXZA12DQZ4'}
okt 24 13:33:57 Desktop-Ubuntu mopidy[7828]: DEBUG    [HttpServer] mopidy_iris.core {'method': 'connection_changed', 'params': {'connection': {'connection_id': '5SQXZA12DQZ4', 'ip': '127.0.0.1', 'created': '2022-10-24 13:33:57', 'username': 166656148284185, 'client_id': 166656148284193}}}
okt 24 13:33:57 Desktop-Ubuntu mopidy[7828]: DEBUG    [HttpServer] mopidy_iris.handlers Iris websocket message received: {"jsonrpc":"2.0","id":166661123762651,"method":"update_connection","params":{"username":166656148284185,"client_id":166656148284193}}
okt 24 13:33:57 Desktop-Ubuntu mopidy[7828]: DEBUG    [HttpServer] mopidy_iris.core {'method': 'connection_added', 'params': {'connection': {'connection_id': '5SQXZA12DQZ4', 'ip': '127.0.0.1', 'created': '2022-10-24 13:33:57'}}}
okt 24 13:33:57 Desktop-Ubuntu mopidy[7828]: DEBUG    [HttpServer] mopidy_iris.core <mopidy_iris.handlers.WebsocketHandler object at 0x7f3e080e2b00>
okt 24 13:33:57 Desktop-Ubuntu mopidy[7828]: DEBUG    [HttpServer] mopidy_iris.core Connection added
okt 24 13:33:57 Desktop-Ubuntu mopidy[7828]: INFO     [HttpServer] tornado.access 101 GET /iris/ws/ (127.0.0.1) 0.51ms
okt 24 13:33:53 Desktop-Ubuntu mopidy[7828]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 25, "result": null}'
okt 24 13:33:53 Desktop-Ubuntu mopidy[7828]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.playback.get_stream_title","params":{},"jsonrpc":"2.0","id":25}'
okt 24 13:33:53 Desktop-Ubuntu mopidy[7828]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 24, "result": ["file", "http", "https", "m3u", "rtsp"]}'
okt 24 13:33:53 Desktop-Ubuntu mopidy[7828]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.get_uri_schemes","params":{},"jsonrpc":"2.0","id":24}'
okt 24 13:33:53 Desktop-Ubuntu mopidy[7828]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 23, "result": 0}'
okt 24 13:33:53 Desktop-Ubuntu mopidy[7828]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.playback.get_time_position","params":{},"jsonrpc":"2.0","id":23}'
okt 24 13:33:53 Desktop-Ubuntu mopidy[7828]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 22, "result": []}'
okt 24 13:33:53 Desktop-Ubuntu mopidy[7828]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_tl_tracks","params":{},"jsonrpc":"2.0","id":22}'
okt 24 13:33:53 Desktop-Ubuntu mopidy[7828]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 21, "result": false}'
okt 24 13:33:53 Desktop-Ubuntu mopidy[7828]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_repeat","params":{},"jsonrpc":"2.0","id":21}'
okt 24 13:33:53 Desktop-Ubuntu mopidy[7828]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 20, "result": false}'
okt 24 13:33:53 Desktop-Ubuntu mopidy[7828]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_random","params":{},"jsonrpc":"2.0","id":20}'
okt 24 13:33:53 Desktop-Ubuntu mopidy[7828]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 19, "result": false}'
okt 24 13:33:53 Desktop-Ubuntu mopidy[7828]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_consume","params":{},"jsonrpc":"2.0","id":19}'
okt 24 13:33:53 Desktop-Ubuntu mopidy[7828]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 18, "result": false}'
okt 24 13:33:53 Desktop-Ubuntu mopidy[7828]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.mixer.get_mute","params":{},"jsonrpc":"2.0","id":18}'
okt 24 13:33:53 Desktop-Ubuntu mopidy[7828]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 17, "result": 100}'
okt 24 13:33:53 Desktop-Ubuntu mopidy[7828]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.mixer.get_volume","params":{},"jsonrpc":"2.0","id":17}'
okt 24 13:33:53 Desktop-Ubuntu mopidy[7828]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 16, "result": "stopped"}'
okt 24 13:33:53 Desktop-Ubuntu mopidy[7828]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.playback.get_state","params":{},"jsonrpc":"2.0","id":16}'
okt 24 13:33:53 Desktop-Ubuntu mopidy[7828]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 15, "result": null}'
okt 24 13:33:53 Desktop-Ubuntu mopidy[7828]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.playback.get_current_tl_track","params":{},"jsonrpc":"2.0","id":15}'
okt 24 13:33:53 Desktop-Ubuntu mopidy[7828]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 14, "result": {"core.get_uri_schemes": {"description": "Get list of URI schemes we can handle", "params": []}, "core.get_version": {"description": "Get version of the Mopidy core API", "params": []}, "core.history.get_history": {"description": "Get the track history.\\n\\nThe timestamps are milliseconds since epoch.\\n\\n:returns: the track history\\n:rtype: list of (timestamp, :class:`mopidy.models.Ref`) tuples", "params": []}, "core.history.get_length": {"description": "Get the number of tracks in the history.\\n\\n:returns: the history length\\n:rtype: int", "params": []}, "core.library.browse": {"description": "Browse directories and tracks at the given ``uri``.\\n\\n``uri`` is a string which represents some directory belonging to a\\nbackend. To get the intial root directories for backends pass\\n:class:`None` as the URI.\\n\\nReturns a list of :class:`mopidy.models.Ref` objects for the\\ndirectories and tracks at the given ``uri``.\\n\\nThe :class:`~mopidy.models.Ref` objects representing tracks keep the\\ntrack\'s original URI. A matching pair of objects can look like this::\\n\\n    Track(uri=\'dummy:/foo.mp3\', name=\'foo\', artists=..., album=...)\\n    Ref.track(uri=\'dummy:/foo.mp3\', name=\'foo\')\\n\\nThe :class:`~mopidy.models.Ref` objects representing directories have\\nbackend specific URIs. These are opaque values, so no one but the\\nbackend that created them should try and derive any meaning from them.\\nThe only valid exception to this is checking the scheme, as it is used\\nto route browse requests to the correct backend.\\n\\nFor example, the dummy library\'s ``/bar`` directory could be returned\\nlike this::\\n\\n    Ref.directory(uri=\'dummy:directory:/bar\', name=\'bar\')\\n\\n:param string uri: URI to browse\\n:rtype: list of :class:`mopidy.models.Ref`\\n\\n.. versionadded:: 0.18", "params": [{"name": "uri"}]}, "core.library.get_distinct": {"description": "List distinct values for a given field from the library.\\n\\nThis has mainly been added to support the list commands the MPD\\nprotocol supports in a more sane fashion. Other frontends are not\\nrecommended to use this method.\\n\\n:param string field: Any one of ``uri``, ``track_name``, ``album``,\\n    ``artist``, ``albumartist``, ``composer``, ``performer``,\\n    ``track_no``, ``genre``, ``date``, ``comment``, ``disc_no``,\\n    ``musicbrainz_albumid``, ``musicbrainz_artistid``, or\\n    ``musicbrainz_trackid``.\\n:param dict query: Query to use for limiting results, see\\n    :meth:`search` for details about the query format.\\n:rtype: set of values corresponding to the requested field type.\\n\\n.. versionadded:: 1.0", "params": [{"name": "field"}, {"name": "query", "default": null}]}, "core.library.get_images": {"description": "Lookup the images for the given URIs\\n\\nBackends can use this to return image URIs for any URI they know about\\nbe it tracks, albums, playlists. The lookup result is a dictionary\\nmapping the provided URIs to lists of images.\\n\\nUnknown URIs or URIs the corresponding backend couldn\'t find anything\\nfor will simply return an empty list for that URI.\\n\\n:param uris: list of URIs to find images for\\n:type uris: list of string\\n:rtype: {uri: tuple of :class:`mopidy.models.Image`}\\n\\n.. versionadded:: 1.0", "params": [{"name": "uris"}]}, "core.library.lookup": {"description": "Lookup the given URIs.\\n\\nIf the URI expands to multiple tracks, the returned list will contain\\nthem all.\\n\\n:param uris: track URIs\\n:type uris: list of string\\n:rtype: {uri: list of :class:`mopidy.models.Track`}", "params": [{"name": "uris"}]}, "core.library.refresh": {"description": "Refresh library. Limit to URI and below if an URI is given.\\n\\n:param uri: directory or track URI\\n:type uri: string", "params": [{"name": "uri", "default": null}]}, "core.library.search": {"description": "Search the library for tracks where ``field`` contains ``values``.\\n\\n``field`` can be one of ``uri``, ``track_name``, ``album``, ``artist``,\\n``albumartist``, ``composer``, ``performer``, ``track_no``, ``genre``,\\n``date``, ``comment``, ``disc_no``, ``musicbrainz_albumid``,\\n``musicbrainz_artistid``, ``musicbrainz_trackid`` or ``any``.\\n\\nIf ``uris`` is given, the search is limited to results from within the\\nURI roots. For example passing ``uris=[\'file:\']`` will limit the search\\nto the local backend.\\n\\nExamples::\\n\\n    # Returns results matching \'a\' in any backend\\n    search({\'any\': [\'a\']})\\n\\n    # Returns results matching artist \'xyz\' in any backend\\n    search({\'artist\': [\'xyz\']})\\n\\n    # Returns results matching \'a\' and \'b\' and artist \'xyz\' in any\\n    # backend\\n    search({\'any\': [\'a\', \'b\'], \'artist\': [\'xyz\']})\\n\\n    # Returns results matching \'a\' if within the given URI roots\\n    # \\"file:///media/music\\" and \\"spotify:\\"\\n    search({\'any\': [\'a\']}, uris=[\'file:///media/music\', \'spotify:\'])\\n\\n    # Returns results matching artist \'xyz\' and \'abc\' in any backend\\n    search({\'artist\': [\'xyz\', \'abc\']})\\n\\n:param query: one or more queries to search for\\n:type query: dict\\n:param uris: zero or more URI roots to limit the search to\\n:type uris: list of string or :class:`None`\\n:param exact: if the search should use exact matching\\n:type exact: :class:`bool`\\n:rtype: list of :class:`mopidy.models.SearchResult`\\n\\n.. versionadded:: 1.0\\n    The ``exact`` keyword argument.", "params": [{"name": "query"}, {"name": "uris", "default": null}, {"name": "exact", "default": false}]}, "core.mixer.get_mute": {"description": "Get mute state.\\n\\n:class:`True` if muted, :class:`False` unmuted, :class:`None` if\\nunknown.", "params": []}, "core.mixer.get_volume": {"description": "Get the volume.\\n\\nInteger in range [0..100] or :class:`None` if unknown.\\n\\nThe volume scale is linear.", "params": []}, "core.mixer.set_mute": {"description": "Set mute state.\\n\\n:class:`True` to mute, :class:`False` to unmute.\\n\\nReturns :class:`True` if call is successful, otherwise :class:`False`.", "params": [{"name": "mute"}]}, "core.mixer.set_volume": {"description": "Set the volume.\\n\\nThe volume is defined as an integer in range [0..100].\\n\\nThe volume scale is linear.\\n\\nReturns :class:`True` if call is successful, otherwise :class:`False`.", "params": [{"name": "volume"}]}, "core.playback.get_current_tl_track": {"description": "Get the currently playing or selected track.\\n\\nReturns a :class:`mopidy.models.TlTrack` or :class:`None`.", "params": []}, "core.playback.get_current_tlid": {"description": "Get the currently playing or selected TLID.\\n\\nExtracted from :meth:`get_current_tl_track` for convenience.\\n\\nReturns a :class:`int` or :class:`None`.\\n\\n.. versionadded:: 1.1", "params": []}, "core.playback.get_current_track": {"description": "Get the currently playing or selected track.\\n\\nExtracted from :meth:`get_current_tl_track` for convenience.\\n\\nReturns a :class:`mopidy.models.Track` or :class:`None`.", "params": []}, "core.playback.get_state": {"description": "Get The playback state.", "params": []}, "core.playback.get_stream_title": {"description": "Get the current stream title or :class:`None`.", "params": []}, "core.playback.get_time_position": {"description": "Get time position in milliseconds.", "params": []}, "core.playback.next": {"description": "Change to the next track.\\n\\nThe current playback state will be kept. If it was playing, playing\\nwill continue. If it was paused, it will still be paused, etc.", "params": []}, "core.playback.pause": {"description": "Pause playback.", "params": []}, "core.playback.play": {"description": "Play the given track, or if the given tl_track and tlid is\\n:class:`None`, play the currently active track.\\n\\nNote that the track **must** already be in the tracklist.\\n\\n.. deprecated:: 3.0\\n    The ``tl_track`` argument. Use ``tlid`` instead.\\n\\n:param tl_track: track to play\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:param tlid: TLID of the track to play\\n:type tlid: :class:`int` or :class:`None`", "params": [{"name": "tl_track", "default": null}, {"name": "tlid", "default": null}]}, "core.playback.previous": {"description": "Change to the previous track.\\n\\nThe current playback state will be kept. If it was playing, playing\\nwill continue. If it was paused, it will still be paused, etc.", "params": []}, "core.playback.resume": {"description": "If paused, resume playing the current track.", "params": []}, "core.playback.seek": {"description": "Seeks to time position given in milliseconds.\\n\\n:param time_position: time position in milliseconds\\n:type time_position: int\\n:rtype: :class:`True` if successful, else :class:`False`", "params": [{"name": "time_position"}]}, "core.playback.set_state": {"description": "Set the playback state.\\n\\nMust be :attr:`PLAYING`, :attr:`PAUSED`, or :attr:`STOPPED`.\\n\\nPossible states and transitions:\\n\\n.. digraph:: state_transitions\\n\\n    \\"STOPPED\\" -> \\"PLAYING\\" [ label=\\"play\\" ]\\n    \\"STOPPED\\" -> \\"PAUSED\\" [ label=\\"pause\\" ]\\n    \\"PLAYING\\" -> \\"STOPPED\\" [ label=\\"stop\\" ]\\n    \\"PLAYING\\" -> \\"PAUSED\\" [ label=\\"pause\\" ]\\n    \\"PLAYING\\" -> \\"PLAYING\\" [ label=\\"play\\" ]\\n    \\"PAUSED\\" -> \\"PLAYING\\" [ label=\\"resume\\" ]\\n    \\"PAUSED\\" -> \\"STOPPED\\" [ label=\\"stop\\" ]", "params": [{"name": "new_state"}]}, "core.playback.stop": {"description": "Stop playing.", "params": []}, "core.playlists.as_list": {"description": "Get a list of the currently available playlists.\\n\\nReturns a list of :class:`~mopidy.models.Ref` objects referring to the\\nplaylists. In other words, no information about the playlists\' content\\nis given.\\n\\n:rtype: list of :class:`mopidy.models.Ref`\\n\\n.. versionadded:: 1.0", "params": []}, "core.playlists.create": {"description": "Create a new playlist.\\n\\nIf ``uri_scheme`` matches an URI scheme handled by a current backend,\\nthat backend is asked to create the playlist. If ``uri_scheme`` is\\n:class:`None` or doesn\'t match a current backend, the first backend is\\nasked to create the playlist.\\n\\nAll new playlists must be created by calling this method, and **not**\\nby creating new instances of :class:`mopidy.models.Playlist`.\\n\\n:param name: name of the new playlist\\n:type name: string\\n:param uri_scheme: use the backend matching the URI scheme\\n:type uri_scheme: string\\n:rtype: :class:`mopidy.models.Playlist` or :class:`None`", "params": [{"name": "name"}, {"name": "uri_scheme", "default": null}]}, "core.playlists.delete": {"description": "Delete playlist identified by the URI.\\n\\nIf the URI doesn\'t match the URI schemes handled by the current\\nbackends, nothing happens.\\n\\nReturns :class:`True` if deleted, :class:`False` otherwise.\\n\\n:param uri: URI of the playlist to delete\\n:type uri: string\\n:rtype: :class:`bool`\\n\\n.. versionchanged:: 2.2\\n    Return type defined.", "params": [{"name": "uri"}]}, "core.playlists.get_items": {"description": "Get the items in a playlist specified by ``uri``.\\n\\nReturns a list of :class:`~mopidy.models.Ref` objects referring to the\\nplaylist\'s items.\\n\\nIf a playlist with the given ``uri`` doesn\'t exist, it returns\\n:class:`None`.\\n\\n:rtype: list of :class:`mopidy.models.Ref`, or :class:`None`\\n\\n.. versionadded:: 1.0", "params": [{"name": "uri"}]}, "core.playlists.get_uri_schemes": {"description": "Get the list of URI schemes that support playlists.\\n\\n:rtype: list of string\\n\\n.. versionadded:: 2.0", "params": []}, "core.playlists.lookup": {"description": "Lookup playlist with given URI in both the set of playlists and in any\\nother playlist sources. Returns :class:`None` if not found.\\n\\n:param uri: playlist URI\\n:type uri: string\\n:rtype: :class:`mopidy.models.Playlist` or :class:`None`", "params": [{"name": "uri"}]}, "core.playlists.refresh": {"description": "Refresh the playlists in :attr:`playlists`.\\n\\nIf ``uri_scheme`` is :class:`None`, all backends are asked to refresh.\\nIf ``uri_scheme`` is an URI scheme handled by a backend, only that\\nbackend is asked to refresh. If ``uri_scheme`` doesn\'t match any\\ncurrent backend, nothing happens.\\n\\n:param uri_scheme: limit to the backend matching the URI scheme\\n:type uri_scheme: string", "params": [{"name": "uri_scheme", "default": null}]}, "core.playlists.save": {"description": "Save the playlist.\\n\\nFor a playlist to be saveable, it must have the ``uri`` attribute set.\\nYou must not set the ``uri`` atribute yourself, but use playlist\\nobjects returned by :meth:`create` or retrieved from :attr:`playlists`,\\nwhich will always give you saveable playlists.\\n\\nThe method returns the saved playlist. The return playlist may differ\\nfrom the saved playlist. E.g. if the playlist name was changed, the\\nreturned playlist may have a different URI. The caller of this method\\nmust throw away the playlist sent to this method, and use the\\nreturned playlist instead.\\n\\nIf the playlist\'s URI isn\'t set or doesn\'t match the URI scheme of a\\ncurrent backend, nothing is done and :class:`None` is returned.\\n\\n:param playlist: the playlist\\n:type playlist: :class:`mopidy.models.Playlist`\\n:rtype: :class:`mopidy.models.Playlist` or :class:`None`", "params": [{"name": "playlist"}]}, "core.tracklist.add": {"description": "Add tracks to the tracklist.\\n\\nIf ``uris`` is given instead of ``tracks``, the URIs are\\nlooked up in the library and the resulting tracks are added to the\\ntracklist.\\n\\nIf ``at_position`` is given, the tracks are inserted at the given\\nposition in the tracklist. If ``at_position`` is not given, the tracks\\nare appended to the end of the tracklist.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.\\n\\n:param tracks: tracks to add\\n:type tracks: list of :class:`mopidy.models.Track` or :class:`None`\\n:param at_position: position in tracklist to add tracks\\n:type at_position: int or :class:`None`\\n:param uris: list of URIs for tracks to add\\n:type uris: list of string or :class:`None`\\n:rtype: list of :class:`mopidy.models.TlTrack`\\n\\n.. versionadded:: 1.0\\n    The ``uris`` argument.\\n\\n.. deprecated:: 1.0\\n    The ``tracks`` argument. Use ``uris``.", "params": [{"name": "tracks", "default": null}, {"name": "at_position", "default": null}, {"name": "uris", "default": null}]}, "core.tracklist.clear": {"description": "Clear the tracklist.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.", "params": []}, "core.tracklist.eot_track": {"description": "The track that will be played after the given track.\\n\\nNot necessarily the same track as :meth:`next_track`.\\n\\n.. deprecated:: 3.0\\n    Use :meth:`get_eot_tlid` instead.\\n\\n:param tl_track: the reference track\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:rtype: :class:`mopidy.models.TlTrack` or :class:`None`", "params": [{"name": "tl_track"}]}, "core.tracklist.filter": {"description": "Filter the tracklist by the given criteria.\\n\\nEach rule in the criteria consists of a model field and a list of\\nvalues to compare it against. If the model field matches any of the\\nvalues, it may be returned.\\n\\nOnly tracks that match all the given criteria are returned.\\n\\nExamples::\\n\\n    # Returns tracks with TLIDs 1, 2, 3, or 4 (tracklist ID)\\n    filter({\'tlid\': [1, 2, 3, 4]})\\n\\n    # Returns track with URIs \'xyz\' or \'abc\'\\n    filter({\'uri\': [\'xyz\', \'abc\']})\\n\\n    # Returns track with a matching TLIDs (1, 3 or 6) and a\\n    # matching URI (\'xyz\' or \'abc\')\\n    filter({\'tlid\': [1, 3, 6], \'uri\': [\'xyz\', \'abc\']})\\n\\n:param criteria: one or more rules to match by\\n:type criteria: dict, of (string, list) pairs\\n:rtype: list of :class:`mopidy.models.TlTrack`", "params": [{"name": "criteria"}]}, "core.tracklist.get_consume": {"description": "Get consume mode.\\n\\n:class:`True`\\n    Tracks are removed from the tracklist when they have been played.\\n:class:`False`\\n    Tracks are not removed from the tracklist.", "params": []}, "core.tracklist.get_eot_tlid": {"description": "The TLID of the track that will be played after the current track.\\n\\nNot necessarily the same TLID as returned by :meth:`get_next_tlid`.\\n\\n:rtype: :class:`int` or :class:`None`\\n\\n.. versionadded:: 1.1", "params": []}, "core.tracklist.get_length": {"description": "Get length of the tracklist.", "params": []}, "core.tracklist.get_next_tlid": {"description": "The tlid of the track that will be played if calling\\n:meth:`mopidy.core.PlaybackController.next()`.\\n\\nFor normal playback this is the next track in the tracklist. If repeat\\nis enabled the next track can loop around the tracklist. When random is\\nenabled this should be a random track, all tracks should be played once\\nbefore the tracklist repeats.\\n\\n:rtype: :class:`int` or :class:`None`\\n\\n.. versionadded:: 1.1", "params": []}, "core.tracklist.get_previous_tlid": {"description": "Returns the TLID of the track that will be played if calling\\n:meth:`mopidy.core.PlaybackController.previous()`.\\n\\nFor normal playback this is the previous track in the tracklist. If\\nrandom and/or consume is enabled it should return the current track\\ninstead.\\n\\n:rtype: :class:`int` or :class:`None`\\n\\n.. versionadded:: 1.1", "params": []}, "core.tracklist.get_random": {"description": "Get random mode.\\n\\n:class:`True`\\n    Tracks are selected at random from the tracklist.\\n:class:`False`\\n    Tracks are played in the order of the tracklist.", "params": []}, "core.tracklist.get_repeat": {"description": "Get repeat mode.\\n\\n:class:`True`\\n    The tracklist is played repeatedly.\\n:class:`False`\\n    The tracklist is played once.", "params": []}, "core.tracklist.get_single": {"description": "Get single mode.\\n\\n:class:`True`\\n    Playback is stopped after current song, unless in ``repeat`` mode.\\n:class:`False`\\n    Playback continues after current song.", "params": []}, "core.tracklist.get_tl_tracks": {"description": "Get tracklist as list of :class:`mopidy.models.TlTrack`.", "params": []}, "core.tracklist.get_tracks": {"description": "Get tracklist as list of :class:`mopidy.models.Track`.", "params": []}, "core.tracklist.get_version": {"description": "Get the tracklist version.\\n\\nInteger which is increased every time the tracklist is changed. Is not\\nreset before Mopidy is restarted.", "params": []}, "core.tracklist.index": {"description": "The position of the given track in the tracklist.\\n\\nIf neither *tl_track* or *tlid* is given we return the index of\\nthe currently playing track.\\n\\n:param tl_track: the track to find the index of\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:param tlid: TLID of the track to find the index of\\n:type tlid: :class:`int` or :class:`None`\\n:rtype: :class:`int` or :class:`None`\\n\\n.. versionadded:: 1.1\\n    The *tlid* parameter", "params": [{"name": "tl_track", "default": null}, {"name": "tlid", "default": null}]}, "core.tracklist.move": {"description": "Move the tracks in the slice ``[start:end]`` to ``to_position``.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.\\n\\n:param start: position of first track to move\\n:type start: int\\n:param end: position after last track to move\\n:type end: int\\n:param to_position: new position for the tracks\\n:type to_position: int", "params": [{"name": "start"}, {"name": "end"}, {"name": "to_position"}]}, "core.tracklist.next_track": {"description": "The track that will be played if calling\\n:meth:`mopidy.core.PlaybackController.next()`.\\n\\nFor normal playback this is the next track in the tracklist. If repeat\\nis enabled the next track can loop around the tracklist. When random is\\nenabled this should be a random track, all tracks should be played once\\nbefore the tracklist repeats.\\n\\n.. deprecated:: 3.0\\n    Use :meth:`get_next_tlid` instead.\\n\\n:param tl_track: the reference track\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:rtype: :class:`mopidy.models.TlTrack` or :class:`None`", "params": [{"name": "tl_track"}]}, "core.tracklist.previous_track": {"description": "Returns the track that will be played if calling\\n:meth:`mopidy.core.PlaybackController.previous()`.\\n\\nFor normal playback this is the previous track in the tracklist. If\\nrandom and/or consume is enabled it should return the current track\\ninstead.\\n\\n.. deprecated:: 3.0\\n    Use :meth:`get_previous_tlid` instead.\\n\\n:param tl_track: the reference track\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:rtype: :class:`mopidy.models.TlTrack` or :class:`None`", "params": [{"name": "tl_track"}]}, "core.tracklist.remove": {"description": "Remove the matching tracks from the tracklist.\\n\\nUses :meth:`filter()` to lookup the tracks to remove.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.\\n\\n:param criteria: one or more rules to match by\\n:type criteria: dict, of (string, list) pairs\\n:rtype: list of :class:`mopidy.models.TlTrack` that were removed", "params": [{"name": "criteria"}]}, "core.tracklist.set_consume": {"description": "Set consume mode.\\n\\n:class:`True`\\n    Tracks are removed from the tracklist when they have been played.\\n:class:`False`\\n    Tracks are not removed from the tracklist.", "params": [{"name": "value"}]}, "core.tracklist.set_random": {"description": "Set random mode.\\n\\n:class:`True`\\n    Tracks are selected at random from the tracklist.\\n:class:`False`\\n    Tracks are played in the order of the tracklist.", "params": [{"name": "value"}]}, "core.tracklist.set_repeat": {"description": "Set repeat mode.\\n\\nTo repeat a single track, set both ``repeat`` and ``single``.\\n\\n:class:`True`\\n    The tracklist is played repeatedly.\\n:class:`False`\\n    The tracklist is played once.", "params": [{"name": "value"}]}, "core.tracklist.set_single": {"description": "Set single mode.\\n\\n:class:`True`\\n    Playback is stopped after current song, unless in ``repeat`` mode.\\n:class:`False`\\n    Playback continues after current song.", "params": [{"name": "value"}]}, "core.tracklist.shuffle": {"description": "Shuffles the entire tracklist. If ``start`` and ``end`` is given only\\nshuffles the slice ``[start:end]``.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.\\n\\n:param start: position of first track to shuffle\\n:type start: int or :class:`None`\\n:param end: position after last track to shuffle\\n:type end: int or :class:`None`", "params": [{"name": "start", "default": null}, {"name": "end", "default": null}]}, "core.tracklist.slice": {"description": "Returns a slice of the tracklist, limited by the given start and end\\npositions.\\n\\n:param start: position of first track to include in slice\\n:type start: int\\n:param end: position after last track to include in slice\\n:type end: int\\n:rtype: :class:`mopidy.models.TlTrack`", "params": [{"name": "start"}, {"name": "end"}]}}}'
okt 24 13:33:53 Desktop-Ubuntu mopidy[7828]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.describe","jsonrpc":"2.0","id":14}'
okt 24 13:33:53 Desktop-Ubuntu mopidy[7828]: DEBUG    [HttpServer] mopidy.http.handlers New WebSocket connection from 127.0.0.1
okt 24 13:33:53 Desktop-Ubuntu mopidy[7828]: INFO     [HttpServer] tornado.access 101 GET /mopidy/ws/ (127.0.0.1) 22.66ms
okt 24 13:33:53 Desktop-Ubuntu mopidy[7828]: DEBUG    [HttpFrontend-10 (_actor_loop)] mopidy.zeroconf Zeroconf service 'Mopidy HTTP server on Desktop-Ubuntu' (_mopidy-http._tcp at []:6680): Published
okt 24 13:33:53 Desktop-Ubuntu mopidy[7828]: DEBUG    [HttpFrontend-10 (_actor_loop)] mopidy.zeroconf Zeroconf service 'Mopidy HTTP server on Desktop-Ubuntu' (_http._tcp at []:6680): Published
okt 24 13:33:53 Desktop-Ubuntu mopidy[7828]:     '/': <class 'tornado.web.RedirectHandler'>
okt 24 13:33:53 Desktop-Ubuntu mopidy[7828]:     '/mopidy/': <class 'mopidy.http.handlers.ClientListHandler'>
okt 24 13:33:53 Desktop-Ubuntu mopidy[7828]:     '/mopidy/(.+)': <class 'mopidy.http.handlers.StaticFileHandler'>
okt 24 13:33:53 Desktop-Ubuntu mopidy[7828]:     '/mopidy/rpc': <class 'mopidy.http.handlers.JsonRpcHandler'>
okt 24 13:33:53 Desktop-Ubuntu mopidy[7828]:     '/mopidy/ws/?': <class 'mopidy.http.handlers.WebSocketHandler'>
okt 24 13:33:53 Desktop-Ubuntu mopidy[7828]:     '/mopidy': <class 'mopidy.http.handlers.AddSlashHandler'>
okt 24 13:33:53 Desktop-Ubuntu mopidy[7828]:     '/iris/(.*)': <class 'mopidy_iris.handlers.ReactRouterHandler'>
okt 24 13:33:53 Desktop-Ubuntu mopidy[7828]:     '/iris/((.*)(?:css|js|json|map)$)': <class 'tornado.web.StaticFileHandler'>
okt 24 13:33:53 Desktop-Ubuntu mopidy[7828]:     '/iris/assets/(.*)': <class 'tornado.web.StaticFileHandler'>
okt 24 13:33:53 Desktop-Ubuntu mopidy[7828]:     '/iris/ws/?': <class 'mopidy_iris.handlers.WebsocketHandler'>
okt 24 13:33:53 Desktop-Ubuntu mopidy[7828]:     '/iris/http/([^/]*)': <class 'mopidy_iris.handlers.HttpHandler'>
okt 24 13:33:53 Desktop-Ubuntu mopidy[7828]:     '/iris': <class 'mopidy.http.handlers.AddSlashHandler'>
okt 24 13:33:53 Desktop-Ubuntu mopidy[7828]: DEBUG    [HttpServer] mopidy.http.actor HTTP routes from extensions:
okt 24 13:33:53 Desktop-Ubuntu mopidy[7828]: DEBUG    [HttpServer] mopidy.http.actor Default webclient is mopidy
okt 24 13:33:53 Desktop-Ubuntu mopidy[7828]: DEBUG    [HttpServer] mopidy.http.actor Loaded HTTP extension: mopidy
okt 24 13:33:53 Desktop-Ubuntu mopidy[7828]: DEBUG    [HttpServer] mopidy.http.actor Loaded HTTP extension: iris
okt 24 13:33:53 Desktop-Ubuntu mopidy[7828]: DEBUG    [HttpServer] asyncio Using selector: EpollSelector
okt 24 13:33:53 Desktop-Ubuntu mopidy[7828]: INFO     [MainThread] mopidy.commands Starting GLib mainloop
okt 24 13:33:53 Desktop-Ubuntu mopidy[7828]: TRACE    [MainThread] mopidy.internal.timer HttpFrontend took 1ms
okt 24 13:33:53 Desktop-Ubuntu mopidy[7828]: INFO     [HttpFrontend-10 (_actor_loop)] mopidy.http.actor HTTP server running at [::ffff:127.0.0.1]:6680
okt 24 13:33:53 Desktop-Ubuntu mopidy[7828]: DEBUG    [MainThread] pykka Starting HttpFrontend (urn:uuid:41ded34b-1c9b-413b-8d27-d4a57ebaf25d)
okt 24 13:33:53 Desktop-Ubuntu mopidy[7828]: DEBUG    [MainThread] pykka Registered HttpFrontend (urn:uuid:41ded34b-1c9b-413b-8d27-d4a57ebaf25d)
okt 24 13:33:53 Desktop-Ubuntu mopidy[7828]: DEBUG    [MainThread] mopidy.http.actor Starting HTTP server
okt 24 13:33:53 Desktop-Ubuntu mopidy[7828]: TRACE    [MainThread] mopidy.internal.timer IrisFrontend took 0ms
okt 24 13:33:53 Desktop-Ubuntu mopidy[7828]: INFO     [IrisFrontend-8 (_actor_loop)] mopidy_iris.core Starting Iris 3.64.1
okt 24 13:33:53 Desktop-Ubuntu mopidy[7828]: DEBUG    [MainThread] pykka Starting IrisFrontend (urn:uuid:74de270c-0621-43b9-a543-739304561bb2)
okt 24 13:33:53 Desktop-Ubuntu mopidy[7828]: DEBUG    [MainThread] pykka Registered IrisFrontend (urn:uuid:74de270c-0621-43b9-a543-739304561bb2)
okt 24 13:33:53 Desktop-Ubuntu mopidy[7828]: TRACE    [MainThread] mopidy.internal.timer YTMusicScrobbleFE took 0ms
okt 24 13:33:53 Desktop-Ubuntu mopidy[7828]: DEBUG    [MainThread] pykka Starting YTMusicScrobbleFE (urn:uuid:86f430cd-9b68-4e37-82fa-1fcd4d5bed96)
okt 24 13:33:53 Desktop-Ubuntu mopidy[7828]: DEBUG    [MainThread] pykka Registered YTMusicScrobbleFE (urn:uuid:86f430cd-9b68-4e37-82fa-1fcd4d5bed96)
okt 24 13:33:53 Desktop-Ubuntu mopidy[7828]: INFO     [MainThread] mopidy.commands Starting Mopidy frontends: YTMusicScrobbleFE, IrisFrontend, HttpFrontend
okt 24 13:33:53 Desktop-Ubuntu mopidy[7828]: DEBUG    [MainThread] pykka Starting Core (urn:uuid:a4a378dd-9d35-473b-92c8-886ddc513a9c)
okt 24 13:33:53 Desktop-Ubuntu mopidy[7828]: DEBUG    [MainThread] pykka Registered Core (urn:uuid:a4a378dd-9d35-473b-92c8-886ddc513a9c)
okt 24 13:33:53 Desktop-Ubuntu mopidy[7828]: INFO     [MainThread] mopidy.commands Starting Mopidy core
okt 24 13:33:53 Desktop-Ubuntu mopidy[7828]: TRACE    [MainThread] mopidy.internal.timer StreamBackend took 6ms
okt 24 13:33:53 Desktop-Ubuntu mopidy[7828]: DEBUG    [MainThread] pykka Starting StreamBackend (urn:uuid:8735f735-14c6-4e8c-8b99-a3dd9bfc91c8)
okt 24 13:33:53 Desktop-Ubuntu mopidy[7828]: DEBUG    [MainThread] pykka Registered StreamBackend (urn:uuid:8735f735-14c6-4e8c-8b99-a3dd9bfc91c8)
okt 24 13:33:53 Desktop-Ubuntu mopidy[7828]: INFO     [Audio-2 (_actor_loop)] mopidy.audio.actor Audio output set to "pulsesink server=127.0.0.1"
okt 24 13:33:53 Desktop-Ubuntu mopidy[7828]: TRACE    [MainThread] mopidy.internal.timer M3UBackend took 3ms
okt 24 13:33:53 Desktop-Ubuntu mopidy[7828]: DEBUG    [MainThread] pykka Starting M3UBackend (urn:uuid:53baa082-014a-4387-8818-029ce1531275)
okt 24 13:33:53 Desktop-Ubuntu mopidy[7828]: DEBUG    [MainThread] pykka Registered M3UBackend (urn:uuid:53baa082-014a-4387-8818-029ce1531275)
okt 24 13:33:53 Desktop-Ubuntu mopidy[7828]: TRACE    [MainThread] mopidy.internal.timer FileBackend took 2ms
okt 24 13:33:53 Desktop-Ubuntu mopidy[7828]: DEBUG    [MainThread] pykka Starting FileBackend (urn:uuid:bf13b2fd-34d0-4a0f-8b41-cd8412652ed4)
okt 24 13:33:53 Desktop-Ubuntu mopidy[7828]: DEBUG    [MainThread] pykka Registered FileBackend (urn:uuid:bf13b2fd-34d0-4a0f-8b41-cd8412652ed4)
okt 24 13:33:53 Desktop-Ubuntu mopidy[7828]: DEBUG    [MainThread] mopidy.file.library Failed expanding path ($XDG_MUSIC_DIR) from file/media_dirs config value.
okt 24 13:33:53 Desktop-Ubuntu mopidy[7828]: AttributeError: 'YTMusic' object has no attribute 'headers'
okt 24 13:33:53 Desktop-Ubuntu mopidy[7828]:     if 'x-goog-visitor-id' not in self.headers:
okt 24 13:33:53 Desktop-Ubuntu mopidy[7828]:   File "/usr/local/lib/python3.10/dist-packages/ytmusicapi/ytmusic.py", line 98, in __init__
okt 24 13:33:53 Desktop-Ubuntu mopidy[7828]:     self.api = YTMusic(self._ytmusicapi_auth_json)
okt 24 13:33:53 Desktop-Ubuntu mopidy[7828]:   File "/usr/local/lib/python3.10/dist-packages/mopidy_ytmusic/backend.py", line 65, in __init__
okt 24 13:33:53 Desktop-Ubuntu mopidy[7828]:     obj = cls(*args, **kwargs)
okt 24 13:33:53 Desktop-Ubuntu mopidy[7828]:   File "/usr/lib/python3/dist-packages/pykka/_actor.py", line 91, in start
okt 24 13:33:53 Desktop-Ubuntu mopidy[7828]:     backend = backend_class.start(
okt 24 13:33:53 Desktop-Ubuntu mopidy[7828]:   File "/usr/lib/python3/dist-packages/mopidy/commands.py", line 412, in start_backends
okt 24 13:33:53 Desktop-Ubuntu mopidy[7828]:     yield
okt 24 13:33:53 Desktop-Ubuntu mopidy[7828]:   File "/usr/lib/python3/dist-packages/mopidy/commands.py", line 248, in _actor_error_handling
okt 24 13:33:53 Desktop-Ubuntu mopidy[7828]: Traceback (most recent call last):
okt 24 13:33:53 Desktop-Ubuntu mopidy[7828]: ERROR    [MainThread] mopidy.commands Got un-handled exception from YTMusicBackend
okt 24 13:33:53 Desktop-Ubuntu mopidy[7828]: INFO     [MainThread] mopidy.commands Starting Mopidy backends: YTMusicBackend, FileBackend, M3UBackend, StreamBackend
okt 24 13:33:53 Desktop-Ubuntu mopidy[7828]: DEBUG    [MainThread] pykka Starting Audio (urn:uuid:d278babb-a263-4a42-a8de-3a19f1346efc)
okt 24 13:33:53 Desktop-Ubuntu mopidy[7828]: DEBUG    [MainThread] pykka Registered Audio (urn:uuid:d278babb-a263-4a42-a8de-3a19f1346efc)
okt 24 13:33:53 Desktop-Ubuntu mopidy[7828]: INFO     [MainThread] mopidy.commands Starting Mopidy audio
okt 24 13:33:53 Desktop-Ubuntu mopidy[7828]: DEBUG    [MainThread] mopidy.commands Mixer volume left unchanged
okt 24 13:33:53 Desktop-Ubuntu mopidy[7828]: DEBUG    [MainThread] pykka Starting SoftwareMixer (urn:uuid:09d53b82-abc2-4b4f-8846-81a8de97ca92)
okt 24 13:33:53 Desktop-Ubuntu mopidy[7828]: DEBUG    [MainThread] pykka Registered SoftwareMixer (urn:uuid:09d53b82-abc2-4b4f-8846-81a8de97ca92)
okt 24 13:33:53 Desktop-Ubuntu mopidy[7828]: INFO     [MainThread] mopidy.commands Starting Mopidy mixer: SoftwareMixer
okt 24 13:33:53 Desktop-Ubuntu mopidy[7828]: DEBUG    [MainThread] mopidy.commands Available Mopidy mixers: SoftwareMixer
okt 24 13:33:53 Desktop-Ubuntu mopidy[7828]: WARNING  [MainThread] mopidy.__main__ Please fix the extension configuration errors or disable the extensions to silence these messages.
okt 24 13:33:53 Desktop-Ubuntu mopidy[7828]: WARNING  [MainThread] mopidy.__main__   local/media_dir must be set.
okt 24 13:33:53 Desktop-Ubuntu mopidy[7828]: WARNING  [MainThread] mopidy.__main__ Found local configuration errors. The extension has been automatically disabled:
okt 24 13:33:53 Desktop-Ubuntu mopidy[7828]: INFO     [MainThread] mopidy.__main__ Disabled extensions: soundcloud, youtube, local
okt 24 13:33:53 Desktop-Ubuntu mopidy[7828]: INFO     [MainThread] mopidy.__main__ Enabled extensions: iris, m3u, stream, http, ytmusic, file, softwaremixer
okt 24 13:33:53 Desktop-Ubuntu mopidy[7828]: DEBUG    [MainThread] mopidy.ext Validating extension: stream
okt 24 13:33:53 Desktop-Ubuntu mopidy[7828]: DEBUG    [MainThread] mopidy.ext Validating extension: softwaremixer
okt 24 13:33:53 Desktop-Ubuntu mopidy[7828]: DEBUG    [MainThread] mopidy.ext Validating extension: m3u
okt 24 13:33:53 Desktop-Ubuntu mopidy[7828]: DEBUG    [MainThread] mopidy.ext Validating extension: http
okt 24 13:33:53 Desktop-Ubuntu mopidy[7828]: DEBUG    [MainThread] mopidy.ext Validating extension: file
okt 24 13:33:53 Desktop-Ubuntu mopidy[7828]: DEBUG    [MainThread] mopidy.ext Validating extension: iris
okt 24 13:33:53 Desktop-Ubuntu mopidy[7828]: DEBUG    [MainThread] mopidy.ext Validating extension: ytmusic
okt 24 13:33:53 Desktop-Ubuntu mopidy[7828]: DEBUG    [MainThread] mopidy.ext Validating extension: soundcloud
okt 24 13:33:53 Desktop-Ubuntu mopidy[7828]: DEBUG    [MainThread] mopidy.ext Validating extension: local
okt 24 13:33:53 Desktop-Ubuntu mopidy[7828]: DEBUG    [MainThread] mopidy.ext Validating extension: youtube
okt 24 13:33:53 Desktop-Ubuntu mopidy[7828]: WARNING  [MainThread] mopidy.config Ignoring config section 'jukebox' because no matching extension was found
okt 24 13:33:53 Desktop-Ubuntu mopidy[7828]: INFO     [MainThread] mopidy.config Loading config from command line options
okt 24 13:33:53 Desktop-Ubuntu mopidy[7828]: INFO     [MainThread] mopidy.config Loading config from file:///etc/mopidy/mopidy.conf
okt 24 13:33:53 Desktop-Ubuntu mopidy[7828]: INFO     [MainThread] mopidy.config Loading config from file:///usr/share/mopidy/conf.d/mopidy.conf
okt 24 13:33:53 Desktop-Ubuntu mopidy[7828]: INFO     [MainThread] mopidy.config Loading config from builtin defaults
okt 24 13:33:53 Desktop-Ubuntu mopidy[7828]: DEBUG    [MainThread] mopidy.config.keyring Fetching passwords from your keyring failed. Any passwords stored in the keyring will not be available. (org.freedesktop.DBus.Error.NotSupported: Unable to autolaunch a dbus-daemon without a $DISPLAY for X11)
okt 24 13:33:53 Desktop-Ubuntu mopidy[7828]: DEBUG    [MainThread] mopidy.ext Discovered extensions: youtube, local, soundcloud, ytmusic, iris, file, http, m3u, softwaremixer, stream
okt 24 13:33:53 Desktop-Ubuntu mopidy[7828]: DEBUG    [MainThread] mopidy.ext Loaded extension: Mopidy-Stream 3.3.0
okt 24 13:33:53 Desktop-Ubuntu mopidy[7828]: DEBUG    [MainThread] mopidy.ext Loading entry point: stream = mopidy.stream:Extension
okt 24 13:33:53 Desktop-Ubuntu mopidy[7828]: DEBUG    [MainThread] mopidy.ext Loaded extension: Mopidy-SoftwareMixer 3.3.0
okt 24 13:33:53 Desktop-Ubuntu mopidy[7828]: DEBUG    [MainThread] mopidy.ext Loading entry point: softwaremixer = mopidy.softwaremixer:Extension
okt 24 13:33:53 Desktop-Ubuntu mopidy[7828]: DEBUG    [MainThread] mopidy.ext Loaded extension: Mopidy-M3U 3.3.0
okt 24 13:33:53 Desktop-Ubuntu mopidy[7828]: DEBUG    [MainThread] mopidy.ext Loading entry point: m3u = mopidy.m3u:Extension
okt 24 13:33:53 Desktop-Ubuntu mopidy[7828]: DEBUG    [MainThread] mopidy.ext Loaded extension: Mopidy-HTTP 3.3.0
okt 24 13:33:53 Desktop-Ubuntu mopidy[7828]: DEBUG    [MainThread] mopidy.ext Loading entry point: http = mopidy.http:Extension
okt 24 13:33:53 Desktop-Ubuntu mopidy[7828]: DEBUG    [MainThread] mopidy.ext Loaded extension: Mopidy-File 3.3.0
okt 24 13:33:53 Desktop-Ubuntu mopidy[7828]: DEBUG    [MainThread] mopidy.ext Loading entry point: file = mopidy.file:Extension
okt 24 13:33:53 Desktop-Ubuntu mopidy[7828]: DEBUG    [MainThread] mopidy.ext Loaded extension: Mopidy-Iris 3.64.1
okt 24 13:33:53 Desktop-Ubuntu mopidy[7828]: DEBUG    [MainThread] mopidy.ext Loading entry point: iris = mopidy_iris:Extension
okt 24 13:33:53 Desktop-Ubuntu mopidy[7828]: DEBUG    [MainThread] mopidy.ext Loaded extension: Mopidy-YTMusic 0.3.7
okt 24 13:33:53 Desktop-Ubuntu mopidy[7828]: DEBUG    [MainThread] mopidy.ext Loading entry point: ytmusic = mopidy_ytmusic:Extension
okt 24 13:33:53 Desktop-Ubuntu mopidy[7828]: DEBUG    [MainThread] mopidy.ext Loaded extension: Mopidy-SoundCloud 3.0.1
okt 24 13:33:53 Desktop-Ubuntu mopidy[7828]: DEBUG    [MainThread] mopidy.ext Loading entry point: soundcloud = mopidy_soundcloud:Extension
okt 24 13:33:53 Desktop-Ubuntu mopidy[7828]: DEBUG    [MainThread] mopidy.ext Loaded extension: Mopidy-Local 3.2.1
okt 24 13:33:53 Desktop-Ubuntu mopidy[7828]: DEBUG    [MainThread] mopidy.ext Loading entry point: local = mopidy_local:Extension
okt 24 13:33:53 Desktop-Ubuntu mopidy[7828]: DEBUG    [MainThread] mopidy.ext Loaded extension: Mopidy-YouTube 3.6.1
okt 24 13:33:53 Desktop-Ubuntu mopidy[7828]: DEBUG    [MainThread] mopidy.ext Loading entry point: youtube = mopidy_youtube:Extension
okt 24 13:33:53 Desktop-Ubuntu mopidy[7828]: INFO     [MainThread] mopidy.__main__ Starting Mopidy 3.3.0
okt 24 13:33:52 Desktop-Ubuntu systemd[1]: Started Mopidy music server.
okt 24 13:33:52 Desktop-Ubuntu systemd[1]: Starting Mopidy music server...
okt 24 13:33:52 Desktop-Ubuntu systemd[1]: Stopped Mopidy music server.
okt 24 13:33:52 Desktop-Ubuntu systemd[1]: mopidy.service: Deactivated successfully.
okt 24 13:33:52 Desktop-Ubuntu mopidy[7535]: Failed loading provided credentials. Make sure to provide a string or a file path. Reason: Expecting value: line 1 column 1 (char 0)
okt 24 13:33:52 Desktop-Ubuntu mopidy[7535]: DEBUG    [MainThread] mopidy.internal.process All actors stopped.
okt 24 13:33:52 Desktop-Ubuntu mopidy[7535]: DEBUG    [SoftwareMixer-1 (_actor_loop)] pykka Stopped SoftwareMixer (urn:uuid:5985a947-e0f7-45a6-8901-c3daa9aaa298)
okt 24 13:33:52 Desktop-Ubuntu mopidy[7535]: DEBUG    [SoftwareMixer-1 (_actor_loop)] pykka Unregistered SoftwareMixer (urn:uuid:5985a947-e0f7-45a6-8901-c3daa9aaa298)
okt 24 13:33:52 Desktop-Ubuntu mopidy[7535]: DEBUG    [MainThread] mopidy.internal.process Stopping 1 instance(s) of SoftwareMixer
okt 24 13:33:52 Desktop-Ubuntu mopidy[7535]: INFO     [MainThread] mopidy.commands Stopping Mopidy mixer
okt 24 13:33:52 Desktop-Ubuntu mopidy[7535]: DEBUG    [Audio-2 (_actor_loop)] pykka Stopped Audio (urn:uuid:02039f67-9c96-48eb-ab3d-11d68915b4fa)
okt 24 13:33:52 Desktop-Ubuntu mopidy[7535]: DEBUG    [Audio-2 (_actor_loop)] pykka Unregistered Audio (urn:uuid:02039f67-9c96-48eb-ab3d-11d68915b4fa)
okt 24 13:33:52 Desktop-Ubuntu mopidy[7535]: DEBUG    [MainThread] mopidy.internal.process Stopping 1 instance(s) of Audio
okt 24 13:33:52 Desktop-Ubuntu mopidy[7535]: INFO     [MainThread] mopidy.commands Stopping Mopidy audio
okt 24 13:33:52 Desktop-Ubuntu mopidy[7535]: DEBUG    [StreamBackend-5 (_actor_loop)] pykka Stopped StreamBackend (urn:uuid:0870c93f-505c-48f3-acf4-268305899c95)
okt 24 13:33:52 Desktop-Ubuntu mopidy[7535]: DEBUG    [StreamBackend-5 (_actor_loop)] pykka Unregistered StreamBackend (urn:uuid:0870c93f-505c-48f3-acf4-268305899c95)
okt 24 13:33:52 Desktop-Ubuntu mopidy[7535]: DEBUG    [MainThread] mopidy.internal.process Stopping 1 instance(s) of StreamBackend
okt 24 13:33:52 Desktop-Ubuntu mopidy[7535]: DEBUG    [M3UBackend-4 (_actor_loop)] pykka Stopped M3UBackend (urn:uuid:68b476c3-0424-40b5-8e1d-a55dead71ed9)
okt 24 13:33:52 Desktop-Ubuntu mopidy[7535]: DEBUG    [M3UBackend-4 (_actor_loop)] pykka Unregistered M3UBackend (urn:uuid:68b476c3-0424-40b5-8e1d-a55dead71ed9)
okt 24 13:33:52 Desktop-Ubuntu mopidy[7535]: DEBUG    [MainThread] mopidy.internal.process Stopping 1 instance(s) of M3UBackend
okt 24 13:33:52 Desktop-Ubuntu mopidy[7535]: DEBUG    [FileBackend-3 (_actor_loop)] pykka Stopped FileBackend (urn:uuid:1a01b247-2d1d-4a84-8d94-33537abf8e25)
okt 24 13:33:52 Desktop-Ubuntu mopidy[7535]: DEBUG    [FileBackend-3 (_actor_loop)] pykka Unregistered FileBackend (urn:uuid:1a01b247-2d1d-4a84-8d94-33537abf8e25)
okt 24 13:33:52 Desktop-Ubuntu mopidy[7535]: DEBUG    [MainThread] mopidy.internal.process Stopping 1 instance(s) of FileBackend
okt 24 13:33:52 Desktop-Ubuntu mopidy[7535]: DEBUG    [MainThread] mopidy.internal.process Stopping 0 instance(s) of YTMusicBackend
okt 24 13:33:52 Desktop-Ubuntu mopidy[7535]: INFO     [MainThread] mopidy.commands Stopping Mopidy backends
okt 24 13:33:52 Desktop-Ubuntu mopidy[7535]: DEBUG    [Core-6 (_actor_loop)] pykka Stopped Core (urn:uuid:d86b65b9-097d-40ac-9f48-5d18ebc1bb34)
okt 24 13:33:52 Desktop-Ubuntu mopidy[7535]: DEBUG    [Core-6 (_actor_loop)] pykka Unregistered Core (urn:uuid:d86b65b9-097d-40ac-9f48-5d18ebc1bb34)
okt 24 13:33:52 Desktop-Ubuntu mopidy[7535]: DEBUG    [MainThread] mopidy.internal.process Stopping 1 instance(s) of Core
okt 24 13:33:52 Desktop-Ubuntu mopidy[7535]: DEBUG    [HttpServer] mopidy.http.actor Stopped HTTP server
okt 24 13:33:52 Desktop-Ubuntu mopidy[7535]: INFO     [MainThread] mopidy.commands Stopping Mopidy core
okt 24 13:33:52 Desktop-Ubuntu mopidy[7535]: DEBUG    [HttpFrontend-10 (_actor_loop)] mopidy.http.actor Stopping HTTP server
okt 24 13:33:52 Desktop-Ubuntu mopidy[7535]: DEBUG    [HttpFrontend-10 (_actor_loop)] mopidy.zeroconf Zeroconf service 'Mopidy HTTP server on Desktop-Ubuntu' (_mopidy-http._tcp at []:6680): Unpublished
okt 24 13:33:52 Desktop-Ubuntu mopidy[7535]: DEBUG    [HttpFrontend-10 (_actor_loop)] mopidy.zeroconf Zeroconf service 'Mopidy HTTP server on Desktop-Ubuntu' (_http._tcp at []:6680): Unpublished
okt 24 13:33:52 Desktop-Ubuntu mopidy[7535]: DEBUG    [HttpFrontend-10 (_actor_loop)] pykka Stopped HttpFrontend (urn:uuid:29d454d7-244b-4aa2-8b03-aaecf80f38c8)
okt 24 13:33:52 Desktop-Ubuntu mopidy[7535]: DEBUG    [HttpFrontend-10 (_actor_loop)] pykka Unregistered HttpFrontend (urn:uuid:29d454d7-244b-4aa2-8b03-aaecf80f38c8)
okt 24 13:33:52 Desktop-Ubuntu mopidy[7535]: DEBUG    [MainThread] mopidy.internal.process Stopping 1 instance(s) of HttpFrontend
okt 24 13:33:52 Desktop-Ubuntu mopidy[7535]: INFO     [IrisFrontend-8 (_actor_loop)] mopidy_iris.core Stopping Iris
okt 24 13:33:52 Desktop-Ubuntu mopidy[7535]: DEBUG    [IrisFrontend-8 (_actor_loop)] pykka Stopped IrisFrontend (urn:uuid:355145b1-2822-425e-8511-1ef9a78b8912)
okt 24 13:33:52 Desktop-Ubuntu mopidy[7535]: DEBUG    [IrisFrontend-8 (_actor_loop)] pykka Unregistered IrisFrontend (urn:uuid:355145b1-2822-425e-8511-1ef9a78b8912)
okt 24 13:33:52 Desktop-Ubuntu mopidy[7535]: DEBUG    [MainThread] mopidy.internal.process Stopping 1 instance(s) of IrisFrontend
okt 24 13:33:52 Desktop-Ubuntu mopidy[7535]: DEBUG    [YTMusicScrobbleFE-7 (_actor_loop)] pykka Stopped YTMusicScrobbleFE (urn:uuid:1c10e75e-5d57-46a4-b6fb-43b564a32808)
okt 24 13:33:52 Desktop-Ubuntu mopidy[7535]: DEBUG    [YTMusicScrobbleFE-7 (_actor_loop)] pykka Unregistered YTMusicScrobbleFE (urn:uuid:1c10e75e-5d57-46a4-b6fb-43b564a32808)
okt 24 13:33:52 Desktop-Ubuntu mopidy[7535]: DEBUG    [MainThread] mopidy.internal.process Stopping 1 instance(s) of YTMusicScrobbleFE
okt 24 13:33:52 Desktop-Ubuntu mopidy[7535]: INFO     [MainThread] mopidy.commands Stopping Mopidy frontends
okt 24 13:33:52 Desktop-Ubuntu mopidy[7535]: INFO     [MainThread] mopidy.commands GLib mainloop got SIGTERM. Exiting...
okt 24 13:33:52 Desktop-Ubuntu systemd[1]: Stopping Mopidy music server...
okt 24 13:33:21 Desktop-Ubuntu mopidy[7535]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 13, "result": []}'
okt 24 13:33:21 Desktop-Ubuntu mopidy[7535]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.add","params":{"uris":["ytmusic:track:7dVohOzvox8"],"at_position":0},"jsonrpc":"2.0","id":13}'
okt 24 13:33:19 Desktop-Ubuntu mopidy[7535]: INFO     [HttpServer] tornado.access 304 GET /iris/playlist/bTN1OkV4YW1wbGUlMjBQbGF5bGlzdC5tM3U4/null (127.0.0.1) 0.77ms
okt 24 13:32:48 Desktop-Ubuntu mopidy[7535]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 12, "result": []}'
okt 24 13:32:48 Desktop-Ubuntu mopidy[7535]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.library.browse","params":{"uri":null},"jsonrpc":"2.0","id":12}'
okt 24 13:32:47 Desktop-Ubuntu mopidy[7535]: DEBUG    [HttpServer] mopidy_iris.core {'id': 166661116716614, 'jsonrpc': '2.0', 'method': 'get_version', 'result': {'version': {'current': '3.64.1', 'latest': '3.64.1', 'is_root': False, 'upgrade_available': False}}, 'recipient': 'VUT8MBF2YU06'}
okt 24 13:32:47 Desktop-Ubuntu mopidy[7535]: DEBUG    [HttpServer] mopidy_iris.handlers Iris websocket message received: {"jsonrpc":"2.0","id":166661116716614,"method":"get_version"}
okt 24 13:32:46 Desktop-Ubuntu mopidy[7535]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 11, "result": null}'
okt 24 13:32:46 Desktop-Ubuntu mopidy[7535]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.playback.get_stream_title","params":{},"jsonrpc":"2.0","id":11}'
okt 24 13:32:46 Desktop-Ubuntu mopidy[7535]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 10, "result": ["file", "http", "https", "m3u", "rtsp"]}'
okt 24 13:32:46 Desktop-Ubuntu mopidy[7535]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.get_uri_schemes","params":{},"jsonrpc":"2.0","id":10}'
okt 24 13:32:46 Desktop-Ubuntu mopidy[7535]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 9, "result": 0}'
okt 24 13:32:46 Desktop-Ubuntu mopidy[7535]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.playback.get_time_position","params":{},"jsonrpc":"2.0","id":9}'
okt 24 13:32:46 Desktop-Ubuntu mopidy[7535]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 8, "result": []}'
okt 24 13:32:46 Desktop-Ubuntu mopidy[7535]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_tl_tracks","params":{},"jsonrpc":"2.0","id":8}'
okt 24 13:32:46 Desktop-Ubuntu mopidy[7535]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 7, "result": false}'
okt 24 13:32:46 Desktop-Ubuntu mopidy[7535]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_repeat","params":{},"jsonrpc":"2.0","id":7}'
okt 24 13:32:46 Desktop-Ubuntu mopidy[7535]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 6, "result": false}'
okt 24 13:32:46 Desktop-Ubuntu mopidy[7535]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_random","params":{},"jsonrpc":"2.0","id":6}'
okt 24 13:32:46 Desktop-Ubuntu mopidy[7535]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 5, "result": false}'
okt 24 13:32:46 Desktop-Ubuntu mopidy[7535]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_consume","params":{},"jsonrpc":"2.0","id":5}'
okt 24 13:32:46 Desktop-Ubuntu mopidy[7535]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 4, "result": false}'
okt 24 13:32:46 Desktop-Ubuntu mopidy[7535]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.mixer.get_mute","params":{},"jsonrpc":"2.0","id":4}'
okt 24 13:32:46 Desktop-Ubuntu mopidy[7535]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 3, "result": 100}'
okt 24 13:32:46 Desktop-Ubuntu mopidy[7535]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.mixer.get_volume","params":{},"jsonrpc":"2.0","id":3}'
okt 24 13:32:46 Desktop-Ubuntu mopidy[7535]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 2, "result": "stopped"}'
okt 24 13:32:46 Desktop-Ubuntu mopidy[7535]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.playback.get_state","params":{},"jsonrpc":"2.0","id":2}'
okt 24 13:32:46 Desktop-Ubuntu mopidy[7535]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 1, "result": null}'
okt 24 13:32:46 Desktop-Ubuntu mopidy[7535]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.playback.get_current_tl_track","params":{},"jsonrpc":"2.0","id":1}'
okt 24 13:32:46 Desktop-Ubuntu mopidy[7535]: DEBUG    [HttpServer] mopidy_iris.core {'id': 166661116666536, 'jsonrpc': '2.0', 'method': 'get_queue_metadata', 'result': {'queue_metadata': {}}, 'recipient': 'VUT8MBF2YU06'}
okt 24 13:32:46 Desktop-Ubuntu mopidy[7535]: DEBUG    [HttpServer] mopidy_iris.handlers Iris websocket message received: {"jsonrpc":"2.0","id":166661116666536,"method":"get_queue_metadata"}
okt 24 13:32:46 Desktop-Ubuntu mopidy[7535]: DEBUG    [HttpServer] mopidy_iris.core {'id': 166661116666442, 'jsonrpc': '2.0', 'method': 'get_pinned', 'result': {'pinned': []}, 'recipient': 'VUT8MBF2YU06'}
okt 24 13:32:46 Desktop-Ubuntu mopidy[7535]: DEBUG    [HttpServer] mopidy_iris.handlers Iris websocket message received: {"jsonrpc":"2.0","id":166661116666442,"method":"get_pinned"}
okt 24 13:32:46 Desktop-Ubuntu mopidy[7535]: DEBUG    [HttpServer] mopidy_iris.core {'id': 166661116666350, 'jsonrpc': '2.0', 'method': 'get_commands', 'result': {'commands': {}}, 'recipient': 'VUT8MBF2YU06'}
okt 24 13:32:46 Desktop-Ubuntu mopidy[7535]: DEBUG    [HttpServer] mopidy_iris.handlers Iris websocket message received: {"jsonrpc":"2.0","id":166661116666350,"method":"get_commands"}
okt 24 13:32:46 Desktop-Ubuntu mopidy[7535]: DEBUG    [HttpServer] mopidy_iris.core {'id': 166661116666227, 'jsonrpc': '2.0', 'method': 'get_radio', 'result': {'radio': {'enabled': 0, 'seed_artists': [], 'seed_genres': [], 'seed_tracks': [], 'results': []}}, 'recipient': 'VUT8MBF2YU06'}
okt 24 13:32:46 Desktop-Ubuntu mopidy[7535]: DEBUG    [HttpServer] mopidy_iris.handlers Iris websocket message received: {"jsonrpc":"2.0","id":166661116666227,"method":"get_radio"}
okt 24 13:32:46 Desktop-Ubuntu mopidy[7535]: DEBUG    [HttpServer] mopidy_iris.core {'id': 166661116666184, 'jsonrpc': '2.0', 'method': 'get_shared_config', 'result': {'shared_config': {}}, 'recipient': 'VUT8MBF2YU06'}
okt 24 13:32:46 Desktop-Ubuntu mopidy[7535]: DEBUG    [HttpServer] mopidy_iris.handlers Iris websocket message received: {"jsonrpc":"2.0","id":166661116666184,"method":"get_shared_config"}
okt 24 13:32:46 Desktop-Ubuntu mopidy[7535]: DEBUG    [HttpServer] mopidy_iris.core {'id': 166661116666033, 'jsonrpc': '2.0', 'method': 'get_config', 'result': {'config': {'is_root': False, 'spotify_username': False, 'country': 'NZ', 'locale': 'en_NZ', 'snapcast_enabled': True, 'snapcast_host': 'localhost', 'snapcast_port': '1780', 'snapcast_ssl': False, 'snapcast_stream': 'Default', 'spotify_authorization_url': 'https://jamesbarnsley.co.nz/iris/auth_spotify.php', 'lastfm_authorization_url': 'https://jamesbarnsley.co.nz/iris/auth_lastfm.php', 'genius_authorization_url': 'https://jamesbarnsley.co.nz/iris/auth_genius.php', 'shared_config': {}}}, 'recipient': 'VUT8MBF2YU06'}
okt 24 13:32:46 Desktop-Ubuntu mopidy[7535]: DEBUG    [HttpServer] mopidy_iris.handlers Iris websocket message received: {"jsonrpc":"2.0","id":166661116666033,"method":"get_config"}
okt 24 13:32:46 Desktop-Ubuntu mopidy[7535]: DEBUG    [HttpServer] mopidy_iris.core {'id': 166661116665823, 'jsonrpc': '2.0', 'method': 'update_connection', 'result': {'connection': {'connection_id': 'VUT8MBF2YU06', 'ip': '127.0.0.1', 'created': '2022-10-24 13:32:46', 'username': 166656148284185, 'client_id': 166656148284193}}, 'recipient': 'VUT8MBF2YU06'}
okt 24 13:32:46 Desktop-Ubuntu mopidy[7535]: DEBUG    [HttpServer] mopidy_iris.core {'method': 'connection_changed', 'params': {'connection': {'connection_id': 'VUT8MBF2YU06', 'ip': '127.0.0.1', 'created': '2022-10-24 13:32:46', 'username': 166656148284185, 'client_id': 166656148284193}}}
okt 24 13:32:46 Desktop-Ubuntu mopidy[7535]: DEBUG    [HttpServer] mopidy_iris.handlers Iris websocket message received: {"jsonrpc":"2.0","id":166661116665823,"method":"update_connection","params":{"username":166656148284185,"client_id":166656148284193}}
okt 24 13:32:46 Desktop-Ubuntu mopidy[7535]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 0, "result": {"core.get_uri_schemes": {"description": "Get list of URI schemes we can handle", "params": []}, "core.get_version": {"description": "Get version of the Mopidy core API", "params": []}, "core.history.get_history": {"description": "Get the track history.\\n\\nThe timestamps are milliseconds since epoch.\\n\\n:returns: the track history\\n:rtype: list of (timestamp, :class:`mopidy.models.Ref`) tuples", "params": []}, "core.history.get_length": {"description": "Get the number of tracks in the history.\\n\\n:returns: the history length\\n:rtype: int", "params": []}, "core.library.browse": {"description": "Browse directories and tracks at the given ``uri``.\\n\\n``uri`` is a string which represents some directory belonging to a\\nbackend. To get the intial root directories for backends pass\\n:class:`None` as the URI.\\n\\nReturns a list of :class:`mopidy.models.Ref` objects for the\\ndirectories and tracks at the given ``uri``.\\n\\nThe :class:`~mopidy.models.Ref` objects representing tracks keep the\\ntrack\'s original URI. A matching pair of objects can look like this::\\n\\n    Track(uri=\'dummy:/foo.mp3\', name=\'foo\', artists=..., album=...)\\n    Ref.track(uri=\'dummy:/foo.mp3\', name=\'foo\')\\n\\nThe :class:`~mopidy.models.Ref` objects representing directories have\\nbackend specific URIs. These are opaque values, so no one but the\\nbackend that created them should try and derive any meaning from them.\\nThe only valid exception to this is checking the scheme, as it is used\\nto route browse requests to the correct backend.\\n\\nFor example, the dummy library\'s ``/bar`` directory could be returned\\nlike this::\\n\\n    Ref.directory(uri=\'dummy:directory:/bar\', name=\'bar\')\\n\\n:param string uri: URI to browse\\n:rtype: list of :class:`mopidy.models.Ref`\\n\\n.. versionadded:: 0.18", "params": [{"name": "uri"}]}, "core.library.get_distinct": {"description": "List distinct values for a given field from the library.\\n\\nThis has mainly been added to support the list commands the MPD\\nprotocol supports in a more sane fashion. Other frontends are not\\nrecommended to use this method.\\n\\n:param string field: Any one of ``uri``, ``track_name``, ``album``,\\n    ``artist``, ``albumartist``, ``composer``, ``performer``,\\n    ``track_no``, ``genre``, ``date``, ``comment``, ``disc_no``,\\n    ``musicbrainz_albumid``, ``musicbrainz_artistid``, or\\n    ``musicbrainz_trackid``.\\n:param dict query: Query to use for limiting results, see\\n    :meth:`search` for details about the query format.\\n:rtype: set of values corresponding to the requested field type.\\n\\n.. versionadded:: 1.0", "params": [{"name": "field"}, {"name": "query", "default": null}]}, "core.library.get_images": {"description": "Lookup the images for the given URIs\\n\\nBackends can use this to return image URIs for any URI they know about\\nbe it tracks, albums, playlists. The lookup result is a dictionary\\nmapping the provided URIs to lists of images.\\n\\nUnknown URIs or URIs the corresponding backend couldn\'t find anything\\nfor will simply return an empty list for that URI.\\n\\n:param uris: list of URIs to find images for\\n:type uris: list of string\\n:rtype: {uri: tuple of :class:`mopidy.models.Image`}\\n\\n.. versionadded:: 1.0", "params": [{"name": "uris"}]}, "core.library.lookup": {"description": "Lookup the given URIs.\\n\\nIf the URI expands to multiple tracks, the returned list will contain\\nthem all.\\n\\n:param uris: track URIs\\n:type uris: list of string\\n:rtype: {uri: list of :class:`mopidy.models.Track`}", "params": [{"name": "uris"}]}, "core.library.refresh": {"description": "Refresh library. Limit to URI and below if an URI is given.\\n\\n:param uri: directory or track URI\\n:type uri: string", "params": [{"name": "uri", "default": null}]}, "core.library.search": {"description": "Search the library for tracks where ``field`` contains ``values``.\\n\\n``field`` can be one of ``uri``, ``track_name``, ``album``, ``artist``,\\n``albumartist``, ``composer``, ``performer``, ``track_no``, ``genre``,\\n``date``, ``comment``, ``disc_no``, ``musicbrainz_albumid``,\\n``musicbrainz_artistid``, ``musicbrainz_trackid`` or ``any``.\\n\\nIf ``uris`` is given, the search is limited to results from within the\\nURI roots. For example passing ``uris=[\'file:\']`` will limit the search\\nto the local backend.\\n\\nExamples::\\n\\n    # Returns results matching \'a\' in any backend\\n    search({\'any\': [\'a\']})\\n\\n    # Returns results matching artist \'xyz\' in any backend\\n    search({\'artist\': [\'xyz\']})\\n\\n    # Returns results matching \'a\' and \'b\' and artist \'xyz\' in any\\n    # backend\\n    search({\'any\': [\'a\', \'b\'], \'artist\': [\'xyz\']})\\n\\n    # Returns results matching \'a\' if within the given URI roots\\n    # \\"file:///media/music\\" and \\"spotify:\\"\\n    search({\'any\': [\'a\']}, uris=[\'file:///media/music\', \'spotify:\'])\\n\\n    # Returns results matching artist \'xyz\' and \'abc\' in any backend\\n    search({\'artist\': [\'xyz\', \'abc\']})\\n\\n:param query: one or more queries to search for\\n:type query: dict\\n:param uris: zero or more URI roots to limit the search to\\n:type uris: list of string or :class:`None`\\n:param exact: if the search should use exact matching\\n:type exact: :class:`bool`\\n:rtype: list of :class:`mopidy.models.SearchResult`\\n\\n.. versionadded:: 1.0\\n    The ``exact`` keyword argument.", "params": [{"name": "query"}, {"name": "uris", "default": null}, {"name": "exact", "default": false}]}, "core.mixer.get_mute": {"description": "Get mute state.\\n\\n:class:`True` if muted, :class:`False` unmuted, :class:`None` if\\nunknown.", "params": []}, "core.mixer.get_volume": {"description": "Get the volume.\\n\\nInteger in range [0..100] or :class:`None` if unknown.\\n\\nThe volume scale is linear.", "params": []}, "core.mixer.set_mute": {"description": "Set mute state.\\n\\n:class:`True` to mute, :class:`False` to unmute.\\n\\nReturns :class:`True` if call is successful, otherwise :class:`False`.", "params": [{"name": "mute"}]}, "core.mixer.set_volume": {"description": "Set the volume.\\n\\nThe volume is defined as an integer in range [0..100].\\n\\nThe volume scale is linear.\\n\\nReturns :class:`True` if call is successful, otherwise :class:`False`.", "params": [{"name": "volume"}]}, "core.playback.get_current_tl_track": {"description": "Get the currently playing or selected track.\\n\\nReturns a :class:`mopidy.models.TlTrack` or :class:`None`.", "params": []}, "core.playback.get_current_tlid": {"description": "Get the currently playing or selected TLID.\\n\\nExtracted from :meth:`get_current_tl_track` for convenience.\\n\\nReturns a :class:`int` or :class:`None`.\\n\\n.. versionadded:: 1.1", "params": []}, "core.playback.get_current_track": {"description": "Get the currently playing or selected track.\\n\\nExtracted from :meth:`get_current_tl_track` for convenience.\\n\\nReturns a :class:`mopidy.models.Track` or :class:`None`.", "params": []}, "core.playback.get_state": {"description": "Get The playback state.", "params": []}, "core.playback.get_stream_title": {"description": "Get the current stream title or :class:`None`.", "params": []}, "core.playback.get_time_position": {"description": "Get time position in milliseconds.", "params": []}, "core.playback.next": {"description": "Change to the next track.\\n\\nThe current playback state will be kept. If it was playing, playing\\nwill continue. If it was paused, it will still be paused, etc.", "params": []}, "core.playback.pause": {"description": "Pause playback.", "params": []}, "core.playback.play": {"description": "Play the given track, or if the given tl_track and tlid is\\n:class:`None`, play the currently active track.\\n\\nNote that the track **must** already be in the tracklist.\\n\\n.. deprecated:: 3.0\\n    The ``tl_track`` argument. Use ``tlid`` instead.\\n\\n:param tl_track: track to play\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:param tlid: TLID of the track to play\\n:type tlid: :class:`int` or :class:`None`", "params": [{"name": "tl_track", "default": null}, {"name": "tlid", "default": null}]}, "core.playback.previous": {"description": "Change to the previous track.\\n\\nThe current playback state will be kept. If it was playing, playing\\nwill continue. If it was paused, it will still be paused, etc.", "params": []}, "core.playback.resume": {"description": "If paused, resume playing the current track.", "params": []}, "core.playback.seek": {"description": "Seeks to time position given in milliseconds.\\n\\n:param time_position: time position in milliseconds\\n:type time_position: int\\n:rtype: :class:`True` if successful, else :class:`False`", "params": [{"name": "time_position"}]}, "core.playback.set_state": {"description": "Set the playback state.\\n\\nMust be :attr:`PLAYING`, :attr:`PAUSED`, or :attr:`STOPPED`.\\n\\nPossible states and transitions:\\n\\n.. digraph:: state_transitions\\n\\n    \\"STOPPED\\" -> \\"PLAYING\\" [ label=\\"play\\" ]\\n    \\"STOPPED\\" -> \\"PAUSED\\" [ label=\\"pause\\" ]\\n    \\"PLAYING\\" -> \\"STOPPED\\" [ label=\\"stop\\" ]\\n    \\"PLAYING\\" -> \\"PAUSED\\" [ label=\\"pause\\" ]\\n    \\"PLAYING\\" -> \\"PLAYING\\" [ label=\\"play\\" ]\\n    \\"PAUSED\\" -> \\"PLAYING\\" [ label=\\"resume\\" ]\\n    \\"PAUSED\\" -> \\"STOPPED\\" [ label=\\"stop\\" ]", "params": [{"name": "new_state"}]}, "core.playback.stop": {"description": "Stop playing.", "params": []}, "core.playlists.as_list": {"description": "Get a list of the currently available playlists.\\n\\nReturns a list of :class:`~mopidy.models.Ref` objects referring to the\\nplaylists. In other words, no information about the playlists\' content\\nis given.\\n\\n:rtype: list of :class:`mopidy.models.Ref`\\n\\n.. versionadded:: 1.0", "params": []}, "core.playlists.create": {"description": "Create a new playlist.\\n\\nIf ``uri_scheme`` matches an URI scheme handled by a current backend,\\nthat backend is asked to create the playlist. If ``uri_scheme`` is\\n:class:`None` or doesn\'t match a current backend, the first backend is\\nasked to create the playlist.\\n\\nAll new playlists must be created by calling this method, and **not**\\nby creating new instances of :class:`mopidy.models.Playlist`.\\n\\n:param name: name of the new playlist\\n:type name: string\\n:param uri_scheme: use the backend matching the URI scheme\\n:type uri_scheme: string\\n:rtype: :class:`mopidy.models.Playlist` or :class:`None`", "params": [{"name": "name"}, {"name": "uri_scheme", "default": null}]}, "core.playlists.delete": {"description": "Delete playlist identified by the URI.\\n\\nIf the URI doesn\'t match the URI schemes handled by the current\\nbackends, nothing happens.\\n\\nReturns :class:`True` if deleted, :class:`False` otherwise.\\n\\n:param uri: URI of the playlist to delete\\n:type uri: string\\n:rtype: :class:`bool`\\n\\n.. versionchanged:: 2.2\\n    Return type defined.", "params": [{"name": "uri"}]}, "core.playlists.get_items": {"description": "Get the items in a playlist specified by ``uri``.\\n\\nReturns a list of :class:`~mopidy.models.Ref` objects referring to the\\nplaylist\'s items.\\n\\nIf a playlist with the given ``uri`` doesn\'t exist, it returns\\n:class:`None`.\\n\\n:rtype: list of :class:`mopidy.models.Ref`, or :class:`None`\\n\\n.. versionadded:: 1.0", "params": [{"name": "uri"}]}, "core.playlists.get_uri_schemes": {"description": "Get the list of URI schemes that support playlists.\\n\\n:rtype: list of string\\n\\n.. versionadded:: 2.0", "params": []}, "core.playlists.lookup": {"description": "Lookup playlist with given URI in both the set of playlists and in any\\nother playlist sources. Returns :class:`None` if not found.\\n\\n:param uri: playlist URI\\n:type uri: string\\n:rtype: :class:`mopidy.models.Playlist` or :class:`None`", "params": [{"name": "uri"}]}, "core.playlists.refresh": {"description": "Refresh the playlists in :attr:`playlists`.\\n\\nIf ``uri_scheme`` is :class:`None`, all backends are asked to refresh.\\nIf ``uri_scheme`` is an URI scheme handled by a backend, only that\\nbackend is asked to refresh. If ``uri_scheme`` doesn\'t match any\\ncurrent backend, nothing happens.\\n\\n:param uri_scheme: limit to the backend matching the URI scheme\\n:type uri_scheme: string", "params": [{"name": "uri_scheme", "default": null}]}, "core.playlists.save": {"description": "Save the playlist.\\n\\nFor a playlist to be saveable, it must have the ``uri`` attribute set.\\nYou must not set the ``uri`` atribute yourself, but use playlist\\nobjects returned by :meth:`create` or retrieved from :attr:`playlists`,\\nwhich will always give you saveable playlists.\\n\\nThe method returns the saved playlist. The return playlist may differ\\nfrom the saved playlist. E.g. if the playlist name was changed, the\\nreturned playlist may have a different URI. The caller of this method\\nmust throw away the playlist sent to this method, and use the\\nreturned playlist instead.\\n\\nIf the playlist\'s URI isn\'t set or doesn\'t match the URI scheme of a\\ncurrent backend, nothing is done and :class:`None` is returned.\\n\\n:param playlist: the playlist\\n:type playlist: :class:`mopidy.models.Playlist`\\n:rtype: :class:`mopidy.models.Playlist` or :class:`None`", "params": [{"name": "playlist"}]}, "core.tracklist.add": {"description": "Add tracks to the tracklist.\\n\\nIf ``uris`` is given instead of ``tracks``, the URIs are\\nlooked up in the library and the resulting tracks are added to the\\ntracklist.\\n\\nIf ``at_position`` is given, the tracks are inserted at the given\\nposition in the tracklist. If ``at_position`` is not given, the tracks\\nare appended to the end of the tracklist.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.\\n\\n:param tracks: tracks to add\\n:type tracks: list of :class:`mopidy.models.Track` or :class:`None`\\n:param at_position: position in tracklist to add tracks\\n:type at_position: int or :class:`None`\\n:param uris: list of URIs for tracks to add\\n:type uris: list of string or :class:`None`\\n:rtype: list of :class:`mopidy.models.TlTrack`\\n\\n.. versionadded:: 1.0\\n    The ``uris`` argument.\\n\\n.. deprecated:: 1.0\\n    The ``tracks`` argument. Use ``uris``.", "params": [{"name": "tracks", "default": null}, {"name": "at_position", "default": null}, {"name": "uris", "default": null}]}, "core.tracklist.clear": {"description": "Clear the tracklist.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.", "params": []}, "core.tracklist.eot_track": {"description": "The track that will be played after the given track.\\n\\nNot necessarily the same track as :meth:`next_track`.\\n\\n.. deprecated:: 3.0\\n    Use :meth:`get_eot_tlid` instead.\\n\\n:param tl_track: the reference track\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:rtype: :class:`mopidy.models.TlTrack` or :class:`None`", "params": [{"name": "tl_track"}]}, "core.tracklist.filter": {"description": "Filter the tracklist by the given criteria.\\n\\nEach rule in the criteria consists of a model field and a list of\\nvalues to compare it against. If the model field matches any of the\\nvalues, it may be returned.\\n\\nOnly tracks that match all the given criteria are returned.\\n\\nExamples::\\n\\n    # Returns tracks with TLIDs 1, 2, 3, or 4 (tracklist ID)\\n    filter({\'tlid\': [1, 2, 3, 4]})\\n\\n    # Returns track with URIs \'xyz\' or \'abc\'\\n    filter({\'uri\': [\'xyz\', \'abc\']})\\n\\n    # Returns track with a matching TLIDs (1, 3 or 6) and a\\n    # matching URI (\'xyz\' or \'abc\')\\n    filter({\'tlid\': [1, 3, 6], \'uri\': [\'xyz\', \'abc\']})\\n\\n:param criteria: one or more rules to match by\\n:type criteria: dict, of (string, list) pairs\\n:rtype: list of :class:`mopidy.models.TlTrack`", "params": [{"name": "criteria"}]}, "core.tracklist.get_consume": {"description": "Get consume mode.\\n\\n:class:`True`\\n    Tracks are removed from the tracklist when they have been played.\\n:class:`False`\\n    Tracks are not removed from the tracklist.", "params": []}, "core.tracklist.get_eot_tlid": {"description": "The TLID of the track that will be played after the current track.\\n\\nNot necessarily the same TLID as returned by :meth:`get_next_tlid`.\\n\\n:rtype: :class:`int` or :class:`None`\\n\\n.. versionadded:: 1.1", "params": []}, "core.tracklist.get_length": {"description": "Get length of the tracklist.", "params": []}, "core.tracklist.get_next_tlid": {"description": "The tlid of the track that will be played if calling\\n:meth:`mopidy.core.PlaybackController.next()`.\\n\\nFor normal playback this is the next track in the tracklist. If repeat\\nis enabled the next track can loop around the tracklist. When random is\\nenabled this should be a random track, all tracks should be played once\\nbefore the tracklist repeats.\\n\\n:rtype: :class:`int` or :class:`None`\\n\\n.. versionadded:: 1.1", "params": []}, "core.tracklist.get_previous_tlid": {"description": "Returns the TLID of the track that will be played if calling\\n:meth:`mopidy.core.PlaybackController.previous()`.\\n\\nFor normal playback this is the previous track in the tracklist. If\\nrandom and/or consume is enabled it should return the current track\\ninstead.\\n\\n:rtype: :class:`int` or :class:`None`\\n\\n.. versionadded:: 1.1", "params": []}, "core.tracklist.get_random": {"description": "Get random mode.\\n\\n:class:`True`\\n    Tracks are selected at random from the tracklist.\\n:class:`False`\\n    Tracks are played in the order of the tracklist.", "params": []}, "core.tracklist.get_repeat": {"description": "Get repeat mode.\\n\\n:class:`True`\\n    The tracklist is played repeatedly.\\n:class:`False`\\n    The tracklist is played once.", "params": []}, "core.tracklist.get_single": {"description": "Get single mode.\\n\\n:class:`True`\\n    Playback is stopped after current song, unless in ``repeat`` mode.\\n:class:`False`\\n    Playback continues after current song.", "params": []}, "core.tracklist.get_tl_tracks": {"description": "Get tracklist as list of :class:`mopidy.models.TlTrack`.", "params": []}, "core.tracklist.get_tracks": {"description": "Get tracklist as list of :class:`mopidy.models.Track`.", "params": []}, "core.tracklist.get_version": {"description": "Get the tracklist version.\\n\\nInteger which is increased every time the tracklist is changed. Is not\\nreset before Mopidy is restarted.", "params": []}, "core.tracklist.index": {"description": "The position of the given track in the tracklist.\\n\\nIf neither *tl_track* or *tlid* is given we return the index of\\nthe currently playing track.\\n\\n:param tl_track: the track to find the index of\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:param tlid: TLID of the track to find the index of\\n:type tlid: :class:`int` or :class:`None`\\n:rtype: :class:`int` or :class:`None`\\n\\n.. versionadded:: 1.1\\n    The *tlid* parameter", "params": [{"name": "tl_track", "default": null}, {"name": "tlid", "default": null}]}, "core.tracklist.move": {"description": "Move the tracks in the slice ``[start:end]`` to ``to_position``.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.\\n\\n:param start: position of first track to move\\n:type start: int\\n:param end: position after last track to move\\n:type end: int\\n:param to_position: new position for the tracks\\n:type to_position: int", "params": [{"name": "start"}, {"name": "end"}, {"name": "to_position"}]}, "core.tracklist.next_track": {"description": "The track that will be played if calling\\n:meth:`mopidy.core.PlaybackController.next()`.\\n\\nFor normal playback this is the next track in the tracklist. If repeat\\nis enabled the next track can loop around the tracklist. When random is\\nenabled this should be a random track, all tracks should be played once\\nbefore the tracklist repeats.\\n\\n.. deprecated:: 3.0\\n    Use :meth:`get_next_tlid` instead.\\n\\n:param tl_track: the reference track\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:rtype: :class:`mopidy.models.TlTrack` or :class:`None`", "params": [{"name": "tl_track"}]}, "core.tracklist.previous_track": {"description": "Returns the track that will be played if calling\\n:meth:`mopidy.core.PlaybackController.previous()`.\\n\\nFor normal playback this is the previous track in the tracklist. If\\nrandom and/or consume is enabled it should return the current track\\ninstead.\\n\\n.. deprecated:: 3.0\\n    Use :meth:`get_previous_tlid` instead.\\n\\n:param tl_track: the reference track\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:rtype: :class:`mopidy.models.TlTrack` or :class:`None`", "params": [{"name": "tl_track"}]}, "core.tracklist.remove": {"description": "Remove the matching tracks from the tracklist.\\n\\nUses :meth:`filter()` to lookup the tracks to remove.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.\\n\\n:param criteria: one or more rules to match by\\n:type criteria: dict, of (string, list) pairs\\n:rtype: list of :class:`mopidy.models.TlTrack` that were removed", "params": [{"name": "criteria"}]}, "core.tracklist.set_consume": {"description": "Set consume mode.\\n\\n:class:`True`\\n    Tracks are removed from the tracklist when they have been played.\\n:class:`False`\\n    Tracks are not removed from the tracklist.", "params": [{"name": "value"}]}, "core.tracklist.set_random": {"description": "Set random mode.\\n\\n:class:`True`\\n    Tracks are selected at random from the tracklist.\\n:class:`False`\\n    Tracks are played in the order of the tracklist.", "params": [{"name": "value"}]}, "core.tracklist.set_repeat": {"description": "Set repeat mode.\\n\\nTo repeat a single track, set both ``repeat`` and ``single``.\\n\\n:class:`True`\\n    The tracklist is played repeatedly.\\n:class:`False`\\n    The tracklist is played once.", "params": [{"name": "value"}]}, "core.tracklist.set_single": {"description": "Set single mode.\\n\\n:class:`True`\\n    Playback is stopped after current song, unless in ``repeat`` mode.\\n:class:`False`\\n    Playback continues after current song.", "params": [{"name": "value"}]}, "core.tracklist.shuffle": {"description": "Shuffles the entire tracklist. If ``start`` and ``end`` is given only\\nshuffles the slice ``[start:end]``.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.\\n\\n:param start: position of first track to shuffle\\n:type start: int or :class:`None`\\n:param end: position after last track to shuffle\\n:type end: int or :class:`None`", "params": [{"name": "start", "default": null}, {"name": "end", "default": null}]}, "core.tracklist.slice": {"description": "Returns a slice of the tracklist, limited by the given start and end\\npositions.\\n\\n:param start: position of first track to include in slice\\n:type start: int\\n:param end: position after last track to include in slice\\n:type end: int\\n:rtype: :class:`mopidy.models.TlTrack`", "params": [{"name": "start"}, {"name": "end"}]}}}'
okt 24 13:32:46 Desktop-Ubuntu mopidy[7535]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.describe","jsonrpc":"2.0","id":0}'
okt 24 13:32:46 Desktop-Ubuntu mopidy[7535]: DEBUG    [HttpServer] mopidy_iris.core {'method': 'connection_added', 'params': {'connection': {'connection_id': 'VUT8MBF2YU06', 'ip': '127.0.0.1', 'created': '2022-10-24 13:32:46'}}}
okt 24 13:32:46 Desktop-Ubuntu mopidy[7535]: DEBUG    [HttpServer] mopidy_iris.core <mopidy_iris.handlers.WebsocketHandler object at 0x7f4354c53790>
okt 24 13:32:46 Desktop-Ubuntu mopidy[7535]: DEBUG    [HttpServer] mopidy_iris.core Connection added
okt 24 13:32:46 Desktop-Ubuntu mopidy[7535]: INFO     [HttpServer] tornado.access 101 GET /iris/ws/ (127.0.0.1) 0.45ms
okt 24 13:32:46 Desktop-Ubuntu mopidy[7535]: DEBUG    [HttpServer] mopidy.http.handlers New WebSocket connection from 127.0.0.1
okt 24 13:32:46 Desktop-Ubuntu mopidy[7535]: INFO     [HttpServer] tornado.access 101 GET /mopidy/ws/ (127.0.0.1) 0.59ms
okt 24 13:32:46 Desktop-Ubuntu mopidy[7535]: INFO     [HttpServer] tornado.access 200 GET /iris/assets/favicon.png (127.0.0.1) 0.65ms
okt 24 13:32:45 Desktop-Ubuntu mopidy[7535]: INFO     [HttpServer] tornado.access 200 GET /iris/app.min.js?v=1666559547 (127.0.0.1) 2.95ms
okt 24 13:32:45 Desktop-Ubuntu mopidy[7535]: INFO     [HttpServer] tornado.access 200 GET /iris/app.min.css?v=1666559547 (127.0.0.1) 1.67ms
okt 24 13:32:45 Desktop-Ubuntu mopidy[7535]: INFO     [HttpServer] tornado.access 200 GET /iris/assets/app-icon.svg (127.0.0.1) 0.65ms
okt 24 13:32:45 Desktop-Ubuntu mopidy[7535]: DEBUG    [HttpServer] mopidy.http.handlers Closed WebSocket connection from 127.0.0.1
okt 24 13:32:45 Desktop-Ubuntu mopidy[7535]: DEBUG    [HttpServer] mopidy_iris.core {'method': 'connection_removed', 'params': {'connection': {'connection_id': 'TFYHMSP2MP2O', 'ip': '127.0.0.1', 'created': '2022-10-24 13:21:25', 'username': 166656148284185, 'client_id': 166656148284193}}}
okt 24 13:32:45 Desktop-Ubuntu mopidy[7535]: INFO     [HttpServer] tornado.access 200 GET /iris/library/browse (127.0.0.1) 0.61ms
okt 24 13:21:31 Desktop-Ubuntu mopidy[7535]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 15, "result": []}'
okt 24 13:21:31 Desktop-Ubuntu mopidy[7535]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.library.browse","params":{"uri":null},"jsonrpc":"2.0","id":15}'
okt 24 13:21:29 Desktop-Ubuntu mopidy[7535]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 14, "result": []}'
okt 24 13:21:29 Desktop-Ubuntu mopidy[7535]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.library.browse","params":{"uri":null},"jsonrpc":"2.0","id":14}'
okt 24 13:21:27 Desktop-Ubuntu mopidy[7535]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 13, "result": []}'
okt 24 13:21:27 Desktop-Ubuntu mopidy[7535]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.library.browse","params":{"uri":"file:///home/gerard/Music"},"jsonrpc":"2.0","id":13}'
okt 24 13:21:27 Desktop-Ubuntu mopidy[7535]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 12, "result": {"file:///home/gerard/Music": [{"__model__": "Track", "uri": "file:///home/gerard/Music", "name": "Music"}]}}'
okt 24 13:21:27 Desktop-Ubuntu mopidy[7535]: WARNING  [FileBackend-3 (_actor_loop)] mopidy.file.library Failed looking up file:///home/gerard/Music: gst-resource-error-quark: "/home/gerard/Music" is a directory. (5)
okt 24 13:21:27 Desktop-Ubuntu mopidy[7535]: TRACE    [FileBackend-3 (_actor_loop)] mopidy.audio.scan element filesrc0: GstMessageError, gerror=(GError)NULL, debug=(string)"../plugins/elements/gstf...
okt 24 13:21:27 Desktop-Ubuntu mopidy[7535]: DEBUG    [FileBackend-3 (_actor_loop)] mopidy.file.library Looking up file URI: file:///home/gerard/Music
okt 24 13:21:27 Desktop-Ubuntu mopidy[7535]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.library.lookup","params":{"uris":["file:///home/gerard/Music"]},"jsonrpc":"2.0","id":12}'
okt 24 13:21:26 Desktop-Ubuntu mopidy[7535]: DEBUG    [HttpServer] mopidy_iris.core {'id': 166661048620352, 'jsonrpc': '2.0', 'method': 'get_version', 'result': {'version': {'current': '3.64.1', 'latest': '3.64.1', 'is_root': False, 'upgrade_available': False}}, 'recipient': 'TFYHMSP2MP2O'}
okt 24 13:21:26 Desktop-Ubuntu mopidy[7535]: DEBUG    [HttpServer] mopidy_iris.handlers Iris websocket message received: {"jsonrpc":"2.0","id":166661048620352,"method":"get_version"}
okt 24 13:21:25 Desktop-Ubuntu mopidy[7535]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 11, "result": null}'
okt 24 13:21:25 Desktop-Ubuntu mopidy[7535]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.playback.get_stream_title","params":{},"jsonrpc":"2.0","id":11}'
okt 24 13:21:25 Desktop-Ubuntu mopidy[7535]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 10, "result": ["file", "http", "https", "m3u", "rtsp"]}'
okt 24 13:21:25 Desktop-Ubuntu mopidy[7535]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.get_uri_schemes","params":{},"jsonrpc":"2.0","id":10}'
okt 24 13:21:25 Desktop-Ubuntu mopidy[7535]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 9, "result": 0}'
okt 24 13:21:25 Desktop-Ubuntu mopidy[7535]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.playback.get_time_position","params":{},"jsonrpc":"2.0","id":9}'
okt 24 13:21:25 Desktop-Ubuntu mopidy[7535]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 8, "result": []}'
okt 24 13:21:25 Desktop-Ubuntu mopidy[7535]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_tl_tracks","params":{},"jsonrpc":"2.0","id":8}'
okt 24 13:21:25 Desktop-Ubuntu mopidy[7535]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 7, "result": false}'
okt 24 13:21:25 Desktop-Ubuntu mopidy[7535]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_repeat","params":{},"jsonrpc":"2.0","id":7}'
okt 24 13:21:25 Desktop-Ubuntu mopidy[7535]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 6, "result": false}'
okt 24 13:21:25 Desktop-Ubuntu mopidy[7535]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_random","params":{},"jsonrpc":"2.0","id":6}'
okt 24 13:21:25 Desktop-Ubuntu mopidy[7535]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 5, "result": false}'
okt 24 13:21:25 Desktop-Ubuntu mopidy[7535]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_consume","params":{},"jsonrpc":"2.0","id":5}'
okt 24 13:21:25 Desktop-Ubuntu mopidy[7535]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 4, "result": false}'
okt 24 13:21:25 Desktop-Ubuntu mopidy[7535]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.mixer.get_mute","params":{},"jsonrpc":"2.0","id":4}'
okt 24 13:21:25 Desktop-Ubuntu mopidy[7535]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 3, "result": 100}'
okt 24 13:21:25 Desktop-Ubuntu mopidy[7535]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.mixer.get_volume","params":{},"jsonrpc":"2.0","id":3}'
okt 24 13:21:25 Desktop-Ubuntu mopidy[7535]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 2, "result": "stopped"}'
okt 24 13:21:25 Desktop-Ubuntu mopidy[7535]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.playback.get_state","params":{},"jsonrpc":"2.0","id":2}'
okt 24 13:21:25 Desktop-Ubuntu mopidy[7535]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 1, "result": null}'
okt 24 13:21:25 Desktop-Ubuntu mopidy[7535]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.playback.get_current_tl_track","params":{},"jsonrpc":"2.0","id":1}'
okt 24 13:21:25 Desktop-Ubuntu mopidy[7535]: DEBUG    [HttpServer] mopidy_iris.core {'id': 166661048570293, 'jsonrpc': '2.0', 'method': 'get_queue_metadata', 'result': {'queue_metadata': {}}, 'recipient': 'TFYHMSP2MP2O'}
okt 24 13:21:25 Desktop-Ubuntu mopidy[7535]: DEBUG    [HttpServer] mopidy_iris.handlers Iris websocket message received: {"jsonrpc":"2.0","id":166661048570293,"method":"get_queue_metadata"}
okt 24 13:21:25 Desktop-Ubuntu mopidy[7535]: DEBUG    [HttpServer] mopidy_iris.core {'id': 166661048570025, 'jsonrpc': '2.0', 'method': 'get_pinned', 'result': {'pinned': []}, 'recipient': 'TFYHMSP2MP2O'}
okt 24 13:21:25 Desktop-Ubuntu mopidy[7535]: DEBUG    [HttpServer] mopidy_iris.handlers Iris websocket message received: {"jsonrpc":"2.0","id":166661048570025,"method":"get_pinned"}
okt 24 13:21:25 Desktop-Ubuntu mopidy[7535]: DEBUG    [HttpServer] mopidy_iris.core {'id': 16666104856993, 'jsonrpc': '2.0', 'method': 'get_commands', 'result': {'commands': {}}, 'recipient': 'TFYHMSP2MP2O'}
okt 24 13:21:25 Desktop-Ubuntu mopidy[7535]: DEBUG    [HttpServer] mopidy_iris.handlers Iris websocket message received: {"jsonrpc":"2.0","id":16666104856993,"method":"get_commands"}
okt 24 13:21:25 Desktop-Ubuntu mopidy[7535]: DEBUG    [HttpServer] mopidy_iris.core {'id': 166661048569898, 'jsonrpc': '2.0', 'method': 'get_radio', 'result': {'radio': {'enabled': 0, 'seed_artists': [], 'seed_genres': [], 'seed_tracks': [], 'results': []}}, 'recipient': 'TFYHMSP2MP2O'}
okt 24 13:21:25 Desktop-Ubuntu mopidy[7535]: DEBUG    [HttpServer] mopidy_iris.handlers Iris websocket message received: {"jsonrpc":"2.0","id":166661048569898,"method":"get_radio"}
okt 24 13:21:25 Desktop-Ubuntu mopidy[7535]: DEBUG    [HttpServer] mopidy_iris.core {'id': 166661048569740, 'jsonrpc': '2.0', 'method': 'get_shared_config', 'result': {'shared_config': {}}, 'recipient': 'TFYHMSP2MP2O'}
okt 24 13:21:25 Desktop-Ubuntu mopidy[7535]: DEBUG    [HttpServer] mopidy_iris.handlers Iris websocket message received: {"jsonrpc":"2.0","id":166661048569740,"method":"get_shared_config"}
okt 24 13:21:25 Desktop-Ubuntu mopidy[7535]: DEBUG    [HttpServer] mopidy_iris.core {'id': 16666104856955, 'jsonrpc': '2.0', 'method': 'get_config', 'result': {'config': {'is_root': False, 'spotify_username': False, 'country': 'NZ', 'locale': 'en_NZ', 'snapcast_enabled': True, 'snapcast_host': 'localhost', 'snapcast_port': '1780', 'snapcast_ssl': False, 'snapcast_stream': 'Default', 'spotify_authorization_url': 'https://jamesbarnsley.co.nz/iris/auth_spotify.php', 'lastfm_authorization_url': 'https://jamesbarnsley.co.nz/iris/auth_lastfm.php', 'genius_authorization_url': 'https://jamesbarnsley.co.nz/iris/auth_genius.php', 'shared_config': {}}}, 'recipient': 'TFYHMSP2MP2O'}
okt 24 13:21:25 Desktop-Ubuntu mopidy[7535]: DEBUG    [HttpServer] mopidy_iris.handlers Iris websocket message received: {"jsonrpc":"2.0","id":16666104856955,"method":"get_config"}
okt 24 13:21:25 Desktop-Ubuntu mopidy[7535]: DEBUG    [HttpServer] mopidy_iris.core {'id': 16666104856946, 'jsonrpc': '2.0', 'method': 'update_connection', 'result': {'connection': {'connection_id': 'TFYHMSP2MP2O', 'ip': '127.0.0.1', 'created': '2022-10-24 13:21:25', 'username': 166656148284185, 'client_id': 166656148284193}}, 'recipient': 'TFYHMSP2MP2O'}
okt 24 13:21:25 Desktop-Ubuntu mopidy[7535]: DEBUG    [HttpServer] mopidy_iris.core {'method': 'connection_changed', 'params': {'connection': {'connection_id': 'TFYHMSP2MP2O', 'ip': '127.0.0.1', 'created': '2022-10-24 13:21:25', 'username': 166656148284185, 'client_id': 166656148284193}}}
okt 24 13:21:25 Desktop-Ubuntu mopidy[7535]: DEBUG    [HttpServer] mopidy_iris.handlers Iris websocket message received: {"jsonrpc":"2.0","id":16666104856946,"method":"update_connection","params":{"username":166656148284185,"client_id":166656148284193}}
okt 24 13:21:25 Desktop-Ubuntu mopidy[7535]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 0, "result": {"core.get_uri_schemes": {"description": "Get list of URI schemes we can handle", "params": []}, "core.get_version": {"description": "Get version of the Mopidy core API", "params": []}, "core.history.get_history": {"description": "Get the track history.\\n\\nThe timestamps are milliseconds since epoch.\\n\\n:returns: the track history\\n:rtype: list of (timestamp, :class:`mopidy.models.Ref`) tuples", "params": []}, "core.history.get_length": {"description": "Get the number of tracks in the history.\\n\\n:returns: the history length\\n:rtype: int", "params": []}, "core.library.browse": {"description": "Browse directories and tracks at the given ``uri``.\\n\\n``uri`` is a string which represents some directory belonging to a\\nbackend. To get the intial root directories for backends pass\\n:class:`None` as the URI.\\n\\nReturns a list of :class:`mopidy.models.Ref` objects for the\\ndirectories and tracks at the given ``uri``.\\n\\nThe :class:`~mopidy.models.Ref` objects representing tracks keep the\\ntrack\'s original URI. A matching pair of objects can look like this::\\n\\n    Track(uri=\'dummy:/foo.mp3\', name=\'foo\', artists=..., album=...)\\n    Ref.track(uri=\'dummy:/foo.mp3\', name=\'foo\')\\n\\nThe :class:`~mopidy.models.Ref` objects representing directories have\\nbackend specific URIs. These are opaque values, so no one but the\\nbackend that created them should try and derive any meaning from them.\\nThe only valid exception to this is checking the scheme, as it is used\\nto route browse requests to the correct backend.\\n\\nFor example, the dummy library\'s ``/bar`` directory could be returned\\nlike this::\\n\\n    Ref.directory(uri=\'dummy:directory:/bar\', name=\'bar\')\\n\\n:param string uri: URI to browse\\n:rtype: list of :class:`mopidy.models.Ref`\\n\\n.. versionadded:: 0.18", "params": [{"name": "uri"}]}, "core.library.get_distinct": {"description": "List distinct values for a given field from the library.\\n\\nThis has mainly been added to support the list commands the MPD\\nprotocol supports in a more sane fashion. Other frontends are not\\nrecommended to use this method.\\n\\n:param string field: Any one of ``uri``, ``track_name``, ``album``,\\n    ``artist``, ``albumartist``, ``composer``, ``performer``,\\n    ``track_no``, ``genre``, ``date``, ``comment``, ``disc_no``,\\n    ``musicbrainz_albumid``, ``musicbrainz_artistid``, or\\n    ``musicbrainz_trackid``.\\n:param dict query: Query to use for limiting results, see\\n    :meth:`search` for details about the query format.\\n:rtype: set of values corresponding to the requested field type.\\n\\n.. versionadded:: 1.0", "params": [{"name": "field"}, {"name": "query", "default": null}]}, "core.library.get_images": {"description": "Lookup the images for the given URIs\\n\\nBackends can use this to return image URIs for any URI they know about\\nbe it tracks, albums, playlists. The lookup result is a dictionary\\nmapping the provided URIs to lists of images.\\n\\nUnknown URIs or URIs the corresponding backend couldn\'t find anything\\nfor will simply return an empty list for that URI.\\n\\n:param uris: list of URIs to find images for\\n:type uris: list of string\\n:rtype: {uri: tuple of :class:`mopidy.models.Image`}\\n\\n.. versionadded:: 1.0", "params": [{"name": "uris"}]}, "core.library.lookup": {"description": "Lookup the given URIs.\\n\\nIf the URI expands to multiple tracks, the returned list will contain\\nthem all.\\n\\n:param uris: track URIs\\n:type uris: list of string\\n:rtype: {uri: list of :class:`mopidy.models.Track`}", "params": [{"name": "uris"}]}, "core.library.refresh": {"description": "Refresh library. Limit to URI and below if an URI is given.\\n\\n:param uri: directory or track URI\\n:type uri: string", "params": [{"name": "uri", "default": null}]}, "core.library.search": {"description": "Search the library for tracks where ``field`` contains ``values``.\\n\\n``field`` can be one of ``uri``, ``track_name``, ``album``, ``artist``,\\n``albumartist``, ``composer``, ``performer``, ``track_no``, ``genre``,\\n``date``, ``comment``, ``disc_no``, ``musicbrainz_albumid``,\\n``musicbrainz_artistid``, ``musicbrainz_trackid`` or ``any``.\\n\\nIf ``uris`` is given, the search is limited to results from within the\\nURI roots. For example passing ``uris=[\'file:\']`` will limit the search\\nto the local backend.\\n\\nExamples::\\n\\n    # Returns results matching \'a\' in any backend\\n    search({\'any\': [\'a\']})\\n\\n    # Returns results matching artist \'xyz\' in any backend\\n    search({\'artist\': [\'xyz\']})\\n\\n    # Returns results matching \'a\' and \'b\' and artist \'xyz\' in any\\n    # backend\\n    search({\'any\': [\'a\', \'b\'], \'artist\': [\'xyz\']})\\n\\n    # Returns results matching \'a\' if within the given URI roots\\n    # \\"file:///media/music\\" and \\"spotify:\\"\\n    search({\'any\': [\'a\']}, uris=[\'file:///media/music\', \'spotify:\'])\\n\\n    # Returns results matching artist \'xyz\' and \'abc\' in any backend\\n    search({\'artist\': [\'xyz\', \'abc\']})\\n\\n:param query: one or more queries to search for\\n:type query: dict\\n:param uris: zero or more URI roots to limit the search to\\n:type uris: list of string or :class:`None`\\n:param exact: if the search should use exact matching\\n:type exact: :class:`bool`\\n:rtype: list of :class:`mopidy.models.SearchResult`\\n\\n.. versionadded:: 1.0\\n    The ``exact`` keyword argument.", "params": [{"name": "query"}, {"name": "uris", "default": null}, {"name": "exact", "default": false}]}, "core.mixer.get_mute": {"description": "Get mute state.\\n\\n:class:`True` if muted, :class:`False` unmuted, :class:`None` if\\nunknown.", "params": []}, "core.mixer.get_volume": {"description": "Get the volume.\\n\\nInteger in range [0..100] or :class:`None` if unknown.\\n\\nThe volume scale is linear.", "params": []}, "core.mixer.set_mute": {"description": "Set mute state.\\n\\n:class:`True` to mute, :class:`False` to unmute.\\n\\nReturns :class:`True` if call is successful, otherwise :class:`False`.", "params": [{"name": "mute"}]}, "core.mixer.set_volume": {"description": "Set the volume.\\n\\nThe volume is defined as an integer in range [0..100].\\n\\nThe volume scale is linear.\\n\\nReturns :class:`True` if call is successful, otherwise :class:`False`.", "params": [{"name": "volume"}]}, "core.playback.get_current_tl_track": {"description": "Get the currently playing or selected track.\\n\\nReturns a :class:`mopidy.models.TlTrack` or :class:`None`.", "params": []}, "core.playback.get_current_tlid": {"description": "Get the currently playing or selected TLID.\\n\\nExtracted from :meth:`get_current_tl_track` for convenience.\\n\\nReturns a :class:`int` or :class:`None`.\\n\\n.. versionadded:: 1.1", "params": []}, "core.playback.get_current_track": {"description": "Get the currently playing or selected track.\\n\\nExtracted from :meth:`get_current_tl_track` for convenience.\\n\\nReturns a :class:`mopidy.models.Track` or :class:`None`.", "params": []}, "core.playback.get_state": {"description": "Get The playback state.", "params": []}, "core.playback.get_stream_title": {"description": "Get the current stream title or :class:`None`.", "params": []}, "core.playback.get_time_position": {"description": "Get time position in milliseconds.", "params": []}, "core.playback.next": {"description": "Change to the next track.\\n\\nThe current playback state will be kept. If it was playing, playing\\nwill continue. If it was paused, it will still be paused, etc.", "params": []}, "core.playback.pause": {"description": "Pause playback.", "params": []}, "core.playback.play": {"description": "Play the given track, or if the given tl_track and tlid is\\n:class:`None`, play the currently active track.\\n\\nNote that the track **must** already be in the tracklist.\\n\\n.. deprecated:: 3.0\\n    The ``tl_track`` argument. Use ``tlid`` instead.\\n\\n:param tl_track: track to play\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:param tlid: TLID of the track to play\\n:type tlid: :class:`int` or :class:`None`", "params": [{"name": "tl_track", "default": null}, {"name": "tlid", "default": null}]}, "core.playback.previous": {"description": "Change to the previous track.\\n\\nThe current playback state will be kept. If it was playing, playing\\nwill continue. If it was paused, it will still be paused, etc.", "params": []}, "core.playback.resume": {"description": "If paused, resume playing the current track.", "params": []}, "core.playback.seek": {"description": "Seeks to time position given in milliseconds.\\n\\n:param time_position: time position in milliseconds\\n:type time_position: int\\n:rtype: :class:`True` if successful, else :class:`False`", "params": [{"name": "time_position"}]}, "core.playback.set_state": {"description": "Set the playback state.\\n\\nMust be :attr:`PLAYING`, :attr:`PAUSED`, or :attr:`STOPPED`.\\n\\nPossible states and transitions:\\n\\n.. digraph:: state_transitions\\n\\n    \\"STOPPED\\" -> \\"PLAYING\\" [ label=\\"play\\" ]\\n    \\"STOPPED\\" -> \\"PAUSED\\" [ label=\\"pause\\" ]\\n    \\"PLAYING\\" -> \\"STOPPED\\" [ label=\\"stop\\" ]\\n    \\"PLAYING\\" -> \\"PAUSED\\" [ label=\\"pause\\" ]\\n    \\"PLAYING\\" -> \\"PLAYING\\" [ label=\\"play\\" ]\\n    \\"PAUSED\\" -> \\"PLAYING\\" [ label=\\"resume\\" ]\\n    \\"PAUSED\\" -> \\"STOPPED\\" [ label=\\"stop\\" ]", "params": [{"name": "new_state"}]}, "core.playback.stop": {"description": "Stop playing.", "params": []}, "core.playlists.as_list": {"description": "Get a list of the currently available playlists.\\n\\nReturns a list of :class:`~mopidy.models.Ref` objects referring to the\\nplaylists. In other words, no information about the playlists\' content\\nis given.\\n\\n:rtype: list of :class:`mopidy.models.Ref`\\n\\n.. versionadded:: 1.0", "params": []}, "core.playlists.create": {"description": "Create a new playlist.\\n\\nIf ``uri_scheme`` matches an URI scheme handled by a current backend,\\nthat backend is asked to create the playlist. If ``uri_scheme`` is\\n:class:`None` or doesn\'t match a current backend, the first backend is\\nasked to create the playlist.\\n\\nAll new playlists must be created by calling this method, and **not**\\nby creating new instances of :class:`mopidy.models.Playlist`.\\n\\n:param name: name of the new playlist\\n:type name: string\\n:param uri_scheme: use the backend matching the URI scheme\\n:type uri_scheme: string\\n:rtype: :class:`mopidy.models.Playlist` or :class:`None`", "params": [{"name": "name"}, {"name": "uri_scheme", "default": null}]}, "core.playlists.delete": {"description": "Delete playlist identified by the URI.\\n\\nIf the URI doesn\'t match the URI schemes handled by the current\\nbackends, nothing happens.\\n\\nReturns :class:`True` if deleted, :class:`False` otherwise.\\n\\n:param uri: URI of the playlist to delete\\n:type uri: string\\n:rtype: :class:`bool`\\n\\n.. versionchanged:: 2.2\\n    Return type defined.", "params": [{"name": "uri"}]}, "core.playlists.get_items": {"description": "Get the items in a playlist specified by ``uri``.\\n\\nReturns a list of :class:`~mopidy.models.Ref` objects referring to the\\nplaylist\'s items.\\n\\nIf a playlist with the given ``uri`` doesn\'t exist, it returns\\n:class:`None`.\\n\\n:rtype: list of :class:`mopidy.models.Ref`, or :class:`None`\\n\\n.. versionadded:: 1.0", "params": [{"name": "uri"}]}, "core.playlists.get_uri_schemes": {"description": "Get the list of URI schemes that support playlists.\\n\\n:rtype: list of string\\n\\n.. versionadded:: 2.0", "params": []}, "core.playlists.lookup": {"description": "Lookup playlist with given URI in both the set of playlists and in any\\nother playlist sources. Returns :class:`None` if not found.\\n\\n:param uri: playlist URI\\n:type uri: string\\n:rtype: :class:`mopidy.models.Playlist` or :class:`None`", "params": [{"name": "uri"}]}, "core.playlists.refresh": {"description": "Refresh the playlists in :attr:`playlists`.\\n\\nIf ``uri_scheme`` is :class:`None`, all backends are asked to refresh.\\nIf ``uri_scheme`` is an URI scheme handled by a backend, only that\\nbackend is asked to refresh. If ``uri_scheme`` doesn\'t match any\\ncurrent backend, nothing happens.\\n\\n:param uri_scheme: limit to the backend matching the URI scheme\\n:type uri_scheme: string", "params": [{"name": "uri_scheme", "default": null}]}, "core.playlists.save": {"description": "Save the playlist.\\n\\nFor a playlist to be saveable, it must have the ``uri`` attribute set.\\nYou must not set the ``uri`` atribute yourself, but use playlist\\nobjects returned by :meth:`create` or retrieved from :attr:`playlists`,\\nwhich will always give you saveable playlists.\\n\\nThe method returns the saved playlist. The return playlist may differ\\nfrom the saved playlist. E.g. if the playlist name was changed, the\\nreturned playlist may have a different URI. The caller of this method\\nmust throw away the playlist sent to this method, and use the\\nreturned playlist instead.\\n\\nIf the playlist\'s URI isn\'t set or doesn\'t match the URI scheme of a\\ncurrent backend, nothing is done and :class:`None` is returned.\\n\\n:param playlist: the playlist\\n:type playlist: :class:`mopidy.models.Playlist`\\n:rtype: :class:`mopidy.models.Playlist` or :class:`None`", "params": [{"name": "playlist"}]}, "core.tracklist.add": {"description": "Add tracks to the tracklist.\\n\\nIf ``uris`` is given instead of ``tracks``, the URIs are\\nlooked up in the library and the resulting tracks are added to the\\ntracklist.\\n\\nIf ``at_position`` is given, the tracks are inserted at the given\\nposition in the tracklist. If ``at_position`` is not given, the tracks\\nare appended to the end of the tracklist.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.\\n\\n:param tracks: tracks to add\\n:type tracks: list of :class:`mopidy.models.Track` or :class:`None`\\n:param at_position: position in tracklist to add tracks\\n:type at_position: int or :class:`None`\\n:param uris: list of URIs for tracks to add\\n:type uris: list of string or :class:`None`\\n:rtype: list of :class:`mopidy.models.TlTrack`\\n\\n.. versionadded:: 1.0\\n    The ``uris`` argument.\\n\\n.. deprecated:: 1.0\\n    The ``tracks`` argument. Use ``uris``.", "params": [{"name": "tracks", "default": null}, {"name": "at_position", "default": null}, {"name": "uris", "default": null}]}, "core.tracklist.clear": {"description": "Clear the tracklist.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.", "params": []}, "core.tracklist.eot_track": {"description": "The track that will be played after the given track.\\n\\nNot necessarily the same track as :meth:`next_track`.\\n\\n.. deprecated:: 3.0\\n    Use :meth:`get_eot_tlid` instead.\\n\\n:param tl_track: the reference track\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:rtype: :class:`mopidy.models.TlTrack` or :class:`None`", "params": [{"name": "tl_track"}]}, "core.tracklist.filter": {"description": "Filter the tracklist by the given criteria.\\n\\nEach rule in the criteria consists of a model field and a list of\\nvalues to compare it against. If the model field matches any of the\\nvalues, it may be returned.\\n\\nOnly tracks that match all the given criteria are returned.\\n\\nExamples::\\n\\n    # Returns tracks with TLIDs 1, 2, 3, or 4 (tracklist ID)\\n    filter({\'tlid\': [1, 2, 3, 4]})\\n\\n    # Returns track with URIs \'xyz\' or \'abc\'\\n    filter({\'uri\': [\'xyz\', \'abc\']})\\n\\n    # Returns track with a matching TLIDs (1, 3 or 6) and a\\n    # matching URI (\'xyz\' or \'abc\')\\n    filter({\'tlid\': [1, 3, 6], \'uri\': [\'xyz\', \'abc\']})\\n\\n:param criteria: one or more rules to match by\\n:type criteria: dict, of (string, list) pairs\\n:rtype: list of :class:`mopidy.models.TlTrack`", "params": [{"name": "criteria"}]}, "core.tracklist.get_consume": {"description": "Get consume mode.\\n\\n:class:`True`\\n    Tracks are removed from the tracklist when they have been played.\\n:class:`False`\\n    Tracks are not removed from the tracklist.", "params": []}, "core.tracklist.get_eot_tlid": {"description": "The TLID of the track that will be played after the current track.\\n\\nNot necessarily the same TLID as returned by :meth:`get_next_tlid`.\\n\\n:rtype: :class:`int` or :class:`None`\\n\\n.. versionadded:: 1.1", "params": []}, "core.tracklist.get_length": {"description": "Get length of the tracklist.", "params": []}, "core.tracklist.get_next_tlid": {"description": "The tlid of the track that will be played if calling\\n:meth:`mopidy.core.PlaybackController.next()`.\\n\\nFor normal playback this is the next track in the tracklist. If repeat\\nis enabled the next track can loop around the tracklist. When random is\\nenabled this should be a random track, all tracks should be played once\\nbefore the tracklist repeats.\\n\\n:rtype: :class:`int` or :class:`None`\\n\\n.. versionadded:: 1.1", "params": []}, "core.tracklist.get_previous_tlid": {"description": "Returns the TLID of the track that will be played if calling\\n:meth:`mopidy.core.PlaybackController.previous()`.\\n\\nFor normal playback this is the previous track in the tracklist. If\\nrandom and/or consume is enabled it should return the current track\\ninstead.\\n\\n:rtype: :class:`int` or :class:`None`\\n\\n.. versionadded:: 1.1", "params": []}, "core.tracklist.get_random": {"description": "Get random mode.\\n\\n:class:`True`\\n    Tracks are selected at random from the tracklist.\\n:class:`False`\\n    Tracks are played in the order of the tracklist.", "params": []}, "core.tracklist.get_repeat": {"description": "Get repeat mode.\\n\\n:class:`True`\\n    The tracklist is played repeatedly.\\n:class:`False`\\n    The tracklist is played once.", "params": []}, "core.tracklist.get_single": {"description": "Get single mode.\\n\\n:class:`True`\\n    Playback is stopped after current song, unless in ``repeat`` mode.\\n:class:`False`\\n    Playback continues after current song.", "params": []}, "core.tracklist.get_tl_tracks": {"description": "Get tracklist as list of :class:`mopidy.models.TlTrack`.", "params": []}, "core.tracklist.get_tracks": {"description": "Get tracklist as list of :class:`mopidy.models.Track`.", "params": []}, "core.tracklist.get_version": {"description": "Get the tracklist version.\\n\\nInteger which is increased every time the tracklist is changed. Is not\\nreset before Mopidy is restarted.", "params": []}, "core.tracklist.index": {"description": "The position of the given track in the tracklist.\\n\\nIf neither *tl_track* or *tlid* is given we return the index of\\nthe currently playing track.\\n\\n:param tl_track: the track to find the index of\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:param tlid: TLID of the track to find the index of\\n:type tlid: :class:`int` or :class:`None`\\n:rtype: :class:`int` or :class:`None`\\n\\n.. versionadded:: 1.1\\n    The *tlid* parameter", "params": [{"name": "tl_track", "default": null}, {"name": "tlid", "default": null}]}, "core.tracklist.move": {"description": "Move the tracks in the slice ``[start:end]`` to ``to_position``.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.\\n\\n:param start: position of first track to move\\n:type start: int\\n:param end: position after last track to move\\n:type end: int\\n:param to_position: new position for the tracks\\n:type to_position: int", "params": [{"name": "start"}, {"name": "end"}, {"name": "to_position"}]}, "core.tracklist.next_track": {"description": "The track that will be played if calling\\n:meth:`mopidy.core.PlaybackController.next()`.\\n\\nFor normal playback this is the next track in the tracklist. If repeat\\nis enabled the next track can loop around the tracklist. When random is\\nenabled this should be a random track, all tracks should be played once\\nbefore the tracklist repeats.\\n\\n.. deprecated:: 3.0\\n    Use :meth:`get_next_tlid` instead.\\n\\n:param tl_track: the reference track\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:rtype: :class:`mopidy.models.TlTrack` or :class:`None`", "params": [{"name": "tl_track"}]}, "core.tracklist.previous_track": {"description": "Returns the track that will be played if calling\\n:meth:`mopidy.core.PlaybackController.previous()`.\\n\\nFor normal playback this is the previous track in the tracklist. If\\nrandom and/or consume is enabled it should return the current track\\ninstead.\\n\\n.. deprecated:: 3.0\\n    Use :meth:`get_previous_tlid` instead.\\n\\n:param tl_track: the reference track\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:rtype: :class:`mopidy.models.TlTrack` or :class:`None`", "params": [{"name": "tl_track"}]}, "core.tracklist.remove": {"description": "Remove the matching tracks from the tracklist.\\n\\nUses :meth:`filter()` to lookup the tracks to remove.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.\\n\\n:param criteria: one or more rules to match by\\n:type criteria: dict, of (string, list) pairs\\n:rtype: list of :class:`mopidy.models.TlTrack` that were removed", "params": [{"name": "criteria"}]}, "core.tracklist.set_consume": {"description": "Set consume mode.\\n\\n:class:`True`\\n    Tracks are removed from the tracklist when they have been played.\\n:class:`False`\\n    Tracks are not removed from the tracklist.", "params": [{"name": "value"}]}, "core.tracklist.set_random": {"description": "Set random mode.\\n\\n:class:`True`\\n    Tracks are selected at random from the tracklist.\\n:class:`False`\\n    Tracks are played in the order of the tracklist.", "params": [{"name": "value"}]}, "core.tracklist.set_repeat": {"description": "Set repeat mode.\\n\\nTo repeat a single track, set both ``repeat`` and ``single``.\\n\\n:class:`True`\\n    The tracklist is played repeatedly.\\n:class:`False`\\n    The tracklist is played once.", "params": [{"name": "value"}]}, "core.tracklist.set_single": {"description": "Set single mode.\\n\\n:class:`True`\\n    Playback is stopped after current song, unless in ``repeat`` mode.\\n:class:`False`\\n    Playback continues after current song.", "params": [{"name": "value"}]}, "core.tracklist.shuffle": {"description": "Shuffles the entire tracklist. If ``start`` and ``end`` is given only\\nshuffles the slice ``[start:end]``.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.\\n\\n:param start: position of first track to shuffle\\n:type start: int or :class:`None`\\n:param end: position after last track to shuffle\\n:type end: int or :class:`None`", "params": [{"name": "start", "default": null}, {"name": "end", "default": null}]}, "core.tracklist.slice": {"description": "Returns a slice of the tracklist, limited by the given start and end\\npositions.\\n\\n:param start: position of first track to include in slice\\n:type start: int\\n:param end: position after last track to include in slice\\n:type end: int\\n:rtype: :class:`mopidy.models.TlTrack`", "params": [{"name": "start"}, {"name": "end"}]}}}'
okt 24 13:21:25 Desktop-Ubuntu mopidy[7535]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.describe","jsonrpc":"2.0","id":0}'
okt 24 13:21:25 Desktop-Ubuntu mopidy[7535]: DEBUG    [HttpServer] mopidy_iris.core {'method': 'connection_added', 'params': {'connection': {'connection_id': 'TFYHMSP2MP2O', 'ip': '127.0.0.1', 'created': '2022-10-24 13:21:25'}}}
okt 24 13:21:25 Desktop-Ubuntu mopidy[7535]: DEBUG    [HttpServer] mopidy_iris.core <mopidy_iris.handlers.WebsocketHandler object at 0x7f4354c53a60>
okt 24 13:21:25 Desktop-Ubuntu mopidy[7535]: DEBUG    [HttpServer] mopidy_iris.core Connection added
okt 24 13:21:25 Desktop-Ubuntu mopidy[7535]: INFO     [HttpServer] tornado.access 101 GET /iris/ws/ (127.0.0.1) 0.50ms
okt 24 13:21:25 Desktop-Ubuntu mopidy[7535]: DEBUG    [HttpServer] mopidy.http.handlers New WebSocket connection from 127.0.0.1
okt 24 13:21:25 Desktop-Ubuntu mopidy[7535]: INFO     [HttpServer] tornado.access 101 GET /mopidy/ws/ (127.0.0.1) 0.51ms
okt 24 13:21:25 Desktop-Ubuntu mopidy[7535]: INFO     [HttpServer] tornado.access 200 GET /iris/assets/favicon.png (127.0.0.1) 0.75ms
okt 24 13:21:25 Desktop-Ubuntu mopidy[7535]: INFO     [HttpServer] tornado.access 200 GET /iris/library/browse/Music/null (127.0.0.1) 0.67ms
okt 24 13:21:24 Desktop-Ubuntu mopidy[7535]: INFO     [HttpServer] tornado.access 200 GET /iris/app.min.js?v=1666559547 (127.0.0.1) 14.39ms
okt 24 13:21:24 Desktop-Ubuntu mopidy[7535]: INFO     [HttpServer] tornado.access 200 GET /iris/app.min.css?v=1666559547 (127.0.0.1) 5.30ms
okt 24 13:21:24 Desktop-Ubuntu mopidy[7535]: INFO     [HttpServer] tornado.access 200 GET /iris/assets/app-icon.svg (127.0.0.1) 0.72ms
okt 24 13:21:24 Desktop-Ubuntu mopidy[7535]: DEBUG    [HttpServer] mopidy_iris.core {'method': 'connection_removed', 'params': {'connection': {'connection_id': 'ICJX4FKIBV21', 'ip': '127.0.0.1', 'created': '2022-10-24 13:21:13', 'username': 166656148284185, 'client_id': 166656148284193}}}
okt 24 13:21:24 Desktop-Ubuntu mopidy[7535]: DEBUG    [HttpServer] mopidy.http.handlers Closed WebSocket connection from 127.0.0.1
okt 24 13:21:24 Desktop-Ubuntu mopidy[7535]: INFO     [HttpServer] tornado.access 200 GET /iris/library/browse/Music/ZmlsZTovLy9ob21lL2dlcmFyZC9NdXNpYw== (127.0.0.1) 5.23ms
okt 24 13:21:13 Desktop-Ubuntu mopidy[7535]: DEBUG    [HttpServer] mopidy_iris.core {'id': 166661047384781, 'jsonrpc': '2.0', 'method': 'get_version', 'result': {'version': {'current': '3.64.1', 'latest': '3.64.1', 'is_root': False, 'upgrade_available': False}}, 'recipient': 'ICJX4FKIBV21'}
okt 24 13:21:13 Desktop-Ubuntu mopidy[7535]: DEBUG    [HttpServer] mopidy_iris.handlers Iris websocket message received: {"jsonrpc":"2.0","id":166661047384781,"method":"get_version"}
okt 24 13:21:13 Desktop-Ubuntu mopidy[7535]: DEBUG    [HttpServer] mopidy_iris.core {'id': 166661047334657, 'jsonrpc': '2.0', 'method': 'get_queue_metadata', 'result': {'queue_metadata': {}}, 'recipient': 'ICJX4FKIBV21'}
okt 24 13:21:13 Desktop-Ubuntu mopidy[7535]: DEBUG    [HttpServer] mopidy_iris.handlers Iris websocket message received: {"jsonrpc":"2.0","id":166661047334657,"method":"get_queue_metadata"}
okt 24 13:21:13 Desktop-Ubuntu mopidy[7535]: DEBUG    [HttpServer] mopidy_iris.core {'id': 166661047334417, 'jsonrpc': '2.0', 'method': 'get_pinned', 'result': {'pinned': []}, 'recipient': 'ICJX4FKIBV21'}
okt 24 13:21:13 Desktop-Ubuntu mopidy[7535]: DEBUG    [HttpServer] mopidy_iris.handlers Iris websocket message received: {"jsonrpc":"2.0","id":166661047334417,"method":"get_pinned"}
okt 24 13:21:13 Desktop-Ubuntu mopidy[7535]: DEBUG    [HttpServer] mopidy_iris.core {'id': 166661047334319, 'jsonrpc': '2.0', 'method': 'get_commands', 'result': {'commands': {}}, 'recipient': 'ICJX4FKIBV21'}
okt 24 13:21:13 Desktop-Ubuntu mopidy[7535]: DEBUG    [HttpServer] mopidy_iris.handlers Iris websocket message received: {"jsonrpc":"2.0","id":166661047334319,"method":"get_commands"}
okt 24 13:21:13 Desktop-Ubuntu mopidy[7535]: DEBUG    [HttpServer] mopidy_iris.core {'id': 166661047334292, 'jsonrpc': '2.0', 'method': 'get_radio', 'result': {'radio': {'enabled': 0, 'seed_artists': [], 'seed_genres': [], 'seed_tracks': [], 'results': []}}, 'recipient': 'ICJX4FKIBV21'}
okt 24 13:21:13 Desktop-Ubuntu mopidy[7535]: DEBUG    [HttpServer] mopidy_iris.handlers Iris websocket message received: {"jsonrpc":"2.0","id":166661047334292,"method":"get_radio"}
okt 24 13:21:13 Desktop-Ubuntu mopidy[7535]: DEBUG    [HttpServer] mopidy_iris.core {'id': 166661047334219, 'jsonrpc': '2.0', 'method': 'get_shared_config', 'result': {'shared_config': {}}, 'recipient': 'ICJX4FKIBV21'}
okt 24 13:21:13 Desktop-Ubuntu mopidy[7535]: DEBUG    [HttpServer] mopidy_iris.handlers Iris websocket message received: {"jsonrpc":"2.0","id":166661047334219,"method":"get_shared_config"}
okt 24 13:21:13 Desktop-Ubuntu mopidy[7535]: DEBUG    [HttpServer] mopidy_iris.core {'id': 166661047334133, 'jsonrpc': '2.0', 'method': 'get_config', 'result': {'config': {'is_root': False, 'spotify_username': False, 'country': 'NZ', 'locale': 'en_NZ', 'snapcast_enabled': True, 'snapcast_host': 'localhost', 'snapcast_port': '1780', 'snapcast_ssl': False, 'snapcast_stream': 'Default', 'spotify_authorization_url': 'https://jamesbarnsley.co.nz/iris/auth_spotify.php', 'lastfm_authorization_url': 'https://jamesbarnsley.co.nz/iris/auth_lastfm.php', 'genius_authorization_url': 'https://jamesbarnsley.co.nz/iris/auth_genius.php', 'shared_config': {}}}, 'recipient': 'ICJX4FKIBV21'}
okt 24 13:21:13 Desktop-Ubuntu mopidy[7535]: DEBUG    [HttpServer] mopidy_iris.handlers Iris websocket message received: {"jsonrpc":"2.0","id":166661047334133,"method":"get_config"}
okt 24 13:21:13 Desktop-Ubuntu mopidy[7535]: DEBUG    [HttpServer] mopidy_iris.core {'id': 16666104733395, 'jsonrpc': '2.0', 'method': 'update_connection', 'result': {'connection': {'connection_id': 'ICJX4FKIBV21', 'ip': '127.0.0.1', 'created': '2022-10-24 13:21:13', 'username': 166656148284185, 'client_id': 166656148284193}}, 'recipient': 'ICJX4FKIBV21'}
okt 24 13:21:13 Desktop-Ubuntu mopidy[7535]: DEBUG    [HttpServer] mopidy_iris.core {'method': 'connection_changed', 'params': {'connection': {'connection_id': 'ICJX4FKIBV21', 'ip': '127.0.0.1', 'created': '2022-10-24 13:21:13', 'username': 166656148284185, 'client_id': 166656148284193}}}
okt 24 13:21:13 Desktop-Ubuntu mopidy[7535]: DEBUG    [HttpServer] mopidy_iris.handlers Iris websocket message received: {"jsonrpc":"2.0","id":16666104733395,"method":"update_connection","params":{"username":166656148284185,"client_id":166656148284193}}
okt 24 13:21:13 Desktop-Ubuntu mopidy[7535]: DEBUG    [HttpServer] mopidy_iris.core {'method': 'connection_added', 'params': {'connection': {'connection_id': 'ICJX4FKIBV21', 'ip': '127.0.0.1', 'created': '2022-10-24 13:21:13'}}}
okt 24 13:21:13 Desktop-Ubuntu mopidy[7535]: DEBUG    [HttpServer] mopidy_iris.core <mopidy_iris.handlers.WebsocketHandler object at 0x7f4354be2b90>
okt 24 13:21:13 Desktop-Ubuntu mopidy[7535]: DEBUG    [HttpServer] mopidy_iris.core Connection added
okt 24 13:21:13 Desktop-Ubuntu mopidy[7535]: INFO     [HttpServer] tornado.access 101 GET /iris/ws/ (127.0.0.1) 0.51ms
okt 24 13:21:09 Desktop-Ubuntu mopidy[7535]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 49, "result": null}'
okt 24 13:21:09 Desktop-Ubuntu mopidy[7535]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.playback.get_stream_title","params":{},"jsonrpc":"2.0","id":49}'
okt 24 13:21:09 Desktop-Ubuntu mopidy[7535]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 48, "result": ["file", "http", "https", "m3u", "rtsp"]}'
okt 24 13:21:09 Desktop-Ubuntu mopidy[7535]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.get_uri_schemes","params":{},"jsonrpc":"2.0","id":48}'
okt 24 13:21:09 Desktop-Ubuntu mopidy[7535]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 47, "result": 0}'
okt 24 13:21:09 Desktop-Ubuntu mopidy[7535]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.playback.get_time_position","params":{},"jsonrpc":"2.0","id":47}'
okt 24 13:21:09 Desktop-Ubuntu mopidy[7535]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 46, "result": []}'
okt 24 13:21:09 Desktop-Ubuntu mopidy[7535]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_tl_tracks","params":{},"jsonrpc":"2.0","id":46}'
okt 24 13:21:09 Desktop-Ubuntu mopidy[7535]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 45, "result": false}'
okt 24 13:21:09 Desktop-Ubuntu mopidy[7535]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_repeat","params":{},"jsonrpc":"2.0","id":45}'
okt 24 13:21:09 Desktop-Ubuntu mopidy[7535]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 44, "result": false}'
okt 24 13:21:09 Desktop-Ubuntu mopidy[7535]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_random","params":{},"jsonrpc":"2.0","id":44}'
okt 24 13:21:09 Desktop-Ubuntu mopidy[7535]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 43, "result": false}'
okt 24 13:21:09 Desktop-Ubuntu mopidy[7535]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_consume","params":{},"jsonrpc":"2.0","id":43}'
okt 24 13:21:09 Desktop-Ubuntu mopidy[7535]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 42, "result": false}'
okt 24 13:21:09 Desktop-Ubuntu mopidy[7535]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.mixer.get_mute","params":{},"jsonrpc":"2.0","id":42}'
okt 24 13:21:09 Desktop-Ubuntu mopidy[7535]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 41, "result": 100}'
okt 24 13:21:09 Desktop-Ubuntu mopidy[7535]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.mixer.get_volume","params":{},"jsonrpc":"2.0","id":41}'
okt 24 13:21:09 Desktop-Ubuntu mopidy[7535]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 40, "result": "stopped"}'
okt 24 13:21:09 Desktop-Ubuntu mopidy[7535]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.playback.get_state","params":{},"jsonrpc":"2.0","id":40}'
okt 24 13:21:09 Desktop-Ubuntu mopidy[7535]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 39, "result": null}'
okt 24 13:21:09 Desktop-Ubuntu mopidy[7535]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.playback.get_current_tl_track","params":{},"jsonrpc":"2.0","id":39}'
okt 24 13:21:09 Desktop-Ubuntu mopidy[7535]: DEBUG    [HttpServer] mopidy.http.handlers Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 38, "result": {"core.get_uri_schemes": {"description": "Get list of URI schemes we can handle", "params": []}, "core.get_version": {"description": "Get version of the Mopidy core API", "params": []}, "core.history.get_history": {"description": "Get the track history.\\n\\nThe timestamps are milliseconds since epoch.\\n\\n:returns: the track history\\n:rtype: list of (timestamp, :class:`mopidy.models.Ref`) tuples", "params": []}, "core.history.get_length": {"description": "Get the number of tracks in the history.\\n\\n:returns: the history length\\n:rtype: int", "params": []}, "core.library.browse": {"description": "Browse directories and tracks at the given ``uri``.\\n\\n``uri`` is a string which represents some directory belonging to a\\nbackend. To get the intial root directories for backends pass\\n:class:`None` as the URI.\\n\\nReturns a list of :class:`mopidy.models.Ref` objects for the\\ndirectories and tracks at the given ``uri``.\\n\\nThe :class:`~mopidy.models.Ref` objects representing tracks keep the\\ntrack\'s original URI. A matching pair of objects can look like this::\\n\\n    Track(uri=\'dummy:/foo.mp3\', name=\'foo\', artists=..., album=...)\\n    Ref.track(uri=\'dummy:/foo.mp3\', name=\'foo\')\\n\\nThe :class:`~mopidy.models.Ref` objects representing directories have\\nbackend specific URIs. These are opaque values, so no one but the\\nbackend that created them should try and derive any meaning from them.\\nThe only valid exception to this is checking the scheme, as it is used\\nto route browse requests to the correct backend.\\n\\nFor example, the dummy library\'s ``/bar`` directory could be returned\\nlike this::\\n\\n    Ref.directory(uri=\'dummy:directory:/bar\', name=\'bar\')\\n\\n:param string uri: URI to browse\\n:rtype: list of :class:`mopidy.models.Ref`\\n\\n.. versionadded:: 0.18", "params": [{"name": "uri"}]}, "core.library.get_distinct": {"description": "List distinct values for a given field from the library.\\n\\nThis has mainly been added to support the list commands the MPD\\nprotocol supports in a more sane fashion. Other frontends are not\\nrecommended to use this method.\\n\\n:param string field: Any one of ``uri``, ``track_name``, ``album``,\\n    ``artist``, ``albumartist``, ``composer``, ``performer``,\\n    ``track_no``, ``genre``, ``date``, ``comment``, ``disc_no``,\\n    ``musicbrainz_albumid``, ``musicbrainz_artistid``, or\\n    ``musicbrainz_trackid``.\\n:param dict query: Query to use for limiting results, see\\n    :meth:`search` for details about the query format.\\n:rtype: set of values corresponding to the requested field type.\\n\\n.. versionadded:: 1.0", "params": [{"name": "field"}, {"name": "query", "default": null}]}, "core.library.get_images": {"description": "Lookup the images for the given URIs\\n\\nBackends can use this to return image URIs for any URI they know about\\nbe it tracks, albums, playlists. The lookup result is a dictionary\\nmapping the provided URIs to lists of images.\\n\\nUnknown URIs or URIs the corresponding backend couldn\'t find anything\\nfor will simply return an empty list for that URI.\\n\\n:param uris: list of URIs to find images for\\n:type uris: list of string\\n:rtype: {uri: tuple of :class:`mopidy.models.Image`}\\n\\n.. versionadded:: 1.0", "params": [{"name": "uris"}]}, "core.library.lookup": {"description": "Lookup the given URIs.\\n\\nIf the URI expands to multiple tracks, the returned list will contain\\nthem all.\\n\\n:param uris: track URIs\\n:type uris: list of string\\n:rtype: {uri: list of :class:`mopidy.models.Track`}", "params": [{"name": "uris"}]}, "core.library.refresh": {"description": "Refresh library. Limit to URI and below if an URI is given.\\n\\n:param uri: directory or track URI\\n:type uri: string", "params": [{"name": "uri", "default": null}]}, "core.library.search": {"description": "Search the library for tracks where ``field`` contains ``values``.\\n\\n``field`` can be one of ``uri``, ``track_name``, ``album``, ``artist``,\\n``albumartist``, ``composer``, ``performer``, ``track_no``, ``genre``,\\n``date``, ``comment``, ``disc_no``, ``musicbrainz_albumid``,\\n``musicbrainz_artistid``, ``musicbrainz_trackid`` or ``any``.\\n\\nIf ``uris`` is given, the search is limited to results from within the\\nURI roots. For example passing ``uris=[\'file:\']`` will limit the search\\nto the local backend.\\n\\nExamples::\\n\\n    # Returns results matching \'a\' in any backend\\n    search({\'any\': [\'a\']})\\n\\n    # Returns results matching artist \'xyz\' in any backend\\n    search({\'artist\': [\'xyz\']})\\n\\n    # Returns results matching \'a\' and \'b\' and artist \'xyz\' in any\\n    # backend\\n    search({\'any\': [\'a\', \'b\'], \'artist\': [\'xyz\']})\\n\\n    # Returns results matching \'a\' if within the given URI roots\\n    # \\"file:///media/music\\" and \\"spotify:\\"\\n    search({\'any\': [\'a\']}, uris=[\'file:///media/music\', \'spotify:\'])\\n\\n    # Returns results matching artist \'xyz\' and \'abc\' in any backend\\n    search({\'artist\': [\'xyz\', \'abc\']})\\n\\n:param query: one or more queries to search for\\n:type query: dict\\n:param uris: zero or more URI roots to limit the search to\\n:type uris: list of string or :class:`None`\\n:param exact: if the search should use exact matching\\n:type exact: :class:`bool`\\n:rtype: list of :class:`mopidy.models.SearchResult`\\n\\n.. versionadded:: 1.0\\n    The ``exact`` keyword argument.", "params": [{"name": "query"}, {"name": "uris", "default": null}, {"name": "exact", "default": false}]}, "core.mixer.get_mute": {"description": "Get mute state.\\n\\n:class:`True` if muted, :class:`False` unmuted, :class:`None` if\\nunknown.", "params": []}, "core.mixer.get_volume": {"description": "Get the volume.\\n\\nInteger in range [0..100] or :class:`None` if unknown.\\n\\nThe volume scale is linear.", "params": []}, "core.mixer.set_mute": {"description": "Set mute state.\\n\\n:class:`True` to mute, :class:`False` to unmute.\\n\\nReturns :class:`True` if call is successful, otherwise :class:`False`.", "params": [{"name": "mute"}]}, "core.mixer.set_volume": {"description": "Set the volume.\\n\\nThe volume is defined as an integer in range [0..100].\\n\\nThe volume scale is linear.\\n\\nReturns :class:`True` if call is successful, otherwise :class:`False`.", "params": [{"name": "volume"}]}, "core.playback.get_current_tl_track": {"description": "Get the currently playing or selected track.\\n\\nReturns a :class:`mopidy.models.TlTrack` or :class:`None`.", "params": []}, "core.playback.get_current_tlid": {"description": "Get the currently playing or selected TLID.\\n\\nExtracted from :meth:`get_current_tl_track` for convenience.\\n\\nReturns a :class:`int` or :class:`None`.\\n\\n.. versionadded:: 1.1", "params": []}, "core.playback.get_current_track": {"description": "Get the currently playing or selected track.\\n\\nExtracted from :meth:`get_current_tl_track` for convenience.\\n\\nReturns a :class:`mopidy.models.Track` or :class:`None`.", "params": []}, "core.playback.get_state": {"description": "Get The playback state.", "params": []}, "core.playback.get_stream_title": {"description": "Get the current stream title or :class:`None`.", "params": []}, "core.playback.get_time_position": {"description": "Get time position in milliseconds.", "params": []}, "core.playback.next": {"description": "Change to the next track.\\n\\nThe current playback state will be kept. If it was playing, playing\\nwill continue. If it was paused, it will still be paused, etc.", "params": []}, "core.playback.pause": {"description": "Pause playback.", "params": []}, "core.playback.play": {"description": "Play the given track, or if the given tl_track and tlid is\\n:class:`None`, play the currently active track.\\n\\nNote that the track **must** already be in the tracklist.\\n\\n.. deprecated:: 3.0\\n    The ``tl_track`` argument. Use ``tlid`` instead.\\n\\n:param tl_track: track to play\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:param tlid: TLID of the track to play\\n:type tlid: :class:`int` or :class:`None`", "params": [{"name": "tl_track", "default": null}, {"name": "tlid", "default": null}]}, "core.playback.previous": {"description": "Change to the previous track.\\n\\nThe current playback state will be kept. If it was playing, playing\\nwill continue. If it was paused, it will still be paused, etc.", "params": []}, "core.playback.resume": {"description": "If paused, resume playing the current track.", "params": []}, "core.playback.seek": {"description": "Seeks to time position given in milliseconds.\\n\\n:param time_position: time position in milliseconds\\n:type time_position: int\\n:rtype: :class:`True` if successful, else :class:`False`", "params": [{"name": "time_position"}]}, "core.playback.set_state": {"description": "Set the playback state.\\n\\nMust be :attr:`PLAYING`, :attr:`PAUSED`, or :attr:`STOPPED`.\\n\\nPossible states and transitions:\\n\\n.. digraph:: state_transitions\\n\\n    \\"STOPPED\\" -> \\"PLAYING\\" [ label=\\"play\\" ]\\n    \\"STOPPED\\" -> \\"PAUSED\\" [ label=\\"pause\\" ]\\n    \\"PLAYING\\" -> \\"STOPPED\\" [ label=\\"stop\\" ]\\n    \\"PLAYING\\" -> \\"PAUSED\\" [ label=\\"pause\\" ]\\n    \\"PLAYING\\" -> \\"PLAYING\\" [ label=\\"play\\" ]\\n    \\"PAUSED\\" -> \\"PLAYING\\" [ label=\\"resume\\" ]\\n    \\"PAUSED\\" -> \\"STOPPED\\" [ label=\\"stop\\" ]", "params": [{"name": "new_state"}]}, "core.playback.stop": {"description": "Stop playing.", "params": []}, "core.playlists.as_list": {"description": "Get a list of the currently available playlists.\\n\\nReturns a list of :class:`~mopidy.models.Ref` objects referring to the\\nplaylists. In other words, no information about the playlists\' content\\nis given.\\n\\n:rtype: list of :class:`mopidy.models.Ref`\\n\\n.. versionadded:: 1.0", "params": []}, "core.playlists.create": {"description": "Create a new playlist.\\n\\nIf ``uri_scheme`` matches an URI scheme handled by a current backend,\\nthat backend is asked to create the playlist. If ``uri_scheme`` is\\n:class:`None` or doesn\'t match a current backend, the first backend is\\nasked to create the playlist.\\n\\nAll new playlists must be created by calling this method, and **not**\\nby creating new instances of :class:`mopidy.models.Playlist`.\\n\\n:param name: name of the new playlist\\n:type name: string\\n:param uri_scheme: use the backend matching the URI scheme\\n:type uri_scheme: string\\n:rtype: :class:`mopidy.models.Playlist` or :class:`None`", "params": [{"name": "name"}, {"name": "uri_scheme", "default": null}]}, "core.playlists.delete": {"description": "Delete playlist identified by the URI.\\n\\nIf the URI doesn\'t match the URI schemes handled by the current\\nbackends, nothing happens.\\n\\nReturns :class:`True` if deleted, :class:`False` otherwise.\\n\\n:param uri: URI of the playlist to delete\\n:type uri: string\\n:rtype: :class:`bool`\\n\\n.. versionchanged:: 2.2\\n    Return type defined.", "params": [{"name": "uri"}]}, "core.playlists.get_items": {"description": "Get the items in a playlist specified by ``uri``.\\n\\nReturns a list of :class:`~mopidy.models.Ref` objects referring to the\\nplaylist\'s items.\\n\\nIf a playlist with the given ``uri`` doesn\'t exist, it returns\\n:class:`None`.\\n\\n:rtype: list of :class:`mopidy.models.Ref`, or :class:`None`\\n\\n.. versionadded:: 1.0", "params": [{"name": "uri"}]}, "core.playlists.get_uri_schemes": {"description": "Get the list of URI schemes that support playlists.\\n\\n:rtype: list of string\\n\\n.. versionadded:: 2.0", "params": []}, "core.playlists.lookup": {"description": "Lookup playlist with given URI in both the set of playlists and in any\\nother playlist sources. Returns :class:`None` if not found.\\n\\n:param uri: playlist URI\\n:type uri: string\\n:rtype: :class:`mopidy.models.Playlist` or :class:`None`", "params": [{"name": "uri"}]}, "core.playlists.refresh": {"description": "Refresh the playlists in :attr:`playlists`.\\n\\nIf ``uri_scheme`` is :class:`None`, all backends are asked to refresh.\\nIf ``uri_scheme`` is an URI scheme handled by a backend, only that\\nbackend is asked to refresh. If ``uri_scheme`` doesn\'t match any\\ncurrent backend, nothing happens.\\n\\n:param uri_scheme: limit to the backend matching the URI scheme\\n:type uri_scheme: string", "params": [{"name": "uri_scheme", "default": null}]}, "core.playlists.save": {"description": "Save the playlist.\\n\\nFor a playlist to be saveable, it must have the ``uri`` attribute set.\\nYou must not set the ``uri`` atribute yourself, but use playlist\\nobjects returned by :meth:`create` or retrieved from :attr:`playlists`,\\nwhich will always give you saveable playlists.\\n\\nThe method returns the saved playlist. The return playlist may differ\\nfrom the saved playlist. E.g. if the playlist name was changed, the\\nreturned playlist may have a different URI. The caller of this method\\nmust throw away the playlist sent to this method, and use the\\nreturned playlist instead.\\n\\nIf the playlist\'s URI isn\'t set or doesn\'t match the URI scheme of a\\ncurrent backend, nothing is done and :class:`None` is returned.\\n\\n:param playlist: the playlist\\n:type playlist: :class:`mopidy.models.Playlist`\\n:rtype: :class:`mopidy.models.Playlist` or :class:`None`", "params": [{"name": "playlist"}]}, "core.tracklist.add": {"description": "Add tracks to the tracklist.\\n\\nIf ``uris`` is given instead of ``tracks``, the URIs are\\nlooked up in the library and the resulting tracks are added to the\\ntracklist.\\n\\nIf ``at_position`` is given, the tracks are inserted at the given\\nposition in the tracklist. If ``at_position`` is not given, the tracks\\nare appended to the end of the tracklist.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.\\n\\n:param tracks: tracks to add\\n:type tracks: list of :class:`mopidy.models.Track` or :class:`None`\\n:param at_position: position in tracklist to add tracks\\n:type at_position: int or :class:`None`\\n:param uris: list of URIs for tracks to add\\n:type uris: list of string or :class:`None`\\n:rtype: list of :class:`mopidy.models.TlTrack`\\n\\n.. versionadded:: 1.0\\n    The ``uris`` argument.\\n\\n.. deprecated:: 1.0\\n    The ``tracks`` argument. Use ``uris``.", "params": [{"name": "tracks", "default": null}, {"name": "at_position", "default": null}, {"name": "uris", "default": null}]}, "core.tracklist.clear": {"description": "Clear the tracklist.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.", "params": []}, "core.tracklist.eot_track": {"description": "The track that will be played after the given track.\\n\\nNot necessarily the same track as :meth:`next_track`.\\n\\n.. deprecated:: 3.0\\n    Use :meth:`get_eot_tlid` instead.\\n\\n:param tl_track: the reference track\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:rtype: :class:`mopidy.models.TlTrack` or :class:`None`", "params": [{"name": "tl_track"}]}, "core.tracklist.filter": {"description": "Filter the tracklist by the given criteria.\\n\\nEach rule in the criteria consists of a model field and a list of\\nvalues to compare it against. If the model field matches any of the\\nvalues, it may be returned.\\n\\nOnly tracks that match all the given criteria are returned.\\n\\nExamples::\\n\\n    # Returns tracks with TLIDs 1, 2, 3, or 4 (tracklist ID)\\n    filter({\'tlid\': [1, 2, 3, 4]})\\n\\n    # Returns track with URIs \'xyz\' or \'abc\'\\n    filter({\'uri\': [\'xyz\', \'abc\']})\\n\\n    # Returns track with a matching TLIDs (1, 3 or 6) and a\\n    # matching URI (\'xyz\' or \'abc\')\\n    filter({\'tlid\': [1, 3, 6], \'uri\': [\'xyz\', \'abc\']})\\n\\n:param criteria: one or more rules to match by\\n:type criteria: dict, of (string, list) pairs\\n:rtype: list of :class:`mopidy.models.TlTrack`", "params": [{"name": "criteria"}]}, "core.tracklist.get_consume": {"description": "Get consume mode.\\n\\n:class:`True`\\n    Tracks are removed from the tracklist when they have been played.\\n:class:`False`\\n    Tracks are not removed from the tracklist.", "params": []}, "core.tracklist.get_eot_tlid": {"description": "The TLID of the track that will be played after the current track.\\n\\nNot necessarily the same TLID as returned by :meth:`get_next_tlid`.\\n\\n:rtype: :class:`int` or :class:`None`\\n\\n.. versionadded:: 1.1", "params": []}, "core.tracklist.get_length": {"description": "Get length of the tracklist.", "params": []}, "core.tracklist.get_next_tlid": {"description": "The tlid of the track that will be played if calling\\n:meth:`mopidy.core.PlaybackController.next()`.\\n\\nFor normal playback this is the next track in the tracklist. If repeat\\nis enabled the next track can loop around the tracklist. When random is\\nenabled this should be a random track, all tracks should be played once\\nbefore the tracklist repeats.\\n\\n:rtype: :class:`int` or :class:`None`\\n\\n.. versionadded:: 1.1", "params": []}, "core.tracklist.get_previous_tlid": {"description": "Returns the TLID of the track that will be played if calling\\n:meth:`mopidy.core.PlaybackController.previous()`.\\n\\nFor normal playback this is the previous track in the tracklist. If\\nrandom and/or consume is enabled it should return the current track\\ninstead.\\n\\n:rtype: :class:`int` or :class:`None`\\n\\n.. versionadded:: 1.1", "params": []}, "core.tracklist.get_random": {"description": "Get random mode.\\n\\n:class:`True`\\n    Tracks are selected at random from the tracklist.\\n:class:`False`\\n    Tracks are played in the order of the tracklist.", "params": []}, "core.tracklist.get_repeat": {"description": "Get repeat mode.\\n\\n:class:`True`\\n    The tracklist is played repeatedly.\\n:class:`False`\\n    The tracklist is played once.", "params": []}, "core.tracklist.get_single": {"description": "Get single mode.\\n\\n:class:`True`\\n    Playback is stopped after current song, unless in ``repeat`` mode.\\n:class:`False`\\n    Playback continues after current song.", "params": []}, "core.tracklist.get_tl_tracks": {"description": "Get tracklist as list of :class:`mopidy.models.TlTrack`.", "params": []}, "core.tracklist.get_tracks": {"description": "Get tracklist as list of :class:`mopidy.models.Track`.", "params": []}, "core.tracklist.get_version": {"description": "Get the tracklist version.\\n\\nInteger which is increased every time the tracklist is changed. Is not\\nreset before Mopidy is restarted.", "params": []}, "core.tracklist.index": {"description": "The position of the given track in the tracklist.\\n\\nIf neither *tl_track* or *tlid* is given we return the index of\\nthe currently playing track.\\n\\n:param tl_track: the track to find the index of\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:param tlid: TLID of the track to find the index of\\n:type tlid: :class:`int` or :class:`None`\\n:rtype: :class:`int` or :class:`None`\\n\\n.. versionadded:: 1.1\\n    The *tlid* parameter", "params": [{"name": "tl_track", "default": null}, {"name": "tlid", "default": null}]}, "core.tracklist.move": {"description": "Move the tracks in the slice ``[start:end]`` to ``to_position``.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.\\n\\n:param start: position of first track to move\\n:type start: int\\n:param end: position after last track to move\\n:type end: int\\n:param to_position: new position for the tracks\\n:type to_position: int", "params": [{"name": "start"}, {"name": "end"}, {"name": "to_position"}]}, "core.tracklist.next_track": {"description": "The track that will be played if calling\\n:meth:`mopidy.core.PlaybackController.next()`.\\n\\nFor normal playback this is the next track in the tracklist. If repeat\\nis enabled the next track can loop around the tracklist. When random is\\nenabled this should be a random track, all tracks should be played once\\nbefore the tracklist repeats.\\n\\n.. deprecated:: 3.0\\n    Use :meth:`get_next_tlid` instead.\\n\\n:param tl_track: the reference track\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:rtype: :class:`mopidy.models.TlTrack` or :class:`None`", "params": [{"name": "tl_track"}]}, "core.tracklist.previous_track": {"description": "Returns the track that will be played if calling\\n:meth:`mopidy.core.PlaybackController.previous()`.\\n\\nFor normal playback this is the previous track in the tracklist. If\\nrandom and/or consume is enabled it should return the current track\\ninstead.\\n\\n.. deprecated:: 3.0\\n    Use :meth:`get_previous_tlid` instead.\\n\\n:param tl_track: the reference track\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:rtype: :class:`mopidy.models.TlTrack` or :class:`None`", "params": [{"name": "tl_track"}]}, "core.tracklist.remove": {"description": "Remove the matching tracks from the tracklist.\\n\\nUses :meth:`filter()` to lookup the tracks to remove.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.\\n\\n:param criteria: one or more rules to match by\\n:type criteria: dict, of (string, list) pairs\\n:rtype: list of :class:`mopidy.models.TlTrack` that were removed", "params": [{"name": "criteria"}]}, "core.tracklist.set_consume": {"description": "Set consume mode.\\n\\n:class:`True`\\n    Tracks are removed from the tracklist when they have been played.\\n:class:`False`\\n    Tracks are not removed from the tracklist.", "params": [{"name": "value"}]}, "core.tracklist.set_random": {"description": "Set random mode.\\n\\n:class:`True`\\n    Tracks are selected at random from the tracklist.\\n:class:`False`\\n    Tracks are played in the order of the tracklist.", "params": [{"name": "value"}]}, "core.tracklist.set_repeat": {"description": "Set repeat mode.\\n\\nTo repeat a single track, set both ``repeat`` and ``single``.\\n\\n:class:`True`\\n    The tracklist is played repeatedly.\\n:class:`False`\\n    The tracklist is played once.", "params": [{"name": "value"}]}, "core.tracklist.set_single": {"description": "Set single mode.\\n\\n:class:`True`\\n    Playback is stopped after current song, unless in ``repeat`` mode.\\n:class:`False`\\n    Playback continues after current song.", "params": [{"name": "value"}]}, "core.tracklist.shuffle": {"description": "Shuffles the entire tracklist. If ``start`` and ``end`` is given only\\nshuffles the slice ``[start:end]``.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.\\n\\n:param start: position of first track to shuffle\\n:type start: int or :class:`None`\\n:param end: position after last track to shuffle\\n:type end: int or :class:`None`", "params": [{"name": "start", "default": null}, {"name": "end", "default": null}]}, "core.tracklist.slice": {"description": "Returns a slice of the tracklist, limited by the given start and end\\npositions.\\n\\n:param start: position of first track to include in slice\\n:type start: int\\n:param end: position after last track to include in slice\\n:type end: int\\n:rtype: :class:`mopidy.models.TlTrack`", "params": [{"name": "start"}, {"name": "end"}]}}}'
okt 24 13:21:09 Desktop-Ubuntu mopidy[7535]: DEBUG    [HttpServer] mopidy.http.handlers Received WebSocket message from 127.0.0.1: '{"method":"core.describe","jsonrpc":"2.0","id":38}'
okt 24 13:21:09 Desktop-Ubuntu mopidy[7535]: DEBUG    [HttpServer] mopidy.http.handlers New WebSocket connection from 127.0.0.1
okt 24 13:21:09 Desktop-Ubuntu mopidy[7535]: INFO     [HttpServer] tornado.access 101 GET /mopidy/ws/ (127.0.0.1) 19.46ms
okt 24 13:21:09 Desktop-Ubuntu mopidy[7535]: DEBUG    [HttpFrontend-10 (_actor_loop)] mopidy.zeroconf Zeroconf service 'Mopidy HTTP server on Desktop-Ubuntu' (_mopidy-http._tcp at []:6680): Published
okt 24 13:21:09 Desktop-Ubuntu mopidy[7535]: DEBUG    [HttpFrontend-10 (_actor_loop)] mopidy.zeroconf Zeroconf service 'Mopidy HTTP server on Desktop-Ubuntu' (_http._tcp at []:6680): Published
okt 24 13:21:09 Desktop-Ubuntu mopidy[7535]:     '/': <class 'tornado.web.RedirectHandler'>
okt 24 13:21:08 Desktop-Ubuntu mopidy[7535]:     '/mopidy/': <class 'mopidy.http.handlers.ClientListHandler'>
okt 24 13:21:08 Desktop-Ubuntu mopidy[7535]:     '/mopidy/(.+)': <class 'mopidy.http.handlers.StaticFileHandler'>
okt 24 13:21:08 Desktop-Ubuntu mopidy[7535]:     '/mopidy/rpc': <class 'mopidy.http.handlers.JsonRpcHandler'>
okt 24 13:21:08 Desktop-Ubuntu mopidy[7535]:     '/mopidy/ws/?': <class 'mopidy.http.handlers.WebSocketHandler'>
okt 24 13:21:08 Desktop-Ubuntu mopidy[7535]:     '/mopidy': <class 'mopidy.http.handlers.AddSlashHandler'>
okt 24 13:21:08 Desktop-Ubuntu mopidy[7535]:     '/iris/(.*)': <class 'mopidy_iris.handlers.ReactRouterHandler'>
okt 24 13:21:08 Desktop-Ubuntu mopidy[7535]:     '/iris/((.*)(?:css|js|json|map)$)': <class 'tornado.web.StaticFileHandler'>
okt 24 13:21:08 Desktop-Ubuntu mopidy[7535]:     '/iris/assets/(.*)': <class 'tornado.web.StaticFileHandler'>
okt 24 13:21:08 Desktop-Ubuntu mopidy[7535]:     '/iris/ws/?': <class 'mopidy_iris.handlers.WebsocketHandler'>
okt 24 13:21:08 Desktop-Ubuntu mopidy[7535]:     '/iris/http/([^/]*)': <class 'mopidy_iris.handlers.HttpHandler'>
okt 24 13:21:08 Desktop-Ubuntu mopidy[7535]:     '/iris': <class 'mopidy.http.handlers.AddSlashHandler'>
okt 24 13:21:08 Desktop-Ubuntu mopidy[7535]: DEBUG    [HttpServer] mopidy.http.actor HTTP routes from extensions:
okt 24 13:21:08 Desktop-Ubuntu mopidy[7535]: DEBUG    [HttpServer] mopidy.http.actor Default webclient is mopidy
okt 24 13:21:08 Desktop-Ubuntu mopidy[7535]: DEBUG    [HttpServer] mopidy.http.actor Loaded HTTP extension: mopidy
okt 24 13:21:08 Desktop-Ubuntu mopidy[7535]: DEBUG    [HttpServer] mopidy.http.actor Loaded HTTP extension: iris
okt 24 13:21:08 Desktop-Ubuntu mopidy[7535]: DEBUG    [HttpServer] asyncio Using selector: EpollSelector
okt 24 13:21:08 Desktop-Ubuntu mopidy[7535]: INFO     [MainThread] mopidy.commands Starting GLib mainloop
okt 24 13:21:08 Desktop-Ubuntu mopidy[7535]: TRACE    [MainThread] mopidy.internal.timer HttpFrontend took 0ms
okt 24 13:21:08 Desktop-Ubuntu mopidy[7535]: INFO     [HttpFrontend-10 (_actor_loop)] mopidy.http.actor HTTP server running at [::ffff:127.0.0.1]:6680
okt 24 13:21:08 Desktop-Ubuntu mopidy[7535]: DEBUG    [MainThread] pykka Starting HttpFrontend (urn:uuid:29d454d7-244b-4aa2-8b03-aaecf80f38c8)
okt 24 13:21:08 Desktop-Ubuntu mopidy[7535]: DEBUG    [MainThread] pykka Registered HttpFrontend (urn:uuid:29d454d7-244b-4aa2-8b03-aaecf80f38c8)
okt 24 13:21:08 Desktop-Ubuntu mopidy[7535]: DEBUG    [MainThread] mopidy.http.actor Starting HTTP server
okt 24 13:21:08 Desktop-Ubuntu mopidy[7535]: TRACE    [MainThread] mopidy.internal.timer IrisFrontend took 0ms
okt 24 13:21:08 Desktop-Ubuntu mopidy[7535]: INFO     [IrisFrontend-8 (_actor_loop)] mopidy_iris.core Starting Iris 3.64.1
okt 24 13:21:08 Desktop-Ubuntu mopidy[7535]: DEBUG    [MainThread] pykka Starting IrisFrontend (urn:uuid:355145b1-2822-425e-8511-1ef9a78b8912)
okt 24 13:21:08 Desktop-Ubuntu mopidy[7535]: DEBUG    [MainThread] pykka Registered IrisFrontend (urn:uuid:355145b1-2822-425e-8511-1ef9a78b8912)
okt 24 13:21:08 Desktop-Ubuntu mopidy[7535]: TRACE    [MainThread] mopidy.internal.timer YTMusicScrobbleFE took 0ms
okt 24 13:21:08 Desktop-Ubuntu mopidy[7535]: DEBUG    [MainThread] pykka Starting YTMusicScrobbleFE (urn:uuid:1c10e75e-5d57-46a4-b6fb-43b564a32808)
okt 24 13:21:08 Desktop-Ubuntu mopidy[7535]: DEBUG    [MainThread] pykka Registered YTMusicScrobbleFE (urn:uuid:1c10e75e-5d57-46a4-b6fb-43b564a32808)
okt 24 13:21:08 Desktop-Ubuntu mopidy[7535]: INFO     [MainThread] mopidy.commands Starting Mopidy frontends: YTMusicScrobbleFE, IrisFrontend, HttpFrontend
okt 24 13:21:08 Desktop-Ubuntu mopidy[7535]: DEBUG    [MainThread] pykka Starting Core (urn:uuid:d86b65b9-097d-40ac-9f48-5d18ebc1bb34)
okt 24 13:21:08 Desktop-Ubuntu mopidy[7535]: DEBUG    [MainThread] pykka Registered Core (urn:uuid:d86b65b9-097d-40ac-9f48-5d18ebc1bb34)
okt 24 13:21:08 Desktop-Ubuntu mopidy[7535]: INFO     [MainThread] mopidy.commands Starting Mopidy core
okt 24 13:21:08 Desktop-Ubuntu mopidy[7535]: TRACE    [MainThread] mopidy.internal.timer StreamBackend took 6ms
okt 24 13:21:08 Desktop-Ubuntu mopidy[7535]: DEBUG    [MainThread] pykka Starting StreamBackend (urn:uuid:0870c93f-505c-48f3-acf4-268305899c95)
okt 24 13:21:08 Desktop-Ubuntu mopidy[7535]: DEBUG    [MainThread] pykka Registered StreamBackend (urn:uuid:0870c93f-505c-48f3-acf4-268305899c95)
okt 24 13:21:08 Desktop-Ubuntu mopidy[7535]: INFO     [Audio-2 (_actor_loop)] mopidy.audio.actor Audio output set to "pulsesink server=127.0.0.1"
okt 24 13:21:08 Desktop-Ubuntu mopidy[7535]: TRACE    [MainThread] mopidy.internal.timer M3UBackend took 2ms
okt 24 13:21:08 Desktop-Ubuntu mopidy[7535]: DEBUG    [MainThread] pykka Starting M3UBackend (urn:uuid:68b476c3-0424-40b5-8e1d-a55dead71ed9)
okt 24 13:21:08 Desktop-Ubuntu mopidy[7535]: DEBUG    [MainThread] pykka Registered M3UBackend (urn:uuid:68b476c3-0424-40b5-8e1d-a55dead71ed9)
okt 24 13:21:08 Desktop-Ubuntu mopidy[7535]: TRACE    [MainThread] mopidy.internal.timer FileBackend took 2ms
okt 24 13:21:08 Desktop-Ubuntu mopidy[7535]: DEBUG    [MainThread] pykka Starting FileBackend (urn:uuid:1a01b247-2d1d-4a84-8d94-33537abf8e25)
okt 24 13:21:08 Desktop-Ubuntu mopidy[7535]: DEBUG    [MainThread] pykka Registered FileBackend (urn:uuid:1a01b247-2d1d-4a84-8d94-33537abf8e25)
okt 24 13:21:08 Desktop-Ubuntu mopidy[7535]: DEBUG    [MainThread] mopidy.file.library Failed expanding path ($XDG_MUSIC_DIR) from file/media_dirs config value.
okt 24 13:21:08 Desktop-Ubuntu mopidy[7535]: AttributeError: 'YTMusic' object has no attribute 'headers'
okt 24 13:21:08 Desktop-Ubuntu mopidy[7535]:     if 'x-goog-visitor-id' not in self.headers:
okt 24 13:21:08 Desktop-Ubuntu mopidy[7535]:   File "/usr/local/lib/python3.10/dist-packages/ytmusicapi/ytmusic.py", line 98, in __init__
okt 24 13:21:08 Desktop-Ubuntu mopidy[7535]:     self.api = YTMusic(self._ytmusicapi_auth_json)
okt 24 13:21:08 Desktop-Ubuntu mopidy[7535]:   File "/usr/local/lib/python3.10/dist-packages/mopidy_ytmusic/backend.py", line 65, in __init__
okt 24 13:21:08 Desktop-Ubuntu mopidy[7535]:     obj = cls(*args, **kwargs)
okt 24 13:21:08 Desktop-Ubuntu mopidy[7535]:   File "/usr/lib/python3/dist-packages/pykka/_actor.py", line 91, in start
okt 24 13:21:08 Desktop-Ubuntu mopidy[7535]:     backend = backend_class.start(
okt 24 13:21:08 Desktop-Ubuntu mopidy[7535]:   File "/usr/lib/python3/dist-packages/mopidy/commands.py", line 412, in start_backends
okt 24 13:21:08 Desktop-Ubuntu mopidy[7535]:     yield
okt 24 13:21:08 Desktop-Ubuntu mopidy[7535]:   File "/usr/lib/python3/dist-packages/mopidy/commands.py", line 248, in _actor_error_handling
okt 24 13:21:08 Desktop-Ubuntu mopidy[7535]: Traceback (most recent call last):
okt 24 13:21:08 Desktop-Ubuntu mopidy[7535]: ERROR    [MainThread] mopidy.commands Got un-handled exception from YTMusicBackend
okt 24 13:21:08 Desktop-Ubuntu mopidy[7535]: INFO     [MainThread] mopidy.commands Starting Mopidy backends: YTMusicBackend, FileBackend, M3UBackend, StreamBackend
okt 24 13:21:08 Desktop-Ubuntu mopidy[7535]: DEBUG    [MainThread] pykka Starting Audio (urn:uuid:02039f67-9c96-48eb-ab3d-11d68915b4fa)
okt 24 13:21:08 Desktop-Ubuntu mopidy[7535]: DEBUG    [MainThread] pykka Registered Audio (urn:uuid:02039f67-9c96-48eb-ab3d-11d68915b4fa)
okt 24 13:21:08 Desktop-Ubuntu mopidy[7535]: INFO     [MainThread] mopidy.commands Starting Mopidy audio
okt 24 13:21:08 Desktop-Ubuntu mopidy[7535]: DEBUG    [MainThread] mopidy.commands Mixer volume left unchanged
okt 24 13:21:08 Desktop-Ubuntu mopidy[7535]: DEBUG    [MainThread] pykka Starting SoftwareMixer (urn:uuid:5985a947-e0f7-45a6-8901-c3daa9aaa298)
okt 24 13:21:08 Desktop-Ubuntu mopidy[7535]: DEBUG    [MainThread] pykka Registered SoftwareMixer (urn:uuid:5985a947-e0f7-45a6-8901-c3daa9aaa298)
okt 24 13:21:08 Desktop-Ubuntu mopidy[7535]: INFO     [MainThread] mopidy.commands Starting Mopidy mixer: SoftwareMixer
okt 24 13:21:08 Desktop-Ubuntu mopidy[7535]: DEBUG    [MainThread] mopidy.commands Available Mopidy mixers: SoftwareMixer
okt 24 13:21:08 Desktop-Ubuntu mopidy[7535]: WARNING  [MainThread] mopidy.__main__ Please fix the extension configuration errors or disable the extensions to silence these messages.
okt 24 13:21:08 Desktop-Ubuntu mopidy[7535]: WARNING  [MainThread] mopidy.__main__   local/media_dir must be set.
okt 24 13:21:08 Desktop-Ubuntu mopidy[7535]: WARNING  [MainThread] mopidy.__main__ Found local configuration errors. The extension has been automatically disabled:
okt 24 13:21:08 Desktop-Ubuntu mopidy[7535]: INFO     [MainThread] mopidy.__main__ Disabled extensions: local, soundcloud, youtube
okt 24 13:21:08 Desktop-Ubuntu mopidy[7535]: INFO     [MainThread] mopidy.__main__ Enabled extensions: file, iris, stream, softwaremixer, ytmusic, http, m3u
okt 24 13:21:08 Desktop-Ubuntu mopidy[7535]: DEBUG    [MainThread] mopidy.ext Validating extension: stream
okt 24 13:21:08 Desktop-Ubuntu mopidy[7535]: DEBUG    [MainThread] mopidy.ext Validating extension: softwaremixer
okt 24 13:21:08 Desktop-Ubuntu mopidy[7535]: DEBUG    [MainThread] mopidy.ext Validating extension: m3u
okt 24 13:21:08 Desktop-Ubuntu mopidy[7535]: DEBUG    [MainThread] mopidy.ext Validating extension: http
okt 24 13:21:08 Desktop-Ubuntu mopidy[7535]: DEBUG    [MainThread] mopidy.ext Validating extension: file
okt 24 13:21:08 Desktop-Ubuntu mopidy[7535]: DEBUG    [MainThread] mopidy.ext Validating extension: iris
okt 24 13:21:08 Desktop-Ubuntu mopidy[7535]: DEBUG    [MainThread] mopidy.ext Validating extension: ytmusic
okt 24 13:21:08 Desktop-Ubuntu mopidy[7535]: DEBUG    [MainThread] mopidy.ext Validating extension: soundcloud
okt 24 13:21:08 Desktop-Ubuntu mopidy[7535]: DEBUG    [MainThread] mopidy.ext Validating extension: local
okt 24 13:21:08 Desktop-Ubuntu mopidy[7535]: DEBUG    [MainThread] mopidy.ext Validating extension: youtube
okt 24 13:21:08 Desktop-Ubuntu mopidy[7535]: WARNING  [MainThread] mopidy.config Ignoring config section 'jukebox' because no matching extension was found
okt 24 13:21:08 Desktop-Ubuntu mopidy[7535]: INFO     [MainThread] mopidy.config Loading config from command line options
okt 24 13:21:08 Desktop-Ubuntu mopidy[7535]: INFO     [MainThread] mopidy.config Loading config from file:///etc/mopidy/mopidy.conf
okt 24 13:21:08 Desktop-Ubuntu mopidy[7535]: INFO     [MainThread] mopidy.config Loading config from file:///usr/share/mopidy/conf.d/mopidy.conf
okt 24 13:21:08 Desktop-Ubuntu mopidy[7535]: INFO     [MainThread] mopidy.config Loading config from builtin defaults
okt 24 13:21:08 Desktop-Ubuntu mopidy[7535]: DEBUG    [MainThread] mopidy.config.keyring Fetching passwords from your keyring failed. Any passwords stored in the keyring will not be available. (org.freedesktop.DBus.Error.NotSupported: Unable to autolaunch a dbus-daemon without a $DISPLAY for X11)
okt 24 13:21:08 Desktop-Ubuntu mopidy[7535]: DEBUG    [MainThread] mopidy.ext Discovered extensions: youtube, local, soundcloud, ytmusic, iris, file, http, m3u, softwaremixer, stream
okt 24 13:21:08 Desktop-Ubuntu mopidy[7535]: DEBUG    [MainThread] mopidy.ext Loaded extension: Mopidy-Stream 3.3.0
okt 24 13:21:08 Desktop-Ubuntu mopidy[7535]: DEBUG    [MainThread] mopidy.ext Loading entry point: stream = mopidy.stream:Extension
okt 24 13:21:08 Desktop-Ubuntu mopidy[7535]: DEBUG    [MainThread] mopidy.ext Loaded extension: Mopidy-SoftwareMixer 3.3.0
okt 24 13:21:08 Desktop-Ubuntu mopidy[7535]: DEBUG    [MainThread] mopidy.ext Loading entry point: softwaremixer = mopidy.softwaremixer:Extension
okt 24 13:21:08 Desktop-Ubuntu mopidy[7535]: DEBUG    [MainThread] mopidy.ext Loaded extension: Mopidy-M3U 3.3.0
okt 24 13:21:08 Desktop-Ubuntu mopidy[7535]: DEBUG    [MainThread] mopidy.ext Loading entry point: m3u = mopidy.m3u:Extension
okt 24 13:21:08 Desktop-Ubuntu mopidy[7535]: DEBUG    [MainThread] mopidy.ext Loaded extension: Mopidy-HTTP 3.3.0
okt 24 13:21:08 Desktop-Ubuntu mopidy[7535]: DEBUG    [MainThread] mopidy.ext Loading entry point: http = mopidy.http:Extension
okt 24 13:21:08 Desktop-Ubuntu mopidy[7535]: DEBUG    [MainThread] mopidy.ext Loaded extension: Mopidy-File 3.3.0
okt 24 13:21:08 Desktop-Ubuntu mopidy[7535]: DEBUG    [MainThread] mopidy.ext Loading entry point: file = mopidy.file:Extension
okt 24 13:21:08 Desktop-Ubuntu mopidy[7535]: DEBUG    [MainThread] mopidy.ext Loaded extension: Mopidy-Iris 3.64.1
okt 24 13:21:08 Desktop-Ubuntu mopidy[7535]: DEBUG    [MainThread] mopidy.ext Loading entry point: iris = mopidy_iris:Extension
okt 24 13:21:08 Desktop-Ubuntu mopidy[7535]: DEBUG    [MainThread] mopidy.ext Loaded extension: Mopidy-YTMusic 0.3.7
okt 24 13:21:08 Desktop-Ubuntu mopidy[7535]: DEBUG    [MainThread] mopidy.ext Loading entry point: ytmusic = mopidy_ytmusic:Extension
okt 24 13:21:08 Desktop-Ubuntu mopidy[7535]: DEBUG    [MainThread] mopidy.ext Loaded extension: Mopidy-SoundCloud 3.0.1
okt 24 13:21:08 Desktop-Ubuntu mopidy[7535]: DEBUG    [MainThread] mopidy.ext Loading entry point: soundcloud = mopidy_soundcloud:Extension
okt 24 13:21:08 Desktop-Ubuntu mopidy[7535]: DEBUG    [MainThread] mopidy.ext Loaded extension: Mopidy-Local 3.2.1
okt 24 13:21:08 Desktop-Ubuntu mopidy[7535]: DEBUG    [MainThread] mopidy.ext Loading entry point: local = mopidy_local:Extension
okt 24 13:21:08 Desktop-Ubuntu mopidy[7535]: DEBUG    [MainThread] mopidy.ext Loaded extension: Mopidy-YouTube 3.6.1
okt 24 13:21:08 Desktop-Ubuntu mopidy[7535]: DEBUG    [MainThread] mopidy.ext Loading entry point: youtube = mopidy_youtube:Extension
okt 24 13:21:08 Desktop-Ubuntu mopidy[7535]: INFO     [MainThread] mopidy.__main__ Starting Mopidy 3.3.0
okt 24 13:21:08 Desktop-Ubuntu systemd[1]: Started Mopidy music server.
okt 24 13:21:08 Desktop-Ubuntu systemd[1]: Starting Mopidy music server...
okt 24 13:21:08 Desktop-Ubuntu systemd[1]: Stopped Mopidy music server.
okt 24 13:21:08 Desktop-Ubuntu systemd[1]: mopidy.service: Deactivated successfully.
okt 24 13:21:08 Desktop-Ubuntu mopidy[7384]: Failed loading provided credentials. Make sure to provide a string or a file path. Reason: Expecting value: line 1 column 1 (char 0)
okt 24 13:21:08 Desktop-Ubuntu mopidy[7384]:   All actors stopped.
okt 24 13:21:08 Desktop-Ubuntu mopidy[7384]: DEBUG    2022-10-24 13:21:08,206 [7384:MainThread] mopidy.internal.process
okt 24 13:21:08 Desktop-Ubuntu mopidy[7384]:   Stopped SoftwareMixer (urn:uuid:08f8a387-53ab-4194-951a-341803666add)
okt 24 13:21:08 Desktop-Ubuntu mopidy[7384]: DEBUG    2022-10-24 13:21:08,206 [7384:SoftwareMixer-1 (_actor_loop)] pykka
okt 24 13:21:08 Desktop-Ubuntu mopidy[7384]:   Unregistered SoftwareMixer (urn:uuid:08f8a387-53ab-4194-951a-341803666add)
okt 24 13:21:08 Desktop-Ubuntu mopidy[7384]: DEBUG    2022-10-24 13:21:08,206 [7384:SoftwareMixer-1 (_actor_loop)] pykka
okt 24 13:21:08 Desktop-Ubuntu mopidy[7384]:   Stopping 1 instance(s) of SoftwareMixer
okt 24 13:21:08 Desktop-Ubuntu mopidy[7384]: DEBUG    2022-10-24 13:21:08,206 [7384:MainThread] mopidy.internal.process
okt 24 13:21:08 Desktop-Ubuntu mopidy[7384]:   Stopping Mopidy mixer
okt 24 13:21:08 Desktop-Ubuntu mopidy[7384]: INFO     2022-10-24 13:21:08,206 [7384:MainThread] mopidy.commands
okt 24 13:21:08 Desktop-Ubuntu mopidy[7384]:   Stopped Audio (urn:uuid:42fbdb43-b970-4cce-9b57-eea0d936f221)
okt 24 13:21:08 Desktop-Ubuntu mopidy[7384]: DEBUG    2022-10-24 13:21:08,205 [7384:Audio-2 (_actor_loop)] pykka
okt 24 13:21:08 Desktop-Ubuntu mopidy[7384]:   Unregistered Audio (urn:uuid:42fbdb43-b970-4cce-9b57-eea0d936f221)
okt 24 13:21:08 Desktop-Ubuntu mopidy[7384]: DEBUG    2022-10-24 13:21:08,205 [7384:Audio-2 (_actor_loop)] pykka
okt 24 13:21:08 Desktop-Ubuntu mopidy[7384]:   Stopping 1 instance(s) of Audio
okt 24 13:21:08 Desktop-Ubuntu mopidy[7384]: DEBUG    2022-10-24 13:21:08,205 [7384:MainThread] mopidy.internal.process
okt 24 13:21:08 Desktop-Ubuntu mopidy[7384]:   Stopping Mopidy audio
okt 24 13:21:08 Desktop-Ubuntu mopidy[7384]: INFO     2022-10-24 13:21:08,205 [7384:MainThread] mopidy.commands
okt 24 13:21:08 Desktop-Ubuntu mopidy[7384]:   Stopped StreamBackend (urn:uuid:0b642880-85cb-4bbc-b2fe-831ea3bea32d)
okt 24 13:21:08 Desktop-Ubuntu mopidy[7384]: DEBUG    2022-10-24 13:21:08,205 [7384:StreamBackend-7 (_actor_loop)] pykka
okt 24 13:21:08 Desktop-Ubuntu mopidy[7384]:   Unregistered StreamBackend (urn:uuid:0b642880-85cb-4bbc-b2fe-831ea3bea32d)
okt 24 13:21:08 Desktop-Ubuntu mopidy[7384]: DEBUG    2022-10-24 13:21:08,205 [7384:StreamBackend-7 (_actor_loop)] pykka
okt 24 13:21:08 Desktop-Ubuntu mopidy[7384]:   Stopping 1 instance(s) of StreamBackend
okt 24 13:21:08 Desktop-Ubuntu mopidy[7384]: DEBUG    2022-10-24 13:21:08,205 [7384:MainThread] mopidy.internal.process
okt 24 13:21:08 Desktop-Ubuntu mopidy[7384]:   Stopped M3UBackend (urn:uuid:bd8eb8bf-3450-4d2e-aab0-b2f1c03a27e4)
okt 24 13:21:08 Desktop-Ubuntu mopidy[7384]: DEBUG    2022-10-24 13:21:08,205 [7384:M3UBackend-6 (_actor_loop)] pykka
okt 24 13:21:08 Desktop-Ubuntu mopidy[7384]:   Unregistered M3UBackend (urn:uuid:bd8eb8bf-3450-4d2e-aab0-b2f1c03a27e4)
okt 24 13:21:08 Desktop-Ubuntu mopidy[7384]: DEBUG    2022-10-24 13:21:08,204 [7384:M3UBackend-6 (_actor_loop)] pykka
okt 24 13:21:08 Desktop-Ubuntu mopidy[7384]:   Stopping 1 instance(s) of M3UBackend
okt 24 13:21:08 Desktop-Ubuntu mopidy[7384]: DEBUG    2022-10-24 13:21:08,204 [7384:MainThread] mopidy.internal.process
okt 24 13:21:08 Desktop-Ubuntu mopidy[7384]:   Stopped FileBackend (urn:uuid:ff980b76-37fd-4df9-9bf5-9ff17814dc93)
okt 24 13:21:08 Desktop-Ubuntu mopidy[7384]: DEBUG    2022-10-24 13:21:08,204 [7384:FileBackend-5 (_actor_loop)] pykka
okt 24 13:21:08 Desktop-Ubuntu mopidy[7384]:   Unregistered FileBackend (urn:uuid:ff980b76-37fd-4df9-9bf5-9ff17814dc93)
okt 24 13:21:08 Desktop-Ubuntu mopidy[7384]: DEBUG    2022-10-24 13:21:08,204 [7384:FileBackend-5 (_actor_loop)] pykka
okt 24 13:21:08 Desktop-Ubuntu mopidy[7384]:   Stopping 1 instance(s) of FileBackend
okt 24 13:21:08 Desktop-Ubuntu mopidy[7384]: DEBUG    2022-10-24 13:21:08,204 [7384:MainThread] mopidy.internal.process
okt 24 13:21:08 Desktop-Ubuntu mopidy[7384]:   Stopping 0 instance(s) of YTMusicBackend
okt 24 13:21:08 Desktop-Ubuntu mopidy[7384]: DEBUG    2022-10-24 13:21:08,204 [7384:MainThread] mopidy.internal.process
okt 24 13:21:08 Desktop-Ubuntu mopidy[7384]:   Stopped LocalBackend (urn:uuid:93ee21a9-d983-4aea-9986-bf5df9b997be)
okt 24 13:21:08 Desktop-Ubuntu mopidy[7384]: DEBUG    2022-10-24 13:21:08,204 [7384:LocalBackend-4 (_actor_loop)] pykka
okt 24 13:21:08 Desktop-Ubuntu mopidy[7384]:   Unregistered LocalBackend (urn:uuid:93ee21a9-d983-4aea-9986-bf5df9b997be)
okt 24 13:21:08 Desktop-Ubuntu mopidy[7384]: DEBUG    2022-10-24 13:21:08,204 [7384:LocalBackend-4 (_actor_loop)] pykka
okt 24 13:21:08 Desktop-Ubuntu mopidy[7384]:   Stopping 1 instance(s) of LocalBackend
okt 24 13:21:08 Desktop-Ubuntu mopidy[7384]: DEBUG    2022-10-24 13:21:08,203 [7384:MainThread] mopidy.internal.process
okt 24 13:21:08 Desktop-Ubuntu mopidy[7384]:   Stopped YouTubeBackend (urn:uuid:737f8e2d-ebf3-4c5a-95be-2c598b7aa53a)
okt 24 13:21:08 Desktop-Ubuntu mopidy[7384]: DEBUG    2022-10-24 13:21:08,203 [7384:YouTubeBackend-3 (_actor_loop)] pykka
okt 24 13:21:08 Desktop-Ubuntu mopidy[7384]:   Unregistered YouTubeBackend (urn:uuid:737f8e2d-ebf3-4c5a-95be-2c598b7aa53a)
okt 24 13:21:08 Desktop-Ubuntu mopidy[7384]: DEBUG    2022-10-24 13:21:08,203 [7384:YouTubeBackend-3 (_actor_loop)] pykka
okt 24 13:21:08 Desktop-Ubuntu mopidy[7384]:   Stopping 1 instance(s) of YouTubeBackend
okt 24 13:21:08 Desktop-Ubuntu mopidy[7384]: DEBUG    2022-10-24 13:21:08,203 [7384:MainThread] mopidy.internal.process
okt 24 13:21:08 Desktop-Ubuntu mopidy[7384]:   Stopping Mopidy backends
okt 24 13:21:08 Desktop-Ubuntu mopidy[7384]: INFO     2022-10-24 13:21:08,203 [7384:MainThread] mopidy.commands
okt 24 13:21:08 Desktop-Ubuntu mopidy[7384]:   Stopped Core (urn:uuid:895731b5-21c9-486c-bcf7-9c3bfb2788a2)
okt 24 13:21:08 Desktop-Ubuntu mopidy[7384]: DEBUG    2022-10-24 13:21:08,203 [7384:Core-8 (_actor_loop)] pykka
okt 24 13:21:08 Desktop-Ubuntu mopidy[7384]:   Unregistered Core (urn:uuid:895731b5-21c9-486c-bcf7-9c3bfb2788a2)
okt 24 13:21:08 Desktop-Ubuntu mopidy[7384]: DEBUG    2022-10-24 13:21:08,203 [7384:Core-8 (_actor_loop)] pykka
okt 24 13:21:08 Desktop-Ubuntu mopidy[7384]:   Stopping 1 instance(s) of Core
okt 24 13:21:08 Desktop-Ubuntu mopidy[7384]: DEBUG    2022-10-24 13:21:08,202 [7384:MainThread] mopidy.internal.process
okt 24 13:21:08 Desktop-Ubuntu mopidy[7384]:   Stopping Mopidy core
okt 24 13:21:08 Desktop-Ubuntu mopidy[7384]: INFO     2022-10-24 13:21:08,202 [7384:MainThread] mopidy.commands
okt 24 13:21:08 Desktop-Ubuntu mopidy[7384]:   Stopped HTTP server
okt 24 13:21:08 Desktop-Ubuntu mopidy[7384]: DEBUG    2022-10-24 13:21:08,202 [7384:HttpServer] mopidy.http.actor
okt 24 13:21:08 Desktop-Ubuntu mopidy[7384]:   Stopping HTTP server
okt 24 13:21:08 Desktop-Ubuntu mopidy[7384]: DEBUG    2022-10-24 13:21:08,202 [7384:HttpFrontend-14 (_actor_loop)] mopidy.http.actor
okt 24 13:21:08 Desktop-Ubuntu mopidy[7384]:   Zeroconf service 'Mopidy HTTP server on Desktop-Ubuntu' (_mopidy-http._tcp at []:6680): Unpublished
okt 24 13:21:08 Desktop-Ubuntu mopidy[7384]: DEBUG    2022-10-24 13:21:08,202 [7384:HttpFrontend-14 (_actor_loop)] mopidy.zeroconf
okt 24 13:21:08 Desktop-Ubuntu mopidy[7384]:   Zeroconf service 'Mopidy HTTP server on Desktop-Ubuntu' (_http._tcp at []:6680): Unpublished
okt 24 13:21:08 Desktop-Ubuntu mopidy[7384]: DEBUG    2022-10-24 13:21:08,201 [7384:HttpFrontend-14 (_actor_loop)] mopidy.zeroconf
okt 24 13:21:08 Desktop-Ubuntu mopidy[7384]:   Stopped HttpFrontend (urn:uuid:a470f261-0ad1-4597-aedf-cc2cb3772ba3)
okt 24 13:21:08 Desktop-Ubuntu mopidy[7384]: DEBUG    2022-10-24 13:21:08,201 [7384:HttpFrontend-14 (_actor_loop)] pykka
okt 24 13:21:08 Desktop-Ubuntu mopidy[7384]:   Unregistered HttpFrontend (urn:uuid:a470f261-0ad1-4597-aedf-cc2cb3772ba3)
okt 24 13:21:08 Desktop-Ubuntu mopidy[7384]: DEBUG    2022-10-24 13:21:08,200 [7384:HttpFrontend-14 (_actor_loop)] pykka
okt 24 13:21:08 Desktop-Ubuntu mopidy[7384]:   Stopping 1 instance(s) of HttpFrontend
okt 24 13:21:08 Desktop-Ubuntu mopidy[7384]: DEBUG    2022-10-24 13:21:08,200 [7384:MainThread] mopidy.internal.process
okt 24 13:21:08 Desktop-Ubuntu mopidy[7384]:   Stopping Iris
okt 24 13:21:08 Desktop-Ubuntu mopidy[7384]: INFO     2022-10-24 13:21:08,200 [7384:IrisFrontend-12 (_actor_loop)] mopidy_iris.core
okt 24 13:21:08 Desktop-Ubuntu mopidy[7384]:   Stopped IrisFrontend (urn:uuid:b538e73e-d443-4bd3-9f2d-bb4fc255b88d)
okt 24 13:21:08 Desktop-Ubuntu mopidy[7384]: DEBUG    2022-10-24 13:21:08,200 [7384:IrisFrontend-12 (_actor_loop)] pykka
okt 24 13:21:08 Desktop-Ubuntu mopidy[7384]:   Unregistered IrisFrontend (urn:uuid:b538e73e-d443-4bd3-9f2d-bb4fc255b88d)
okt 24 13:21:08 Desktop-Ubuntu mopidy[7384]: DEBUG    2022-10-24 13:21:08,200 [7384:IrisFrontend-12 (_actor_loop)] pykka
okt 24 13:21:08 Desktop-Ubuntu mopidy[7384]:   Stopping 1 instance(s) of IrisFrontend
okt 24 13:21:08 Desktop-Ubuntu mopidy[7384]: DEBUG    2022-10-24 13:21:08,200 [7384:MainThread] mopidy.internal.process
okt 24 13:21:08 Desktop-Ubuntu mopidy[7384]:   Stopped YTMusicScrobbleFE (urn:uuid:2409cb6a-a1f1-4fd8-9072-bb7afb234f8e)
okt 24 13:21:08 Desktop-Ubuntu mopidy[7384]: DEBUG    2022-10-24 13:21:08,200 [7384:YTMusicScrobbleFE-11 (_actor_loop)] pykka
okt 24 13:21:08 Desktop-Ubuntu mopidy[7384]:   Unregistered YTMusicScrobbleFE (urn:uuid:2409cb6a-a1f1-4fd8-9072-bb7afb234f8e)
okt 24 13:21:08 Desktop-Ubuntu mopidy[7384]: DEBUG    2022-10-24 13:21:08,200 [7384:YTMusicScrobbleFE-11 (_actor_loop)] pykka
okt 24 13:21:08 Desktop-Ubuntu mopidy[7384]:   Stopping 1 instance(s) of YTMusicScrobbleFE
okt 24 13:21:08 Desktop-Ubuntu mopidy[7384]: DEBUG    2022-10-24 13:21:08,199 [7384:MainThread] mopidy.internal.process
okt 24 13:21:08 Desktop-Ubuntu mopidy[7384]:   Stopped YouTubeCoreListener (urn:uuid:d233d7de-d460-43ba-aeb4-3b8eb74628db)
okt 24 13:21:08 Desktop-Ubuntu mopidy[7384]: DEBUG    2022-10-24 13:21:08,199 [7384:YouTubeCoreListener-10 (_actor_loop)] pykka
okt 24 13:21:08 Desktop-Ubuntu mopidy[7384]:   Unregistered YouTubeCoreListener (urn:uuid:d233d7de-d460-43ba-aeb4-3b8eb74628db)
okt 24 13:21:08 Desktop-Ubuntu mopidy[7384]: DEBUG    2022-10-24 13:21:08,199 [7384:YouTubeCoreListener-10 (_actor_loop)] pykka
okt 24 13:21:08 Desktop-Ubuntu mopidy[7384]:   Stopping 1 instance(s) of YouTubeCoreListener
okt 24 13:21:08 Desktop-Ubuntu mopidy[7384]: DEBUG    2022-10-24 13:21:08,199 [7384:MainThread] mopidy.internal.process
okt 24 13:21:08 Desktop-Ubuntu mopidy[7384]:   Stopped YouTubeAutoplayer (urn:uuid:6a305ae6-11b2-46bf-af37-1170d19e1125)
okt 24 13:21:08 Desktop-Ubuntu mopidy[7384]: DEBUG    2022-10-24 13:21:08,199 [7384:YouTubeAutoplayer-9 (_actor_loop)] pykka
okt 24 13:21:08 Desktop-Ubuntu mopidy[7384]:   Unregistered YouTubeAutoplayer (urn:uuid:6a305ae6-11b2-46bf-af37-1170d19e1125)
okt 24 13:21:08 Desktop-Ubuntu mopidy[7384]: DEBUG    2022-10-24 13:21:08,198 [7384:YouTubeAutoplayer-9 (_actor_loop)] pykka
okt 24 13:21:08 Desktop-Ubuntu mopidy[7384]:   Stopping 1 instance(s) of YouTubeAutoplayer
okt 24 13:21:08 Desktop-Ubuntu mopidy[7384]: DEBUG    2022-10-24 13:21:08,198 [7384:MainThread] mopidy.internal.process
okt 24 13:21:08 Desktop-Ubuntu mopidy[7384]:   Stopping Mopidy frontends
okt 24 13:21:08 Desktop-Ubuntu mopidy[7384]: INFO     2022-10-24 13:21:08,198 [7384:MainThread] mopidy.commands
okt 24 13:21:08 Desktop-Ubuntu mopidy[7384]:   GLib mainloop got SIGTERM. Exiting...
okt 24 13:21:08 Desktop-Ubuntu mopidy[7384]: INFO     2022-10-24 13:21:08,198 [7384:MainThread] mopidy.commands
okt 24 13:21:08 Desktop-Ubuntu systemd[1]: Stopping Mopidy music server...
okt 24 13:20:27 Desktop-Ubuntu mopidy[7384]:   {'id': 166661042745423, 'jsonrpc': '2.0', 'method': 'get_version', 'result': {'version': {'current': '3.64.1', 'latest': '3.64.1', 'is_root': False, 'upgrade_available': False}}, 'recipient': '19N9SD6NNBJ5'}
okt 24 13:20:27 Desktop-Ubuntu mopidy[7384]: DEBUG    2022-10-24 13:20:27,504 [7384:HttpServer] mopidy_iris.core
okt 24 13:20:27 Desktop-Ubuntu mopidy[7384]:   Iris websocket message received: {"jsonrpc":"2.0","id":166661042745423,"method":"get_version"}
okt 24 13:20:27 Desktop-Ubuntu mopidy[7384]: DEBUG    2022-10-24 13:20:27,454 [7384:HttpServer] mopidy_iris.handlers
okt 24 13:20:26 Desktop-Ubuntu mopidy[7384]:   {'id': 166661042695331, 'jsonrpc': '2.0', 'method': 'get_queue_metadata', 'result': {'queue_metadata': {}}, 'recipient': '19N9SD6NNBJ5'}
okt 24 13:20:26 Desktop-Ubuntu mopidy[7384]: DEBUG    2022-10-24 13:20:26,953 [7384:HttpServer] mopidy_iris.core
okt 24 13:20:26 Desktop-Ubuntu mopidy[7384]:   Iris websocket message received: {"jsonrpc":"2.0","id":166661042695331,"method":"get_queue_metadata"}
okt 24 13:20:26 Desktop-Ubuntu mopidy[7384]: DEBUG    2022-10-24 13:20:26,953 [7384:HttpServer] mopidy_iris.handlers
okt 24 13:20:26 Desktop-Ubuntu mopidy[7384]:   {'id': 166661042695255, 'jsonrpc': '2.0', 'method': 'get_pinned', 'result': {'pinned': []}, 'recipient': '19N9SD6NNBJ5'}
okt 24 13:20:26 Desktop-Ubuntu mopidy[7384]: DEBUG    2022-10-24 13:20:26,953 [7384:HttpServer] mopidy_iris.core
okt 24 13:20:26 Desktop-Ubuntu mopidy[7384]:   Iris websocket message received: {"jsonrpc":"2.0","id":166661042695255,"method":"get_pinned"}
okt 24 13:20:26 Desktop-Ubuntu mopidy[7384]: DEBUG    2022-10-24 13:20:26,952 [7384:HttpServer] mopidy_iris.handlers
okt 24 13:20:26 Desktop-Ubuntu mopidy[7384]:   {'id': 166661042695117, 'jsonrpc': '2.0', 'method': 'get_commands', 'result': {'commands': {}}, 'recipient': '19N9SD6NNBJ5'}
okt 24 13:20:26 Desktop-Ubuntu mopidy[7384]: DEBUG    2022-10-24 13:20:26,952 [7384:HttpServer] mopidy_iris.core
okt 24 13:20:26 Desktop-Ubuntu mopidy[7384]:   Iris websocket message received: {"jsonrpc":"2.0","id":166661042695117,"method":"get_commands"}
okt 24 13:20:26 Desktop-Ubuntu mopidy[7384]: DEBUG    2022-10-24 13:20:26,952 [7384:HttpServer] mopidy_iris.handlers
okt 24 13:20:26 Desktop-Ubuntu mopidy[7384]:   {'id': 166661042695072, 'jsonrpc': '2.0', 'method': 'get_radio', 'result': {'radio': {'enabled': 0, 'seed_artists': [], 'seed_genres': [], 'seed_tracks': [], 'results': []}}, 'recipient': '19N9SD6NNBJ5'}
okt 24 13:20:26 Desktop-Ubuntu mopidy[7384]: DEBUG    2022-10-24 13:20:26,951 [7384:HttpServer] mopidy_iris.core
okt 24 13:20:26 Desktop-Ubuntu mopidy[7384]:   Iris websocket message received: {"jsonrpc":"2.0","id":166661042695072,"method":"get_radio"}
okt 24 13:20:26 Desktop-Ubuntu mopidy[7384]: DEBUG    2022-10-24 13:20:26,951 [7384:HttpServer] mopidy_iris.handlers
okt 24 13:20:26 Desktop-Ubuntu mopidy[7384]:   {'id': 166661042694964, 'jsonrpc': '2.0', 'method': 'get_shared_config', 'result': {'shared_config': {}}, 'recipient': '19N9SD6NNBJ5'}
okt 24 13:20:26 Desktop-Ubuntu mopidy[7384]: DEBUG    2022-10-24 13:20:26,950 [7384:HttpServer] mopidy_iris.core
okt 24 13:20:26 Desktop-Ubuntu mopidy[7384]:   Iris websocket message received: {"jsonrpc":"2.0","id":166661042694964,"method":"get_shared_config"}
okt 24 13:20:26 Desktop-Ubuntu mopidy[7384]: DEBUG    2022-10-24 13:20:26,950 [7384:HttpServer] mopidy_iris.handlers
okt 24 13:20:26 Desktop-Ubuntu mopidy[7384]:   {'id': 16666104269488, 'jsonrpc': '2.0', 'method': 'get_config', 'result': {'config': {'is_root': False, 'spotify_username': False, 'country': 'NZ', 'locale': 'en_NZ', 'snapcast_enabled': True, 'snapcast_host': 'localhost', 'snapcast_port': '1780', 'snapcast_ssl': False, 'snapcast_stream': 'Default', 'spotify_authorization_url': 'https://jamesbarnsley.co.nz/iris/auth_spotify.php', 'lastfm_authorization_url': 'https://jamesbarnsley.co.nz/iris/auth_lastfm.php', 'genius_authorization_url': 'https://jamesbarnsley.co.nz/iris/auth_genius.php', 'shared_config': {}}}, 'recipient': '19N9SD6NNBJ5'}
okt 24 13:20:26 Desktop-Ubuntu mopidy[7384]: DEBUG    2022-10-24 13:20:26,948 [7384:HttpServer] mopidy_iris.core
okt 24 13:20:26 Desktop-Ubuntu mopidy[7384]:   Iris websocket message received: {"jsonrpc":"2.0","id":16666104269488,"method":"get_config"}
okt 24 13:20:26 Desktop-Ubuntu mopidy[7384]: DEBUG    2022-10-24 13:20:26,948 [7384:HttpServer] mopidy_iris.handlers
okt 24 13:20:26 Desktop-Ubuntu mopidy[7384]:   {'id': 166661042694652, 'jsonrpc': '2.0', 'method': 'update_connection', 'result': {'connection': {'connection_id': '19N9SD6NNBJ5', 'ip': '127.0.0.1', 'created': '2022-10-24 13:20:26', 'username': 166656148284185, 'client_id': 166656148284193}}, 'recipient': '19N9SD6NNBJ5'}
okt 24 13:20:26 Desktop-Ubuntu mopidy[7384]: DEBUG    2022-10-24 13:20:26,947 [7384:HttpServer] mopidy_iris.core
okt 24 13:20:26 Desktop-Ubuntu mopidy[7384]:   {'method': 'connection_changed', 'params': {'connection': {'connection_id': '19N9SD6NNBJ5', 'ip': '127.0.0.1', 'created': '2022-10-24 13:20:26', 'username': 166656148284185, 'client_id': 166656148284193}}}
okt 24 13:20:26 Desktop-Ubuntu mopidy[7384]: DEBUG    2022-10-24 13:20:26,947 [7384:HttpServer] mopidy_iris.core
okt 24 13:20:26 Desktop-Ubuntu mopidy[7384]:   Iris websocket message received: {"jsonrpc":"2.0","id":166661042694652,"method":"update_connection","params":{"username":166656148284185,"client_id":166656148284193}}
okt 24 13:20:26 Desktop-Ubuntu mopidy[7384]: DEBUG    2022-10-24 13:20:26,947 [7384:HttpServer] mopidy_iris.handlers
okt 24 13:20:26 Desktop-Ubuntu mopidy[7384]:   {'method': 'connection_added', 'params': {'connection': {'connection_id': '19N9SD6NNBJ5', 'ip': '127.0.0.1', 'created': '2022-10-24 13:20:26'}}}
okt 24 13:20:26 Desktop-Ubuntu mopidy[7384]: DEBUG    2022-10-24 13:20:26,943 [7384:HttpServer] mopidy_iris.core
okt 24 13:20:26 Desktop-Ubuntu mopidy[7384]:   <mopidy_iris.handlers.WebsocketHandler object at 0x7f74b655e5c0>
okt 24 13:20:26 Desktop-Ubuntu mopidy[7384]: DEBUG    2022-10-24 13:20:26,943 [7384:HttpServer] mopidy_iris.core
okt 24 13:20:26 Desktop-Ubuntu mopidy[7384]:   Connection added
okt 24 13:20:26 Desktop-Ubuntu mopidy[7384]: DEBUG    2022-10-24 13:20:26,943 [7384:HttpServer] mopidy_iris.core
okt 24 13:20:26 Desktop-Ubuntu mopidy[7384]:   101 GET /iris/ws/ (127.0.0.1) 0.53ms
okt 24 13:20:26 Desktop-Ubuntu mopidy[7384]: INFO     2022-10-24 13:20:26,943 [7384:HttpServer] tornado.access
okt 24 13:20:26 Desktop-Ubuntu mopidy[7384]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 37, "result": null}'
okt 24 13:20:26 Desktop-Ubuntu mopidy[7384]: DEBUG    2022-10-24 13:20:26,836 [7384:HttpServer] mopidy.http.handlers
okt 24 13:20:26 Desktop-Ubuntu mopidy[7384]:   Received WebSocket message from 127.0.0.1: '{"method":"core.playback.get_stream_title","params":{},"jsonrpc":"2.0","id":37}'
okt 24 13:20:26 Desktop-Ubuntu mopidy[7384]: DEBUG    2022-10-24 13:20:26,836 [7384:HttpServer] mopidy.http.handlers
okt 24 13:20:26 Desktop-Ubuntu mopidy[7384]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 36, "result": ["file", "http", "https", "local", "m3u", "rtsp", "youtube", "yt"]}'
okt 24 13:20:26 Desktop-Ubuntu mopidy[7384]: DEBUG    2022-10-24 13:20:26,836 [7384:HttpServer] mopidy.http.handlers
okt 24 13:20:26 Desktop-Ubuntu mopidy[7384]:   Received WebSocket message from 127.0.0.1: '{"method":"core.get_uri_schemes","params":{},"jsonrpc":"2.0","id":36}'
okt 24 13:20:26 Desktop-Ubuntu mopidy[7384]: DEBUG    2022-10-24 13:20:26,835 [7384:HttpServer] mopidy.http.handlers
okt 24 13:20:26 Desktop-Ubuntu mopidy[7384]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 35, "result": 0}'
okt 24 13:20:26 Desktop-Ubuntu mopidy[7384]: DEBUG    2022-10-24 13:20:26,835 [7384:HttpServer] mopidy.http.handlers
okt 24 13:20:26 Desktop-Ubuntu mopidy[7384]:   Received WebSocket message from 127.0.0.1: '{"method":"core.playback.get_time_position","params":{},"jsonrpc":"2.0","id":35}'
okt 24 13:20:26 Desktop-Ubuntu mopidy[7384]: DEBUG    2022-10-24 13:20:26,835 [7384:HttpServer] mopidy.http.handlers
okt 24 13:20:26 Desktop-Ubuntu mopidy[7384]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 34, "result": []}'
okt 24 13:20:26 Desktop-Ubuntu mopidy[7384]: DEBUG    2022-10-24 13:20:26,834 [7384:HttpServer] mopidy.http.handlers
okt 24 13:20:26 Desktop-Ubuntu mopidy[7384]:   Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_tl_tracks","params":{},"jsonrpc":"2.0","id":34}'
okt 24 13:20:26 Desktop-Ubuntu mopidy[7384]: DEBUG    2022-10-24 13:20:26,834 [7384:HttpServer] mopidy.http.handlers
okt 24 13:20:26 Desktop-Ubuntu mopidy[7384]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 33, "result": false}'
okt 24 13:20:26 Desktop-Ubuntu mopidy[7384]: DEBUG    2022-10-24 13:20:26,834 [7384:HttpServer] mopidy.http.handlers
okt 24 13:20:26 Desktop-Ubuntu mopidy[7384]:   Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_repeat","params":{},"jsonrpc":"2.0","id":33}'
okt 24 13:20:26 Desktop-Ubuntu mopidy[7384]: DEBUG    2022-10-24 13:20:26,833 [7384:HttpServer] mopidy.http.handlers
okt 24 13:20:26 Desktop-Ubuntu mopidy[7384]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 32, "result": false}'
okt 24 13:20:26 Desktop-Ubuntu mopidy[7384]: DEBUG    2022-10-24 13:20:26,833 [7384:HttpServer] mopidy.http.handlers
okt 24 13:20:26 Desktop-Ubuntu mopidy[7384]:   Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_random","params":{},"jsonrpc":"2.0","id":32}'
okt 24 13:20:26 Desktop-Ubuntu mopidy[7384]: DEBUG    2022-10-24 13:20:26,833 [7384:HttpServer] mopidy.http.handlers
okt 24 13:20:26 Desktop-Ubuntu mopidy[7384]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 31, "result": false}'
okt 24 13:20:26 Desktop-Ubuntu mopidy[7384]: DEBUG    2022-10-24 13:20:26,831 [7384:HttpServer] mopidy.http.handlers
okt 24 13:20:26 Desktop-Ubuntu mopidy[7384]:   Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_consume","params":{},"jsonrpc":"2.0","id":31}'
okt 24 13:20:26 Desktop-Ubuntu mopidy[7384]: DEBUG    2022-10-24 13:20:26,831 [7384:HttpServer] mopidy.http.handlers
okt 24 13:20:26 Desktop-Ubuntu mopidy[7384]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 30, "result": false}'
okt 24 13:20:26 Desktop-Ubuntu mopidy[7384]: DEBUG    2022-10-24 13:20:26,831 [7384:HttpServer] mopidy.http.handlers
okt 24 13:20:26 Desktop-Ubuntu mopidy[7384]:   Received WebSocket message from 127.0.0.1: '{"method":"core.mixer.get_mute","params":{},"jsonrpc":"2.0","id":30}'
okt 24 13:20:26 Desktop-Ubuntu mopidy[7384]: DEBUG    2022-10-24 13:20:26,830 [7384:HttpServer] mopidy.http.handlers
okt 24 13:20:26 Desktop-Ubuntu mopidy[7384]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 29, "result": 100}'
okt 24 13:20:26 Desktop-Ubuntu mopidy[7384]: DEBUG    2022-10-24 13:20:26,830 [7384:HttpServer] mopidy.http.handlers
okt 24 13:20:26 Desktop-Ubuntu mopidy[7384]:   Received WebSocket message from 127.0.0.1: '{"method":"core.mixer.get_volume","params":{},"jsonrpc":"2.0","id":29}'
okt 24 13:20:26 Desktop-Ubuntu mopidy[7384]: DEBUG    2022-10-24 13:20:26,829 [7384:HttpServer] mopidy.http.handlers
okt 24 13:20:26 Desktop-Ubuntu mopidy[7384]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 28, "result": "stopped"}'
okt 24 13:20:26 Desktop-Ubuntu mopidy[7384]: DEBUG    2022-10-24 13:20:26,829 [7384:HttpServer] mopidy.http.handlers
okt 24 13:20:26 Desktop-Ubuntu mopidy[7384]:   Received WebSocket message from 127.0.0.1: '{"method":"core.playback.get_state","params":{},"jsonrpc":"2.0","id":28}'
okt 24 13:20:26 Desktop-Ubuntu mopidy[7384]: DEBUG    2022-10-24 13:20:26,829 [7384:HttpServer] mopidy.http.handlers
okt 24 13:20:26 Desktop-Ubuntu mopidy[7384]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 27, "result": null}'
okt 24 13:20:26 Desktop-Ubuntu mopidy[7384]: DEBUG    2022-10-24 13:20:26,828 [7384:HttpServer] mopidy.http.handlers
okt 24 13:20:26 Desktop-Ubuntu mopidy[7384]:   Received WebSocket message from 127.0.0.1: '{"method":"core.playback.get_current_tl_track","params":{},"jsonrpc":"2.0","id":27}'
okt 24 13:20:26 Desktop-Ubuntu mopidy[7384]: DEBUG    2022-10-24 13:20:26,828 [7384:HttpServer] mopidy.http.handlers
okt 24 13:20:26 Desktop-Ubuntu mopidy[7384]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 26, "result": {"core.get_uri_schemes": {"description": "Get list of URI schemes we can handle", "params": []}, "core.get_version": {"description": "Get version of the Mopidy core API", "params": []}, "core.history.get_history": {"description": "Get the track history.\\n\\nThe timestamps are milliseconds since epoch.\\n\\n:returns: the track history\\n:rtype: list of (timestamp, :class:`mopidy.models.Ref`) tuples", "params": []}, "core.history.get_length": {"description": "Get the number of tracks in the history.\\n\\n:returns: the history length\\n:rtype: int", "params": []}, "core.library.browse": {"description": "Browse directories and tracks at the given ``uri``.\\n\\n``uri`` is a string which represents some directory belonging to a\\nbackend. To get the intial root directories for backends pass\\n:class:`None` as the URI.\\n\\nReturns a list of :class:`mopidy.models.Ref` objects for the\\ndirectories and tracks at the given ``uri``.\\n\\nThe :class:`~mopidy.models.Ref` objects representing tracks keep the\\ntrack\'s original URI. A matching pair of objects can look like this::\\n\\n    Track(uri=\'dummy:/foo.mp3\', name=\'foo\', artists=..., album=...)\\n    Ref.track(uri=\'dummy:/foo.mp3\', name=\'foo\')\\n\\nThe :class:`~mopidy.models.Ref` objects representing directories have\\nbackend specific URIs. These are opaque values, so no one but the\\nbackend that created them should try and derive any meaning from them.\\nThe only valid exception to this is checking the scheme, as it is used\\nto route browse requests to the correct backend.\\n\\nFor example, the dummy library\'s ``/bar`` directory could be returned\\nlike this::\\n\\n    Ref.directory(uri=\'dummy:directory:/bar\', name=\'bar\')\\n\\n:param string uri: URI to browse\\n:rtype: list of :class:`mopidy.models.Ref`\\n\\n.. versionadded:: 0.18", "params": [{"name": "uri"}]}, "core.library.get_distinct": {"description": "List distinct values for a given field from the library.\\n\\nThis has mainly been added to support the list commands the MPD\\nprotocol supports in a more sane fashion. Other frontends are not\\nrecommended to use this method.\\n\\n:param string field: Any one of ``uri``, ``track_name``, ``album``,\\n    ``artist``, ``albumartist``, ``composer``, ``performer``,\\n    ``track_no``, ``genre``, ``date``, ``comment``, ``disc_no``,\\n    ``musicbrainz_albumid``, ``musicbrainz_artistid``, or\\n    ``musicbrainz_trackid``.\\n:param dict query: Query to use for limiting results, see\\n    :meth:`search` for details about the query format.\\n:rtype: set of values corresponding to the requested field type.\\n\\n.. versionadded:: 1.0", "params": [{"name": "field"}, {"name": "query", "default": null}]}, "core.library.get_images": {"description": "Lookup the images for the given URIs\\n\\nBackends can use this to return image URIs for any URI they know about\\nbe it tracks, albums, playlists. The lookup result is a dictionary\\nmapping the provided URIs to lists of images.\\n\\nUnknown URIs or URIs the corresponding backend couldn\'t find anything\\nfor will simply return an empty list for that URI.\\n\\n:param uris: list of URIs to find images for\\n:type uris: list of string\\n:rtype: {uri: tuple of :class:`mopidy.models.Image`}\\n\\n.. versionadded:: 1.0", "params": [{"name": "uris"}]}, "core.library.lookup": {"description": "Lookup the given URIs.\\n\\nIf the URI expands to multiple tracks, the returned list will contain\\nthem all.\\n\\n:param uris: track URIs\\n:type uris: list of string\\n:rtype: {uri: list of :class:`mopidy.models.Track`}", "params": [{"name": "uris"}]}, "core.library.refresh": {"description": "Refresh library. Limit to URI and below if an URI is given.\\n\\n:param uri: directory or track URI\\n:type uri: string", "params": [{"name": "uri", "default": null}]}, "core.library.search": {"description": "Search the library for tracks where ``field`` contains ``values``.\\n\\n``field`` can be one of ``uri``, ``track_name``, ``album``, ``artist``,\\n``albumartist``, ``composer``, ``performer``, ``track_no``, ``genre``,\\n``date``, ``comment``, ``disc_no``, ``musicbrainz_albumid``,\\n``musicbrainz_artistid``, ``musicbrainz_trackid`` or ``any``.\\n\\nIf ``uris`` is given, the search is limited to results from within the\\nURI roots. For example passing ``uris=[\'file:\']`` will limit the search\\nto the local backend.\\n\\nExamples::\\n\\n    # Returns results matching \'a\' in any backend\\n    search({\'any\': [\'a\']})\\n\\n    # Returns results matching artist \'xyz\' in any backend\\n    search({\'artist\': [\'xyz\']})\\n\\n    # Returns results matching \'a\' and \'b\' and artist \'xyz\' in any\\n    # backend\\n    search({\'any\': [\'a\', \'b\'], \'artist\': [\'xyz\']})\\n\\n    # Returns results matching \'a\' if within the given URI roots\\n    # \\"file:///media/music\\" and \\"spotify:\\"\\n    search({\'any\': [\'a\']}, uris=[\'file:///media/music\', \'spotify:\'])\\n\\n    # Returns results matching artist \'xyz\' and \'abc\' in any backend\\n    search({\'artist\': [\'xyz\', \'abc\']})\\n\\n:param query: one or more queries to search for\\n:type query: dict\\n:param uris: zero or more URI roots to limit the search to\\n:type uris: list of string or :class:`None`\\n:param exact: if the search should use exact matching\\n:type exact: :class:`bool`\\n:rtype: list of :class:`mopidy.models.SearchResult`\\n\\n.. versionadded:: 1.0\\n    The ``exact`` keyword argument.", "params": [{"name": "query"}, {"name": "uris", "default": null}, {"name": "exact", "default": false}]}, "core.mixer.get_mute": {"description": "Get mute state.\\n\\n:class:`True` if muted, :class:`False` unmuted, :class:`None` if\\nunknown.", "params": []}, "core.mixer.get_volume": {"description": "Get the volume.\\n\\nInteger in range [0..100] or :class:`None` if unknown.\\n\\nThe volume scale is linear.", "params": []}, "core.mixer.set_mute": {"description": "Set mute state.\\n\\n:class:`True` to mute, :class:`False` to unmute.\\n\\nReturns :class:`True` if call is successful, otherwise :class:`False`.", "params": [{"name": "mute"}]}, "core.mixer.set_volume": {"description": "Set the volume.\\n\\nThe volume is defined as an integer in range [0..100].\\n\\nThe volume scale is linear.\\n\\nReturns :class:`True` if call is successful, otherwise :class:`False`.", "params": [{"name": "volume"}]}, "core.playback.get_current_tl_track": {"description": "Get the currently playing or selected track.\\n\\nReturns a :class:`mopidy.models.TlTrack` or :class:`None`.", "params": []}, "core.playback.get_current_tlid": {"description": "Get the currently playing or selected TLID.\\n\\nExtracted from :meth:`get_current_tl_track` for convenience.\\n\\nReturns a :class:`int` or :class:`None`.\\n\\n.. versionadded:: 1.1", "params": []}, "core.playback.get_current_track": {"description": "Get the currently playing or selected track.\\n\\nExtracted from :meth:`get_current_tl_track` for convenience.\\n\\nReturns a :class:`mopidy.models.Track` or :class:`None`.", "params": []}, "core.playback.get_state": {"description": "Get The playback state.", "params": []}, "core.playback.get_stream_title": {"description": "Get the current stream title or :class:`None`.", "params": []}, "core.playback.get_time_position": {"description": "Get time position in milliseconds.", "params": []}, "core.playback.next": {"description": "Change to the next track.\\n\\nThe current playback state will be kept. If it was playing, playing\\nwill continue. If it was paused, it will still be paused, etc.", "params": []}, "core.playback.pause": {"description": "Pause playback.", "params": []}, "core.playback.play": {"description": "Play the given track, or if the given tl_track and tlid is\\n:class:`None`, play the currently active track.\\n\\nNote that the track **must** already be in the tracklist.\\n\\n.. deprecated:: 3.0\\n    The ``tl_track`` argument. Use ``tlid`` instead.\\n\\n:param tl_track: track to play\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:param tlid: TLID of the track to play\\n:type tlid: :class:`int` or :class:`None`", "params": [{"name": "tl_track", "default": null}, {"name": "tlid", "default": null}]}, "core.playback.previous": {"description": "Change to the previous track.\\n\\nThe current playback state will be kept. If it was playing, playing\\nwill continue. If it was paused, it will still be paused, etc.", "params": []}, "core.playback.resume": {"description": "If paused, resume playing the current track.", "params": []}, "core.playback.seek": {"description": "Seeks to time position given in milliseconds.\\n\\n:param time_position: time position in milliseconds\\n:type time_position: int\\n:rtype: :class:`True` if successful, else :class:`False`", "params": [{"name": "time_position"}]}, "core.playback.set_state": {"description": "Set the playback state.\\n\\nMust be :attr:`PLAYING`, :attr:`PAUSED`, or :attr:`STOPPED`.\\n\\nPossible states and transitions:\\n\\n.. digraph:: state_transitions\\n\\n    \\"STOPPED\\" -> \\"PLAYING\\" [ label=\\"play\\" ]\\n    \\"STOPPED\\" -> \\"PAUSED\\" [ label=\\"pause\\" ]\\n    \\"PLAYING\\" -> \\"STOPPED\\" [ label=\\"stop\\" ]\\n    \\"PLAYING\\" -> \\"PAUSED\\" [ label=\\"pause\\" ]\\n    \\"PLAYING\\" -> \\"PLAYING\\" [ label=\\"play\\" ]\\n    \\"PAUSED\\" -> \\"PLAYING\\" [ label=\\"resume\\" ]\\n    \\"PAUSED\\" -> \\"STOPPED\\" [ label=\\"stop\\" ]", "params": [{"name": "new_state"}]}, "core.playback.stop": {"description": "Stop playing.", "params": []}, "core.playlists.as_list": {"description": "Get a list of the currently available playlists.\\n\\nReturns a list of :class:`~mopidy.models.Ref` objects referring to the\\nplaylists. In other words, no information about the playlists\' content\\nis given.\\n\\n:rtype: list of :class:`mopidy.models.Ref`\\n\\n.. versionadded:: 1.0", "params": []}, "core.playlists.create": {"description": "Create a new playlist.\\n\\nIf ``uri_scheme`` matches an URI scheme handled by a current backend,\\nthat backend is asked to create the playlist. If ``uri_scheme`` is\\n:class:`None` or doesn\'t match a current backend, the first backend is\\nasked to create the playlist.\\n\\nAll new playlists must be created by calling this method, and **not**\\nby creating new instances of :class:`mopidy.models.Playlist`.\\n\\n:param name: name of the new playlist\\n:type name: string\\n:param uri_scheme: use the backend matching the URI scheme\\n:type uri_scheme: string\\n:rtype: :class:`mopidy.models.Playlist` or :class:`None`", "params": [{"name": "name"}, {"name": "uri_scheme", "default": null}]}, "core.playlists.delete": {"description": "Delete playlist identified by the URI.\\n\\nIf the URI doesn\'t match the URI schemes handled by the current\\nbackends, nothing happens.\\n\\nReturns :class:`True` if deleted, :class:`False` otherwise.\\n\\n:param uri: URI of the playlist to delete\\n:type uri: string\\n:rtype: :class:`bool`\\n\\n.. versionchanged:: 2.2\\n    Return type defined.", "params": [{"name": "uri"}]}, "core.playlists.get_items": {"description": "Get the items in a playlist specified by ``uri``.\\n\\nReturns a list of :class:`~mopidy.models.Ref` objects referring to the\\nplaylist\'s items.\\n\\nIf a playlist with the given ``uri`` doesn\'t exist, it returns\\n:class:`None`.\\n\\n:rtype: list of :class:`mopidy.models.Ref`, or :class:`None`\\n\\n.. versionadded:: 1.0", "params": [{"name": "uri"}]}, "core.playlists.get_uri_schemes": {"description": "Get the list of URI schemes that support playlists.\\n\\n:rtype: list of string\\n\\n.. versionadded:: 2.0", "params": []}, "core.playlists.lookup": {"description": "Lookup playlist with given URI in both the set of playlists and in any\\nother playlist sources. Returns :class:`None` if not found.\\n\\n:param uri: playlist URI\\n:type uri: string\\n:rtype: :class:`mopidy.models.Playlist` or :class:`None`", "params": [{"name": "uri"}]}, "core.playlists.refresh": {"description": "Refresh the playlists in :attr:`playlists`.\\n\\nIf ``uri_scheme`` is :class:`None`, all backends are asked to refresh.\\nIf ``uri_scheme`` is an URI scheme handled by a backend, only that\\nbackend is asked to refresh. If ``uri_scheme`` doesn\'t match any\\ncurrent backend, nothing happens.\\n\\n:param uri_scheme: limit to the backend matching the URI scheme\\n:type uri_scheme: string", "params": [{"name": "uri_scheme", "default": null}]}, "core.playlists.save": {"description": "Save the playlist.\\n\\nFor a playlist to be saveable, it must have the ``uri`` attribute set.\\nYou must not set the ``uri`` atribute yourself, but use playlist\\nobjects returned by :meth:`create` or retrieved from :attr:`playlists`,\\nwhich will always give you saveable playlists.\\n\\nThe method returns the saved playlist. The return playlist may differ\\nfrom the saved playlist. E.g. if the playlist name was changed, the\\nreturned playlist may have a different URI. The caller of this method\\nmust throw away the playlist sent to this method, and use the\\nreturned playlist instead.\\n\\nIf the playlist\'s URI isn\'t set or doesn\'t match the URI scheme of a\\ncurrent backend, nothing is done and :class:`None` is returned.\\n\\n:param playlist: the playlist\\n:type playlist: :class:`mopidy.models.Playlist`\\n:rtype: :class:`mopidy.models.Playlist` or :class:`None`", "params": [{"name": "playlist"}]}, "core.tracklist.add": {"description": "Add tracks to the tracklist.\\n\\nIf ``uris`` is given instead of ``tracks``, the URIs are\\nlooked up in the library and the resulting tracks are added to the\\ntracklist.\\n\\nIf ``at_position`` is given, the tracks are inserted at the given\\nposition in the tracklist. If ``at_position`` is not given, the tracks\\nare appended to the end of the tracklist.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.\\n\\n:param tracks: tracks to add\\n:type tracks: list of :class:`mopidy.models.Track` or :class:`None`\\n:param at_position: position in tracklist to add tracks\\n:type at_position: int or :class:`None`\\n:param uris: list of URIs for tracks to add\\n:type uris: list of string or :class:`None`\\n:rtype: list of :class:`mopidy.models.TlTrack`\\n\\n.. versionadded:: 1.0\\n    The ``uris`` argument.\\n\\n.. deprecated:: 1.0\\n    The ``tracks`` argument. Use ``uris``.", "params": [{"name": "tracks", "default": null}, {"name": "at_position", "default": null}, {"name": "uris", "default": null}]}, "core.tracklist.clear": {"description": "Clear the tracklist.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.", "params": []}, "core.tracklist.eot_track": {"description": "The track that will be played after the given track.\\n\\nNot necessarily the same track as :meth:`next_track`.\\n\\n.. deprecated:: 3.0\\n    Use :meth:`get_eot_tlid` instead.\\n\\n:param tl_track: the reference track\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:rtype: :class:`mopidy.models.TlTrack` or :class:`None`", "params": [{"name": "tl_track"}]}, "core.tracklist.filter": {"description": "Filter the tracklist by the given criteria.\\n\\nEach rule in the criteria consists of a model field and a list of\\nvalues to compare it against. If the model field matches any of the\\nvalues, it may be returned.\\n\\nOnly tracks that match all the given criteria are returned.\\n\\nExamples::\\n\\n    # Returns tracks with TLIDs 1, 2, 3, or 4 (tracklist ID)\\n    filter({\'tlid\': [1, 2, 3, 4]})\\n\\n    # Returns track with URIs \'xyz\' or \'abc\'\\n    filter({\'uri\': [\'xyz\', \'abc\']})\\n\\n    # Returns track with a matching TLIDs (1, 3 or 6) and a\\n    # matching URI (\'xyz\' or \'abc\')\\n    filter({\'tlid\': [1, 3, 6], \'uri\': [\'xyz\', \'abc\']})\\n\\n:param criteria: one or more rules to match by\\n:type criteria: dict, of (string, list) pairs\\n:rtype: list of :class:`mopidy.models.TlTrack`", "params": [{"name": "criteria"}]}, "core.tracklist.get_consume": {"description": "Get consume mode.\\n\\n:class:`True`\\n    Tracks are removed from the tracklist when they have been played.\\n:class:`False`\\n    Tracks are not removed from the tracklist.", "params": []}, "core.tracklist.get_eot_tlid": {"description": "The TLID of the track that will be played after the current track.\\n\\nNot necessarily the same TLID as returned by :meth:`get_next_tlid`.\\n\\n:rtype: :class:`int` or :class:`None`\\n\\n.. versionadded:: 1.1", "params": []}, "core.tracklist.get_length": {"description": "Get length of the tracklist.", "params": []}, "core.tracklist.get_next_tlid": {"description": "The tlid of the track that will be played if calling\\n:meth:`mopidy.core.PlaybackController.next()`.\\n\\nFor normal playback this is the next track in the tracklist. If repeat\\nis enabled the next track can loop around the tracklist. When random is\\nenabled this should be a random track, all tracks should be played once\\nbefore the tracklist repeats.\\n\\n:rtype: :class:`int` or :class:`None`\\n\\n.. versionadded:: 1.1", "params": []}, "core.tracklist.get_previous_tlid": {"description": "Returns the TLID of the track that will be played if calling\\n:meth:`mopidy.core.PlaybackController.previous()`.\\n\\nFor normal playback this is the previous track in the tracklist. If\\nrandom and/or consume is enabled it should return the current track\\ninstead.\\n\\n:rtype: :class:`int` or :class:`None`\\n\\n.. versionadded:: 1.1", "params": []}, "core.tracklist.get_random": {"description": "Get random mode.\\n\\n:class:`True`\\n    Tracks are selected at random from the tracklist.\\n:class:`False`\\n    Tracks are played in the order of the tracklist.", "params": []}, "core.tracklist.get_repeat": {"description": "Get repeat mode.\\n\\n:class:`True`\\n    The tracklist is played repeatedly.\\n:class:`False`\\n    The tracklist is played once.", "params": []}, "core.tracklist.get_single": {"description": "Get single mode.\\n\\n:class:`True`\\n    Playback is stopped after current song, unless in ``repeat`` mode.\\n:class:`False`\\n    Playback continues after current song.", "params": []}, "core.tracklist.get_tl_tracks": {"description": "Get tracklist as list of :class:`mopidy.models.TlTrack`.", "params": []}, "core.tracklist.get_tracks": {"description": "Get tracklist as list of :class:`mopidy.models.Track`.", "params": []}, "core.tracklist.get_version": {"description": "Get the tracklist version.\\n\\nInteger which is increased every time the tracklist is changed. Is not\\nreset before Mopidy is restarted.", "params": []}, "core.tracklist.index": {"description": "The position of the given track in the tracklist.\\n\\nIf neither *tl_track* or *tlid* is given we return the index of\\nthe currently playing track.\\n\\n:param tl_track: the track to find the index of\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:param tlid: TLID of the track to find the index of\\n:type tlid: :class:`int` or :class:`None`\\n:rtype: :class:`int` or :class:`None`\\n\\n.. versionadded:: 1.1\\n    The *tlid* parameter", "params": [{"name": "tl_track", "default": null}, {"name": "tlid", "default": null}]}, "core.tracklist.move": {"description": "Move the tracks in the slice ``[start:end]`` to ``to_position``.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.\\n\\n:param start: position of first track to move\\n:type start: int\\n:param end: position after last track to move\\n:type end: int\\n:param to_position: new position for the tracks\\n:type to_position: int", "params": [{"name": "start"}, {"name": "end"}, {"name": "to_position"}]}, "core.tracklist.next_track": {"description": "The track that will be played if calling\\n:meth:`mopidy.core.PlaybackController.next()`.\\n\\nFor normal playback this is the next track in the tracklist. If repeat\\nis enabled the next track can loop around the tracklist. When random is\\nenabled this should be a random track, all tracks should be played once\\nbefore the tracklist repeats.\\n\\n.. deprecated:: 3.0\\n    Use :meth:`get_next_tlid` instead.\\n\\n:param tl_track: the reference track\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:rtype: :class:`mopidy.models.TlTrack` or :class:`None`", "params": [{"name": "tl_track"}]}, "core.tracklist.previous_track": {"description": "Returns the track that will be played if calling\\n:meth:`mopidy.core.PlaybackController.previous()`.\\n\\nFor normal playback this is the previous track in the tracklist. If\\nrandom and/or consume is enabled it should return the current track\\ninstead.\\n\\n.. deprecated:: 3.0\\n    Use :meth:`get_previous_tlid` instead.\\n\\n:param tl_track: the reference track\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:rtype: :class:`mopidy.models.TlTrack` or :class:`None`", "params": [{"name": "tl_track"}]}, "core.tracklist.remove": {"description": "Remove the matching tracks from the tracklist.\\n\\nUses :meth:`filter()` to lookup the tracks to remove.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.\\n\\n:param criteria: one or more rules to match by\\n:type criteria: dict, of (string, list) pairs\\n:rtype: list of :class:`mopidy.models.TlTrack` that were removed", "params": [{"name": "criteria"}]}, "core.tracklist.set_consume": {"description": "Set consume mode.\\n\\n:class:`True`\\n    Tracks are removed from the tracklist when they have been played.\\n:class:`False`\\n    Tracks are not removed from the tracklist.", "params": [{"name": "value"}]}, "core.tracklist.set_random": {"description": "Set random mode.\\n\\n:class:`True`\\n    Tracks are selected at random from the tracklist.\\n:class:`False`\\n    Tracks are played in the order of the tracklist.", "params": [{"name": "value"}]}, "core.tracklist.set_repeat": {"description": "Set repeat mode.\\n\\nTo repeat a single track, set both ``repeat`` and ``single``.\\n\\n:class:`True`\\n    The tracklist is played repeatedly.\\n:class:`False`\\n    The tracklist is played once.", "params": [{"name": "value"}]}, "core.tracklist.set_single": {"description": "Set single mode.\\n\\n:class:`True`\\n    Playback is stopped after current song, unless in ``repeat`` mode.\\n:class:`False`\\n    Playback continues after current song.", "params": [{"name": "value"}]}, "core.tracklist.shuffle": {"description": "Shuffles the entire tracklist. If ``start`` and ``end`` is given only\\nshuffles the slice ``[start:end]``.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.\\n\\n:param start: position of first track to shuffle\\n:type start: int or :class:`None`\\n:param end: position after last track to shuffle\\n:type end: int or :class:`None`", "params": [{"name": "start", "default": null}, {"name": "end", "default": null}]}, "core.tracklist.slice": {"description": "Returns a slice of the tracklist, limited by the given start and end\\npositions.\\n\\n:param start: position of first track to include in slice\\n:type start: int\\n:param end: position after last track to include in slice\\n:type end: int\\n:rtype: :class:`mopidy.models.TlTrack`", "params": [{"name": "start"}, {"name": "end"}]}}}'
okt 24 13:20:26 Desktop-Ubuntu mopidy[7384]: DEBUG    2022-10-24 13:20:26,822 [7384:HttpServer] mopidy.http.handlers
okt 24 13:20:26 Desktop-Ubuntu mopidy[7384]:   Received WebSocket message from 127.0.0.1: '{"method":"core.describe","jsonrpc":"2.0","id":26}'
okt 24 13:20:26 Desktop-Ubuntu mopidy[7384]: DEBUG    2022-10-24 13:20:26,818 [7384:HttpServer] mopidy.http.handlers
okt 24 13:20:26 Desktop-Ubuntu mopidy[7384]:   New WebSocket connection from 127.0.0.1
okt 24 13:20:26 Desktop-Ubuntu mopidy[7384]: DEBUG    2022-10-24 13:20:26,817 [7384:HttpServer] mopidy.http.handlers
okt 24 13:20:26 Desktop-Ubuntu mopidy[7384]:   101 GET /mopidy/ws/ (127.0.0.1) 20.06ms
okt 24 13:20:26 Desktop-Ubuntu mopidy[7384]: INFO     2022-10-24 13:20:26,816 [7384:HttpServer] tornado.access
okt 24 13:20:26 Desktop-Ubuntu mopidy[7384]:   Zeroconf service 'Mopidy HTTP server on Desktop-Ubuntu' (_mopidy-http._tcp at []:6680): Published
okt 24 13:20:26 Desktop-Ubuntu mopidy[7384]: DEBUG    2022-10-24 13:20:26,672 [7384:HttpFrontend-14 (_actor_loop)] mopidy.zeroconf
okt 24 13:20:26 Desktop-Ubuntu mopidy[7384]:   Zeroconf service 'Mopidy HTTP server on Desktop-Ubuntu' (_http._tcp at []:6680): Published
okt 24 13:20:26 Desktop-Ubuntu mopidy[7384]: DEBUG    2022-10-24 13:20:26,669 [7384:HttpFrontend-14 (_actor_loop)] mopidy.zeroconf
okt 24 13:20:26 Desktop-Ubuntu mopidy[7384]:     '/': <class 'tornado.web.RedirectHandler'>
okt 24 13:20:26 Desktop-Ubuntu mopidy[7384]:     '/mopidy/': <class 'mopidy.http.handlers.ClientListHandler'>
okt 24 13:20:26 Desktop-Ubuntu mopidy[7384]:     '/mopidy/(.+)': <class 'mopidy.http.handlers.StaticFileHandler'>
okt 24 13:20:26 Desktop-Ubuntu mopidy[7384]:     '/mopidy/rpc': <class 'mopidy.http.handlers.JsonRpcHandler'>
okt 24 13:20:26 Desktop-Ubuntu mopidy[7384]:     '/mopidy/ws/?': <class 'mopidy.http.handlers.WebSocketHandler'>
okt 24 13:20:26 Desktop-Ubuntu mopidy[7384]:     '/mopidy': <class 'mopidy.http.handlers.AddSlashHandler'>
okt 24 13:20:26 Desktop-Ubuntu mopidy[7384]:     '/iris/(.*)': <class 'mopidy_iris.handlers.ReactRouterHandler'>
okt 24 13:20:26 Desktop-Ubuntu mopidy[7384]:     '/iris/((.*)(?:css|js|json|map)$)': <class 'tornado.web.StaticFileHandler'>
okt 24 13:20:26 Desktop-Ubuntu mopidy[7384]:     '/iris/assets/(.*)': <class 'tornado.web.StaticFileHandler'>
okt 24 13:20:26 Desktop-Ubuntu mopidy[7384]:     '/iris/ws/?': <class 'mopidy_iris.handlers.WebsocketHandler'>
okt 24 13:20:26 Desktop-Ubuntu mopidy[7384]:     '/iris/http/([^/]*)': <class 'mopidy_iris.handlers.HttpHandler'>
okt 24 13:20:26 Desktop-Ubuntu mopidy[7384]:     '/iris': <class 'mopidy.http.handlers.AddSlashHandler'>
okt 24 13:20:26 Desktop-Ubuntu mopidy[7384]:     '/local/(.+)': <class 'mopidy_local.web.ImageHandler'>
okt 24 13:20:26 Desktop-Ubuntu mopidy[7384]:     '/local/(index.html)?': <class 'mopidy_local.web.IndexHandler'>
okt 24 13:20:26 Desktop-Ubuntu mopidy[7384]:     '/local': <class 'mopidy.http.handlers.AddSlashHandler'>
okt 24 13:20:26 Desktop-Ubuntu mopidy[7384]:     '/youtube/(.*\\.(?:webm|m4a|mp3|ogg))': <class 'mopidy_youtube.web.AudioHandler'>
okt 24 13:20:26 Desktop-Ubuntu mopidy[7384]:     '/youtube/(.*\\.jpg)': <class 'mopidy_youtube.web.ImageHandler'>
okt 24 13:20:26 Desktop-Ubuntu mopidy[7384]:     '/youtube/(index.html|image.html)?': <class 'mopidy_youtube.web.IndexHandler'>
okt 24 13:20:26 Desktop-Ubuntu mopidy[7384]:     '/youtube': <class 'mopidy.http.handlers.AddSlashHandler'>
okt 24 13:20:26 Desktop-Ubuntu mopidy[7384]:   HTTP routes from extensions:
okt 24 13:20:26 Desktop-Ubuntu mopidy[7384]: DEBUG    2022-10-24 13:20:26,665 [7384:HttpServer] mopidy.http.actor
okt 24 13:20:26 Desktop-Ubuntu mopidy[7384]:   Default webclient is mopidy
okt 24 13:20:26 Desktop-Ubuntu mopidy[7384]: DEBUG    2022-10-24 13:20:26,665 [7384:HttpServer] mopidy.http.actor
okt 24 13:20:26 Desktop-Ubuntu mopidy[7384]:   Loaded HTTP extension: mopidy
okt 24 13:20:26 Desktop-Ubuntu mopidy[7384]: DEBUG    2022-10-24 13:20:26,664 [7384:HttpServer] mopidy.http.actor
okt 24 13:20:26 Desktop-Ubuntu mopidy[7384]:   Loaded HTTP extension: iris
okt 24 13:20:26 Desktop-Ubuntu mopidy[7384]: DEBUG    2022-10-24 13:20:26,664 [7384:HttpServer] mopidy.http.actor
okt 24 13:20:26 Desktop-Ubuntu mopidy[7384]:   Loaded HTTP extension: local
okt 24 13:20:26 Desktop-Ubuntu mopidy[7384]: DEBUG    2022-10-24 13:20:26,663 [7384:HttpServer] mopidy.http.actor
okt 24 13:20:26 Desktop-Ubuntu mopidy[7384]:   Loaded HTTP extension: youtube
okt 24 13:20:26 Desktop-Ubuntu mopidy[7384]: DEBUG    2022-10-24 13:20:26,662 [7384:HttpServer] mopidy.http.actor
okt 24 13:20:26 Desktop-Ubuntu mopidy[7384]:   Starting GLib mainloop
okt 24 13:20:26 Desktop-Ubuntu mopidy[7384]: INFO     2022-10-24 13:20:26,658 [7384:MainThread] mopidy.commands
okt 24 13:20:26 Desktop-Ubuntu mopidy[7384]:   Using selector: EpollSelector
okt 24 13:20:26 Desktop-Ubuntu mopidy[7384]: DEBUG    2022-10-24 13:20:26,658 [7384:HttpServer] asyncio
okt 24 13:20:26 Desktop-Ubuntu mopidy[7384]:   HttpFrontend took 1ms
okt 24 13:20:26 Desktop-Ubuntu mopidy[7384]: TRACE    2022-10-24 13:20:26,657 [7384:MainThread] mopidy.internal.timer
okt 24 13:20:26 Desktop-Ubuntu mopidy[7384]:   HTTP server running at [::ffff:127.0.0.1]:6680
okt 24 13:20:26 Desktop-Ubuntu mopidy[7384]: INFO     2022-10-24 13:20:26,657 [7384:HttpFrontend-14 (_actor_loop)] mopidy.http.actor
okt 24 13:20:26 Desktop-Ubuntu mopidy[7384]:   Starting HttpFrontend (urn:uuid:a470f261-0ad1-4597-aedf-cc2cb3772ba3)
okt 24 13:20:26 Desktop-Ubuntu mopidy[7384]: DEBUG    2022-10-24 13:20:26,657 [7384:MainThread] pykka
okt 24 13:20:26 Desktop-Ubuntu mopidy[7384]:   Registered HttpFrontend (urn:uuid:a470f261-0ad1-4597-aedf-cc2cb3772ba3)
okt 24 13:20:26 Desktop-Ubuntu mopidy[7384]: DEBUG    2022-10-24 13:20:26,657 [7384:MainThread] pykka
okt 24 13:20:26 Desktop-Ubuntu mopidy[7384]:   Starting HTTP server
okt 24 13:20:26 Desktop-Ubuntu mopidy[7384]: DEBUG    2022-10-24 13:20:26,657 [7384:MainThread] mopidy.http.actor
okt 24 13:20:26 Desktop-Ubuntu mopidy[7384]:   IrisFrontend took 0ms
okt 24 13:20:26 Desktop-Ubuntu mopidy[7384]: TRACE    2022-10-24 13:20:26,656 [7384:MainThread] mopidy.internal.timer
okt 24 13:20:26 Desktop-Ubuntu mopidy[7384]:   Starting Iris 3.64.1
okt 24 13:20:26 Desktop-Ubuntu mopidy[7384]: INFO     2022-10-24 13:20:26,656 [7384:IrisFrontend-12 (_actor_loop)] mopidy_iris.core
okt 24 13:20:26 Desktop-Ubuntu mopidy[7384]:   Starting IrisFrontend (urn:uuid:b538e73e-d443-4bd3-9f2d-bb4fc255b88d)
okt 24 13:20:26 Desktop-Ubuntu mopidy[7384]: DEBUG    2022-10-24 13:20:26,656 [7384:MainThread] pykka
okt 24 13:20:26 Desktop-Ubuntu mopidy[7384]:   Registered IrisFrontend (urn:uuid:b538e73e-d443-4bd3-9f2d-bb4fc255b88d)
okt 24 13:20:26 Desktop-Ubuntu mopidy[7384]: DEBUG    2022-10-24 13:20:26,656 [7384:MainThread] pykka
okt 24 13:20:26 Desktop-Ubuntu mopidy[7384]:   YTMusicScrobbleFE took 0ms
okt 24 13:20:26 Desktop-Ubuntu mopidy[7384]: TRACE    2022-10-24 13:20:26,656 [7384:MainThread] mopidy.internal.timer
okt 24 13:20:26 Desktop-Ubuntu mopidy[7384]:   Starting YTMusicScrobbleFE (urn:uuid:2409cb6a-a1f1-4fd8-9072-bb7afb234f8e)
okt 24 13:20:26 Desktop-Ubuntu mopidy[7384]: DEBUG    2022-10-24 13:20:26,655 [7384:MainThread] pykka
okt 24 13:20:26 Desktop-Ubuntu mopidy[7384]:   Registered YTMusicScrobbleFE (urn:uuid:2409cb6a-a1f1-4fd8-9072-bb7afb234f8e)
okt 24 13:20:26 Desktop-Ubuntu mopidy[7384]: DEBUG    2022-10-24 13:20:26,655 [7384:MainThread] pykka
okt 24 13:20:26 Desktop-Ubuntu mopidy[7384]:   YouTubeCoreListener took 0ms
okt 24 13:20:26 Desktop-Ubuntu mopidy[7384]: TRACE    2022-10-24 13:20:26,655 [7384:MainThread] mopidy.internal.timer
okt 24 13:20:26 Desktop-Ubuntu mopidy[7384]:   Starting YouTubeCoreListener (urn:uuid:d233d7de-d460-43ba-aeb4-3b8eb74628db)
okt 24 13:20:26 Desktop-Ubuntu mopidy[7384]: DEBUG    2022-10-24 13:20:26,655 [7384:MainThread] pykka
okt 24 13:20:26 Desktop-Ubuntu mopidy[7384]:   Registered YouTubeCoreListener (urn:uuid:d233d7de-d460-43ba-aeb4-3b8eb74628db)
okt 24 13:20:26 Desktop-Ubuntu mopidy[7384]: DEBUG    2022-10-24 13:20:26,655 [7384:MainThread] pykka
okt 24 13:20:26 Desktop-Ubuntu mopidy[7384]:   YouTubeAutoplayer took 0ms
okt 24 13:20:26 Desktop-Ubuntu mopidy[7384]: TRACE    2022-10-24 13:20:26,655 [7384:MainThread] mopidy.internal.timer
okt 24 13:20:26 Desktop-Ubuntu mopidy[7384]:   Starting YouTubeAutoplayer (urn:uuid:6a305ae6-11b2-46bf-af37-1170d19e1125)
okt 24 13:20:26 Desktop-Ubuntu mopidy[7384]: DEBUG    2022-10-24 13:20:26,654 [7384:MainThread] pykka
okt 24 13:20:26 Desktop-Ubuntu mopidy[7384]:   Registered YouTubeAutoplayer (urn:uuid:6a305ae6-11b2-46bf-af37-1170d19e1125)
okt 24 13:20:26 Desktop-Ubuntu mopidy[7384]: DEBUG    2022-10-24 13:20:26,654 [7384:MainThread] pykka
okt 24 13:20:26 Desktop-Ubuntu mopidy[7384]:   Starting Mopidy frontends: YouTubeAutoplayer, YouTubeCoreListener, YTMusicScrobbleFE, IrisFrontend, HttpFrontend
okt 24 13:20:26 Desktop-Ubuntu mopidy[7384]: INFO     2022-10-24 13:20:26,654 [7384:MainThread] mopidy.commands
okt 24 13:20:26 Desktop-Ubuntu mopidy[7384]:   Starting Core (urn:uuid:895731b5-21c9-486c-bcf7-9c3bfb2788a2)
okt 24 13:20:26 Desktop-Ubuntu mopidy[7384]: DEBUG    2022-10-24 13:20:26,650 [7384:MainThread] pykka
okt 24 13:20:26 Desktop-Ubuntu mopidy[7384]:   Registered Core (urn:uuid:895731b5-21c9-486c-bcf7-9c3bfb2788a2)
okt 24 13:20:26 Desktop-Ubuntu mopidy[7384]: DEBUG    2022-10-24 13:20:26,650 [7384:MainThread] pykka
okt 24 13:20:26 Desktop-Ubuntu mopidy[7384]:   Starting Mopidy core
okt 24 13:20:26 Desktop-Ubuntu mopidy[7384]: INFO     2022-10-24 13:20:26,645 [7384:MainThread] mopidy.commands
okt 24 13:20:26 Desktop-Ubuntu mopidy[7384]:   https://music.youtube.com:443 "GET / HTTP/1.1" 200 None
okt 24 13:20:26 Desktop-Ubuntu mopidy[7384]: DEBUG    2022-10-24 13:20:26,083 [7384:YouTubeBackend-3 (_actor_loop)] urllib3.connectionpool
okt 24 13:20:25 Desktop-Ubuntu mopidy[7384]:   StreamBackend took 3ms
okt 24 13:20:25 Desktop-Ubuntu mopidy[7384]: TRACE    2022-10-24 13:20:25,952 [7384:MainThread] mopidy.internal.timer
okt 24 13:20:25 Desktop-Ubuntu mopidy[7384]:   Starting StreamBackend (urn:uuid:0b642880-85cb-4bbc-b2fe-831ea3bea32d)
okt 24 13:20:25 Desktop-Ubuntu mopidy[7384]: DEBUG    2022-10-24 13:20:25,950 [7384:MainThread] pykka
okt 24 13:20:25 Desktop-Ubuntu mopidy[7384]:   Registered StreamBackend (urn:uuid:0b642880-85cb-4bbc-b2fe-831ea3bea32d)
okt 24 13:20:25 Desktop-Ubuntu mopidy[7384]: DEBUG    2022-10-24 13:20:25,950 [7384:MainThread] pykka
okt 24 13:20:25 Desktop-Ubuntu mopidy[7384]:   M3UBackend took 3ms
okt 24 13:20:25 Desktop-Ubuntu mopidy[7384]: TRACE    2022-10-24 13:20:25,949 [7384:MainThread] mopidy.internal.timer
okt 24 13:20:25 Desktop-Ubuntu mopidy[7384]:   Starting M3UBackend (urn:uuid:bd8eb8bf-3450-4d2e-aab0-b2f1c03a27e4)
okt 24 13:20:25 Desktop-Ubuntu mopidy[7384]: DEBUG    2022-10-24 13:20:25,948 [7384:MainThread] pykka
okt 24 13:20:25 Desktop-Ubuntu mopidy[7384]:   Registered M3UBackend (urn:uuid:bd8eb8bf-3450-4d2e-aab0-b2f1c03a27e4)
okt 24 13:20:25 Desktop-Ubuntu mopidy[7384]: DEBUG    2022-10-24 13:20:25,948 [7384:MainThread] pykka
okt 24 13:20:25 Desktop-Ubuntu mopidy[7384]:   FileBackend took 2ms
okt 24 13:20:25 Desktop-Ubuntu mopidy[7384]: TRACE    2022-10-24 13:20:25,945 [7384:MainThread] mopidy.internal.timer
okt 24 13:20:25 Desktop-Ubuntu mopidy[7384]:   Starting FileBackend (urn:uuid:ff980b76-37fd-4df9-9bf5-9ff17814dc93)
okt 24 13:20:25 Desktop-Ubuntu mopidy[7384]: DEBUG    2022-10-24 13:20:25,942 [7384:MainThread] pykka
okt 24 13:20:25 Desktop-Ubuntu mopidy[7384]:   Registered FileBackend (urn:uuid:ff980b76-37fd-4df9-9bf5-9ff17814dc93)
okt 24 13:20:25 Desktop-Ubuntu mopidy[7384]: DEBUG    2022-10-24 13:20:25,942 [7384:MainThread] pykka
okt 24 13:20:25 Desktop-Ubuntu mopidy[7384]:   Failed expanding path ($XDG_MUSIC_DIR) from file/media_dirs config value.
okt 24 13:20:25 Desktop-Ubuntu mopidy[7384]: DEBUG    2022-10-24 13:20:25,942 [7384:MainThread] mopidy.file.library
okt 24 13:20:25 Desktop-Ubuntu mopidy[7384]:   Audio output set to "pulsesink server=127.0.0.1"
okt 24 13:20:25 Desktop-Ubuntu mopidy[7384]: INFO     2022-10-24 13:20:25,941 [7384:Audio-2 (_actor_loop)] mopidy.audio.actor
okt 24 13:20:25 Desktop-Ubuntu mopidy[7384]: AttributeError: 'YTMusic' object has no attribute 'headers'
okt 24 13:20:25 Desktop-Ubuntu mopidy[7384]:     if 'x-goog-visitor-id' not in self.headers:
okt 24 13:20:25 Desktop-Ubuntu mopidy[7384]:   File "/usr/local/lib/python3.10/dist-packages/ytmusicapi/ytmusic.py", line 98, in __init__
okt 24 13:20:25 Desktop-Ubuntu mopidy[7384]:     self.api = YTMusic(self._ytmusicapi_auth_json)
okt 24 13:20:25 Desktop-Ubuntu mopidy[7384]:   File "/usr/local/lib/python3.10/dist-packages/mopidy_ytmusic/backend.py", line 65, in __init__
okt 24 13:20:25 Desktop-Ubuntu mopidy[7384]:     obj = cls(*args, **kwargs)
okt 24 13:20:25 Desktop-Ubuntu mopidy[7384]:   File "/usr/lib/python3/dist-packages/pykka/_actor.py", line 91, in start
okt 24 13:20:25 Desktop-Ubuntu mopidy[7384]:     backend = backend_class.start(
okt 24 13:20:25 Desktop-Ubuntu mopidy[7384]:   File "/usr/lib/python3/dist-packages/mopidy/commands.py", line 412, in start_backends
okt 24 13:20:25 Desktop-Ubuntu mopidy[7384]:     yield
okt 24 13:20:25 Desktop-Ubuntu mopidy[7384]:   File "/usr/lib/python3/dist-packages/mopidy/commands.py", line 248, in _actor_error_handling
okt 24 13:20:25 Desktop-Ubuntu mopidy[7384]: Traceback (most recent call last):
okt 24 13:20:25 Desktop-Ubuntu mopidy[7384]:   Got un-handled exception from YTMusicBackend
okt 24 13:20:25 Desktop-Ubuntu mopidy[7384]: ERROR    2022-10-24 13:20:25,941 [7384:MainThread] mopidy.commands
okt 24 13:20:25 Desktop-Ubuntu mopidy[7384]:   LocalBackend took 6ms
okt 24 13:20:25 Desktop-Ubuntu mopidy[7384]: TRACE    2022-10-24 13:20:25,940 [7384:MainThread] mopidy.internal.timer
okt 24 13:20:25 Desktop-Ubuntu mopidy[7384]:   Starting new HTTPS connection (1): music.youtube.com:443
okt 24 13:20:25 Desktop-Ubuntu mopidy[7384]: DEBUG    2022-10-24 13:20:25,938 [7384:YouTubeBackend-3 (_actor_loop)] urllib3.connectionpool
okt 24 13:20:25 Desktop-Ubuntu mopidy[7384]:   Starting LocalBackend (urn:uuid:93ee21a9-d983-4aea-9986-bf5df9b997be)
okt 24 13:20:25 Desktop-Ubuntu mopidy[7384]: DEBUG    2022-10-24 13:20:25,936 [7384:MainThread] pykka
okt 24 13:20:25 Desktop-Ubuntu mopidy[7384]:   Registered LocalBackend (urn:uuid:93ee21a9-d983-4aea-9986-bf5df9b997be)
okt 24 13:20:25 Desktop-Ubuntu mopidy[7384]: DEBUG    2022-10-24 13:20:25,936 [7384:MainThread] pykka
okt 24 13:20:25 Desktop-Ubuntu mopidy[7384]:   Using YouTube Music API
okt 24 13:20:25 Desktop-Ubuntu mopidy[7384]: INFO     2022-10-24 13:20:25,934 [7384:YouTubeBackend-3 (_actor_loop)] mopidy_youtube
okt 24 13:20:25 Desktop-Ubuntu mopidy[7384]:   using jAPI
okt 24 13:20:25 Desktop-Ubuntu mopidy[7384]: INFO     2022-10-24 13:20:25,934 [7384:YouTubeBackend-3 (_actor_loop)] mopidy_youtube
okt 24 13:20:25 Desktop-Ubuntu mopidy[7384]:   file caching enabled (at /var/cache/mopidy/youtube)
okt 24 13:20:25 Desktop-Ubuntu mopidy[7384]: INFO     2022-10-24 13:20:25,934 [7384:YouTubeBackend-3 (_actor_loop)] mopidy_youtube
okt 24 13:20:25 Desktop-Ubuntu mopidy[7384]:   YouTubeBackend took 4ms
okt 24 13:20:25 Desktop-Ubuntu mopidy[7384]: TRACE    2022-10-24 13:20:25,933 [7384:MainThread] mopidy.internal.timer
okt 24 13:20:25 Desktop-Ubuntu mopidy[7384]:   Starting YouTubeBackend (urn:uuid:737f8e2d-ebf3-4c5a-95be-2c598b7aa53a)
okt 24 13:20:25 Desktop-Ubuntu mopidy[7384]: DEBUG    2022-10-24 13:20:25,930 [7384:MainThread] pykka
okt 24 13:20:25 Desktop-Ubuntu mopidy[7384]:   Registered YouTubeBackend (urn:uuid:737f8e2d-ebf3-4c5a-95be-2c598b7aa53a)
okt 24 13:20:25 Desktop-Ubuntu mopidy[7384]: DEBUG    2022-10-24 13:20:25,929 [7384:MainThread] pykka
okt 24 13:20:25 Desktop-Ubuntu mopidy[7384]:   Starting Mopidy backends: YouTubeBackend, LocalBackend, YTMusicBackend, FileBackend, M3UBackend, StreamBackend
okt 24 13:20:25 Desktop-Ubuntu mopidy[7384]: INFO     2022-10-24 13:20:25,928 [7384:MainThread] mopidy.commands
okt 24 13:20:25 Desktop-Ubuntu mopidy[7384]:   Starting Audio (urn:uuid:42fbdb43-b970-4cce-9b57-eea0d936f221)
okt 24 13:20:25 Desktop-Ubuntu mopidy[7384]: DEBUG    2022-10-24 13:20:25,927 [7384:MainThread] pykka
okt 24 13:20:25 Desktop-Ubuntu mopidy[7384]:   Registered Audio (urn:uuid:42fbdb43-b970-4cce-9b57-eea0d936f221)
okt 24 13:20:25 Desktop-Ubuntu mopidy[7384]: DEBUG    2022-10-24 13:20:25,927 [7384:MainThread] pykka
okt 24 13:20:25 Desktop-Ubuntu mopidy[7384]:   Starting Mopidy audio
okt 24 13:20:25 Desktop-Ubuntu mopidy[7384]: INFO     2022-10-24 13:20:25,927 [7384:MainThread] mopidy.commands
okt 24 13:20:25 Desktop-Ubuntu mopidy[7384]:   Mixer volume left unchanged
okt 24 13:20:25 Desktop-Ubuntu mopidy[7384]: DEBUG    2022-10-24 13:20:25,927 [7384:MainThread] mopidy.commands
okt 24 13:20:25 Desktop-Ubuntu mopidy[7384]:   Starting SoftwareMixer (urn:uuid:08f8a387-53ab-4194-951a-341803666add)
okt 24 13:20:25 Desktop-Ubuntu mopidy[7384]: DEBUG    2022-10-24 13:20:25,926 [7384:MainThread] pykka
okt 24 13:20:25 Desktop-Ubuntu mopidy[7384]:   Registered SoftwareMixer (urn:uuid:08f8a387-53ab-4194-951a-341803666add)
okt 24 13:20:25 Desktop-Ubuntu mopidy[7384]: DEBUG    2022-10-24 13:20:25,926 [7384:MainThread] pykka
okt 24 13:20:25 Desktop-Ubuntu mopidy[7384]:   Starting Mopidy mixer: SoftwareMixer
okt 24 13:20:25 Desktop-Ubuntu mopidy[7384]: INFO     2022-10-24 13:20:25,926 [7384:MainThread] mopidy.commands
okt 24 13:20:25 Desktop-Ubuntu mopidy[7384]:   Available Mopidy mixers: SoftwareMixer
okt 24 13:20:25 Desktop-Ubuntu mopidy[7384]: DEBUG    2022-10-24 13:20:25,925 [7384:MainThread] mopidy.commands
okt 24 13:20:25 Desktop-Ubuntu mopidy[7384]:   Disabled extensions: soundcloud
okt 24 13:20:25 Desktop-Ubuntu mopidy[7384]: INFO     2022-10-24 13:20:25,831 [7384:MainThread] mopidy.__main__
okt 24 13:20:25 Desktop-Ubuntu mopidy[7384]:   Enabled extensions: youtube, file, ytmusic, m3u, http, iris, stream, local, softwaremixer
okt 24 13:20:25 Desktop-Ubuntu mopidy[7384]: INFO     2022-10-24 13:20:25,831 [7384:MainThread] mopidy.__main__
okt 24 13:20:25 Desktop-Ubuntu mopidy[7384]:   Validating extension: stream
okt 24 13:20:25 Desktop-Ubuntu mopidy[7384]: DEBUG    2022-10-24 13:20:25,831 [7384:MainThread] mopidy.ext
okt 24 13:20:25 Desktop-Ubuntu mopidy[7384]:   Validating extension: softwaremixer
okt 24 13:20:25 Desktop-Ubuntu mopidy[7384]: DEBUG    2022-10-24 13:20:25,831 [7384:MainThread] mopidy.ext
okt 24 13:20:25 Desktop-Ubuntu mopidy[7384]:   Validating extension: m3u
okt 24 13:20:25 Desktop-Ubuntu mopidy[7384]: DEBUG    2022-10-24 13:20:25,831 [7384:MainThread] mopidy.ext
okt 24 13:20:25 Desktop-Ubuntu mopidy[7384]:   Validating extension: http
okt 24 13:20:25 Desktop-Ubuntu mopidy[7384]: DEBUG    2022-10-24 13:20:25,777 [7384:MainThread] mopidy.ext
okt 24 13:20:25 Desktop-Ubuntu mopidy[7384]:   Validating extension: file
okt 24 13:20:25 Desktop-Ubuntu mopidy[7384]: DEBUG    2022-10-24 13:20:25,777 [7384:MainThread] mopidy.ext
okt 24 13:20:25 Desktop-Ubuntu mopidy[7384]:   Validating extension: iris
okt 24 13:20:25 Desktop-Ubuntu mopidy[7384]: DEBUG    2022-10-24 13:20:25,768 [7384:MainThread] mopidy.ext
okt 24 13:20:25 Desktop-Ubuntu mopidy[7384]:   Validating extension: ytmusic
okt 24 13:20:25 Desktop-Ubuntu mopidy[7384]: DEBUG    2022-10-24 13:20:25,751 [7384:MainThread] mopidy.ext
okt 24 13:20:25 Desktop-Ubuntu mopidy[7384]:   Validating extension: soundcloud
okt 24 13:20:25 Desktop-Ubuntu mopidy[7384]: DEBUG    2022-10-24 13:20:25,725 [7384:MainThread] mopidy.ext
okt 24 13:20:25 Desktop-Ubuntu mopidy[7384]:   Validating extension: local
okt 24 13:20:25 Desktop-Ubuntu mopidy[7384]: DEBUG    2022-10-24 13:20:25,704 [7384:MainThread] mopidy.ext
okt 24 13:20:25 Desktop-Ubuntu mopidy[7384]:   Validating extension: youtube
okt 24 13:20:25 Desktop-Ubuntu mopidy[7384]: DEBUG    2022-10-24 13:20:25,653 [7384:MainThread] mopidy.ext
okt 24 13:20:25 Desktop-Ubuntu mopidy[7384]:   Ignoring config section 'jukebox' because no matching extension was found
okt 24 13:20:25 Desktop-Ubuntu mopidy[7384]: WARNING  2022-10-24 13:20:25,651 [7384:MainThread] mopidy.config
okt 24 13:20:25 Desktop-Ubuntu mopidy[7384]:   Loading config from command line options
okt 24 13:20:25 Desktop-Ubuntu mopidy[7384]: INFO     2022-10-24 13:20:25,648 [7384:MainThread] mopidy.config
okt 24 13:20:25 Desktop-Ubuntu mopidy[7384]:   Loading config from file:///etc/mopidy/mopidy.conf
okt 24 13:20:25 Desktop-Ubuntu mopidy[7384]: INFO     2022-10-24 13:20:25,647 [7384:MainThread] mopidy.config
okt 24 13:20:25 Desktop-Ubuntu mopidy[7384]:   Loading config from file:///usr/share/mopidy/conf.d/mopidy.conf
okt 24 13:20:25 Desktop-Ubuntu mopidy[7384]: INFO     2022-10-24 13:20:25,647 [7384:MainThread] mopidy.config
okt 24 13:20:25 Desktop-Ubuntu mopidy[7384]:   Loading config from builtin defaults
okt 24 13:20:25 Desktop-Ubuntu mopidy[7384]: INFO     2022-10-24 13:20:25,645 [7384:MainThread] mopidy.config
okt 24 13:20:25 Desktop-Ubuntu mopidy[7384]:   Fetching passwords from your keyring failed. Any passwords stored in the keyring will not be available. (org.freedesktop.DBus.Error.NotSupported: Unable to autolaunch a dbus-daemon without a $DISPLAY for X11)
okt 24 13:20:25 Desktop-Ubuntu mopidy[7384]: DEBUG    2022-10-24 13:20:25,645 [7384:MainThread] mopidy.config.keyring
okt 24 13:20:25 Desktop-Ubuntu mopidy[7384]:   Discovered extensions: youtube, local, soundcloud, ytmusic, iris, file, http, m3u, softwaremixer, stream
okt 24 13:20:25 Desktop-Ubuntu mopidy[7384]: DEBUG    2022-10-24 13:20:25,643 [7384:MainThread] mopidy.ext
okt 24 13:20:25 Desktop-Ubuntu mopidy[7384]:   Loaded extension: Mopidy-Stream 3.3.0
okt 24 13:20:25 Desktop-Ubuntu mopidy[7384]: DEBUG    2022-10-24 13:20:25,640 [7384:MainThread] mopidy.ext
okt 24 13:20:25 Desktop-Ubuntu mopidy[7384]:   Loading entry point: stream = mopidy.stream:Extension
okt 24 13:20:25 Desktop-Ubuntu mopidy[7384]: DEBUG    2022-10-24 13:20:25,639 [7384:MainThread] mopidy.ext
okt 24 13:20:25 Desktop-Ubuntu mopidy[7384]:   Loaded extension: Mopidy-SoftwareMixer 3.3.0
okt 24 13:20:25 Desktop-Ubuntu mopidy[7384]: DEBUG    2022-10-24 13:20:25,639 [7384:MainThread] mopidy.ext
okt 24 13:20:25 Desktop-Ubuntu mopidy[7384]:   Loading entry point: softwaremixer = mopidy.softwaremixer:Extension
okt 24 13:20:25 Desktop-Ubuntu mopidy[7384]: DEBUG    2022-10-24 13:20:25,639 [7384:MainThread] mopidy.ext
okt 24 13:20:25 Desktop-Ubuntu mopidy[7384]:   Loaded extension: Mopidy-M3U 3.3.0
okt 24 13:20:25 Desktop-Ubuntu mopidy[7384]: DEBUG    2022-10-24 13:20:25,639 [7384:MainThread] mopidy.ext
okt 24 13:20:25 Desktop-Ubuntu mopidy[7384]:   Loading entry point: m3u = mopidy.m3u:Extension
okt 24 13:20:25 Desktop-Ubuntu mopidy[7384]: DEBUG    2022-10-24 13:20:25,639 [7384:MainThread] mopidy.ext
okt 24 13:20:25 Desktop-Ubuntu mopidy[7384]:   Loaded extension: Mopidy-HTTP 3.3.0
okt 24 13:20:25 Desktop-Ubuntu mopidy[7384]: DEBUG    2022-10-24 13:20:25,639 [7384:MainThread] mopidy.ext
okt 24 13:20:25 Desktop-Ubuntu mopidy[7384]:   Loading entry point: http = mopidy.http:Extension
okt 24 13:20:25 Desktop-Ubuntu mopidy[7384]: DEBUG    2022-10-24 13:20:25,638 [7384:MainThread] mopidy.ext
okt 24 13:20:25 Desktop-Ubuntu mopidy[7384]:   Loaded extension: Mopidy-File 3.3.0
okt 24 13:20:25 Desktop-Ubuntu mopidy[7384]: DEBUG    2022-10-24 13:20:25,638 [7384:MainThread] mopidy.ext
okt 24 13:20:25 Desktop-Ubuntu mopidy[7384]:   Loading entry point: file = mopidy.file:Extension
okt 24 13:20:25 Desktop-Ubuntu mopidy[7384]: DEBUG    2022-10-24 13:20:25,638 [7384:MainThread] mopidy.ext
okt 24 13:20:25 Desktop-Ubuntu mopidy[7384]:   Loaded extension: Mopidy-Iris 3.64.1
okt 24 13:20:25 Desktop-Ubuntu mopidy[7384]: DEBUG    2022-10-24 13:20:25,636 [7384:MainThread] mopidy.ext
okt 24 13:20:25 Desktop-Ubuntu mopidy[7384]:   Loading entry point: iris = mopidy_iris:Extension
okt 24 13:20:25 Desktop-Ubuntu mopidy[7384]: DEBUG    2022-10-24 13:20:25,635 [7384:MainThread] mopidy.ext
okt 24 13:20:25 Desktop-Ubuntu mopidy[7384]:   Loaded extension: Mopidy-YTMusic 0.3.7
okt 24 13:20:25 Desktop-Ubuntu mopidy[7384]: DEBUG    2022-10-24 13:20:25,635 [7384:MainThread] mopidy.ext
okt 24 13:20:25 Desktop-Ubuntu mopidy[7384]:   Loading entry point: ytmusic = mopidy_ytmusic:Extension
okt 24 13:20:25 Desktop-Ubuntu mopidy[7384]: DEBUG    2022-10-24 13:20:25,634 [7384:MainThread] mopidy.ext
okt 24 13:20:25 Desktop-Ubuntu mopidy[7384]:   Loaded extension: Mopidy-SoundCloud 3.0.1
okt 24 13:20:25 Desktop-Ubuntu mopidy[7384]: DEBUG    2022-10-24 13:20:25,633 [7384:MainThread] mopidy.ext
okt 24 13:20:25 Desktop-Ubuntu mopidy[7384]:   Loading entry point: soundcloud = mopidy_soundcloud:Extension
okt 24 13:20:25 Desktop-Ubuntu mopidy[7384]: DEBUG    2022-10-24 13:20:25,632 [7384:MainThread] mopidy.ext
okt 24 13:20:25 Desktop-Ubuntu mopidy[7384]:   Loaded extension: Mopidy-Local 3.2.1
okt 24 13:20:25 Desktop-Ubuntu mopidy[7384]: DEBUG    2022-10-24 13:20:25,632 [7384:MainThread] mopidy.ext
okt 24 13:20:25 Desktop-Ubuntu mopidy[7384]:   Loading entry point: local = mopidy_local:Extension
okt 24 13:20:25 Desktop-Ubuntu mopidy[7384]: DEBUG    2022-10-24 13:20:25,621 [7384:MainThread] mopidy.ext
okt 24 13:20:25 Desktop-Ubuntu mopidy[7384]:   Loaded extension: Mopidy-YouTube 3.6.1
okt 24 13:20:25 Desktop-Ubuntu mopidy[7384]: DEBUG    2022-10-24 13:20:25,621 [7384:MainThread] mopidy.ext
okt 24 13:20:25 Desktop-Ubuntu mopidy[7384]:   Loading entry point: youtube = mopidy_youtube:Extension
okt 24 13:20:25 Desktop-Ubuntu mopidy[7384]: DEBUG    2022-10-24 13:20:25,620 [7384:MainThread] mopidy.ext
okt 24 13:20:25 Desktop-Ubuntu mopidy[7384]:   Starting Mopidy 3.3.0
okt 24 13:20:25 Desktop-Ubuntu mopidy[7384]: INFO     2022-10-24 13:20:25,617 [7384:MainThread] mopidy.__main__
okt 24 13:20:25 Desktop-Ubuntu systemd[1]: Started Mopidy music server.
okt 24 13:20:25 Desktop-Ubuntu systemd[1]: Starting Mopidy music server...
okt 24 13:14:19 Desktop-Ubuntu mopidy[992]: Failed loading provided credentials. Make sure to provide a string or a file path. Reason: Expecting value: line 1 column 1 (char 0)
okt 24 13:14:19 Desktop-Ubuntu mopidy[992]:   All actors stopped.
okt 24 13:14:19 Desktop-Ubuntu mopidy[992]: DEBUG    2022-10-24 13:14:18,932 [992:MainThread] mopidy.internal.process
okt 24 13:14:19 Desktop-Ubuntu mopidy[992]:   Stopped SoftwareMixer (urn:uuid:c6771fa4-22fa-4cfa-82c1-a34e6fc04e3b)
okt 24 13:14:19 Desktop-Ubuntu mopidy[992]: DEBUG    2022-10-24 13:14:18,932 [992:SoftwareMixer-1 (_actor_loop)] pykka
okt 24 13:14:19 Desktop-Ubuntu mopidy[992]:   Unregistered SoftwareMixer (urn:uuid:c6771fa4-22fa-4cfa-82c1-a34e6fc04e3b)
okt 24 13:14:19 Desktop-Ubuntu mopidy[992]: DEBUG    2022-10-24 13:14:18,932 [992:SoftwareMixer-1 (_actor_loop)] pykka
okt 24 13:14:19 Desktop-Ubuntu mopidy[992]:   Stopping 1 instance(s) of SoftwareMixer
okt 24 13:14:19 Desktop-Ubuntu mopidy[992]: DEBUG    2022-10-24 13:14:18,932 [992:MainThread] mopidy.internal.process
okt 24 13:14:19 Desktop-Ubuntu mopidy[992]:   Stopping Mopidy mixer
okt 24 13:14:19 Desktop-Ubuntu mopidy[992]: INFO     2022-10-24 13:14:18,932 [992:MainThread] mopidy.commands
okt 24 13:14:19 Desktop-Ubuntu mopidy[992]:   Stopped Audio (urn:uuid:768b9351-f202-4e23-9d08-a8235b4ce6da)
okt 24 13:14:19 Desktop-Ubuntu mopidy[992]: DEBUG    2022-10-24 13:14:18,931 [992:Audio-2 (_actor_loop)] pykka
okt 24 13:14:19 Desktop-Ubuntu systemd[1]: Stopped Mopidy music server.
okt 24 13:14:19 Desktop-Ubuntu mopidy[992]:   Unregistered Audio (urn:uuid:768b9351-f202-4e23-9d08-a8235b4ce6da)
okt 24 13:14:19 Desktop-Ubuntu mopidy[992]: DEBUG    2022-10-24 13:14:18,931 [992:Audio-2 (_actor_loop)] pykka
okt 24 13:14:19 Desktop-Ubuntu mopidy[992]:   Stopping 1 instance(s) of Audio
okt 24 13:14:19 Desktop-Ubuntu mopidy[992]: DEBUG    2022-10-24 13:14:18,931 [992:MainThread] mopidy.internal.process
okt 24 13:14:19 Desktop-Ubuntu mopidy[992]:   Stopping Mopidy audio
okt 24 13:14:19 Desktop-Ubuntu mopidy[992]: INFO     2022-10-24 13:14:18,931 [992:MainThread] mopidy.commands
okt 24 13:14:19 Desktop-Ubuntu mopidy[992]:   Stopped StreamBackend (urn:uuid:ed7d55b4-ef13-42b8-a09b-c3b3becacb7e)
okt 24 13:14:19 Desktop-Ubuntu mopidy[992]: DEBUG    2022-10-24 13:14:18,931 [992:StreamBackend-7 (_actor_loop)] pykka
okt 24 13:14:19 Desktop-Ubuntu mopidy[992]:   Unregistered StreamBackend (urn:uuid:ed7d55b4-ef13-42b8-a09b-c3b3becacb7e)
okt 24 13:14:19 Desktop-Ubuntu mopidy[992]: DEBUG    2022-10-24 13:14:18,930 [992:StreamBackend-7 (_actor_loop)] pykka
okt 24 13:14:19 Desktop-Ubuntu mopidy[992]:   Stopping 1 instance(s) of StreamBackend
okt 24 13:14:19 Desktop-Ubuntu mopidy[992]: DEBUG    2022-10-24 13:14:18,930 [992:MainThread] mopidy.internal.process
okt 24 13:14:19 Desktop-Ubuntu mopidy[992]:   Stopped M3UBackend (urn:uuid:38106fae-6245-4990-971a-cab5e9bfdf54)
okt 24 13:14:19 Desktop-Ubuntu mopidy[992]: DEBUG    2022-10-24 13:14:18,930 [992:M3UBackend-6 (_actor_loop)] pykka
okt 24 13:14:19 Desktop-Ubuntu mopidy[992]:   Unregistered M3UBackend (urn:uuid:38106fae-6245-4990-971a-cab5e9bfdf54)
okt 24 13:14:19 Desktop-Ubuntu mopidy[992]: DEBUG    2022-10-24 13:14:18,930 [992:M3UBackend-6 (_actor_loop)] pykka
okt 24 13:14:19 Desktop-Ubuntu mopidy[992]:   Stopping 1 instance(s) of M3UBackend
okt 24 13:14:19 Desktop-Ubuntu mopidy[992]: DEBUG    2022-10-24 13:14:18,930 [992:MainThread] mopidy.internal.process
okt 24 13:14:19 Desktop-Ubuntu mopidy[992]:   Stopped FileBackend (urn:uuid:092a58bf-2896-49f0-93bb-b5fafffec250)
okt 24 13:14:19 Desktop-Ubuntu mopidy[992]: DEBUG    2022-10-24 13:14:18,930 [992:FileBackend-5 (_actor_loop)] pykka
okt 24 13:14:19 Desktop-Ubuntu mopidy[992]:   Unregistered FileBackend (urn:uuid:092a58bf-2896-49f0-93bb-b5fafffec250)
okt 24 13:14:19 Desktop-Ubuntu mopidy[992]: DEBUG    2022-10-24 13:14:18,930 [992:FileBackend-5 (_actor_loop)] pykka
okt 24 13:14:19 Desktop-Ubuntu mopidy[992]:   Stopping 1 instance(s) of FileBackend
okt 24 13:14:19 Desktop-Ubuntu mopidy[992]: DEBUG    2022-10-24 13:14:18,929 [992:MainThread] mopidy.internal.process
okt 24 13:14:19 Desktop-Ubuntu mopidy[992]:   Stopping 0 instance(s) of YTMusicBackend
okt 24 13:14:19 Desktop-Ubuntu mopidy[992]: DEBUG    2022-10-24 13:14:18,929 [992:MainThread] mopidy.internal.process
okt 24 13:14:19 Desktop-Ubuntu mopidy[992]:   Stopped LocalBackend (urn:uuid:c0fb5730-cfb8-4c47-8d67-85936693586b)
okt 24 13:14:19 Desktop-Ubuntu mopidy[992]: DEBUG    2022-10-24 13:14:18,929 [992:LocalBackend-4 (_actor_loop)] pykka
okt 24 13:14:19 Desktop-Ubuntu mopidy[992]:   Unregistered LocalBackend (urn:uuid:c0fb5730-cfb8-4c47-8d67-85936693586b)
okt 24 13:14:19 Desktop-Ubuntu mopidy[992]: DEBUG    2022-10-24 13:14:18,929 [992:LocalBackend-4 (_actor_loop)] pykka
okt 24 13:14:19 Desktop-Ubuntu mopidy[992]:   Stopping 1 instance(s) of LocalBackend
okt 24 13:14:18 Desktop-Ubuntu systemd[1]: mopidy.service: Deactivated successfully.
okt 24 13:14:19 Desktop-Ubuntu mopidy[992]: DEBUG    2022-10-24 13:14:18,929 [992:MainThread] mopidy.internal.process
okt 24 13:14:19 Desktop-Ubuntu mopidy[992]:   Stopped YouTubeBackend (urn:uuid:f4d781d4-0bba-4b42-a7ef-f0206a0afdf3)
okt 24 13:14:19 Desktop-Ubuntu mopidy[992]: DEBUG    2022-10-24 13:14:18,929 [992:YouTubeBackend-3 (_actor_loop)] pykka
okt 24 13:14:19 Desktop-Ubuntu mopidy[992]:   Unregistered YouTubeBackend (urn:uuid:f4d781d4-0bba-4b42-a7ef-f0206a0afdf3)
okt 24 13:14:19 Desktop-Ubuntu mopidy[992]: DEBUG    2022-10-24 13:14:18,929 [992:YouTubeBackend-3 (_actor_loop)] pykka
okt 24 13:14:19 Desktop-Ubuntu mopidy[992]:   Stopping 1 instance(s) of YouTubeBackend
okt 24 13:14:19 Desktop-Ubuntu mopidy[992]: DEBUG    2022-10-24 13:14:18,928 [992:MainThread] mopidy.internal.process
okt 24 13:14:19 Desktop-Ubuntu mopidy[992]:   Stopping Mopidy backends
okt 24 13:14:19 Desktop-Ubuntu mopidy[992]: INFO     2022-10-24 13:14:18,928 [992:MainThread] mopidy.commands
okt 24 13:14:19 Desktop-Ubuntu mopidy[992]:   Stopped Core (urn:uuid:75abcdf8-fc92-4738-86a9-0dba9720930c)
okt 24 13:14:19 Desktop-Ubuntu mopidy[992]: DEBUG    2022-10-24 13:14:18,928 [992:Core-8 (_actor_loop)] pykka
okt 24 13:14:19 Desktop-Ubuntu mopidy[992]:   Unregistered Core (urn:uuid:75abcdf8-fc92-4738-86a9-0dba9720930c)
okt 24 13:14:19 Desktop-Ubuntu mopidy[992]: DEBUG    2022-10-24 13:14:18,928 [992:Core-8 (_actor_loop)] pykka
okt 24 13:14:19 Desktop-Ubuntu mopidy[992]:   Stopping 1 instance(s) of Core
okt 24 13:14:19 Desktop-Ubuntu mopidy[992]: DEBUG    2022-10-24 13:14:18,928 [992:MainThread] mopidy.internal.process
okt 24 13:14:19 Desktop-Ubuntu mopidy[992]:   Stopped HTTP server
okt 24 13:14:19 Desktop-Ubuntu mopidy[992]: DEBUG    2022-10-24 13:14:18,927 [992:HttpServer] mopidy.http.actor
okt 24 13:14:19 Desktop-Ubuntu mopidy[992]:   Stopping Mopidy core
okt 24 13:14:19 Desktop-Ubuntu mopidy[992]: INFO     2022-10-24 13:14:18,927 [992:MainThread] mopidy.commands
okt 24 13:14:19 Desktop-Ubuntu mopidy[992]:   Stopping HTTP server
okt 24 13:14:19 Desktop-Ubuntu mopidy[992]: DEBUG    2022-10-24 13:14:18,927 [992:HttpFrontend-14 (_actor_loop)] mopidy.http.actor
okt 24 13:14:19 Desktop-Ubuntu mopidy[992]:   Zeroconf service 'Mopidy HTTP server on Desktop-Ubuntu' (_mopidy-http._tcp at []:6680): Unpublished
okt 24 13:14:19 Desktop-Ubuntu mopidy[992]: DEBUG    2022-10-24 13:14:18,927 [992:HttpFrontend-14 (_actor_loop)] mopidy.zeroconf
okt 24 13:14:19 Desktop-Ubuntu mopidy[992]:   Zeroconf service 'Mopidy HTTP server on Desktop-Ubuntu' (_http._tcp at []:6680): Unpublished
okt 24 13:14:19 Desktop-Ubuntu mopidy[992]: DEBUG    2022-10-24 13:14:18,926 [992:HttpFrontend-14 (_actor_loop)] mopidy.zeroconf
okt 24 13:14:19 Desktop-Ubuntu mopidy[992]:   Stopped HttpFrontend (urn:uuid:5e7e0cd6-0c60-4b81-a745-995ccbdd85f6)
okt 24 13:14:19 Desktop-Ubuntu mopidy[992]: DEBUG    2022-10-24 13:14:18,926 [992:HttpFrontend-14 (_actor_loop)] pykka
okt 24 13:14:19 Desktop-Ubuntu mopidy[992]:   Unregistered HttpFrontend (urn:uuid:5e7e0cd6-0c60-4b81-a745-995ccbdd85f6)
okt 24 13:14:19 Desktop-Ubuntu mopidy[992]: DEBUG    2022-10-24 13:14:18,925 [992:HttpFrontend-14 (_actor_loop)] pykka
okt 24 13:14:19 Desktop-Ubuntu mopidy[992]:   Stopping 1 instance(s) of HttpFrontend
okt 24 13:14:19 Desktop-Ubuntu mopidy[992]: DEBUG    2022-10-24 13:14:18,925 [992:MainThread] mopidy.internal.process
okt 24 13:14:18 Desktop-Ubuntu mopidy[992]:   Stopping Iris
okt 24 13:14:18 Desktop-Ubuntu mopidy[992]: INFO     2022-10-24 13:14:18,925 [992:IrisFrontend-12 (_actor_loop)] mopidy_iris.core
okt 24 13:14:18 Desktop-Ubuntu mopidy[992]:   Stopped IrisFrontend (urn:uuid:81fdec5f-799c-4d62-9a13-d3495d24f243)
okt 24 13:14:18 Desktop-Ubuntu mopidy[992]: DEBUG    2022-10-24 13:14:18,925 [992:IrisFrontend-12 (_actor_loop)] pykka
okt 24 13:14:18 Desktop-Ubuntu mopidy[992]:   Unregistered IrisFrontend (urn:uuid:81fdec5f-799c-4d62-9a13-d3495d24f243)
okt 24 13:14:18 Desktop-Ubuntu mopidy[992]: DEBUG    2022-10-24 13:14:18,925 [992:IrisFrontend-12 (_actor_loop)] pykka
okt 24 13:14:18 Desktop-Ubuntu mopidy[992]:   Stopping 1 instance(s) of IrisFrontend
okt 24 13:14:18 Desktop-Ubuntu mopidy[992]: DEBUG    2022-10-24 13:14:18,925 [992:MainThread] mopidy.internal.process
okt 24 13:14:18 Desktop-Ubuntu mopidy[992]:   Stopped YTMusicScrobbleFE (urn:uuid:94d8dcb8-3728-4b33-8f04-cc57b779abeb)
okt 24 13:14:18 Desktop-Ubuntu mopidy[992]: DEBUG    2022-10-24 13:14:18,925 [992:YTMusicScrobbleFE-11 (_actor_loop)] pykka
okt 24 13:14:18 Desktop-Ubuntu mopidy[992]:   Unregistered YTMusicScrobbleFE (urn:uuid:94d8dcb8-3728-4b33-8f04-cc57b779abeb)
okt 24 13:14:18 Desktop-Ubuntu mopidy[992]: DEBUG    2022-10-24 13:14:18,924 [992:YTMusicScrobbleFE-11 (_actor_loop)] pykka
okt 24 13:14:18 Desktop-Ubuntu mopidy[992]:   Stopping 1 instance(s) of YTMusicScrobbleFE
okt 24 13:14:18 Desktop-Ubuntu mopidy[992]: DEBUG    2022-10-24 13:14:18,924 [992:MainThread] mopidy.internal.process
okt 24 13:14:18 Desktop-Ubuntu mopidy[992]:   Stopped YouTubeCoreListener (urn:uuid:a4b31cbb-77e3-443e-b01b-5fc86fc3c645)
okt 24 13:14:18 Desktop-Ubuntu mopidy[992]: DEBUG    2022-10-24 13:14:18,924 [992:YouTubeCoreListener-10 (_actor_loop)] pykka
okt 24 13:14:18 Desktop-Ubuntu mopidy[992]:   Unregistered YouTubeCoreListener (urn:uuid:a4b31cbb-77e3-443e-b01b-5fc86fc3c645)
okt 24 13:14:18 Desktop-Ubuntu mopidy[992]: DEBUG    2022-10-24 13:14:18,924 [992:YouTubeCoreListener-10 (_actor_loop)] pykka
okt 24 13:14:18 Desktop-Ubuntu mopidy[992]:   Stopping 1 instance(s) of YouTubeCoreListener
okt 24 13:14:18 Desktop-Ubuntu mopidy[992]: DEBUG    2022-10-24 13:14:18,924 [992:MainThread] mopidy.internal.process
okt 24 13:14:18 Desktop-Ubuntu mopidy[992]:   Stopped YouTubeAutoplayer (urn:uuid:38528370-bfd7-4dca-a817-d8f74d6b0e90)
okt 24 13:14:18 Desktop-Ubuntu mopidy[992]: DEBUG    2022-10-24 13:14:18,923 [992:YouTubeAutoplayer-9 (_actor_loop)] pykka
okt 24 13:14:18 Desktop-Ubuntu mopidy[992]:   Unregistered YouTubeAutoplayer (urn:uuid:38528370-bfd7-4dca-a817-d8f74d6b0e90)
okt 24 13:14:18 Desktop-Ubuntu mopidy[992]: DEBUG    2022-10-24 13:14:18,923 [992:YouTubeAutoplayer-9 (_actor_loop)] pykka
okt 24 13:14:18 Desktop-Ubuntu mopidy[992]:   Stopping 1 instance(s) of YouTubeAutoplayer
okt 24 13:14:18 Desktop-Ubuntu mopidy[992]: DEBUG    2022-10-24 13:14:18,923 [992:MainThread] mopidy.internal.process
okt 24 13:14:18 Desktop-Ubuntu mopidy[992]:   Stopping Mopidy frontends
okt 24 13:14:18 Desktop-Ubuntu mopidy[992]: INFO     2022-10-24 13:14:18,923 [992:MainThread] mopidy.commands
okt 24 13:14:18 Desktop-Ubuntu mopidy[992]:   GLib mainloop got SIGTERM. Exiting...
okt 24 13:14:18 Desktop-Ubuntu mopidy[992]: INFO     2022-10-24 13:14:18,923 [992:MainThread] mopidy.commands
okt 24 13:14:18 Desktop-Ubuntu systemd[1]: Stopping Mopidy music server...
okt 24 09:36:13 Desktop-Ubuntu mopidy[992]:     '/': <class 'tornado.web.RedirectHandler'>
okt 24 09:36:13 Desktop-Ubuntu mopidy[992]:     '/mopidy/': <class 'mopidy.http.handlers.ClientListHandler'>
okt 24 09:36:13 Desktop-Ubuntu mopidy[992]:     '/mopidy/(.+)': <class 'mopidy.http.handlers.StaticFileHandler'>
okt 24 09:36:13 Desktop-Ubuntu mopidy[992]:     '/mopidy/rpc': <class 'mopidy.http.handlers.JsonRpcHandler'>
okt 24 09:36:13 Desktop-Ubuntu mopidy[992]:     '/mopidy/ws/?': <class 'mopidy.http.handlers.WebSocketHandler'>
okt 24 09:36:13 Desktop-Ubuntu mopidy[992]:     '/mopidy': <class 'mopidy.http.handlers.AddSlashHandler'>
okt 24 09:36:13 Desktop-Ubuntu mopidy[992]:     '/iris/(.*)': <class 'mopidy_iris.handlers.ReactRouterHandler'>
okt 24 09:36:13 Desktop-Ubuntu mopidy[992]:     '/iris/((.*)(?:css|js|json|map)$)': <class 'tornado.web.StaticFileHandler'>
okt 24 09:36:13 Desktop-Ubuntu mopidy[992]:     '/iris/assets/(.*)': <class 'tornado.web.StaticFileHandler'>
okt 24 09:36:13 Desktop-Ubuntu mopidy[992]:     '/iris/ws/?': <class 'mopidy_iris.handlers.WebsocketHandler'>
okt 24 09:36:13 Desktop-Ubuntu mopidy[992]:     '/iris/http/([^/]*)': <class 'mopidy_iris.handlers.HttpHandler'>
okt 24 09:36:13 Desktop-Ubuntu mopidy[992]:     '/iris': <class 'mopidy.http.handlers.AddSlashHandler'>
okt 24 09:36:13 Desktop-Ubuntu mopidy[992]:     '/local/(.+)': <class 'mopidy_local.web.ImageHandler'>
okt 24 09:36:13 Desktop-Ubuntu mopidy[992]:     '/local/(index.html)?': <class 'mopidy_local.web.IndexHandler'>
okt 24 09:36:13 Desktop-Ubuntu mopidy[992]:     '/local': <class 'mopidy.http.handlers.AddSlashHandler'>
okt 24 09:36:13 Desktop-Ubuntu mopidy[992]:     '/youtube/(.*\\.(?:webm|m4a|mp3|ogg))': <class 'mopidy_youtube.web.AudioHandler'>
okt 24 09:36:13 Desktop-Ubuntu mopidy[992]:     '/youtube/(.*\\.jpg)': <class 'mopidy_youtube.web.ImageHandler'>
okt 24 09:36:13 Desktop-Ubuntu mopidy[992]:     '/youtube/(index.html|image.html)?': <class 'mopidy_youtube.web.IndexHandler'>
okt 24 09:36:13 Desktop-Ubuntu mopidy[992]:     '/youtube': <class 'mopidy.http.handlers.AddSlashHandler'>
okt 24 09:36:13 Desktop-Ubuntu mopidy[992]:   HTTP routes from extensions:
okt 24 09:36:13 Desktop-Ubuntu mopidy[992]: DEBUG    2022-10-24 09:36:13,994 [992:HttpServer] mopidy.http.actor
okt 24 09:36:13 Desktop-Ubuntu mopidy[992]:   Default webclient is mopidy
okt 24 09:36:13 Desktop-Ubuntu mopidy[992]: DEBUG    2022-10-24 09:36:13,994 [992:HttpServer] mopidy.http.actor
okt 24 09:36:13 Desktop-Ubuntu mopidy[992]:   Loaded HTTP extension: mopidy
okt 24 09:36:13 Desktop-Ubuntu mopidy[992]: DEBUG    2022-10-24 09:36:13,994 [992:HttpServer] mopidy.http.actor
okt 24 09:36:13 Desktop-Ubuntu mopidy[992]:   Loaded HTTP extension: iris
okt 24 09:36:13 Desktop-Ubuntu mopidy[992]: DEBUG    2022-10-24 09:36:13,993 [992:HttpServer] mopidy.http.actor
okt 24 09:36:13 Desktop-Ubuntu mopidy[992]:   Loaded HTTP extension: local
okt 24 09:36:13 Desktop-Ubuntu mopidy[992]: DEBUG    2022-10-24 09:36:13,895 [992:HttpServer] mopidy.http.actor
okt 24 09:36:13 Desktop-Ubuntu mopidy[992]:   Zeroconf service 'Mopidy HTTP server on Desktop-Ubuntu' (_mopidy-http._tcp at []:6680): Published
okt 24 09:36:13 Desktop-Ubuntu mopidy[992]: DEBUG    2022-10-24 09:36:13,874 [992:HttpFrontend-14 (_actor_loop)] mopidy.zeroconf
okt 24 09:36:13 Desktop-Ubuntu mopidy[992]:   Zeroconf service 'Mopidy HTTP server on Desktop-Ubuntu' (_http._tcp at []:6680): Published
okt 24 09:36:13 Desktop-Ubuntu mopidy[992]: DEBUG    2022-10-24 09:36:13,872 [992:HttpFrontend-14 (_actor_loop)] mopidy.zeroconf
okt 24 09:36:13 Desktop-Ubuntu mopidy[992]:   Loaded HTTP extension: youtube
okt 24 09:36:13 Desktop-Ubuntu mopidy[992]: DEBUG    2022-10-24 09:36:13,820 [992:HttpServer] mopidy.http.actor
okt 24 09:36:13 Desktop-Ubuntu mopidy[992]:   Starting GLib mainloop
okt 24 09:36:13 Desktop-Ubuntu mopidy[992]: INFO     2022-10-24 09:36:13,749 [992:MainThread] mopidy.commands
okt 24 09:36:13 Desktop-Ubuntu mopidy[992]:   Using selector: EpollSelector
okt 24 09:36:13 Desktop-Ubuntu mopidy[992]: DEBUG    2022-10-24 09:36:13,749 [992:HttpServer] asyncio
okt 24 09:36:13 Desktop-Ubuntu mopidy[992]:   HttpFrontend took 1ms
okt 24 09:36:13 Desktop-Ubuntu mopidy[992]: TRACE    2022-10-24 09:36:13,748 [992:MainThread] mopidy.internal.timer
okt 24 09:36:13 Desktop-Ubuntu mopidy[992]:   HTTP server running at [::ffff:127.0.0.1]:6680
okt 24 09:36:13 Desktop-Ubuntu mopidy[992]: INFO     2022-10-24 09:36:13,748 [992:HttpFrontend-14 (_actor_loop)] mopidy.http.actor
okt 24 09:36:13 Desktop-Ubuntu mopidy[992]:   Starting HttpFrontend (urn:uuid:5e7e0cd6-0c60-4b81-a745-995ccbdd85f6)
okt 24 09:36:13 Desktop-Ubuntu mopidy[992]: DEBUG    2022-10-24 09:36:13,748 [992:MainThread] pykka
okt 24 09:36:13 Desktop-Ubuntu mopidy[992]:   Registered HttpFrontend (urn:uuid:5e7e0cd6-0c60-4b81-a745-995ccbdd85f6)
okt 24 09:36:13 Desktop-Ubuntu mopidy[992]: DEBUG    2022-10-24 09:36:13,748 [992:MainThread] pykka
okt 24 09:36:13 Desktop-Ubuntu mopidy[992]:   Starting HTTP server
okt 24 09:36:13 Desktop-Ubuntu mopidy[992]: DEBUG    2022-10-24 09:36:13,747 [992:MainThread] mopidy.http.actor
okt 24 09:36:13 Desktop-Ubuntu mopidy[992]:   IrisFrontend took 0ms
okt 24 09:36:13 Desktop-Ubuntu mopidy[992]: TRACE    2022-10-24 09:36:13,747 [992:MainThread] mopidy.internal.timer
okt 24 09:36:13 Desktop-Ubuntu mopidy[992]:   Starting Iris 3.64.1
okt 24 09:36:13 Desktop-Ubuntu mopidy[992]: INFO     2022-10-24 09:36:13,747 [992:IrisFrontend-12 (_actor_loop)] mopidy_iris.core
okt 24 09:36:13 Desktop-Ubuntu mopidy[992]:   Starting IrisFrontend (urn:uuid:81fdec5f-799c-4d62-9a13-d3495d24f243)
okt 24 09:36:13 Desktop-Ubuntu mopidy[992]: DEBUG    2022-10-24 09:36:13,746 [992:MainThread] pykka
okt 24 09:36:13 Desktop-Ubuntu mopidy[992]:   Registered IrisFrontend (urn:uuid:81fdec5f-799c-4d62-9a13-d3495d24f243)
okt 24 09:36:13 Desktop-Ubuntu mopidy[992]: DEBUG    2022-10-24 09:36:13,746 [992:MainThread] pykka
okt 24 09:36:13 Desktop-Ubuntu mopidy[992]:   YTMusicScrobbleFE took 0ms
okt 24 09:36:13 Desktop-Ubuntu mopidy[992]: TRACE    2022-10-24 09:36:13,746 [992:MainThread] mopidy.internal.timer
okt 24 09:36:13 Desktop-Ubuntu mopidy[992]:   Starting YTMusicScrobbleFE (urn:uuid:94d8dcb8-3728-4b33-8f04-cc57b779abeb)
okt 24 09:36:13 Desktop-Ubuntu mopidy[992]: DEBUG    2022-10-24 09:36:13,746 [992:MainThread] pykka
okt 24 09:36:13 Desktop-Ubuntu mopidy[992]:   Registered YTMusicScrobbleFE (urn:uuid:94d8dcb8-3728-4b33-8f04-cc57b779abeb)
okt 24 09:36:13 Desktop-Ubuntu mopidy[992]: DEBUG    2022-10-24 09:36:13,746 [992:MainThread] pykka
okt 24 09:36:13 Desktop-Ubuntu mopidy[992]:   YouTubeCoreListener took 0ms
okt 24 09:36:13 Desktop-Ubuntu mopidy[992]: TRACE    2022-10-24 09:36:13,746 [992:MainThread] mopidy.internal.timer
okt 24 09:36:13 Desktop-Ubuntu mopidy[992]:   Starting YouTubeCoreListener (urn:uuid:a4b31cbb-77e3-443e-b01b-5fc86fc3c645)
okt 24 09:36:13 Desktop-Ubuntu mopidy[992]: DEBUG    2022-10-24 09:36:13,745 [992:MainThread] pykka
okt 24 09:36:13 Desktop-Ubuntu mopidy[992]:   Registered YouTubeCoreListener (urn:uuid:a4b31cbb-77e3-443e-b01b-5fc86fc3c645)
okt 24 09:36:13 Desktop-Ubuntu mopidy[992]: DEBUG    2022-10-24 09:36:13,745 [992:MainThread] pykka
okt 24 09:36:13 Desktop-Ubuntu mopidy[992]:   YouTubeAutoplayer took 0ms
okt 24 09:36:13 Desktop-Ubuntu mopidy[992]: TRACE    2022-10-24 09:36:13,745 [992:MainThread] mopidy.internal.timer
okt 24 09:36:13 Desktop-Ubuntu mopidy[992]:   Starting YouTubeAutoplayer (urn:uuid:38528370-bfd7-4dca-a817-d8f74d6b0e90)
okt 24 09:36:13 Desktop-Ubuntu mopidy[992]: DEBUG    2022-10-24 09:36:13,745 [992:MainThread] pykka
okt 24 09:36:13 Desktop-Ubuntu mopidy[992]:   Registered YouTubeAutoplayer (urn:uuid:38528370-bfd7-4dca-a817-d8f74d6b0e90)
okt 24 09:36:13 Desktop-Ubuntu mopidy[992]: DEBUG    2022-10-24 09:36:13,745 [992:MainThread] pykka
okt 24 09:36:13 Desktop-Ubuntu mopidy[992]:   Starting Mopidy frontends: YouTubeAutoplayer, YouTubeCoreListener, YTMusicScrobbleFE, IrisFrontend, HttpFrontend
okt 24 09:36:13 Desktop-Ubuntu mopidy[992]: INFO     2022-10-24 09:36:13,745 [992:MainThread] mopidy.commands
okt 24 09:36:13 Desktop-Ubuntu mopidy[992]:   Starting Core (urn:uuid:75abcdf8-fc92-4738-86a9-0dba9720930c)
okt 24 09:36:13 Desktop-Ubuntu mopidy[992]: DEBUG    2022-10-24 09:36:13,741 [992:MainThread] pykka
okt 24 09:36:13 Desktop-Ubuntu mopidy[992]:   Registered Core (urn:uuid:75abcdf8-fc92-4738-86a9-0dba9720930c)
okt 24 09:36:13 Desktop-Ubuntu mopidy[992]: DEBUG    2022-10-24 09:36:13,741 [992:MainThread] pykka
okt 24 09:36:13 Desktop-Ubuntu mopidy[992]:   Starting Mopidy core
okt 24 09:36:13 Desktop-Ubuntu mopidy[992]: INFO     2022-10-24 09:36:13,738 [992:MainThread] mopidy.commands
okt 24 09:36:13 Desktop-Ubuntu mopidy[992]:   https://music.youtube.com:443 "GET / HTTP/1.1" 200 None
okt 24 09:36:13 Desktop-Ubuntu mopidy[992]: DEBUG    2022-10-24 09:36:13,191 [992:YouTubeBackend-3 (_actor_loop)] urllib3.connectionpool
okt 24 09:36:12 Desktop-Ubuntu mopidy[992]:   Starting new HTTPS connection (1): music.youtube.com:443
okt 24 09:36:12 Desktop-Ubuntu mopidy[992]: DEBUG    2022-10-24 09:36:12,600 [992:YouTubeBackend-3 (_actor_loop)] urllib3.connectionpool
okt 24 09:36:12 Desktop-Ubuntu mopidy[992]:   Audio output set to "pulsesink server=127.0.0.1"
okt 24 09:36:12 Desktop-Ubuntu mopidy[992]: INFO     2022-10-24 09:36:12,535 [992:Audio-2 (_actor_loop)] mopidy.audio.actor
okt 24 09:36:12 Desktop-Ubuntu mopidy[992]:   StreamBackend took 3ms
okt 24 09:36:12 Desktop-Ubuntu mopidy[992]: TRACE    2022-10-24 09:36:12,521 [992:MainThread] mopidy.internal.timer
okt 24 09:36:12 Desktop-Ubuntu mopidy[992]:   Starting StreamBackend (urn:uuid:ed7d55b4-ef13-42b8-a09b-c3b3becacb7e)
okt 24 09:36:12 Desktop-Ubuntu mopidy[992]: DEBUG    2022-10-24 09:36:12,518 [992:MainThread] pykka
okt 24 09:36:12 Desktop-Ubuntu mopidy[992]:   Registered StreamBackend (urn:uuid:ed7d55b4-ef13-42b8-a09b-c3b3becacb7e)
okt 24 09:36:12 Desktop-Ubuntu mopidy[992]: DEBUG    2022-10-24 09:36:12,518 [992:MainThread] pykka
okt 24 09:36:12 Desktop-Ubuntu mopidy[992]:   M3UBackend took 1ms
okt 24 09:36:12 Desktop-Ubuntu mopidy[992]: TRACE    2022-10-24 09:36:12,517 [992:MainThread] mopidy.internal.timer
okt 24 09:36:12 Desktop-Ubuntu mopidy[992]:   Starting M3UBackend (urn:uuid:38106fae-6245-4990-971a-cab5e9bfdf54)
okt 24 09:36:12 Desktop-Ubuntu mopidy[992]: DEBUG    2022-10-24 09:36:12,516 [992:MainThread] pykka
okt 24 09:36:12 Desktop-Ubuntu mopidy[992]:   Registered M3UBackend (urn:uuid:38106fae-6245-4990-971a-cab5e9bfdf54)
okt 24 09:36:12 Desktop-Ubuntu mopidy[992]: DEBUG    2022-10-24 09:36:12,516 [992:MainThread] pykka
okt 24 09:36:12 Desktop-Ubuntu mopidy[992]:   FileBackend took 23ms
okt 24 09:36:12 Desktop-Ubuntu mopidy[992]: TRACE    2022-10-24 09:36:12,515 [992:MainThread] mopidy.internal.timer
okt 24 09:36:12 Desktop-Ubuntu mopidy[992]:   Starting FileBackend (urn:uuid:092a58bf-2896-49f0-93bb-b5fafffec250)
okt 24 09:36:12 Desktop-Ubuntu mopidy[992]: DEBUG    2022-10-24 09:36:12,493 [992:MainThread] pykka
okt 24 09:36:12 Desktop-Ubuntu mopidy[992]:   Using YouTube Music API
okt 24 09:36:12 Desktop-Ubuntu mopidy[992]: INFO     2022-10-24 09:36:12,492 [992:YouTubeBackend-3 (_actor_loop)] mopidy_youtube
okt 24 09:36:12 Desktop-Ubuntu mopidy[992]:   Registered FileBackend (urn:uuid:092a58bf-2896-49f0-93bb-b5fafffec250)
okt 24 09:36:12 Desktop-Ubuntu mopidy[992]: DEBUG    2022-10-24 09:36:12,492 [992:MainThread] pykka
okt 24 09:36:12 Desktop-Ubuntu mopidy[992]:   using jAPI
okt 24 09:36:12 Desktop-Ubuntu mopidy[992]: INFO     2022-10-24 09:36:12,492 [992:YouTubeBackend-3 (_actor_loop)] mopidy_youtube
okt 24 09:36:12 Desktop-Ubuntu mopidy[992]:   Failed expanding path ($XDG_MUSIC_DIR) from file/media_dirs config value.
okt 24 09:36:12 Desktop-Ubuntu mopidy[992]: DEBUG    2022-10-24 09:36:12,492 [992:MainThread] mopidy.file.library
okt 24 09:36:12 Desktop-Ubuntu mopidy[992]:   file caching enabled (at /var/cache/mopidy/youtube)
okt 24 09:36:12 Desktop-Ubuntu mopidy[992]: INFO     2022-10-24 09:36:12,269 [992:YouTubeBackend-3 (_actor_loop)] mopidy_youtube
okt 24 09:36:12 Desktop-Ubuntu mopidy[992]: AttributeError: 'YTMusic' object has no attribute 'headers'
okt 24 09:36:12 Desktop-Ubuntu mopidy[992]:     if 'x-goog-visitor-id' not in self.headers:
okt 24 09:36:12 Desktop-Ubuntu mopidy[992]:   File "/usr/local/lib/python3.10/dist-packages/ytmusicapi/ytmusic.py", line 98, in __init__
okt 24 09:36:12 Desktop-Ubuntu mopidy[992]:     self.api = YTMusic(self._ytmusicapi_auth_json)
okt 24 09:36:12 Desktop-Ubuntu mopidy[992]:   File "/usr/local/lib/python3.10/dist-packages/mopidy_ytmusic/backend.py", line 65, in __init__
okt 24 09:36:12 Desktop-Ubuntu mopidy[992]:     obj = cls(*args, **kwargs)
okt 24 09:36:12 Desktop-Ubuntu mopidy[992]:   File "/usr/lib/python3/dist-packages/pykka/_actor.py", line 91, in start
okt 24 09:36:12 Desktop-Ubuntu mopidy[992]:     backend = backend_class.start(
okt 24 09:36:12 Desktop-Ubuntu mopidy[992]:   File "/usr/lib/python3/dist-packages/mopidy/commands.py", line 412, in start_backends
okt 24 09:36:12 Desktop-Ubuntu mopidy[992]:     yield
okt 24 09:36:12 Desktop-Ubuntu mopidy[992]:   File "/usr/lib/python3/dist-packages/mopidy/commands.py", line 248, in _actor_error_handling
okt 24 09:36:12 Desktop-Ubuntu mopidy[992]: Traceback (most recent call last):
okt 24 09:36:12 Desktop-Ubuntu mopidy[992]:   Got un-handled exception from YTMusicBackend
okt 24 09:36:12 Desktop-Ubuntu mopidy[992]: ERROR    2022-10-24 09:36:12,212 [992:MainThread] mopidy.commands
okt 24 09:36:12 Desktop-Ubuntu mopidy[992]:   LocalBackend took 3ms
okt 24 09:36:12 Desktop-Ubuntu mopidy[992]: TRACE    2022-10-24 09:36:12,212 [992:MainThread] mopidy.internal.timer
okt 24 09:36:12 Desktop-Ubuntu mopidy[992]:   Starting LocalBackend (urn:uuid:c0fb5730-cfb8-4c47-8d67-85936693586b)
okt 24 09:36:12 Desktop-Ubuntu mopidy[992]: DEBUG    2022-10-24 09:36:12,209 [992:MainThread] pykka
okt 24 09:36:12 Desktop-Ubuntu mopidy[992]:   Registered LocalBackend (urn:uuid:c0fb5730-cfb8-4c47-8d67-85936693586b)
okt 24 09:36:12 Desktop-Ubuntu mopidy[992]: DEBUG    2022-10-24 09:36:12,209 [992:MainThread] pykka
okt 24 09:36:12 Desktop-Ubuntu mopidy[992]:   YouTubeBackend took 104ms
okt 24 09:36:12 Desktop-Ubuntu mopidy[992]: TRACE    2022-10-24 09:36:12,208 [992:MainThread] mopidy.internal.timer
okt 24 09:36:12 Desktop-Ubuntu mopidy[992]:   Starting YouTubeBackend (urn:uuid:f4d781d4-0bba-4b42-a7ef-f0206a0afdf3)
okt 24 09:36:12 Desktop-Ubuntu mopidy[992]: DEBUG    2022-10-24 09:36:12,121 [992:MainThread] pykka
okt 24 09:36:12 Desktop-Ubuntu mopidy[992]:   Registered YouTubeBackend (urn:uuid:f4d781d4-0bba-4b42-a7ef-f0206a0afdf3)
okt 24 09:36:12 Desktop-Ubuntu mopidy[992]: DEBUG    2022-10-24 09:36:12,121 [992:MainThread] pykka
okt 24 09:36:12 Desktop-Ubuntu mopidy[992]:   Starting Mopidy backends: YouTubeBackend, LocalBackend, YTMusicBackend, FileBackend, M3UBackend, StreamBackend
okt 24 09:36:12 Desktop-Ubuntu mopidy[992]: INFO     2022-10-24 09:36:12,103 [992:MainThread] mopidy.commands
okt 24 09:36:12 Desktop-Ubuntu mopidy[992]:   Starting Audio (urn:uuid:768b9351-f202-4e23-9d08-a8235b4ce6da)
okt 24 09:36:12 Desktop-Ubuntu mopidy[992]: DEBUG    2022-10-24 09:36:12,102 [992:MainThread] pykka
okt 24 09:36:12 Desktop-Ubuntu mopidy[992]:   Registered Audio (urn:uuid:768b9351-f202-4e23-9d08-a8235b4ce6da)
okt 24 09:36:12 Desktop-Ubuntu mopidy[992]: DEBUG    2022-10-24 09:36:12,102 [992:MainThread] pykka
okt 24 09:36:12 Desktop-Ubuntu mopidy[992]:   Starting Mopidy audio
okt 24 09:36:12 Desktop-Ubuntu mopidy[992]: INFO     2022-10-24 09:36:12,102 [992:MainThread] mopidy.commands
okt 24 09:36:12 Desktop-Ubuntu mopidy[992]:   Mixer volume left unchanged
okt 24 09:36:12 Desktop-Ubuntu mopidy[992]: DEBUG    2022-10-24 09:36:12,102 [992:MainThread] mopidy.commands
okt 24 09:36:12 Desktop-Ubuntu mopidy[992]:   Starting SoftwareMixer (urn:uuid:c6771fa4-22fa-4cfa-82c1-a34e6fc04e3b)
okt 24 09:36:12 Desktop-Ubuntu mopidy[992]: DEBUG    2022-10-24 09:36:12,101 [992:MainThread] pykka
okt 24 09:36:12 Desktop-Ubuntu mopidy[992]:   Registered SoftwareMixer (urn:uuid:c6771fa4-22fa-4cfa-82c1-a34e6fc04e3b)
okt 24 09:36:12 Desktop-Ubuntu mopidy[992]: DEBUG    2022-10-24 09:36:12,101 [992:MainThread] pykka
okt 24 09:36:12 Desktop-Ubuntu mopidy[992]:   Starting Mopidy mixer: SoftwareMixer
okt 24 09:36:12 Desktop-Ubuntu mopidy[992]: INFO     2022-10-24 09:36:12,101 [992:MainThread] mopidy.commands
okt 24 09:36:12 Desktop-Ubuntu mopidy[992]:   Available Mopidy mixers: SoftwareMixer
okt 24 09:36:12 Desktop-Ubuntu mopidy[992]: DEBUG    2022-10-24 09:36:12,100 [992:MainThread] mopidy.commands
okt 24 09:36:04 Desktop-Ubuntu mopidy[992]:   Disabled extensions: soundcloud
okt 24 09:36:04 Desktop-Ubuntu mopidy[992]: INFO     2022-10-24 09:36:04,531 [992:MainThread] mopidy.__main__
okt 24 09:36:04 Desktop-Ubuntu mopidy[992]:   Enabled extensions: youtube, local, ytmusic, softwaremixer, stream, m3u, file, http, iris
okt 24 09:36:04 Desktop-Ubuntu mopidy[992]: INFO     2022-10-24 09:36:04,531 [992:MainThread] mopidy.__main__
okt 24 09:36:04 Desktop-Ubuntu mopidy[992]:   Validating extension: stream
okt 24 09:36:04 Desktop-Ubuntu mopidy[992]: DEBUG    2022-10-24 09:36:04,530 [992:MainThread] mopidy.ext
okt 24 09:36:04 Desktop-Ubuntu mopidy[992]:   Validating extension: softwaremixer
okt 24 09:36:04 Desktop-Ubuntu mopidy[992]: DEBUG    2022-10-24 09:36:04,530 [992:MainThread] mopidy.ext
okt 24 09:36:04 Desktop-Ubuntu mopidy[992]:   Validating extension: m3u
okt 24 09:36:04 Desktop-Ubuntu mopidy[992]: DEBUG    2022-10-24 09:36:04,530 [992:MainThread] mopidy.ext
okt 24 09:36:02 Desktop-Ubuntu mopidy[992]:   Validating extension: http
okt 24 09:36:02 Desktop-Ubuntu mopidy[992]: DEBUG    2022-10-24 09:36:01,158 [992:MainThread] mopidy.ext
okt 24 09:36:02 Desktop-Ubuntu mopidy[992]:   Validating extension: file
okt 24 09:36:02 Desktop-Ubuntu mopidy[992]: DEBUG    2022-10-24 09:36:01,158 [992:MainThread] mopidy.ext
okt 24 09:36:02 Desktop-Ubuntu mopidy[992]:   Validating extension: iris
okt 24 09:36:02 Desktop-Ubuntu mopidy[992]: DEBUG    2022-10-24 09:36:00,875 [992:MainThread] mopidy.ext
okt 24 09:36:02 Desktop-Ubuntu mopidy[992]:   Validating extension: ytmusic
okt 24 09:36:02 Desktop-Ubuntu mopidy[992]: DEBUG    2022-10-24 09:36:00,565 [992:MainThread] mopidy.ext
okt 24 09:36:02 Desktop-Ubuntu mopidy[992]:   Validating extension: soundcloud
okt 24 09:36:02 Desktop-Ubuntu mopidy[992]: DEBUG    2022-10-24 09:36:00,478 [992:MainThread] mopidy.ext
okt 24 09:36:02 Desktop-Ubuntu mopidy[992]:   Validating extension: local
okt 24 09:36:02 Desktop-Ubuntu mopidy[992]: DEBUG    2022-10-24 09:36:00,332 [992:MainThread] mopidy.ext
okt 24 09:36:00 Desktop-Ubuntu mopidy[992]:   Validating extension: youtube
okt 24 09:36:00 Desktop-Ubuntu mopidy[992]: DEBUG    2022-10-24 09:35:59,924 [992:MainThread] mopidy.ext
okt 24 09:36:00 Desktop-Ubuntu mopidy[992]:   Ignoring config section 'jukebox' because no matching extension was found
okt 24 09:36:00 Desktop-Ubuntu mopidy[992]: WARNING  2022-10-24 09:35:59,922 [992:MainThread] mopidy.config
okt 24 09:36:00 Desktop-Ubuntu mopidy[992]:   Loading config from command line options
okt 24 09:36:00 Desktop-Ubuntu mopidy[992]: INFO     2022-10-24 09:35:59,847 [992:MainThread] mopidy.config
okt 24 09:36:00 Desktop-Ubuntu mopidy[992]:   Loading config from file:///etc/mopidy/mopidy.conf
okt 24 09:36:00 Desktop-Ubuntu mopidy[992]: INFO     2022-10-24 09:35:59,700 [992:MainThread] mopidy.config
okt 24 09:36:00 Desktop-Ubuntu mopidy[992]:   Loading config from file:///usr/share/mopidy/conf.d/mopidy.conf
okt 24 09:36:00 Desktop-Ubuntu mopidy[992]: INFO     2022-10-24 09:35:59,579 [992:MainThread] mopidy.config
okt 24 09:36:00 Desktop-Ubuntu mopidy[992]:   Loading config from builtin defaults
okt 24 09:36:00 Desktop-Ubuntu mopidy[992]: INFO     2022-10-24 09:35:59,461 [992:MainThread] mopidy.config
okt 24 09:36:00 Desktop-Ubuntu mopidy[992]:   Fetching passwords from your keyring failed. Any passwords stored in the keyring will not be available. (org.freedesktop.DBus.Error.NotSupported: Unable to autolaunch a dbus-daemon without a $DISPLAY for X11)
okt 24 09:36:00 Desktop-Ubuntu mopidy[992]: DEBUG    2022-10-24 09:35:59,461 [992:MainThread] mopidy.config.keyring
okt 24 09:36:00 Desktop-Ubuntu mopidy[992]:   Discovered extensions: youtube, local, soundcloud, ytmusic, iris, file, http, m3u, softwaremixer, stream
okt 24 09:36:00 Desktop-Ubuntu mopidy[992]: DEBUG    2022-10-24 09:35:59,400 [992:MainThread] mopidy.ext
okt 24 09:36:00 Desktop-Ubuntu mopidy[992]:   Loaded extension: Mopidy-Stream 3.3.0
okt 24 09:36:00 Desktop-Ubuntu mopidy[992]: DEBUG    2022-10-24 09:35:58,819 [992:MainThread] mopidy.ext
okt 24 09:36:00 Desktop-Ubuntu mopidy[992]:   Loading entry point: stream = mopidy.stream:Extension
okt 24 09:36:00 Desktop-Ubuntu mopidy[992]: DEBUG    2022-10-24 09:35:58,808 [992:MainThread] mopidy.ext
okt 24 09:36:00 Desktop-Ubuntu mopidy[992]:   Loaded extension: Mopidy-SoftwareMixer 3.3.0
okt 24 09:36:00 Desktop-Ubuntu mopidy[992]: DEBUG    2022-10-24 09:35:58,808 [992:MainThread] mopidy.ext
okt 24 09:36:00 Desktop-Ubuntu mopidy[992]:   Loading entry point: softwaremixer = mopidy.softwaremixer:Extension
okt 24 09:36:00 Desktop-Ubuntu mopidy[992]: DEBUG    2022-10-24 09:35:58,707 [992:MainThread] mopidy.ext
okt 24 09:36:00 Desktop-Ubuntu mopidy[992]:   Loaded extension: Mopidy-M3U 3.3.0
okt 24 09:36:00 Desktop-Ubuntu mopidy[992]: DEBUG    2022-10-24 09:35:58,707 [992:MainThread] mopidy.ext
okt 24 09:36:00 Desktop-Ubuntu mopidy[992]:   Loading entry point: m3u = mopidy.m3u:Extension
okt 24 09:36:00 Desktop-Ubuntu mopidy[992]: DEBUG    2022-10-24 09:35:58,521 [992:MainThread] mopidy.ext
okt 24 09:36:00 Desktop-Ubuntu mopidy[992]:   Loaded extension: Mopidy-HTTP 3.3.0
okt 24 09:36:00 Desktop-Ubuntu mopidy[992]: DEBUG    2022-10-24 09:35:58,521 [992:MainThread] mopidy.ext
okt 24 09:36:00 Desktop-Ubuntu mopidy[992]:   Loading entry point: http = mopidy.http:Extension
okt 24 09:36:00 Desktop-Ubuntu mopidy[992]: DEBUG    2022-10-24 09:35:58,496 [992:MainThread] mopidy.ext
okt 24 09:36:00 Desktop-Ubuntu mopidy[992]:   Loaded extension: Mopidy-File 3.3.0
okt 24 09:36:00 Desktop-Ubuntu mopidy[992]: DEBUG    2022-10-24 09:35:58,496 [992:MainThread] mopidy.ext
okt 24 09:36:00 Desktop-Ubuntu mopidy[992]:   Loading entry point: file = mopidy.file:Extension
okt 24 09:36:00 Desktop-Ubuntu mopidy[992]: DEBUG    2022-10-24 09:35:58,078 [992:MainThread] mopidy.ext
okt 24 09:36:00 Desktop-Ubuntu mopidy[992]:   Loaded extension: Mopidy-Iris 3.64.1
okt 24 09:36:00 Desktop-Ubuntu mopidy[992]: DEBUG    2022-10-24 09:35:57,876 [992:MainThread] mopidy.ext
okt 24 09:36:00 Desktop-Ubuntu mopidy[992]:   Loading entry point: iris = mopidy_iris:Extension
okt 24 09:36:00 Desktop-Ubuntu mopidy[992]: DEBUG    2022-10-24 09:35:57,507 [992:MainThread] mopidy.ext
okt 24 09:36:00 Desktop-Ubuntu mopidy[992]:   Loaded extension: Mopidy-YTMusic 0.3.7
okt 24 09:36:00 Desktop-Ubuntu mopidy[992]: DEBUG    2022-10-24 09:35:57,474 [992:MainThread] mopidy.ext
okt 24 09:36:00 Desktop-Ubuntu mopidy[992]:   Loading entry point: ytmusic = mopidy_ytmusic:Extension
okt 24 09:36:00 Desktop-Ubuntu mopidy[992]: DEBUG    2022-10-24 09:35:57,316 [992:MainThread] mopidy.ext
okt 24 09:36:00 Desktop-Ubuntu mopidy[992]:   Loaded extension: Mopidy-SoundCloud 3.0.1
okt 24 09:36:00 Desktop-Ubuntu mopidy[992]: DEBUG    2022-10-24 09:35:57,019 [992:MainThread] mopidy.ext
okt 24 09:36:00 Desktop-Ubuntu mopidy[992]:   Loading entry point: soundcloud = mopidy_soundcloud:Extension
okt 24 09:36:00 Desktop-Ubuntu mopidy[992]: DEBUG    2022-10-24 09:35:56,826 [992:MainThread] mopidy.ext
okt 24 09:36:00 Desktop-Ubuntu mopidy[992]:   Loaded extension: Mopidy-Local 3.2.1
okt 24 09:36:00 Desktop-Ubuntu mopidy[992]: DEBUG    2022-10-24 09:35:56,563 [992:MainThread] mopidy.ext
okt 24 09:36:00 Desktop-Ubuntu mopidy[992]:   Loading entry point: local = mopidy_local:Extension
okt 24 09:36:00 Desktop-Ubuntu mopidy[992]: DEBUG    2022-10-24 09:35:55,723 [992:MainThread] mopidy.ext
okt 24 09:36:00 Desktop-Ubuntu mopidy[992]:   Loaded extension: Mopidy-YouTube 3.6.1
okt 24 09:36:00 Desktop-Ubuntu mopidy[992]: DEBUG    2022-10-24 09:35:55,709 [992:MainThread] mopidy.ext
okt 24 09:36:00 Desktop-Ubuntu mopidy[992]:   Loading entry point: youtube = mopidy_youtube:Extension
okt 24 09:36:00 Desktop-Ubuntu mopidy[992]: DEBUG    2022-10-24 09:35:55,693 [992:MainThread] mopidy.ext
okt 24 09:35:59 Desktop-Ubuntu mopidy[992]:   Starting Mopidy 3.3.0
okt 24 09:35:59 Desktop-Ubuntu mopidy[992]: INFO     2022-10-24 09:35:55,426 [992:MainThread] mopidy.__main__
okt 24 09:35:33 Desktop-Ubuntu systemd[1]: Started Mopidy music server.
okt 24 09:35:33 Desktop-Ubuntu systemd[1]: Starting Mopidy music server...
-- Boot c1170c48ec56484d906c1e373279cf12 --
okt 24 00:13:23 Desktop-Ubuntu systemd[1]: mopidy.service: Consumed 1.038s CPU time.
okt 24 00:13:23 Desktop-Ubuntu systemd[1]: Stopped Mopidy music server.
okt 24 00:13:23 Desktop-Ubuntu systemd[1]: mopidy.service: Deactivated successfully.
okt 24 00:13:23 Desktop-Ubuntu systemd[1]: Stopping Mopidy music server...
okt 24 00:13:23 Desktop-Ubuntu mopidy[11259]: Failed loading provided credentials. Make sure to provide a string or a file path. Reason: Expecting value: line 1 column 1 (char 0)
okt 24 00:13:23 Desktop-Ubuntu mopidy[11259]:   All actors stopped.
okt 24 00:13:23 Desktop-Ubuntu mopidy[11259]: DEBUG    2022-10-24 00:13:23,592 [11259:MainThread] mopidy.internal.process
okt 24 00:13:23 Desktop-Ubuntu mopidy[11259]:   Stopped SoftwareMixer (urn:uuid:491147a9-cd7b-4d69-bd89-720272103781)
okt 24 00:13:23 Desktop-Ubuntu mopidy[11259]: DEBUG    2022-10-24 00:13:23,592 [11259:SoftwareMixer-1 (_actor_loop)] pykka
okt 24 00:13:23 Desktop-Ubuntu mopidy[11259]:   Unregistered SoftwareMixer (urn:uuid:491147a9-cd7b-4d69-bd89-720272103781)
okt 24 00:13:23 Desktop-Ubuntu mopidy[11259]: DEBUG    2022-10-24 00:13:23,591 [11259:SoftwareMixer-1 (_actor_loop)] pykka
okt 24 00:13:23 Desktop-Ubuntu mopidy[11259]:   Stopping 1 instance(s) of SoftwareMixer
okt 24 00:13:23 Desktop-Ubuntu mopidy[11259]: DEBUG    2022-10-24 00:13:23,591 [11259:MainThread] mopidy.internal.process
okt 24 00:13:23 Desktop-Ubuntu mopidy[11259]:   Stopping Mopidy mixer
okt 24 00:13:23 Desktop-Ubuntu mopidy[11259]: INFO     2022-10-24 00:13:23,591 [11259:MainThread] mopidy.commands
okt 24 00:13:23 Desktop-Ubuntu mopidy[11259]:   Stopped Audio (urn:uuid:42306c97-62a8-497b-b9a2-e7794d21b567)
okt 24 00:13:23 Desktop-Ubuntu mopidy[11259]: DEBUG    2022-10-24 00:13:23,590 [11259:Audio-2 (_actor_loop)] pykka
okt 24 00:13:23 Desktop-Ubuntu mopidy[11259]:   Unregistered Audio (urn:uuid:42306c97-62a8-497b-b9a2-e7794d21b567)
okt 24 00:13:23 Desktop-Ubuntu mopidy[11259]: DEBUG    2022-10-24 00:13:23,590 [11259:Audio-2 (_actor_loop)] pykka
okt 24 00:13:23 Desktop-Ubuntu mopidy[11259]:   Stopping 1 instance(s) of Audio
okt 24 00:13:23 Desktop-Ubuntu mopidy[11259]: DEBUG    2022-10-24 00:13:23,590 [11259:MainThread] mopidy.internal.process
okt 24 00:13:23 Desktop-Ubuntu mopidy[11259]:   Stopping Mopidy audio
okt 24 00:13:23 Desktop-Ubuntu mopidy[11259]: INFO     2022-10-24 00:13:23,589 [11259:MainThread] mopidy.commands
okt 24 00:13:23 Desktop-Ubuntu mopidy[11259]:   Stopped StreamBackend (urn:uuid:4154bc74-bb75-431d-a951-01764e73c4a5)
okt 24 00:13:23 Desktop-Ubuntu mopidy[11259]: DEBUG    2022-10-24 00:13:23,589 [11259:StreamBackend-7 (_actor_loop)] pykka
okt 24 00:13:23 Desktop-Ubuntu mopidy[11259]:   Unregistered StreamBackend (urn:uuid:4154bc74-bb75-431d-a951-01764e73c4a5)
okt 24 00:13:23 Desktop-Ubuntu mopidy[11259]: DEBUG    2022-10-24 00:13:23,589 [11259:StreamBackend-7 (_actor_loop)] pykka
okt 24 00:13:23 Desktop-Ubuntu mopidy[11259]:   Stopping 1 instance(s) of StreamBackend
okt 24 00:13:23 Desktop-Ubuntu mopidy[11259]: DEBUG    2022-10-24 00:13:23,589 [11259:MainThread] mopidy.internal.process
okt 24 00:13:23 Desktop-Ubuntu mopidy[11259]:   Stopped M3UBackend (urn:uuid:4bde6797-9490-4b58-b1e0-c9b5498b322d)
okt 24 00:13:23 Desktop-Ubuntu mopidy[11259]: DEBUG    2022-10-24 00:13:23,589 [11259:M3UBackend-6 (_actor_loop)] pykka
okt 24 00:13:23 Desktop-Ubuntu mopidy[11259]:   Unregistered M3UBackend (urn:uuid:4bde6797-9490-4b58-b1e0-c9b5498b322d)
okt 24 00:13:23 Desktop-Ubuntu mopidy[11259]: DEBUG    2022-10-24 00:13:23,589 [11259:M3UBackend-6 (_actor_loop)] pykka
okt 24 00:13:23 Desktop-Ubuntu mopidy[11259]:   Stopping 1 instance(s) of M3UBackend
okt 24 00:13:23 Desktop-Ubuntu mopidy[11259]: DEBUG    2022-10-24 00:13:23,589 [11259:MainThread] mopidy.internal.process
okt 24 00:13:23 Desktop-Ubuntu mopidy[11259]:   Stopped FileBackend (urn:uuid:f311b573-69c2-44f6-8325-0a1591e0136a)
okt 24 00:13:23 Desktop-Ubuntu mopidy[11259]: DEBUG    2022-10-24 00:13:23,588 [11259:FileBackend-5 (_actor_loop)] pykka
okt 24 00:13:23 Desktop-Ubuntu mopidy[11259]:   Unregistered FileBackend (urn:uuid:f311b573-69c2-44f6-8325-0a1591e0136a)
okt 24 00:13:23 Desktop-Ubuntu mopidy[11259]: DEBUG    2022-10-24 00:13:23,588 [11259:FileBackend-5 (_actor_loop)] pykka
okt 24 00:13:23 Desktop-Ubuntu mopidy[11259]:   Stopping 1 instance(s) of FileBackend
okt 24 00:13:23 Desktop-Ubuntu mopidy[11259]: DEBUG    2022-10-24 00:13:23,587 [11259:MainThread] mopidy.internal.process
okt 24 00:13:23 Desktop-Ubuntu mopidy[11259]:   Stopping 0 instance(s) of YTMusicBackend
okt 24 00:13:23 Desktop-Ubuntu mopidy[11259]: DEBUG    2022-10-24 00:13:23,587 [11259:MainThread] mopidy.internal.process
okt 24 00:13:23 Desktop-Ubuntu mopidy[11259]:   Stopped LocalBackend (urn:uuid:044b8ac1-d360-4c73-9a47-2e8f61f6e390)
okt 24 00:13:23 Desktop-Ubuntu mopidy[11259]: DEBUG    2022-10-24 00:13:23,587 [11259:LocalBackend-4 (_actor_loop)] pykka
okt 24 00:13:23 Desktop-Ubuntu mopidy[11259]:   Unregistered LocalBackend (urn:uuid:044b8ac1-d360-4c73-9a47-2e8f61f6e390)
okt 24 00:13:23 Desktop-Ubuntu mopidy[11259]: DEBUG    2022-10-24 00:13:23,587 [11259:LocalBackend-4 (_actor_loop)] pykka
okt 24 00:13:23 Desktop-Ubuntu mopidy[11259]:   Stopping 1 instance(s) of LocalBackend
okt 24 00:13:23 Desktop-Ubuntu mopidy[11259]: DEBUG    2022-10-24 00:13:23,586 [11259:MainThread] mopidy.internal.process
okt 24 00:13:23 Desktop-Ubuntu mopidy[11259]:   Stopped YouTubeBackend (urn:uuid:2edf6f6f-b715-47e4-a572-93ffa98a370c)
okt 24 00:13:23 Desktop-Ubuntu mopidy[11259]: DEBUG    2022-10-24 00:13:23,586 [11259:YouTubeBackend-3 (_actor_loop)] pykka
okt 24 00:13:23 Desktop-Ubuntu mopidy[11259]:   Unregistered YouTubeBackend (urn:uuid:2edf6f6f-b715-47e4-a572-93ffa98a370c)
okt 24 00:13:23 Desktop-Ubuntu mopidy[11259]: DEBUG    2022-10-24 00:13:23,586 [11259:YouTubeBackend-3 (_actor_loop)] pykka
okt 24 00:13:23 Desktop-Ubuntu mopidy[11259]:   Stopped HTTP server
okt 24 00:13:23 Desktop-Ubuntu mopidy[11259]: DEBUG    2022-10-24 00:13:23,585 [11259:HttpServer] mopidy.http.actor
okt 24 00:13:23 Desktop-Ubuntu mopidy[11259]:   Stopping 1 instance(s) of YouTubeBackend
okt 24 00:13:23 Desktop-Ubuntu mopidy[11259]: DEBUG    2022-10-24 00:13:23,585 [11259:MainThread] mopidy.internal.process
okt 24 00:13:23 Desktop-Ubuntu mopidy[11259]:   Stopping Mopidy backends
okt 24 00:13:23 Desktop-Ubuntu mopidy[11259]: INFO     2022-10-24 00:13:23,585 [11259:MainThread] mopidy.commands
okt 24 00:13:23 Desktop-Ubuntu mopidy[11259]:   Stopped Core (urn:uuid:eb583d58-ca6e-4c14-9e7f-2bfc07bfd76d)
okt 24 00:13:23 Desktop-Ubuntu mopidy[11259]: DEBUG    2022-10-24 00:13:23,585 [11259:Core-8 (_actor_loop)] pykka
okt 24 00:13:23 Desktop-Ubuntu mopidy[11259]:   Unregistered Core (urn:uuid:eb583d58-ca6e-4c14-9e7f-2bfc07bfd76d)
okt 24 00:13:23 Desktop-Ubuntu mopidy[11259]: DEBUG    2022-10-24 00:13:23,585 [11259:Core-8 (_actor_loop)] pykka
okt 24 00:13:23 Desktop-Ubuntu mopidy[11259]:   Stopping 1 instance(s) of Core
okt 24 00:13:23 Desktop-Ubuntu mopidy[11259]: DEBUG    2022-10-24 00:13:23,584 [11259:MainThread] mopidy.internal.process
okt 24 00:13:23 Desktop-Ubuntu mopidy[11259]:   Stopping Mopidy core
okt 24 00:13:23 Desktop-Ubuntu mopidy[11259]: INFO     2022-10-24 00:13:23,584 [11259:MainThread] mopidy.commands
okt 24 00:13:23 Desktop-Ubuntu mopidy[11259]:   Stopping HTTP server
okt 24 00:13:23 Desktop-Ubuntu mopidy[11259]: DEBUG    2022-10-24 00:13:23,584 [11259:HttpFrontend-14 (_actor_loop)] mopidy.http.actor
okt 24 00:13:23 Desktop-Ubuntu mopidy[11259]:   Zeroconf service 'Mopidy HTTP server on Desktop-Ubuntu' (_mopidy-http._tcp at []:6680): Unpublished
okt 24 00:13:23 Desktop-Ubuntu mopidy[11259]: DEBUG    2022-10-24 00:13:23,584 [11259:HttpFrontend-14 (_actor_loop)] mopidy.zeroconf
okt 24 00:13:23 Desktop-Ubuntu mopidy[11259]:   Zeroconf service 'Mopidy HTTP server on Desktop-Ubuntu' (_http._tcp at []:6680): Unpublished
okt 24 00:13:23 Desktop-Ubuntu mopidy[11259]: DEBUG    2022-10-24 00:13:23,574 [11259:HttpFrontend-14 (_actor_loop)] mopidy.zeroconf
okt 24 00:13:23 Desktop-Ubuntu mopidy[11259]:   Stopped HttpFrontend (urn:uuid:1336e334-9f6b-4d4f-9b84-2395baf4ffa5)
okt 24 00:13:23 Desktop-Ubuntu mopidy[11259]: DEBUG    2022-10-24 00:13:23,548 [11259:HttpFrontend-14 (_actor_loop)] pykka
okt 24 00:13:23 Desktop-Ubuntu mopidy[11259]:   Unregistered HttpFrontend (urn:uuid:1336e334-9f6b-4d4f-9b84-2395baf4ffa5)
okt 24 00:13:23 Desktop-Ubuntu mopidy[11259]: DEBUG    2022-10-24 00:13:23,548 [11259:HttpFrontend-14 (_actor_loop)] pykka
okt 24 00:13:23 Desktop-Ubuntu mopidy[11259]:   Stopping 1 instance(s) of HttpFrontend
okt 24 00:13:23 Desktop-Ubuntu mopidy[11259]: DEBUG    2022-10-24 00:13:23,548 [11259:MainThread] mopidy.internal.process
okt 24 00:13:23 Desktop-Ubuntu mopidy[11259]:   Stopping Iris
okt 24 00:13:23 Desktop-Ubuntu mopidy[11259]: INFO     2022-10-24 00:13:23,548 [11259:IrisFrontend-12 (_actor_loop)] mopidy_iris.core
okt 24 00:13:23 Desktop-Ubuntu mopidy[11259]:   Stopped IrisFrontend (urn:uuid:4b35401a-871b-4edf-8f17-6224b7d86114)
okt 24 00:13:23 Desktop-Ubuntu mopidy[11259]: DEBUG    2022-10-24 00:13:23,548 [11259:IrisFrontend-12 (_actor_loop)] pykka
okt 24 00:13:23 Desktop-Ubuntu mopidy[11259]:   Unregistered IrisFrontend (urn:uuid:4b35401a-871b-4edf-8f17-6224b7d86114)
okt 24 00:13:23 Desktop-Ubuntu mopidy[11259]: DEBUG    2022-10-24 00:13:23,547 [11259:IrisFrontend-12 (_actor_loop)] pykka
okt 24 00:13:23 Desktop-Ubuntu mopidy[11259]:   Stopping 1 instance(s) of IrisFrontend
okt 24 00:13:23 Desktop-Ubuntu mopidy[11259]: DEBUG    2022-10-24 00:13:23,547 [11259:MainThread] mopidy.internal.process
okt 24 00:13:23 Desktop-Ubuntu mopidy[11259]:   Stopped YTMusicScrobbleFE (urn:uuid:532ab3e1-9c51-4acc-b54a-12bd9b4dbe94)
okt 24 00:13:23 Desktop-Ubuntu mopidy[11259]: DEBUG    2022-10-24 00:13:23,547 [11259:YTMusicScrobbleFE-11 (_actor_loop)] pykka
okt 24 00:13:23 Desktop-Ubuntu mopidy[11259]:   Unregistered YTMusicScrobbleFE (urn:uuid:532ab3e1-9c51-4acc-b54a-12bd9b4dbe94)
okt 24 00:13:23 Desktop-Ubuntu mopidy[11259]: DEBUG    2022-10-24 00:13:23,547 [11259:YTMusicScrobbleFE-11 (_actor_loop)] pykka
okt 24 00:13:23 Desktop-Ubuntu mopidy[11259]:   Stopping 1 instance(s) of YTMusicScrobbleFE
okt 24 00:13:23 Desktop-Ubuntu mopidy[11259]: DEBUG    2022-10-24 00:13:23,547 [11259:MainThread] mopidy.internal.process
okt 24 00:13:23 Desktop-Ubuntu mopidy[11259]:   Stopped YouTubeCoreListener (urn:uuid:5a670e6d-d25f-4bfa-aa28-bceed402596a)
okt 24 00:13:23 Desktop-Ubuntu mopidy[11259]: DEBUG    2022-10-24 00:13:23,547 [11259:YouTubeCoreListener-10 (_actor_loop)] pykka
okt 24 00:13:23 Desktop-Ubuntu mopidy[11259]:   Unregistered YouTubeCoreListener (urn:uuid:5a670e6d-d25f-4bfa-aa28-bceed402596a)
okt 24 00:13:23 Desktop-Ubuntu mopidy[11259]: DEBUG    2022-10-24 00:13:23,547 [11259:YouTubeCoreListener-10 (_actor_loop)] pykka
okt 24 00:13:23 Desktop-Ubuntu mopidy[11259]:   Stopping 1 instance(s) of YouTubeCoreListener
okt 24 00:13:23 Desktop-Ubuntu mopidy[11259]: DEBUG    2022-10-24 00:13:23,546 [11259:MainThread] mopidy.internal.process
okt 24 00:13:23 Desktop-Ubuntu mopidy[11259]:   Stopped YouTubeAutoplayer (urn:uuid:b8735b07-b428-4c08-8cc1-416544b9b21e)
okt 24 00:13:23 Desktop-Ubuntu mopidy[11259]: DEBUG    2022-10-24 00:13:23,546 [11259:YouTubeAutoplayer-9 (_actor_loop)] pykka
okt 24 00:13:23 Desktop-Ubuntu mopidy[11259]:   Unregistered YouTubeAutoplayer (urn:uuid:b8735b07-b428-4c08-8cc1-416544b9b21e)
okt 24 00:13:23 Desktop-Ubuntu mopidy[11259]: DEBUG    2022-10-24 00:13:23,546 [11259:YouTubeAutoplayer-9 (_actor_loop)] pykka
okt 24 00:13:23 Desktop-Ubuntu mopidy[11259]:   Stopping 1 instance(s) of YouTubeAutoplayer
okt 24 00:13:23 Desktop-Ubuntu mopidy[11259]: DEBUG    2022-10-24 00:13:23,546 [11259:MainThread] mopidy.internal.process
okt 24 00:13:23 Desktop-Ubuntu mopidy[11259]:   Stopping Mopidy frontends
okt 24 00:13:23 Desktop-Ubuntu mopidy[11259]: INFO     2022-10-24 00:13:23,546 [11259:MainThread] mopidy.commands
okt 24 00:13:23 Desktop-Ubuntu mopidy[11259]:   GLib mainloop got SIGTERM. Exiting...
okt 24 00:13:23 Desktop-Ubuntu mopidy[11259]: INFO     2022-10-24 00:13:23,545 [11259:MainThread] mopidy.commands
okt 24 00:05:48 Desktop-Ubuntu mopidy[11259]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 12, "result": [{"__model__": "Ref", "uri": "file:///var/lib/mopidy", "name": "Files", "type": "directory"}, {"__model__": "Ref", "uri": "local:directory", "name": "Local media", "type": "directory"}, {"__model__": "Ref", "uri": "youtube:browse", "name": "YouTube", "type": "directory"}]}'
okt 24 00:05:48 Desktop-Ubuntu mopidy[11259]: DEBUG    2022-10-24 00:05:48,257 [11259:HttpServer] mopidy.http.handlers
okt 24 00:05:48 Desktop-Ubuntu mopidy[11259]:   Received WebSocket message from 127.0.0.1: '{"method":"core.library.browse","params":{"uri":null},"jsonrpc":"2.0","id":12}'
okt 24 00:05:48 Desktop-Ubuntu mopidy[11259]: DEBUG    2022-10-24 00:05:48,250 [11259:HttpServer] mopidy.http.handlers
okt 24 00:05:47 Desktop-Ubuntu mopidy[11259]:   {'id': 166656274712338, 'jsonrpc': '2.0', 'method': 'get_version', 'result': {'version': {'current': '3.64.1', 'latest': '3.64.1', 'is_root': False, 'upgrade_available': False}}, 'recipient': 'D6G6DN6P4YFZ'}
okt 24 00:05:47 Desktop-Ubuntu mopidy[11259]: DEBUG    2022-10-24 00:05:47,244 [11259:HttpServer] mopidy_iris.core
okt 24 00:05:47 Desktop-Ubuntu mopidy[11259]:   Iris websocket message received: {"jsonrpc":"2.0","id":166656274712338,"method":"get_version"}
okt 24 00:05:47 Desktop-Ubuntu mopidy[11259]: DEBUG    2022-10-24 00:05:47,124 [11259:HttpServer] mopidy_iris.handlers
okt 24 00:05:46 Desktop-Ubuntu mopidy[11259]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 11, "result": null}'
okt 24 00:05:46 Desktop-Ubuntu mopidy[11259]: DEBUG    2022-10-24 00:05:46,712 [11259:HttpServer] mopidy.http.handlers
okt 24 00:05:46 Desktop-Ubuntu mopidy[11259]:   Received WebSocket message from 127.0.0.1: '{"method":"core.playback.get_stream_title","params":{},"jsonrpc":"2.0","id":11}'
okt 24 00:05:46 Desktop-Ubuntu mopidy[11259]: DEBUG    2022-10-24 00:05:46,712 [11259:HttpServer] mopidy.http.handlers
okt 24 00:05:46 Desktop-Ubuntu mopidy[11259]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 10, "result": ["file", "http", "https", "local", "m3u", "rtsp", "youtube", "yt"]}'
okt 24 00:05:46 Desktop-Ubuntu mopidy[11259]: DEBUG    2022-10-24 00:05:46,712 [11259:HttpServer] mopidy.http.handlers
okt 24 00:05:46 Desktop-Ubuntu mopidy[11259]:   Received WebSocket message from 127.0.0.1: '{"method":"core.get_uri_schemes","params":{},"jsonrpc":"2.0","id":10}'
okt 24 00:05:46 Desktop-Ubuntu mopidy[11259]: DEBUG    2022-10-24 00:05:46,711 [11259:HttpServer] mopidy.http.handlers
okt 24 00:05:46 Desktop-Ubuntu mopidy[11259]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 9, "result": 0}'
okt 24 00:05:46 Desktop-Ubuntu mopidy[11259]: DEBUG    2022-10-24 00:05:46,711 [11259:HttpServer] mopidy.http.handlers
okt 24 00:05:46 Desktop-Ubuntu mopidy[11259]:   Received WebSocket message from 127.0.0.1: '{"method":"core.playback.get_time_position","params":{},"jsonrpc":"2.0","id":9}'
okt 24 00:05:46 Desktop-Ubuntu mopidy[11259]: DEBUG    2022-10-24 00:05:46,710 [11259:HttpServer] mopidy.http.handlers
okt 24 00:05:46 Desktop-Ubuntu mopidy[11259]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 8, "result": []}'
okt 24 00:05:46 Desktop-Ubuntu mopidy[11259]: DEBUG    2022-10-24 00:05:46,710 [11259:HttpServer] mopidy.http.handlers
okt 24 00:05:46 Desktop-Ubuntu mopidy[11259]:   Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_tl_tracks","params":{},"jsonrpc":"2.0","id":8}'
okt 24 00:05:46 Desktop-Ubuntu mopidy[11259]: DEBUG    2022-10-24 00:05:46,709 [11259:HttpServer] mopidy.http.handlers
okt 24 00:05:46 Desktop-Ubuntu mopidy[11259]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 7, "result": false}'
okt 24 00:05:46 Desktop-Ubuntu mopidy[11259]: DEBUG    2022-10-24 00:05:46,709 [11259:HttpServer] mopidy.http.handlers
okt 24 00:05:46 Desktop-Ubuntu mopidy[11259]:   Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_repeat","params":{},"jsonrpc":"2.0","id":7}'
okt 24 00:05:46 Desktop-Ubuntu mopidy[11259]: DEBUG    2022-10-24 00:05:46,709 [11259:HttpServer] mopidy.http.handlers
okt 24 00:05:46 Desktop-Ubuntu mopidy[11259]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 6, "result": false}'
okt 24 00:05:46 Desktop-Ubuntu mopidy[11259]: DEBUG    2022-10-24 00:05:46,708 [11259:HttpServer] mopidy.http.handlers
okt 24 00:05:46 Desktop-Ubuntu mopidy[11259]:   Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_random","params":{},"jsonrpc":"2.0","id":6}'
okt 24 00:05:46 Desktop-Ubuntu mopidy[11259]: DEBUG    2022-10-24 00:05:46,708 [11259:HttpServer] mopidy.http.handlers
okt 24 00:05:46 Desktop-Ubuntu mopidy[11259]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 5, "result": false}'
okt 24 00:05:46 Desktop-Ubuntu mopidy[11259]: DEBUG    2022-10-24 00:05:46,708 [11259:HttpServer] mopidy.http.handlers
okt 24 00:05:46 Desktop-Ubuntu mopidy[11259]:   Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_consume","params":{},"jsonrpc":"2.0","id":5}'
okt 24 00:05:46 Desktop-Ubuntu mopidy[11259]: DEBUG    2022-10-24 00:05:46,708 [11259:HttpServer] mopidy.http.handlers
okt 24 00:05:46 Desktop-Ubuntu mopidy[11259]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 4, "result": false}'
okt 24 00:05:46 Desktop-Ubuntu mopidy[11259]: DEBUG    2022-10-24 00:05:46,707 [11259:HttpServer] mopidy.http.handlers
okt 24 00:05:46 Desktop-Ubuntu mopidy[11259]:   Received WebSocket message from 127.0.0.1: '{"method":"core.mixer.get_mute","params":{},"jsonrpc":"2.0","id":4}'
okt 24 00:05:46 Desktop-Ubuntu mopidy[11259]: DEBUG    2022-10-24 00:05:46,707 [11259:HttpServer] mopidy.http.handlers
okt 24 00:05:46 Desktop-Ubuntu mopidy[11259]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 3, "result": 100}'
okt 24 00:05:46 Desktop-Ubuntu mopidy[11259]: DEBUG    2022-10-24 00:05:46,706 [11259:HttpServer] mopidy.http.handlers
okt 24 00:05:46 Desktop-Ubuntu mopidy[11259]:   Received WebSocket message from 127.0.0.1: '{"method":"core.mixer.get_volume","params":{},"jsonrpc":"2.0","id":3}'
okt 24 00:05:46 Desktop-Ubuntu mopidy[11259]: DEBUG    2022-10-24 00:05:46,706 [11259:HttpServer] mopidy.http.handlers
okt 24 00:05:46 Desktop-Ubuntu mopidy[11259]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 2, "result": "stopped"}'
okt 24 00:05:46 Desktop-Ubuntu mopidy[11259]: DEBUG    2022-10-24 00:05:46,705 [11259:HttpServer] mopidy.http.handlers
okt 24 00:05:46 Desktop-Ubuntu mopidy[11259]:   Received WebSocket message from 127.0.0.1: '{"method":"core.playback.get_state","params":{},"jsonrpc":"2.0","id":2}'
okt 24 00:05:46 Desktop-Ubuntu mopidy[11259]: DEBUG    2022-10-24 00:05:46,705 [11259:HttpServer] mopidy.http.handlers
okt 24 00:05:46 Desktop-Ubuntu mopidy[11259]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 1, "result": null}'
okt 24 00:05:46 Desktop-Ubuntu mopidy[11259]: DEBUG    2022-10-24 00:05:46,705 [11259:HttpServer] mopidy.http.handlers
okt 24 00:05:46 Desktop-Ubuntu mopidy[11259]:   Received WebSocket message from 127.0.0.1: '{"method":"core.playback.get_current_tl_track","params":{},"jsonrpc":"2.0","id":1}'
okt 24 00:05:46 Desktop-Ubuntu mopidy[11259]: DEBUG    2022-10-24 00:05:46,704 [11259:HttpServer] mopidy.http.handlers
okt 24 00:05:46 Desktop-Ubuntu mopidy[11259]:   {'id': 166656274662298, 'jsonrpc': '2.0', 'method': 'get_queue_metadata', 'result': {'queue_metadata': {}}, 'recipient': 'D6G6DN6P4YFZ'}
okt 24 00:05:46 Desktop-Ubuntu mopidy[11259]: DEBUG    2022-10-24 00:05:46,623 [11259:HttpServer] mopidy_iris.core
okt 24 00:05:46 Desktop-Ubuntu mopidy[11259]:   Iris websocket message received: {"jsonrpc":"2.0","id":166656274662298,"method":"get_queue_metadata"}
okt 24 00:05:46 Desktop-Ubuntu mopidy[11259]: DEBUG    2022-10-24 00:05:46,623 [11259:HttpServer] mopidy_iris.handlers
okt 24 00:05:46 Desktop-Ubuntu mopidy[11259]:   {'id': 166656274662181, 'jsonrpc': '2.0', 'method': 'get_pinned', 'result': {'pinned': []}, 'recipient': 'D6G6DN6P4YFZ'}
okt 24 00:05:46 Desktop-Ubuntu mopidy[11259]: DEBUG    2022-10-24 00:05:46,622 [11259:HttpServer] mopidy_iris.core
okt 24 00:05:46 Desktop-Ubuntu mopidy[11259]:   Iris websocket message received: {"jsonrpc":"2.0","id":166656274662181,"method":"get_pinned"}
okt 24 00:05:46 Desktop-Ubuntu mopidy[11259]: DEBUG    2022-10-24 00:05:46,621 [11259:HttpServer] mopidy_iris.handlers
okt 24 00:05:46 Desktop-Ubuntu mopidy[11259]:   {'id': 166656274662025, 'jsonrpc': '2.0', 'method': 'get_commands', 'result': {'commands': {}}, 'recipient': 'D6G6DN6P4YFZ'}
okt 24 00:05:46 Desktop-Ubuntu mopidy[11259]: DEBUG    2022-10-24 00:05:46,621 [11259:HttpServer] mopidy_iris.core
okt 24 00:05:46 Desktop-Ubuntu mopidy[11259]:   Iris websocket message received: {"jsonrpc":"2.0","id":166656274662025,"method":"get_commands"}
okt 24 00:05:46 Desktop-Ubuntu mopidy[11259]: DEBUG    2022-10-24 00:05:46,621 [11259:HttpServer] mopidy_iris.handlers
okt 24 00:05:46 Desktop-Ubuntu mopidy[11259]:   {'id': 166656274661917, 'jsonrpc': '2.0', 'method': 'get_radio', 'result': {'radio': {'enabled': 0, 'seed_artists': [], 'seed_genres': [], 'seed_tracks': [], 'results': []}}, 'recipient': 'D6G6DN6P4YFZ'}
okt 24 00:05:46 Desktop-Ubuntu mopidy[11259]: DEBUG    2022-10-24 00:05:46,621 [11259:HttpServer] mopidy_iris.core
okt 24 00:05:46 Desktop-Ubuntu mopidy[11259]:   Iris websocket message received: {"jsonrpc":"2.0","id":166656274661917,"method":"get_radio"}
okt 24 00:05:46 Desktop-Ubuntu mopidy[11259]: DEBUG    2022-10-24 00:05:46,621 [11259:HttpServer] mopidy_iris.handlers
okt 24 00:05:46 Desktop-Ubuntu mopidy[11259]:   {'id': 166656274661828, 'jsonrpc': '2.0', 'method': 'get_shared_config', 'result': {'shared_config': {}}, 'recipient': 'D6G6DN6P4YFZ'}
okt 24 00:05:46 Desktop-Ubuntu mopidy[11259]: DEBUG    2022-10-24 00:05:46,620 [11259:HttpServer] mopidy_iris.core
okt 24 00:05:46 Desktop-Ubuntu mopidy[11259]:   Iris websocket message received: {"jsonrpc":"2.0","id":166656274661828,"method":"get_shared_config"}
okt 24 00:05:46 Desktop-Ubuntu mopidy[11259]: DEBUG    2022-10-24 00:05:46,620 [11259:HttpServer] mopidy_iris.handlers
okt 24 00:05:46 Desktop-Ubuntu mopidy[11259]:   {'id': 166656274661796, 'jsonrpc': '2.0', 'method': 'get_config', 'result': {'config': {'is_root': False, 'spotify_username': False, 'country': 'NZ', 'locale': 'en_NZ', 'snapcast_enabled': True, 'snapcast_host': 'localhost', 'snapcast_port': '1780', 'snapcast_ssl': False, 'snapcast_stream': 'Default', 'spotify_authorization_url': 'https://jamesbarnsley.co.nz/iris/auth_spotify.php', 'lastfm_authorization_url': 'https://jamesbarnsley.co.nz/iris/auth_lastfm.php', 'genius_authorization_url': 'https://jamesbarnsley.co.nz/iris/auth_genius.php', 'shared_config': {}}}, 'recipient': 'D6G6DN6P4YFZ'}
okt 24 00:05:46 Desktop-Ubuntu mopidy[11259]: DEBUG    2022-10-24 00:05:46,620 [11259:HttpServer] mopidy_iris.core
okt 24 00:05:46 Desktop-Ubuntu mopidy[11259]:   Iris websocket message received: {"jsonrpc":"2.0","id":166656274661796,"method":"get_config"}
okt 24 00:05:46 Desktop-Ubuntu mopidy[11259]: DEBUG    2022-10-24 00:05:46,620 [11259:HttpServer] mopidy_iris.handlers
okt 24 00:05:46 Desktop-Ubuntu mopidy[11259]:   {'id': 166656274661646, 'jsonrpc': '2.0', 'method': 'update_connection', 'result': {'connection': {'connection_id': 'D6G6DN6P4YFZ', 'ip': '127.0.0.1', 'created': '2022-10-24 00:05:46', 'username': 166656148284185, 'client_id': 166656148284193}}, 'recipient': 'D6G6DN6P4YFZ'}
okt 24 00:05:46 Desktop-Ubuntu mopidy[11259]: DEBUG    2022-10-24 00:05:46,619 [11259:HttpServer] mopidy_iris.core
okt 24 00:05:46 Desktop-Ubuntu mopidy[11259]:   {'method': 'connection_changed', 'params': {'connection': {'connection_id': 'D6G6DN6P4YFZ', 'ip': '127.0.0.1', 'created': '2022-10-24 00:05:46', 'username': 166656148284185, 'client_id': 166656148284193}}}
okt 24 00:05:46 Desktop-Ubuntu mopidy[11259]: DEBUG    2022-10-24 00:05:46,619 [11259:HttpServer] mopidy_iris.core
okt 24 00:05:46 Desktop-Ubuntu mopidy[11259]:   Iris websocket message received: {"jsonrpc":"2.0","id":166656274661646,"method":"update_connection","params":{"username":166656148284185,"client_id":166656148284193}}
okt 24 00:05:46 Desktop-Ubuntu mopidy[11259]: DEBUG    2022-10-24 00:05:46,619 [11259:HttpServer] mopidy_iris.handlers
okt 24 00:05:46 Desktop-Ubuntu mopidy[11259]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 0, "result": {"core.get_uri_schemes": {"description": "Get list of URI schemes we can handle", "params": []}, "core.get_version": {"description": "Get version of the Mopidy core API", "params": []}, "core.history.get_history": {"description": "Get the track history.\\n\\nThe timestamps are milliseconds since epoch.\\n\\n:returns: the track history\\n:rtype: list of (timestamp, :class:`mopidy.models.Ref`) tuples", "params": []}, "core.history.get_length": {"description": "Get the number of tracks in the history.\\n\\n:returns: the history length\\n:rtype: int", "params": []}, "core.library.browse": {"description": "Browse directories and tracks at the given ``uri``.\\n\\n``uri`` is a string which represents some directory belonging to a\\nbackend. To get the intial root directories for backends pass\\n:class:`None` as the URI.\\n\\nReturns a list of :class:`mopidy.models.Ref` objects for the\\ndirectories and tracks at the given ``uri``.\\n\\nThe :class:`~mopidy.models.Ref` objects representing tracks keep the\\ntrack\'s original URI. A matching pair of objects can look like this::\\n\\n    Track(uri=\'dummy:/foo.mp3\', name=\'foo\', artists=..., album=...)\\n    Ref.track(uri=\'dummy:/foo.mp3\', name=\'foo\')\\n\\nThe :class:`~mopidy.models.Ref` objects representing directories have\\nbackend specific URIs. These are opaque values, so no one but the\\nbackend that created them should try and derive any meaning from them.\\nThe only valid exception to this is checking the scheme, as it is used\\nto route browse requests to the correct backend.\\n\\nFor example, the dummy library\'s ``/bar`` directory could be returned\\nlike this::\\n\\n    Ref.directory(uri=\'dummy:directory:/bar\', name=\'bar\')\\n\\n:param string uri: URI to browse\\n:rtype: list of :class:`mopidy.models.Ref`\\n\\n.. versionadded:: 0.18", "params": [{"name": "uri"}]}, "core.library.get_distinct": {"description": "List distinct values for a given field from the library.\\n\\nThis has mainly been added to support the list commands the MPD\\nprotocol supports in a more sane fashion. Other frontends are not\\nrecommended to use this method.\\n\\n:param string field: Any one of ``uri``, ``track_name``, ``album``,\\n    ``artist``, ``albumartist``, ``composer``, ``performer``,\\n    ``track_no``, ``genre``, ``date``, ``comment``, ``disc_no``,\\n    ``musicbrainz_albumid``, ``musicbrainz_artistid``, or\\n    ``musicbrainz_trackid``.\\n:param dict query: Query to use for limiting results, see\\n    :meth:`search` for details about the query format.\\n:rtype: set of values corresponding to the requested field type.\\n\\n.. versionadded:: 1.0", "params": [{"name": "field"}, {"name": "query", "default": null}]}, "core.library.get_images": {"description": "Lookup the images for the given URIs\\n\\nBackends can use this to return image URIs for any URI they know about\\nbe it tracks, albums, playlists. The lookup result is a dictionary\\nmapping the provided URIs to lists of images.\\n\\nUnknown URIs or URIs the corresponding backend couldn\'t find anything\\nfor will simply return an empty list for that URI.\\n\\n:param uris: list of URIs to find images for\\n:type uris: list of string\\n:rtype: {uri: tuple of :class:`mopidy.models.Image`}\\n\\n.. versionadded:: 1.0", "params": [{"name": "uris"}]}, "core.library.lookup": {"description": "Lookup the given URIs.\\n\\nIf the URI expands to multiple tracks, the returned list will contain\\nthem all.\\n\\n:param uris: track URIs\\n:type uris: list of string\\n:rtype: {uri: list of :class:`mopidy.models.Track`}", "params": [{"name": "uris"}]}, "core.library.refresh": {"description": "Refresh library. Limit to URI and below if an URI is given.\\n\\n:param uri: directory or track URI\\n:type uri: string", "params": [{"name": "uri", "default": null}]}, "core.library.search": {"description": "Search the library for tracks where ``field`` contains ``values``.\\n\\n``field`` can be one of ``uri``, ``track_name``, ``album``, ``artist``,\\n``albumartist``, ``composer``, ``performer``, ``track_no``, ``genre``,\\n``date``, ``comment``, ``disc_no``, ``musicbrainz_albumid``,\\n``musicbrainz_artistid``, ``musicbrainz_trackid`` or ``any``.\\n\\nIf ``uris`` is given, the search is limited to results from within the\\nURI roots. For example passing ``uris=[\'file:\']`` will limit the search\\nto the local backend.\\n\\nExamples::\\n\\n    # Returns results matching \'a\' in any backend\\n    search({\'any\': [\'a\']})\\n\\n    # Returns results matching artist \'xyz\' in any backend\\n    search({\'artist\': [\'xyz\']})\\n\\n    # Returns results matching \'a\' and \'b\' and artist \'xyz\' in any\\n    # backend\\n    search({\'any\': [\'a\', \'b\'], \'artist\': [\'xyz\']})\\n\\n    # Returns results matching \'a\' if within the given URI roots\\n    # \\"file:///media/music\\" and \\"spotify:\\"\\n    search({\'any\': [\'a\']}, uris=[\'file:///media/music\', \'spotify:\'])\\n\\n    # Returns results matching artist \'xyz\' and \'abc\' in any backend\\n    search({\'artist\': [\'xyz\', \'abc\']})\\n\\n:param query: one or more queries to search for\\n:type query: dict\\n:param uris: zero or more URI roots to limit the search to\\n:type uris: list of string or :class:`None`\\n:param exact: if the search should use exact matching\\n:type exact: :class:`bool`\\n:rtype: list of :class:`mopidy.models.SearchResult`\\n\\n.. versionadded:: 1.0\\n    The ``exact`` keyword argument.", "params": [{"name": "query"}, {"name": "uris", "default": null}, {"name": "exact", "default": false}]}, "core.mixer.get_mute": {"description": "Get mute state.\\n\\n:class:`True` if muted, :class:`False` unmuted, :class:`None` if\\nunknown.", "params": []}, "core.mixer.get_volume": {"description": "Get the volume.\\n\\nInteger in range [0..100] or :class:`None` if unknown.\\n\\nThe volume scale is linear.", "params": []}, "core.mixer.set_mute": {"description": "Set mute state.\\n\\n:class:`True` to mute, :class:`False` to unmute.\\n\\nReturns :class:`True` if call is successful, otherwise :class:`False`.", "params": [{"name": "mute"}]}, "core.mixer.set_volume": {"description": "Set the volume.\\n\\nThe volume is defined as an integer in range [0..100].\\n\\nThe volume scale is linear.\\n\\nReturns :class:`True` if call is successful, otherwise :class:`False`.", "params": [{"name": "volume"}]}, "core.playback.get_current_tl_track": {"description": "Get the currently playing or selected track.\\n\\nReturns a :class:`mopidy.models.TlTrack` or :class:`None`.", "params": []}, "core.playback.get_current_tlid": {"description": "Get the currently playing or selected TLID.\\n\\nExtracted from :meth:`get_current_tl_track` for convenience.\\n\\nReturns a :class:`int` or :class:`None`.\\n\\n.. versionadded:: 1.1", "params": []}, "core.playback.get_current_track": {"description": "Get the currently playing or selected track.\\n\\nExtracted from :meth:`get_current_tl_track` for convenience.\\n\\nReturns a :class:`mopidy.models.Track` or :class:`None`.", "params": []}, "core.playback.get_state": {"description": "Get The playback state.", "params": []}, "core.playback.get_stream_title": {"description": "Get the current stream title or :class:`None`.", "params": []}, "core.playback.get_time_position": {"description": "Get time position in milliseconds.", "params": []}, "core.playback.next": {"description": "Change to the next track.\\n\\nThe current playback state will be kept. If it was playing, playing\\nwill continue. If it was paused, it will still be paused, etc.", "params": []}, "core.playback.pause": {"description": "Pause playback.", "params": []}, "core.playback.play": {"description": "Play the given track, or if the given tl_track and tlid is\\n:class:`None`, play the currently active track.\\n\\nNote that the track **must** already be in the tracklist.\\n\\n.. deprecated:: 3.0\\n    The ``tl_track`` argument. Use ``tlid`` instead.\\n\\n:param tl_track: track to play\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:param tlid: TLID of the track to play\\n:type tlid: :class:`int` or :class:`None`", "params": [{"name": "tl_track", "default": null}, {"name": "tlid", "default": null}]}, "core.playback.previous": {"description": "Change to the previous track.\\n\\nThe current playback state will be kept. If it was playing, playing\\nwill continue. If it was paused, it will still be paused, etc.", "params": []}, "core.playback.resume": {"description": "If paused, resume playing the current track.", "params": []}, "core.playback.seek": {"description": "Seeks to time position given in milliseconds.\\n\\n:param time_position: time position in milliseconds\\n:type time_position: int\\n:rtype: :class:`True` if successful, else :class:`False`", "params": [{"name": "time_position"}]}, "core.playback.set_state": {"description": "Set the playback state.\\n\\nMust be :attr:`PLAYING`, :attr:`PAUSED`, or :attr:`STOPPED`.\\n\\nPossible states and transitions:\\n\\n.. digraph:: state_transitions\\n\\n    \\"STOPPED\\" -> \\"PLAYING\\" [ label=\\"play\\" ]\\n    \\"STOPPED\\" -> \\"PAUSED\\" [ label=\\"pause\\" ]\\n    \\"PLAYING\\" -> \\"STOPPED\\" [ label=\\"stop\\" ]\\n    \\"PLAYING\\" -> \\"PAUSED\\" [ label=\\"pause\\" ]\\n    \\"PLAYING\\" -> \\"PLAYING\\" [ label=\\"play\\" ]\\n    \\"PAUSED\\" -> \\"PLAYING\\" [ label=\\"resume\\" ]\\n    \\"PAUSED\\" -> \\"STOPPED\\" [ label=\\"stop\\" ]", "params": [{"name": "new_state"}]}, "core.playback.stop": {"description": "Stop playing.", "params": []}, "core.playlists.as_list": {"description": "Get a list of the currently available playlists.\\n\\nReturns a list of :class:`~mopidy.models.Ref` objects referring to the\\nplaylists. In other words, no information about the playlists\' content\\nis given.\\n\\n:rtype: list of :class:`mopidy.models.Ref`\\n\\n.. versionadded:: 1.0", "params": []}, "core.playlists.create": {"description": "Create a new playlist.\\n\\nIf ``uri_scheme`` matches an URI scheme handled by a current backend,\\nthat backend is asked to create the playlist. If ``uri_scheme`` is\\n:class:`None` or doesn\'t match a current backend, the first backend is\\nasked to create the playlist.\\n\\nAll new playlists must be created by calling this method, and **not**\\nby creating new instances of :class:`mopidy.models.Playlist`.\\n\\n:param name: name of the new playlist\\n:type name: string\\n:param uri_scheme: use the backend matching the URI scheme\\n:type uri_scheme: string\\n:rtype: :class:`mopidy.models.Playlist` or :class:`None`", "params": [{"name": "name"}, {"name": "uri_scheme", "default": null}]}, "core.playlists.delete": {"description": "Delete playlist identified by the URI.\\n\\nIf the URI doesn\'t match the URI schemes handled by the current\\nbackends, nothing happens.\\n\\nReturns :class:`True` if deleted, :class:`False` otherwise.\\n\\n:param uri: URI of the playlist to delete\\n:type uri: string\\n:rtype: :class:`bool`\\n\\n.. versionchanged:: 2.2\\n    Return type defined.", "params": [{"name": "uri"}]}, "core.playlists.get_items": {"description": "Get the items in a playlist specified by ``uri``.\\n\\nReturns a list of :class:`~mopidy.models.Ref` objects referring to the\\nplaylist\'s items.\\n\\nIf a playlist with the given ``uri`` doesn\'t exist, it returns\\n:class:`None`.\\n\\n:rtype: list of :class:`mopidy.models.Ref`, or :class:`None`\\n\\n.. versionadded:: 1.0", "params": [{"name": "uri"}]}, "core.playlists.get_uri_schemes": {"description": "Get the list of URI schemes that support playlists.\\n\\n:rtype: list of string\\n\\n.. versionadded:: 2.0", "params": []}, "core.playlists.lookup": {"description": "Lookup playlist with given URI in both the set of playlists and in any\\nother playlist sources. Returns :class:`None` if not found.\\n\\n:param uri: playlist URI\\n:type uri: string\\n:rtype: :class:`mopidy.models.Playlist` or :class:`None`", "params": [{"name": "uri"}]}, "core.playlists.refresh": {"description": "Refresh the playlists in :attr:`playlists`.\\n\\nIf ``uri_scheme`` is :class:`None`, all backends are asked to refresh.\\nIf ``uri_scheme`` is an URI scheme handled by a backend, only that\\nbackend is asked to refresh. If ``uri_scheme`` doesn\'t match any\\ncurrent backend, nothing happens.\\n\\n:param uri_scheme: limit to the backend matching the URI scheme\\n:type uri_scheme: string", "params": [{"name": "uri_scheme", "default": null}]}, "core.playlists.save": {"description": "Save the playlist.\\n\\nFor a playlist to be saveable, it must have the ``uri`` attribute set.\\nYou must not set the ``uri`` atribute yourself, but use playlist\\nobjects returned by :meth:`create` or retrieved from :attr:`playlists`,\\nwhich will always give you saveable playlists.\\n\\nThe method returns the saved playlist. The return playlist may differ\\nfrom the saved playlist. E.g. if the playlist name was changed, the\\nreturned playlist may have a different URI. The caller of this method\\nmust throw away the playlist sent to this method, and use the\\nreturned playlist instead.\\n\\nIf the playlist\'s URI isn\'t set or doesn\'t match the URI scheme of a\\ncurrent backend, nothing is done and :class:`None` is returned.\\n\\n:param playlist: the playlist\\n:type playlist: :class:`mopidy.models.Playlist`\\n:rtype: :class:`mopidy.models.Playlist` or :class:`None`", "params": [{"name": "playlist"}]}, "core.tracklist.add": {"description": "Add tracks to the tracklist.\\n\\nIf ``uris`` is given instead of ``tracks``, the URIs are\\nlooked up in the library and the resulting tracks are added to the\\ntracklist.\\n\\nIf ``at_position`` is given, the tracks are inserted at the given\\nposition in the tracklist. If ``at_position`` is not given, the tracks\\nare appended to the end of the tracklist.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.\\n\\n:param tracks: tracks to add\\n:type tracks: list of :class:`mopidy.models.Track` or :class:`None`\\n:param at_position: position in tracklist to add tracks\\n:type at_position: int or :class:`None`\\n:param uris: list of URIs for tracks to add\\n:type uris: list of string or :class:`None`\\n:rtype: list of :class:`mopidy.models.TlTrack`\\n\\n.. versionadded:: 1.0\\n    The ``uris`` argument.\\n\\n.. deprecated:: 1.0\\n    The ``tracks`` argument. Use ``uris``.", "params": [{"name": "tracks", "default": null}, {"name": "at_position", "default": null}, {"name": "uris", "default": null}]}, "core.tracklist.clear": {"description": "Clear the tracklist.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.", "params": []}, "core.tracklist.eot_track": {"description": "The track that will be played after the given track.\\n\\nNot necessarily the same track as :meth:`next_track`.\\n\\n.. deprecated:: 3.0\\n    Use :meth:`get_eot_tlid` instead.\\n\\n:param tl_track: the reference track\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:rtype: :class:`mopidy.models.TlTrack` or :class:`None`", "params": [{"name": "tl_track"}]}, "core.tracklist.filter": {"description": "Filter the tracklist by the given criteria.\\n\\nEach rule in the criteria consists of a model field and a list of\\nvalues to compare it against. If the model field matches any of the\\nvalues, it may be returned.\\n\\nOnly tracks that match all the given criteria are returned.\\n\\nExamples::\\n\\n    # Returns tracks with TLIDs 1, 2, 3, or 4 (tracklist ID)\\n    filter({\'tlid\': [1, 2, 3, 4]})\\n\\n    # Returns track with URIs \'xyz\' or \'abc\'\\n    filter({\'uri\': [\'xyz\', \'abc\']})\\n\\n    # Returns track with a matching TLIDs (1, 3 or 6) and a\\n    # matching URI (\'xyz\' or \'abc\')\\n    filter({\'tlid\': [1, 3, 6], \'uri\': [\'xyz\', \'abc\']})\\n\\n:param criteria: one or more rules to match by\\n:type criteria: dict, of (string, list) pairs\\n:rtype: list of :class:`mopidy.models.TlTrack`", "params": [{"name": "criteria"}]}, "core.tracklist.get_consume": {"description": "Get consume mode.\\n\\n:class:`True`\\n    Tracks are removed from the tracklist when they have been played.\\n:class:`False`\\n    Tracks are not removed from the tracklist.", "params": []}, "core.tracklist.get_eot_tlid": {"description": "The TLID of the track that will be played after the current track.\\n\\nNot necessarily the same TLID as returned by :meth:`get_next_tlid`.\\n\\n:rtype: :class:`int` or :class:`None`\\n\\n.. versionadded:: 1.1", "params": []}, "core.tracklist.get_length": {"description": "Get length of the tracklist.", "params": []}, "core.tracklist.get_next_tlid": {"description": "The tlid of the track that will be played if calling\\n:meth:`mopidy.core.PlaybackController.next()`.\\n\\nFor normal playback this is the next track in the tracklist. If repeat\\nis enabled the next track can loop around the tracklist. When random is\\nenabled this should be a random track, all tracks should be played once\\nbefore the tracklist repeats.\\n\\n:rtype: :class:`int` or :class:`None`\\n\\n.. versionadded:: 1.1", "params": []}, "core.tracklist.get_previous_tlid": {"description": "Returns the TLID of the track that will be played if calling\\n:meth:`mopidy.core.PlaybackController.previous()`.\\n\\nFor normal playback this is the previous track in the tracklist. If\\nrandom and/or consume is enabled it should return the current track\\ninstead.\\n\\n:rtype: :class:`int` or :class:`None`\\n\\n.. versionadded:: 1.1", "params": []}, "core.tracklist.get_random": {"description": "Get random mode.\\n\\n:class:`True`\\n    Tracks are selected at random from the tracklist.\\n:class:`False`\\n    Tracks are played in the order of the tracklist.", "params": []}, "core.tracklist.get_repeat": {"description": "Get repeat mode.\\n\\n:class:`True`\\n    The tracklist is played repeatedly.\\n:class:`False`\\n    The tracklist is played once.", "params": []}, "core.tracklist.get_single": {"description": "Get single mode.\\n\\n:class:`True`\\n    Playback is stopped after current song, unless in ``repeat`` mode.\\n:class:`False`\\n    Playback continues after current song.", "params": []}, "core.tracklist.get_tl_tracks": {"description": "Get tracklist as list of :class:`mopidy.models.TlTrack`.", "params": []}, "core.tracklist.get_tracks": {"description": "Get tracklist as list of :class:`mopidy.models.Track`.", "params": []}, "core.tracklist.get_version": {"description": "Get the tracklist version.\\n\\nInteger which is increased every time the tracklist is changed. Is not\\nreset before Mopidy is restarted.", "params": []}, "core.tracklist.index": {"description": "The position of the given track in the tracklist.\\n\\nIf neither *tl_track* or *tlid* is given we return the index of\\nthe currently playing track.\\n\\n:param tl_track: the track to find the index of\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:param tlid: TLID of the track to find the index of\\n:type tlid: :class:`int` or :class:`None`\\n:rtype: :class:`int` or :class:`None`\\n\\n.. versionadded:: 1.1\\n    The *tlid* parameter", "params": [{"name": "tl_track", "default": null}, {"name": "tlid", "default": null}]}, "core.tracklist.move": {"description": "Move the tracks in the slice ``[start:end]`` to ``to_position``.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.\\n\\n:param start: position of first track to move\\n:type start: int\\n:param end: position after last track to move\\n:type end: int\\n:param to_position: new position for the tracks\\n:type to_position: int", "params": [{"name": "start"}, {"name": "end"}, {"name": "to_position"}]}, "core.tracklist.next_track": {"description": "The track that will be played if calling\\n:meth:`mopidy.core.PlaybackController.next()`.\\n\\nFor normal playback this is the next track in the tracklist. If repeat\\nis enabled the next track can loop around the tracklist. When random is\\nenabled this should be a random track, all tracks should be played once\\nbefore the tracklist repeats.\\n\\n.. deprecated:: 3.0\\n    Use :meth:`get_next_tlid` instead.\\n\\n:param tl_track: the reference track\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:rtype: :class:`mopidy.models.TlTrack` or :class:`None`", "params": [{"name": "tl_track"}]}, "core.tracklist.previous_track": {"description": "Returns the track that will be played if calling\\n:meth:`mopidy.core.PlaybackController.previous()`.\\n\\nFor normal playback this is the previous track in the tracklist. If\\nrandom and/or consume is enabled it should return the current track\\ninstead.\\n\\n.. deprecated:: 3.0\\n    Use :meth:`get_previous_tlid` instead.\\n\\n:param tl_track: the reference track\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:rtype: :class:`mopidy.models.TlTrack` or :class:`None`", "params": [{"name": "tl_track"}]}, "core.tracklist.remove": {"description": "Remove the matching tracks from the tracklist.\\n\\nUses :meth:`filter()` to lookup the tracks to remove.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.\\n\\n:param criteria: one or more rules to match by\\n:type criteria: dict, of (string, list) pairs\\n:rtype: list of :class:`mopidy.models.TlTrack` that were removed", "params": [{"name": "criteria"}]}, "core.tracklist.set_consume": {"description": "Set consume mode.\\n\\n:class:`True`\\n    Tracks are removed from the tracklist when they have been played.\\n:class:`False`\\n    Tracks are not removed from the tracklist.", "params": [{"name": "value"}]}, "core.tracklist.set_random": {"description": "Set random mode.\\n\\n:class:`True`\\n    Tracks are selected at random from the tracklist.\\n:class:`False`\\n    Tracks are played in the order of the tracklist.", "params": [{"name": "value"}]}, "core.tracklist.set_repeat": {"description": "Set repeat mode.\\n\\nTo repeat a single track, set both ``repeat`` and ``single``.\\n\\n:class:`True`\\n    The tracklist is played repeatedly.\\n:class:`False`\\n    The tracklist is played once.", "params": [{"name": "value"}]}, "core.tracklist.set_single": {"description": "Set single mode.\\n\\n:class:`True`\\n    Playback is stopped after current song, unless in ``repeat`` mode.\\n:class:`False`\\n    Playback continues after current song.", "params": [{"name": "value"}]}, "core.tracklist.shuffle": {"description": "Shuffles the entire tracklist. If ``start`` and ``end`` is given only\\nshuffles the slice ``[start:end]``.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.\\n\\n:param start: position of first track to shuffle\\n:type start: int or :class:`None`\\n:param end: position after last track to shuffle\\n:type end: int or :class:`None`", "params": [{"name": "start", "default": null}, {"name": "end", "default": null}]}, "core.tracklist.slice": {"description": "Returns a slice of the tracklist, limited by the given start and end\\npositions.\\n\\n:param start: position of first track to include in slice\\n:type start: int\\n:param end: position after last track to include in slice\\n:type end: int\\n:rtype: :class:`mopidy.models.TlTrack`", "params": [{"name": "start"}, {"name": "end"}]}}}'
okt 24 00:05:46 Desktop-Ubuntu mopidy[11259]: DEBUG    2022-10-24 00:05:46,619 [11259:HttpServer] mopidy.http.handlers
okt 24 00:05:46 Desktop-Ubuntu mopidy[11259]:   Received WebSocket message from 127.0.0.1: '{"method":"core.describe","jsonrpc":"2.0","id":0}'
okt 24 00:05:46 Desktop-Ubuntu mopidy[11259]: DEBUG    2022-10-24 00:05:46,615 [11259:HttpServer] mopidy.http.handlers
okt 24 00:05:46 Desktop-Ubuntu mopidy[11259]:   {'method': 'connection_added', 'params': {'connection': {'connection_id': 'D6G6DN6P4YFZ', 'ip': '127.0.0.1', 'created': '2022-10-24 00:05:46'}}}
okt 24 00:05:46 Desktop-Ubuntu mopidy[11259]: DEBUG    2022-10-24 00:05:46,570 [11259:HttpServer] mopidy_iris.core
okt 24 00:05:46 Desktop-Ubuntu mopidy[11259]:   <mopidy_iris.handlers.WebsocketHandler object at 0x7f1fc0105cc0>
okt 24 00:05:46 Desktop-Ubuntu mopidy[11259]: DEBUG    2022-10-24 00:05:46,570 [11259:HttpServer] mopidy_iris.core
okt 24 00:05:46 Desktop-Ubuntu mopidy[11259]:   Connection added
okt 24 00:05:46 Desktop-Ubuntu mopidy[11259]: DEBUG    2022-10-24 00:05:46,570 [11259:HttpServer] mopidy_iris.core
okt 24 00:05:46 Desktop-Ubuntu mopidy[11259]:   101 GET /iris/ws/ (127.0.0.1) 0.44ms
okt 24 00:05:46 Desktop-Ubuntu mopidy[11259]: INFO     2022-10-24 00:05:46,570 [11259:HttpServer] tornado.access
okt 24 00:05:46 Desktop-Ubuntu mopidy[11259]:   New WebSocket connection from 127.0.0.1
okt 24 00:05:46 Desktop-Ubuntu mopidy[11259]: DEBUG    2022-10-24 00:05:46,558 [11259:HttpServer] mopidy.http.handlers
okt 24 00:05:46 Desktop-Ubuntu mopidy[11259]:   101 GET /mopidy/ws/ (127.0.0.1) 0.61ms
okt 24 00:05:46 Desktop-Ubuntu mopidy[11259]: INFO     2022-10-24 00:05:46,558 [11259:HttpServer] tornado.access
okt 24 00:05:46 Desktop-Ubuntu mopidy[11259]:   200 GET /iris/assets/favicon.png (127.0.0.1) 0.74ms
okt 24 00:05:46 Desktop-Ubuntu mopidy[11259]: INFO     2022-10-24 00:05:46,206 [11259:HttpServer] tornado.access
okt 24 00:05:45 Desktop-Ubuntu mopidy[11259]:   200 GET /iris/app.min.js?v=1666559547 (127.0.0.1) 12.66ms
okt 24 00:05:45 Desktop-Ubuntu mopidy[11259]: INFO     2022-10-24 00:05:45,581 [11259:HttpServer] tornado.access
okt 24 00:05:45 Desktop-Ubuntu mopidy[11259]:   200 GET /iris/app.min.css?v=1666559547 (127.0.0.1) 5.21ms
okt 24 00:05:45 Desktop-Ubuntu mopidy[11259]: INFO     2022-10-24 00:05:45,566 [11259:HttpServer] tornado.access
okt 24 00:05:45 Desktop-Ubuntu mopidy[11259]:   200 GET /iris/assets/app-icon.svg (127.0.0.1) 0.70ms
okt 24 00:05:45 Desktop-Ubuntu mopidy[11259]: INFO     2022-10-24 00:05:45,396 [11259:HttpServer] tornado.access
okt 24 00:05:45 Desktop-Ubuntu mopidy[11259]:   Closed WebSocket connection from 127.0.0.1
okt 24 00:05:45 Desktop-Ubuntu mopidy[11259]: DEBUG    2022-10-24 00:05:45,364 [11259:HttpServer] mopidy.http.handlers
okt 24 00:05:45 Desktop-Ubuntu mopidy[11259]:   {'method': 'connection_removed', 'params': {'connection': {'connection_id': '7SFEWWOLFTDE', 'ip': '127.0.0.1', 'created': '2022-10-24 00:05:44', 'username': 166656148284185, 'client_id': 166656148284193}}}
okt 24 00:05:45 Desktop-Ubuntu mopidy[11259]: DEBUG    2022-10-24 00:05:45,364 [11259:HttpServer] mopidy_iris.core
okt 24 00:05:45 Desktop-Ubuntu mopidy[11259]:   200 GET /iris/library/browse (127.0.0.1) 0.74ms
okt 24 00:05:45 Desktop-Ubuntu mopidy[11259]: INFO     2022-10-24 00:05:45,345 [11259:HttpServer] tornado.access
okt 24 00:05:44 Desktop-Ubuntu mopidy[11259]:   {'id': 166656274468298, 'jsonrpc': '2.0', 'method': 'get_version', 'result': {'version': {'current': '3.64.1', 'latest': '3.64.1', 'is_root': False, 'upgrade_available': False}}, 'recipient': '7SFEWWOLFTDE'}
okt 24 00:05:44 Desktop-Ubuntu mopidy[11259]: DEBUG    2022-10-24 00:05:44,817 [11259:HttpServer] mopidy_iris.core
okt 24 00:05:44 Desktop-Ubuntu mopidy[11259]:   Iris websocket message received: {"jsonrpc":"2.0","id":166656274468298,"method":"get_version"}
okt 24 00:05:44 Desktop-Ubuntu mopidy[11259]: DEBUG    2022-10-24 00:05:44,682 [11259:HttpServer] mopidy_iris.handlers
okt 24 00:05:44 Desktop-Ubuntu mopidy[11259]:   304 GET /iris/assets/silence.mp3 (127.0.0.1) 0.79ms
okt 24 00:05:44 Desktop-Ubuntu mopidy[11259]: INFO     2022-10-24 00:05:44,612 [11259:HttpServer] tornado.access
okt 24 00:05:44 Desktop-Ubuntu mopidy[11259]:   {'id': 166656274418159, 'jsonrpc': '2.0', 'method': 'get_queue_metadata', 'result': {'queue_metadata': {}}, 'recipient': '7SFEWWOLFTDE'}
okt 24 00:05:44 Desktop-Ubuntu mopidy[11259]: DEBUG    2022-10-24 00:05:44,181 [11259:HttpServer] mopidy_iris.core
okt 24 00:05:44 Desktop-Ubuntu mopidy[11259]:   Iris websocket message received: {"jsonrpc":"2.0","id":166656274418159,"method":"get_queue_metadata"}
okt 24 00:05:44 Desktop-Ubuntu mopidy[11259]: DEBUG    2022-10-24 00:05:44,181 [11259:HttpServer] mopidy_iris.handlers
okt 24 00:05:44 Desktop-Ubuntu mopidy[11259]:   {'id': 166656274418031, 'jsonrpc': '2.0', 'method': 'get_pinned', 'result': {'pinned': []}, 'recipient': '7SFEWWOLFTDE'}
okt 24 00:05:44 Desktop-Ubuntu mopidy[11259]: DEBUG    2022-10-24 00:05:44,180 [11259:HttpServer] mopidy_iris.core
okt 24 00:05:44 Desktop-Ubuntu mopidy[11259]:   Iris websocket message received: {"jsonrpc":"2.0","id":166656274418031,"method":"get_pinned"}
okt 24 00:05:44 Desktop-Ubuntu mopidy[11259]: DEBUG    2022-10-24 00:05:44,180 [11259:HttpServer] mopidy_iris.handlers
okt 24 00:05:44 Desktop-Ubuntu mopidy[11259]:   {'id': 16665627441798, 'jsonrpc': '2.0', 'method': 'get_commands', 'result': {'commands': {}}, 'recipient': '7SFEWWOLFTDE'}
okt 24 00:05:44 Desktop-Ubuntu mopidy[11259]: DEBUG    2022-10-24 00:05:44,180 [11259:HttpServer] mopidy_iris.core
okt 24 00:05:44 Desktop-Ubuntu mopidy[11259]:   Iris websocket message received: {"jsonrpc":"2.0","id":16665627441798,"method":"get_commands"}
okt 24 00:05:44 Desktop-Ubuntu mopidy[11259]: DEBUG    2022-10-24 00:05:44,180 [11259:HttpServer] mopidy_iris.handlers
okt 24 00:05:44 Desktop-Ubuntu mopidy[11259]:   {'id': 166656274417997, 'jsonrpc': '2.0', 'method': 'get_radio', 'result': {'radio': {'enabled': 0, 'seed_artists': [], 'seed_genres': [], 'seed_tracks': [], 'results': []}}, 'recipient': '7SFEWWOLFTDE'}
okt 24 00:05:44 Desktop-Ubuntu mopidy[11259]: DEBUG    2022-10-24 00:05:44,179 [11259:HttpServer] mopidy_iris.core
okt 24 00:05:44 Desktop-Ubuntu mopidy[11259]:   Iris websocket message received: {"jsonrpc":"2.0","id":166656274417997,"method":"get_radio"}
okt 24 00:05:44 Desktop-Ubuntu mopidy[11259]: DEBUG    2022-10-24 00:05:44,179 [11259:HttpServer] mopidy_iris.handlers
okt 24 00:05:44 Desktop-Ubuntu mopidy[11259]:   {'id': 166656274417815, 'jsonrpc': '2.0', 'method': 'get_shared_config', 'result': {'shared_config': {}}, 'recipient': '7SFEWWOLFTDE'}
okt 24 00:05:44 Desktop-Ubuntu mopidy[11259]: DEBUG    2022-10-24 00:05:44,178 [11259:HttpServer] mopidy_iris.core
okt 24 00:05:44 Desktop-Ubuntu mopidy[11259]:   Iris websocket message received: {"jsonrpc":"2.0","id":166656274417815,"method":"get_shared_config"}
okt 24 00:05:44 Desktop-Ubuntu mopidy[11259]: DEBUG    2022-10-24 00:05:44,178 [11259:HttpServer] mopidy_iris.handlers
okt 24 00:05:44 Desktop-Ubuntu mopidy[11259]:   {'id': 166656274417796, 'jsonrpc': '2.0', 'method': 'get_config', 'result': {'config': {'is_root': False, 'spotify_username': False, 'country': 'NZ', 'locale': 'en_NZ', 'snapcast_enabled': True, 'snapcast_host': 'localhost', 'snapcast_port': '1780', 'snapcast_ssl': False, 'snapcast_stream': 'Default', 'spotify_authorization_url': 'https://jamesbarnsley.co.nz/iris/auth_spotify.php', 'lastfm_authorization_url': 'https://jamesbarnsley.co.nz/iris/auth_lastfm.php', 'genius_authorization_url': 'https://jamesbarnsley.co.nz/iris/auth_genius.php', 'shared_config': {}}}, 'recipient': '7SFEWWOLFTDE'}
okt 24 00:05:44 Desktop-Ubuntu mopidy[11259]: DEBUG    2022-10-24 00:05:44,177 [11259:HttpServer] mopidy_iris.core
okt 24 00:05:44 Desktop-Ubuntu mopidy[11259]:   Iris websocket message received: {"jsonrpc":"2.0","id":166656274417796,"method":"get_config"}
okt 24 00:05:44 Desktop-Ubuntu mopidy[11259]: DEBUG    2022-10-24 00:05:44,177 [11259:HttpServer] mopidy_iris.handlers
okt 24 00:05:44 Desktop-Ubuntu mopidy[11259]:   {'id': 166656274417534, 'jsonrpc': '2.0', 'method': 'update_connection', 'result': {'connection': {'connection_id': '7SFEWWOLFTDE', 'ip': '127.0.0.1', 'created': '2022-10-24 00:05:44', 'username': 166656148284185, 'client_id': 166656148284193}}, 'recipient': '7SFEWWOLFTDE'}
okt 24 00:05:44 Desktop-Ubuntu mopidy[11259]: DEBUG    2022-10-24 00:05:44,176 [11259:HttpServer] mopidy_iris.core
okt 24 00:05:44 Desktop-Ubuntu mopidy[11259]:   {'method': 'connection_changed', 'params': {'connection': {'connection_id': '7SFEWWOLFTDE', 'ip': '127.0.0.1', 'created': '2022-10-24 00:05:44', 'username': 166656148284185, 'client_id': 166656148284193}}}
okt 24 00:05:44 Desktop-Ubuntu mopidy[11259]: DEBUG    2022-10-24 00:05:44,176 [11259:HttpServer] mopidy_iris.core
okt 24 00:05:44 Desktop-Ubuntu mopidy[11259]:   Iris websocket message received: {"jsonrpc":"2.0","id":166656274417534,"method":"update_connection","params":{"username":166656148284185,"client_id":166656148284193}}
okt 24 00:05:44 Desktop-Ubuntu mopidy[11259]: DEBUG    2022-10-24 00:05:44,175 [11259:HttpServer] mopidy_iris.handlers
okt 24 00:05:44 Desktop-Ubuntu mopidy[11259]:   {'method': 'connection_added', 'params': {'connection': {'connection_id': '7SFEWWOLFTDE', 'ip': '127.0.0.1', 'created': '2022-10-24 00:05:44'}}}
okt 24 00:05:44 Desktop-Ubuntu mopidy[11259]: DEBUG    2022-10-24 00:05:44,170 [11259:HttpServer] mopidy_iris.core
okt 24 00:05:44 Desktop-Ubuntu mopidy[11259]:   <mopidy_iris.handlers.WebsocketHandler object at 0x7f1fc1627970>
okt 24 00:05:44 Desktop-Ubuntu mopidy[11259]: DEBUG    2022-10-24 00:05:44,170 [11259:HttpServer] mopidy_iris.core
okt 24 00:05:44 Desktop-Ubuntu mopidy[11259]:   Connection added
okt 24 00:05:44 Desktop-Ubuntu mopidy[11259]: DEBUG    2022-10-24 00:05:44,170 [11259:HttpServer] mopidy_iris.core
okt 24 00:05:44 Desktop-Ubuntu mopidy[11259]:   101 GET /iris/ws/ (127.0.0.1) 0.50ms
okt 24 00:05:44 Desktop-Ubuntu mopidy[11259]: INFO     2022-10-24 00:05:44,170 [11259:HttpServer] tornado.access
okt 24 00:05:42 Desktop-Ubuntu mopidy[11259]:   304 GET /iris/assets/favicon_error.png (127.0.0.1) 5.73ms
okt 24 00:05:42 Desktop-Ubuntu mopidy[11259]: INFO     2022-10-24 00:05:42,228 [11259:HttpServer] tornado.access
okt 24 00:05:42 Desktop-Ubuntu mopidy[11259]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 24, "result": null}'
okt 24 00:05:42 Desktop-Ubuntu mopidy[11259]: DEBUG    2022-10-24 00:05:42,158 [11259:HttpServer] mopidy.http.handlers
okt 24 00:05:42 Desktop-Ubuntu mopidy[11259]:   Received WebSocket message from 127.0.0.1: '{"method":"core.playback.get_stream_title","params":{},"jsonrpc":"2.0","id":24}'
okt 24 00:05:42 Desktop-Ubuntu mopidy[11259]: DEBUG    2022-10-24 00:05:42,158 [11259:HttpServer] mopidy.http.handlers
okt 24 00:05:42 Desktop-Ubuntu mopidy[11259]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 23, "result": ["file", "http", "https", "local", "m3u", "rtsp", "youtube", "yt"]}'
okt 24 00:05:42 Desktop-Ubuntu mopidy[11259]: DEBUG    2022-10-24 00:05:42,157 [11259:HttpServer] mopidy.http.handlers
okt 24 00:05:42 Desktop-Ubuntu mopidy[11259]:   Received WebSocket message from 127.0.0.1: '{"method":"core.get_uri_schemes","params":{},"jsonrpc":"2.0","id":23}'
okt 24 00:05:42 Desktop-Ubuntu mopidy[11259]: DEBUG    2022-10-24 00:05:42,157 [11259:HttpServer] mopidy.http.handlers
okt 24 00:05:42 Desktop-Ubuntu mopidy[11259]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 22, "result": 0}'
okt 24 00:05:42 Desktop-Ubuntu mopidy[11259]: DEBUG    2022-10-24 00:05:42,156 [11259:HttpServer] mopidy.http.handlers
okt 24 00:05:42 Desktop-Ubuntu mopidy[11259]:   Received WebSocket message from 127.0.0.1: '{"method":"core.playback.get_time_position","params":{},"jsonrpc":"2.0","id":22}'
okt 24 00:05:42 Desktop-Ubuntu mopidy[11259]: DEBUG    2022-10-24 00:05:42,156 [11259:HttpServer] mopidy.http.handlers
okt 24 00:05:42 Desktop-Ubuntu mopidy[11259]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 21, "result": []}'
okt 24 00:05:42 Desktop-Ubuntu mopidy[11259]: DEBUG    2022-10-24 00:05:42,156 [11259:HttpServer] mopidy.http.handlers
okt 24 00:05:42 Desktop-Ubuntu mopidy[11259]:   Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_tl_tracks","params":{},"jsonrpc":"2.0","id":21}'
okt 24 00:05:42 Desktop-Ubuntu mopidy[11259]: DEBUG    2022-10-24 00:05:42,155 [11259:HttpServer] mopidy.http.handlers
okt 24 00:05:42 Desktop-Ubuntu mopidy[11259]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 20, "result": false}'
okt 24 00:05:42 Desktop-Ubuntu mopidy[11259]: DEBUG    2022-10-24 00:05:42,155 [11259:HttpServer] mopidy.http.handlers
okt 24 00:05:42 Desktop-Ubuntu mopidy[11259]:   Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_repeat","params":{},"jsonrpc":"2.0","id":20}'
okt 24 00:05:42 Desktop-Ubuntu mopidy[11259]: DEBUG    2022-10-24 00:05:42,155 [11259:HttpServer] mopidy.http.handlers
okt 24 00:05:42 Desktop-Ubuntu mopidy[11259]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 19, "result": false}'
okt 24 00:05:42 Desktop-Ubuntu mopidy[11259]: DEBUG    2022-10-24 00:05:42,155 [11259:HttpServer] mopidy.http.handlers
okt 24 00:05:42 Desktop-Ubuntu mopidy[11259]:   Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_random","params":{},"jsonrpc":"2.0","id":19}'
okt 24 00:05:42 Desktop-Ubuntu mopidy[11259]: DEBUG    2022-10-24 00:05:42,154 [11259:HttpServer] mopidy.http.handlers
okt 24 00:05:42 Desktop-Ubuntu mopidy[11259]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 18, "result": false}'
okt 24 00:05:42 Desktop-Ubuntu mopidy[11259]: DEBUG    2022-10-24 00:05:42,154 [11259:HttpServer] mopidy.http.handlers
okt 24 00:05:42 Desktop-Ubuntu mopidy[11259]:   Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_consume","params":{},"jsonrpc":"2.0","id":18}'
okt 24 00:05:42 Desktop-Ubuntu mopidy[11259]: DEBUG    2022-10-24 00:05:42,154 [11259:HttpServer] mopidy.http.handlers
okt 24 00:05:42 Desktop-Ubuntu mopidy[11259]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 17, "result": false}'
okt 24 00:05:42 Desktop-Ubuntu mopidy[11259]: DEBUG    2022-10-24 00:05:42,154 [11259:HttpServer] mopidy.http.handlers
okt 24 00:05:42 Desktop-Ubuntu mopidy[11259]:   Received WebSocket message from 127.0.0.1: '{"method":"core.mixer.get_mute","params":{},"jsonrpc":"2.0","id":17}'
okt 24 00:05:42 Desktop-Ubuntu mopidy[11259]: DEBUG    2022-10-24 00:05:42,153 [11259:HttpServer] mopidy.http.handlers
okt 24 00:05:42 Desktop-Ubuntu mopidy[11259]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 16, "result": 100}'
okt 24 00:05:42 Desktop-Ubuntu mopidy[11259]: DEBUG    2022-10-24 00:05:42,153 [11259:HttpServer] mopidy.http.handlers
okt 24 00:05:42 Desktop-Ubuntu mopidy[11259]:   Received WebSocket message from 127.0.0.1: '{"method":"core.mixer.get_volume","params":{},"jsonrpc":"2.0","id":16}'
okt 24 00:05:42 Desktop-Ubuntu mopidy[11259]: DEBUG    2022-10-24 00:05:42,152 [11259:HttpServer] mopidy.http.handlers
okt 24 00:05:42 Desktop-Ubuntu mopidy[11259]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 15, "result": "stopped"}'
okt 24 00:05:42 Desktop-Ubuntu mopidy[11259]: DEBUG    2022-10-24 00:05:42,152 [11259:HttpServer] mopidy.http.handlers
okt 24 00:05:42 Desktop-Ubuntu mopidy[11259]:   Received WebSocket message from 127.0.0.1: '{"method":"core.playback.get_state","params":{},"jsonrpc":"2.0","id":15}'
okt 24 00:05:42 Desktop-Ubuntu mopidy[11259]: DEBUG    2022-10-24 00:05:42,152 [11259:HttpServer] mopidy.http.handlers
okt 24 00:05:42 Desktop-Ubuntu mopidy[11259]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 14, "result": null}'
okt 24 00:05:42 Desktop-Ubuntu mopidy[11259]: DEBUG    2022-10-24 00:05:42,151 [11259:HttpServer] mopidy.http.handlers
okt 24 00:05:42 Desktop-Ubuntu mopidy[11259]:   Received WebSocket message from 127.0.0.1: '{"method":"core.playback.get_current_tl_track","params":{},"jsonrpc":"2.0","id":14}'
okt 24 00:05:42 Desktop-Ubuntu mopidy[11259]: DEBUG    2022-10-24 00:05:42,151 [11259:HttpServer] mopidy.http.handlers
okt 24 00:05:42 Desktop-Ubuntu mopidy[11259]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 13, "result": {"core.get_uri_schemes": {"description": "Get list of URI schemes we can handle", "params": []}, "core.get_version": {"description": "Get version of the Mopidy core API", "params": []}, "core.history.get_history": {"description": "Get the track history.\\n\\nThe timestamps are milliseconds since epoch.\\n\\n:returns: the track history\\n:rtype: list of (timestamp, :class:`mopidy.models.Ref`) tuples", "params": []}, "core.history.get_length": {"description": "Get the number of tracks in the history.\\n\\n:returns: the history length\\n:rtype: int", "params": []}, "core.library.browse": {"description": "Browse directories and tracks at the given ``uri``.\\n\\n``uri`` is a string which represents some directory belonging to a\\nbackend. To get the intial root directories for backends pass\\n:class:`None` as the URI.\\n\\nReturns a list of :class:`mopidy.models.Ref` objects for the\\ndirectories and tracks at the given ``uri``.\\n\\nThe :class:`~mopidy.models.Ref` objects representing tracks keep the\\ntrack\'s original URI. A matching pair of objects can look like this::\\n\\n    Track(uri=\'dummy:/foo.mp3\', name=\'foo\', artists=..., album=...)\\n    Ref.track(uri=\'dummy:/foo.mp3\', name=\'foo\')\\n\\nThe :class:`~mopidy.models.Ref` objects representing directories have\\nbackend specific URIs. These are opaque values, so no one but the\\nbackend that created them should try and derive any meaning from them.\\nThe only valid exception to this is checking the scheme, as it is used\\nto route browse requests to the correct backend.\\n\\nFor example, the dummy library\'s ``/bar`` directory could be returned\\nlike this::\\n\\n    Ref.directory(uri=\'dummy:directory:/bar\', name=\'bar\')\\n\\n:param string uri: URI to browse\\n:rtype: list of :class:`mopidy.models.Ref`\\n\\n.. versionadded:: 0.18", "params": [{"name": "uri"}]}, "core.library.get_distinct": {"description": "List distinct values for a given field from the library.\\n\\nThis has mainly been added to support the list commands the MPD\\nprotocol supports in a more sane fashion. Other frontends are not\\nrecommended to use this method.\\n\\n:param string field: Any one of ``uri``, ``track_name``, ``album``,\\n    ``artist``, ``albumartist``, ``composer``, ``performer``,\\n    ``track_no``, ``genre``, ``date``, ``comment``, ``disc_no``,\\n    ``musicbrainz_albumid``, ``musicbrainz_artistid``, or\\n    ``musicbrainz_trackid``.\\n:param dict query: Query to use for limiting results, see\\n    :meth:`search` for details about the query format.\\n:rtype: set of values corresponding to the requested field type.\\n\\n.. versionadded:: 1.0", "params": [{"name": "field"}, {"name": "query", "default": null}]}, "core.library.get_images": {"description": "Lookup the images for the given URIs\\n\\nBackends can use this to return image URIs for any URI they know about\\nbe it tracks, albums, playlists. The lookup result is a dictionary\\nmapping the provided URIs to lists of images.\\n\\nUnknown URIs or URIs the corresponding backend couldn\'t find anything\\nfor will simply return an empty list for that URI.\\n\\n:param uris: list of URIs to find images for\\n:type uris: list of string\\n:rtype: {uri: tuple of :class:`mopidy.models.Image`}\\n\\n.. versionadded:: 1.0", "params": [{"name": "uris"}]}, "core.library.lookup": {"description": "Lookup the given URIs.\\n\\nIf the URI expands to multiple tracks, the returned list will contain\\nthem all.\\n\\n:param uris: track URIs\\n:type uris: list of string\\n:rtype: {uri: list of :class:`mopidy.models.Track`}", "params": [{"name": "uris"}]}, "core.library.refresh": {"description": "Refresh library. Limit to URI and below if an URI is given.\\n\\n:param uri: directory or track URI\\n:type uri: string", "params": [{"name": "uri", "default": null}]}, "core.library.search": {"description": "Search the library for tracks where ``field`` contains ``values``.\\n\\n``field`` can be one of ``uri``, ``track_name``, ``album``, ``artist``,\\n``albumartist``, ``composer``, ``performer``, ``track_no``, ``genre``,\\n``date``, ``comment``, ``disc_no``, ``musicbrainz_albumid``,\\n``musicbrainz_artistid``, ``musicbrainz_trackid`` or ``any``.\\n\\nIf ``uris`` is given, the search is limited to results from within the\\nURI roots. For example passing ``uris=[\'file:\']`` will limit the search\\nto the local backend.\\n\\nExamples::\\n\\n    # Returns results matching \'a\' in any backend\\n    search({\'any\': [\'a\']})\\n\\n    # Returns results matching artist \'xyz\' in any backend\\n    search({\'artist\': [\'xyz\']})\\n\\n    # Returns results matching \'a\' and \'b\' and artist \'xyz\' in any\\n    # backend\\n    search({\'any\': [\'a\', \'b\'], \'artist\': [\'xyz\']})\\n\\n    # Returns results matching \'a\' if within the given URI roots\\n    # \\"file:///media/music\\" and \\"spotify:\\"\\n    search({\'any\': [\'a\']}, uris=[\'file:///media/music\', \'spotify:\'])\\n\\n    # Returns results matching artist \'xyz\' and \'abc\' in any backend\\n    search({\'artist\': [\'xyz\', \'abc\']})\\n\\n:param query: one or more queries to search for\\n:type query: dict\\n:param uris: zero or more URI roots to limit the search to\\n:type uris: list of string or :class:`None`\\n:param exact: if the search should use exact matching\\n:type exact: :class:`bool`\\n:rtype: list of :class:`mopidy.models.SearchResult`\\n\\n.. versionadded:: 1.0\\n    The ``exact`` keyword argument.", "params": [{"name": "query"}, {"name": "uris", "default": null}, {"name": "exact", "default": false}]}, "core.mixer.get_mute": {"description": "Get mute state.\\n\\n:class:`True` if muted, :class:`False` unmuted, :class:`None` if\\nunknown.", "params": []}, "core.mixer.get_volume": {"description": "Get the volume.\\n\\nInteger in range [0..100] or :class:`None` if unknown.\\n\\nThe volume scale is linear.", "params": []}, "core.mixer.set_mute": {"description": "Set mute state.\\n\\n:class:`True` to mute, :class:`False` to unmute.\\n\\nReturns :class:`True` if call is successful, otherwise :class:`False`.", "params": [{"name": "mute"}]}, "core.mixer.set_volume": {"description": "Set the volume.\\n\\nThe volume is defined as an integer in range [0..100].\\n\\nThe volume scale is linear.\\n\\nReturns :class:`True` if call is successful, otherwise :class:`False`.", "params": [{"name": "volume"}]}, "core.playback.get_current_tl_track": {"description": "Get the currently playing or selected track.\\n\\nReturns a :class:`mopidy.models.TlTrack` or :class:`None`.", "params": []}, "core.playback.get_current_tlid": {"description": "Get the currently playing or selected TLID.\\n\\nExtracted from :meth:`get_current_tl_track` for convenience.\\n\\nReturns a :class:`int` or :class:`None`.\\n\\n.. versionadded:: 1.1", "params": []}, "core.playback.get_current_track": {"description": "Get the currently playing or selected track.\\n\\nExtracted from :meth:`get_current_tl_track` for convenience.\\n\\nReturns a :class:`mopidy.models.Track` or :class:`None`.", "params": []}, "core.playback.get_state": {"description": "Get The playback state.", "params": []}, "core.playback.get_stream_title": {"description": "Get the current stream title or :class:`None`.", "params": []}, "core.playback.get_time_position": {"description": "Get time position in milliseconds.", "params": []}, "core.playback.next": {"description": "Change to the next track.\\n\\nThe current playback state will be kept. If it was playing, playing\\nwill continue. If it was paused, it will still be paused, etc.", "params": []}, "core.playback.pause": {"description": "Pause playback.", "params": []}, "core.playback.play": {"description": "Play the given track, or if the given tl_track and tlid is\\n:class:`None`, play the currently active track.\\n\\nNote that the track **must** already be in the tracklist.\\n\\n.. deprecated:: 3.0\\n    The ``tl_track`` argument. Use ``tlid`` instead.\\n\\n:param tl_track: track to play\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:param tlid: TLID of the track to play\\n:type tlid: :class:`int` or :class:`None`", "params": [{"name": "tl_track", "default": null}, {"name": "tlid", "default": null}]}, "core.playback.previous": {"description": "Change to the previous track.\\n\\nThe current playback state will be kept. If it was playing, playing\\nwill continue. If it was paused, it will still be paused, etc.", "params": []}, "core.playback.resume": {"description": "If paused, resume playing the current track.", "params": []}, "core.playback.seek": {"description": "Seeks to time position given in milliseconds.\\n\\n:param time_position: time position in milliseconds\\n:type time_position: int\\n:rtype: :class:`True` if successful, else :class:`False`", "params": [{"name": "time_position"}]}, "core.playback.set_state": {"description": "Set the playback state.\\n\\nMust be :attr:`PLAYING`, :attr:`PAUSED`, or :attr:`STOPPED`.\\n\\nPossible states and transitions:\\n\\n.. digraph:: state_transitions\\n\\n    \\"STOPPED\\" -> \\"PLAYING\\" [ label=\\"play\\" ]\\n    \\"STOPPED\\" -> \\"PAUSED\\" [ label=\\"pause\\" ]\\n    \\"PLAYING\\" -> \\"STOPPED\\" [ label=\\"stop\\" ]\\n    \\"PLAYING\\" -> \\"PAUSED\\" [ label=\\"pause\\" ]\\n    \\"PLAYING\\" -> \\"PLAYING\\" [ label=\\"play\\" ]\\n    \\"PAUSED\\" -> \\"PLAYING\\" [ label=\\"resume\\" ]\\n    \\"PAUSED\\" -> \\"STOPPED\\" [ label=\\"stop\\" ]", "params": [{"name": "new_state"}]}, "core.playback.stop": {"description": "Stop playing.", "params": []}, "core.playlists.as_list": {"description": "Get a list of the currently available playlists.\\n\\nReturns a list of :class:`~mopidy.models.Ref` objects referring to the\\nplaylists. In other words, no information about the playlists\' content\\nis given.\\n\\n:rtype: list of :class:`mopidy.models.Ref`\\n\\n.. versionadded:: 1.0", "params": []}, "core.playlists.create": {"description": "Create a new playlist.\\n\\nIf ``uri_scheme`` matches an URI scheme handled by a current backend,\\nthat backend is asked to create the playlist. If ``uri_scheme`` is\\n:class:`None` or doesn\'t match a current backend, the first backend is\\nasked to create the playlist.\\n\\nAll new playlists must be created by calling this method, and **not**\\nby creating new instances of :class:`mopidy.models.Playlist`.\\n\\n:param name: name of the new playlist\\n:type name: string\\n:param uri_scheme: use the backend matching the URI scheme\\n:type uri_scheme: string\\n:rtype: :class:`mopidy.models.Playlist` or :class:`None`", "params": [{"name": "name"}, {"name": "uri_scheme", "default": null}]}, "core.playlists.delete": {"description": "Delete playlist identified by the URI.\\n\\nIf the URI doesn\'t match the URI schemes handled by the current\\nbackends, nothing happens.\\n\\nReturns :class:`True` if deleted, :class:`False` otherwise.\\n\\n:param uri: URI of the playlist to delete\\n:type uri: string\\n:rtype: :class:`bool`\\n\\n.. versionchanged:: 2.2\\n    Return type defined.", "params": [{"name": "uri"}]}, "core.playlists.get_items": {"description": "Get the items in a playlist specified by ``uri``.\\n\\nReturns a list of :class:`~mopidy.models.Ref` objects referring to the\\nplaylist\'s items.\\n\\nIf a playlist with the given ``uri`` doesn\'t exist, it returns\\n:class:`None`.\\n\\n:rtype: list of :class:`mopidy.models.Ref`, or :class:`None`\\n\\n.. versionadded:: 1.0", "params": [{"name": "uri"}]}, "core.playlists.get_uri_schemes": {"description": "Get the list of URI schemes that support playlists.\\n\\n:rtype: list of string\\n\\n.. versionadded:: 2.0", "params": []}, "core.playlists.lookup": {"description": "Lookup playlist with given URI in both the set of playlists and in any\\nother playlist sources. Returns :class:`None` if not found.\\n\\n:param uri: playlist URI\\n:type uri: string\\n:rtype: :class:`mopidy.models.Playlist` or :class:`None`", "params": [{"name": "uri"}]}, "core.playlists.refresh": {"description": "Refresh the playlists in :attr:`playlists`.\\n\\nIf ``uri_scheme`` is :class:`None`, all backends are asked to refresh.\\nIf ``uri_scheme`` is an URI scheme handled by a backend, only that\\nbackend is asked to refresh. If ``uri_scheme`` doesn\'t match any\\ncurrent backend, nothing happens.\\n\\n:param uri_scheme: limit to the backend matching the URI scheme\\n:type uri_scheme: string", "params": [{"name": "uri_scheme", "default": null}]}, "core.playlists.save": {"description": "Save the playlist.\\n\\nFor a playlist to be saveable, it must have the ``uri`` attribute set.\\nYou must not set the ``uri`` atribute yourself, but use playlist\\nobjects returned by :meth:`create` or retrieved from :attr:`playlists`,\\nwhich will always give you saveable playlists.\\n\\nThe method returns the saved playlist. The return playlist may differ\\nfrom the saved playlist. E.g. if the playlist name was changed, the\\nreturned playlist may have a different URI. The caller of this method\\nmust throw away the playlist sent to this method, and use the\\nreturned playlist instead.\\n\\nIf the playlist\'s URI isn\'t set or doesn\'t match the URI scheme of a\\ncurrent backend, nothing is done and :class:`None` is returned.\\n\\n:param playlist: the playlist\\n:type playlist: :class:`mopidy.models.Playlist`\\n:rtype: :class:`mopidy.models.Playlist` or :class:`None`", "params": [{"name": "playlist"}]}, "core.tracklist.add": {"description": "Add tracks to the tracklist.\\n\\nIf ``uris`` is given instead of ``tracks``, the URIs are\\nlooked up in the library and the resulting tracks are added to the\\ntracklist.\\n\\nIf ``at_position`` is given, the tracks are inserted at the given\\nposition in the tracklist. If ``at_position`` is not given, the tracks\\nare appended to the end of the tracklist.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.\\n\\n:param tracks: tracks to add\\n:type tracks: list of :class:`mopidy.models.Track` or :class:`None`\\n:param at_position: position in tracklist to add tracks\\n:type at_position: int or :class:`None`\\n:param uris: list of URIs for tracks to add\\n:type uris: list of string or :class:`None`\\n:rtype: list of :class:`mopidy.models.TlTrack`\\n\\n.. versionadded:: 1.0\\n    The ``uris`` argument.\\n\\n.. deprecated:: 1.0\\n    The ``tracks`` argument. Use ``uris``.", "params": [{"name": "tracks", "default": null}, {"name": "at_position", "default": null}, {"name": "uris", "default": null}]}, "core.tracklist.clear": {"description": "Clear the tracklist.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.", "params": []}, "core.tracklist.eot_track": {"description": "The track that will be played after the given track.\\n\\nNot necessarily the same track as :meth:`next_track`.\\n\\n.. deprecated:: 3.0\\n    Use :meth:`get_eot_tlid` instead.\\n\\n:param tl_track: the reference track\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:rtype: :class:`mopidy.models.TlTrack` or :class:`None`", "params": [{"name": "tl_track"}]}, "core.tracklist.filter": {"description": "Filter the tracklist by the given criteria.\\n\\nEach rule in the criteria consists of a model field and a list of\\nvalues to compare it against. If the model field matches any of the\\nvalues, it may be returned.\\n\\nOnly tracks that match all the given criteria are returned.\\n\\nExamples::\\n\\n    # Returns tracks with TLIDs 1, 2, 3, or 4 (tracklist ID)\\n    filter({\'tlid\': [1, 2, 3, 4]})\\n\\n    # Returns track with URIs \'xyz\' or \'abc\'\\n    filter({\'uri\': [\'xyz\', \'abc\']})\\n\\n    # Returns track with a matching TLIDs (1, 3 or 6) and a\\n    # matching URI (\'xyz\' or \'abc\')\\n    filter({\'tlid\': [1, 3, 6], \'uri\': [\'xyz\', \'abc\']})\\n\\n:param criteria: one or more rules to match by\\n:type criteria: dict, of (string, list) pairs\\n:rtype: list of :class:`mopidy.models.TlTrack`", "params": [{"name": "criteria"}]}, "core.tracklist.get_consume": {"description": "Get consume mode.\\n\\n:class:`True`\\n    Tracks are removed from the tracklist when they have been played.\\n:class:`False`\\n    Tracks are not removed from the tracklist.", "params": []}, "core.tracklist.get_eot_tlid": {"description": "The TLID of the track that will be played after the current track.\\n\\nNot necessarily the same TLID as returned by :meth:`get_next_tlid`.\\n\\n:rtype: :class:`int` or :class:`None`\\n\\n.. versionadded:: 1.1", "params": []}, "core.tracklist.get_length": {"description": "Get length of the tracklist.", "params": []}, "core.tracklist.get_next_tlid": {"description": "The tlid of the track that will be played if calling\\n:meth:`mopidy.core.PlaybackController.next()`.\\n\\nFor normal playback this is the next track in the tracklist. If repeat\\nis enabled the next track can loop around the tracklist. When random is\\nenabled this should be a random track, all tracks should be played once\\nbefore the tracklist repeats.\\n\\n:rtype: :class:`int` or :class:`None`\\n\\n.. versionadded:: 1.1", "params": []}, "core.tracklist.get_previous_tlid": {"description": "Returns the TLID of the track that will be played if calling\\n:meth:`mopidy.core.PlaybackController.previous()`.\\n\\nFor normal playback this is the previous track in the tracklist. If\\nrandom and/or consume is enabled it should return the current track\\ninstead.\\n\\n:rtype: :class:`int` or :class:`None`\\n\\n.. versionadded:: 1.1", "params": []}, "core.tracklist.get_random": {"description": "Get random mode.\\n\\n:class:`True`\\n    Tracks are selected at random from the tracklist.\\n:class:`False`\\n    Tracks are played in the order of the tracklist.", "params": []}, "core.tracklist.get_repeat": {"description": "Get repeat mode.\\n\\n:class:`True`\\n    The tracklist is played repeatedly.\\n:class:`False`\\n    The tracklist is played once.", "params": []}, "core.tracklist.get_single": {"description": "Get single mode.\\n\\n:class:`True`\\n    Playback is stopped after current song, unless in ``repeat`` mode.\\n:class:`False`\\n    Playback continues after current song.", "params": []}, "core.tracklist.get_tl_tracks": {"description": "Get tracklist as list of :class:`mopidy.models.TlTrack`.", "params": []}, "core.tracklist.get_tracks": {"description": "Get tracklist as list of :class:`mopidy.models.Track`.", "params": []}, "core.tracklist.get_version": {"description": "Get the tracklist version.\\n\\nInteger which is increased every time the tracklist is changed. Is not\\nreset before Mopidy is restarted.", "params": []}, "core.tracklist.index": {"description": "The position of the given track in the tracklist.\\n\\nIf neither *tl_track* or *tlid* is given we return the index of\\nthe currently playing track.\\n\\n:param tl_track: the track to find the index of\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:param tlid: TLID of the track to find the index of\\n:type tlid: :class:`int` or :class:`None`\\n:rtype: :class:`int` or :class:`None`\\n\\n.. versionadded:: 1.1\\n    The *tlid* parameter", "params": [{"name": "tl_track", "default": null}, {"name": "tlid", "default": null}]}, "core.tracklist.move": {"description": "Move the tracks in the slice ``[start:end]`` to ``to_position``.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.\\n\\n:param start: position of first track to move\\n:type start: int\\n:param end: position after last track to move\\n:type end: int\\n:param to_position: new position for the tracks\\n:type to_position: int", "params": [{"name": "start"}, {"name": "end"}, {"name": "to_position"}]}, "core.tracklist.next_track": {"description": "The track that will be played if calling\\n:meth:`mopidy.core.PlaybackController.next()`.\\n\\nFor normal playback this is the next track in the tracklist. If repeat\\nis enabled the next track can loop around the tracklist. When random is\\nenabled this should be a random track, all tracks should be played once\\nbefore the tracklist repeats.\\n\\n.. deprecated:: 3.0\\n    Use :meth:`get_next_tlid` instead.\\n\\n:param tl_track: the reference track\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:rtype: :class:`mopidy.models.TlTrack` or :class:`None`", "params": [{"name": "tl_track"}]}, "core.tracklist.previous_track": {"description": "Returns the track that will be played if calling\\n:meth:`mopidy.core.PlaybackController.previous()`.\\n\\nFor normal playback this is the previous track in the tracklist. If\\nrandom and/or consume is enabled it should return the current track\\ninstead.\\n\\n.. deprecated:: 3.0\\n    Use :meth:`get_previous_tlid` instead.\\n\\n:param tl_track: the reference track\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:rtype: :class:`mopidy.models.TlTrack` or :class:`None`", "params": [{"name": "tl_track"}]}, "core.tracklist.remove": {"description": "Remove the matching tracks from the tracklist.\\n\\nUses :meth:`filter()` to lookup the tracks to remove.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.\\n\\n:param criteria: one or more rules to match by\\n:type criteria: dict, of (string, list) pairs\\n:rtype: list of :class:`mopidy.models.TlTrack` that were removed", "params": [{"name": "criteria"}]}, "core.tracklist.set_consume": {"description": "Set consume mode.\\n\\n:class:`True`\\n    Tracks are removed from the tracklist when they have been played.\\n:class:`False`\\n    Tracks are not removed from the tracklist.", "params": [{"name": "value"}]}, "core.tracklist.set_random": {"description": "Set random mode.\\n\\n:class:`True`\\n    Tracks are selected at random from the tracklist.\\n:class:`False`\\n    Tracks are played in the order of the tracklist.", "params": [{"name": "value"}]}, "core.tracklist.set_repeat": {"description": "Set repeat mode.\\n\\nTo repeat a single track, set both ``repeat`` and ``single``.\\n\\n:class:`True`\\n    The tracklist is played repeatedly.\\n:class:`False`\\n    The tracklist is played once.", "params": [{"name": "value"}]}, "core.tracklist.set_single": {"description": "Set single mode.\\n\\n:class:`True`\\n    Playback is stopped after current song, unless in ``repeat`` mode.\\n:class:`False`\\n    Playback continues after current song.", "params": [{"name": "value"}]}, "core.tracklist.shuffle": {"description": "Shuffles the entire tracklist. If ``start`` and ``end`` is given only\\nshuffles the slice ``[start:end]``.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.\\n\\n:param start: position of first track to shuffle\\n:type start: int or :class:`None`\\n:param end: position after last track to shuffle\\n:type end: int or :class:`None`", "params": [{"name": "start", "default": null}, {"name": "end", "default": null}]}, "core.tracklist.slice": {"description": "Returns a slice of the tracklist, limited by the given start and end\\npositions.\\n\\n:param start: position of first track to include in slice\\n:type start: int\\n:param end: position after last track to include in slice\\n:type end: int\\n:rtype: :class:`mopidy.models.TlTrack`", "params": [{"name": "start"}, {"name": "end"}]}}}'
okt 24 00:05:42 Desktop-Ubuntu mopidy[11259]: DEBUG    2022-10-24 00:05:42,142 [11259:HttpServer] mopidy.http.handlers
okt 24 00:05:42 Desktop-Ubuntu mopidy[11259]:   Received WebSocket message from 127.0.0.1: '{"method":"core.describe","jsonrpc":"2.0","id":13}'
okt 24 00:05:42 Desktop-Ubuntu mopidy[11259]: DEBUG    2022-10-24 00:05:42,138 [11259:HttpServer] mopidy.http.handlers
okt 24 00:05:42 Desktop-Ubuntu mopidy[11259]:   New WebSocket connection from 127.0.0.1
okt 24 00:05:42 Desktop-Ubuntu mopidy[11259]: DEBUG    2022-10-24 00:05:42,136 [11259:HttpServer] mopidy.http.handlers
okt 24 00:05:42 Desktop-Ubuntu mopidy[11259]:   101 GET /mopidy/ws/ (127.0.0.1) 20.19ms
okt 24 00:05:42 Desktop-Ubuntu mopidy[11259]: INFO     2022-10-24 00:05:42,136 [11259:HttpServer] tornado.access
okt 24 00:05:40 Desktop-Ubuntu mopidy[11259]:   Zeroconf service 'Mopidy HTTP server on Desktop-Ubuntu' (_mopidy-http._tcp at []:6680): Published
okt 24 00:05:40 Desktop-Ubuntu mopidy[11259]: DEBUG    2022-10-24 00:05:40,569 [11259:HttpFrontend-14 (_actor_loop)] mopidy.zeroconf
okt 24 00:05:40 Desktop-Ubuntu mopidy[11259]:   Zeroconf service 'Mopidy HTTP server on Desktop-Ubuntu' (_http._tcp at []:6680): Published
okt 24 00:05:40 Desktop-Ubuntu mopidy[11259]: DEBUG    2022-10-24 00:05:40,566 [11259:HttpFrontend-14 (_actor_loop)] mopidy.zeroconf
okt 24 00:05:40 Desktop-Ubuntu mopidy[11259]:     '/': <class 'tornado.web.RedirectHandler'>
okt 24 00:05:40 Desktop-Ubuntu mopidy[11259]:     '/mopidy/': <class 'mopidy.http.handlers.ClientListHandler'>
okt 24 00:05:40 Desktop-Ubuntu mopidy[11259]:     '/mopidy/(.+)': <class 'mopidy.http.handlers.StaticFileHandler'>
okt 24 00:05:40 Desktop-Ubuntu mopidy[11259]:     '/mopidy/rpc': <class 'mopidy.http.handlers.JsonRpcHandler'>
okt 24 00:05:40 Desktop-Ubuntu mopidy[11259]:     '/mopidy/ws/?': <class 'mopidy.http.handlers.WebSocketHandler'>
okt 24 00:05:40 Desktop-Ubuntu mopidy[11259]:     '/mopidy': <class 'mopidy.http.handlers.AddSlashHandler'>
okt 24 00:05:40 Desktop-Ubuntu mopidy[11259]:     '/iris/(.*)': <class 'mopidy_iris.handlers.ReactRouterHandler'>
okt 24 00:05:40 Desktop-Ubuntu mopidy[11259]:     '/iris/((.*)(?:css|js|json|map)$)': <class 'tornado.web.StaticFileHandler'>
okt 24 00:05:40 Desktop-Ubuntu mopidy[11259]:     '/iris/assets/(.*)': <class 'tornado.web.StaticFileHandler'>
okt 24 00:05:40 Desktop-Ubuntu mopidy[11259]:     '/iris/ws/?': <class 'mopidy_iris.handlers.WebsocketHandler'>
okt 24 00:05:40 Desktop-Ubuntu mopidy[11259]:     '/iris/http/([^/]*)': <class 'mopidy_iris.handlers.HttpHandler'>
okt 24 00:05:40 Desktop-Ubuntu mopidy[11259]:     '/iris': <class 'mopidy.http.handlers.AddSlashHandler'>
okt 24 00:05:40 Desktop-Ubuntu mopidy[11259]:     '/local/(.+)': <class 'mopidy_local.web.ImageHandler'>
okt 24 00:05:40 Desktop-Ubuntu mopidy[11259]:     '/local/(index.html)?': <class 'mopidy_local.web.IndexHandler'>
okt 24 00:05:40 Desktop-Ubuntu mopidy[11259]:     '/local': <class 'mopidy.http.handlers.AddSlashHandler'>
okt 24 00:05:40 Desktop-Ubuntu mopidy[11259]:     '/youtube/(.*\\.(?:webm|m4a|mp3|ogg))': <class 'mopidy_youtube.web.AudioHandler'>
okt 24 00:05:40 Desktop-Ubuntu mopidy[11259]:     '/youtube/(.*\\.jpg)': <class 'mopidy_youtube.web.ImageHandler'>
okt 24 00:05:40 Desktop-Ubuntu mopidy[11259]:     '/youtube/(index.html|image.html)?': <class 'mopidy_youtube.web.IndexHandler'>
okt 24 00:05:40 Desktop-Ubuntu mopidy[11259]:     '/youtube': <class 'mopidy.http.handlers.AddSlashHandler'>
okt 24 00:05:40 Desktop-Ubuntu mopidy[11259]:   HTTP routes from extensions:
okt 24 00:05:40 Desktop-Ubuntu mopidy[11259]: DEBUG    2022-10-24 00:05:40,556 [11259:HttpServer] mopidy.http.actor
okt 24 00:05:40 Desktop-Ubuntu mopidy[11259]:   Default webclient is mopidy
okt 24 00:05:40 Desktop-Ubuntu mopidy[11259]: DEBUG    2022-10-24 00:05:40,555 [11259:HttpServer] mopidy.http.actor
okt 24 00:05:40 Desktop-Ubuntu mopidy[11259]:   Loaded HTTP extension: mopidy
okt 24 00:05:40 Desktop-Ubuntu mopidy[11259]: DEBUG    2022-10-24 00:05:40,555 [11259:HttpServer] mopidy.http.actor
okt 24 00:05:40 Desktop-Ubuntu mopidy[11259]:   Loaded HTTP extension: iris
okt 24 00:05:40 Desktop-Ubuntu mopidy[11259]: DEBUG    2022-10-24 00:05:40,555 [11259:HttpServer] mopidy.http.actor
okt 24 00:05:40 Desktop-Ubuntu mopidy[11259]:   Loaded HTTP extension: local
okt 24 00:05:40 Desktop-Ubuntu mopidy[11259]: DEBUG    2022-10-24 00:05:40,555 [11259:HttpServer] mopidy.http.actor
okt 24 00:05:40 Desktop-Ubuntu mopidy[11259]:   Loaded HTTP extension: youtube
okt 24 00:05:40 Desktop-Ubuntu mopidy[11259]: DEBUG    2022-10-24 00:05:40,554 [11259:HttpServer] mopidy.http.actor
okt 24 00:05:40 Desktop-Ubuntu mopidy[11259]:   Using selector: EpollSelector
okt 24 00:05:40 Desktop-Ubuntu mopidy[11259]: DEBUG    2022-10-24 00:05:40,552 [11259:HttpServer] asyncio
okt 24 00:05:40 Desktop-Ubuntu mopidy[11259]:   Starting GLib mainloop
okt 24 00:05:40 Desktop-Ubuntu mopidy[11259]: INFO     2022-10-24 00:05:40,552 [11259:MainThread] mopidy.commands
okt 24 00:05:40 Desktop-Ubuntu mopidy[11259]:   HttpFrontend took 1ms
okt 24 00:05:40 Desktop-Ubuntu mopidy[11259]: TRACE    2022-10-24 00:05:40,552 [11259:MainThread] mopidy.internal.timer
okt 24 00:05:40 Desktop-Ubuntu mopidy[11259]:   HTTP server running at [::ffff:127.0.0.1]:6680
okt 24 00:05:40 Desktop-Ubuntu mopidy[11259]: INFO     2022-10-24 00:05:40,551 [11259:HttpFrontend-14 (_actor_loop)] mopidy.http.actor
okt 24 00:05:40 Desktop-Ubuntu mopidy[11259]:   Starting HttpFrontend (urn:uuid:1336e334-9f6b-4d4f-9b84-2395baf4ffa5)
okt 24 00:05:40 Desktop-Ubuntu mopidy[11259]: DEBUG    2022-10-24 00:05:40,551 [11259:MainThread] pykka
okt 24 00:05:40 Desktop-Ubuntu mopidy[11259]:   Registered HttpFrontend (urn:uuid:1336e334-9f6b-4d4f-9b84-2395baf4ffa5)
okt 24 00:05:40 Desktop-Ubuntu mopidy[11259]: DEBUG    2022-10-24 00:05:40,551 [11259:MainThread] pykka
okt 24 00:05:40 Desktop-Ubuntu mopidy[11259]:   Starting HTTP server
okt 24 00:05:40 Desktop-Ubuntu mopidy[11259]: DEBUG    2022-10-24 00:05:40,551 [11259:MainThread] mopidy.http.actor
okt 24 00:05:40 Desktop-Ubuntu mopidy[11259]:   IrisFrontend took 0ms
okt 24 00:05:40 Desktop-Ubuntu mopidy[11259]: TRACE    2022-10-24 00:05:40,550 [11259:MainThread] mopidy.internal.timer
okt 24 00:05:40 Desktop-Ubuntu mopidy[11259]:   Starting Iris 3.64.1
okt 24 00:05:40 Desktop-Ubuntu mopidy[11259]: INFO     2022-10-24 00:05:40,550 [11259:IrisFrontend-12 (_actor_loop)] mopidy_iris.core
okt 24 00:05:40 Desktop-Ubuntu mopidy[11259]:   Starting IrisFrontend (urn:uuid:4b35401a-871b-4edf-8f17-6224b7d86114)
okt 24 00:05:40 Desktop-Ubuntu mopidy[11259]: DEBUG    2022-10-24 00:05:40,550 [11259:MainThread] pykka
okt 24 00:05:40 Desktop-Ubuntu mopidy[11259]:   Registered IrisFrontend (urn:uuid:4b35401a-871b-4edf-8f17-6224b7d86114)
okt 24 00:05:40 Desktop-Ubuntu mopidy[11259]: DEBUG    2022-10-24 00:05:40,550 [11259:MainThread] pykka
okt 24 00:05:40 Desktop-Ubuntu mopidy[11259]:   YTMusicScrobbleFE took 0ms
okt 24 00:05:40 Desktop-Ubuntu mopidy[11259]: TRACE    2022-10-24 00:05:40,550 [11259:MainThread] mopidy.internal.timer
okt 24 00:05:40 Desktop-Ubuntu mopidy[11259]:   Starting YTMusicScrobbleFE (urn:uuid:532ab3e1-9c51-4acc-b54a-12bd9b4dbe94)
okt 24 00:05:40 Desktop-Ubuntu mopidy[11259]: DEBUG    2022-10-24 00:05:40,549 [11259:MainThread] pykka
okt 24 00:05:40 Desktop-Ubuntu mopidy[11259]:   Registered YTMusicScrobbleFE (urn:uuid:532ab3e1-9c51-4acc-b54a-12bd9b4dbe94)
okt 24 00:05:40 Desktop-Ubuntu mopidy[11259]: DEBUG    2022-10-24 00:05:40,549 [11259:MainThread] pykka
okt 24 00:05:40 Desktop-Ubuntu mopidy[11259]:   YouTubeCoreListener took 0ms
okt 24 00:05:40 Desktop-Ubuntu mopidy[11259]: TRACE    2022-10-24 00:05:40,549 [11259:MainThread] mopidy.internal.timer
okt 24 00:05:40 Desktop-Ubuntu mopidy[11259]:   Starting YouTubeCoreListener (urn:uuid:5a670e6d-d25f-4bfa-aa28-bceed402596a)
okt 24 00:05:40 Desktop-Ubuntu mopidy[11259]: DEBUG    2022-10-24 00:05:40,549 [11259:MainThread] pykka
okt 24 00:05:40 Desktop-Ubuntu mopidy[11259]:   Registered YouTubeCoreListener (urn:uuid:5a670e6d-d25f-4bfa-aa28-bceed402596a)
okt 24 00:05:40 Desktop-Ubuntu mopidy[11259]: DEBUG    2022-10-24 00:05:40,549 [11259:MainThread] pykka
okt 24 00:05:40 Desktop-Ubuntu mopidy[11259]:   YouTubeAutoplayer took 0ms
okt 24 00:05:40 Desktop-Ubuntu mopidy[11259]: TRACE    2022-10-24 00:05:40,549 [11259:MainThread] mopidy.internal.timer
okt 24 00:05:40 Desktop-Ubuntu mopidy[11259]:   Starting YouTubeAutoplayer (urn:uuid:b8735b07-b428-4c08-8cc1-416544b9b21e)
okt 24 00:05:40 Desktop-Ubuntu mopidy[11259]: DEBUG    2022-10-24 00:05:40,549 [11259:MainThread] pykka
okt 24 00:05:40 Desktop-Ubuntu mopidy[11259]:   Registered YouTubeAutoplayer (urn:uuid:b8735b07-b428-4c08-8cc1-416544b9b21e)
okt 24 00:05:40 Desktop-Ubuntu mopidy[11259]: DEBUG    2022-10-24 00:05:40,548 [11259:MainThread] pykka
okt 24 00:05:40 Desktop-Ubuntu mopidy[11259]:   Starting Mopidy frontends: YouTubeAutoplayer, YouTubeCoreListener, YTMusicScrobbleFE, IrisFrontend, HttpFrontend
okt 24 00:05:40 Desktop-Ubuntu mopidy[11259]: INFO     2022-10-24 00:05:40,548 [11259:MainThread] mopidy.commands
okt 24 00:05:40 Desktop-Ubuntu mopidy[11259]:   Starting Core (urn:uuid:eb583d58-ca6e-4c14-9e7f-2bfc07bfd76d)
okt 24 00:05:40 Desktop-Ubuntu mopidy[11259]: DEBUG    2022-10-24 00:05:40,545 [11259:MainThread] pykka
okt 24 00:05:40 Desktop-Ubuntu mopidy[11259]:   Registered Core (urn:uuid:eb583d58-ca6e-4c14-9e7f-2bfc07bfd76d)
okt 24 00:05:40 Desktop-Ubuntu mopidy[11259]: DEBUG    2022-10-24 00:05:40,545 [11259:MainThread] pykka
okt 24 00:05:40 Desktop-Ubuntu mopidy[11259]:   Starting Mopidy core
okt 24 00:05:40 Desktop-Ubuntu mopidy[11259]: INFO     2022-10-24 00:05:40,540 [11259:MainThread] mopidy.commands
okt 24 00:05:39 Desktop-Ubuntu mopidy[11259]:   https://music.youtube.com:443 "GET / HTTP/1.1" 200 None
okt 24 00:05:39 Desktop-Ubuntu mopidy[11259]: DEBUG    2022-10-24 00:05:39,996 [11259:YouTubeBackend-3 (_actor_loop)] urllib3.connectionpool
okt 24 00:05:39 Desktop-Ubuntu mopidy[11259]:   StreamBackend took 5ms
okt 24 00:05:39 Desktop-Ubuntu mopidy[11259]: TRACE    2022-10-24 00:05:39,834 [11259:MainThread] mopidy.internal.timer
okt 24 00:05:39 Desktop-Ubuntu mopidy[11259]:   Starting StreamBackend (urn:uuid:4154bc74-bb75-431d-a951-01764e73c4a5)
okt 24 00:05:39 Desktop-Ubuntu mopidy[11259]: DEBUG    2022-10-24 00:05:39,831 [11259:MainThread] pykka
okt 24 00:05:39 Desktop-Ubuntu mopidy[11259]:   Registered StreamBackend (urn:uuid:4154bc74-bb75-431d-a951-01764e73c4a5)
okt 24 00:05:39 Desktop-Ubuntu mopidy[11259]: DEBUG    2022-10-24 00:05:39,831 [11259:MainThread] pykka
okt 24 00:05:39 Desktop-Ubuntu mopidy[11259]:   M3UBackend took 1ms
okt 24 00:05:39 Desktop-Ubuntu mopidy[11259]: TRACE    2022-10-24 00:05:39,828 [11259:MainThread] mopidy.internal.timer
okt 24 00:05:39 Desktop-Ubuntu mopidy[11259]:   Starting M3UBackend (urn:uuid:4bde6797-9490-4b58-b1e0-c9b5498b322d)
okt 24 00:05:39 Desktop-Ubuntu mopidy[11259]: DEBUG    2022-10-24 00:05:39,827 [11259:MainThread] pykka
okt 24 00:05:39 Desktop-Ubuntu mopidy[11259]:   Registered M3UBackend (urn:uuid:4bde6797-9490-4b58-b1e0-c9b5498b322d)
okt 24 00:05:39 Desktop-Ubuntu mopidy[11259]: DEBUG    2022-10-24 00:05:39,827 [11259:MainThread] pykka
okt 24 00:05:39 Desktop-Ubuntu mopidy[11259]:   FileBackend took 3ms
okt 24 00:05:39 Desktop-Ubuntu mopidy[11259]: TRACE    2022-10-24 00:05:39,826 [11259:MainThread] mopidy.internal.timer
okt 24 00:05:39 Desktop-Ubuntu mopidy[11259]:   Starting FileBackend (urn:uuid:f311b573-69c2-44f6-8325-0a1591e0136a)
okt 24 00:05:39 Desktop-Ubuntu mopidy[11259]: DEBUG    2022-10-24 00:05:39,823 [11259:MainThread] pykka
okt 24 00:05:39 Desktop-Ubuntu mopidy[11259]:   Audio output set to "pulsesink server=127.0.0.1"
okt 24 00:05:39 Desktop-Ubuntu mopidy[11259]: INFO     2022-10-24 00:05:39,820 [11259:Audio-2 (_actor_loop)] mopidy.audio.actor
okt 24 00:05:39 Desktop-Ubuntu mopidy[11259]:   Registered FileBackend (urn:uuid:f311b573-69c2-44f6-8325-0a1591e0136a)
okt 24 00:05:39 Desktop-Ubuntu mopidy[11259]: DEBUG    2022-10-24 00:05:39,823 [11259:MainThread] pykka
okt 24 00:05:39 Desktop-Ubuntu mopidy[11259]:   Starting new HTTPS connection (1): music.youtube.com:443
okt 24 00:05:39 Desktop-Ubuntu mopidy[11259]: DEBUG    2022-10-24 00:05:39,822 [11259:YouTubeBackend-3 (_actor_loop)] urllib3.connectionpool
okt 24 00:05:39 Desktop-Ubuntu mopidy[11259]:   Failed expanding path ($XDG_MUSIC_DIR) from file/media_dirs config value.
okt 24 00:05:39 Desktop-Ubuntu mopidy[11259]: DEBUG    2022-10-24 00:05:39,823 [11259:MainThread] mopidy.file.library
okt 24 00:05:39 Desktop-Ubuntu mopidy[11259]: AttributeError: 'YTMusic' object has no attribute 'headers'
okt 24 00:05:39 Desktop-Ubuntu mopidy[11259]:     if 'x-goog-visitor-id' not in self.headers:
okt 24 00:05:39 Desktop-Ubuntu mopidy[11259]:   File "/usr/local/lib/python3.10/dist-packages/ytmusicapi/ytmusic.py", line 98, in __init__
okt 24 00:05:39 Desktop-Ubuntu mopidy[11259]:     self.api = YTMusic(self._ytmusicapi_auth_json)
okt 24 00:05:39 Desktop-Ubuntu mopidy[11259]:   File "/usr/local/lib/python3.10/dist-packages/mopidy_ytmusic/backend.py", line 65, in __init__
okt 24 00:05:39 Desktop-Ubuntu mopidy[11259]:     obj = cls(*args, **kwargs)
okt 24 00:05:39 Desktop-Ubuntu mopidy[11259]:   File "/usr/lib/python3/dist-packages/pykka/_actor.py", line 91, in start
okt 24 00:05:39 Desktop-Ubuntu mopidy[11259]:     backend = backend_class.start(
okt 24 00:05:39 Desktop-Ubuntu mopidy[11259]:   File "/usr/lib/python3/dist-packages/mopidy/commands.py", line 412, in start_backends
okt 24 00:05:39 Desktop-Ubuntu mopidy[11259]:     yield
okt 24 00:05:39 Desktop-Ubuntu mopidy[11259]:   File "/usr/lib/python3/dist-packages/mopidy/commands.py", line 248, in _actor_error_handling
okt 24 00:05:39 Desktop-Ubuntu mopidy[11259]: Traceback (most recent call last):
okt 24 00:05:39 Desktop-Ubuntu mopidy[11259]:   Got un-handled exception from YTMusicBackend
okt 24 00:05:39 Desktop-Ubuntu mopidy[11259]: ERROR    2022-10-24 00:05:39,820 [11259:MainThread] mopidy.commands
okt 24 00:05:39 Desktop-Ubuntu mopidy[11259]:   LocalBackend took 6ms
okt 24 00:05:39 Desktop-Ubuntu mopidy[11259]: TRACE    2022-10-24 00:05:39,820 [11259:MainThread] mopidy.internal.timer
okt 24 00:05:39 Desktop-Ubuntu mopidy[11259]:   Using YouTube Music API
okt 24 00:05:39 Desktop-Ubuntu mopidy[11259]: INFO     2022-10-24 00:05:39,816 [11259:YouTubeBackend-3 (_actor_loop)] mopidy_youtube
okt 24 00:05:39 Desktop-Ubuntu mopidy[11259]:   using jAPI
okt 24 00:05:39 Desktop-Ubuntu mopidy[11259]: INFO     2022-10-24 00:05:39,814 [11259:YouTubeBackend-3 (_actor_loop)] mopidy_youtube
okt 24 00:05:39 Desktop-Ubuntu mopidy[11259]:   Starting LocalBackend (urn:uuid:044b8ac1-d360-4c73-9a47-2e8f61f6e390)
okt 24 00:05:39 Desktop-Ubuntu mopidy[11259]: DEBUG    2022-10-24 00:05:39,814 [11259:MainThread] pykka
okt 24 00:05:39 Desktop-Ubuntu mopidy[11259]:   file caching enabled (at /var/cache/mopidy/youtube)
okt 24 00:05:39 Desktop-Ubuntu mopidy[11259]: INFO     2022-10-24 00:05:39,814 [11259:YouTubeBackend-3 (_actor_loop)] mopidy_youtube
okt 24 00:05:39 Desktop-Ubuntu mopidy[11259]:   Registered LocalBackend (urn:uuid:044b8ac1-d360-4c73-9a47-2e8f61f6e390)
okt 24 00:05:39 Desktop-Ubuntu mopidy[11259]: DEBUG    2022-10-24 00:05:39,814 [11259:MainThread] pykka
okt 24 00:05:39 Desktop-Ubuntu mopidy[11259]:   YouTubeBackend took 4ms
okt 24 00:05:39 Desktop-Ubuntu mopidy[11259]: TRACE    2022-10-24 00:05:39,812 [11259:MainThread] mopidy.internal.timer
okt 24 00:05:39 Desktop-Ubuntu mopidy[11259]:   Starting YouTubeBackend (urn:uuid:2edf6f6f-b715-47e4-a572-93ffa98a370c)
okt 24 00:05:39 Desktop-Ubuntu mopidy[11259]: DEBUG    2022-10-24 00:05:39,810 [11259:MainThread] pykka
okt 24 00:05:39 Desktop-Ubuntu mopidy[11259]:   Registered YouTubeBackend (urn:uuid:2edf6f6f-b715-47e4-a572-93ffa98a370c)
okt 24 00:05:39 Desktop-Ubuntu mopidy[11259]: DEBUG    2022-10-24 00:05:39,809 [11259:MainThread] pykka
okt 24 00:05:39 Desktop-Ubuntu mopidy[11259]:   Starting Mopidy backends: YouTubeBackend, LocalBackend, YTMusicBackend, FileBackend, M3UBackend, StreamBackend
okt 24 00:05:39 Desktop-Ubuntu mopidy[11259]: INFO     2022-10-24 00:05:39,808 [11259:MainThread] mopidy.commands
okt 24 00:05:39 Desktop-Ubuntu mopidy[11259]:   Starting Audio (urn:uuid:42306c97-62a8-497b-b9a2-e7794d21b567)
okt 24 00:05:39 Desktop-Ubuntu mopidy[11259]: DEBUG    2022-10-24 00:05:39,807 [11259:MainThread] pykka
okt 24 00:05:39 Desktop-Ubuntu mopidy[11259]:   Registered Audio (urn:uuid:42306c97-62a8-497b-b9a2-e7794d21b567)
okt 24 00:05:39 Desktop-Ubuntu mopidy[11259]: DEBUG    2022-10-24 00:05:39,807 [11259:MainThread] pykka
okt 24 00:05:39 Desktop-Ubuntu mopidy[11259]:   Starting Mopidy audio
okt 24 00:05:39 Desktop-Ubuntu mopidy[11259]: INFO     2022-10-24 00:05:39,807 [11259:MainThread] mopidy.commands
okt 24 00:05:39 Desktop-Ubuntu mopidy[11259]:   Mixer volume left unchanged
okt 24 00:05:39 Desktop-Ubuntu mopidy[11259]: DEBUG    2022-10-24 00:05:39,807 [11259:MainThread] mopidy.commands
okt 24 00:05:39 Desktop-Ubuntu mopidy[11259]:   Starting SoftwareMixer (urn:uuid:491147a9-cd7b-4d69-bd89-720272103781)
okt 24 00:05:39 Desktop-Ubuntu mopidy[11259]: DEBUG    2022-10-24 00:05:39,806 [11259:MainThread] pykka
okt 24 00:05:39 Desktop-Ubuntu mopidy[11259]:   Registered SoftwareMixer (urn:uuid:491147a9-cd7b-4d69-bd89-720272103781)
okt 24 00:05:39 Desktop-Ubuntu mopidy[11259]: DEBUG    2022-10-24 00:05:39,806 [11259:MainThread] pykka
okt 24 00:05:39 Desktop-Ubuntu mopidy[11259]:   Starting Mopidy mixer: SoftwareMixer
okt 24 00:05:39 Desktop-Ubuntu mopidy[11259]: INFO     2022-10-24 00:05:39,805 [11259:MainThread] mopidy.commands
okt 24 00:05:39 Desktop-Ubuntu mopidy[11259]:   Available Mopidy mixers: SoftwareMixer
okt 24 00:05:39 Desktop-Ubuntu mopidy[11259]: DEBUG    2022-10-24 00:05:39,805 [11259:MainThread] mopidy.commands
okt 24 00:05:39 Desktop-Ubuntu mopidy[11259]:   Disabled extensions: soundcloud
okt 24 00:05:39 Desktop-Ubuntu mopidy[11259]: INFO     2022-10-24 00:05:39,712 [11259:MainThread] mopidy.__main__
okt 24 00:05:39 Desktop-Ubuntu mopidy[11259]:   Enabled extensions: local, youtube, stream, iris, file, softwaremixer, http, ytmusic, m3u
okt 24 00:05:39 Desktop-Ubuntu mopidy[11259]: INFO     2022-10-24 00:05:39,711 [11259:MainThread] mopidy.__main__
okt 24 00:05:39 Desktop-Ubuntu mopidy[11259]:   Validating extension: stream
okt 24 00:05:39 Desktop-Ubuntu mopidy[11259]: DEBUG    2022-10-24 00:05:39,711 [11259:MainThread] mopidy.ext
okt 24 00:05:39 Desktop-Ubuntu mopidy[11259]:   Validating extension: softwaremixer
okt 24 00:05:39 Desktop-Ubuntu mopidy[11259]: DEBUG    2022-10-24 00:05:39,711 [11259:MainThread] mopidy.ext
okt 24 00:05:39 Desktop-Ubuntu mopidy[11259]:   Validating extension: m3u
okt 24 00:05:39 Desktop-Ubuntu mopidy[11259]: DEBUG    2022-10-24 00:05:39,711 [11259:MainThread] mopidy.ext
okt 24 00:05:39 Desktop-Ubuntu mopidy[11259]:   Validating extension: http
okt 24 00:05:39 Desktop-Ubuntu mopidy[11259]: DEBUG    2022-10-24 00:05:39,658 [11259:MainThread] mopidy.ext
okt 24 00:05:39 Desktop-Ubuntu mopidy[11259]:   Validating extension: file
okt 24 00:05:39 Desktop-Ubuntu mopidy[11259]: DEBUG    2022-10-24 00:05:39,658 [11259:MainThread] mopidy.ext
okt 24 00:05:39 Desktop-Ubuntu mopidy[11259]:   Validating extension: iris
okt 24 00:05:39 Desktop-Ubuntu mopidy[11259]: DEBUG    2022-10-24 00:05:39,649 [11259:MainThread] mopidy.ext
okt 24 00:05:39 Desktop-Ubuntu mopidy[11259]:   Validating extension: ytmusic
okt 24 00:05:39 Desktop-Ubuntu mopidy[11259]: DEBUG    2022-10-24 00:05:39,632 [11259:MainThread] mopidy.ext
okt 24 00:05:39 Desktop-Ubuntu mopidy[11259]:   Validating extension: soundcloud
okt 24 00:05:39 Desktop-Ubuntu mopidy[11259]: DEBUG    2022-10-24 00:05:39,606 [11259:MainThread] mopidy.ext
okt 24 00:05:39 Desktop-Ubuntu mopidy[11259]:   Validating extension: local
okt 24 00:05:39 Desktop-Ubuntu mopidy[11259]: DEBUG    2022-10-24 00:05:39,585 [11259:MainThread] mopidy.ext
okt 24 00:05:39 Desktop-Ubuntu mopidy[11259]:   Validating extension: youtube
okt 24 00:05:39 Desktop-Ubuntu mopidy[11259]: DEBUG    2022-10-24 00:05:39,534 [11259:MainThread] mopidy.ext
okt 24 00:05:39 Desktop-Ubuntu mopidy[11259]:   Ignoring config section 'jukebox' because no matching extension was found
okt 24 00:05:39 Desktop-Ubuntu mopidy[11259]: WARNING  2022-10-24 00:05:39,532 [11259:MainThread] mopidy.config
okt 24 00:05:39 Desktop-Ubuntu mopidy[11259]:   Loading config from command line options
okt 24 00:05:39 Desktop-Ubuntu mopidy[11259]: INFO     2022-10-24 00:05:39,529 [11259:MainThread] mopidy.config
okt 24 00:05:39 Desktop-Ubuntu mopidy[11259]:   Loading config from file:///etc/mopidy/mopidy.conf
okt 24 00:05:39 Desktop-Ubuntu mopidy[11259]: INFO     2022-10-24 00:05:39,528 [11259:MainThread] mopidy.config
okt 24 00:05:39 Desktop-Ubuntu mopidy[11259]:   Loading config from file:///usr/share/mopidy/conf.d/mopidy.conf
okt 24 00:05:39 Desktop-Ubuntu mopidy[11259]: INFO     2022-10-24 00:05:39,528 [11259:MainThread] mopidy.config
okt 24 00:05:39 Desktop-Ubuntu mopidy[11259]:   Loading config from builtin defaults
okt 24 00:05:39 Desktop-Ubuntu mopidy[11259]: INFO     2022-10-24 00:05:39,526 [11259:MainThread] mopidy.config
okt 24 00:05:39 Desktop-Ubuntu mopidy[11259]:   Fetching passwords from your keyring failed. Any passwords stored in the keyring will not be available. (org.freedesktop.DBus.Error.NotSupported: Unable to autolaunch a dbus-daemon without a $DISPLAY for X11)
okt 24 00:05:39 Desktop-Ubuntu mopidy[11259]: DEBUG    2022-10-24 00:05:39,526 [11259:MainThread] mopidy.config.keyring
okt 24 00:05:39 Desktop-Ubuntu mopidy[11259]:   Discovered extensions: youtube, local, soundcloud, ytmusic, iris, file, http, m3u, softwaremixer, stream
okt 24 00:05:39 Desktop-Ubuntu mopidy[11259]: DEBUG    2022-10-24 00:05:39,524 [11259:MainThread] mopidy.ext
okt 24 00:05:39 Desktop-Ubuntu mopidy[11259]:   Loaded extension: Mopidy-Stream 3.3.0
okt 24 00:05:39 Desktop-Ubuntu mopidy[11259]: DEBUG    2022-10-24 00:05:39,521 [11259:MainThread] mopidy.ext
okt 24 00:05:39 Desktop-Ubuntu mopidy[11259]:   Loading entry point: stream = mopidy.stream:Extension
okt 24 00:05:39 Desktop-Ubuntu mopidy[11259]: DEBUG    2022-10-24 00:05:39,521 [11259:MainThread] mopidy.ext
okt 24 00:05:39 Desktop-Ubuntu mopidy[11259]:   Loaded extension: Mopidy-SoftwareMixer 3.3.0
okt 24 00:05:39 Desktop-Ubuntu mopidy[11259]: DEBUG    2022-10-24 00:05:39,521 [11259:MainThread] mopidy.ext
okt 24 00:05:39 Desktop-Ubuntu mopidy[11259]:   Loading entry point: softwaremixer = mopidy.softwaremixer:Extension
okt 24 00:05:39 Desktop-Ubuntu mopidy[11259]: DEBUG    2022-10-24 00:05:39,520 [11259:MainThread] mopidy.ext
okt 24 00:05:39 Desktop-Ubuntu mopidy[11259]:   Loaded extension: Mopidy-M3U 3.3.0
okt 24 00:05:39 Desktop-Ubuntu mopidy[11259]: DEBUG    2022-10-24 00:05:39,520 [11259:MainThread] mopidy.ext
okt 24 00:05:39 Desktop-Ubuntu mopidy[11259]:   Loading entry point: m3u = mopidy.m3u:Extension
okt 24 00:05:39 Desktop-Ubuntu mopidy[11259]: DEBUG    2022-10-24 00:05:39,520 [11259:MainThread] mopidy.ext
okt 24 00:05:39 Desktop-Ubuntu mopidy[11259]:   Loaded extension: Mopidy-HTTP 3.3.0
okt 24 00:05:39 Desktop-Ubuntu mopidy[11259]: DEBUG    2022-10-24 00:05:39,520 [11259:MainThread] mopidy.ext
okt 24 00:05:39 Desktop-Ubuntu mopidy[11259]:   Loading entry point: http = mopidy.http:Extension
okt 24 00:05:39 Desktop-Ubuntu mopidy[11259]: DEBUG    2022-10-24 00:05:39,519 [11259:MainThread] mopidy.ext
okt 24 00:05:39 Desktop-Ubuntu mopidy[11259]:   Loaded extension: Mopidy-File 3.3.0
okt 24 00:05:39 Desktop-Ubuntu mopidy[11259]: DEBUG    2022-10-24 00:05:39,519 [11259:MainThread] mopidy.ext
okt 24 00:05:39 Desktop-Ubuntu mopidy[11259]:   Loading entry point: file = mopidy.file:Extension
okt 24 00:05:39 Desktop-Ubuntu mopidy[11259]: DEBUG    2022-10-24 00:05:39,519 [11259:MainThread] mopidy.ext
okt 24 00:05:39 Desktop-Ubuntu mopidy[11259]:   Loaded extension: Mopidy-Iris 3.64.1
okt 24 00:05:39 Desktop-Ubuntu mopidy[11259]: DEBUG    2022-10-24 00:05:39,517 [11259:MainThread] mopidy.ext
okt 24 00:05:39 Desktop-Ubuntu mopidy[11259]:   Loading entry point: iris = mopidy_iris:Extension
okt 24 00:05:39 Desktop-Ubuntu mopidy[11259]: DEBUG    2022-10-24 00:05:39,516 [11259:MainThread] mopidy.ext
okt 24 00:05:39 Desktop-Ubuntu mopidy[11259]:   Loaded extension: Mopidy-YTMusic 0.3.7
okt 24 00:05:39 Desktop-Ubuntu mopidy[11259]: DEBUG    2022-10-24 00:05:39,516 [11259:MainThread] mopidy.ext
okt 24 00:05:39 Desktop-Ubuntu mopidy[11259]:   Loading entry point: ytmusic = mopidy_ytmusic:Extension
okt 24 00:05:39 Desktop-Ubuntu mopidy[11259]: DEBUG    2022-10-24 00:05:39,515 [11259:MainThread] mopidy.ext
okt 24 00:05:39 Desktop-Ubuntu mopidy[11259]:   Loaded extension: Mopidy-SoundCloud 3.0.1
okt 24 00:05:39 Desktop-Ubuntu mopidy[11259]: DEBUG    2022-10-24 00:05:39,514 [11259:MainThread] mopidy.ext
okt 24 00:05:39 Desktop-Ubuntu mopidy[11259]:   Loading entry point: soundcloud = mopidy_soundcloud:Extension
okt 24 00:05:39 Desktop-Ubuntu mopidy[11259]: DEBUG    2022-10-24 00:05:39,513 [11259:MainThread] mopidy.ext
okt 24 00:05:39 Desktop-Ubuntu mopidy[11259]:   Loaded extension: Mopidy-Local 3.2.1
okt 24 00:05:39 Desktop-Ubuntu mopidy[11259]: DEBUG    2022-10-24 00:05:39,513 [11259:MainThread] mopidy.ext
okt 24 00:05:39 Desktop-Ubuntu mopidy[11259]:   Loading entry point: local = mopidy_local:Extension
okt 24 00:05:39 Desktop-Ubuntu mopidy[11259]: DEBUG    2022-10-24 00:05:39,502 [11259:MainThread] mopidy.ext
okt 24 00:05:39 Desktop-Ubuntu mopidy[11259]:   Loaded extension: Mopidy-YouTube 3.6.1
okt 24 00:05:39 Desktop-Ubuntu mopidy[11259]: DEBUG    2022-10-24 00:05:39,502 [11259:MainThread] mopidy.ext
okt 24 00:05:39 Desktop-Ubuntu mopidy[11259]:   Loading entry point: youtube = mopidy_youtube:Extension
okt 24 00:05:39 Desktop-Ubuntu mopidy[11259]: DEBUG    2022-10-24 00:05:39,501 [11259:MainThread] mopidy.ext
okt 24 00:05:39 Desktop-Ubuntu mopidy[11259]:   Starting Mopidy 3.3.0
okt 24 00:05:39 Desktop-Ubuntu mopidy[11259]: INFO     2022-10-24 00:05:39,498 [11259:MainThread] mopidy.__main__
okt 24 00:05:39 Desktop-Ubuntu systemd[1]: Started Mopidy music server.
okt 24 00:05:39 Desktop-Ubuntu systemd[1]: Starting Mopidy music server...
okt 24 00:05:39 Desktop-Ubuntu systemd[1]: Stopped Mopidy music server.
okt 24 00:05:39 Desktop-Ubuntu systemd[1]: mopidy.service: Deactivated successfully.
okt 24 00:05:39 Desktop-Ubuntu mopidy[11084]: Failed loading provided credentials. Make sure to provide a string or a file path. Reason: Expecting value: line 1 column 1 (char 0)
okt 24 00:05:39 Desktop-Ubuntu mopidy[11084]:   All actors stopped.
okt 24 00:05:39 Desktop-Ubuntu mopidy[11084]: DEBUG    2022-10-24 00:05:39,052 [11084:MainThread] mopidy.internal.process
okt 24 00:05:39 Desktop-Ubuntu systemd[1]: Stopping Mopidy music server...
okt 24 00:05:39 Desktop-Ubuntu mopidy[11084]:   Stopped SoftwareMixer (urn:uuid:f2fbce52-7393-4acf-ba42-5742657cd376)
okt 24 00:05:39 Desktop-Ubuntu mopidy[11084]: DEBUG    2022-10-24 00:05:39,051 [11084:SoftwareMixer-1 (_actor_loop)] pykka
okt 24 00:05:39 Desktop-Ubuntu mopidy[11084]:   Unregistered SoftwareMixer (urn:uuid:f2fbce52-7393-4acf-ba42-5742657cd376)
okt 24 00:05:39 Desktop-Ubuntu mopidy[11084]: DEBUG    2022-10-24 00:05:39,051 [11084:SoftwareMixer-1 (_actor_loop)] pykka
okt 24 00:05:39 Desktop-Ubuntu mopidy[11084]:   Stopping 1 instance(s) of SoftwareMixer
okt 24 00:05:39 Desktop-Ubuntu mopidy[11084]: DEBUG    2022-10-24 00:05:39,051 [11084:MainThread] mopidy.internal.process
okt 24 00:05:39 Desktop-Ubuntu mopidy[11084]:   Stopping Mopidy mixer
okt 24 00:05:39 Desktop-Ubuntu mopidy[11084]: INFO     2022-10-24 00:05:39,051 [11084:MainThread] mopidy.commands
okt 24 00:05:39 Desktop-Ubuntu mopidy[11084]:   Stopped Audio (urn:uuid:bc1b625b-5553-4af1-bbdf-f894fcc29130)
okt 24 00:05:39 Desktop-Ubuntu mopidy[11084]: DEBUG    2022-10-24 00:05:39,050 [11084:Audio-2 (_actor_loop)] pykka
okt 24 00:05:39 Desktop-Ubuntu mopidy[11084]:   Unregistered Audio (urn:uuid:bc1b625b-5553-4af1-bbdf-f894fcc29130)
okt 24 00:05:39 Desktop-Ubuntu mopidy[11084]: DEBUG    2022-10-24 00:05:39,050 [11084:Audio-2 (_actor_loop)] pykka
okt 24 00:05:39 Desktop-Ubuntu mopidy[11084]:   Stopping 1 instance(s) of Audio
okt 24 00:05:39 Desktop-Ubuntu mopidy[11084]: DEBUG    2022-10-24 00:05:39,050 [11084:MainThread] mopidy.internal.process
okt 24 00:05:39 Desktop-Ubuntu mopidy[11084]:   Stopping Mopidy audio
okt 24 00:05:39 Desktop-Ubuntu mopidy[11084]: INFO     2022-10-24 00:05:39,050 [11084:MainThread] mopidy.commands
okt 24 00:05:39 Desktop-Ubuntu mopidy[11084]:   Stopped StreamBackend (urn:uuid:6e2145d3-9654-4367-b3b9-1cd342803ec2)
okt 24 00:05:39 Desktop-Ubuntu mopidy[11084]: DEBUG    2022-10-24 00:05:39,050 [11084:StreamBackend-7 (_actor_loop)] pykka
okt 24 00:05:39 Desktop-Ubuntu mopidy[11084]:   Unregistered StreamBackend (urn:uuid:6e2145d3-9654-4367-b3b9-1cd342803ec2)
okt 24 00:05:39 Desktop-Ubuntu mopidy[11084]: DEBUG    2022-10-24 00:05:39,050 [11084:StreamBackend-7 (_actor_loop)] pykka
okt 24 00:05:39 Desktop-Ubuntu mopidy[11084]:   Stopping 1 instance(s) of StreamBackend
okt 24 00:05:39 Desktop-Ubuntu mopidy[11084]: DEBUG    2022-10-24 00:05:39,050 [11084:MainThread] mopidy.internal.process
okt 24 00:05:39 Desktop-Ubuntu mopidy[11084]:   Stopped M3UBackend (urn:uuid:b85ffbbc-4d32-45da-8d00-d62a2c6b6b6b)
okt 24 00:05:39 Desktop-Ubuntu mopidy[11084]: DEBUG    2022-10-24 00:05:39,049 [11084:M3UBackend-6 (_actor_loop)] pykka
okt 24 00:05:39 Desktop-Ubuntu mopidy[11084]:   Unregistered M3UBackend (urn:uuid:b85ffbbc-4d32-45da-8d00-d62a2c6b6b6b)
okt 24 00:05:39 Desktop-Ubuntu mopidy[11084]: DEBUG    2022-10-24 00:05:39,049 [11084:M3UBackend-6 (_actor_loop)] pykka
okt 24 00:05:39 Desktop-Ubuntu mopidy[11084]:   Stopping 1 instance(s) of M3UBackend
okt 24 00:05:39 Desktop-Ubuntu mopidy[11084]: DEBUG    2022-10-24 00:05:39,049 [11084:MainThread] mopidy.internal.process
okt 24 00:05:39 Desktop-Ubuntu mopidy[11084]:   Stopped FileBackend (urn:uuid:94311e16-20a1-4deb-90d6-f1f6a9073403)
okt 24 00:05:39 Desktop-Ubuntu mopidy[11084]: DEBUG    2022-10-24 00:05:39,049 [11084:FileBackend-5 (_actor_loop)] pykka
okt 24 00:05:39 Desktop-Ubuntu mopidy[11084]:   Unregistered FileBackend (urn:uuid:94311e16-20a1-4deb-90d6-f1f6a9073403)
okt 24 00:05:39 Desktop-Ubuntu mopidy[11084]: DEBUG    2022-10-24 00:05:39,049 [11084:FileBackend-5 (_actor_loop)] pykka
okt 24 00:05:39 Desktop-Ubuntu mopidy[11084]:   Stopping 1 instance(s) of FileBackend
okt 24 00:05:39 Desktop-Ubuntu mopidy[11084]: DEBUG    2022-10-24 00:05:39,049 [11084:MainThread] mopidy.internal.process
okt 24 00:05:39 Desktop-Ubuntu mopidy[11084]:   Stopping 0 instance(s) of YTMusicBackend
okt 24 00:05:39 Desktop-Ubuntu mopidy[11084]: DEBUG    2022-10-24 00:05:39,049 [11084:MainThread] mopidy.internal.process
okt 24 00:05:39 Desktop-Ubuntu mopidy[11084]:   Stopped LocalBackend (urn:uuid:ed94024c-c640-496f-9074-bb5bc92f9510)
okt 24 00:05:39 Desktop-Ubuntu mopidy[11084]: DEBUG    2022-10-24 00:05:39,048 [11084:LocalBackend-4 (_actor_loop)] pykka
okt 24 00:05:39 Desktop-Ubuntu mopidy[11084]:   Unregistered LocalBackend (urn:uuid:ed94024c-c640-496f-9074-bb5bc92f9510)
okt 24 00:05:39 Desktop-Ubuntu mopidy[11084]: DEBUG    2022-10-24 00:05:39,048 [11084:LocalBackend-4 (_actor_loop)] pykka
okt 24 00:05:39 Desktop-Ubuntu mopidy[11084]:   Stopping 1 instance(s) of LocalBackend
okt 24 00:05:39 Desktop-Ubuntu mopidy[11084]: DEBUG    2022-10-24 00:05:39,048 [11084:MainThread] mopidy.internal.process
okt 24 00:05:39 Desktop-Ubuntu mopidy[11084]:   Stopped YouTubeBackend (urn:uuid:866fcb66-dfc9-4195-9f0e-e9f59e7f24b1)
okt 24 00:05:39 Desktop-Ubuntu mopidy[11084]: DEBUG    2022-10-24 00:05:39,048 [11084:YouTubeBackend-3 (_actor_loop)] pykka
okt 24 00:05:39 Desktop-Ubuntu mopidy[11084]:   Unregistered YouTubeBackend (urn:uuid:866fcb66-dfc9-4195-9f0e-e9f59e7f24b1)
okt 24 00:05:39 Desktop-Ubuntu mopidy[11084]: DEBUG    2022-10-24 00:05:39,048 [11084:YouTubeBackend-3 (_actor_loop)] pykka
okt 24 00:05:39 Desktop-Ubuntu mopidy[11084]:   Stopping 1 instance(s) of YouTubeBackend
okt 24 00:05:39 Desktop-Ubuntu mopidy[11084]: DEBUG    2022-10-24 00:05:39,048 [11084:MainThread] mopidy.internal.process
okt 24 00:05:39 Desktop-Ubuntu mopidy[11084]:   Stopping Mopidy backends
okt 24 00:05:39 Desktop-Ubuntu mopidy[11084]: INFO     2022-10-24 00:05:39,047 [11084:MainThread] mopidy.commands
okt 24 00:05:39 Desktop-Ubuntu mopidy[11084]:   Stopped Core (urn:uuid:afaa2177-86d0-43fc-97f0-df1b168bb831)
okt 24 00:05:39 Desktop-Ubuntu mopidy[11084]: DEBUG    2022-10-24 00:05:39,047 [11084:Core-8 (_actor_loop)] pykka
okt 24 00:05:39 Desktop-Ubuntu mopidy[11084]:   Unregistered Core (urn:uuid:afaa2177-86d0-43fc-97f0-df1b168bb831)
okt 24 00:05:39 Desktop-Ubuntu mopidy[11084]: DEBUG    2022-10-24 00:05:39,047 [11084:Core-8 (_actor_loop)] pykka
okt 24 00:05:39 Desktop-Ubuntu mopidy[11084]:   Stopping 1 instance(s) of Core
okt 24 00:05:39 Desktop-Ubuntu mopidy[11084]: DEBUG    2022-10-24 00:05:39,047 [11084:MainThread] mopidy.internal.process
okt 24 00:05:39 Desktop-Ubuntu mopidy[11084]:   Stopping Mopidy core
okt 24 00:05:39 Desktop-Ubuntu mopidy[11084]: INFO     2022-10-24 00:05:39,047 [11084:MainThread] mopidy.commands
okt 24 00:05:39 Desktop-Ubuntu mopidy[11084]:   Stopped HTTP server
okt 24 00:05:39 Desktop-Ubuntu mopidy[11084]: DEBUG    2022-10-24 00:05:39,046 [11084:HttpServer] mopidy.http.actor
okt 24 00:05:39 Desktop-Ubuntu mopidy[11084]:   Stopping HTTP server
okt 24 00:05:39 Desktop-Ubuntu mopidy[11084]: DEBUG    2022-10-24 00:05:39,046 [11084:HttpFrontend-14 (_actor_loop)] mopidy.http.actor
okt 24 00:05:39 Desktop-Ubuntu mopidy[11084]:   Zeroconf service 'Mopidy HTTP server on Desktop-Ubuntu' (_mopidy-http._tcp at []:6680): Unpublished
okt 24 00:05:39 Desktop-Ubuntu mopidy[11084]: DEBUG    2022-10-24 00:05:39,046 [11084:HttpFrontend-14 (_actor_loop)] mopidy.zeroconf
okt 24 00:05:39 Desktop-Ubuntu mopidy[11084]:   Zeroconf service 'Mopidy HTTP server on Desktop-Ubuntu' (_http._tcp at []:6680): Unpublished
okt 24 00:05:39 Desktop-Ubuntu mopidy[11084]: DEBUG    2022-10-24 00:05:39,046 [11084:HttpFrontend-14 (_actor_loop)] mopidy.zeroconf
okt 24 00:05:39 Desktop-Ubuntu mopidy[11084]:   Stopped HttpFrontend (urn:uuid:638697c5-b112-4ac2-a4b9-1541906d3a4c)
okt 24 00:05:39 Desktop-Ubuntu mopidy[11084]: DEBUG    2022-10-24 00:05:39,045 [11084:HttpFrontend-14 (_actor_loop)] pykka
okt 24 00:05:39 Desktop-Ubuntu mopidy[11084]:   Unregistered HttpFrontend (urn:uuid:638697c5-b112-4ac2-a4b9-1541906d3a4c)
okt 24 00:05:39 Desktop-Ubuntu mopidy[11084]: DEBUG    2022-10-24 00:05:39,045 [11084:HttpFrontend-14 (_actor_loop)] pykka
okt 24 00:05:39 Desktop-Ubuntu mopidy[11084]:   Stopping 1 instance(s) of HttpFrontend
okt 24 00:05:39 Desktop-Ubuntu mopidy[11084]: DEBUG    2022-10-24 00:05:39,044 [11084:MainThread] mopidy.internal.process
okt 24 00:05:39 Desktop-Ubuntu mopidy[11084]:   Stopping Iris
okt 24 00:05:39 Desktop-Ubuntu mopidy[11084]: INFO     2022-10-24 00:05:39,044 [11084:IrisFrontend-12 (_actor_loop)] mopidy_iris.core
okt 24 00:05:39 Desktop-Ubuntu mopidy[11084]:   Stopped IrisFrontend (urn:uuid:b9ae9a9c-81f6-4892-8df8-069326aab132)
okt 24 00:05:39 Desktop-Ubuntu mopidy[11084]: DEBUG    2022-10-24 00:05:39,044 [11084:IrisFrontend-12 (_actor_loop)] pykka
okt 24 00:05:39 Desktop-Ubuntu mopidy[11084]:   Unregistered IrisFrontend (urn:uuid:b9ae9a9c-81f6-4892-8df8-069326aab132)
okt 24 00:05:39 Desktop-Ubuntu mopidy[11084]: DEBUG    2022-10-24 00:05:39,044 [11084:IrisFrontend-12 (_actor_loop)] pykka
okt 24 00:05:39 Desktop-Ubuntu mopidy[11084]:   Stopping 1 instance(s) of IrisFrontend
okt 24 00:05:39 Desktop-Ubuntu mopidy[11084]: DEBUG    2022-10-24 00:05:39,044 [11084:MainThread] mopidy.internal.process
okt 24 00:05:39 Desktop-Ubuntu mopidy[11084]:   Stopped YTMusicScrobbleFE (urn:uuid:28be5adc-df08-4713-ade1-7c44f1cb2780)
okt 24 00:05:39 Desktop-Ubuntu mopidy[11084]: DEBUG    2022-10-24 00:05:39,044 [11084:YTMusicScrobbleFE-11 (_actor_loop)] pykka
okt 24 00:05:39 Desktop-Ubuntu mopidy[11084]:   Unregistered YTMusicScrobbleFE (urn:uuid:28be5adc-df08-4713-ade1-7c44f1cb2780)
okt 24 00:05:39 Desktop-Ubuntu mopidy[11084]: DEBUG    2022-10-24 00:05:39,044 [11084:YTMusicScrobbleFE-11 (_actor_loop)] pykka
okt 24 00:05:39 Desktop-Ubuntu mopidy[11084]:   Stopping 1 instance(s) of YTMusicScrobbleFE
okt 24 00:05:39 Desktop-Ubuntu mopidy[11084]: DEBUG    2022-10-24 00:05:39,043 [11084:MainThread] mopidy.internal.process
okt 24 00:05:39 Desktop-Ubuntu mopidy[11084]:   Stopped YouTubeCoreListener (urn:uuid:dad9cac2-5293-4706-b534-87a58b0dfb86)
okt 24 00:05:39 Desktop-Ubuntu mopidy[11084]: DEBUG    2022-10-24 00:05:39,043 [11084:YouTubeCoreListener-10 (_actor_loop)] pykka
okt 24 00:05:39 Desktop-Ubuntu mopidy[11084]:   Unregistered YouTubeCoreListener (urn:uuid:dad9cac2-5293-4706-b534-87a58b0dfb86)
okt 24 00:05:39 Desktop-Ubuntu mopidy[11084]: DEBUG    2022-10-24 00:05:39,043 [11084:YouTubeCoreListener-10 (_actor_loop)] pykka
okt 24 00:05:39 Desktop-Ubuntu mopidy[11084]:   Stopping 1 instance(s) of YouTubeCoreListener
okt 24 00:05:39 Desktop-Ubuntu mopidy[11084]: DEBUG    2022-10-24 00:05:39,043 [11084:MainThread] mopidy.internal.process
okt 24 00:05:39 Desktop-Ubuntu mopidy[11084]:   Stopped YouTubeAutoplayer (urn:uuid:c7b05986-b629-4eb0-ada8-877758117b93)
okt 24 00:05:39 Desktop-Ubuntu mopidy[11084]: DEBUG    2022-10-24 00:05:39,043 [11084:YouTubeAutoplayer-9 (_actor_loop)] pykka
okt 24 00:05:39 Desktop-Ubuntu mopidy[11084]:   Unregistered YouTubeAutoplayer (urn:uuid:c7b05986-b629-4eb0-ada8-877758117b93)
okt 24 00:05:39 Desktop-Ubuntu mopidy[11084]: DEBUG    2022-10-24 00:05:39,043 [11084:YouTubeAutoplayer-9 (_actor_loop)] pykka
okt 24 00:05:39 Desktop-Ubuntu mopidy[11084]:   Stopping 1 instance(s) of YouTubeAutoplayer
okt 24 00:05:39 Desktop-Ubuntu mopidy[11084]: DEBUG    2022-10-24 00:05:39,042 [11084:MainThread] mopidy.internal.process
okt 24 00:05:39 Desktop-Ubuntu mopidy[11084]:   Stopping Mopidy frontends
okt 24 00:05:39 Desktop-Ubuntu mopidy[11084]: INFO     2022-10-24 00:05:39,042 [11084:MainThread] mopidy.commands
okt 24 00:05:39 Desktop-Ubuntu mopidy[11084]:   GLib mainloop got SIGTERM. Exiting...
okt 24 00:05:39 Desktop-Ubuntu mopidy[11084]: INFO     2022-10-24 00:05:39,042 [11084:MainThread] mopidy.commands
okt 24 00:03:06 Desktop-Ubuntu mopidy[11084]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 12, "result": [{"__model__": "Ref", "uri": "file:///var/lib/mopidy", "name": "Files", "type": "directory"}, {"__model__": "Ref", "uri": "local:directory", "name": "Local media", "type": "directory"}, {"__model__": "Ref", "uri": "youtube:browse", "name": "YouTube", "type": "directory"}]}'
okt 24 00:03:06 Desktop-Ubuntu mopidy[11084]: DEBUG    2022-10-24 00:03:06,768 [11084:HttpServer] mopidy.http.handlers
okt 24 00:03:06 Desktop-Ubuntu mopidy[11084]:   Received WebSocket message from 127.0.0.1: '{"method":"core.library.browse","params":{"uri":null},"jsonrpc":"2.0","id":12}'
okt 24 00:03:06 Desktop-Ubuntu mopidy[11084]: DEBUG    2022-10-24 00:03:06,760 [11084:HttpServer] mopidy.http.handlers
okt 24 00:03:05 Desktop-Ubuntu mopidy[11084]:   {'id': 166656258563141, 'jsonrpc': '2.0', 'method': 'get_version', 'result': {'version': {'current': '3.64.1', 'latest': '3.64.1', 'is_root': False, 'upgrade_available': False}}, 'recipient': 'TCJ77KDCWQWX'}
okt 24 00:03:05 Desktop-Ubuntu mopidy[11084]: DEBUG    2022-10-24 00:03:05,856 [11084:HttpServer] mopidy_iris.core
okt 24 00:03:05 Desktop-Ubuntu mopidy[11084]:   Iris websocket message received: {"jsonrpc":"2.0","id":166656258563141,"method":"get_version"}
okt 24 00:03:05 Desktop-Ubuntu mopidy[11084]: DEBUG    2022-10-24 00:03:05,631 [11084:HttpServer] mopidy_iris.handlers
okt 24 00:03:05 Desktop-Ubuntu mopidy[11084]:   304 GET /iris/assets/favicon_paused.png (127.0.0.1) 0.84ms
okt 24 00:03:05 Desktop-Ubuntu mopidy[11084]: INFO     2022-10-24 00:03:05,339 [11084:HttpServer] tornado.access
okt 24 00:03:05 Desktop-Ubuntu mopidy[11084]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 11, "result": null}'
okt 24 00:03:05 Desktop-Ubuntu mopidy[11084]: DEBUG    2022-10-24 00:03:05,219 [11084:HttpServer] mopidy.http.handlers
okt 24 00:03:05 Desktop-Ubuntu mopidy[11084]:   Received WebSocket message from 127.0.0.1: '{"method":"core.playback.get_stream_title","params":{},"jsonrpc":"2.0","id":11}'
okt 24 00:03:05 Desktop-Ubuntu mopidy[11084]: DEBUG    2022-10-24 00:03:05,219 [11084:HttpServer] mopidy.http.handlers
okt 24 00:03:05 Desktop-Ubuntu mopidy[11084]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 10, "result": ["file", "http", "https", "local", "m3u", "rtsp", "youtube", "yt"]}'
okt 24 00:03:05 Desktop-Ubuntu mopidy[11084]: DEBUG    2022-10-24 00:03:05,219 [11084:HttpServer] mopidy.http.handlers
okt 24 00:03:05 Desktop-Ubuntu mopidy[11084]:   Received WebSocket message from 127.0.0.1: '{"method":"core.get_uri_schemes","params":{},"jsonrpc":"2.0","id":10}'
okt 24 00:03:05 Desktop-Ubuntu mopidy[11084]: DEBUG    2022-10-24 00:03:05,218 [11084:HttpServer] mopidy.http.handlers
okt 24 00:03:05 Desktop-Ubuntu mopidy[11084]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 9, "result": 0}'
okt 24 00:03:05 Desktop-Ubuntu mopidy[11084]: DEBUG    2022-10-24 00:03:05,216 [11084:HttpServer] mopidy.http.handlers
okt 24 00:03:05 Desktop-Ubuntu mopidy[11084]:   Received WebSocket message from 127.0.0.1: '{"method":"core.playback.get_time_position","params":{},"jsonrpc":"2.0","id":9}'
okt 24 00:03:05 Desktop-Ubuntu mopidy[11084]: DEBUG    2022-10-24 00:03:05,216 [11084:HttpServer] mopidy.http.handlers
okt 24 00:03:05 Desktop-Ubuntu mopidy[11084]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 8, "result": []}'
okt 24 00:03:05 Desktop-Ubuntu mopidy[11084]: DEBUG    2022-10-24 00:03:05,216 [11084:HttpServer] mopidy.http.handlers
okt 24 00:03:05 Desktop-Ubuntu mopidy[11084]:   Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_tl_tracks","params":{},"jsonrpc":"2.0","id":8}'
okt 24 00:03:05 Desktop-Ubuntu mopidy[11084]: DEBUG    2022-10-24 00:03:05,215 [11084:HttpServer] mopidy.http.handlers
okt 24 00:03:05 Desktop-Ubuntu mopidy[11084]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 7, "result": false}'
okt 24 00:03:05 Desktop-Ubuntu mopidy[11084]: DEBUG    2022-10-24 00:03:05,215 [11084:HttpServer] mopidy.http.handlers
okt 24 00:03:05 Desktop-Ubuntu mopidy[11084]:   Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_repeat","params":{},"jsonrpc":"2.0","id":7}'
okt 24 00:03:05 Desktop-Ubuntu mopidy[11084]: DEBUG    2022-10-24 00:03:05,215 [11084:HttpServer] mopidy.http.handlers
okt 24 00:03:05 Desktop-Ubuntu mopidy[11084]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 6, "result": false}'
okt 24 00:03:05 Desktop-Ubuntu mopidy[11084]: DEBUG    2022-10-24 00:03:05,215 [11084:HttpServer] mopidy.http.handlers
okt 24 00:03:05 Desktop-Ubuntu mopidy[11084]:   Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_random","params":{},"jsonrpc":"2.0","id":6}'
okt 24 00:03:05 Desktop-Ubuntu mopidy[11084]: DEBUG    2022-10-24 00:03:05,214 [11084:HttpServer] mopidy.http.handlers
okt 24 00:03:05 Desktop-Ubuntu mopidy[11084]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 5, "result": false}'
okt 24 00:03:05 Desktop-Ubuntu mopidy[11084]: DEBUG    2022-10-24 00:03:05,214 [11084:HttpServer] mopidy.http.handlers
okt 24 00:03:05 Desktop-Ubuntu mopidy[11084]:   Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_consume","params":{},"jsonrpc":"2.0","id":5}'
okt 24 00:03:05 Desktop-Ubuntu mopidy[11084]: DEBUG    2022-10-24 00:03:05,213 [11084:HttpServer] mopidy.http.handlers
okt 24 00:03:05 Desktop-Ubuntu mopidy[11084]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 4, "result": false}'
okt 24 00:03:05 Desktop-Ubuntu mopidy[11084]: DEBUG    2022-10-24 00:03:05,213 [11084:HttpServer] mopidy.http.handlers
okt 24 00:03:05 Desktop-Ubuntu mopidy[11084]:   Received WebSocket message from 127.0.0.1: '{"method":"core.mixer.get_mute","params":{},"jsonrpc":"2.0","id":4}'
okt 24 00:03:05 Desktop-Ubuntu mopidy[11084]: DEBUG    2022-10-24 00:03:05,213 [11084:HttpServer] mopidy.http.handlers
okt 24 00:03:05 Desktop-Ubuntu mopidy[11084]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 3, "result": 100}'
okt 24 00:03:05 Desktop-Ubuntu mopidy[11084]: DEBUG    2022-10-24 00:03:05,212 [11084:HttpServer] mopidy.http.handlers
okt 24 00:03:05 Desktop-Ubuntu mopidy[11084]:   Received WebSocket message from 127.0.0.1: '{"method":"core.mixer.get_volume","params":{},"jsonrpc":"2.0","id":3}'
okt 24 00:03:05 Desktop-Ubuntu mopidy[11084]: DEBUG    2022-10-24 00:03:05,212 [11084:HttpServer] mopidy.http.handlers
okt 24 00:03:05 Desktop-Ubuntu mopidy[11084]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 2, "result": "stopped"}'
okt 24 00:03:05 Desktop-Ubuntu mopidy[11084]: DEBUG    2022-10-24 00:03:05,211 [11084:HttpServer] mopidy.http.handlers
okt 24 00:03:05 Desktop-Ubuntu mopidy[11084]:   Received WebSocket message from 127.0.0.1: '{"method":"core.playback.get_state","params":{},"jsonrpc":"2.0","id":2}'
okt 24 00:03:05 Desktop-Ubuntu mopidy[11084]: DEBUG    2022-10-24 00:03:05,211 [11084:HttpServer] mopidy.http.handlers
okt 24 00:03:05 Desktop-Ubuntu mopidy[11084]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 1, "result": null}'
okt 24 00:03:05 Desktop-Ubuntu mopidy[11084]: DEBUG    2022-10-24 00:03:05,211 [11084:HttpServer] mopidy.http.handlers
okt 24 00:03:05 Desktop-Ubuntu mopidy[11084]:   Received WebSocket message from 127.0.0.1: '{"method":"core.playback.get_current_tl_track","params":{},"jsonrpc":"2.0","id":1}'
okt 24 00:03:05 Desktop-Ubuntu mopidy[11084]: DEBUG    2022-10-24 00:03:05,210 [11084:HttpServer] mopidy.http.handlers
okt 24 00:03:05 Desktop-Ubuntu mopidy[11084]:   {'id': 16665625851308, 'jsonrpc': '2.0', 'method': 'get_queue_metadata', 'result': {'queue_metadata': {}}, 'recipient': 'TCJ77KDCWQWX'}
okt 24 00:03:05 Desktop-Ubuntu mopidy[11084]: DEBUG    2022-10-24 00:03:05,130 [11084:HttpServer] mopidy_iris.core
okt 24 00:03:05 Desktop-Ubuntu mopidy[11084]:   Iris websocket message received: {"jsonrpc":"2.0","id":16665625851308,"method":"get_queue_metadata"}
okt 24 00:03:05 Desktop-Ubuntu mopidy[11084]: DEBUG    2022-10-24 00:03:05,130 [11084:HttpServer] mopidy_iris.handlers
okt 24 00:03:05 Desktop-Ubuntu mopidy[11084]:   {'id': 166656258512963, 'jsonrpc': '2.0', 'method': 'get_pinned', 'result': {'pinned': []}, 'recipient': 'TCJ77KDCWQWX'}
okt 24 00:03:05 Desktop-Ubuntu mopidy[11084]: DEBUG    2022-10-24 00:03:05,129 [11084:HttpServer] mopidy_iris.core
okt 24 00:03:05 Desktop-Ubuntu mopidy[11084]:   Iris websocket message received: {"jsonrpc":"2.0","id":166656258512963,"method":"get_pinned"}
okt 24 00:03:05 Desktop-Ubuntu mopidy[11084]: DEBUG    2022-10-24 00:03:05,129 [11084:HttpServer] mopidy_iris.handlers
okt 24 00:03:05 Desktop-Ubuntu mopidy[11084]:   {'id': 166656258512892, 'jsonrpc': '2.0', 'method': 'get_commands', 'result': {'commands': {}}, 'recipient': 'TCJ77KDCWQWX'}
okt 24 00:03:05 Desktop-Ubuntu mopidy[11084]: DEBUG    2022-10-24 00:03:05,128 [11084:HttpServer] mopidy_iris.core
okt 24 00:03:05 Desktop-Ubuntu mopidy[11084]:   Iris websocket message received: {"jsonrpc":"2.0","id":166656258512892,"method":"get_commands"}
okt 24 00:03:05 Desktop-Ubuntu mopidy[11084]: DEBUG    2022-10-24 00:03:05,128 [11084:HttpServer] mopidy_iris.handlers
okt 24 00:03:05 Desktop-Ubuntu mopidy[11084]:   {'id': 16665625851271, 'jsonrpc': '2.0', 'method': 'get_radio', 'result': {'radio': {'enabled': 0, 'seed_artists': [], 'seed_genres': [], 'seed_tracks': [], 'results': []}}, 'recipient': 'TCJ77KDCWQWX'}
okt 24 00:03:05 Desktop-Ubuntu mopidy[11084]: DEBUG    2022-10-24 00:03:05,128 [11084:HttpServer] mopidy_iris.core
okt 24 00:03:05 Desktop-Ubuntu mopidy[11084]:   Iris websocket message received: {"jsonrpc":"2.0","id":16665625851271,"method":"get_radio"}
okt 24 00:03:05 Desktop-Ubuntu mopidy[11084]: DEBUG    2022-10-24 00:03:05,128 [11084:HttpServer] mopidy_iris.handlers
okt 24 00:03:05 Desktop-Ubuntu mopidy[11084]:   {'id': 166656258512669, 'jsonrpc': '2.0', 'method': 'get_shared_config', 'result': {'shared_config': {}}, 'recipient': 'TCJ77KDCWQWX'}
okt 24 00:03:05 Desktop-Ubuntu mopidy[11084]: DEBUG    2022-10-24 00:03:05,128 [11084:HttpServer] mopidy_iris.core
okt 24 00:03:05 Desktop-Ubuntu mopidy[11084]:   Iris websocket message received: {"jsonrpc":"2.0","id":166656258512669,"method":"get_shared_config"}
okt 24 00:03:05 Desktop-Ubuntu mopidy[11084]: DEBUG    2022-10-24 00:03:05,127 [11084:HttpServer] mopidy_iris.handlers
okt 24 00:03:05 Desktop-Ubuntu mopidy[11084]:   {'id': 166656258512519, 'jsonrpc': '2.0', 'method': 'get_config', 'result': {'config': {'is_root': False, 'spotify_username': False, 'country': 'NZ', 'locale': 'en_NZ', 'snapcast_enabled': True, 'snapcast_host': 'localhost', 'snapcast_port': '1780', 'snapcast_ssl': False, 'snapcast_stream': 'Default', 'spotify_authorization_url': 'https://jamesbarnsley.co.nz/iris/auth_spotify.php', 'lastfm_authorization_url': 'https://jamesbarnsley.co.nz/iris/auth_lastfm.php', 'genius_authorization_url': 'https://jamesbarnsley.co.nz/iris/auth_genius.php', 'shared_config': {}}}, 'recipient': 'TCJ77KDCWQWX'}
okt 24 00:03:05 Desktop-Ubuntu mopidy[11084]: DEBUG    2022-10-24 00:03:05,127 [11084:HttpServer] mopidy_iris.core
okt 24 00:03:05 Desktop-Ubuntu mopidy[11084]:   Iris websocket message received: {"jsonrpc":"2.0","id":166656258512519,"method":"get_config"}
okt 24 00:03:05 Desktop-Ubuntu mopidy[11084]: DEBUG    2022-10-24 00:03:05,127 [11084:HttpServer] mopidy_iris.handlers
okt 24 00:03:05 Desktop-Ubuntu mopidy[11084]:   {'id': 166656258512376, 'jsonrpc': '2.0', 'method': 'update_connection', 'result': {'connection': {'connection_id': 'TCJ77KDCWQWX', 'ip': '127.0.0.1', 'created': '2022-10-24 00:03:05', 'username': 166656148284185, 'client_id': 166656148284193}}, 'recipient': 'TCJ77KDCWQWX'}
okt 24 00:03:05 Desktop-Ubuntu mopidy[11084]: DEBUG    2022-10-24 00:03:05,127 [11084:HttpServer] mopidy_iris.core
okt 24 00:03:05 Desktop-Ubuntu mopidy[11084]:   {'method': 'connection_changed', 'params': {'connection': {'connection_id': 'TCJ77KDCWQWX', 'ip': '127.0.0.1', 'created': '2022-10-24 00:03:05', 'username': 166656148284185, 'client_id': 166656148284193}}}
okt 24 00:03:05 Desktop-Ubuntu mopidy[11084]: DEBUG    2022-10-24 00:03:05,127 [11084:HttpServer] mopidy_iris.core
okt 24 00:03:05 Desktop-Ubuntu mopidy[11084]:   Iris websocket message received: {"jsonrpc":"2.0","id":166656258512376,"method":"update_connection","params":{"username":166656148284185,"client_id":166656148284193}}
okt 24 00:03:05 Desktop-Ubuntu mopidy[11084]: DEBUG    2022-10-24 00:03:05,126 [11084:HttpServer] mopidy_iris.handlers
okt 24 00:03:05 Desktop-Ubuntu mopidy[11084]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 0, "result": {"core.get_uri_schemes": {"description": "Get list of URI schemes we can handle", "params": []}, "core.get_version": {"description": "Get version of the Mopidy core API", "params": []}, "core.history.get_history": {"description": "Get the track history.\\n\\nThe timestamps are milliseconds since epoch.\\n\\n:returns: the track history\\n:rtype: list of (timestamp, :class:`mopidy.models.Ref`) tuples", "params": []}, "core.history.get_length": {"description": "Get the number of tracks in the history.\\n\\n:returns: the history length\\n:rtype: int", "params": []}, "core.library.browse": {"description": "Browse directories and tracks at the given ``uri``.\\n\\n``uri`` is a string which represents some directory belonging to a\\nbackend. To get the intial root directories for backends pass\\n:class:`None` as the URI.\\n\\nReturns a list of :class:`mopidy.models.Ref` objects for the\\ndirectories and tracks at the given ``uri``.\\n\\nThe :class:`~mopidy.models.Ref` objects representing tracks keep the\\ntrack\'s original URI. A matching pair of objects can look like this::\\n\\n    Track(uri=\'dummy:/foo.mp3\', name=\'foo\', artists=..., album=...)\\n    Ref.track(uri=\'dummy:/foo.mp3\', name=\'foo\')\\n\\nThe :class:`~mopidy.models.Ref` objects representing directories have\\nbackend specific URIs. These are opaque values, so no one but the\\nbackend that created them should try and derive any meaning from them.\\nThe only valid exception to this is checking the scheme, as it is used\\nto route browse requests to the correct backend.\\n\\nFor example, the dummy library\'s ``/bar`` directory could be returned\\nlike this::\\n\\n    Ref.directory(uri=\'dummy:directory:/bar\', name=\'bar\')\\n\\n:param string uri: URI to browse\\n:rtype: list of :class:`mopidy.models.Ref`\\n\\n.. versionadded:: 0.18", "params": [{"name": "uri"}]}, "core.library.get_distinct": {"description": "List distinct values for a given field from the library.\\n\\nThis has mainly been added to support the list commands the MPD\\nprotocol supports in a more sane fashion. Other frontends are not\\nrecommended to use this method.\\n\\n:param string field: Any one of ``uri``, ``track_name``, ``album``,\\n    ``artist``, ``albumartist``, ``composer``, ``performer``,\\n    ``track_no``, ``genre``, ``date``, ``comment``, ``disc_no``,\\n    ``musicbrainz_albumid``, ``musicbrainz_artistid``, or\\n    ``musicbrainz_trackid``.\\n:param dict query: Query to use for limiting results, see\\n    :meth:`search` for details about the query format.\\n:rtype: set of values corresponding to the requested field type.\\n\\n.. versionadded:: 1.0", "params": [{"name": "field"}, {"name": "query", "default": null}]}, "core.library.get_images": {"description": "Lookup the images for the given URIs\\n\\nBackends can use this to return image URIs for any URI they know about\\nbe it tracks, albums, playlists. The lookup result is a dictionary\\nmapping the provided URIs to lists of images.\\n\\nUnknown URIs or URIs the corresponding backend couldn\'t find anything\\nfor will simply return an empty list for that URI.\\n\\n:param uris: list of URIs to find images for\\n:type uris: list of string\\n:rtype: {uri: tuple of :class:`mopidy.models.Image`}\\n\\n.. versionadded:: 1.0", "params": [{"name": "uris"}]}, "core.library.lookup": {"description": "Lookup the given URIs.\\n\\nIf the URI expands to multiple tracks, the returned list will contain\\nthem all.\\n\\n:param uris: track URIs\\n:type uris: list of string\\n:rtype: {uri: list of :class:`mopidy.models.Track`}", "params": [{"name": "uris"}]}, "core.library.refresh": {"description": "Refresh library. Limit to URI and below if an URI is given.\\n\\n:param uri: directory or track URI\\n:type uri: string", "params": [{"name": "uri", "default": null}]}, "core.library.search": {"description": "Search the library for tracks where ``field`` contains ``values``.\\n\\n``field`` can be one of ``uri``, ``track_name``, ``album``, ``artist``,\\n``albumartist``, ``composer``, ``performer``, ``track_no``, ``genre``,\\n``date``, ``comment``, ``disc_no``, ``musicbrainz_albumid``,\\n``musicbrainz_artistid``, ``musicbrainz_trackid`` or ``any``.\\n\\nIf ``uris`` is given, the search is limited to results from within the\\nURI roots. For example passing ``uris=[\'file:\']`` will limit the search\\nto the local backend.\\n\\nExamples::\\n\\n    # Returns results matching \'a\' in any backend\\n    search({\'any\': [\'a\']})\\n\\n    # Returns results matching artist \'xyz\' in any backend\\n    search({\'artist\': [\'xyz\']})\\n\\n    # Returns results matching \'a\' and \'b\' and artist \'xyz\' in any\\n    # backend\\n    search({\'any\': [\'a\', \'b\'], \'artist\': [\'xyz\']})\\n\\n    # Returns results matching \'a\' if within the given URI roots\\n    # \\"file:///media/music\\" and \\"spotify:\\"\\n    search({\'any\': [\'a\']}, uris=[\'file:///media/music\', \'spotify:\'])\\n\\n    # Returns results matching artist \'xyz\' and \'abc\' in any backend\\n    search({\'artist\': [\'xyz\', \'abc\']})\\n\\n:param query: one or more queries to search for\\n:type query: dict\\n:param uris: zero or more URI roots to limit the search to\\n:type uris: list of string or :class:`None`\\n:param exact: if the search should use exact matching\\n:type exact: :class:`bool`\\n:rtype: list of :class:`mopidy.models.SearchResult`\\n\\n.. versionadded:: 1.0\\n    The ``exact`` keyword argument.", "params": [{"name": "query"}, {"name": "uris", "default": null}, {"name": "exact", "default": false}]}, "core.mixer.get_mute": {"description": "Get mute state.\\n\\n:class:`True` if muted, :class:`False` unmuted, :class:`None` if\\nunknown.", "params": []}, "core.mixer.get_volume": {"description": "Get the volume.\\n\\nInteger in range [0..100] or :class:`None` if unknown.\\n\\nThe volume scale is linear.", "params": []}, "core.mixer.set_mute": {"description": "Set mute state.\\n\\n:class:`True` to mute, :class:`False` to unmute.\\n\\nReturns :class:`True` if call is successful, otherwise :class:`False`.", "params": [{"name": "mute"}]}, "core.mixer.set_volume": {"description": "Set the volume.\\n\\nThe volume is defined as an integer in range [0..100].\\n\\nThe volume scale is linear.\\n\\nReturns :class:`True` if call is successful, otherwise :class:`False`.", "params": [{"name": "volume"}]}, "core.playback.get_current_tl_track": {"description": "Get the currently playing or selected track.\\n\\nReturns a :class:`mopidy.models.TlTrack` or :class:`None`.", "params": []}, "core.playback.get_current_tlid": {"description": "Get the currently playing or selected TLID.\\n\\nExtracted from :meth:`get_current_tl_track` for convenience.\\n\\nReturns a :class:`int` or :class:`None`.\\n\\n.. versionadded:: 1.1", "params": []}, "core.playback.get_current_track": {"description": "Get the currently playing or selected track.\\n\\nExtracted from :meth:`get_current_tl_track` for convenience.\\n\\nReturns a :class:`mopidy.models.Track` or :class:`None`.", "params": []}, "core.playback.get_state": {"description": "Get The playback state.", "params": []}, "core.playback.get_stream_title": {"description": "Get the current stream title or :class:`None`.", "params": []}, "core.playback.get_time_position": {"description": "Get time position in milliseconds.", "params": []}, "core.playback.next": {"description": "Change to the next track.\\n\\nThe current playback state will be kept. If it was playing, playing\\nwill continue. If it was paused, it will still be paused, etc.", "params": []}, "core.playback.pause": {"description": "Pause playback.", "params": []}, "core.playback.play": {"description": "Play the given track, or if the given tl_track and tlid is\\n:class:`None`, play the currently active track.\\n\\nNote that the track **must** already be in the tracklist.\\n\\n.. deprecated:: 3.0\\n    The ``tl_track`` argument. Use ``tlid`` instead.\\n\\n:param tl_track: track to play\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:param tlid: TLID of the track to play\\n:type tlid: :class:`int` or :class:`None`", "params": [{"name": "tl_track", "default": null}, {"name": "tlid", "default": null}]}, "core.playback.previous": {"description": "Change to the previous track.\\n\\nThe current playback state will be kept. If it was playing, playing\\nwill continue. If it was paused, it will still be paused, etc.", "params": []}, "core.playback.resume": {"description": "If paused, resume playing the current track.", "params": []}, "core.playback.seek": {"description": "Seeks to time position given in milliseconds.\\n\\n:param time_position: time position in milliseconds\\n:type time_position: int\\n:rtype: :class:`True` if successful, else :class:`False`", "params": [{"name": "time_position"}]}, "core.playback.set_state": {"description": "Set the playback state.\\n\\nMust be :attr:`PLAYING`, :attr:`PAUSED`, or :attr:`STOPPED`.\\n\\nPossible states and transitions:\\n\\n.. digraph:: state_transitions\\n\\n    \\"STOPPED\\" -> \\"PLAYING\\" [ label=\\"play\\" ]\\n    \\"STOPPED\\" -> \\"PAUSED\\" [ label=\\"pause\\" ]\\n    \\"PLAYING\\" -> \\"STOPPED\\" [ label=\\"stop\\" ]\\n    \\"PLAYING\\" -> \\"PAUSED\\" [ label=\\"pause\\" ]\\n    \\"PLAYING\\" -> \\"PLAYING\\" [ label=\\"play\\" ]\\n    \\"PAUSED\\" -> \\"PLAYING\\" [ label=\\"resume\\" ]\\n    \\"PAUSED\\" -> \\"STOPPED\\" [ label=\\"stop\\" ]", "params": [{"name": "new_state"}]}, "core.playback.stop": {"description": "Stop playing.", "params": []}, "core.playlists.as_list": {"description": "Get a list of the currently available playlists.\\n\\nReturns a list of :class:`~mopidy.models.Ref` objects referring to the\\nplaylists. In other words, no information about the playlists\' content\\nis given.\\n\\n:rtype: list of :class:`mopidy.models.Ref`\\n\\n.. versionadded:: 1.0", "params": []}, "core.playlists.create": {"description": "Create a new playlist.\\n\\nIf ``uri_scheme`` matches an URI scheme handled by a current backend,\\nthat backend is asked to create the playlist. If ``uri_scheme`` is\\n:class:`None` or doesn\'t match a current backend, the first backend is\\nasked to create the playlist.\\n\\nAll new playlists must be created by calling this method, and **not**\\nby creating new instances of :class:`mopidy.models.Playlist`.\\n\\n:param name: name of the new playlist\\n:type name: string\\n:param uri_scheme: use the backend matching the URI scheme\\n:type uri_scheme: string\\n:rtype: :class:`mopidy.models.Playlist` or :class:`None`", "params": [{"name": "name"}, {"name": "uri_scheme", "default": null}]}, "core.playlists.delete": {"description": "Delete playlist identified by the URI.\\n\\nIf the URI doesn\'t match the URI schemes handled by the current\\nbackends, nothing happens.\\n\\nReturns :class:`True` if deleted, :class:`False` otherwise.\\n\\n:param uri: URI of the playlist to delete\\n:type uri: string\\n:rtype: :class:`bool`\\n\\n.. versionchanged:: 2.2\\n    Return type defined.", "params": [{"name": "uri"}]}, "core.playlists.get_items": {"description": "Get the items in a playlist specified by ``uri``.\\n\\nReturns a list of :class:`~mopidy.models.Ref` objects referring to the\\nplaylist\'s items.\\n\\nIf a playlist with the given ``uri`` doesn\'t exist, it returns\\n:class:`None`.\\n\\n:rtype: list of :class:`mopidy.models.Ref`, or :class:`None`\\n\\n.. versionadded:: 1.0", "params": [{"name": "uri"}]}, "core.playlists.get_uri_schemes": {"description": "Get the list of URI schemes that support playlists.\\n\\n:rtype: list of string\\n\\n.. versionadded:: 2.0", "params": []}, "core.playlists.lookup": {"description": "Lookup playlist with given URI in both the set of playlists and in any\\nother playlist sources. Returns :class:`None` if not found.\\n\\n:param uri: playlist URI\\n:type uri: string\\n:rtype: :class:`mopidy.models.Playlist` or :class:`None`", "params": [{"name": "uri"}]}, "core.playlists.refresh": {"description": "Refresh the playlists in :attr:`playlists`.\\n\\nIf ``uri_scheme`` is :class:`None`, all backends are asked to refresh.\\nIf ``uri_scheme`` is an URI scheme handled by a backend, only that\\nbackend is asked to refresh. If ``uri_scheme`` doesn\'t match any\\ncurrent backend, nothing happens.\\n\\n:param uri_scheme: limit to the backend matching the URI scheme\\n:type uri_scheme: string", "params": [{"name": "uri_scheme", "default": null}]}, "core.playlists.save": {"description": "Save the playlist.\\n\\nFor a playlist to be saveable, it must have the ``uri`` attribute set.\\nYou must not set the ``uri`` atribute yourself, but use playlist\\nobjects returned by :meth:`create` or retrieved from :attr:`playlists`,\\nwhich will always give you saveable playlists.\\n\\nThe method returns the saved playlist. The return playlist may differ\\nfrom the saved playlist. E.g. if the playlist name was changed, the\\nreturned playlist may have a different URI. The caller of this method\\nmust throw away the playlist sent to this method, and use the\\nreturned playlist instead.\\n\\nIf the playlist\'s URI isn\'t set or doesn\'t match the URI scheme of a\\ncurrent backend, nothing is done and :class:`None` is returned.\\n\\n:param playlist: the playlist\\n:type playlist: :class:`mopidy.models.Playlist`\\n:rtype: :class:`mopidy.models.Playlist` or :class:`None`", "params": [{"name": "playlist"}]}, "core.tracklist.add": {"description": "Add tracks to the tracklist.\\n\\nIf ``uris`` is given instead of ``tracks``, the URIs are\\nlooked up in the library and the resulting tracks are added to the\\ntracklist.\\n\\nIf ``at_position`` is given, the tracks are inserted at the given\\nposition in the tracklist. If ``at_position`` is not given, the tracks\\nare appended to the end of the tracklist.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.\\n\\n:param tracks: tracks to add\\n:type tracks: list of :class:`mopidy.models.Track` or :class:`None`\\n:param at_position: position in tracklist to add tracks\\n:type at_position: int or :class:`None`\\n:param uris: list of URIs for tracks to add\\n:type uris: list of string or :class:`None`\\n:rtype: list of :class:`mopidy.models.TlTrack`\\n\\n.. versionadded:: 1.0\\n    The ``uris`` argument.\\n\\n.. deprecated:: 1.0\\n    The ``tracks`` argument. Use ``uris``.", "params": [{"name": "tracks", "default": null}, {"name": "at_position", "default": null}, {"name": "uris", "default": null}]}, "core.tracklist.clear": {"description": "Clear the tracklist.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.", "params": []}, "core.tracklist.eot_track": {"description": "The track that will be played after the given track.\\n\\nNot necessarily the same track as :meth:`next_track`.\\n\\n.. deprecated:: 3.0\\n    Use :meth:`get_eot_tlid` instead.\\n\\n:param tl_track: the reference track\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:rtype: :class:`mopidy.models.TlTrack` or :class:`None`", "params": [{"name": "tl_track"}]}, "core.tracklist.filter": {"description": "Filter the tracklist by the given criteria.\\n\\nEach rule in the criteria consists of a model field and a list of\\nvalues to compare it against. If the model field matches any of the\\nvalues, it may be returned.\\n\\nOnly tracks that match all the given criteria are returned.\\n\\nExamples::\\n\\n    # Returns tracks with TLIDs 1, 2, 3, or 4 (tracklist ID)\\n    filter({\'tlid\': [1, 2, 3, 4]})\\n\\n    # Returns track with URIs \'xyz\' or \'abc\'\\n    filter({\'uri\': [\'xyz\', \'abc\']})\\n\\n    # Returns track with a matching TLIDs (1, 3 or 6) and a\\n    # matching URI (\'xyz\' or \'abc\')\\n    filter({\'tlid\': [1, 3, 6], \'uri\': [\'xyz\', \'abc\']})\\n\\n:param criteria: one or more rules to match by\\n:type criteria: dict, of (string, list) pairs\\n:rtype: list of :class:`mopidy.models.TlTrack`", "params": [{"name": "criteria"}]}, "core.tracklist.get_consume": {"description": "Get consume mode.\\n\\n:class:`True`\\n    Tracks are removed from the tracklist when they have been played.\\n:class:`False`\\n    Tracks are not removed from the tracklist.", "params": []}, "core.tracklist.get_eot_tlid": {"description": "The TLID of the track that will be played after the current track.\\n\\nNot necessarily the same TLID as returned by :meth:`get_next_tlid`.\\n\\n:rtype: :class:`int` or :class:`None`\\n\\n.. versionadded:: 1.1", "params": []}, "core.tracklist.get_length": {"description": "Get length of the tracklist.", "params": []}, "core.tracklist.get_next_tlid": {"description": "The tlid of the track that will be played if calling\\n:meth:`mopidy.core.PlaybackController.next()`.\\n\\nFor normal playback this is the next track in the tracklist. If repeat\\nis enabled the next track can loop around the tracklist. When random is\\nenabled this should be a random track, all tracks should be played once\\nbefore the tracklist repeats.\\n\\n:rtype: :class:`int` or :class:`None`\\n\\n.. versionadded:: 1.1", "params": []}, "core.tracklist.get_previous_tlid": {"description": "Returns the TLID of the track that will be played if calling\\n:meth:`mopidy.core.PlaybackController.previous()`.\\n\\nFor normal playback this is the previous track in the tracklist. If\\nrandom and/or consume is enabled it should return the current track\\ninstead.\\n\\n:rtype: :class:`int` or :class:`None`\\n\\n.. versionadded:: 1.1", "params": []}, "core.tracklist.get_random": {"description": "Get random mode.\\n\\n:class:`True`\\n    Tracks are selected at random from the tracklist.\\n:class:`False`\\n    Tracks are played in the order of the tracklist.", "params": []}, "core.tracklist.get_repeat": {"description": "Get repeat mode.\\n\\n:class:`True`\\n    The tracklist is played repeatedly.\\n:class:`False`\\n    The tracklist is played once.", "params": []}, "core.tracklist.get_single": {"description": "Get single mode.\\n\\n:class:`True`\\n    Playback is stopped after current song, unless in ``repeat`` mode.\\n:class:`False`\\n    Playback continues after current song.", "params": []}, "core.tracklist.get_tl_tracks": {"description": "Get tracklist as list of :class:`mopidy.models.TlTrack`.", "params": []}, "core.tracklist.get_tracks": {"description": "Get tracklist as list of :class:`mopidy.models.Track`.", "params": []}, "core.tracklist.get_version": {"description": "Get the tracklist version.\\n\\nInteger which is increased every time the tracklist is changed. Is not\\nreset before Mopidy is restarted.", "params": []}, "core.tracklist.index": {"description": "The position of the given track in the tracklist.\\n\\nIf neither *tl_track* or *tlid* is given we return the index of\\nthe currently playing track.\\n\\n:param tl_track: the track to find the index of\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:param tlid: TLID of the track to find the index of\\n:type tlid: :class:`int` or :class:`None`\\n:rtype: :class:`int` or :class:`None`\\n\\n.. versionadded:: 1.1\\n    The *tlid* parameter", "params": [{"name": "tl_track", "default": null}, {"name": "tlid", "default": null}]}, "core.tracklist.move": {"description": "Move the tracks in the slice ``[start:end]`` to ``to_position``.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.\\n\\n:param start: position of first track to move\\n:type start: int\\n:param end: position after last track to move\\n:type end: int\\n:param to_position: new position for the tracks\\n:type to_position: int", "params": [{"name": "start"}, {"name": "end"}, {"name": "to_position"}]}, "core.tracklist.next_track": {"description": "The track that will be played if calling\\n:meth:`mopidy.core.PlaybackController.next()`.\\n\\nFor normal playback this is the next track in the tracklist. If repeat\\nis enabled the next track can loop around the tracklist. When random is\\nenabled this should be a random track, all tracks should be played once\\nbefore the tracklist repeats.\\n\\n.. deprecated:: 3.0\\n    Use :meth:`get_next_tlid` instead.\\n\\n:param tl_track: the reference track\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:rtype: :class:`mopidy.models.TlTrack` or :class:`None`", "params": [{"name": "tl_track"}]}, "core.tracklist.previous_track": {"description": "Returns the track that will be played if calling\\n:meth:`mopidy.core.PlaybackController.previous()`.\\n\\nFor normal playback this is the previous track in the tracklist. If\\nrandom and/or consume is enabled it should return the current track\\ninstead.\\n\\n.. deprecated:: 3.0\\n    Use :meth:`get_previous_tlid` instead.\\n\\n:param tl_track: the reference track\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:rtype: :class:`mopidy.models.TlTrack` or :class:`None`", "params": [{"name": "tl_track"}]}, "core.tracklist.remove": {"description": "Remove the matching tracks from the tracklist.\\n\\nUses :meth:`filter()` to lookup the tracks to remove.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.\\n\\n:param criteria: one or more rules to match by\\n:type criteria: dict, of (string, list) pairs\\n:rtype: list of :class:`mopidy.models.TlTrack` that were removed", "params": [{"name": "criteria"}]}, "core.tracklist.set_consume": {"description": "Set consume mode.\\n\\n:class:`True`\\n    Tracks are removed from the tracklist when they have been played.\\n:class:`False`\\n    Tracks are not removed from the tracklist.", "params": [{"name": "value"}]}, "core.tracklist.set_random": {"description": "Set random mode.\\n\\n:class:`True`\\n    Tracks are selected at random from the tracklist.\\n:class:`False`\\n    Tracks are played in the order of the tracklist.", "params": [{"name": "value"}]}, "core.tracklist.set_repeat": {"description": "Set repeat mode.\\n\\nTo repeat a single track, set both ``repeat`` and ``single``.\\n\\n:class:`True`\\n    The tracklist is played repeatedly.\\n:class:`False`\\n    The tracklist is played once.", "params": [{"name": "value"}]}, "core.tracklist.set_single": {"description": "Set single mode.\\n\\n:class:`True`\\n    Playback is stopped after current song, unless in ``repeat`` mode.\\n:class:`False`\\n    Playback continues after current song.", "params": [{"name": "value"}]}, "core.tracklist.shuffle": {"description": "Shuffles the entire tracklist. If ``start`` and ``end`` is given only\\nshuffles the slice ``[start:end]``.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.\\n\\n:param start: position of first track to shuffle\\n:type start: int or :class:`None`\\n:param end: position after last track to shuffle\\n:type end: int or :class:`None`", "params": [{"name": "start", "default": null}, {"name": "end", "default": null}]}, "core.tracklist.slice": {"description": "Returns a slice of the tracklist, limited by the given start and end\\npositions.\\n\\n:param start: position of first track to include in slice\\n:type start: int\\n:param end: position after last track to include in slice\\n:type end: int\\n:rtype: :class:`mopidy.models.TlTrack`", "params": [{"name": "start"}, {"name": "end"}]}}}'
okt 24 00:03:05 Desktop-Ubuntu mopidy[11084]: DEBUG    2022-10-24 00:03:05,126 [11084:HttpServer] mopidy.http.handlers
okt 24 00:03:05 Desktop-Ubuntu mopidy[11084]:   Received WebSocket message from 127.0.0.1: '{"method":"core.describe","jsonrpc":"2.0","id":0}'
okt 24 00:03:05 Desktop-Ubuntu mopidy[11084]: DEBUG    2022-10-24 00:03:05,122 [11084:HttpServer] mopidy.http.handlers
okt 24 00:03:05 Desktop-Ubuntu mopidy[11084]:   {'method': 'connection_added', 'params': {'connection': {'connection_id': 'TCJ77KDCWQWX', 'ip': '127.0.0.1', 'created': '2022-10-24 00:03:05'}}}
okt 24 00:03:05 Desktop-Ubuntu mopidy[11084]: DEBUG    2022-10-24 00:03:05,080 [11084:HttpServer] mopidy_iris.core
okt 24 00:03:05 Desktop-Ubuntu mopidy[11084]:   <mopidy_iris.handlers.WebsocketHandler object at 0x7f373043e200>
okt 24 00:03:05 Desktop-Ubuntu mopidy[11084]: DEBUG    2022-10-24 00:03:05,080 [11084:HttpServer] mopidy_iris.core
okt 24 00:03:05 Desktop-Ubuntu mopidy[11084]:   Connection added
okt 24 00:03:05 Desktop-Ubuntu mopidy[11084]: DEBUG    2022-10-24 00:03:05,079 [11084:HttpServer] mopidy_iris.core
okt 24 00:03:05 Desktop-Ubuntu mopidy[11084]:   101 GET /iris/ws/ (127.0.0.1) 0.45ms
okt 24 00:03:05 Desktop-Ubuntu mopidy[11084]: INFO     2022-10-24 00:03:05,079 [11084:HttpServer] tornado.access
okt 24 00:03:05 Desktop-Ubuntu mopidy[11084]:   New WebSocket connection from 127.0.0.1
okt 24 00:03:05 Desktop-Ubuntu mopidy[11084]: DEBUG    2022-10-24 00:03:05,068 [11084:HttpServer] mopidy.http.handlers
okt 24 00:03:05 Desktop-Ubuntu mopidy[11084]:   101 GET /mopidy/ws/ (127.0.0.1) 0.60ms
okt 24 00:03:05 Desktop-Ubuntu mopidy[11084]: INFO     2022-10-24 00:03:05,068 [11084:HttpServer] tornado.access
okt 24 00:03:04 Desktop-Ubuntu mopidy[11084]:   200 GET /iris/assets/favicon.png (127.0.0.1) 0.73ms
okt 24 00:03:04 Desktop-Ubuntu mopidy[11084]: INFO     2022-10-24 00:03:04,719 [11084:HttpServer] tornado.access
okt 24 00:03:04 Desktop-Ubuntu mopidy[11084]:   200 GET /iris/app.min.js?v=1666559547 (127.0.0.1) 12.08ms
okt 24 00:03:04 Desktop-Ubuntu mopidy[11084]: INFO     2022-10-24 00:03:04,095 [11084:HttpServer] tornado.access
okt 24 00:03:04 Desktop-Ubuntu mopidy[11084]:   200 GET /iris/app.min.css?v=1666559547 (127.0.0.1) 5.21ms
okt 24 00:03:04 Desktop-Ubuntu mopidy[11084]: INFO     2022-10-24 00:03:04,082 [11084:HttpServer] tornado.access
okt 24 00:03:03 Desktop-Ubuntu mopidy[11084]:   200 GET /iris/assets/app-icon.svg (127.0.0.1) 0.74ms
okt 24 00:03:03 Desktop-Ubuntu mopidy[11084]: INFO     2022-10-24 00:03:03,919 [11084:HttpServer] tornado.access
okt 24 00:03:03 Desktop-Ubuntu mopidy[11084]:   Closed WebSocket connection from 127.0.0.1
okt 24 00:03:03 Desktop-Ubuntu mopidy[11084]: DEBUG    2022-10-24 00:03:03,884 [11084:HttpServer] mopidy.http.handlers
okt 24 00:03:03 Desktop-Ubuntu mopidy[11084]:   200 GET /iris/library/browse (127.0.0.1) 5.75ms
okt 24 00:03:03 Desktop-Ubuntu mopidy[11084]: INFO     2022-10-24 00:03:03,861 [11084:HttpServer] tornado.access
okt 24 00:03:03 Desktop-Ubuntu mopidy[11084]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 27, "result": null}'
okt 24 00:03:03 Desktop-Ubuntu mopidy[11084]: DEBUG    2022-10-24 00:03:03,757 [11084:HttpServer] mopidy.http.handlers
okt 24 00:03:03 Desktop-Ubuntu mopidy[11084]:   Received WebSocket message from 127.0.0.1: '{"method":"core.playback.get_stream_title","params":{},"jsonrpc":"2.0","id":27}'
okt 24 00:03:03 Desktop-Ubuntu mopidy[11084]: DEBUG    2022-10-24 00:03:03,757 [11084:HttpServer] mopidy.http.handlers
okt 24 00:03:03 Desktop-Ubuntu mopidy[11084]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 26, "result": ["file", "http", "https", "local", "m3u", "rtsp", "youtube", "yt"]}'
okt 24 00:03:03 Desktop-Ubuntu mopidy[11084]: DEBUG    2022-10-24 00:03:03,757 [11084:HttpServer] mopidy.http.handlers
okt 24 00:03:03 Desktop-Ubuntu mopidy[11084]:   Received WebSocket message from 127.0.0.1: '{"method":"core.get_uri_schemes","params":{},"jsonrpc":"2.0","id":26}'
okt 24 00:03:03 Desktop-Ubuntu mopidy[11084]: DEBUG    2022-10-24 00:03:03,756 [11084:HttpServer] mopidy.http.handlers
okt 24 00:03:03 Desktop-Ubuntu mopidy[11084]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 25, "result": 0}'
okt 24 00:03:03 Desktop-Ubuntu mopidy[11084]: DEBUG    2022-10-24 00:03:03,755 [11084:HttpServer] mopidy.http.handlers
okt 24 00:03:03 Desktop-Ubuntu mopidy[11084]:   Received WebSocket message from 127.0.0.1: '{"method":"core.playback.get_time_position","params":{},"jsonrpc":"2.0","id":25}'
okt 24 00:03:03 Desktop-Ubuntu mopidy[11084]: DEBUG    2022-10-24 00:03:03,755 [11084:HttpServer] mopidy.http.handlers
okt 24 00:03:03 Desktop-Ubuntu mopidy[11084]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 24, "result": []}'
okt 24 00:03:03 Desktop-Ubuntu mopidy[11084]: DEBUG    2022-10-24 00:03:03,753 [11084:HttpServer] mopidy.http.handlers
okt 24 00:03:03 Desktop-Ubuntu mopidy[11084]:   Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_tl_tracks","params":{},"jsonrpc":"2.0","id":24}'
okt 24 00:03:03 Desktop-Ubuntu mopidy[11084]: DEBUG    2022-10-24 00:03:03,753 [11084:HttpServer] mopidy.http.handlers
okt 24 00:03:03 Desktop-Ubuntu mopidy[11084]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 23, "result": false}'
okt 24 00:03:03 Desktop-Ubuntu mopidy[11084]: DEBUG    2022-10-24 00:03:03,752 [11084:HttpServer] mopidy.http.handlers
okt 24 00:03:03 Desktop-Ubuntu mopidy[11084]:   Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_repeat","params":{},"jsonrpc":"2.0","id":23}'
okt 24 00:03:03 Desktop-Ubuntu mopidy[11084]: DEBUG    2022-10-24 00:03:03,752 [11084:HttpServer] mopidy.http.handlers
okt 24 00:03:03 Desktop-Ubuntu mopidy[11084]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 22, "result": false}'
okt 24 00:03:03 Desktop-Ubuntu mopidy[11084]: DEBUG    2022-10-24 00:03:03,751 [11084:HttpServer] mopidy.http.handlers
okt 24 00:03:03 Desktop-Ubuntu mopidy[11084]:   Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_random","params":{},"jsonrpc":"2.0","id":22}'
okt 24 00:03:03 Desktop-Ubuntu mopidy[11084]: DEBUG    2022-10-24 00:03:03,751 [11084:HttpServer] mopidy.http.handlers
okt 24 00:03:03 Desktop-Ubuntu mopidy[11084]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 21, "result": false}'
okt 24 00:03:03 Desktop-Ubuntu mopidy[11084]: DEBUG    2022-10-24 00:03:03,750 [11084:HttpServer] mopidy.http.handlers
okt 24 00:03:03 Desktop-Ubuntu mopidy[11084]:   Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_consume","params":{},"jsonrpc":"2.0","id":21}'
okt 24 00:03:03 Desktop-Ubuntu mopidy[11084]: DEBUG    2022-10-24 00:03:03,750 [11084:HttpServer] mopidy.http.handlers
okt 24 00:03:03 Desktop-Ubuntu mopidy[11084]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 20, "result": false}'
okt 24 00:03:03 Desktop-Ubuntu mopidy[11084]: DEBUG    2022-10-24 00:03:03,750 [11084:HttpServer] mopidy.http.handlers
okt 24 00:03:03 Desktop-Ubuntu mopidy[11084]:   Received WebSocket message from 127.0.0.1: '{"method":"core.mixer.get_mute","params":{},"jsonrpc":"2.0","id":20}'
okt 24 00:03:03 Desktop-Ubuntu mopidy[11084]: DEBUG    2022-10-24 00:03:03,749 [11084:HttpServer] mopidy.http.handlers
okt 24 00:03:03 Desktop-Ubuntu mopidy[11084]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 19, "result": 100}'
okt 24 00:03:03 Desktop-Ubuntu mopidy[11084]: DEBUG    2022-10-24 00:03:03,749 [11084:HttpServer] mopidy.http.handlers
okt 24 00:03:03 Desktop-Ubuntu mopidy[11084]:   Received WebSocket message from 127.0.0.1: '{"method":"core.mixer.get_volume","params":{},"jsonrpc":"2.0","id":19}'
okt 24 00:03:03 Desktop-Ubuntu mopidy[11084]: DEBUG    2022-10-24 00:03:03,748 [11084:HttpServer] mopidy.http.handlers
okt 24 00:03:03 Desktop-Ubuntu mopidy[11084]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 18, "result": "stopped"}'
okt 24 00:03:03 Desktop-Ubuntu mopidy[11084]: DEBUG    2022-10-24 00:03:03,748 [11084:HttpServer] mopidy.http.handlers
okt 24 00:03:03 Desktop-Ubuntu mopidy[11084]:   Received WebSocket message from 127.0.0.1: '{"method":"core.playback.get_state","params":{},"jsonrpc":"2.0","id":18}'
okt 24 00:03:03 Desktop-Ubuntu mopidy[11084]: DEBUG    2022-10-24 00:03:03,747 [11084:HttpServer] mopidy.http.handlers
okt 24 00:03:03 Desktop-Ubuntu mopidy[11084]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 17, "result": null}'
okt 24 00:03:03 Desktop-Ubuntu mopidy[11084]: DEBUG    2022-10-24 00:03:03,747 [11084:HttpServer] mopidy.http.handlers
okt 24 00:03:03 Desktop-Ubuntu mopidy[11084]:   Received WebSocket message from 127.0.0.1: '{"method":"core.playback.get_current_tl_track","params":{},"jsonrpc":"2.0","id":17}'
okt 24 00:03:03 Desktop-Ubuntu mopidy[11084]: DEBUG    2022-10-24 00:03:03,746 [11084:HttpServer] mopidy.http.handlers
okt 24 00:03:03 Desktop-Ubuntu mopidy[11084]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 16, "result": {"core.get_uri_schemes": {"description": "Get list of URI schemes we can handle", "params": []}, "core.get_version": {"description": "Get version of the Mopidy core API", "params": []}, "core.history.get_history": {"description": "Get the track history.\\n\\nThe timestamps are milliseconds since epoch.\\n\\n:returns: the track history\\n:rtype: list of (timestamp, :class:`mopidy.models.Ref`) tuples", "params": []}, "core.history.get_length": {"description": "Get the number of tracks in the history.\\n\\n:returns: the history length\\n:rtype: int", "params": []}, "core.library.browse": {"description": "Browse directories and tracks at the given ``uri``.\\n\\n``uri`` is a string which represents some directory belonging to a\\nbackend. To get the intial root directories for backends pass\\n:class:`None` as the URI.\\n\\nReturns a list of :class:`mopidy.models.Ref` objects for the\\ndirectories and tracks at the given ``uri``.\\n\\nThe :class:`~mopidy.models.Ref` objects representing tracks keep the\\ntrack\'s original URI. A matching pair of objects can look like this::\\n\\n    Track(uri=\'dummy:/foo.mp3\', name=\'foo\', artists=..., album=...)\\n    Ref.track(uri=\'dummy:/foo.mp3\', name=\'foo\')\\n\\nThe :class:`~mopidy.models.Ref` objects representing directories have\\nbackend specific URIs. These are opaque values, so no one but the\\nbackend that created them should try and derive any meaning from them.\\nThe only valid exception to this is checking the scheme, as it is used\\nto route browse requests to the correct backend.\\n\\nFor example, the dummy library\'s ``/bar`` directory could be returned\\nlike this::\\n\\n    Ref.directory(uri=\'dummy:directory:/bar\', name=\'bar\')\\n\\n:param string uri: URI to browse\\n:rtype: list of :class:`mopidy.models.Ref`\\n\\n.. versionadded:: 0.18", "params": [{"name": "uri"}]}, "core.library.get_distinct": {"description": "List distinct values for a given field from the library.\\n\\nThis has mainly been added to support the list commands the MPD\\nprotocol supports in a more sane fashion. Other frontends are not\\nrecommended to use this method.\\n\\n:param string field: Any one of ``uri``, ``track_name``, ``album``,\\n    ``artist``, ``albumartist``, ``composer``, ``performer``,\\n    ``track_no``, ``genre``, ``date``, ``comment``, ``disc_no``,\\n    ``musicbrainz_albumid``, ``musicbrainz_artistid``, or\\n    ``musicbrainz_trackid``.\\n:param dict query: Query to use for limiting results, see\\n    :meth:`search` for details about the query format.\\n:rtype: set of values corresponding to the requested field type.\\n\\n.. versionadded:: 1.0", "params": [{"name": "field"}, {"name": "query", "default": null}]}, "core.library.get_images": {"description": "Lookup the images for the given URIs\\n\\nBackends can use this to return image URIs for any URI they know about\\nbe it tracks, albums, playlists. The lookup result is a dictionary\\nmapping the provided URIs to lists of images.\\n\\nUnknown URIs or URIs the corresponding backend couldn\'t find anything\\nfor will simply return an empty list for that URI.\\n\\n:param uris: list of URIs to find images for\\n:type uris: list of string\\n:rtype: {uri: tuple of :class:`mopidy.models.Image`}\\n\\n.. versionadded:: 1.0", "params": [{"name": "uris"}]}, "core.library.lookup": {"description": "Lookup the given URIs.\\n\\nIf the URI expands to multiple tracks, the returned list will contain\\nthem all.\\n\\n:param uris: track URIs\\n:type uris: list of string\\n:rtype: {uri: list of :class:`mopidy.models.Track`}", "params": [{"name": "uris"}]}, "core.library.refresh": {"description": "Refresh library. Limit to URI and below if an URI is given.\\n\\n:param uri: directory or track URI\\n:type uri: string", "params": [{"name": "uri", "default": null}]}, "core.library.search": {"description": "Search the library for tracks where ``field`` contains ``values``.\\n\\n``field`` can be one of ``uri``, ``track_name``, ``album``, ``artist``,\\n``albumartist``, ``composer``, ``performer``, ``track_no``, ``genre``,\\n``date``, ``comment``, ``disc_no``, ``musicbrainz_albumid``,\\n``musicbrainz_artistid``, ``musicbrainz_trackid`` or ``any``.\\n\\nIf ``uris`` is given, the search is limited to results from within the\\nURI roots. For example passing ``uris=[\'file:\']`` will limit the search\\nto the local backend.\\n\\nExamples::\\n\\n    # Returns results matching \'a\' in any backend\\n    search({\'any\': [\'a\']})\\n\\n    # Returns results matching artist \'xyz\' in any backend\\n    search({\'artist\': [\'xyz\']})\\n\\n    # Returns results matching \'a\' and \'b\' and artist \'xyz\' in any\\n    # backend\\n    search({\'any\': [\'a\', \'b\'], \'artist\': [\'xyz\']})\\n\\n    # Returns results matching \'a\' if within the given URI roots\\n    # \\"file:///media/music\\" and \\"spotify:\\"\\n    search({\'any\': [\'a\']}, uris=[\'file:///media/music\', \'spotify:\'])\\n\\n    # Returns results matching artist \'xyz\' and \'abc\' in any backend\\n    search({\'artist\': [\'xyz\', \'abc\']})\\n\\n:param query: one or more queries to search for\\n:type query: dict\\n:param uris: zero or more URI roots to limit the search to\\n:type uris: list of string or :class:`None`\\n:param exact: if the search should use exact matching\\n:type exact: :class:`bool`\\n:rtype: list of :class:`mopidy.models.SearchResult`\\n\\n.. versionadded:: 1.0\\n    The ``exact`` keyword argument.", "params": [{"name": "query"}, {"name": "uris", "default": null}, {"name": "exact", "default": false}]}, "core.mixer.get_mute": {"description": "Get mute state.\\n\\n:class:`True` if muted, :class:`False` unmuted, :class:`None` if\\nunknown.", "params": []}, "core.mixer.get_volume": {"description": "Get the volume.\\n\\nInteger in range [0..100] or :class:`None` if unknown.\\n\\nThe volume scale is linear.", "params": []}, "core.mixer.set_mute": {"description": "Set mute state.\\n\\n:class:`True` to mute, :class:`False` to unmute.\\n\\nReturns :class:`True` if call is successful, otherwise :class:`False`.", "params": [{"name": "mute"}]}, "core.mixer.set_volume": {"description": "Set the volume.\\n\\nThe volume is defined as an integer in range [0..100].\\n\\nThe volume scale is linear.\\n\\nReturns :class:`True` if call is successful, otherwise :class:`False`.", "params": [{"name": "volume"}]}, "core.playback.get_current_tl_track": {"description": "Get the currently playing or selected track.\\n\\nReturns a :class:`mopidy.models.TlTrack` or :class:`None`.", "params": []}, "core.playback.get_current_tlid": {"description": "Get the currently playing or selected TLID.\\n\\nExtracted from :meth:`get_current_tl_track` for convenience.\\n\\nReturns a :class:`int` or :class:`None`.\\n\\n.. versionadded:: 1.1", "params": []}, "core.playback.get_current_track": {"description": "Get the currently playing or selected track.\\n\\nExtracted from :meth:`get_current_tl_track` for convenience.\\n\\nReturns a :class:`mopidy.models.Track` or :class:`None`.", "params": []}, "core.playback.get_state": {"description": "Get The playback state.", "params": []}, "core.playback.get_stream_title": {"description": "Get the current stream title or :class:`None`.", "params": []}, "core.playback.get_time_position": {"description": "Get time position in milliseconds.", "params": []}, "core.playback.next": {"description": "Change to the next track.\\n\\nThe current playback state will be kept. If it was playing, playing\\nwill continue. If it was paused, it will still be paused, etc.", "params": []}, "core.playback.pause": {"description": "Pause playback.", "params": []}, "core.playback.play": {"description": "Play the given track, or if the given tl_track and tlid is\\n:class:`None`, play the currently active track.\\n\\nNote that the track **must** already be in the tracklist.\\n\\n.. deprecated:: 3.0\\n    The ``tl_track`` argument. Use ``tlid`` instead.\\n\\n:param tl_track: track to play\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:param tlid: TLID of the track to play\\n:type tlid: :class:`int` or :class:`None`", "params": [{"name": "tl_track", "default": null}, {"name": "tlid", "default": null}]}, "core.playback.previous": {"description": "Change to the previous track.\\n\\nThe current playback state will be kept. If it was playing, playing\\nwill continue. If it was paused, it will still be paused, etc.", "params": []}, "core.playback.resume": {"description": "If paused, resume playing the current track.", "params": []}, "core.playback.seek": {"description": "Seeks to time position given in milliseconds.\\n\\n:param time_position: time position in milliseconds\\n:type time_position: int\\n:rtype: :class:`True` if successful, else :class:`False`", "params": [{"name": "time_position"}]}, "core.playback.set_state": {"description": "Set the playback state.\\n\\nMust be :attr:`PLAYING`, :attr:`PAUSED`, or :attr:`STOPPED`.\\n\\nPossible states and transitions:\\n\\n.. digraph:: state_transitions\\n\\n    \\"STOPPED\\" -> \\"PLAYING\\" [ label=\\"play\\" ]\\n    \\"STOPPED\\" -> \\"PAUSED\\" [ label=\\"pause\\" ]\\n    \\"PLAYING\\" -> \\"STOPPED\\" [ label=\\"stop\\" ]\\n    \\"PLAYING\\" -> \\"PAUSED\\" [ label=\\"pause\\" ]\\n    \\"PLAYING\\" -> \\"PLAYING\\" [ label=\\"play\\" ]\\n    \\"PAUSED\\" -> \\"PLAYING\\" [ label=\\"resume\\" ]\\n    \\"PAUSED\\" -> \\"STOPPED\\" [ label=\\"stop\\" ]", "params": [{"name": "new_state"}]}, "core.playback.stop": {"description": "Stop playing.", "params": []}, "core.playlists.as_list": {"description": "Get a list of the currently available playlists.\\n\\nReturns a list of :class:`~mopidy.models.Ref` objects referring to the\\nplaylists. In other words, no information about the playlists\' content\\nis given.\\n\\n:rtype: list of :class:`mopidy.models.Ref`\\n\\n.. versionadded:: 1.0", "params": []}, "core.playlists.create": {"description": "Create a new playlist.\\n\\nIf ``uri_scheme`` matches an URI scheme handled by a current backend,\\nthat backend is asked to create the playlist. If ``uri_scheme`` is\\n:class:`None` or doesn\'t match a current backend, the first backend is\\nasked to create the playlist.\\n\\nAll new playlists must be created by calling this method, and **not**\\nby creating new instances of :class:`mopidy.models.Playlist`.\\n\\n:param name: name of the new playlist\\n:type name: string\\n:param uri_scheme: use the backend matching the URI scheme\\n:type uri_scheme: string\\n:rtype: :class:`mopidy.models.Playlist` or :class:`None`", "params": [{"name": "name"}, {"name": "uri_scheme", "default": null}]}, "core.playlists.delete": {"description": "Delete playlist identified by the URI.\\n\\nIf the URI doesn\'t match the URI schemes handled by the current\\nbackends, nothing happens.\\n\\nReturns :class:`True` if deleted, :class:`False` otherwise.\\n\\n:param uri: URI of the playlist to delete\\n:type uri: string\\n:rtype: :class:`bool`\\n\\n.. versionchanged:: 2.2\\n    Return type defined.", "params": [{"name": "uri"}]}, "core.playlists.get_items": {"description": "Get the items in a playlist specified by ``uri``.\\n\\nReturns a list of :class:`~mopidy.models.Ref` objects referring to the\\nplaylist\'s items.\\n\\nIf a playlist with the given ``uri`` doesn\'t exist, it returns\\n:class:`None`.\\n\\n:rtype: list of :class:`mopidy.models.Ref`, or :class:`None`\\n\\n.. versionadded:: 1.0", "params": [{"name": "uri"}]}, "core.playlists.get_uri_schemes": {"description": "Get the list of URI schemes that support playlists.\\n\\n:rtype: list of string\\n\\n.. versionadded:: 2.0", "params": []}, "core.playlists.lookup": {"description": "Lookup playlist with given URI in both the set of playlists and in any\\nother playlist sources. Returns :class:`None` if not found.\\n\\n:param uri: playlist URI\\n:type uri: string\\n:rtype: :class:`mopidy.models.Playlist` or :class:`None`", "params": [{"name": "uri"}]}, "core.playlists.refresh": {"description": "Refresh the playlists in :attr:`playlists`.\\n\\nIf ``uri_scheme`` is :class:`None`, all backends are asked to refresh.\\nIf ``uri_scheme`` is an URI scheme handled by a backend, only that\\nbackend is asked to refresh. If ``uri_scheme`` doesn\'t match any\\ncurrent backend, nothing happens.\\n\\n:param uri_scheme: limit to the backend matching the URI scheme\\n:type uri_scheme: string", "params": [{"name": "uri_scheme", "default": null}]}, "core.playlists.save": {"description": "Save the playlist.\\n\\nFor a playlist to be saveable, it must have the ``uri`` attribute set.\\nYou must not set the ``uri`` atribute yourself, but use playlist\\nobjects returned by :meth:`create` or retrieved from :attr:`playlists`,\\nwhich will always give you saveable playlists.\\n\\nThe method returns the saved playlist. The return playlist may differ\\nfrom the saved playlist. E.g. if the playlist name was changed, the\\nreturned playlist may have a different URI. The caller of this method\\nmust throw away the playlist sent to this method, and use the\\nreturned playlist instead.\\n\\nIf the playlist\'s URI isn\'t set or doesn\'t match the URI scheme of a\\ncurrent backend, nothing is done and :class:`None` is returned.\\n\\n:param playlist: the playlist\\n:type playlist: :class:`mopidy.models.Playlist`\\n:rtype: :class:`mopidy.models.Playlist` or :class:`None`", "params": [{"name": "playlist"}]}, "core.tracklist.add": {"description": "Add tracks to the tracklist.\\n\\nIf ``uris`` is given instead of ``tracks``, the URIs are\\nlooked up in the library and the resulting tracks are added to the\\ntracklist.\\n\\nIf ``at_position`` is given, the tracks are inserted at the given\\nposition in the tracklist. If ``at_position`` is not given, the tracks\\nare appended to the end of the tracklist.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.\\n\\n:param tracks: tracks to add\\n:type tracks: list of :class:`mopidy.models.Track` or :class:`None`\\n:param at_position: position in tracklist to add tracks\\n:type at_position: int or :class:`None`\\n:param uris: list of URIs for tracks to add\\n:type uris: list of string or :class:`None`\\n:rtype: list of :class:`mopidy.models.TlTrack`\\n\\n.. versionadded:: 1.0\\n    The ``uris`` argument.\\n\\n.. deprecated:: 1.0\\n    The ``tracks`` argument. Use ``uris``.", "params": [{"name": "tracks", "default": null}, {"name": "at_position", "default": null}, {"name": "uris", "default": null}]}, "core.tracklist.clear": {"description": "Clear the tracklist.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.", "params": []}, "core.tracklist.eot_track": {"description": "The track that will be played after the given track.\\n\\nNot necessarily the same track as :meth:`next_track`.\\n\\n.. deprecated:: 3.0\\n    Use :meth:`get_eot_tlid` instead.\\n\\n:param tl_track: the reference track\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:rtype: :class:`mopidy.models.TlTrack` or :class:`None`", "params": [{"name": "tl_track"}]}, "core.tracklist.filter": {"description": "Filter the tracklist by the given criteria.\\n\\nEach rule in the criteria consists of a model field and a list of\\nvalues to compare it against. If the model field matches any of the\\nvalues, it may be returned.\\n\\nOnly tracks that match all the given criteria are returned.\\n\\nExamples::\\n\\n    # Returns tracks with TLIDs 1, 2, 3, or 4 (tracklist ID)\\n    filter({\'tlid\': [1, 2, 3, 4]})\\n\\n    # Returns track with URIs \'xyz\' or \'abc\'\\n    filter({\'uri\': [\'xyz\', \'abc\']})\\n\\n    # Returns track with a matching TLIDs (1, 3 or 6) and a\\n    # matching URI (\'xyz\' or \'abc\')\\n    filter({\'tlid\': [1, 3, 6], \'uri\': [\'xyz\', \'abc\']})\\n\\n:param criteria: one or more rules to match by\\n:type criteria: dict, of (string, list) pairs\\n:rtype: list of :class:`mopidy.models.TlTrack`", "params": [{"name": "criteria"}]}, "core.tracklist.get_consume": {"description": "Get consume mode.\\n\\n:class:`True`\\n    Tracks are removed from the tracklist when they have been played.\\n:class:`False`\\n    Tracks are not removed from the tracklist.", "params": []}, "core.tracklist.get_eot_tlid": {"description": "The TLID of the track that will be played after the current track.\\n\\nNot necessarily the same TLID as returned by :meth:`get_next_tlid`.\\n\\n:rtype: :class:`int` or :class:`None`\\n\\n.. versionadded:: 1.1", "params": []}, "core.tracklist.get_length": {"description": "Get length of the tracklist.", "params": []}, "core.tracklist.get_next_tlid": {"description": "The tlid of the track that will be played if calling\\n:meth:`mopidy.core.PlaybackController.next()`.\\n\\nFor normal playback this is the next track in the tracklist. If repeat\\nis enabled the next track can loop around the tracklist. When random is\\nenabled this should be a random track, all tracks should be played once\\nbefore the tracklist repeats.\\n\\n:rtype: :class:`int` or :class:`None`\\n\\n.. versionadded:: 1.1", "params": []}, "core.tracklist.get_previous_tlid": {"description": "Returns the TLID of the track that will be played if calling\\n:meth:`mopidy.core.PlaybackController.previous()`.\\n\\nFor normal playback this is the previous track in the tracklist. If\\nrandom and/or consume is enabled it should return the current track\\ninstead.\\n\\n:rtype: :class:`int` or :class:`None`\\n\\n.. versionadded:: 1.1", "params": []}, "core.tracklist.get_random": {"description": "Get random mode.\\n\\n:class:`True`\\n    Tracks are selected at random from the tracklist.\\n:class:`False`\\n    Tracks are played in the order of the tracklist.", "params": []}, "core.tracklist.get_repeat": {"description": "Get repeat mode.\\n\\n:class:`True`\\n    The tracklist is played repeatedly.\\n:class:`False`\\n    The tracklist is played once.", "params": []}, "core.tracklist.get_single": {"description": "Get single mode.\\n\\n:class:`True`\\n    Playback is stopped after current song, unless in ``repeat`` mode.\\n:class:`False`\\n    Playback continues after current song.", "params": []}, "core.tracklist.get_tl_tracks": {"description": "Get tracklist as list of :class:`mopidy.models.TlTrack`.", "params": []}, "core.tracklist.get_tracks": {"description": "Get tracklist as list of :class:`mopidy.models.Track`.", "params": []}, "core.tracklist.get_version": {"description": "Get the tracklist version.\\n\\nInteger which is increased every time the tracklist is changed. Is not\\nreset before Mopidy is restarted.", "params": []}, "core.tracklist.index": {"description": "The position of the given track in the tracklist.\\n\\nIf neither *tl_track* or *tlid* is given we return the index of\\nthe currently playing track.\\n\\n:param tl_track: the track to find the index of\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:param tlid: TLID of the track to find the index of\\n:type tlid: :class:`int` or :class:`None`\\n:rtype: :class:`int` or :class:`None`\\n\\n.. versionadded:: 1.1\\n    The *tlid* parameter", "params": [{"name": "tl_track", "default": null}, {"name": "tlid", "default": null}]}, "core.tracklist.move": {"description": "Move the tracks in the slice ``[start:end]`` to ``to_position``.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.\\n\\n:param start: position of first track to move\\n:type start: int\\n:param end: position after last track to move\\n:type end: int\\n:param to_position: new position for the tracks\\n:type to_position: int", "params": [{"name": "start"}, {"name": "end"}, {"name": "to_position"}]}, "core.tracklist.next_track": {"description": "The track that will be played if calling\\n:meth:`mopidy.core.PlaybackController.next()`.\\n\\nFor normal playback this is the next track in the tracklist. If repeat\\nis enabled the next track can loop around the tracklist. When random is\\nenabled this should be a random track, all tracks should be played once\\nbefore the tracklist repeats.\\n\\n.. deprecated:: 3.0\\n    Use :meth:`get_next_tlid` instead.\\n\\n:param tl_track: the reference track\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:rtype: :class:`mopidy.models.TlTrack` or :class:`None`", "params": [{"name": "tl_track"}]}, "core.tracklist.previous_track": {"description": "Returns the track that will be played if calling\\n:meth:`mopidy.core.PlaybackController.previous()`.\\n\\nFor normal playback this is the previous track in the tracklist. If\\nrandom and/or consume is enabled it should return the current track\\ninstead.\\n\\n.. deprecated:: 3.0\\n    Use :meth:`get_previous_tlid` instead.\\n\\n:param tl_track: the reference track\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:rtype: :class:`mopidy.models.TlTrack` or :class:`None`", "params": [{"name": "tl_track"}]}, "core.tracklist.remove": {"description": "Remove the matching tracks from the tracklist.\\n\\nUses :meth:`filter()` to lookup the tracks to remove.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.\\n\\n:param criteria: one or more rules to match by\\n:type criteria: dict, of (string, list) pairs\\n:rtype: list of :class:`mopidy.models.TlTrack` that were removed", "params": [{"name": "criteria"}]}, "core.tracklist.set_consume": {"description": "Set consume mode.\\n\\n:class:`True`\\n    Tracks are removed from the tracklist when they have been played.\\n:class:`False`\\n    Tracks are not removed from the tracklist.", "params": [{"name": "value"}]}, "core.tracklist.set_random": {"description": "Set random mode.\\n\\n:class:`True`\\n    Tracks are selected at random from the tracklist.\\n:class:`False`\\n    Tracks are played in the order of the tracklist.", "params": [{"name": "value"}]}, "core.tracklist.set_repeat": {"description": "Set repeat mode.\\n\\nTo repeat a single track, set both ``repeat`` and ``single``.\\n\\n:class:`True`\\n    The tracklist is played repeatedly.\\n:class:`False`\\n    The tracklist is played once.", "params": [{"name": "value"}]}, "core.tracklist.set_single": {"description": "Set single mode.\\n\\n:class:`True`\\n    Playback is stopped after current song, unless in ``repeat`` mode.\\n:class:`False`\\n    Playback continues after current song.", "params": [{"name": "value"}]}, "core.tracklist.shuffle": {"description": "Shuffles the entire tracklist. If ``start`` and ``end`` is given only\\nshuffles the slice ``[start:end]``.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.\\n\\n:param start: position of first track to shuffle\\n:type start: int or :class:`None`\\n:param end: position after last track to shuffle\\n:type end: int or :class:`None`", "params": [{"name": "start", "default": null}, {"name": "end", "default": null}]}, "core.tracklist.slice": {"description": "Returns a slice of the tracklist, limited by the given start and end\\npositions.\\n\\n:param start: position of first track to include in slice\\n:type start: int\\n:param end: position after last track to include in slice\\n:type end: int\\n:rtype: :class:`mopidy.models.TlTrack`", "params": [{"name": "start"}, {"name": "end"}]}}}'
okt 24 00:03:03 Desktop-Ubuntu mopidy[11084]: DEBUG    2022-10-24 00:03:03,737 [11084:HttpServer] mopidy.http.handlers
okt 24 00:03:03 Desktop-Ubuntu mopidy[11084]:   Received WebSocket message from 127.0.0.1: '{"method":"core.describe","jsonrpc":"2.0","id":16}'
okt 24 00:03:03 Desktop-Ubuntu mopidy[11084]: DEBUG    2022-10-24 00:03:03,733 [11084:HttpServer] mopidy.http.handlers
okt 24 00:03:03 Desktop-Ubuntu mopidy[11084]:   New WebSocket connection from 127.0.0.1
okt 24 00:03:03 Desktop-Ubuntu mopidy[11084]: DEBUG    2022-10-24 00:03:03,731 [11084:HttpServer] mopidy.http.handlers
okt 24 00:03:03 Desktop-Ubuntu mopidy[11084]:   101 GET /mopidy/ws/ (127.0.0.1) 20.82ms
okt 24 00:03:03 Desktop-Ubuntu mopidy[11084]: INFO     2022-10-24 00:03:03,731 [11084:HttpServer] tornado.access
okt 24 00:03:02 Desktop-Ubuntu mopidy[11084]:   Zeroconf service 'Mopidy HTTP server on Desktop-Ubuntu' (_mopidy-http._tcp at []:6680): Published
okt 24 00:03:02 Desktop-Ubuntu mopidy[11084]: DEBUG    2022-10-24 00:03:02,810 [11084:HttpFrontend-14 (_actor_loop)] mopidy.zeroconf
okt 24 00:03:02 Desktop-Ubuntu mopidy[11084]:   Zeroconf service 'Mopidy HTTP server on Desktop-Ubuntu' (_http._tcp at []:6680): Published
okt 24 00:03:02 Desktop-Ubuntu mopidy[11084]: DEBUG    2022-10-24 00:03:02,808 [11084:HttpFrontend-14 (_actor_loop)] mopidy.zeroconf
okt 24 00:03:02 Desktop-Ubuntu mopidy[11084]:     '/': <class 'tornado.web.RedirectHandler'>
okt 24 00:03:02 Desktop-Ubuntu mopidy[11084]:     '/mopidy/': <class 'mopidy.http.handlers.ClientListHandler'>
okt 24 00:03:02 Desktop-Ubuntu mopidy[11084]:     '/mopidy/(.+)': <class 'mopidy.http.handlers.StaticFileHandler'>
okt 24 00:03:02 Desktop-Ubuntu mopidy[11084]:     '/mopidy/rpc': <class 'mopidy.http.handlers.JsonRpcHandler'>
okt 24 00:03:02 Desktop-Ubuntu mopidy[11084]:     '/mopidy/ws/?': <class 'mopidy.http.handlers.WebSocketHandler'>
okt 24 00:03:02 Desktop-Ubuntu mopidy[11084]:     '/mopidy': <class 'mopidy.http.handlers.AddSlashHandler'>
okt 24 00:03:02 Desktop-Ubuntu mopidy[11084]:     '/iris/(.*)': <class 'mopidy_iris.handlers.ReactRouterHandler'>
okt 24 00:03:02 Desktop-Ubuntu mopidy[11084]:     '/iris/((.*)(?:css|js|json|map)$)': <class 'tornado.web.StaticFileHandler'>
okt 24 00:03:02 Desktop-Ubuntu mopidy[11084]:     '/iris/assets/(.*)': <class 'tornado.web.StaticFileHandler'>
okt 24 00:03:02 Desktop-Ubuntu mopidy[11084]:     '/iris/ws/?': <class 'mopidy_iris.handlers.WebsocketHandler'>
okt 24 00:03:02 Desktop-Ubuntu mopidy[11084]:     '/iris/http/([^/]*)': <class 'mopidy_iris.handlers.HttpHandler'>
okt 24 00:03:02 Desktop-Ubuntu mopidy[11084]:     '/iris': <class 'mopidy.http.handlers.AddSlashHandler'>
okt 24 00:03:02 Desktop-Ubuntu mopidy[11084]:     '/local/(.+)': <class 'mopidy_local.web.ImageHandler'>
okt 24 00:03:02 Desktop-Ubuntu mopidy[11084]:     '/local/(index.html)?': <class 'mopidy_local.web.IndexHandler'>
okt 24 00:03:02 Desktop-Ubuntu mopidy[11084]:     '/local': <class 'mopidy.http.handlers.AddSlashHandler'>
okt 24 00:03:02 Desktop-Ubuntu mopidy[11084]:     '/youtube/(.*\\.(?:webm|m4a|mp3|ogg))': <class 'mopidy_youtube.web.AudioHandler'>
okt 24 00:03:02 Desktop-Ubuntu mopidy[11084]:     '/youtube/(.*\\.jpg)': <class 'mopidy_youtube.web.ImageHandler'>
okt 24 00:03:02 Desktop-Ubuntu mopidy[11084]:     '/youtube/(index.html|image.html)?': <class 'mopidy_youtube.web.IndexHandler'>
okt 24 00:03:02 Desktop-Ubuntu mopidy[11084]:     '/youtube': <class 'mopidy.http.handlers.AddSlashHandler'>
okt 24 00:03:02 Desktop-Ubuntu mopidy[11084]:   HTTP routes from extensions:
okt 24 00:03:02 Desktop-Ubuntu mopidy[11084]: DEBUG    2022-10-24 00:03:02,799 [11084:HttpServer] mopidy.http.actor
okt 24 00:03:02 Desktop-Ubuntu mopidy[11084]:   Default webclient is mopidy
okt 24 00:03:02 Desktop-Ubuntu mopidy[11084]: DEBUG    2022-10-24 00:03:02,799 [11084:HttpServer] mopidy.http.actor
okt 24 00:03:02 Desktop-Ubuntu mopidy[11084]:   Loaded HTTP extension: mopidy
okt 24 00:03:02 Desktop-Ubuntu mopidy[11084]: DEBUG    2022-10-24 00:03:02,799 [11084:HttpServer] mopidy.http.actor
okt 24 00:03:02 Desktop-Ubuntu mopidy[11084]:   Loaded HTTP extension: iris
okt 24 00:03:02 Desktop-Ubuntu mopidy[11084]: DEBUG    2022-10-24 00:03:02,799 [11084:HttpServer] mopidy.http.actor
okt 24 00:03:02 Desktop-Ubuntu mopidy[11084]:   Loaded HTTP extension: local
okt 24 00:03:02 Desktop-Ubuntu mopidy[11084]: DEBUG    2022-10-24 00:03:02,798 [11084:HttpServer] mopidy.http.actor
okt 24 00:03:02 Desktop-Ubuntu mopidy[11084]:   Loaded HTTP extension: youtube
okt 24 00:03:02 Desktop-Ubuntu mopidy[11084]: DEBUG    2022-10-24 00:03:02,797 [11084:HttpServer] mopidy.http.actor
okt 24 00:03:02 Desktop-Ubuntu mopidy[11084]:   Using selector: EpollSelector
okt 24 00:03:02 Desktop-Ubuntu mopidy[11084]: DEBUG    2022-10-24 00:03:02,796 [11084:HttpServer] asyncio
okt 24 00:03:02 Desktop-Ubuntu mopidy[11084]:   Starting GLib mainloop
okt 24 00:03:02 Desktop-Ubuntu mopidy[11084]: INFO     2022-10-24 00:03:02,795 [11084:MainThread] mopidy.commands
okt 24 00:03:02 Desktop-Ubuntu mopidy[11084]:   HttpFrontend took 1ms
okt 24 00:03:02 Desktop-Ubuntu mopidy[11084]: TRACE    2022-10-24 00:03:02,795 [11084:MainThread] mopidy.internal.timer
okt 24 00:03:02 Desktop-Ubuntu mopidy[11084]:   HTTP server running at [::ffff:127.0.0.1]:6680
okt 24 00:03:02 Desktop-Ubuntu mopidy[11084]: INFO     2022-10-24 00:03:02,795 [11084:HttpFrontend-14 (_actor_loop)] mopidy.http.actor
okt 24 00:03:02 Desktop-Ubuntu mopidy[11084]:   Starting HttpFrontend (urn:uuid:638697c5-b112-4ac2-a4b9-1541906d3a4c)
okt 24 00:03:02 Desktop-Ubuntu mopidy[11084]: DEBUG    2022-10-24 00:03:02,794 [11084:MainThread] pykka
okt 24 00:03:02 Desktop-Ubuntu mopidy[11084]:   Registered HttpFrontend (urn:uuid:638697c5-b112-4ac2-a4b9-1541906d3a4c)
okt 24 00:03:02 Desktop-Ubuntu mopidy[11084]: DEBUG    2022-10-24 00:03:02,794 [11084:MainThread] pykka
okt 24 00:03:02 Desktop-Ubuntu mopidy[11084]:   Starting HTTP server
okt 24 00:03:02 Desktop-Ubuntu mopidy[11084]: DEBUG    2022-10-24 00:03:02,794 [11084:MainThread] mopidy.http.actor
okt 24 00:03:02 Desktop-Ubuntu mopidy[11084]:   IrisFrontend took 0ms
okt 24 00:03:02 Desktop-Ubuntu mopidy[11084]: TRACE    2022-10-24 00:03:02,793 [11084:MainThread] mopidy.internal.timer
okt 24 00:03:02 Desktop-Ubuntu mopidy[11084]:   Starting Iris 3.64.1
okt 24 00:03:02 Desktop-Ubuntu mopidy[11084]: INFO     2022-10-24 00:03:02,793 [11084:IrisFrontend-12 (_actor_loop)] mopidy_iris.core
okt 24 00:03:02 Desktop-Ubuntu mopidy[11084]:   Starting IrisFrontend (urn:uuid:b9ae9a9c-81f6-4892-8df8-069326aab132)
okt 24 00:03:02 Desktop-Ubuntu mopidy[11084]: DEBUG    2022-10-24 00:03:02,793 [11084:MainThread] pykka
okt 24 00:03:02 Desktop-Ubuntu mopidy[11084]:   Registered IrisFrontend (urn:uuid:b9ae9a9c-81f6-4892-8df8-069326aab132)
okt 24 00:03:02 Desktop-Ubuntu mopidy[11084]: DEBUG    2022-10-24 00:03:02,793 [11084:MainThread] pykka
okt 24 00:03:02 Desktop-Ubuntu mopidy[11084]:   YTMusicScrobbleFE took 0ms
okt 24 00:03:02 Desktop-Ubuntu mopidy[11084]: TRACE    2022-10-24 00:03:02,793 [11084:MainThread] mopidy.internal.timer
okt 24 00:03:02 Desktop-Ubuntu mopidy[11084]:   Starting YTMusicScrobbleFE (urn:uuid:28be5adc-df08-4713-ade1-7c44f1cb2780)
okt 24 00:03:02 Desktop-Ubuntu mopidy[11084]: DEBUG    2022-10-24 00:03:02,792 [11084:MainThread] pykka
okt 24 00:03:02 Desktop-Ubuntu mopidy[11084]:   Registered YTMusicScrobbleFE (urn:uuid:28be5adc-df08-4713-ade1-7c44f1cb2780)
okt 24 00:03:02 Desktop-Ubuntu mopidy[11084]: DEBUG    2022-10-24 00:03:02,792 [11084:MainThread] pykka
okt 24 00:03:02 Desktop-Ubuntu mopidy[11084]:   YouTubeCoreListener took 0ms
okt 24 00:03:02 Desktop-Ubuntu mopidy[11084]: TRACE    2022-10-24 00:03:02,792 [11084:MainThread] mopidy.internal.timer
okt 24 00:03:02 Desktop-Ubuntu mopidy[11084]:   Starting YouTubeCoreListener (urn:uuid:dad9cac2-5293-4706-b534-87a58b0dfb86)
okt 24 00:03:02 Desktop-Ubuntu mopidy[11084]: DEBUG    2022-10-24 00:03:02,792 [11084:MainThread] pykka
okt 24 00:03:02 Desktop-Ubuntu mopidy[11084]:   Registered YouTubeCoreListener (urn:uuid:dad9cac2-5293-4706-b534-87a58b0dfb86)
okt 24 00:03:02 Desktop-Ubuntu mopidy[11084]: DEBUG    2022-10-24 00:03:02,792 [11084:MainThread] pykka
okt 24 00:03:02 Desktop-Ubuntu mopidy[11084]:   YouTubeAutoplayer took 0ms
okt 24 00:03:02 Desktop-Ubuntu mopidy[11084]: TRACE    2022-10-24 00:03:02,792 [11084:MainThread] mopidy.internal.timer
okt 24 00:03:02 Desktop-Ubuntu mopidy[11084]:   Starting YouTubeAutoplayer (urn:uuid:c7b05986-b629-4eb0-ada8-877758117b93)
okt 24 00:03:02 Desktop-Ubuntu mopidy[11084]: DEBUG    2022-10-24 00:03:02,791 [11084:MainThread] pykka
okt 24 00:03:02 Desktop-Ubuntu mopidy[11084]:   Registered YouTubeAutoplayer (urn:uuid:c7b05986-b629-4eb0-ada8-877758117b93)
okt 24 00:03:02 Desktop-Ubuntu mopidy[11084]: DEBUG    2022-10-24 00:03:02,791 [11084:MainThread] pykka
okt 24 00:03:02 Desktop-Ubuntu mopidy[11084]:   Starting Mopidy frontends: YouTubeAutoplayer, YouTubeCoreListener, YTMusicScrobbleFE, IrisFrontend, HttpFrontend
okt 24 00:03:02 Desktop-Ubuntu mopidy[11084]: INFO     2022-10-24 00:03:02,791 [11084:MainThread] mopidy.commands
okt 24 00:03:02 Desktop-Ubuntu mopidy[11084]:   Starting Core (urn:uuid:afaa2177-86d0-43fc-97f0-df1b168bb831)
okt 24 00:03:02 Desktop-Ubuntu mopidy[11084]: DEBUG    2022-10-24 00:03:02,787 [11084:MainThread] pykka
okt 24 00:03:02 Desktop-Ubuntu mopidy[11084]:   Registered Core (urn:uuid:afaa2177-86d0-43fc-97f0-df1b168bb831)
okt 24 00:03:02 Desktop-Ubuntu mopidy[11084]: DEBUG    2022-10-24 00:03:02,787 [11084:MainThread] pykka
okt 24 00:03:02 Desktop-Ubuntu mopidy[11084]:   Starting Mopidy core
okt 24 00:03:02 Desktop-Ubuntu mopidy[11084]: INFO     2022-10-24 00:03:02,784 [11084:MainThread] mopidy.commands
okt 24 00:03:01 Desktop-Ubuntu mopidy[11084]:   https://music.youtube.com:443 "GET / HTTP/1.1" 200 None
okt 24 00:03:01 Desktop-Ubuntu mopidy[11084]: DEBUG    2022-10-24 00:03:01,601 [11084:YouTubeBackend-3 (_actor_loop)] urllib3.connectionpool
okt 24 00:03:01 Desktop-Ubuntu mopidy[11084]:   StreamBackend took 5ms
okt 24 00:03:01 Desktop-Ubuntu mopidy[11084]: TRACE    2022-10-24 00:03:01,440 [11084:MainThread] mopidy.internal.timer
okt 24 00:03:01 Desktop-Ubuntu mopidy[11084]:   Starting StreamBackend (urn:uuid:6e2145d3-9654-4367-b3b9-1cd342803ec2)
okt 24 00:03:01 Desktop-Ubuntu mopidy[11084]: DEBUG    2022-10-24 00:03:01,438 [11084:MainThread] pykka
okt 24 00:03:01 Desktop-Ubuntu mopidy[11084]:   Registered StreamBackend (urn:uuid:6e2145d3-9654-4367-b3b9-1cd342803ec2)
okt 24 00:03:01 Desktop-Ubuntu mopidy[11084]: DEBUG    2022-10-24 00:03:01,438 [11084:MainThread] pykka
okt 24 00:03:01 Desktop-Ubuntu mopidy[11084]:   Starting new HTTPS connection (1): music.youtube.com:443
okt 24 00:03:01 Desktop-Ubuntu mopidy[11084]: DEBUG    2022-10-24 00:03:01,437 [11084:YouTubeBackend-3 (_actor_loop)] urllib3.connectionpool
okt 24 00:03:01 Desktop-Ubuntu mopidy[11084]:   M3UBackend took 1ms
okt 24 00:03:01 Desktop-Ubuntu mopidy[11084]: TRACE    2022-10-24 00:03:01,434 [11084:MainThread] mopidy.internal.timer
okt 24 00:03:01 Desktop-Ubuntu mopidy[11084]:   Starting M3UBackend (urn:uuid:b85ffbbc-4d32-45da-8d00-d62a2c6b6b6b)
okt 24 00:03:01 Desktop-Ubuntu mopidy[11084]: DEBUG    2022-10-24 00:03:01,433 [11084:MainThread] pykka
okt 24 00:03:01 Desktop-Ubuntu mopidy[11084]:   Registered M3UBackend (urn:uuid:b85ffbbc-4d32-45da-8d00-d62a2c6b6b6b)
okt 24 00:03:01 Desktop-Ubuntu mopidy[11084]: DEBUG    2022-10-24 00:03:01,433 [11084:MainThread] pykka
okt 24 00:03:01 Desktop-Ubuntu mopidy[11084]:   FileBackend took 6ms
okt 24 00:03:01 Desktop-Ubuntu mopidy[11084]: TRACE    2022-10-24 00:03:01,433 [11084:MainThread] mopidy.internal.timer
okt 24 00:03:01 Desktop-Ubuntu mopidy[11084]:   Starting FileBackend (urn:uuid:94311e16-20a1-4deb-90d6-f1f6a9073403)
okt 24 00:03:01 Desktop-Ubuntu mopidy[11084]: DEBUG    2022-10-24 00:03:01,428 [11084:MainThread] pykka
okt 24 00:03:01 Desktop-Ubuntu mopidy[11084]:   Using YouTube Music API
okt 24 00:03:01 Desktop-Ubuntu mopidy[11084]: INFO     2022-10-24 00:03:01,428 [11084:YouTubeBackend-3 (_actor_loop)] mopidy_youtube
okt 24 00:03:01 Desktop-Ubuntu mopidy[11084]:   Registered FileBackend (urn:uuid:94311e16-20a1-4deb-90d6-f1f6a9073403)
okt 24 00:03:01 Desktop-Ubuntu mopidy[11084]: DEBUG    2022-10-24 00:03:01,427 [11084:MainThread] pykka
okt 24 00:03:01 Desktop-Ubuntu mopidy[11084]:   using jAPI
okt 24 00:03:01 Desktop-Ubuntu mopidy[11084]: INFO     2022-10-24 00:03:01,427 [11084:YouTubeBackend-3 (_actor_loop)] mopidy_youtube
okt 24 00:03:01 Desktop-Ubuntu mopidy[11084]:   Failed expanding path ($XDG_MUSIC_DIR) from file/media_dirs config value.
okt 24 00:03:01 Desktop-Ubuntu mopidy[11084]: DEBUG    2022-10-24 00:03:01,426 [11084:MainThread] mopidy.file.library
okt 24 00:03:01 Desktop-Ubuntu mopidy[11084]:   file caching enabled (at /var/cache/mopidy/youtube)
okt 24 00:03:01 Desktop-Ubuntu mopidy[11084]: INFO     2022-10-24 00:03:01,426 [11084:YouTubeBackend-3 (_actor_loop)] mopidy_youtube
okt 24 00:03:01 Desktop-Ubuntu mopidy[11084]:   Audio output set to "pulsesink server=127.0.0.1"
okt 24 00:03:01 Desktop-Ubuntu mopidy[11084]: INFO     2022-10-24 00:03:01,426 [11084:Audio-2 (_actor_loop)] mopidy.audio.actor
okt 24 00:03:01 Desktop-Ubuntu mopidy[11084]: AttributeError: 'YTMusic' object has no attribute 'headers'
okt 24 00:03:01 Desktop-Ubuntu mopidy[11084]:     if 'x-goog-visitor-id' not in self.headers:
okt 24 00:03:01 Desktop-Ubuntu mopidy[11084]:   File "/usr/local/lib/python3.10/dist-packages/ytmusicapi/ytmusic.py", line 98, in __init__
okt 24 00:03:01 Desktop-Ubuntu mopidy[11084]:     self.api = YTMusic(self._ytmusicapi_auth_json)
okt 24 00:03:01 Desktop-Ubuntu mopidy[11084]:   File "/usr/local/lib/python3.10/dist-packages/mopidy_ytmusic/backend.py", line 65, in __init__
okt 24 00:03:01 Desktop-Ubuntu mopidy[11084]:     obj = cls(*args, **kwargs)
okt 24 00:03:01 Desktop-Ubuntu mopidy[11084]:   File "/usr/lib/python3/dist-packages/pykka/_actor.py", line 91, in start
okt 24 00:03:01 Desktop-Ubuntu mopidy[11084]:     backend = backend_class.start(
okt 24 00:03:01 Desktop-Ubuntu mopidy[11084]:   File "/usr/lib/python3/dist-packages/mopidy/commands.py", line 412, in start_backends
okt 24 00:03:01 Desktop-Ubuntu mopidy[11084]:     yield
okt 24 00:03:01 Desktop-Ubuntu mopidy[11084]:   File "/usr/lib/python3/dist-packages/mopidy/commands.py", line 248, in _actor_error_handling
okt 24 00:03:01 Desktop-Ubuntu mopidy[11084]: Traceback (most recent call last):
okt 24 00:03:01 Desktop-Ubuntu mopidy[11084]:   Got un-handled exception from YTMusicBackend
okt 24 00:03:01 Desktop-Ubuntu mopidy[11084]: ERROR    2022-10-24 00:03:01,425 [11084:MainThread] mopidy.commands
okt 24 00:03:01 Desktop-Ubuntu mopidy[11084]:   LocalBackend took 3ms
okt 24 00:03:01 Desktop-Ubuntu mopidy[11084]: TRACE    2022-10-24 00:03:01,425 [11084:MainThread] mopidy.internal.timer
okt 24 00:03:01 Desktop-Ubuntu mopidy[11084]:   Starting LocalBackend (urn:uuid:ed94024c-c640-496f-9074-bb5bc92f9510)
okt 24 00:03:01 Desktop-Ubuntu mopidy[11084]: DEBUG    2022-10-24 00:03:01,422 [11084:MainThread] pykka
okt 24 00:03:01 Desktop-Ubuntu mopidy[11084]:   Registered LocalBackend (urn:uuid:ed94024c-c640-496f-9074-bb5bc92f9510)
okt 24 00:03:01 Desktop-Ubuntu mopidy[11084]: DEBUG    2022-10-24 00:03:01,422 [11084:MainThread] pykka
okt 24 00:03:01 Desktop-Ubuntu mopidy[11084]:   YouTubeBackend took 4ms
okt 24 00:03:01 Desktop-Ubuntu mopidy[11084]: TRACE    2022-10-24 00:03:01,421 [11084:MainThread] mopidy.internal.timer
okt 24 00:03:01 Desktop-Ubuntu mopidy[11084]:   Starting YouTubeBackend (urn:uuid:866fcb66-dfc9-4195-9f0e-e9f59e7f24b1)
okt 24 00:03:01 Desktop-Ubuntu mopidy[11084]: DEBUG    2022-10-24 00:03:01,418 [11084:MainThread] pykka
okt 24 00:03:01 Desktop-Ubuntu mopidy[11084]:   Registered YouTubeBackend (urn:uuid:866fcb66-dfc9-4195-9f0e-e9f59e7f24b1)
okt 24 00:03:01 Desktop-Ubuntu mopidy[11084]: DEBUG    2022-10-24 00:03:01,418 [11084:MainThread] pykka
okt 24 00:03:01 Desktop-Ubuntu mopidy[11084]:   Starting Mopidy backends: YouTubeBackend, LocalBackend, YTMusicBackend, FileBackend, M3UBackend, StreamBackend
okt 24 00:03:01 Desktop-Ubuntu mopidy[11084]: INFO     2022-10-24 00:03:01,416 [11084:MainThread] mopidy.commands
okt 24 00:03:01 Desktop-Ubuntu mopidy[11084]:   Starting Audio (urn:uuid:bc1b625b-5553-4af1-bbdf-f894fcc29130)
okt 24 00:03:01 Desktop-Ubuntu mopidy[11084]: DEBUG    2022-10-24 00:03:01,415 [11084:MainThread] pykka
okt 24 00:03:01 Desktop-Ubuntu mopidy[11084]:   Registered Audio (urn:uuid:bc1b625b-5553-4af1-bbdf-f894fcc29130)
okt 24 00:03:01 Desktop-Ubuntu mopidy[11084]: DEBUG    2022-10-24 00:03:01,415 [11084:MainThread] pykka
okt 24 00:03:01 Desktop-Ubuntu mopidy[11084]:   Starting Mopidy audio
okt 24 00:03:01 Desktop-Ubuntu mopidy[11084]: INFO     2022-10-24 00:03:01,415 [11084:MainThread] mopidy.commands
okt 24 00:03:01 Desktop-Ubuntu mopidy[11084]:   Mixer volume left unchanged
okt 24 00:03:01 Desktop-Ubuntu mopidy[11084]: DEBUG    2022-10-24 00:03:01,415 [11084:MainThread] mopidy.commands
okt 24 00:03:01 Desktop-Ubuntu mopidy[11084]:   Starting SoftwareMixer (urn:uuid:f2fbce52-7393-4acf-ba42-5742657cd376)
okt 24 00:03:01 Desktop-Ubuntu mopidy[11084]: DEBUG    2022-10-24 00:03:01,413 [11084:MainThread] pykka
okt 24 00:03:01 Desktop-Ubuntu mopidy[11084]:   Registered SoftwareMixer (urn:uuid:f2fbce52-7393-4acf-ba42-5742657cd376)
okt 24 00:03:01 Desktop-Ubuntu mopidy[11084]: DEBUG    2022-10-24 00:03:01,413 [11084:MainThread] pykka
okt 24 00:03:01 Desktop-Ubuntu mopidy[11084]:   Starting Mopidy mixer: SoftwareMixer
okt 24 00:03:01 Desktop-Ubuntu mopidy[11084]: INFO     2022-10-24 00:03:01,413 [11084:MainThread] mopidy.commands
okt 24 00:03:01 Desktop-Ubuntu mopidy[11084]:   Available Mopidy mixers: SoftwareMixer
okt 24 00:03:01 Desktop-Ubuntu mopidy[11084]: DEBUG    2022-10-24 00:03:01,413 [11084:MainThread] mopidy.commands
okt 24 00:03:01 Desktop-Ubuntu mopidy[11084]:   Disabled extensions: soundcloud
okt 24 00:03:01 Desktop-Ubuntu mopidy[11084]: INFO     2022-10-24 00:03:01,318 [11084:MainThread] mopidy.__main__
okt 24 00:03:01 Desktop-Ubuntu mopidy[11084]:   Enabled extensions: youtube, softwaremixer, http, m3u, local, iris, stream, ytmusic, file
okt 24 00:03:01 Desktop-Ubuntu mopidy[11084]: INFO     2022-10-24 00:03:01,318 [11084:MainThread] mopidy.__main__
okt 24 00:03:01 Desktop-Ubuntu mopidy[11084]:   Validating extension: stream
okt 24 00:03:01 Desktop-Ubuntu mopidy[11084]: DEBUG    2022-10-24 00:03:01,318 [11084:MainThread] mopidy.ext
okt 24 00:03:01 Desktop-Ubuntu mopidy[11084]:   Validating extension: softwaremixer
okt 24 00:03:01 Desktop-Ubuntu mopidy[11084]: DEBUG    2022-10-24 00:03:01,318 [11084:MainThread] mopidy.ext
okt 24 00:03:01 Desktop-Ubuntu mopidy[11084]:   Validating extension: m3u
okt 24 00:03:01 Desktop-Ubuntu mopidy[11084]: DEBUG    2022-10-24 00:03:01,318 [11084:MainThread] mopidy.ext
okt 24 00:03:01 Desktop-Ubuntu mopidy[11084]:   Validating extension: http
okt 24 00:03:01 Desktop-Ubuntu mopidy[11084]: DEBUG    2022-10-24 00:03:01,264 [11084:MainThread] mopidy.ext
okt 24 00:03:01 Desktop-Ubuntu mopidy[11084]:   Validating extension: file
okt 24 00:03:01 Desktop-Ubuntu mopidy[11084]: DEBUG    2022-10-24 00:03:01,264 [11084:MainThread] mopidy.ext
okt 24 00:03:01 Desktop-Ubuntu mopidy[11084]:   Validating extension: iris
okt 24 00:03:01 Desktop-Ubuntu mopidy[11084]: DEBUG    2022-10-24 00:03:01,255 [11084:MainThread] mopidy.ext
okt 24 00:03:01 Desktop-Ubuntu mopidy[11084]:   Validating extension: ytmusic
okt 24 00:03:01 Desktop-Ubuntu mopidy[11084]: DEBUG    2022-10-24 00:03:01,238 [11084:MainThread] mopidy.ext
okt 24 00:03:01 Desktop-Ubuntu mopidy[11084]:   Validating extension: soundcloud
okt 24 00:03:01 Desktop-Ubuntu mopidy[11084]: DEBUG    2022-10-24 00:03:01,212 [11084:MainThread] mopidy.ext
okt 24 00:03:01 Desktop-Ubuntu mopidy[11084]:   Validating extension: local
okt 24 00:03:01 Desktop-Ubuntu mopidy[11084]: DEBUG    2022-10-24 00:03:01,191 [11084:MainThread] mopidy.ext
okt 24 00:03:01 Desktop-Ubuntu mopidy[11084]:   Validating extension: youtube
okt 24 00:03:01 Desktop-Ubuntu mopidy[11084]: DEBUG    2022-10-24 00:03:01,139 [11084:MainThread] mopidy.ext
okt 24 00:03:01 Desktop-Ubuntu mopidy[11084]:   Ignoring config section 'jukebox' because no matching extension was found
okt 24 00:03:01 Desktop-Ubuntu mopidy[11084]: WARNING  2022-10-24 00:03:01,138 [11084:MainThread] mopidy.config
okt 24 00:03:01 Desktop-Ubuntu mopidy[11084]:   Loading config from command line options
okt 24 00:03:01 Desktop-Ubuntu mopidy[11084]: INFO     2022-10-24 00:03:01,134 [11084:MainThread] mopidy.config
okt 24 00:03:01 Desktop-Ubuntu mopidy[11084]:   Loading config from file:///etc/mopidy/mopidy.conf
okt 24 00:03:01 Desktop-Ubuntu mopidy[11084]: INFO     2022-10-24 00:03:01,134 [11084:MainThread] mopidy.config
okt 24 00:03:01 Desktop-Ubuntu mopidy[11084]:   Loading config from file:///usr/share/mopidy/conf.d/mopidy.conf
okt 24 00:03:01 Desktop-Ubuntu mopidy[11084]: INFO     2022-10-24 00:03:01,133 [11084:MainThread] mopidy.config
okt 24 00:03:01 Desktop-Ubuntu mopidy[11084]:   Loading config from builtin defaults
okt 24 00:03:01 Desktop-Ubuntu mopidy[11084]: INFO     2022-10-24 00:03:01,131 [11084:MainThread] mopidy.config
okt 24 00:03:01 Desktop-Ubuntu mopidy[11084]:   Fetching passwords from your keyring failed. Any passwords stored in the keyring will not be available. (org.freedesktop.DBus.Error.NotSupported: Unable to autolaunch a dbus-daemon without a $DISPLAY for X11)
okt 24 00:03:01 Desktop-Ubuntu mopidy[11084]: DEBUG    2022-10-24 00:03:01,131 [11084:MainThread] mopidy.config.keyring
okt 24 00:03:01 Desktop-Ubuntu mopidy[11084]:   Discovered extensions: youtube, local, soundcloud, ytmusic, iris, file, http, m3u, softwaremixer, stream
okt 24 00:03:01 Desktop-Ubuntu mopidy[11084]: DEBUG    2022-10-24 00:03:01,130 [11084:MainThread] mopidy.ext
okt 24 00:03:01 Desktop-Ubuntu mopidy[11084]:   Loaded extension: Mopidy-Stream 3.3.0
okt 24 00:03:01 Desktop-Ubuntu mopidy[11084]: DEBUG    2022-10-24 00:03:01,126 [11084:MainThread] mopidy.ext
okt 24 00:03:01 Desktop-Ubuntu mopidy[11084]:   Loading entry point: stream = mopidy.stream:Extension
okt 24 00:03:01 Desktop-Ubuntu mopidy[11084]: DEBUG    2022-10-24 00:03:01,126 [11084:MainThread] mopidy.ext
okt 24 00:03:01 Desktop-Ubuntu mopidy[11084]:   Loaded extension: Mopidy-SoftwareMixer 3.3.0
okt 24 00:03:01 Desktop-Ubuntu mopidy[11084]: DEBUG    2022-10-24 00:03:01,126 [11084:MainThread] mopidy.ext
okt 24 00:03:01 Desktop-Ubuntu mopidy[11084]:   Loading entry point: softwaremixer = mopidy.softwaremixer:Extension
okt 24 00:03:01 Desktop-Ubuntu mopidy[11084]: DEBUG    2022-10-24 00:03:01,125 [11084:MainThread] mopidy.ext
okt 24 00:03:01 Desktop-Ubuntu mopidy[11084]:   Loaded extension: Mopidy-M3U 3.3.0
okt 24 00:03:01 Desktop-Ubuntu mopidy[11084]: DEBUG    2022-10-24 00:03:01,125 [11084:MainThread] mopidy.ext
okt 24 00:03:01 Desktop-Ubuntu mopidy[11084]:   Loading entry point: m3u = mopidy.m3u:Extension
okt 24 00:03:01 Desktop-Ubuntu mopidy[11084]: DEBUG    2022-10-24 00:03:01,125 [11084:MainThread] mopidy.ext
okt 24 00:03:01 Desktop-Ubuntu mopidy[11084]:   Loaded extension: Mopidy-HTTP 3.3.0
okt 24 00:03:01 Desktop-Ubuntu mopidy[11084]: DEBUG    2022-10-24 00:03:01,125 [11084:MainThread] mopidy.ext
okt 24 00:03:01 Desktop-Ubuntu mopidy[11084]:   Loading entry point: http = mopidy.http:Extension
okt 24 00:03:01 Desktop-Ubuntu mopidy[11084]: DEBUG    2022-10-24 00:03:01,125 [11084:MainThread] mopidy.ext
okt 24 00:03:01 Desktop-Ubuntu mopidy[11084]:   Loaded extension: Mopidy-File 3.3.0
okt 24 00:03:01 Desktop-Ubuntu mopidy[11084]: DEBUG    2022-10-24 00:03:01,125 [11084:MainThread] mopidy.ext
okt 24 00:03:01 Desktop-Ubuntu mopidy[11084]:   Loading entry point: file = mopidy.file:Extension
okt 24 00:03:01 Desktop-Ubuntu mopidy[11084]: DEBUG    2022-10-24 00:03:01,124 [11084:MainThread] mopidy.ext
okt 24 00:03:01 Desktop-Ubuntu mopidy[11084]:   Loaded extension: Mopidy-Iris 3.64.1
okt 24 00:03:01 Desktop-Ubuntu mopidy[11084]: DEBUG    2022-10-24 00:03:01,122 [11084:MainThread] mopidy.ext
okt 24 00:03:01 Desktop-Ubuntu mopidy[11084]:   Loading entry point: iris = mopidy_iris:Extension
okt 24 00:03:01 Desktop-Ubuntu mopidy[11084]: DEBUG    2022-10-24 00:03:01,122 [11084:MainThread] mopidy.ext
okt 24 00:03:01 Desktop-Ubuntu mopidy[11084]:   Loaded extension: Mopidy-YTMusic 0.3.7
okt 24 00:03:01 Desktop-Ubuntu mopidy[11084]: DEBUG    2022-10-24 00:03:01,121 [11084:MainThread] mopidy.ext
okt 24 00:03:01 Desktop-Ubuntu mopidy[11084]:   Loading entry point: ytmusic = mopidy_ytmusic:Extension
okt 24 00:03:01 Desktop-Ubuntu mopidy[11084]: DEBUG    2022-10-24 00:03:01,120 [11084:MainThread] mopidy.ext
okt 24 00:03:01 Desktop-Ubuntu mopidy[11084]:   Loaded extension: Mopidy-SoundCloud 3.0.1
okt 24 00:03:01 Desktop-Ubuntu mopidy[11084]: DEBUG    2022-10-24 00:03:01,119 [11084:MainThread] mopidy.ext
okt 24 00:03:01 Desktop-Ubuntu mopidy[11084]:   Loading entry point: soundcloud = mopidy_soundcloud:Extension
okt 24 00:03:01 Desktop-Ubuntu mopidy[11084]: DEBUG    2022-10-24 00:03:01,118 [11084:MainThread] mopidy.ext
okt 24 00:03:01 Desktop-Ubuntu mopidy[11084]:   Loaded extension: Mopidy-Local 3.2.1
okt 24 00:03:01 Desktop-Ubuntu mopidy[11084]: DEBUG    2022-10-24 00:03:01,118 [11084:MainThread] mopidy.ext
okt 24 00:03:01 Desktop-Ubuntu mopidy[11084]:   Loading entry point: local = mopidy_local:Extension
okt 24 00:03:01 Desktop-Ubuntu mopidy[11084]: DEBUG    2022-10-24 00:03:01,107 [11084:MainThread] mopidy.ext
okt 24 00:03:01 Desktop-Ubuntu mopidy[11084]:   Loaded extension: Mopidy-YouTube 3.6.1
okt 24 00:03:01 Desktop-Ubuntu mopidy[11084]: DEBUG    2022-10-24 00:03:01,107 [11084:MainThread] mopidy.ext
okt 24 00:03:01 Desktop-Ubuntu mopidy[11084]:   Loading entry point: youtube = mopidy_youtube:Extension
okt 24 00:03:01 Desktop-Ubuntu mopidy[11084]: DEBUG    2022-10-24 00:03:01,106 [11084:MainThread] mopidy.ext
okt 24 00:03:01 Desktop-Ubuntu mopidy[11084]:   Starting Mopidy 3.3.0
okt 24 00:03:01 Desktop-Ubuntu mopidy[11084]: INFO     2022-10-24 00:03:01,103 [11084:MainThread] mopidy.__main__
okt 24 00:03:00 Desktop-Ubuntu systemd[1]: Started Mopidy music server.
okt 24 00:03:00 Desktop-Ubuntu systemd[1]: Starting Mopidy music server...
okt 24 00:03:00 Desktop-Ubuntu systemd[1]: Stopped Mopidy music server.
okt 24 00:03:00 Desktop-Ubuntu systemd[1]: mopidy.service: Deactivated successfully.
okt 24 00:03:00 Desktop-Ubuntu mopidy[10884]:   All actors stopped.
okt 24 00:03:00 Desktop-Ubuntu mopidy[10884]: DEBUG    2022-10-24 00:03:00,644 [10884:MainThread] mopidy.internal.process
okt 24 00:03:00 Desktop-Ubuntu mopidy[10884]:   Stopped SoftwareMixer (urn:uuid:6c5ac76e-5250-4e94-9ae9-93d5d4a4a235)
okt 24 00:03:00 Desktop-Ubuntu mopidy[10884]: DEBUG    2022-10-24 00:03:00,644 [10884:SoftwareMixer-1 (_actor_loop)] pykka
okt 24 00:03:00 Desktop-Ubuntu mopidy[10884]:   Unregistered SoftwareMixer (urn:uuid:6c5ac76e-5250-4e94-9ae9-93d5d4a4a235)
okt 24 00:03:00 Desktop-Ubuntu mopidy[10884]: DEBUG    2022-10-24 00:03:00,644 [10884:SoftwareMixer-1 (_actor_loop)] pykka
okt 24 00:03:00 Desktop-Ubuntu mopidy[10884]:   Stopping 1 instance(s) of SoftwareMixer
okt 24 00:03:00 Desktop-Ubuntu mopidy[10884]: DEBUG    2022-10-24 00:03:00,644 [10884:MainThread] mopidy.internal.process
okt 24 00:03:00 Desktop-Ubuntu mopidy[10884]:   Stopping Mopidy mixer
okt 24 00:03:00 Desktop-Ubuntu mopidy[10884]: INFO     2022-10-24 00:03:00,644 [10884:MainThread] mopidy.commands
okt 24 00:03:00 Desktop-Ubuntu mopidy[10884]:   Stopped Audio (urn:uuid:5842ce77-b215-4e36-8fcd-2ca108733d49)
okt 24 00:03:00 Desktop-Ubuntu mopidy[10884]: DEBUG    2022-10-24 00:03:00,643 [10884:Audio-2 (_actor_loop)] pykka
okt 24 00:03:00 Desktop-Ubuntu mopidy[10884]:   Unregistered Audio (urn:uuid:5842ce77-b215-4e36-8fcd-2ca108733d49)
okt 24 00:03:00 Desktop-Ubuntu mopidy[10884]: DEBUG    2022-10-24 00:03:00,643 [10884:Audio-2 (_actor_loop)] pykka
okt 24 00:03:00 Desktop-Ubuntu mopidy[10884]:   Stopping 1 instance(s) of Audio
okt 24 00:03:00 Desktop-Ubuntu mopidy[10884]: DEBUG    2022-10-24 00:03:00,643 [10884:MainThread] mopidy.internal.process
okt 24 00:03:00 Desktop-Ubuntu mopidy[10884]:   Stopping Mopidy audio
okt 24 00:03:00 Desktop-Ubuntu mopidy[10884]: INFO     2022-10-24 00:03:00,643 [10884:MainThread] mopidy.commands
okt 24 00:03:00 Desktop-Ubuntu mopidy[10884]:   Stopped StreamBackend (urn:uuid:d8d9e30d-3185-4fa5-82cf-374ee829d777)
okt 24 00:03:00 Desktop-Ubuntu mopidy[10884]: DEBUG    2022-10-24 00:03:00,643 [10884:StreamBackend-7 (_actor_loop)] pykka
okt 24 00:03:00 Desktop-Ubuntu mopidy[10884]:   Unregistered StreamBackend (urn:uuid:d8d9e30d-3185-4fa5-82cf-374ee829d777)
okt 24 00:03:00 Desktop-Ubuntu mopidy[10884]: DEBUG    2022-10-24 00:03:00,643 [10884:StreamBackend-7 (_actor_loop)] pykka
okt 24 00:03:00 Desktop-Ubuntu mopidy[10884]:   Stopping 1 instance(s) of StreamBackend
okt 24 00:03:00 Desktop-Ubuntu mopidy[10884]: DEBUG    2022-10-24 00:03:00,642 [10884:MainThread] mopidy.internal.process
okt 24 00:03:00 Desktop-Ubuntu mopidy[10884]:   Stopped M3UBackend (urn:uuid:0995b9b3-6fb5-451f-9e0b-4dfdea9411ea)
okt 24 00:03:00 Desktop-Ubuntu mopidy[10884]: DEBUG    2022-10-24 00:03:00,642 [10884:M3UBackend-6 (_actor_loop)] pykka
okt 24 00:03:00 Desktop-Ubuntu mopidy[10884]:   Unregistered M3UBackend (urn:uuid:0995b9b3-6fb5-451f-9e0b-4dfdea9411ea)
okt 24 00:03:00 Desktop-Ubuntu mopidy[10884]: DEBUG    2022-10-24 00:03:00,642 [10884:M3UBackend-6 (_actor_loop)] pykka
okt 24 00:03:00 Desktop-Ubuntu mopidy[10884]:   Stopping 1 instance(s) of M3UBackend
okt 24 00:03:00 Desktop-Ubuntu mopidy[10884]: DEBUG    2022-10-24 00:03:00,642 [10884:MainThread] mopidy.internal.process
okt 24 00:03:00 Desktop-Ubuntu mopidy[10884]:   Stopped FileBackend (urn:uuid:04066df1-a721-4ea7-ac62-cac11ac94f93)
okt 24 00:03:00 Desktop-Ubuntu mopidy[10884]: DEBUG    2022-10-24 00:03:00,641 [10884:FileBackend-5 (_actor_loop)] pykka
okt 24 00:03:00 Desktop-Ubuntu mopidy[10884]:   Unregistered FileBackend (urn:uuid:04066df1-a721-4ea7-ac62-cac11ac94f93)
okt 24 00:03:00 Desktop-Ubuntu mopidy[10884]: DEBUG    2022-10-24 00:03:00,641 [10884:FileBackend-5 (_actor_loop)] pykka
okt 24 00:03:00 Desktop-Ubuntu mopidy[10884]:   Stopping 1 instance(s) of FileBackend
okt 24 00:03:00 Desktop-Ubuntu mopidy[10884]: DEBUG    2022-10-24 00:03:00,641 [10884:MainThread] mopidy.internal.process
okt 24 00:03:00 Desktop-Ubuntu mopidy[10884]:   Stopped LocalBackend (urn:uuid:bd0e2eb0-4c71-4aac-a32b-d6b3330cb268)
okt 24 00:03:00 Desktop-Ubuntu mopidy[10884]: DEBUG    2022-10-24 00:03:00,641 [10884:LocalBackend-4 (_actor_loop)] pykka
okt 24 00:03:00 Desktop-Ubuntu mopidy[10884]:   Unregistered LocalBackend (urn:uuid:bd0e2eb0-4c71-4aac-a32b-d6b3330cb268)
okt 24 00:03:00 Desktop-Ubuntu mopidy[10884]: DEBUG    2022-10-24 00:03:00,641 [10884:LocalBackend-4 (_actor_loop)] pykka
okt 24 00:03:00 Desktop-Ubuntu mopidy[10884]:   Stopping 1 instance(s) of LocalBackend
okt 24 00:03:00 Desktop-Ubuntu mopidy[10884]: DEBUG    2022-10-24 00:03:00,641 [10884:MainThread] mopidy.internal.process
okt 24 00:03:00 Desktop-Ubuntu mopidy[10884]:   Stopped YouTubeBackend (urn:uuid:d459aeac-455e-4fb8-b351-747261e5c5b5)
okt 24 00:03:00 Desktop-Ubuntu mopidy[10884]: DEBUG    2022-10-24 00:03:00,640 [10884:YouTubeBackend-3 (_actor_loop)] pykka
okt 24 00:03:00 Desktop-Ubuntu mopidy[10884]:   Unregistered YouTubeBackend (urn:uuid:d459aeac-455e-4fb8-b351-747261e5c5b5)
okt 24 00:03:00 Desktop-Ubuntu mopidy[10884]: DEBUG    2022-10-24 00:03:00,640 [10884:YouTubeBackend-3 (_actor_loop)] pykka
okt 24 00:03:00 Desktop-Ubuntu mopidy[10884]:   Stopping 1 instance(s) of YouTubeBackend
okt 24 00:03:00 Desktop-Ubuntu mopidy[10884]: DEBUG    2022-10-24 00:03:00,640 [10884:MainThread] mopidy.internal.process
okt 24 00:03:00 Desktop-Ubuntu mopidy[10884]:   Stopping Mopidy backends
okt 24 00:03:00 Desktop-Ubuntu mopidy[10884]: INFO     2022-10-24 00:03:00,640 [10884:MainThread] mopidy.commands
okt 24 00:03:00 Desktop-Ubuntu mopidy[10884]:   Stopped Core (urn:uuid:b4e152f1-0bb2-4f64-a220-5f62d1182c00)
okt 24 00:03:00 Desktop-Ubuntu mopidy[10884]: DEBUG    2022-10-24 00:03:00,640 [10884:Core-8 (_actor_loop)] pykka
okt 24 00:03:00 Desktop-Ubuntu mopidy[10884]:   Unregistered Core (urn:uuid:b4e152f1-0bb2-4f64-a220-5f62d1182c00)
okt 24 00:03:00 Desktop-Ubuntu mopidy[10884]: DEBUG    2022-10-24 00:03:00,640 [10884:Core-8 (_actor_loop)] pykka
okt 24 00:03:00 Desktop-Ubuntu mopidy[10884]:   Stopping 1 instance(s) of Core
okt 24 00:03:00 Desktop-Ubuntu mopidy[10884]: DEBUG    2022-10-24 00:03:00,639 [10884:MainThread] mopidy.internal.process
okt 24 00:03:00 Desktop-Ubuntu mopidy[10884]:   Stopped HTTP server
okt 24 00:03:00 Desktop-Ubuntu mopidy[10884]: DEBUG    2022-10-24 00:03:00,639 [10884:HttpServer] mopidy.http.actor
okt 24 00:03:00 Desktop-Ubuntu mopidy[10884]:   Stopping Mopidy core
okt 24 00:03:00 Desktop-Ubuntu mopidy[10884]: INFO     2022-10-24 00:03:00,639 [10884:MainThread] mopidy.commands
okt 24 00:03:00 Desktop-Ubuntu mopidy[10884]:   Stopping HTTP server
okt 24 00:03:00 Desktop-Ubuntu mopidy[10884]: DEBUG    2022-10-24 00:03:00,639 [10884:HttpFrontend-13 (_actor_loop)] mopidy.http.actor
okt 24 00:03:00 Desktop-Ubuntu mopidy[10884]:   Zeroconf service 'Mopidy HTTP server on Desktop-Ubuntu' (_mopidy-http._tcp at []:6680): Unpublished
okt 24 00:03:00 Desktop-Ubuntu mopidy[10884]: DEBUG    2022-10-24 00:03:00,639 [10884:HttpFrontend-13 (_actor_loop)] mopidy.zeroconf
okt 24 00:03:00 Desktop-Ubuntu mopidy[10884]:   Zeroconf service 'Mopidy HTTP server on Desktop-Ubuntu' (_http._tcp at []:6680): Unpublished
okt 24 00:03:00 Desktop-Ubuntu mopidy[10884]: DEBUG    2022-10-24 00:03:00,638 [10884:HttpFrontend-13 (_actor_loop)] mopidy.zeroconf
okt 24 00:03:00 Desktop-Ubuntu mopidy[10884]:   Stopped HttpFrontend (urn:uuid:a82b6326-322d-4631-9baf-6e0b1b4ec975)
okt 24 00:03:00 Desktop-Ubuntu mopidy[10884]: DEBUG    2022-10-24 00:03:00,637 [10884:HttpFrontend-13 (_actor_loop)] pykka
okt 24 00:03:00 Desktop-Ubuntu mopidy[10884]:   Unregistered HttpFrontend (urn:uuid:a82b6326-322d-4631-9baf-6e0b1b4ec975)
okt 24 00:03:00 Desktop-Ubuntu mopidy[10884]: DEBUG    2022-10-24 00:03:00,637 [10884:HttpFrontend-13 (_actor_loop)] pykka
okt 24 00:03:00 Desktop-Ubuntu mopidy[10884]:   Stopping 1 instance(s) of HttpFrontend
okt 24 00:03:00 Desktop-Ubuntu mopidy[10884]: DEBUG    2022-10-24 00:03:00,637 [10884:MainThread] mopidy.internal.process
okt 24 00:03:00 Desktop-Ubuntu mopidy[10884]:   Stopping Iris
okt 24 00:03:00 Desktop-Ubuntu mopidy[10884]: INFO     2022-10-24 00:03:00,637 [10884:IrisFrontend-11 (_actor_loop)] mopidy_iris.core
okt 24 00:03:00 Desktop-Ubuntu mopidy[10884]:   Stopped IrisFrontend (urn:uuid:bb313491-800e-4ebe-8a5f-92f8cc77c8ec)
okt 24 00:03:00 Desktop-Ubuntu mopidy[10884]: DEBUG    2022-10-24 00:03:00,636 [10884:IrisFrontend-11 (_actor_loop)] pykka
okt 24 00:03:00 Desktop-Ubuntu mopidy[10884]:   Unregistered IrisFrontend (urn:uuid:bb313491-800e-4ebe-8a5f-92f8cc77c8ec)
okt 24 00:03:00 Desktop-Ubuntu mopidy[10884]: DEBUG    2022-10-24 00:03:00,636 [10884:IrisFrontend-11 (_actor_loop)] pykka
okt 24 00:03:00 Desktop-Ubuntu mopidy[10884]:   Stopping 1 instance(s) of IrisFrontend
okt 24 00:03:00 Desktop-Ubuntu mopidy[10884]: DEBUG    2022-10-24 00:03:00,636 [10884:MainThread] mopidy.internal.process
okt 24 00:03:00 Desktop-Ubuntu mopidy[10884]:   Stopped YouTubeCoreListener (urn:uuid:8c2897dc-3fc9-4fb4-9801-62164c2c48bf)
okt 24 00:03:00 Desktop-Ubuntu mopidy[10884]: DEBUG    2022-10-24 00:03:00,636 [10884:YouTubeCoreListener-10 (_actor_loop)] pykka
okt 24 00:03:00 Desktop-Ubuntu mopidy[10884]:   Unregistered YouTubeCoreListener (urn:uuid:8c2897dc-3fc9-4fb4-9801-62164c2c48bf)
okt 24 00:03:00 Desktop-Ubuntu mopidy[10884]: DEBUG    2022-10-24 00:03:00,636 [10884:YouTubeCoreListener-10 (_actor_loop)] pykka
okt 24 00:03:00 Desktop-Ubuntu mopidy[10884]:   Stopping 1 instance(s) of YouTubeCoreListener
okt 24 00:03:00 Desktop-Ubuntu mopidy[10884]: DEBUG    2022-10-24 00:03:00,636 [10884:MainThread] mopidy.internal.process
okt 24 00:03:00 Desktop-Ubuntu mopidy[10884]:   Stopped YouTubeAutoplayer (urn:uuid:f94e006b-2c4a-41c9-9870-86dbe88be934)
okt 24 00:03:00 Desktop-Ubuntu mopidy[10884]: DEBUG    2022-10-24 00:03:00,636 [10884:YouTubeAutoplayer-9 (_actor_loop)] pykka
okt 24 00:03:00 Desktop-Ubuntu mopidy[10884]:   Unregistered YouTubeAutoplayer (urn:uuid:f94e006b-2c4a-41c9-9870-86dbe88be934)
okt 24 00:03:00 Desktop-Ubuntu mopidy[10884]: DEBUG    2022-10-24 00:03:00,636 [10884:YouTubeAutoplayer-9 (_actor_loop)] pykka
okt 24 00:03:00 Desktop-Ubuntu mopidy[10884]:   Stopping 1 instance(s) of YouTubeAutoplayer
okt 24 00:03:00 Desktop-Ubuntu mopidy[10884]: DEBUG    2022-10-24 00:03:00,635 [10884:MainThread] mopidy.internal.process
okt 24 00:03:00 Desktop-Ubuntu mopidy[10884]:   Stopping Mopidy frontends
okt 24 00:03:00 Desktop-Ubuntu mopidy[10884]: INFO     2022-10-24 00:03:00,635 [10884:MainThread] mopidy.commands
okt 24 00:03:00 Desktop-Ubuntu mopidy[10884]:   GLib mainloop got SIGTERM. Exiting...
okt 24 00:03:00 Desktop-Ubuntu mopidy[10884]: INFO     2022-10-24 00:03:00,635 [10884:MainThread] mopidy.commands
okt 24 00:03:00 Desktop-Ubuntu systemd[1]: Stopping Mopidy music server...
okt 24 00:01:10 Desktop-Ubuntu mopidy[10884]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 15, "result": [{"__model__": "Ref", "uri": "file:///var/lib/mopidy", "name": "Files", "type": "directory"}, {"__model__": "Ref", "uri": "local:directory", "name": "Local media", "type": "directory"}, {"__model__": "Ref", "uri": "youtube:browse", "name": "YouTube", "type": "directory"}]}'
okt 24 00:01:10 Desktop-Ubuntu mopidy[10884]: DEBUG    2022-10-24 00:01:10,299 [10884:HttpServer] mopidy.http.handlers
okt 24 00:01:10 Desktop-Ubuntu mopidy[10884]:   Received WebSocket message from 127.0.0.1: '{"method":"core.library.browse","params":{"uri":null},"jsonrpc":"2.0","id":15}'
okt 24 00:01:10 Desktop-Ubuntu mopidy[10884]: DEBUG    2022-10-24 00:01:10,297 [10884:HttpServer] mopidy.http.handlers
okt 24 00:01:08 Desktop-Ubuntu mopidy[10884]:   200 GET /iris/library/browse/YouTube/null (127.0.0.1) 0.69ms
okt 24 00:01:08 Desktop-Ubuntu mopidy[10884]: INFO     2022-10-24 00:01:08,004 [10884:HttpServer] tornado.access
okt 24 00:01:07 Desktop-Ubuntu mopidy[10884]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 14, "result": [{"__model__": "Ref", "uri": "youtube:channel:root", "name": "My Youtube playlists", "type": "directory"}, {"__model__": "Ref", "uri": "youtube:channel:artists", "name": "My Youtube artists", "type": "directory"}]}'
okt 24 00:01:07 Desktop-Ubuntu mopidy[10884]: DEBUG    2022-10-24 00:01:07,888 [10884:HttpServer] mopidy.http.handlers
okt 24 00:01:07 Desktop-Ubuntu mopidy[10884]:   Received WebSocket message from 127.0.0.1: '{"method":"core.library.browse","params":{"uri":"youtube:browse"},"jsonrpc":"2.0","id":14}'
okt 24 00:01:07 Desktop-Ubuntu mopidy[10884]: DEBUG    2022-10-24 00:01:07,887 [10884:HttpServer] mopidy.http.handlers
okt 24 00:01:07 Desktop-Ubuntu mopidy[10884]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 13, "result": {"youtube:browse": []}}'
okt 24 00:01:07 Desktop-Ubuntu mopidy[10884]: DEBUG    2022-10-24 00:01:07,830 [10884:HttpServer] mopidy.http.handlers
okt 24 00:01:07 Desktop-Ubuntu mopidy[10884]:   Cannot load youtube:browse
okt 24 00:01:07 Desktop-Ubuntu mopidy[10884]: ERROR    2022-10-24 00:01:07,829 [10884:YouTubeBackend-3 (_actor_loop)] mopidy_youtube
okt 24 00:01:07 Desktop-Ubuntu mopidy[10884]:   youtube LibraryProvider.lookup "youtube:browse"
okt 24 00:01:07 Desktop-Ubuntu mopidy[10884]: DEBUG    2022-10-24 00:01:07,829 [10884:YouTubeBackend-3 (_actor_loop)] mopidy_youtube
okt 24 00:01:07 Desktop-Ubuntu mopidy[10884]:   Received WebSocket message from 127.0.0.1: '{"method":"core.library.lookup","params":{"uris":["youtube:browse"]},"jsonrpc":"2.0","id":13}'
okt 24 00:01:07 Desktop-Ubuntu mopidy[10884]: DEBUG    2022-10-24 00:01:07,829 [10884:HttpServer] mopidy.http.handlers
okt 24 00:01:06 Desktop-Ubuntu mopidy[10884]:   304 GET /iris/assets/backgrounds/browse-folders.jpg (127.0.0.1) 0.82ms
okt 24 00:01:06 Desktop-Ubuntu mopidy[10884]: INFO     2022-10-24 00:01:06,329 [10884:HttpServer] tornado.access
okt 24 00:01:06 Desktop-Ubuntu mopidy[10884]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 12, "result": [{"__model__": "Ref", "uri": "file:///var/lib/mopidy", "name": "Files", "type": "directory"}, {"__model__": "Ref", "uri": "local:directory", "name": "Local media", "type": "directory"}, {"__model__": "Ref", "uri": "youtube:browse", "name": "YouTube", "type": "directory"}]}'
okt 24 00:01:06 Desktop-Ubuntu mopidy[10884]: DEBUG    2022-10-24 00:01:06,241 [10884:HttpServer] mopidy.http.handlers
okt 24 00:01:06 Desktop-Ubuntu mopidy[10884]:   Received WebSocket message from 127.0.0.1: '{"method":"core.library.browse","params":{"uri":null},"jsonrpc":"2.0","id":12}'
okt 24 00:01:06 Desktop-Ubuntu mopidy[10884]: DEBUG    2022-10-24 00:01:06,233 [10884:HttpServer] mopidy.http.handlers
okt 24 00:01:06 Desktop-Ubuntu mopidy[10884]:   {'id': 166656246547698, 'jsonrpc': '2.0', 'method': 'get_version', 'result': {'version': {'current': '3.64.1', 'latest': '3.64.1', 'is_root': False, 'upgrade_available': False}}, 'recipient': 'OGNDS36QOQ1X'}
okt 24 00:01:06 Desktop-Ubuntu mopidy[10884]: DEBUG    2022-10-24 00:01:06,034 [10884:HttpServer] mopidy_iris.core
okt 24 00:01:05 Desktop-Ubuntu mopidy[10884]:   Iris websocket message received: {"jsonrpc":"2.0","id":166656246547698,"method":"get_version"}
okt 24 00:01:05 Desktop-Ubuntu mopidy[10884]: DEBUG    2022-10-24 00:01:05,477 [10884:HttpServer] mopidy_iris.handlers
okt 24 00:01:05 Desktop-Ubuntu mopidy[10884]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 11, "result": null}'
okt 24 00:01:05 Desktop-Ubuntu mopidy[10884]: DEBUG    2022-10-24 00:01:05,056 [10884:HttpServer] mopidy.http.handlers
okt 24 00:01:05 Desktop-Ubuntu mopidy[10884]:   Received WebSocket message from 127.0.0.1: '{"method":"core.playback.get_stream_title","params":{},"jsonrpc":"2.0","id":11}'
okt 24 00:01:05 Desktop-Ubuntu mopidy[10884]: DEBUG    2022-10-24 00:01:05,056 [10884:HttpServer] mopidy.http.handlers
okt 24 00:01:05 Desktop-Ubuntu mopidy[10884]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 10, "result": ["file", "http", "https", "local", "m3u", "rtsp", "youtube", "yt"]}'
okt 24 00:01:05 Desktop-Ubuntu mopidy[10884]: DEBUG    2022-10-24 00:01:05,056 [10884:HttpServer] mopidy.http.handlers
okt 24 00:01:05 Desktop-Ubuntu mopidy[10884]:   Received WebSocket message from 127.0.0.1: '{"method":"core.get_uri_schemes","params":{},"jsonrpc":"2.0","id":10}'
okt 24 00:01:05 Desktop-Ubuntu mopidy[10884]: DEBUG    2022-10-24 00:01:05,055 [10884:HttpServer] mopidy.http.handlers
okt 24 00:01:05 Desktop-Ubuntu mopidy[10884]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 9, "result": 0}'
okt 24 00:01:05 Desktop-Ubuntu mopidy[10884]: DEBUG    2022-10-24 00:01:05,055 [10884:HttpServer] mopidy.http.handlers
okt 24 00:01:05 Desktop-Ubuntu mopidy[10884]:   Received WebSocket message from 127.0.0.1: '{"method":"core.playback.get_time_position","params":{},"jsonrpc":"2.0","id":9}'
okt 24 00:01:05 Desktop-Ubuntu mopidy[10884]: DEBUG    2022-10-24 00:01:05,054 [10884:HttpServer] mopidy.http.handlers
okt 24 00:01:05 Desktop-Ubuntu mopidy[10884]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 8, "result": []}'
okt 24 00:01:05 Desktop-Ubuntu mopidy[10884]: DEBUG    2022-10-24 00:01:05,054 [10884:HttpServer] mopidy.http.handlers
okt 24 00:01:05 Desktop-Ubuntu mopidy[10884]:   Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_tl_tracks","params":{},"jsonrpc":"2.0","id":8}'
okt 24 00:01:05 Desktop-Ubuntu mopidy[10884]: DEBUG    2022-10-24 00:01:05,053 [10884:HttpServer] mopidy.http.handlers
okt 24 00:01:05 Desktop-Ubuntu mopidy[10884]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 7, "result": false}'
okt 24 00:01:05 Desktop-Ubuntu mopidy[10884]: DEBUG    2022-10-24 00:01:05,053 [10884:HttpServer] mopidy.http.handlers
okt 24 00:01:05 Desktop-Ubuntu mopidy[10884]:   Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_repeat","params":{},"jsonrpc":"2.0","id":7}'
okt 24 00:01:05 Desktop-Ubuntu mopidy[10884]: DEBUG    2022-10-24 00:01:05,052 [10884:HttpServer] mopidy.http.handlers
okt 24 00:01:05 Desktop-Ubuntu mopidy[10884]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 6, "result": false}'
okt 24 00:01:05 Desktop-Ubuntu mopidy[10884]: DEBUG    2022-10-24 00:01:05,052 [10884:HttpServer] mopidy.http.handlers
okt 24 00:01:05 Desktop-Ubuntu mopidy[10884]:   Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_random","params":{},"jsonrpc":"2.0","id":6}'
okt 24 00:01:05 Desktop-Ubuntu mopidy[10884]: DEBUG    2022-10-24 00:01:05,052 [10884:HttpServer] mopidy.http.handlers
okt 24 00:01:05 Desktop-Ubuntu mopidy[10884]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 5, "result": false}'
okt 24 00:01:05 Desktop-Ubuntu mopidy[10884]: DEBUG    2022-10-24 00:01:05,051 [10884:HttpServer] mopidy.http.handlers
okt 24 00:01:05 Desktop-Ubuntu mopidy[10884]:   Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_consume","params":{},"jsonrpc":"2.0","id":5}'
okt 24 00:01:05 Desktop-Ubuntu mopidy[10884]: DEBUG    2022-10-24 00:01:05,051 [10884:HttpServer] mopidy.http.handlers
okt 24 00:01:05 Desktop-Ubuntu mopidy[10884]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 4, "result": false}'
okt 24 00:01:05 Desktop-Ubuntu mopidy[10884]: DEBUG    2022-10-24 00:01:05,050 [10884:HttpServer] mopidy.http.handlers
okt 24 00:01:05 Desktop-Ubuntu mopidy[10884]:   Received WebSocket message from 127.0.0.1: '{"method":"core.mixer.get_mute","params":{},"jsonrpc":"2.0","id":4}'
okt 24 00:01:05 Desktop-Ubuntu mopidy[10884]: DEBUG    2022-10-24 00:01:05,050 [10884:HttpServer] mopidy.http.handlers
okt 24 00:01:05 Desktop-Ubuntu mopidy[10884]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 3, "result": 100}'
okt 24 00:01:05 Desktop-Ubuntu mopidy[10884]: DEBUG    2022-10-24 00:01:05,049 [10884:HttpServer] mopidy.http.handlers
okt 24 00:01:05 Desktop-Ubuntu mopidy[10884]:   Received WebSocket message from 127.0.0.1: '{"method":"core.mixer.get_volume","params":{},"jsonrpc":"2.0","id":3}'
okt 24 00:01:05 Desktop-Ubuntu mopidy[10884]: DEBUG    2022-10-24 00:01:05,048 [10884:HttpServer] mopidy.http.handlers
okt 24 00:01:05 Desktop-Ubuntu mopidy[10884]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 2, "result": "stopped"}'
okt 24 00:01:05 Desktop-Ubuntu mopidy[10884]: DEBUG    2022-10-24 00:01:05,048 [10884:HttpServer] mopidy.http.handlers
okt 24 00:01:05 Desktop-Ubuntu mopidy[10884]:   Received WebSocket message from 127.0.0.1: '{"method":"core.playback.get_state","params":{},"jsonrpc":"2.0","id":2}'
okt 24 00:01:05 Desktop-Ubuntu mopidy[10884]: DEBUG    2022-10-24 00:01:05,047 [10884:HttpServer] mopidy.http.handlers
okt 24 00:01:05 Desktop-Ubuntu mopidy[10884]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 1, "result": null}'
okt 24 00:01:05 Desktop-Ubuntu mopidy[10884]: DEBUG    2022-10-24 00:01:05,047 [10884:HttpServer] mopidy.http.handlers
okt 24 00:01:05 Desktop-Ubuntu mopidy[10884]:   Received WebSocket message from 127.0.0.1: '{"method":"core.playback.get_current_tl_track","params":{},"jsonrpc":"2.0","id":1}'
okt 24 00:01:05 Desktop-Ubuntu mopidy[10884]: DEBUG    2022-10-24 00:01:05,046 [10884:HttpServer] mopidy.http.handlers
okt 24 00:01:04 Desktop-Ubuntu mopidy[10884]:   {'id': 166656246497562, 'jsonrpc': '2.0', 'method': 'get_queue_metadata', 'result': {'queue_metadata': {}}, 'recipient': 'OGNDS36QOQ1X'}
okt 24 00:01:04 Desktop-Ubuntu mopidy[10884]: DEBUG    2022-10-24 00:01:04,977 [10884:HttpServer] mopidy_iris.core
okt 24 00:01:04 Desktop-Ubuntu mopidy[10884]:   Iris websocket message received: {"jsonrpc":"2.0","id":166656246497562,"method":"get_queue_metadata"}
okt 24 00:01:04 Desktop-Ubuntu mopidy[10884]: DEBUG    2022-10-24 00:01:04,977 [10884:HttpServer] mopidy_iris.handlers
okt 24 00:01:04 Desktop-Ubuntu mopidy[10884]:   {'id': 16665624649748, 'jsonrpc': '2.0', 'method': 'get_pinned', 'result': {'pinned': []}, 'recipient': 'OGNDS36QOQ1X'}
okt 24 00:01:04 Desktop-Ubuntu mopidy[10884]: DEBUG    2022-10-24 00:01:04,975 [10884:HttpServer] mopidy_iris.core
okt 24 00:01:04 Desktop-Ubuntu mopidy[10884]:   Iris websocket message received: {"jsonrpc":"2.0","id":16665624649748,"method":"get_pinned"}
okt 24 00:01:04 Desktop-Ubuntu mopidy[10884]: DEBUG    2022-10-24 00:01:04,975 [10884:HttpServer] mopidy_iris.handlers
okt 24 00:01:04 Desktop-Ubuntu mopidy[10884]:   {'id': 166656246497345, 'jsonrpc': '2.0', 'method': 'get_commands', 'result': {'commands': {}}, 'recipient': 'OGNDS36QOQ1X'}
okt 24 00:01:04 Desktop-Ubuntu mopidy[10884]: DEBUG    2022-10-24 00:01:04,975 [10884:HttpServer] mopidy_iris.core
okt 24 00:01:04 Desktop-Ubuntu mopidy[10884]:   Iris websocket message received: {"jsonrpc":"2.0","id":166656246497345,"method":"get_commands"}
okt 24 00:01:04 Desktop-Ubuntu mopidy[10884]: DEBUG    2022-10-24 00:01:04,974 [10884:HttpServer] mopidy_iris.handlers
okt 24 00:01:04 Desktop-Ubuntu mopidy[10884]:   {'id': 16665624649725, 'jsonrpc': '2.0', 'method': 'get_radio', 'result': {'radio': {'enabled': 0, 'seed_artists': [], 'seed_genres': [], 'seed_tracks': [], 'results': []}}, 'recipient': 'OGNDS36QOQ1X'}
okt 24 00:01:04 Desktop-Ubuntu mopidy[10884]: DEBUG    2022-10-24 00:01:04,974 [10884:HttpServer] mopidy_iris.core
okt 24 00:01:04 Desktop-Ubuntu mopidy[10884]:   Iris websocket message received: {"jsonrpc":"2.0","id":16665624649725,"method":"get_radio"}
okt 24 00:01:04 Desktop-Ubuntu mopidy[10884]: DEBUG    2022-10-24 00:01:04,974 [10884:HttpServer] mopidy_iris.handlers
okt 24 00:01:04 Desktop-Ubuntu mopidy[10884]:   {'id': 166656246497173, 'jsonrpc': '2.0', 'method': 'get_shared_config', 'result': {'shared_config': {}}, 'recipient': 'OGNDS36QOQ1X'}
okt 24 00:01:04 Desktop-Ubuntu mopidy[10884]: DEBUG    2022-10-24 00:01:04,974 [10884:HttpServer] mopidy_iris.core
okt 24 00:01:04 Desktop-Ubuntu mopidy[10884]:   Iris websocket message received: {"jsonrpc":"2.0","id":166656246497173,"method":"get_shared_config"}
okt 24 00:01:04 Desktop-Ubuntu mopidy[10884]: DEBUG    2022-10-24 00:01:04,974 [10884:HttpServer] mopidy_iris.handlers
okt 24 00:01:04 Desktop-Ubuntu mopidy[10884]:   {'id': 166656246497021, 'jsonrpc': '2.0', 'method': 'get_config', 'result': {'config': {'is_root': False, 'spotify_username': False, 'country': 'NZ', 'locale': 'en_NZ', 'snapcast_enabled': True, 'snapcast_host': 'localhost', 'snapcast_port': '1780', 'snapcast_ssl': False, 'snapcast_stream': 'Default', 'spotify_authorization_url': 'https://jamesbarnsley.co.nz/iris/auth_spotify.php', 'lastfm_authorization_url': 'https://jamesbarnsley.co.nz/iris/auth_lastfm.php', 'genius_authorization_url': 'https://jamesbarnsley.co.nz/iris/auth_genius.php', 'shared_config': {}}}, 'recipient': 'OGNDS36QOQ1X'}
okt 24 00:01:04 Desktop-Ubuntu mopidy[10884]: DEBUG    2022-10-24 00:01:04,973 [10884:HttpServer] mopidy_iris.core
okt 24 00:01:04 Desktop-Ubuntu mopidy[10884]:   Iris websocket message received: {"jsonrpc":"2.0","id":166656246497021,"method":"get_config"}
okt 24 00:01:04 Desktop-Ubuntu mopidy[10884]: DEBUG    2022-10-24 00:01:04,973 [10884:HttpServer] mopidy_iris.handlers
okt 24 00:01:04 Desktop-Ubuntu mopidy[10884]:   {'id': 16665624649693, 'jsonrpc': '2.0', 'method': 'update_connection', 'result': {'connection': {'connection_id': 'OGNDS36QOQ1X', 'ip': '127.0.0.1', 'created': '2022-10-24 00:01:04', 'username': 166656148284185, 'client_id': 166656148284193}}, 'recipient': 'OGNDS36QOQ1X'}
okt 24 00:01:04 Desktop-Ubuntu mopidy[10884]: DEBUG    2022-10-24 00:01:04,973 [10884:HttpServer] mopidy_iris.core
okt 24 00:01:04 Desktop-Ubuntu mopidy[10884]:   {'method': 'connection_changed', 'params': {'connection': {'connection_id': 'OGNDS36QOQ1X', 'ip': '127.0.0.1', 'created': '2022-10-24 00:01:04', 'username': 166656148284185, 'client_id': 166656148284193}}}
okt 24 00:01:04 Desktop-Ubuntu mopidy[10884]: DEBUG    2022-10-24 00:01:04,973 [10884:HttpServer] mopidy_iris.core
okt 24 00:01:04 Desktop-Ubuntu mopidy[10884]:   Iris websocket message received: {"jsonrpc":"2.0","id":16665624649693,"method":"update_connection","params":{"username":166656148284185,"client_id":166656148284193}}
okt 24 00:01:04 Desktop-Ubuntu mopidy[10884]: DEBUG    2022-10-24 00:01:04,973 [10884:HttpServer] mopidy_iris.handlers
okt 24 00:01:04 Desktop-Ubuntu mopidy[10884]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 0, "result": {"core.get_uri_schemes": {"description": "Get list of URI schemes we can handle", "params": []}, "core.get_version": {"description": "Get version of the Mopidy core API", "params": []}, "core.history.get_history": {"description": "Get the track history.\\n\\nThe timestamps are milliseconds since epoch.\\n\\n:returns: the track history\\n:rtype: list of (timestamp, :class:`mopidy.models.Ref`) tuples", "params": []}, "core.history.get_length": {"description": "Get the number of tracks in the history.\\n\\n:returns: the history length\\n:rtype: int", "params": []}, "core.library.browse": {"description": "Browse directories and tracks at the given ``uri``.\\n\\n``uri`` is a string which represents some directory belonging to a\\nbackend. To get the intial root directories for backends pass\\n:class:`None` as the URI.\\n\\nReturns a list of :class:`mopidy.models.Ref` objects for the\\ndirectories and tracks at the given ``uri``.\\n\\nThe :class:`~mopidy.models.Ref` objects representing tracks keep the\\ntrack\'s original URI. A matching pair of objects can look like this::\\n\\n    Track(uri=\'dummy:/foo.mp3\', name=\'foo\', artists=..., album=...)\\n    Ref.track(uri=\'dummy:/foo.mp3\', name=\'foo\')\\n\\nThe :class:`~mopidy.models.Ref` objects representing directories have\\nbackend specific URIs. These are opaque values, so no one but the\\nbackend that created them should try and derive any meaning from them.\\nThe only valid exception to this is checking the scheme, as it is used\\nto route browse requests to the correct backend.\\n\\nFor example, the dummy library\'s ``/bar`` directory could be returned\\nlike this::\\n\\n    Ref.directory(uri=\'dummy:directory:/bar\', name=\'bar\')\\n\\n:param string uri: URI to browse\\n:rtype: list of :class:`mopidy.models.Ref`\\n\\n.. versionadded:: 0.18", "params": [{"name": "uri"}]}, "core.library.get_distinct": {"description": "List distinct values for a given field from the library.\\n\\nThis has mainly been added to support the list commands the MPD\\nprotocol supports in a more sane fashion. Other frontends are not\\nrecommended to use this method.\\n\\n:param string field: Any one of ``uri``, ``track_name``, ``album``,\\n    ``artist``, ``albumartist``, ``composer``, ``performer``,\\n    ``track_no``, ``genre``, ``date``, ``comment``, ``disc_no``,\\n    ``musicbrainz_albumid``, ``musicbrainz_artistid``, or\\n    ``musicbrainz_trackid``.\\n:param dict query: Query to use for limiting results, see\\n    :meth:`search` for details about the query format.\\n:rtype: set of values corresponding to the requested field type.\\n\\n.. versionadded:: 1.0", "params": [{"name": "field"}, {"name": "query", "default": null}]}, "core.library.get_images": {"description": "Lookup the images for the given URIs\\n\\nBackends can use this to return image URIs for any URI they know about\\nbe it tracks, albums, playlists. The lookup result is a dictionary\\nmapping the provided URIs to lists of images.\\n\\nUnknown URIs or URIs the corresponding backend couldn\'t find anything\\nfor will simply return an empty list for that URI.\\n\\n:param uris: list of URIs to find images for\\n:type uris: list of string\\n:rtype: {uri: tuple of :class:`mopidy.models.Image`}\\n\\n.. versionadded:: 1.0", "params": [{"name": "uris"}]}, "core.library.lookup": {"description": "Lookup the given URIs.\\n\\nIf the URI expands to multiple tracks, the returned list will contain\\nthem all.\\n\\n:param uris: track URIs\\n:type uris: list of string\\n:rtype: {uri: list of :class:`mopidy.models.Track`}", "params": [{"name": "uris"}]}, "core.library.refresh": {"description": "Refresh library. Limit to URI and below if an URI is given.\\n\\n:param uri: directory or track URI\\n:type uri: string", "params": [{"name": "uri", "default": null}]}, "core.library.search": {"description": "Search the library for tracks where ``field`` contains ``values``.\\n\\n``field`` can be one of ``uri``, ``track_name``, ``album``, ``artist``,\\n``albumartist``, ``composer``, ``performer``, ``track_no``, ``genre``,\\n``date``, ``comment``, ``disc_no``, ``musicbrainz_albumid``,\\n``musicbrainz_artistid``, ``musicbrainz_trackid`` or ``any``.\\n\\nIf ``uris`` is given, the search is limited to results from within the\\nURI roots. For example passing ``uris=[\'file:\']`` will limit the search\\nto the local backend.\\n\\nExamples::\\n\\n    # Returns results matching \'a\' in any backend\\n    search({\'any\': [\'a\']})\\n\\n    # Returns results matching artist \'xyz\' in any backend\\n    search({\'artist\': [\'xyz\']})\\n\\n    # Returns results matching \'a\' and \'b\' and artist \'xyz\' in any\\n    # backend\\n    search({\'any\': [\'a\', \'b\'], \'artist\': [\'xyz\']})\\n\\n    # Returns results matching \'a\' if within the given URI roots\\n    # \\"file:///media/music\\" and \\"spotify:\\"\\n    search({\'any\': [\'a\']}, uris=[\'file:///media/music\', \'spotify:\'])\\n\\n    # Returns results matching artist \'xyz\' and \'abc\' in any backend\\n    search({\'artist\': [\'xyz\', \'abc\']})\\n\\n:param query: one or more queries to search for\\n:type query: dict\\n:param uris: zero or more URI roots to limit the search to\\n:type uris: list of string or :class:`None`\\n:param exact: if the search should use exact matching\\n:type exact: :class:`bool`\\n:rtype: list of :class:`mopidy.models.SearchResult`\\n\\n.. versionadded:: 1.0\\n    The ``exact`` keyword argument.", "params": [{"name": "query"}, {"name": "uris", "default": null}, {"name": "exact", "default": false}]}, "core.mixer.get_mute": {"description": "Get mute state.\\n\\n:class:`True` if muted, :class:`False` unmuted, :class:`None` if\\nunknown.", "params": []}, "core.mixer.get_volume": {"description": "Get the volume.\\n\\nInteger in range [0..100] or :class:`None` if unknown.\\n\\nThe volume scale is linear.", "params": []}, "core.mixer.set_mute": {"description": "Set mute state.\\n\\n:class:`True` to mute, :class:`False` to unmute.\\n\\nReturns :class:`True` if call is successful, otherwise :class:`False`.", "params": [{"name": "mute"}]}, "core.mixer.set_volume": {"description": "Set the volume.\\n\\nThe volume is defined as an integer in range [0..100].\\n\\nThe volume scale is linear.\\n\\nReturns :class:`True` if call is successful, otherwise :class:`False`.", "params": [{"name": "volume"}]}, "core.playback.get_current_tl_track": {"description": "Get the currently playing or selected track.\\n\\nReturns a :class:`mopidy.models.TlTrack` or :class:`None`.", "params": []}, "core.playback.get_current_tlid": {"description": "Get the currently playing or selected TLID.\\n\\nExtracted from :meth:`get_current_tl_track` for convenience.\\n\\nReturns a :class:`int` or :class:`None`.\\n\\n.. versionadded:: 1.1", "params": []}, "core.playback.get_current_track": {"description": "Get the currently playing or selected track.\\n\\nExtracted from :meth:`get_current_tl_track` for convenience.\\n\\nReturns a :class:`mopidy.models.Track` or :class:`None`.", "params": []}, "core.playback.get_state": {"description": "Get The playback state.", "params": []}, "core.playback.get_stream_title": {"description": "Get the current stream title or :class:`None`.", "params": []}, "core.playback.get_time_position": {"description": "Get time position in milliseconds.", "params": []}, "core.playback.next": {"description": "Change to the next track.\\n\\nThe current playback state will be kept. If it was playing, playing\\nwill continue. If it was paused, it will still be paused, etc.", "params": []}, "core.playback.pause": {"description": "Pause playback.", "params": []}, "core.playback.play": {"description": "Play the given track, or if the given tl_track and tlid is\\n:class:`None`, play the currently active track.\\n\\nNote that the track **must** already be in the tracklist.\\n\\n.. deprecated:: 3.0\\n    The ``tl_track`` argument. Use ``tlid`` instead.\\n\\n:param tl_track: track to play\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:param tlid: TLID of the track to play\\n:type tlid: :class:`int` or :class:`None`", "params": [{"name": "tl_track", "default": null}, {"name": "tlid", "default": null}]}, "core.playback.previous": {"description": "Change to the previous track.\\n\\nThe current playback state will be kept. If it was playing, playing\\nwill continue. If it was paused, it will still be paused, etc.", "params": []}, "core.playback.resume": {"description": "If paused, resume playing the current track.", "params": []}, "core.playback.seek": {"description": "Seeks to time position given in milliseconds.\\n\\n:param time_position: time position in milliseconds\\n:type time_position: int\\n:rtype: :class:`True` if successful, else :class:`False`", "params": [{"name": "time_position"}]}, "core.playback.set_state": {"description": "Set the playback state.\\n\\nMust be :attr:`PLAYING`, :attr:`PAUSED`, or :attr:`STOPPED`.\\n\\nPossible states and transitions:\\n\\n.. digraph:: state_transitions\\n\\n    \\"STOPPED\\" -> \\"PLAYING\\" [ label=\\"play\\" ]\\n    \\"STOPPED\\" -> \\"PAUSED\\" [ label=\\"pause\\" ]\\n    \\"PLAYING\\" -> \\"STOPPED\\" [ label=\\"stop\\" ]\\n    \\"PLAYING\\" -> \\"PAUSED\\" [ label=\\"pause\\" ]\\n    \\"PLAYING\\" -> \\"PLAYING\\" [ label=\\"play\\" ]\\n    \\"PAUSED\\" -> \\"PLAYING\\" [ label=\\"resume\\" ]\\n    \\"PAUSED\\" -> \\"STOPPED\\" [ label=\\"stop\\" ]", "params": [{"name": "new_state"}]}, "core.playback.stop": {"description": "Stop playing.", "params": []}, "core.playlists.as_list": {"description": "Get a list of the currently available playlists.\\n\\nReturns a list of :class:`~mopidy.models.Ref` objects referring to the\\nplaylists. In other words, no information about the playlists\' content\\nis given.\\n\\n:rtype: list of :class:`mopidy.models.Ref`\\n\\n.. versionadded:: 1.0", "params": []}, "core.playlists.create": {"description": "Create a new playlist.\\n\\nIf ``uri_scheme`` matches an URI scheme handled by a current backend,\\nthat backend is asked to create the playlist. If ``uri_scheme`` is\\n:class:`None` or doesn\'t match a current backend, the first backend is\\nasked to create the playlist.\\n\\nAll new playlists must be created by calling this method, and **not**\\nby creating new instances of :class:`mopidy.models.Playlist`.\\n\\n:param name: name of the new playlist\\n:type name: string\\n:param uri_scheme: use the backend matching the URI scheme\\n:type uri_scheme: string\\n:rtype: :class:`mopidy.models.Playlist` or :class:`None`", "params": [{"name": "name"}, {"name": "uri_scheme", "default": null}]}, "core.playlists.delete": {"description": "Delete playlist identified by the URI.\\n\\nIf the URI doesn\'t match the URI schemes handled by the current\\nbackends, nothing happens.\\n\\nReturns :class:`True` if deleted, :class:`False` otherwise.\\n\\n:param uri: URI of the playlist to delete\\n:type uri: string\\n:rtype: :class:`bool`\\n\\n.. versionchanged:: 2.2\\n    Return type defined.", "params": [{"name": "uri"}]}, "core.playlists.get_items": {"description": "Get the items in a playlist specified by ``uri``.\\n\\nReturns a list of :class:`~mopidy.models.Ref` objects referring to the\\nplaylist\'s items.\\n\\nIf a playlist with the given ``uri`` doesn\'t exist, it returns\\n:class:`None`.\\n\\n:rtype: list of :class:`mopidy.models.Ref`, or :class:`None`\\n\\n.. versionadded:: 1.0", "params": [{"name": "uri"}]}, "core.playlists.get_uri_schemes": {"description": "Get the list of URI schemes that support playlists.\\n\\n:rtype: list of string\\n\\n.. versionadded:: 2.0", "params": []}, "core.playlists.lookup": {"description": "Lookup playlist with given URI in both the set of playlists and in any\\nother playlist sources. Returns :class:`None` if not found.\\n\\n:param uri: playlist URI\\n:type uri: string\\n:rtype: :class:`mopidy.models.Playlist` or :class:`None`", "params": [{"name": "uri"}]}, "core.playlists.refresh": {"description": "Refresh the playlists in :attr:`playlists`.\\n\\nIf ``uri_scheme`` is :class:`None`, all backends are asked to refresh.\\nIf ``uri_scheme`` is an URI scheme handled by a backend, only that\\nbackend is asked to refresh. If ``uri_scheme`` doesn\'t match any\\ncurrent backend, nothing happens.\\n\\n:param uri_scheme: limit to the backend matching the URI scheme\\n:type uri_scheme: string", "params": [{"name": "uri_scheme", "default": null}]}, "core.playlists.save": {"description": "Save the playlist.\\n\\nFor a playlist to be saveable, it must have the ``uri`` attribute set.\\nYou must not set the ``uri`` atribute yourself, but use playlist\\nobjects returned by :meth:`create` or retrieved from :attr:`playlists`,\\nwhich will always give you saveable playlists.\\n\\nThe method returns the saved playlist. The return playlist may differ\\nfrom the saved playlist. E.g. if the playlist name was changed, the\\nreturned playlist may have a different URI. The caller of this method\\nmust throw away the playlist sent to this method, and use the\\nreturned playlist instead.\\n\\nIf the playlist\'s URI isn\'t set or doesn\'t match the URI scheme of a\\ncurrent backend, nothing is done and :class:`None` is returned.\\n\\n:param playlist: the playlist\\n:type playlist: :class:`mopidy.models.Playlist`\\n:rtype: :class:`mopidy.models.Playlist` or :class:`None`", "params": [{"name": "playlist"}]}, "core.tracklist.add": {"description": "Add tracks to the tracklist.\\n\\nIf ``uris`` is given instead of ``tracks``, the URIs are\\nlooked up in the library and the resulting tracks are added to the\\ntracklist.\\n\\nIf ``at_position`` is given, the tracks are inserted at the given\\nposition in the tracklist. If ``at_position`` is not given, the tracks\\nare appended to the end of the tracklist.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.\\n\\n:param tracks: tracks to add\\n:type tracks: list of :class:`mopidy.models.Track` or :class:`None`\\n:param at_position: position in tracklist to add tracks\\n:type at_position: int or :class:`None`\\n:param uris: list of URIs for tracks to add\\n:type uris: list of string or :class:`None`\\n:rtype: list of :class:`mopidy.models.TlTrack`\\n\\n.. versionadded:: 1.0\\n    The ``uris`` argument.\\n\\n.. deprecated:: 1.0\\n    The ``tracks`` argument. Use ``uris``.", "params": [{"name": "tracks", "default": null}, {"name": "at_position", "default": null}, {"name": "uris", "default": null}]}, "core.tracklist.clear": {"description": "Clear the tracklist.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.", "params": []}, "core.tracklist.eot_track": {"description": "The track that will be played after the given track.\\n\\nNot necessarily the same track as :meth:`next_track`.\\n\\n.. deprecated:: 3.0\\n    Use :meth:`get_eot_tlid` instead.\\n\\n:param tl_track: the reference track\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:rtype: :class:`mopidy.models.TlTrack` or :class:`None`", "params": [{"name": "tl_track"}]}, "core.tracklist.filter": {"description": "Filter the tracklist by the given criteria.\\n\\nEach rule in the criteria consists of a model field and a list of\\nvalues to compare it against. If the model field matches any of the\\nvalues, it may be returned.\\n\\nOnly tracks that match all the given criteria are returned.\\n\\nExamples::\\n\\n    # Returns tracks with TLIDs 1, 2, 3, or 4 (tracklist ID)\\n    filter({\'tlid\': [1, 2, 3, 4]})\\n\\n    # Returns track with URIs \'xyz\' or \'abc\'\\n    filter({\'uri\': [\'xyz\', \'abc\']})\\n\\n    # Returns track with a matching TLIDs (1, 3 or 6) and a\\n    # matching URI (\'xyz\' or \'abc\')\\n    filter({\'tlid\': [1, 3, 6], \'uri\': [\'xyz\', \'abc\']})\\n\\n:param criteria: one or more rules to match by\\n:type criteria: dict, of (string, list) pairs\\n:rtype: list of :class:`mopidy.models.TlTrack`", "params": [{"name": "criteria"}]}, "core.tracklist.get_consume": {"description": "Get consume mode.\\n\\n:class:`True`\\n    Tracks are removed from the tracklist when they have been played.\\n:class:`False`\\n    Tracks are not removed from the tracklist.", "params": []}, "core.tracklist.get_eot_tlid": {"description": "The TLID of the track that will be played after the current track.\\n\\nNot necessarily the same TLID as returned by :meth:`get_next_tlid`.\\n\\n:rtype: :class:`int` or :class:`None`\\n\\n.. versionadded:: 1.1", "params": []}, "core.tracklist.get_length": {"description": "Get length of the tracklist.", "params": []}, "core.tracklist.get_next_tlid": {"description": "The tlid of the track that will be played if calling\\n:meth:`mopidy.core.PlaybackController.next()`.\\n\\nFor normal playback this is the next track in the tracklist. If repeat\\nis enabled the next track can loop around the tracklist. When random is\\nenabled this should be a random track, all tracks should be played once\\nbefore the tracklist repeats.\\n\\n:rtype: :class:`int` or :class:`None`\\n\\n.. versionadded:: 1.1", "params": []}, "core.tracklist.get_previous_tlid": {"description": "Returns the TLID of the track that will be played if calling\\n:meth:`mopidy.core.PlaybackController.previous()`.\\n\\nFor normal playback this is the previous track in the tracklist. If\\nrandom and/or consume is enabled it should return the current track\\ninstead.\\n\\n:rtype: :class:`int` or :class:`None`\\n\\n.. versionadded:: 1.1", "params": []}, "core.tracklist.get_random": {"description": "Get random mode.\\n\\n:class:`True`\\n    Tracks are selected at random from the tracklist.\\n:class:`False`\\n    Tracks are played in the order of the tracklist.", "params": []}, "core.tracklist.get_repeat": {"description": "Get repeat mode.\\n\\n:class:`True`\\n    The tracklist is played repeatedly.\\n:class:`False`\\n    The tracklist is played once.", "params": []}, "core.tracklist.get_single": {"description": "Get single mode.\\n\\n:class:`True`\\n    Playback is stopped after current song, unless in ``repeat`` mode.\\n:class:`False`\\n    Playback continues after current song.", "params": []}, "core.tracklist.get_tl_tracks": {"description": "Get tracklist as list of :class:`mopidy.models.TlTrack`.", "params": []}, "core.tracklist.get_tracks": {"description": "Get tracklist as list of :class:`mopidy.models.Track`.", "params": []}, "core.tracklist.get_version": {"description": "Get the tracklist version.\\n\\nInteger which is increased every time the tracklist is changed. Is not\\nreset before Mopidy is restarted.", "params": []}, "core.tracklist.index": {"description": "The position of the given track in the tracklist.\\n\\nIf neither *tl_track* or *tlid* is given we return the index of\\nthe currently playing track.\\n\\n:param tl_track: the track to find the index of\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:param tlid: TLID of the track to find the index of\\n:type tlid: :class:`int` or :class:`None`\\n:rtype: :class:`int` or :class:`None`\\n\\n.. versionadded:: 1.1\\n    The *tlid* parameter", "params": [{"name": "tl_track", "default": null}, {"name": "tlid", "default": null}]}, "core.tracklist.move": {"description": "Move the tracks in the slice ``[start:end]`` to ``to_position``.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.\\n\\n:param start: position of first track to move\\n:type start: int\\n:param end: position after last track to move\\n:type end: int\\n:param to_position: new position for the tracks\\n:type to_position: int", "params": [{"name": "start"}, {"name": "end"}, {"name": "to_position"}]}, "core.tracklist.next_track": {"description": "The track that will be played if calling\\n:meth:`mopidy.core.PlaybackController.next()`.\\n\\nFor normal playback this is the next track in the tracklist. If repeat\\nis enabled the next track can loop around the tracklist. When random is\\nenabled this should be a random track, all tracks should be played once\\nbefore the tracklist repeats.\\n\\n.. deprecated:: 3.0\\n    Use :meth:`get_next_tlid` instead.\\n\\n:param tl_track: the reference track\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:rtype: :class:`mopidy.models.TlTrack` or :class:`None`", "params": [{"name": "tl_track"}]}, "core.tracklist.previous_track": {"description": "Returns the track that will be played if calling\\n:meth:`mopidy.core.PlaybackController.previous()`.\\n\\nFor normal playback this is the previous track in the tracklist. If\\nrandom and/or consume is enabled it should return the current track\\ninstead.\\n\\n.. deprecated:: 3.0\\n    Use :meth:`get_previous_tlid` instead.\\n\\n:param tl_track: the reference track\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:rtype: :class:`mopidy.models.TlTrack` or :class:`None`", "params": [{"name": "tl_track"}]}, "core.tracklist.remove": {"description": "Remove the matching tracks from the tracklist.\\n\\nUses :meth:`filter()` to lookup the tracks to remove.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.\\n\\n:param criteria: one or more rules to match by\\n:type criteria: dict, of (string, list) pairs\\n:rtype: list of :class:`mopidy.models.TlTrack` that were removed", "params": [{"name": "criteria"}]}, "core.tracklist.set_consume": {"description": "Set consume mode.\\n\\n:class:`True`\\n    Tracks are removed from the tracklist when they have been played.\\n:class:`False`\\n    Tracks are not removed from the tracklist.", "params": [{"name": "value"}]}, "core.tracklist.set_random": {"description": "Set random mode.\\n\\n:class:`True`\\n    Tracks are selected at random from the tracklist.\\n:class:`False`\\n    Tracks are played in the order of the tracklist.", "params": [{"name": "value"}]}, "core.tracklist.set_repeat": {"description": "Set repeat mode.\\n\\nTo repeat a single track, set both ``repeat`` and ``single``.\\n\\n:class:`True`\\n    The tracklist is played repeatedly.\\n:class:`False`\\n    The tracklist is played once.", "params": [{"name": "value"}]}, "core.tracklist.set_single": {"description": "Set single mode.\\n\\n:class:`True`\\n    Playback is stopped after current song, unless in ``repeat`` mode.\\n:class:`False`\\n    Playback continues after current song.", "params": [{"name": "value"}]}, "core.tracklist.shuffle": {"description": "Shuffles the entire tracklist. If ``start`` and ``end`` is given only\\nshuffles the slice ``[start:end]``.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.\\n\\n:param start: position of first track to shuffle\\n:type start: int or :class:`None`\\n:param end: position after last track to shuffle\\n:type end: int or :class:`None`", "params": [{"name": "start", "default": null}, {"name": "end", "default": null}]}, "core.tracklist.slice": {"description": "Returns a slice of the tracklist, limited by the given start and end\\npositions.\\n\\n:param start: position of first track to include in slice\\n:type start: int\\n:param end: position after last track to include in slice\\n:type end: int\\n:rtype: :class:`mopidy.models.TlTrack`", "params": [{"name": "start"}, {"name": "end"}]}}}'
okt 24 00:01:04 Desktop-Ubuntu mopidy[10884]: DEBUG    2022-10-24 00:01:04,972 [10884:HttpServer] mopidy.http.handlers
okt 24 00:01:04 Desktop-Ubuntu mopidy[10884]:   Received WebSocket message from 127.0.0.1: '{"method":"core.describe","jsonrpc":"2.0","id":0}'
okt 24 00:01:04 Desktop-Ubuntu mopidy[10884]: DEBUG    2022-10-24 00:01:04,968 [10884:HttpServer] mopidy.http.handlers
okt 24 00:01:04 Desktop-Ubuntu mopidy[10884]:   304 GET /iris/assets/app-icon_192.png (127.0.0.1) 0.70ms
okt 24 00:01:04 Desktop-Ubuntu mopidy[10884]: INFO     2022-10-24 00:01:04,962 [10884:HttpServer] tornado.access
okt 24 00:01:04 Desktop-Ubuntu mopidy[10884]:   {'method': 'connection_added', 'params': {'connection': {'connection_id': 'OGNDS36QOQ1X', 'ip': '127.0.0.1', 'created': '2022-10-24 00:01:04'}}}
okt 24 00:01:04 Desktop-Ubuntu mopidy[10884]: DEBUG    2022-10-24 00:01:04,916 [10884:HttpServer] mopidy_iris.core
okt 24 00:01:04 Desktop-Ubuntu mopidy[10884]:   <mopidy_iris.handlers.WebsocketHandler object at 0x7fdafe575690>
okt 24 00:01:04 Desktop-Ubuntu mopidy[10884]: DEBUG    2022-10-24 00:01:04,916 [10884:HttpServer] mopidy_iris.core
okt 24 00:01:04 Desktop-Ubuntu mopidy[10884]:   Connection added
okt 24 00:01:04 Desktop-Ubuntu mopidy[10884]: DEBUG    2022-10-24 00:01:04,916 [10884:HttpServer] mopidy_iris.core
okt 24 00:01:04 Desktop-Ubuntu mopidy[10884]:   101 GET /iris/ws/ (127.0.0.1) 0.44ms
okt 24 00:01:04 Desktop-Ubuntu mopidy[10884]: INFO     2022-10-24 00:01:04,915 [10884:HttpServer] tornado.access
okt 24 00:01:04 Desktop-Ubuntu mopidy[10884]:   New WebSocket connection from 127.0.0.1
okt 24 00:01:04 Desktop-Ubuntu mopidy[10884]: DEBUG    2022-10-24 00:01:04,903 [10884:HttpServer] mopidy.http.handlers
okt 24 00:01:04 Desktop-Ubuntu mopidy[10884]:   101 GET /mopidy/ws/ (127.0.0.1) 0.54ms
okt 24 00:01:04 Desktop-Ubuntu mopidy[10884]: INFO     2022-10-24 00:01:04,903 [10884:HttpServer] tornado.access
okt 24 00:01:04 Desktop-Ubuntu mopidy[10884]:   304 GET /iris/manifest.json (127.0.0.1) 0.67ms
okt 24 00:01:04 Desktop-Ubuntu mopidy[10884]: INFO     2022-10-24 00:01:04,817 [10884:HttpServer] tornado.access
okt 24 00:01:04 Desktop-Ubuntu mopidy[10884]:   200 GET /iris/assets/favicon.png (127.0.0.1) 0.75ms
okt 24 00:01:04 Desktop-Ubuntu mopidy[10884]: INFO     2022-10-24 00:01:04,815 [10884:HttpServer] tornado.access
okt 24 00:01:04 Desktop-Ubuntu mopidy[10884]:   200 GET /iris/library/null (127.0.0.1) 0.67ms
okt 24 00:01:04 Desktop-Ubuntu mopidy[10884]: INFO     2022-10-24 00:01:04,599 [10884:HttpServer] tornado.access
okt 24 00:01:03 Desktop-Ubuntu mopidy[10884]:   200 GET /iris/app.min.js?v=1666559547 (127.0.0.1) 11.25ms
okt 24 00:01:03 Desktop-Ubuntu mopidy[10884]: INFO     2022-10-24 00:01:03,928 [10884:HttpServer] tornado.access
okt 24 00:01:03 Desktop-Ubuntu mopidy[10884]:   200 GET /iris/app.min.css?v=1666559547 (127.0.0.1) 5.21ms
okt 24 00:01:03 Desktop-Ubuntu mopidy[10884]: INFO     2022-10-24 00:01:03,916 [10884:HttpServer] tornado.access
okt 24 00:01:03 Desktop-Ubuntu mopidy[10884]:   200 GET /iris/assets/app-icon.svg (127.0.0.1) 0.73ms
okt 24 00:01:03 Desktop-Ubuntu mopidy[10884]: INFO     2022-10-24 00:01:03,763 [10884:HttpServer] tornado.access
okt 24 00:01:03 Desktop-Ubuntu mopidy[10884]:   Closed WebSocket connection from 127.0.0.1
okt 24 00:01:03 Desktop-Ubuntu mopidy[10884]: DEBUG    2022-10-24 00:01:03,712 [10884:HttpServer] mopidy.http.handlers
okt 24 00:01:03 Desktop-Ubuntu mopidy[10884]:   {'method': 'connection_removed', 'params': {'connection': {'connection_id': 'C5CGIQVY45U7', 'ip': '127.0.0.1', 'created': '2022-10-24 00:01:03', 'username': 166656148284185, 'client_id': 166656148284193}}}
okt 24 00:01:03 Desktop-Ubuntu mopidy[10884]: DEBUG    2022-10-24 00:01:03,710 [10884:HttpServer] mopidy_iris.core
okt 24 00:01:03 Desktop-Ubuntu mopidy[10884]:   200 GET /iris/library/tracks (127.0.0.1) 5.80ms
okt 24 00:01:03 Desktop-Ubuntu mopidy[10884]: INFO     2022-10-24 00:01:03,681 [10884:HttpServer] tornado.access
okt 24 00:01:03 Desktop-Ubuntu mopidy[10884]:   {'id': 166656246360715, 'jsonrpc': '2.0', 'method': 'get_queue_metadata', 'result': {'queue_metadata': {}}, 'recipient': 'C5CGIQVY45U7'}
okt 24 00:01:03 Desktop-Ubuntu mopidy[10884]: DEBUG    2022-10-24 00:01:03,607 [10884:HttpServer] mopidy_iris.core
okt 24 00:01:03 Desktop-Ubuntu mopidy[10884]:   Iris websocket message received: {"jsonrpc":"2.0","id":166656246360715,"method":"get_queue_metadata"}
okt 24 00:01:03 Desktop-Ubuntu mopidy[10884]: DEBUG    2022-10-24 00:01:03,607 [10884:HttpServer] mopidy_iris.handlers
okt 24 00:01:03 Desktop-Ubuntu mopidy[10884]:   {'id': 166656246360616, 'jsonrpc': '2.0', 'method': 'get_pinned', 'result': {'pinned': []}, 'recipient': 'C5CGIQVY45U7'}
okt 24 00:01:03 Desktop-Ubuntu mopidy[10884]: DEBUG    2022-10-24 00:01:03,606 [10884:HttpServer] mopidy_iris.core
okt 24 00:01:03 Desktop-Ubuntu mopidy[10884]:   Iris websocket message received: {"jsonrpc":"2.0","id":166656246360616,"method":"get_pinned"}
okt 24 00:01:03 Desktop-Ubuntu mopidy[10884]: DEBUG    2022-10-24 00:01:03,606 [10884:HttpServer] mopidy_iris.handlers
okt 24 00:01:03 Desktop-Ubuntu mopidy[10884]:   {'id': 166656246360554, 'jsonrpc': '2.0', 'method': 'get_commands', 'result': {'commands': {}}, 'recipient': 'C5CGIQVY45U7'}
okt 24 00:01:03 Desktop-Ubuntu mopidy[10884]: DEBUG    2022-10-24 00:01:03,605 [10884:HttpServer] mopidy_iris.core
okt 24 00:01:03 Desktop-Ubuntu mopidy[10884]:   Iris websocket message received: {"jsonrpc":"2.0","id":166656246360554,"method":"get_commands"}
okt 24 00:01:03 Desktop-Ubuntu mopidy[10884]: DEBUG    2022-10-24 00:01:03,605 [10884:HttpServer] mopidy_iris.handlers
okt 24 00:01:03 Desktop-Ubuntu mopidy[10884]:   {'id': 166656246360466, 'jsonrpc': '2.0', 'method': 'get_radio', 'result': {'radio': {'enabled': 0, 'seed_artists': [], 'seed_genres': [], 'seed_tracks': [], 'results': []}}, 'recipient': 'C5CGIQVY45U7'}
okt 24 00:01:03 Desktop-Ubuntu mopidy[10884]: DEBUG    2022-10-24 00:01:03,604 [10884:HttpServer] mopidy_iris.core
okt 24 00:01:03 Desktop-Ubuntu mopidy[10884]:   Iris websocket message received: {"jsonrpc":"2.0","id":166656246360466,"method":"get_radio"}
okt 24 00:01:03 Desktop-Ubuntu mopidy[10884]: DEBUG    2022-10-24 00:01:03,604 [10884:HttpServer] mopidy_iris.handlers
okt 24 00:01:03 Desktop-Ubuntu mopidy[10884]:   {'id': 166656246360369, 'jsonrpc': '2.0', 'method': 'get_shared_config', 'result': {'shared_config': {}}, 'recipient': 'C5CGIQVY45U7'}
okt 24 00:01:03 Desktop-Ubuntu mopidy[10884]: DEBUG    2022-10-24 00:01:03,603 [10884:HttpServer] mopidy_iris.core
okt 24 00:01:03 Desktop-Ubuntu mopidy[10884]:   Iris websocket message received: {"jsonrpc":"2.0","id":166656246360369,"method":"get_shared_config"}
okt 24 00:01:03 Desktop-Ubuntu mopidy[10884]: DEBUG    2022-10-24 00:01:03,603 [10884:HttpServer] mopidy_iris.handlers
okt 24 00:01:03 Desktop-Ubuntu mopidy[10884]:   {'id': 166656246360221, 'jsonrpc': '2.0', 'method': 'get_config', 'result': {'config': {'is_root': False, 'spotify_username': False, 'country': 'NZ', 'locale': 'en_NZ', 'snapcast_enabled': True, 'snapcast_host': 'localhost', 'snapcast_port': '1780', 'snapcast_ssl': False, 'snapcast_stream': 'Default', 'spotify_authorization_url': 'https://jamesbarnsley.co.nz/iris/auth_spotify.php', 'lastfm_authorization_url': 'https://jamesbarnsley.co.nz/iris/auth_lastfm.php', 'genius_authorization_url': 'https://jamesbarnsley.co.nz/iris/auth_genius.php', 'shared_config': {}}}, 'recipient': 'C5CGIQVY45U7'}
okt 24 00:01:03 Desktop-Ubuntu mopidy[10884]: DEBUG    2022-10-24 00:01:03,603 [10884:HttpServer] mopidy_iris.core
okt 24 00:01:03 Desktop-Ubuntu mopidy[10884]:   Iris websocket message received: {"jsonrpc":"2.0","id":166656246360221,"method":"get_config"}
okt 24 00:01:03 Desktop-Ubuntu mopidy[10884]: DEBUG    2022-10-24 00:01:03,602 [10884:HttpServer] mopidy_iris.handlers
okt 24 00:01:03 Desktop-Ubuntu mopidy[10884]:   {'id': 166656246360127, 'jsonrpc': '2.0', 'method': 'update_connection', 'result': {'connection': {'connection_id': 'C5CGIQVY45U7', 'ip': '127.0.0.1', 'created': '2022-10-24 00:01:03', 'username': 166656148284185, 'client_id': 166656148284193}}, 'recipient': 'C5CGIQVY45U7'}
okt 24 00:01:03 Desktop-Ubuntu mopidy[10884]: DEBUG    2022-10-24 00:01:03,601 [10884:HttpServer] mopidy_iris.core
okt 24 00:01:03 Desktop-Ubuntu mopidy[10884]:   {'method': 'connection_changed', 'params': {'connection': {'connection_id': 'C5CGIQVY45U7', 'ip': '127.0.0.1', 'created': '2022-10-24 00:01:03', 'username': 166656148284185, 'client_id': 166656148284193}}}
okt 24 00:01:03 Desktop-Ubuntu mopidy[10884]: DEBUG    2022-10-24 00:01:03,601 [10884:HttpServer] mopidy_iris.core
okt 24 00:01:03 Desktop-Ubuntu mopidy[10884]:   Iris websocket message received: {"jsonrpc":"2.0","id":166656246360127,"method":"update_connection","params":{"username":166656148284185,"client_id":166656148284193}}
okt 24 00:01:03 Desktop-Ubuntu mopidy[10884]: DEBUG    2022-10-24 00:01:03,601 [10884:HttpServer] mopidy_iris.handlers
okt 24 00:01:03 Desktop-Ubuntu mopidy[10884]:   {'method': 'connection_added', 'params': {'connection': {'connection_id': 'C5CGIQVY45U7', 'ip': '127.0.0.1', 'created': '2022-10-24 00:01:03'}}}
okt 24 00:01:03 Desktop-Ubuntu mopidy[10884]: DEBUG    2022-10-24 00:01:03,598 [10884:HttpServer] mopidy_iris.core
okt 24 00:01:03 Desktop-Ubuntu mopidy[10884]:   <mopidy_iris.handlers.WebsocketHandler object at 0x7fdafe49efe0>
okt 24 00:01:03 Desktop-Ubuntu mopidy[10884]: DEBUG    2022-10-24 00:01:03,598 [10884:HttpServer] mopidy_iris.core
okt 24 00:01:03 Desktop-Ubuntu mopidy[10884]:   Connection added
okt 24 00:01:03 Desktop-Ubuntu mopidy[10884]: DEBUG    2022-10-24 00:01:03,598 [10884:HttpServer] mopidy_iris.core
okt 24 00:01:03 Desktop-Ubuntu mopidy[10884]:   101 GET /iris/ws/ (127.0.0.1) 0.51ms
okt 24 00:01:03 Desktop-Ubuntu mopidy[10884]: INFO     2022-10-24 00:01:03,598 [10884:HttpServer] tornado.access
okt 24 00:01:01 Desktop-Ubuntu mopidy[10884]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 31, "result": null}'
okt 24 00:01:01 Desktop-Ubuntu mopidy[10884]: DEBUG    2022-10-24 00:01:01,598 [10884:HttpServer] mopidy.http.handlers
okt 24 00:01:01 Desktop-Ubuntu mopidy[10884]:   Received WebSocket message from 127.0.0.1: '{"method":"core.playback.get_stream_title","params":{},"jsonrpc":"2.0","id":31}'
okt 24 00:01:01 Desktop-Ubuntu mopidy[10884]: DEBUG    2022-10-24 00:01:01,598 [10884:HttpServer] mopidy.http.handlers
okt 24 00:01:01 Desktop-Ubuntu mopidy[10884]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 30, "result": ["file", "http", "https", "local", "m3u", "rtsp", "youtube", "yt"]}'
okt 24 00:01:01 Desktop-Ubuntu mopidy[10884]: DEBUG    2022-10-24 00:01:01,598 [10884:HttpServer] mopidy.http.handlers
okt 24 00:01:01 Desktop-Ubuntu mopidy[10884]:   Received WebSocket message from 127.0.0.1: '{"method":"core.get_uri_schemes","params":{},"jsonrpc":"2.0","id":30}'
okt 24 00:01:01 Desktop-Ubuntu mopidy[10884]: DEBUG    2022-10-24 00:01:01,596 [10884:HttpServer] mopidy.http.handlers
okt 24 00:01:01 Desktop-Ubuntu mopidy[10884]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 29, "result": 0}'
okt 24 00:01:01 Desktop-Ubuntu mopidy[10884]: DEBUG    2022-10-24 00:01:01,595 [10884:HttpServer] mopidy.http.handlers
okt 24 00:01:01 Desktop-Ubuntu mopidy[10884]:   Received WebSocket message from 127.0.0.1: '{"method":"core.playback.get_time_position","params":{},"jsonrpc":"2.0","id":29}'
okt 24 00:01:01 Desktop-Ubuntu mopidy[10884]: DEBUG    2022-10-24 00:01:01,594 [10884:HttpServer] mopidy.http.handlers
okt 24 00:01:01 Desktop-Ubuntu mopidy[10884]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 28, "result": []}'
okt 24 00:01:01 Desktop-Ubuntu mopidy[10884]: DEBUG    2022-10-24 00:01:01,593 [10884:HttpServer] mopidy.http.handlers
okt 24 00:01:01 Desktop-Ubuntu mopidy[10884]:   Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_tl_tracks","params":{},"jsonrpc":"2.0","id":28}'
okt 24 00:01:01 Desktop-Ubuntu mopidy[10884]: DEBUG    2022-10-24 00:01:01,593 [10884:HttpServer] mopidy.http.handlers
okt 24 00:01:01 Desktop-Ubuntu mopidy[10884]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 27, "result": false}'
okt 24 00:01:01 Desktop-Ubuntu mopidy[10884]: DEBUG    2022-10-24 00:01:01,592 [10884:HttpServer] mopidy.http.handlers
okt 24 00:01:01 Desktop-Ubuntu mopidy[10884]:   Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_repeat","params":{},"jsonrpc":"2.0","id":27}'
okt 24 00:01:01 Desktop-Ubuntu mopidy[10884]: DEBUG    2022-10-24 00:01:01,592 [10884:HttpServer] mopidy.http.handlers
okt 24 00:01:01 Desktop-Ubuntu mopidy[10884]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 26, "result": false}'
okt 24 00:01:01 Desktop-Ubuntu mopidy[10884]: DEBUG    2022-10-24 00:01:01,590 [10884:HttpServer] mopidy.http.handlers
okt 24 00:01:01 Desktop-Ubuntu mopidy[10884]:   Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_random","params":{},"jsonrpc":"2.0","id":26}'
okt 24 00:01:01 Desktop-Ubuntu mopidy[10884]: DEBUG    2022-10-24 00:01:01,590 [10884:HttpServer] mopidy.http.handlers
okt 24 00:01:01 Desktop-Ubuntu mopidy[10884]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 25, "result": false}'
okt 24 00:01:01 Desktop-Ubuntu mopidy[10884]: DEBUG    2022-10-24 00:01:01,589 [10884:HttpServer] mopidy.http.handlers
okt 24 00:01:01 Desktop-Ubuntu mopidy[10884]:   Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_consume","params":{},"jsonrpc":"2.0","id":25}'
okt 24 00:01:01 Desktop-Ubuntu mopidy[10884]: DEBUG    2022-10-24 00:01:01,589 [10884:HttpServer] mopidy.http.handlers
okt 24 00:01:01 Desktop-Ubuntu mopidy[10884]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 24, "result": false}'
okt 24 00:01:01 Desktop-Ubuntu mopidy[10884]: DEBUG    2022-10-24 00:01:01,588 [10884:HttpServer] mopidy.http.handlers
okt 24 00:01:01 Desktop-Ubuntu mopidy[10884]:   Received WebSocket message from 127.0.0.1: '{"method":"core.mixer.get_mute","params":{},"jsonrpc":"2.0","id":24}'
okt 24 00:01:01 Desktop-Ubuntu mopidy[10884]: DEBUG    2022-10-24 00:01:01,588 [10884:HttpServer] mopidy.http.handlers
okt 24 00:01:01 Desktop-Ubuntu mopidy[10884]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 23, "result": 100}'
okt 24 00:01:01 Desktop-Ubuntu mopidy[10884]: DEBUG    2022-10-24 00:01:01,587 [10884:HttpServer] mopidy.http.handlers
okt 24 00:01:01 Desktop-Ubuntu mopidy[10884]:   Received WebSocket message from 127.0.0.1: '{"method":"core.mixer.get_volume","params":{},"jsonrpc":"2.0","id":23}'
okt 24 00:01:01 Desktop-Ubuntu mopidy[10884]: DEBUG    2022-10-24 00:01:01,587 [10884:HttpServer] mopidy.http.handlers
okt 24 00:01:01 Desktop-Ubuntu mopidy[10884]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 22, "result": "stopped"}'
okt 24 00:01:01 Desktop-Ubuntu mopidy[10884]: DEBUG    2022-10-24 00:01:01,585 [10884:HttpServer] mopidy.http.handlers
okt 24 00:01:01 Desktop-Ubuntu mopidy[10884]:   Received WebSocket message from 127.0.0.1: '{"method":"core.playback.get_state","params":{},"jsonrpc":"2.0","id":22}'
okt 24 00:01:01 Desktop-Ubuntu mopidy[10884]: DEBUG    2022-10-24 00:01:01,585 [10884:HttpServer] mopidy.http.handlers
okt 24 00:01:01 Desktop-Ubuntu mopidy[10884]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 21, "result": null}'
okt 24 00:01:01 Desktop-Ubuntu mopidy[10884]: DEBUG    2022-10-24 00:01:01,585 [10884:HttpServer] mopidy.http.handlers
okt 24 00:01:01 Desktop-Ubuntu mopidy[10884]:   Received WebSocket message from 127.0.0.1: '{"method":"core.playback.get_current_tl_track","params":{},"jsonrpc":"2.0","id":21}'
okt 24 00:01:01 Desktop-Ubuntu mopidy[10884]: DEBUG    2022-10-24 00:01:01,584 [10884:HttpServer] mopidy.http.handlers
okt 24 00:01:01 Desktop-Ubuntu mopidy[10884]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 20, "result": {"core.get_uri_schemes": {"description": "Get list of URI schemes we can handle", "params": []}, "core.get_version": {"description": "Get version of the Mopidy core API", "params": []}, "core.history.get_history": {"description": "Get the track history.\\n\\nThe timestamps are milliseconds since epoch.\\n\\n:returns: the track history\\n:rtype: list of (timestamp, :class:`mopidy.models.Ref`) tuples", "params": []}, "core.history.get_length": {"description": "Get the number of tracks in the history.\\n\\n:returns: the history length\\n:rtype: int", "params": []}, "core.library.browse": {"description": "Browse directories and tracks at the given ``uri``.\\n\\n``uri`` is a string which represents some directory belonging to a\\nbackend. To get the intial root directories for backends pass\\n:class:`None` as the URI.\\n\\nReturns a list of :class:`mopidy.models.Ref` objects for the\\ndirectories and tracks at the given ``uri``.\\n\\nThe :class:`~mopidy.models.Ref` objects representing tracks keep the\\ntrack\'s original URI. A matching pair of objects can look like this::\\n\\n    Track(uri=\'dummy:/foo.mp3\', name=\'foo\', artists=..., album=...)\\n    Ref.track(uri=\'dummy:/foo.mp3\', name=\'foo\')\\n\\nThe :class:`~mopidy.models.Ref` objects representing directories have\\nbackend specific URIs. These are opaque values, so no one but the\\nbackend that created them should try and derive any meaning from them.\\nThe only valid exception to this is checking the scheme, as it is used\\nto route browse requests to the correct backend.\\n\\nFor example, the dummy library\'s ``/bar`` directory could be returned\\nlike this::\\n\\n    Ref.directory(uri=\'dummy:directory:/bar\', name=\'bar\')\\n\\n:param string uri: URI to browse\\n:rtype: list of :class:`mopidy.models.Ref`\\n\\n.. versionadded:: 0.18", "params": [{"name": "uri"}]}, "core.library.get_distinct": {"description": "List distinct values for a given field from the library.\\n\\nThis has mainly been added to support the list commands the MPD\\nprotocol supports in a more sane fashion. Other frontends are not\\nrecommended to use this method.\\n\\n:param string field: Any one of ``uri``, ``track_name``, ``album``,\\n    ``artist``, ``albumartist``, ``composer``, ``performer``,\\n    ``track_no``, ``genre``, ``date``, ``comment``, ``disc_no``,\\n    ``musicbrainz_albumid``, ``musicbrainz_artistid``, or\\n    ``musicbrainz_trackid``.\\n:param dict query: Query to use for limiting results, see\\n    :meth:`search` for details about the query format.\\n:rtype: set of values corresponding to the requested field type.\\n\\n.. versionadded:: 1.0", "params": [{"name": "field"}, {"name": "query", "default": null}]}, "core.library.get_images": {"description": "Lookup the images for the given URIs\\n\\nBackends can use this to return image URIs for any URI they know about\\nbe it tracks, albums, playlists. The lookup result is a dictionary\\nmapping the provided URIs to lists of images.\\n\\nUnknown URIs or URIs the corresponding backend couldn\'t find anything\\nfor will simply return an empty list for that URI.\\n\\n:param uris: list of URIs to find images for\\n:type uris: list of string\\n:rtype: {uri: tuple of :class:`mopidy.models.Image`}\\n\\n.. versionadded:: 1.0", "params": [{"name": "uris"}]}, "core.library.lookup": {"description": "Lookup the given URIs.\\n\\nIf the URI expands to multiple tracks, the returned list will contain\\nthem all.\\n\\n:param uris: track URIs\\n:type uris: list of string\\n:rtype: {uri: list of :class:`mopidy.models.Track`}", "params": [{"name": "uris"}]}, "core.library.refresh": {"description": "Refresh library. Limit to URI and below if an URI is given.\\n\\n:param uri: directory or track URI\\n:type uri: string", "params": [{"name": "uri", "default": null}]}, "core.library.search": {"description": "Search the library for tracks where ``field`` contains ``values``.\\n\\n``field`` can be one of ``uri``, ``track_name``, ``album``, ``artist``,\\n``albumartist``, ``composer``, ``performer``, ``track_no``, ``genre``,\\n``date``, ``comment``, ``disc_no``, ``musicbrainz_albumid``,\\n``musicbrainz_artistid``, ``musicbrainz_trackid`` or ``any``.\\n\\nIf ``uris`` is given, the search is limited to results from within the\\nURI roots. For example passing ``uris=[\'file:\']`` will limit the search\\nto the local backend.\\n\\nExamples::\\n\\n    # Returns results matching \'a\' in any backend\\n    search({\'any\': [\'a\']})\\n\\n    # Returns results matching artist \'xyz\' in any backend\\n    search({\'artist\': [\'xyz\']})\\n\\n    # Returns results matching \'a\' and \'b\' and artist \'xyz\' in any\\n    # backend\\n    search({\'any\': [\'a\', \'b\'], \'artist\': [\'xyz\']})\\n\\n    # Returns results matching \'a\' if within the given URI roots\\n    # \\"file:///media/music\\" and \\"spotify:\\"\\n    search({\'any\': [\'a\']}, uris=[\'file:///media/music\', \'spotify:\'])\\n\\n    # Returns results matching artist \'xyz\' and \'abc\' in any backend\\n    search({\'artist\': [\'xyz\', \'abc\']})\\n\\n:param query: one or more queries to search for\\n:type query: dict\\n:param uris: zero or more URI roots to limit the search to\\n:type uris: list of string or :class:`None`\\n:param exact: if the search should use exact matching\\n:type exact: :class:`bool`\\n:rtype: list of :class:`mopidy.models.SearchResult`\\n\\n.. versionadded:: 1.0\\n    The ``exact`` keyword argument.", "params": [{"name": "query"}, {"name": "uris", "default": null}, {"name": "exact", "default": false}]}, "core.mixer.get_mute": {"description": "Get mute state.\\n\\n:class:`True` if muted, :class:`False` unmuted, :class:`None` if\\nunknown.", "params": []}, "core.mixer.get_volume": {"description": "Get the volume.\\n\\nInteger in range [0..100] or :class:`None` if unknown.\\n\\nThe volume scale is linear.", "params": []}, "core.mixer.set_mute": {"description": "Set mute state.\\n\\n:class:`True` to mute, :class:`False` to unmute.\\n\\nReturns :class:`True` if call is successful, otherwise :class:`False`.", "params": [{"name": "mute"}]}, "core.mixer.set_volume": {"description": "Set the volume.\\n\\nThe volume is defined as an integer in range [0..100].\\n\\nThe volume scale is linear.\\n\\nReturns :class:`True` if call is successful, otherwise :class:`False`.", "params": [{"name": "volume"}]}, "core.playback.get_current_tl_track": {"description": "Get the currently playing or selected track.\\n\\nReturns a :class:`mopidy.models.TlTrack` or :class:`None`.", "params": []}, "core.playback.get_current_tlid": {"description": "Get the currently playing or selected TLID.\\n\\nExtracted from :meth:`get_current_tl_track` for convenience.\\n\\nReturns a :class:`int` or :class:`None`.\\n\\n.. versionadded:: 1.1", "params": []}, "core.playback.get_current_track": {"description": "Get the currently playing or selected track.\\n\\nExtracted from :meth:`get_current_tl_track` for convenience.\\n\\nReturns a :class:`mopidy.models.Track` or :class:`None`.", "params": []}, "core.playback.get_state": {"description": "Get The playback state.", "params": []}, "core.playback.get_stream_title": {"description": "Get the current stream title or :class:`None`.", "params": []}, "core.playback.get_time_position": {"description": "Get time position in milliseconds.", "params": []}, "core.playback.next": {"description": "Change to the next track.\\n\\nThe current playback state will be kept. If it was playing, playing\\nwill continue. If it was paused, it will still be paused, etc.", "params": []}, "core.playback.pause": {"description": "Pause playback.", "params": []}, "core.playback.play": {"description": "Play the given track, or if the given tl_track and tlid is\\n:class:`None`, play the currently active track.\\n\\nNote that the track **must** already be in the tracklist.\\n\\n.. deprecated:: 3.0\\n    The ``tl_track`` argument. Use ``tlid`` instead.\\n\\n:param tl_track: track to play\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:param tlid: TLID of the track to play\\n:type tlid: :class:`int` or :class:`None`", "params": [{"name": "tl_track", "default": null}, {"name": "tlid", "default": null}]}, "core.playback.previous": {"description": "Change to the previous track.\\n\\nThe current playback state will be kept. If it was playing, playing\\nwill continue. If it was paused, it will still be paused, etc.", "params": []}, "core.playback.resume": {"description": "If paused, resume playing the current track.", "params": []}, "core.playback.seek": {"description": "Seeks to time position given in milliseconds.\\n\\n:param time_position: time position in milliseconds\\n:type time_position: int\\n:rtype: :class:`True` if successful, else :class:`False`", "params": [{"name": "time_position"}]}, "core.playback.set_state": {"description": "Set the playback state.\\n\\nMust be :attr:`PLAYING`, :attr:`PAUSED`, or :attr:`STOPPED`.\\n\\nPossible states and transitions:\\n\\n.. digraph:: state_transitions\\n\\n    \\"STOPPED\\" -> \\"PLAYING\\" [ label=\\"play\\" ]\\n    \\"STOPPED\\" -> \\"PAUSED\\" [ label=\\"pause\\" ]\\n    \\"PLAYING\\" -> \\"STOPPED\\" [ label=\\"stop\\" ]\\n    \\"PLAYING\\" -> \\"PAUSED\\" [ label=\\"pause\\" ]\\n    \\"PLAYING\\" -> \\"PLAYING\\" [ label=\\"play\\" ]\\n    \\"PAUSED\\" -> \\"PLAYING\\" [ label=\\"resume\\" ]\\n    \\"PAUSED\\" -> \\"STOPPED\\" [ label=\\"stop\\" ]", "params": [{"name": "new_state"}]}, "core.playback.stop": {"description": "Stop playing.", "params": []}, "core.playlists.as_list": {"description": "Get a list of the currently available playlists.\\n\\nReturns a list of :class:`~mopidy.models.Ref` objects referring to the\\nplaylists. In other words, no information about the playlists\' content\\nis given.\\n\\n:rtype: list of :class:`mopidy.models.Ref`\\n\\n.. versionadded:: 1.0", "params": []}, "core.playlists.create": {"description": "Create a new playlist.\\n\\nIf ``uri_scheme`` matches an URI scheme handled by a current backend,\\nthat backend is asked to create the playlist. If ``uri_scheme`` is\\n:class:`None` or doesn\'t match a current backend, the first backend is\\nasked to create the playlist.\\n\\nAll new playlists must be created by calling this method, and **not**\\nby creating new instances of :class:`mopidy.models.Playlist`.\\n\\n:param name: name of the new playlist\\n:type name: string\\n:param uri_scheme: use the backend matching the URI scheme\\n:type uri_scheme: string\\n:rtype: :class:`mopidy.models.Playlist` or :class:`None`", "params": [{"name": "name"}, {"name": "uri_scheme", "default": null}]}, "core.playlists.delete": {"description": "Delete playlist identified by the URI.\\n\\nIf the URI doesn\'t match the URI schemes handled by the current\\nbackends, nothing happens.\\n\\nReturns :class:`True` if deleted, :class:`False` otherwise.\\n\\n:param uri: URI of the playlist to delete\\n:type uri: string\\n:rtype: :class:`bool`\\n\\n.. versionchanged:: 2.2\\n    Return type defined.", "params": [{"name": "uri"}]}, "core.playlists.get_items": {"description": "Get the items in a playlist specified by ``uri``.\\n\\nReturns a list of :class:`~mopidy.models.Ref` objects referring to the\\nplaylist\'s items.\\n\\nIf a playlist with the given ``uri`` doesn\'t exist, it returns\\n:class:`None`.\\n\\n:rtype: list of :class:`mopidy.models.Ref`, or :class:`None`\\n\\n.. versionadded:: 1.0", "params": [{"name": "uri"}]}, "core.playlists.get_uri_schemes": {"description": "Get the list of URI schemes that support playlists.\\n\\n:rtype: list of string\\n\\n.. versionadded:: 2.0", "params": []}, "core.playlists.lookup": {"description": "Lookup playlist with given URI in both the set of playlists and in any\\nother playlist sources. Returns :class:`None` if not found.\\n\\n:param uri: playlist URI\\n:type uri: string\\n:rtype: :class:`mopidy.models.Playlist` or :class:`None`", "params": [{"name": "uri"}]}, "core.playlists.refresh": {"description": "Refresh the playlists in :attr:`playlists`.\\n\\nIf ``uri_scheme`` is :class:`None`, all backends are asked to refresh.\\nIf ``uri_scheme`` is an URI scheme handled by a backend, only that\\nbackend is asked to refresh. If ``uri_scheme`` doesn\'t match any\\ncurrent backend, nothing happens.\\n\\n:param uri_scheme: limit to the backend matching the URI scheme\\n:type uri_scheme: string", "params": [{"name": "uri_scheme", "default": null}]}, "core.playlists.save": {"description": "Save the playlist.\\n\\nFor a playlist to be saveable, it must have the ``uri`` attribute set.\\nYou must not set the ``uri`` atribute yourself, but use playlist\\nobjects returned by :meth:`create` or retrieved from :attr:`playlists`,\\nwhich will always give you saveable playlists.\\n\\nThe method returns the saved playlist. The return playlist may differ\\nfrom the saved playlist. E.g. if the playlist name was changed, the\\nreturned playlist may have a different URI. The caller of this method\\nmust throw away the playlist sent to this method, and use the\\nreturned playlist instead.\\n\\nIf the playlist\'s URI isn\'t set or doesn\'t match the URI scheme of a\\ncurrent backend, nothing is done and :class:`None` is returned.\\n\\n:param playlist: the playlist\\n:type playlist: :class:`mopidy.models.Playlist`\\n:rtype: :class:`mopidy.models.Playlist` or :class:`None`", "params": [{"name": "playlist"}]}, "core.tracklist.add": {"description": "Add tracks to the tracklist.\\n\\nIf ``uris`` is given instead of ``tracks``, the URIs are\\nlooked up in the library and the resulting tracks are added to the\\ntracklist.\\n\\nIf ``at_position`` is given, the tracks are inserted at the given\\nposition in the tracklist. If ``at_position`` is not given, the tracks\\nare appended to the end of the tracklist.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.\\n\\n:param tracks: tracks to add\\n:type tracks: list of :class:`mopidy.models.Track` or :class:`None`\\n:param at_position: position in tracklist to add tracks\\n:type at_position: int or :class:`None`\\n:param uris: list of URIs for tracks to add\\n:type uris: list of string or :class:`None`\\n:rtype: list of :class:`mopidy.models.TlTrack`\\n\\n.. versionadded:: 1.0\\n    The ``uris`` argument.\\n\\n.. deprecated:: 1.0\\n    The ``tracks`` argument. Use ``uris``.", "params": [{"name": "tracks", "default": null}, {"name": "at_position", "default": null}, {"name": "uris", "default": null}]}, "core.tracklist.clear": {"description": "Clear the tracklist.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.", "params": []}, "core.tracklist.eot_track": {"description": "The track that will be played after the given track.\\n\\nNot necessarily the same track as :meth:`next_track`.\\n\\n.. deprecated:: 3.0\\n    Use :meth:`get_eot_tlid` instead.\\n\\n:param tl_track: the reference track\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:rtype: :class:`mopidy.models.TlTrack` or :class:`None`", "params": [{"name": "tl_track"}]}, "core.tracklist.filter": {"description": "Filter the tracklist by the given criteria.\\n\\nEach rule in the criteria consists of a model field and a list of\\nvalues to compare it against. If the model field matches any of the\\nvalues, it may be returned.\\n\\nOnly tracks that match all the given criteria are returned.\\n\\nExamples::\\n\\n    # Returns tracks with TLIDs 1, 2, 3, or 4 (tracklist ID)\\n    filter({\'tlid\': [1, 2, 3, 4]})\\n\\n    # Returns track with URIs \'xyz\' or \'abc\'\\n    filter({\'uri\': [\'xyz\', \'abc\']})\\n\\n    # Returns track with a matching TLIDs (1, 3 or 6) and a\\n    # matching URI (\'xyz\' or \'abc\')\\n    filter({\'tlid\': [1, 3, 6], \'uri\': [\'xyz\', \'abc\']})\\n\\n:param criteria: one or more rules to match by\\n:type criteria: dict, of (string, list) pairs\\n:rtype: list of :class:`mopidy.models.TlTrack`", "params": [{"name": "criteria"}]}, "core.tracklist.get_consume": {"description": "Get consume mode.\\n\\n:class:`True`\\n    Tracks are removed from the tracklist when they have been played.\\n:class:`False`\\n    Tracks are not removed from the tracklist.", "params": []}, "core.tracklist.get_eot_tlid": {"description": "The TLID of the track that will be played after the current track.\\n\\nNot necessarily the same TLID as returned by :meth:`get_next_tlid`.\\n\\n:rtype: :class:`int` or :class:`None`\\n\\n.. versionadded:: 1.1", "params": []}, "core.tracklist.get_length": {"description": "Get length of the tracklist.", "params": []}, "core.tracklist.get_next_tlid": {"description": "The tlid of the track that will be played if calling\\n:meth:`mopidy.core.PlaybackController.next()`.\\n\\nFor normal playback this is the next track in the tracklist. If repeat\\nis enabled the next track can loop around the tracklist. When random is\\nenabled this should be a random track, all tracks should be played once\\nbefore the tracklist repeats.\\n\\n:rtype: :class:`int` or :class:`None`\\n\\n.. versionadded:: 1.1", "params": []}, "core.tracklist.get_previous_tlid": {"description": "Returns the TLID of the track that will be played if calling\\n:meth:`mopidy.core.PlaybackController.previous()`.\\n\\nFor normal playback this is the previous track in the tracklist. If\\nrandom and/or consume is enabled it should return the current track\\ninstead.\\n\\n:rtype: :class:`int` or :class:`None`\\n\\n.. versionadded:: 1.1", "params": []}, "core.tracklist.get_random": {"description": "Get random mode.\\n\\n:class:`True`\\n    Tracks are selected at random from the tracklist.\\n:class:`False`\\n    Tracks are played in the order of the tracklist.", "params": []}, "core.tracklist.get_repeat": {"description": "Get repeat mode.\\n\\n:class:`True`\\n    The tracklist is played repeatedly.\\n:class:`False`\\n    The tracklist is played once.", "params": []}, "core.tracklist.get_single": {"description": "Get single mode.\\n\\n:class:`True`\\n    Playback is stopped after current song, unless in ``repeat`` mode.\\n:class:`False`\\n    Playback continues after current song.", "params": []}, "core.tracklist.get_tl_tracks": {"description": "Get tracklist as list of :class:`mopidy.models.TlTrack`.", "params": []}, "core.tracklist.get_tracks": {"description": "Get tracklist as list of :class:`mopidy.models.Track`.", "params": []}, "core.tracklist.get_version": {"description": "Get the tracklist version.\\n\\nInteger which is increased every time the tracklist is changed. Is not\\nreset before Mopidy is restarted.", "params": []}, "core.tracklist.index": {"description": "The position of the given track in the tracklist.\\n\\nIf neither *tl_track* or *tlid* is given we return the index of\\nthe currently playing track.\\n\\n:param tl_track: the track to find the index of\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:param tlid: TLID of the track to find the index of\\n:type tlid: :class:`int` or :class:`None`\\n:rtype: :class:`int` or :class:`None`\\n\\n.. versionadded:: 1.1\\n    The *tlid* parameter", "params": [{"name": "tl_track", "default": null}, {"name": "tlid", "default": null}]}, "core.tracklist.move": {"description": "Move the tracks in the slice ``[start:end]`` to ``to_position``.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.\\n\\n:param start: position of first track to move\\n:type start: int\\n:param end: position after last track to move\\n:type end: int\\n:param to_position: new position for the tracks\\n:type to_position: int", "params": [{"name": "start"}, {"name": "end"}, {"name": "to_position"}]}, "core.tracklist.next_track": {"description": "The track that will be played if calling\\n:meth:`mopidy.core.PlaybackController.next()`.\\n\\nFor normal playback this is the next track in the tracklist. If repeat\\nis enabled the next track can loop around the tracklist. When random is\\nenabled this should be a random track, all tracks should be played once\\nbefore the tracklist repeats.\\n\\n.. deprecated:: 3.0\\n    Use :meth:`get_next_tlid` instead.\\n\\n:param tl_track: the reference track\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:rtype: :class:`mopidy.models.TlTrack` or :class:`None`", "params": [{"name": "tl_track"}]}, "core.tracklist.previous_track": {"description": "Returns the track that will be played if calling\\n:meth:`mopidy.core.PlaybackController.previous()`.\\n\\nFor normal playback this is the previous track in the tracklist. If\\nrandom and/or consume is enabled it should return the current track\\ninstead.\\n\\n.. deprecated:: 3.0\\n    Use :meth:`get_previous_tlid` instead.\\n\\n:param tl_track: the reference track\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:rtype: :class:`mopidy.models.TlTrack` or :class:`None`", "params": [{"name": "tl_track"}]}, "core.tracklist.remove": {"description": "Remove the matching tracks from the tracklist.\\n\\nUses :meth:`filter()` to lookup the tracks to remove.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.\\n\\n:param criteria: one or more rules to match by\\n:type criteria: dict, of (string, list) pairs\\n:rtype: list of :class:`mopidy.models.TlTrack` that were removed", "params": [{"name": "criteria"}]}, "core.tracklist.set_consume": {"description": "Set consume mode.\\n\\n:class:`True`\\n    Tracks are removed from the tracklist when they have been played.\\n:class:`False`\\n    Tracks are not removed from the tracklist.", "params": [{"name": "value"}]}, "core.tracklist.set_random": {"description": "Set random mode.\\n\\n:class:`True`\\n    Tracks are selected at random from the tracklist.\\n:class:`False`\\n    Tracks are played in the order of the tracklist.", "params": [{"name": "value"}]}, "core.tracklist.set_repeat": {"description": "Set repeat mode.\\n\\nTo repeat a single track, set both ``repeat`` and ``single``.\\n\\n:class:`True`\\n    The tracklist is played repeatedly.\\n:class:`False`\\n    The tracklist is played once.", "params": [{"name": "value"}]}, "core.tracklist.set_single": {"description": "Set single mode.\\n\\n:class:`True`\\n    Playback is stopped after current song, unless in ``repeat`` mode.\\n:class:`False`\\n    Playback continues after current song.", "params": [{"name": "value"}]}, "core.tracklist.shuffle": {"description": "Shuffles the entire tracklist. If ``start`` and ``end`` is given only\\nshuffles the slice ``[start:end]``.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.\\n\\n:param start: position of first track to shuffle\\n:type start: int or :class:`None`\\n:param end: position after last track to shuffle\\n:type end: int or :class:`None`", "params": [{"name": "start", "default": null}, {"name": "end", "default": null}]}, "core.tracklist.slice": {"description": "Returns a slice of the tracklist, limited by the given start and end\\npositions.\\n\\n:param start: position of first track to include in slice\\n:type start: int\\n:param end: position after last track to include in slice\\n:type end: int\\n:rtype: :class:`mopidy.models.TlTrack`", "params": [{"name": "start"}, {"name": "end"}]}}}'
okt 24 00:01:01 Desktop-Ubuntu mopidy[10884]: DEBUG    2022-10-24 00:01:01,571 [10884:HttpServer] mopidy.http.handlers
okt 24 00:01:01 Desktop-Ubuntu mopidy[10884]:   Received WebSocket message from 127.0.0.1: '{"method":"core.describe","jsonrpc":"2.0","id":20}'
okt 24 00:01:01 Desktop-Ubuntu mopidy[10884]: DEBUG    2022-10-24 00:01:01,567 [10884:HttpServer] mopidy.http.handlers
okt 24 00:01:01 Desktop-Ubuntu mopidy[10884]:   New WebSocket connection from 127.0.0.1
okt 24 00:01:01 Desktop-Ubuntu mopidy[10884]: DEBUG    2022-10-24 00:01:01,565 [10884:HttpServer] mopidy.http.handlers
okt 24 00:01:01 Desktop-Ubuntu mopidy[10884]:   101 GET /mopidy/ws/ (127.0.0.1) 19.18ms
okt 24 00:01:01 Desktop-Ubuntu mopidy[10884]: INFO     2022-10-24 00:01:01,564 [10884:HttpServer] tornado.access
okt 24 00:00:59 Desktop-Ubuntu mopidy[10884]:   Zeroconf service 'Mopidy HTTP server on Desktop-Ubuntu' (_mopidy-http._tcp at []:6680): Published
okt 24 00:00:59 Desktop-Ubuntu mopidy[10884]: DEBUG    2022-10-24 00:00:59,979 [10884:HttpFrontend-13 (_actor_loop)] mopidy.zeroconf
okt 24 00:00:59 Desktop-Ubuntu mopidy[10884]:   Zeroconf service 'Mopidy HTTP server on Desktop-Ubuntu' (_http._tcp at []:6680): Published
okt 24 00:00:59 Desktop-Ubuntu mopidy[10884]: DEBUG    2022-10-24 00:00:59,977 [10884:HttpFrontend-13 (_actor_loop)] mopidy.zeroconf
okt 24 00:00:59 Desktop-Ubuntu mopidy[10884]:     '/': <class 'tornado.web.RedirectHandler'>
okt 24 00:00:59 Desktop-Ubuntu mopidy[10884]:     '/mopidy/': <class 'mopidy.http.handlers.ClientListHandler'>
okt 24 00:00:59 Desktop-Ubuntu mopidy[10884]:     '/mopidy/(.+)': <class 'mopidy.http.handlers.StaticFileHandler'>
okt 24 00:00:59 Desktop-Ubuntu mopidy[10884]:     '/mopidy/rpc': <class 'mopidy.http.handlers.JsonRpcHandler'>
okt 24 00:00:59 Desktop-Ubuntu mopidy[10884]:     '/mopidy/ws/?': <class 'mopidy.http.handlers.WebSocketHandler'>
okt 24 00:00:59 Desktop-Ubuntu mopidy[10884]:     '/mopidy': <class 'mopidy.http.handlers.AddSlashHandler'>
okt 24 00:00:59 Desktop-Ubuntu mopidy[10884]:     '/iris/(.*)': <class 'mopidy_iris.handlers.ReactRouterHandler'>
okt 24 00:00:59 Desktop-Ubuntu mopidy[10884]:     '/iris/((.*)(?:css|js|json|map)$)': <class 'tornado.web.StaticFileHandler'>
okt 24 00:00:59 Desktop-Ubuntu mopidy[10884]:     '/iris/assets/(.*)': <class 'tornado.web.StaticFileHandler'>
okt 24 00:00:59 Desktop-Ubuntu mopidy[10884]:     '/iris/ws/?': <class 'mopidy_iris.handlers.WebsocketHandler'>
okt 24 00:00:59 Desktop-Ubuntu mopidy[10884]:     '/iris/http/([^/]*)': <class 'mopidy_iris.handlers.HttpHandler'>
okt 24 00:00:59 Desktop-Ubuntu mopidy[10884]:     '/iris': <class 'mopidy.http.handlers.AddSlashHandler'>
okt 24 00:00:59 Desktop-Ubuntu mopidy[10884]:     '/local/(.+)': <class 'mopidy_local.web.ImageHandler'>
okt 24 00:00:59 Desktop-Ubuntu mopidy[10884]:     '/local/(index.html)?': <class 'mopidy_local.web.IndexHandler'>
okt 24 00:00:59 Desktop-Ubuntu mopidy[10884]:     '/local': <class 'mopidy.http.handlers.AddSlashHandler'>
okt 24 00:00:59 Desktop-Ubuntu mopidy[10884]:     '/youtube/(.*\\.(?:webm|m4a|mp3|ogg))': <class 'mopidy_youtube.web.AudioHandler'>
okt 24 00:00:59 Desktop-Ubuntu mopidy[10884]:     '/youtube/(.*\\.jpg)': <class 'mopidy_youtube.web.ImageHandler'>
okt 24 00:00:59 Desktop-Ubuntu mopidy[10884]:     '/youtube/(index.html|image.html)?': <class 'mopidy_youtube.web.IndexHandler'>
okt 24 00:00:59 Desktop-Ubuntu mopidy[10884]:     '/youtube': <class 'mopidy.http.handlers.AddSlashHandler'>
okt 24 00:00:59 Desktop-Ubuntu mopidy[10884]:   HTTP routes from extensions:
okt 24 00:00:59 Desktop-Ubuntu mopidy[10884]: DEBUG    2022-10-24 00:00:59,973 [10884:HttpServer] mopidy.http.actor
okt 24 00:00:59 Desktop-Ubuntu mopidy[10884]:   Default webclient is mopidy
okt 24 00:00:59 Desktop-Ubuntu mopidy[10884]: DEBUG    2022-10-24 00:00:59,973 [10884:HttpServer] mopidy.http.actor
okt 24 00:00:59 Desktop-Ubuntu mopidy[10884]:   Loaded HTTP extension: mopidy
okt 24 00:00:59 Desktop-Ubuntu mopidy[10884]: DEBUG    2022-10-24 00:00:59,972 [10884:HttpServer] mopidy.http.actor
okt 24 00:00:59 Desktop-Ubuntu mopidy[10884]:   Loaded HTTP extension: iris
okt 24 00:00:59 Desktop-Ubuntu mopidy[10884]: DEBUG    2022-10-24 00:00:59,972 [10884:HttpServer] mopidy.http.actor
okt 24 00:00:59 Desktop-Ubuntu mopidy[10884]:   Loaded HTTP extension: local
okt 24 00:00:59 Desktop-Ubuntu mopidy[10884]: DEBUG    2022-10-24 00:00:59,971 [10884:HttpServer] mopidy.http.actor
okt 24 00:00:59 Desktop-Ubuntu mopidy[10884]:   Loaded HTTP extension: youtube
okt 24 00:00:59 Desktop-Ubuntu mopidy[10884]: DEBUG    2022-10-24 00:00:59,970 [10884:HttpServer] mopidy.http.actor
okt 24 00:00:59 Desktop-Ubuntu mopidy[10884]:   Starting GLib mainloop
okt 24 00:00:59 Desktop-Ubuntu mopidy[10884]: INFO     2022-10-24 00:00:59,966 [10884:MainThread] mopidy.commands
okt 24 00:00:59 Desktop-Ubuntu mopidy[10884]:   Using selector: EpollSelector
okt 24 00:00:59 Desktop-Ubuntu mopidy[10884]: DEBUG    2022-10-24 00:00:59,966 [10884:HttpServer] asyncio
okt 24 00:00:59 Desktop-Ubuntu mopidy[10884]:   HttpFrontend took 1ms
okt 24 00:00:59 Desktop-Ubuntu mopidy[10884]: TRACE    2022-10-24 00:00:59,965 [10884:MainThread] mopidy.internal.timer
okt 24 00:00:59 Desktop-Ubuntu mopidy[10884]:   HTTP server running at [::ffff:127.0.0.1]:6680
okt 24 00:00:59 Desktop-Ubuntu mopidy[10884]: INFO     2022-10-24 00:00:59,965 [10884:HttpFrontend-13 (_actor_loop)] mopidy.http.actor
okt 24 00:00:59 Desktop-Ubuntu mopidy[10884]:   Starting HttpFrontend (urn:uuid:a82b6326-322d-4631-9baf-6e0b1b4ec975)
okt 24 00:00:59 Desktop-Ubuntu mopidy[10884]: DEBUG    2022-10-24 00:00:59,965 [10884:MainThread] pykka
okt 24 00:00:59 Desktop-Ubuntu mopidy[10884]:   Registered HttpFrontend (urn:uuid:a82b6326-322d-4631-9baf-6e0b1b4ec975)
okt 24 00:00:59 Desktop-Ubuntu mopidy[10884]: DEBUG    2022-10-24 00:00:59,965 [10884:MainThread] pykka
okt 24 00:00:59 Desktop-Ubuntu mopidy[10884]:   Starting HTTP server
okt 24 00:00:59 Desktop-Ubuntu mopidy[10884]: DEBUG    2022-10-24 00:00:59,964 [10884:MainThread] mopidy.http.actor
okt 24 00:00:59 Desktop-Ubuntu mopidy[10884]:   IrisFrontend took 0ms
okt 24 00:00:59 Desktop-Ubuntu mopidy[10884]: TRACE    2022-10-24 00:00:59,964 [10884:MainThread] mopidy.internal.timer
okt 24 00:00:59 Desktop-Ubuntu mopidy[10884]:   Starting Iris 3.64.1
okt 24 00:00:59 Desktop-Ubuntu mopidy[10884]: INFO     2022-10-24 00:00:59,964 [10884:IrisFrontend-11 (_actor_loop)] mopidy_iris.core
okt 24 00:00:59 Desktop-Ubuntu mopidy[10884]:   Starting IrisFrontend (urn:uuid:bb313491-800e-4ebe-8a5f-92f8cc77c8ec)
okt 24 00:00:59 Desktop-Ubuntu mopidy[10884]: DEBUG    2022-10-24 00:00:59,964 [10884:MainThread] pykka
okt 24 00:00:59 Desktop-Ubuntu mopidy[10884]:   Registered IrisFrontend (urn:uuid:bb313491-800e-4ebe-8a5f-92f8cc77c8ec)
okt 24 00:00:59 Desktop-Ubuntu mopidy[10884]: DEBUG    2022-10-24 00:00:59,964 [10884:MainThread] pykka
okt 24 00:00:59 Desktop-Ubuntu mopidy[10884]:   YouTubeCoreListener took 0ms
okt 24 00:00:59 Desktop-Ubuntu mopidy[10884]: TRACE    2022-10-24 00:00:59,963 [10884:MainThread] mopidy.internal.timer
okt 24 00:00:59 Desktop-Ubuntu mopidy[10884]:   Starting YouTubeCoreListener (urn:uuid:8c2897dc-3fc9-4fb4-9801-62164c2c48bf)
okt 24 00:00:59 Desktop-Ubuntu mopidy[10884]: DEBUG    2022-10-24 00:00:59,963 [10884:MainThread] pykka
okt 24 00:00:59 Desktop-Ubuntu mopidy[10884]:   Registered YouTubeCoreListener (urn:uuid:8c2897dc-3fc9-4fb4-9801-62164c2c48bf)
okt 24 00:00:59 Desktop-Ubuntu mopidy[10884]: DEBUG    2022-10-24 00:00:59,963 [10884:MainThread] pykka
okt 24 00:00:59 Desktop-Ubuntu mopidy[10884]:   YouTubeAutoplayer took 0ms
okt 24 00:00:59 Desktop-Ubuntu mopidy[10884]: TRACE    2022-10-24 00:00:59,963 [10884:MainThread] mopidy.internal.timer
okt 24 00:00:59 Desktop-Ubuntu mopidy[10884]:   Starting YouTubeAutoplayer (urn:uuid:f94e006b-2c4a-41c9-9870-86dbe88be934)
okt 24 00:00:59 Desktop-Ubuntu mopidy[10884]: DEBUG    2022-10-24 00:00:59,963 [10884:MainThread] pykka
okt 24 00:00:59 Desktop-Ubuntu mopidy[10884]:   Registered YouTubeAutoplayer (urn:uuid:f94e006b-2c4a-41c9-9870-86dbe88be934)
okt 24 00:00:59 Desktop-Ubuntu mopidy[10884]: DEBUG    2022-10-24 00:00:59,963 [10884:MainThread] pykka
okt 24 00:00:59 Desktop-Ubuntu mopidy[10884]:   Starting Mopidy frontends: YouTubeAutoplayer, YouTubeCoreListener, IrisFrontend, HttpFrontend
okt 24 00:00:59 Desktop-Ubuntu mopidy[10884]: INFO     2022-10-24 00:00:59,962 [10884:MainThread] mopidy.commands
okt 24 00:00:59 Desktop-Ubuntu mopidy[10884]:   Starting Core (urn:uuid:b4e152f1-0bb2-4f64-a220-5f62d1182c00)
okt 24 00:00:59 Desktop-Ubuntu mopidy[10884]: DEBUG    2022-10-24 00:00:59,958 [10884:MainThread] pykka
okt 24 00:00:59 Desktop-Ubuntu mopidy[10884]:   Registered Core (urn:uuid:b4e152f1-0bb2-4f64-a220-5f62d1182c00)
okt 24 00:00:59 Desktop-Ubuntu mopidy[10884]: DEBUG    2022-10-24 00:00:59,958 [10884:MainThread] pykka
okt 24 00:00:59 Desktop-Ubuntu mopidy[10884]:   Starting Mopidy core
okt 24 00:00:59 Desktop-Ubuntu mopidy[10884]: INFO     2022-10-24 00:00:59,953 [10884:MainThread] mopidy.commands
okt 24 00:00:59 Desktop-Ubuntu mopidy[10884]:   https://music.youtube.com:443 "GET / HTTP/1.1" 200 None
okt 24 00:00:59 Desktop-Ubuntu mopidy[10884]: DEBUG    2022-10-24 00:00:59,409 [10884:YouTubeBackend-3 (_actor_loop)] urllib3.connectionpool
okt 24 00:00:59 Desktop-Ubuntu mopidy[10884]:   StreamBackend took 3ms
okt 24 00:00:59 Desktop-Ubuntu mopidy[10884]: TRACE    2022-10-24 00:00:59,244 [10884:MainThread] mopidy.internal.timer
okt 24 00:00:59 Desktop-Ubuntu mopidy[10884]:   Starting StreamBackend (urn:uuid:d8d9e30d-3185-4fa5-82cf-374ee829d777)
okt 24 00:00:59 Desktop-Ubuntu mopidy[10884]: DEBUG    2022-10-24 00:00:59,241 [10884:MainThread] pykka
okt 24 00:00:59 Desktop-Ubuntu mopidy[10884]:   Registered StreamBackend (urn:uuid:d8d9e30d-3185-4fa5-82cf-374ee829d777)
okt 24 00:00:59 Desktop-Ubuntu mopidy[10884]: DEBUG    2022-10-24 00:00:59,241 [10884:MainThread] pykka
okt 24 00:00:59 Desktop-Ubuntu mopidy[10884]:   M3UBackend took 1ms
okt 24 00:00:59 Desktop-Ubuntu mopidy[10884]: TRACE    2022-10-24 00:00:59,240 [10884:MainThread] mopidy.internal.timer
okt 24 00:00:59 Desktop-Ubuntu mopidy[10884]:   Starting M3UBackend (urn:uuid:0995b9b3-6fb5-451f-9e0b-4dfdea9411ea)
okt 24 00:00:59 Desktop-Ubuntu mopidy[10884]: DEBUG    2022-10-24 00:00:59,239 [10884:MainThread] pykka
okt 24 00:00:59 Desktop-Ubuntu mopidy[10884]:   Registered M3UBackend (urn:uuid:0995b9b3-6fb5-451f-9e0b-4dfdea9411ea)
okt 24 00:00:59 Desktop-Ubuntu mopidy[10884]: DEBUG    2022-10-24 00:00:59,239 [10884:MainThread] pykka
okt 24 00:00:59 Desktop-Ubuntu mopidy[10884]:   FileBackend took 4ms
okt 24 00:00:59 Desktop-Ubuntu mopidy[10884]: TRACE    2022-10-24 00:00:59,239 [10884:MainThread] mopidy.internal.timer
okt 24 00:00:59 Desktop-Ubuntu mopidy[10884]:   Starting new HTTPS connection (1): music.youtube.com:443
okt 24 00:00:59 Desktop-Ubuntu mopidy[10884]: DEBUG    2022-10-24 00:00:59,236 [10884:YouTubeBackend-3 (_actor_loop)] urllib3.connectionpool
okt 24 00:00:59 Desktop-Ubuntu mopidy[10884]:   Starting FileBackend (urn:uuid:04066df1-a721-4ea7-ac62-cac11ac94f93)
okt 24 00:00:59 Desktop-Ubuntu mopidy[10884]: DEBUG    2022-10-24 00:00:59,235 [10884:MainThread] pykka
okt 24 00:00:59 Desktop-Ubuntu mopidy[10884]:   Registered FileBackend (urn:uuid:04066df1-a721-4ea7-ac62-cac11ac94f93)
okt 24 00:00:59 Desktop-Ubuntu mopidy[10884]: DEBUG    2022-10-24 00:00:59,235 [10884:MainThread] pykka
okt 24 00:00:59 Desktop-Ubuntu mopidy[10884]:   Failed expanding path ($XDG_MUSIC_DIR) from file/media_dirs config value.
okt 24 00:00:59 Desktop-Ubuntu mopidy[10884]: DEBUG    2022-10-24 00:00:59,234 [10884:MainThread] mopidy.file.library
okt 24 00:00:59 Desktop-Ubuntu mopidy[10884]:   LocalBackend took 4ms
okt 24 00:00:59 Desktop-Ubuntu mopidy[10884]: TRACE    2022-10-24 00:00:59,234 [10884:MainThread] mopidy.internal.timer
okt 24 00:00:59 Desktop-Ubuntu mopidy[10884]:   Starting LocalBackend (urn:uuid:bd0e2eb0-4c71-4aac-a32b-d6b3330cb268)
okt 24 00:00:59 Desktop-Ubuntu mopidy[10884]: DEBUG    2022-10-24 00:00:59,232 [10884:MainThread] pykka
okt 24 00:00:59 Desktop-Ubuntu mopidy[10884]:   Registered LocalBackend (urn:uuid:bd0e2eb0-4c71-4aac-a32b-d6b3330cb268)
okt 24 00:00:59 Desktop-Ubuntu mopidy[10884]: DEBUG    2022-10-24 00:00:59,231 [10884:MainThread] pykka
okt 24 00:00:59 Desktop-Ubuntu mopidy[10884]:   Using YouTube Music API
okt 24 00:00:59 Desktop-Ubuntu mopidy[10884]: INFO     2022-10-24 00:00:59,230 [10884:YouTubeBackend-3 (_actor_loop)] mopidy_youtube
okt 24 00:00:59 Desktop-Ubuntu mopidy[10884]:   using jAPI
okt 24 00:00:59 Desktop-Ubuntu mopidy[10884]: INFO     2022-10-24 00:00:59,230 [10884:YouTubeBackend-3 (_actor_loop)] mopidy_youtube
okt 24 00:00:59 Desktop-Ubuntu mopidy[10884]:   file caching enabled (at /var/cache/mopidy/youtube)
okt 24 00:00:59 Desktop-Ubuntu mopidy[10884]: INFO     2022-10-24 00:00:59,230 [10884:YouTubeBackend-3 (_actor_loop)] mopidy_youtube
okt 24 00:00:59 Desktop-Ubuntu mopidy[10884]:   YouTubeBackend took 20ms
okt 24 00:00:59 Desktop-Ubuntu mopidy[10884]: TRACE    2022-10-24 00:00:59,229 [10884:MainThread] mopidy.internal.timer
okt 24 00:00:59 Desktop-Ubuntu mopidy[10884]:   Starting YouTubeBackend (urn:uuid:d459aeac-455e-4fb8-b351-747261e5c5b5)
okt 24 00:00:59 Desktop-Ubuntu mopidy[10884]: DEBUG    2022-10-24 00:00:59,227 [10884:MainThread] pykka
okt 24 00:00:59 Desktop-Ubuntu mopidy[10884]:   Registered YouTubeBackend (urn:uuid:d459aeac-455e-4fb8-b351-747261e5c5b5)
okt 24 00:00:59 Desktop-Ubuntu mopidy[10884]: DEBUG    2022-10-24 00:00:59,226 [10884:MainThread] pykka
okt 24 00:00:59 Desktop-Ubuntu mopidy[10884]:   Audio output set to "pulsesink server=127.0.0.1"
okt 24 00:00:59 Desktop-Ubuntu mopidy[10884]: INFO     2022-10-24 00:00:59,215 [10884:Audio-2 (_actor_loop)] mopidy.audio.actor
okt 24 00:00:59 Desktop-Ubuntu mopidy[10884]:   Starting Mopidy backends: YouTubeBackend, LocalBackend, FileBackend, M3UBackend, StreamBackend
okt 24 00:00:59 Desktop-Ubuntu mopidy[10884]: INFO     2022-10-24 00:00:59,209 [10884:MainThread] mopidy.commands
okt 24 00:00:59 Desktop-Ubuntu mopidy[10884]:   Starting Audio (urn:uuid:5842ce77-b215-4e36-8fcd-2ca108733d49)
okt 24 00:00:59 Desktop-Ubuntu mopidy[10884]: DEBUG    2022-10-24 00:00:59,208 [10884:MainThread] pykka
okt 24 00:00:59 Desktop-Ubuntu mopidy[10884]:   Registered Audio (urn:uuid:5842ce77-b215-4e36-8fcd-2ca108733d49)
okt 24 00:00:59 Desktop-Ubuntu mopidy[10884]: DEBUG    2022-10-24 00:00:59,208 [10884:MainThread] pykka
okt 24 00:00:59 Desktop-Ubuntu mopidy[10884]:   Starting Mopidy audio
okt 24 00:00:59 Desktop-Ubuntu mopidy[10884]: INFO     2022-10-24 00:00:59,208 [10884:MainThread] mopidy.commands
okt 24 00:00:59 Desktop-Ubuntu mopidy[10884]:   Mixer volume left unchanged
okt 24 00:00:59 Desktop-Ubuntu mopidy[10884]: DEBUG    2022-10-24 00:00:59,207 [10884:MainThread] mopidy.commands
okt 24 00:00:59 Desktop-Ubuntu mopidy[10884]:   Starting SoftwareMixer (urn:uuid:6c5ac76e-5250-4e94-9ae9-93d5d4a4a235)
okt 24 00:00:59 Desktop-Ubuntu mopidy[10884]: DEBUG    2022-10-24 00:00:59,206 [10884:MainThread] pykka
okt 24 00:00:59 Desktop-Ubuntu mopidy[10884]:   Registered SoftwareMixer (urn:uuid:6c5ac76e-5250-4e94-9ae9-93d5d4a4a235)
okt 24 00:00:59 Desktop-Ubuntu mopidy[10884]: DEBUG    2022-10-24 00:00:59,206 [10884:MainThread] pykka
okt 24 00:00:59 Desktop-Ubuntu mopidy[10884]:   Starting Mopidy mixer: SoftwareMixer
okt 24 00:00:59 Desktop-Ubuntu mopidy[10884]: INFO     2022-10-24 00:00:59,206 [10884:MainThread] mopidy.commands
okt 24 00:00:59 Desktop-Ubuntu mopidy[10884]:   Available Mopidy mixers: SoftwareMixer
okt 24 00:00:59 Desktop-Ubuntu mopidy[10884]: DEBUG    2022-10-24 00:00:59,206 [10884:MainThread] mopidy.commands
okt 24 00:00:59 Desktop-Ubuntu mopidy[10884]:   Disabled extensions: soundcloud
okt 24 00:00:59 Desktop-Ubuntu mopidy[10884]: INFO     2022-10-24 00:00:59,127 [10884:MainThread] mopidy.__main__
okt 24 00:00:59 Desktop-Ubuntu mopidy[10884]:   Enabled extensions: softwaremixer, local, stream, m3u, youtube, http, file, iris
okt 24 00:00:59 Desktop-Ubuntu mopidy[10884]: INFO     2022-10-24 00:00:59,127 [10884:MainThread] mopidy.__main__
okt 24 00:00:59 Desktop-Ubuntu mopidy[10884]:   Validating extension: stream
okt 24 00:00:59 Desktop-Ubuntu mopidy[10884]: DEBUG    2022-10-24 00:00:59,127 [10884:MainThread] mopidy.ext
okt 24 00:00:59 Desktop-Ubuntu mopidy[10884]:   Validating extension: softwaremixer
okt 24 00:00:59 Desktop-Ubuntu mopidy[10884]: DEBUG    2022-10-24 00:00:59,127 [10884:MainThread] mopidy.ext
okt 24 00:00:59 Desktop-Ubuntu mopidy[10884]:   Validating extension: m3u
okt 24 00:00:59 Desktop-Ubuntu mopidy[10884]: DEBUG    2022-10-24 00:00:59,127 [10884:MainThread] mopidy.ext
okt 24 00:00:59 Desktop-Ubuntu mopidy[10884]:   Validating extension: http
okt 24 00:00:59 Desktop-Ubuntu mopidy[10884]: DEBUG    2022-10-24 00:00:59,073 [10884:MainThread] mopidy.ext
okt 24 00:00:59 Desktop-Ubuntu mopidy[10884]:   Validating extension: file
okt 24 00:00:59 Desktop-Ubuntu mopidy[10884]: DEBUG    2022-10-24 00:00:59,073 [10884:MainThread] mopidy.ext
okt 24 00:00:59 Desktop-Ubuntu mopidy[10884]:   Validating extension: iris
okt 24 00:00:59 Desktop-Ubuntu mopidy[10884]: DEBUG    2022-10-24 00:00:59,057 [10884:MainThread] mopidy.ext
okt 24 00:00:59 Desktop-Ubuntu mopidy[10884]:   Validating extension: soundcloud
okt 24 00:00:59 Desktop-Ubuntu mopidy[10884]: DEBUG    2022-10-24 00:00:59,032 [10884:MainThread] mopidy.ext
okt 24 00:00:59 Desktop-Ubuntu mopidy[10884]:   Validating extension: local
okt 24 00:00:59 Desktop-Ubuntu mopidy[10884]: DEBUG    2022-10-24 00:00:59,010 [10884:MainThread] mopidy.ext
okt 24 00:00:58 Desktop-Ubuntu mopidy[10884]:   Validating extension: youtube
okt 24 00:00:58 Desktop-Ubuntu mopidy[10884]: DEBUG    2022-10-24 00:00:58,959 [10884:MainThread] mopidy.ext
okt 24 00:00:58 Desktop-Ubuntu mopidy[10884]:   Ignoring config section 'jukebox' because no matching extension was found
okt 24 00:00:58 Desktop-Ubuntu mopidy[10884]: WARNING  2022-10-24 00:00:58,958 [10884:MainThread] mopidy.config
okt 24 00:00:58 Desktop-Ubuntu mopidy[10884]:   Ignoring config section 'ytmusic' because no matching extension was found
okt 24 00:00:58 Desktop-Ubuntu mopidy[10884]: WARNING  2022-10-24 00:00:58,958 [10884:MainThread] mopidy.config
okt 24 00:00:58 Desktop-Ubuntu mopidy[10884]:   Loading config from command line options
okt 24 00:00:58 Desktop-Ubuntu mopidy[10884]: INFO     2022-10-24 00:00:58,954 [10884:MainThread] mopidy.config
okt 24 00:00:58 Desktop-Ubuntu mopidy[10884]:   Loading config from file:///etc/mopidy/mopidy.conf
okt 24 00:00:58 Desktop-Ubuntu mopidy[10884]: INFO     2022-10-24 00:00:58,954 [10884:MainThread] mopidy.config
okt 24 00:00:58 Desktop-Ubuntu mopidy[10884]:   Loading config from file:///usr/share/mopidy/conf.d/mopidy.conf
okt 24 00:00:58 Desktop-Ubuntu mopidy[10884]: INFO     2022-10-24 00:00:58,953 [10884:MainThread] mopidy.config
okt 24 00:00:58 Desktop-Ubuntu mopidy[10884]:   Loading config from builtin defaults
okt 24 00:00:58 Desktop-Ubuntu mopidy[10884]: INFO     2022-10-24 00:00:58,952 [10884:MainThread] mopidy.config
okt 24 00:00:58 Desktop-Ubuntu mopidy[10884]:   Fetching passwords from your keyring failed. Any passwords stored in the keyring will not be available. (org.freedesktop.DBus.Error.NotSupported: Unable to autolaunch a dbus-daemon without a $DISPLAY for X11)
okt 24 00:00:58 Desktop-Ubuntu mopidy[10884]: DEBUG    2022-10-24 00:00:58,951 [10884:MainThread] mopidy.config.keyring
okt 24 00:00:58 Desktop-Ubuntu mopidy[10884]:   Discovered extensions: youtube, local, soundcloud, iris, file, http, m3u, softwaremixer, stream
okt 24 00:00:58 Desktop-Ubuntu mopidy[10884]: DEBUG    2022-10-24 00:00:58,950 [10884:MainThread] mopidy.ext
okt 24 00:00:58 Desktop-Ubuntu mopidy[10884]:   Loaded extension: Mopidy-Stream 3.3.0
okt 24 00:00:58 Desktop-Ubuntu mopidy[10884]: DEBUG    2022-10-24 00:00:58,946 [10884:MainThread] mopidy.ext
okt 24 00:00:58 Desktop-Ubuntu mopidy[10884]:   Loading entry point: stream = mopidy.stream:Extension
okt 24 00:00:58 Desktop-Ubuntu mopidy[10884]: DEBUG    2022-10-24 00:00:58,946 [10884:MainThread] mopidy.ext
okt 24 00:00:58 Desktop-Ubuntu mopidy[10884]:   Loaded extension: Mopidy-SoftwareMixer 3.3.0
okt 24 00:00:58 Desktop-Ubuntu mopidy[10884]: DEBUG    2022-10-24 00:00:58,946 [10884:MainThread] mopidy.ext
okt 24 00:00:58 Desktop-Ubuntu mopidy[10884]:   Loading entry point: softwaremixer = mopidy.softwaremixer:Extension
okt 24 00:00:58 Desktop-Ubuntu mopidy[10884]: DEBUG    2022-10-24 00:00:58,946 [10884:MainThread] mopidy.ext
okt 24 00:00:58 Desktop-Ubuntu mopidy[10884]:   Loaded extension: Mopidy-M3U 3.3.0
okt 24 00:00:58 Desktop-Ubuntu mopidy[10884]: DEBUG    2022-10-24 00:00:58,946 [10884:MainThread] mopidy.ext
okt 24 00:00:58 Desktop-Ubuntu mopidy[10884]:   Loading entry point: m3u = mopidy.m3u:Extension
okt 24 00:00:58 Desktop-Ubuntu mopidy[10884]: DEBUG    2022-10-24 00:00:58,945 [10884:MainThread] mopidy.ext
okt 24 00:00:58 Desktop-Ubuntu mopidy[10884]:   Loaded extension: Mopidy-HTTP 3.3.0
okt 24 00:00:58 Desktop-Ubuntu mopidy[10884]: DEBUG    2022-10-24 00:00:58,945 [10884:MainThread] mopidy.ext
okt 24 00:00:58 Desktop-Ubuntu mopidy[10884]:   Loading entry point: http = mopidy.http:Extension
okt 24 00:00:58 Desktop-Ubuntu mopidy[10884]: DEBUG    2022-10-24 00:00:58,945 [10884:MainThread] mopidy.ext
okt 24 00:00:58 Desktop-Ubuntu mopidy[10884]:   Loaded extension: Mopidy-File 3.3.0
okt 24 00:00:58 Desktop-Ubuntu mopidy[10884]: DEBUG    2022-10-24 00:00:58,945 [10884:MainThread] mopidy.ext
okt 24 00:00:58 Desktop-Ubuntu mopidy[10884]:   Loading entry point: file = mopidy.file:Extension
okt 24 00:00:58 Desktop-Ubuntu mopidy[10884]: DEBUG    2022-10-24 00:00:58,945 [10884:MainThread] mopidy.ext
okt 24 00:00:58 Desktop-Ubuntu mopidy[10884]:   Loaded extension: Mopidy-Iris 3.64.1
okt 24 00:00:58 Desktop-Ubuntu mopidy[10884]: DEBUG    2022-10-24 00:00:58,942 [10884:MainThread] mopidy.ext
okt 24 00:00:58 Desktop-Ubuntu mopidy[10884]:   Loading entry point: iris = mopidy_iris:Extension
okt 24 00:00:58 Desktop-Ubuntu mopidy[10884]: DEBUG    2022-10-24 00:00:58,942 [10884:MainThread] mopidy.ext
okt 24 00:00:58 Desktop-Ubuntu mopidy[10884]:   Loaded extension: Mopidy-SoundCloud 3.0.1
okt 24 00:00:58 Desktop-Ubuntu mopidy[10884]: DEBUG    2022-10-24 00:00:58,941 [10884:MainThread] mopidy.ext
okt 24 00:00:58 Desktop-Ubuntu mopidy[10884]:   Loading entry point: soundcloud = mopidy_soundcloud:Extension
okt 24 00:00:58 Desktop-Ubuntu mopidy[10884]: DEBUG    2022-10-24 00:00:58,940 [10884:MainThread] mopidy.ext
okt 24 00:00:58 Desktop-Ubuntu mopidy[10884]:   Loaded extension: Mopidy-Local 3.2.1
okt 24 00:00:58 Desktop-Ubuntu mopidy[10884]: DEBUG    2022-10-24 00:00:58,940 [10884:MainThread] mopidy.ext
okt 24 00:00:58 Desktop-Ubuntu mopidy[10884]:   Loading entry point: local = mopidy_local:Extension
okt 24 00:00:58 Desktop-Ubuntu mopidy[10884]: DEBUG    2022-10-24 00:00:58,929 [10884:MainThread] mopidy.ext
okt 24 00:00:58 Desktop-Ubuntu mopidy[10884]:   Loaded extension: Mopidy-YouTube 3.6.1
okt 24 00:00:58 Desktop-Ubuntu mopidy[10884]: DEBUG    2022-10-24 00:00:58,929 [10884:MainThread] mopidy.ext
okt 24 00:00:58 Desktop-Ubuntu mopidy[10884]:   Loading entry point: youtube = mopidy_youtube:Extension
okt 24 00:00:58 Desktop-Ubuntu mopidy[10884]: DEBUG    2022-10-24 00:00:58,928 [10884:MainThread] mopidy.ext
okt 24 00:00:58 Desktop-Ubuntu mopidy[10884]:   Starting Mopidy 3.3.0
okt 24 00:00:58 Desktop-Ubuntu mopidy[10884]: INFO     2022-10-24 00:00:58,925 [10884:MainThread] mopidy.__main__
okt 24 00:00:58 Desktop-Ubuntu systemd[1]: Started Mopidy music server.
okt 24 00:00:58 Desktop-Ubuntu systemd[1]: Starting Mopidy music server...
okt 24 00:00:58 Desktop-Ubuntu systemd[1]: Stopped Mopidy music server.
okt 24 00:00:58 Desktop-Ubuntu systemd[1]: mopidy.service: Deactivated successfully.
okt 24 00:00:58 Desktop-Ubuntu mopidy[10569]:   All actors stopped.
okt 24 00:00:58 Desktop-Ubuntu mopidy[10569]: DEBUG    2022-10-24 00:00:58,483 [10569:MainThread] mopidy.internal.process
okt 24 00:00:58 Desktop-Ubuntu mopidy[10569]:   Stopped SoftwareMixer (urn:uuid:09b488a1-b465-42e3-8ff7-051c5f5726ba)
okt 24 00:00:58 Desktop-Ubuntu mopidy[10569]: DEBUG    2022-10-24 00:00:58,483 [10569:SoftwareMixer-1 (_actor_loop)] pykka
okt 24 00:00:58 Desktop-Ubuntu mopidy[10569]:   Unregistered SoftwareMixer (urn:uuid:09b488a1-b465-42e3-8ff7-051c5f5726ba)
okt 24 00:00:58 Desktop-Ubuntu mopidy[10569]: DEBUG    2022-10-24 00:00:58,483 [10569:SoftwareMixer-1 (_actor_loop)] pykka
okt 24 00:00:58 Desktop-Ubuntu mopidy[10569]:   Stopping 1 instance(s) of SoftwareMixer
okt 24 00:00:58 Desktop-Ubuntu mopidy[10569]: DEBUG    2022-10-24 00:00:58,482 [10569:MainThread] mopidy.internal.process
okt 24 00:00:58 Desktop-Ubuntu mopidy[10569]:   Stopping Mopidy mixer
okt 24 00:00:58 Desktop-Ubuntu mopidy[10569]: INFO     2022-10-24 00:00:58,482 [10569:MainThread] mopidy.commands
okt 24 00:00:58 Desktop-Ubuntu mopidy[10569]:   Stopped Audio (urn:uuid:1ee5d69a-0fba-41a3-903a-b817f79cd3f4)
okt 24 00:00:58 Desktop-Ubuntu mopidy[10569]: DEBUG    2022-10-24 00:00:58,482 [10569:Audio-2 (_actor_loop)] pykka
okt 24 00:00:58 Desktop-Ubuntu mopidy[10569]:   Unregistered Audio (urn:uuid:1ee5d69a-0fba-41a3-903a-b817f79cd3f4)
okt 24 00:00:58 Desktop-Ubuntu mopidy[10569]: DEBUG    2022-10-24 00:00:58,482 [10569:Audio-2 (_actor_loop)] pykka
okt 24 00:00:58 Desktop-Ubuntu mopidy[10569]:   Stopping 1 instance(s) of Audio
okt 24 00:00:58 Desktop-Ubuntu mopidy[10569]: DEBUG    2022-10-24 00:00:58,482 [10569:MainThread] mopidy.internal.process
okt 24 00:00:58 Desktop-Ubuntu mopidy[10569]:   Stopping Mopidy audio
okt 24 00:00:58 Desktop-Ubuntu mopidy[10569]: INFO     2022-10-24 00:00:58,481 [10569:MainThread] mopidy.commands
okt 24 00:00:58 Desktop-Ubuntu mopidy[10569]:   Stopped StreamBackend (urn:uuid:86360615-a961-49df-ad6c-ccd22a66f054)
okt 24 00:00:58 Desktop-Ubuntu mopidy[10569]: DEBUG    2022-10-24 00:00:58,481 [10569:StreamBackend-6 (_actor_loop)] pykka
okt 24 00:00:58 Desktop-Ubuntu mopidy[10569]:   Unregistered StreamBackend (urn:uuid:86360615-a961-49df-ad6c-ccd22a66f054)
okt 24 00:00:58 Desktop-Ubuntu mopidy[10569]: DEBUG    2022-10-24 00:00:58,481 [10569:StreamBackend-6 (_actor_loop)] pykka
okt 24 00:00:58 Desktop-Ubuntu mopidy[10569]:   Stopping 1 instance(s) of StreamBackend
okt 24 00:00:58 Desktop-Ubuntu mopidy[10569]: DEBUG    2022-10-24 00:00:58,481 [10569:MainThread] mopidy.internal.process
okt 24 00:00:58 Desktop-Ubuntu mopidy[10569]:   Stopped M3UBackend (urn:uuid:bf6d39b8-572c-440a-af7a-f7e5f59ae6bd)
okt 24 00:00:58 Desktop-Ubuntu mopidy[10569]: DEBUG    2022-10-24 00:00:58,481 [10569:M3UBackend-5 (_actor_loop)] pykka
okt 24 00:00:58 Desktop-Ubuntu mopidy[10569]:   Unregistered M3UBackend (urn:uuid:bf6d39b8-572c-440a-af7a-f7e5f59ae6bd)
okt 24 00:00:58 Desktop-Ubuntu mopidy[10569]: DEBUG    2022-10-24 00:00:58,481 [10569:M3UBackend-5 (_actor_loop)] pykka
okt 24 00:00:58 Desktop-Ubuntu mopidy[10569]:   Stopping 1 instance(s) of M3UBackend
okt 24 00:00:58 Desktop-Ubuntu mopidy[10569]: DEBUG    2022-10-24 00:00:58,481 [10569:MainThread] mopidy.internal.process
okt 24 00:00:58 Desktop-Ubuntu mopidy[10569]:   Stopped FileBackend (urn:uuid:45743d0e-e8dd-4866-b37d-6aa3ca935d52)
okt 24 00:00:58 Desktop-Ubuntu mopidy[10569]: DEBUG    2022-10-24 00:00:58,481 [10569:FileBackend-4 (_actor_loop)] pykka
okt 24 00:00:58 Desktop-Ubuntu mopidy[10569]:   Unregistered FileBackend (urn:uuid:45743d0e-e8dd-4866-b37d-6aa3ca935d52)
okt 24 00:00:58 Desktop-Ubuntu mopidy[10569]: DEBUG    2022-10-24 00:00:58,480 [10569:FileBackend-4 (_actor_loop)] pykka
okt 24 00:00:58 Desktop-Ubuntu mopidy[10569]:   Stopping 1 instance(s) of FileBackend
okt 24 00:00:58 Desktop-Ubuntu mopidy[10569]: DEBUG    2022-10-24 00:00:58,480 [10569:MainThread] mopidy.internal.process
okt 24 00:00:58 Desktop-Ubuntu mopidy[10569]:   Stopped LocalBackend (urn:uuid:daa7578f-1e53-4382-85a8-ab8a8ef6c50f)
okt 24 00:00:58 Desktop-Ubuntu mopidy[10569]: DEBUG    2022-10-24 00:00:58,480 [10569:LocalBackend-3 (_actor_loop)] pykka
okt 24 00:00:58 Desktop-Ubuntu mopidy[10569]:   Unregistered LocalBackend (urn:uuid:daa7578f-1e53-4382-85a8-ab8a8ef6c50f)
okt 24 00:00:58 Desktop-Ubuntu mopidy[10569]: DEBUG    2022-10-24 00:00:58,480 [10569:LocalBackend-3 (_actor_loop)] pykka
okt 24 00:00:58 Desktop-Ubuntu mopidy[10569]:   Stopping 1 instance(s) of LocalBackend
okt 24 00:00:58 Desktop-Ubuntu mopidy[10569]: DEBUG    2022-10-24 00:00:58,480 [10569:MainThread] mopidy.internal.process
okt 24 00:00:58 Desktop-Ubuntu mopidy[10569]:   Stopping 0 instance(s) of YouTubeBackend
okt 24 00:00:58 Desktop-Ubuntu mopidy[10569]: DEBUG    2022-10-24 00:00:58,480 [10569:MainThread] mopidy.internal.process
okt 24 00:00:58 Desktop-Ubuntu mopidy[10569]:   Stopping Mopidy backends
okt 24 00:00:58 Desktop-Ubuntu mopidy[10569]: INFO     2022-10-24 00:00:58,480 [10569:MainThread] mopidy.commands
okt 24 00:00:58 Desktop-Ubuntu mopidy[10569]:   Stopped Core (urn:uuid:925094b8-ce32-4daa-bc51-92707a409f2f)
okt 24 00:00:58 Desktop-Ubuntu mopidy[10569]: DEBUG    2022-10-24 00:00:58,480 [10569:Core-7 (_actor_loop)] pykka
okt 24 00:00:58 Desktop-Ubuntu mopidy[10569]:   Unregistered Core (urn:uuid:925094b8-ce32-4daa-bc51-92707a409f2f)
okt 24 00:00:58 Desktop-Ubuntu mopidy[10569]: DEBUG    2022-10-24 00:00:58,480 [10569:Core-7 (_actor_loop)] pykka
okt 24 00:00:58 Desktop-Ubuntu mopidy[10569]:   Stopping 1 instance(s) of Core
okt 24 00:00:58 Desktop-Ubuntu mopidy[10569]: DEBUG    2022-10-24 00:00:58,479 [10569:MainThread] mopidy.internal.process
okt 24 00:00:58 Desktop-Ubuntu mopidy[10569]:   Stopped HTTP server
okt 24 00:00:58 Desktop-Ubuntu mopidy[10569]: DEBUG    2022-10-24 00:00:58,479 [10569:HttpServer] mopidy.http.actor
okt 24 00:00:58 Desktop-Ubuntu mopidy[10569]:   Stopping Mopidy core
okt 24 00:00:58 Desktop-Ubuntu mopidy[10569]: INFO     2022-10-24 00:00:58,479 [10569:MainThread] mopidy.commands
okt 24 00:00:58 Desktop-Ubuntu mopidy[10569]:   Stopping HTTP server
okt 24 00:00:58 Desktop-Ubuntu mopidy[10569]: DEBUG    2022-10-24 00:00:58,479 [10569:HttpFrontend-12 (_actor_loop)] mopidy.http.actor
okt 24 00:00:58 Desktop-Ubuntu mopidy[10569]:   Zeroconf service 'Mopidy HTTP server on Desktop-Ubuntu' (_mopidy-http._tcp at []:6680): Unpublished
okt 24 00:00:58 Desktop-Ubuntu mopidy[10569]: DEBUG    2022-10-24 00:00:58,479 [10569:HttpFrontend-12 (_actor_loop)] mopidy.zeroconf
okt 24 00:00:58 Desktop-Ubuntu mopidy[10569]:   Zeroconf service 'Mopidy HTTP server on Desktop-Ubuntu' (_http._tcp at []:6680): Unpublished
okt 24 00:00:58 Desktop-Ubuntu mopidy[10569]: DEBUG    2022-10-24 00:00:58,478 [10569:HttpFrontend-12 (_actor_loop)] mopidy.zeroconf
okt 24 00:00:58 Desktop-Ubuntu mopidy[10569]:   Stopped HttpFrontend (urn:uuid:ab20a397-f192-4498-8d47-d055fcc7619c)
okt 24 00:00:58 Desktop-Ubuntu mopidy[10569]: DEBUG    2022-10-24 00:00:58,477 [10569:HttpFrontend-12 (_actor_loop)] pykka
okt 24 00:00:58 Desktop-Ubuntu mopidy[10569]:   Unregistered HttpFrontend (urn:uuid:ab20a397-f192-4498-8d47-d055fcc7619c)
okt 24 00:00:58 Desktop-Ubuntu mopidy[10569]: DEBUG    2022-10-24 00:00:58,477 [10569:HttpFrontend-12 (_actor_loop)] pykka
okt 24 00:00:58 Desktop-Ubuntu mopidy[10569]:   Stopping 1 instance(s) of HttpFrontend
okt 24 00:00:58 Desktop-Ubuntu mopidy[10569]: DEBUG    2022-10-24 00:00:58,477 [10569:MainThread] mopidy.internal.process
okt 24 00:00:58 Desktop-Ubuntu mopidy[10569]:   Stopping Iris
okt 24 00:00:58 Desktop-Ubuntu mopidy[10569]: INFO     2022-10-24 00:00:58,477 [10569:IrisFrontend-10 (_actor_loop)] mopidy_iris.core
okt 24 00:00:58 Desktop-Ubuntu mopidy[10569]:   Stopped IrisFrontend (urn:uuid:6fb125f5-2bbd-48de-ad80-848eebedc0e3)
okt 24 00:00:58 Desktop-Ubuntu mopidy[10569]: DEBUG    2022-10-24 00:00:58,477 [10569:IrisFrontend-10 (_actor_loop)] pykka
okt 24 00:00:58 Desktop-Ubuntu mopidy[10569]:   Unregistered IrisFrontend (urn:uuid:6fb125f5-2bbd-48de-ad80-848eebedc0e3)
okt 24 00:00:58 Desktop-Ubuntu mopidy[10569]: DEBUG    2022-10-24 00:00:58,477 [10569:IrisFrontend-10 (_actor_loop)] pykka
okt 24 00:00:58 Desktop-Ubuntu mopidy[10569]:   Stopping 1 instance(s) of IrisFrontend
okt 24 00:00:58 Desktop-Ubuntu mopidy[10569]: DEBUG    2022-10-24 00:00:58,477 [10569:MainThread] mopidy.internal.process
okt 24 00:00:58 Desktop-Ubuntu mopidy[10569]:   Stopped YouTubeCoreListener (urn:uuid:79301c9e-325f-4a39-92de-2809a982e0d4)
okt 24 00:00:58 Desktop-Ubuntu mopidy[10569]: DEBUG    2022-10-24 00:00:58,477 [10569:YouTubeCoreListener-9 (_actor_loop)] pykka
okt 24 00:00:58 Desktop-Ubuntu mopidy[10569]:   Unregistered YouTubeCoreListener (urn:uuid:79301c9e-325f-4a39-92de-2809a982e0d4)
okt 24 00:00:58 Desktop-Ubuntu mopidy[10569]: DEBUG    2022-10-24 00:00:58,477 [10569:YouTubeCoreListener-9 (_actor_loop)] pykka
okt 24 00:00:58 Desktop-Ubuntu mopidy[10569]:   Stopping 1 instance(s) of YouTubeCoreListener
okt 24 00:00:58 Desktop-Ubuntu mopidy[10569]: DEBUG    2022-10-24 00:00:58,476 [10569:MainThread] mopidy.internal.process
okt 24 00:00:58 Desktop-Ubuntu mopidy[10569]:   Stopped YouTubeAutoplayer (urn:uuid:a8b7e333-7d5e-4afa-8847-ec9eb7ef191c)
okt 24 00:00:58 Desktop-Ubuntu mopidy[10569]: DEBUG    2022-10-24 00:00:58,476 [10569:YouTubeAutoplayer-8 (_actor_loop)] pykka
okt 24 00:00:58 Desktop-Ubuntu mopidy[10569]:   Unregistered YouTubeAutoplayer (urn:uuid:a8b7e333-7d5e-4afa-8847-ec9eb7ef191c)
okt 24 00:00:58 Desktop-Ubuntu mopidy[10569]: DEBUG    2022-10-24 00:00:58,476 [10569:YouTubeAutoplayer-8 (_actor_loop)] pykka
okt 24 00:00:58 Desktop-Ubuntu mopidy[10569]:   Stopping 1 instance(s) of YouTubeAutoplayer
okt 24 00:00:58 Desktop-Ubuntu mopidy[10569]: DEBUG    2022-10-24 00:00:58,476 [10569:MainThread] mopidy.internal.process
okt 24 00:00:58 Desktop-Ubuntu mopidy[10569]:   Stopping Mopidy frontends
okt 24 00:00:58 Desktop-Ubuntu mopidy[10569]: INFO     2022-10-24 00:00:58,476 [10569:MainThread] mopidy.commands
okt 24 00:00:58 Desktop-Ubuntu mopidy[10569]:   GLib mainloop got SIGTERM. Exiting...
okt 24 00:00:58 Desktop-Ubuntu mopidy[10569]: INFO     2022-10-24 00:00:58,475 [10569:MainThread] mopidy.commands
okt 24 00:00:58 Desktop-Ubuntu systemd[1]: Stopping Mopidy music server...
okt 23 23:58:12 Desktop-Ubuntu mopidy[10569]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 19, "result": []}'
okt 23 23:58:12 Desktop-Ubuntu mopidy[10569]: DEBUG    2022-10-23 23:58:12,400 [10569:HttpServer] mopidy.http.handlers
okt 23 23:58:12 Desktop-Ubuntu mopidy[10569]:   Lookup error for local:track:test.mp3: no such table: tracks
okt 23 23:58:12 Desktop-Ubuntu mopidy[10569]: ERROR    2022-10-23 23:58:12,400 [10569:LocalBackend-3 (_actor_loop)] mopidy_local.library
okt 23 23:58:12 Desktop-Ubuntu mopidy[10569]:   Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.add","params":{"uris":["local:track:test.mp3"],"at_position":0},"jsonrpc":"2.0","id":19}'
okt 23 23:58:12 Desktop-Ubuntu mopidy[10569]: DEBUG    2022-10-23 23:58:12,399 [10569:HttpServer] mopidy.http.handlers
okt 23 23:58:09 Desktop-Ubuntu mopidy[10569]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 18, "result": [{"__model__": "Ref", "uri": "file:///var/lib/mopidy/http", "name": "http", "type": "directory"}, {"__model__": "Ref", "uri": "file:///var/lib/mopidy/iris", "name": "iris", "type": "directory"}, {"__model__": "Ref", "uri": "file:///var/lib/mopidy/local", "name": "local", "type": "directory"}, {"__model__": "Ref", "uri": "file:///var/lib/mopidy/m3u", "name": "m3u", "type": "directory"}]}'
okt 23 23:58:09 Desktop-Ubuntu mopidy[10569]: DEBUG    2022-10-23 23:58:09,826 [10569:HttpServer] mopidy.http.handlers
okt 23 23:58:09 Desktop-Ubuntu mopidy[10569]:   Browsing files at: file:///var/lib/mopidy
okt 23 23:58:09 Desktop-Ubuntu mopidy[10569]: DEBUG    2022-10-23 23:58:09,824 [10569:FileBackend-4 (_actor_loop)] mopidy.file.library
okt 23 23:58:09 Desktop-Ubuntu mopidy[10569]:   Received WebSocket message from 127.0.0.1: '{"method":"core.library.browse","params":{"uri":"file:///var/lib/mopidy"},"jsonrpc":"2.0","id":18}'
okt 23 23:58:09 Desktop-Ubuntu mopidy[10569]: DEBUG    2022-10-23 23:58:09,824 [10569:HttpServer] mopidy.http.handlers
okt 23 23:58:09 Desktop-Ubuntu mopidy[10569]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 17, "result": {"file:///var/lib/mopidy": [{"__model__": "Track", "uri": "file:///var/lib/mopidy", "name": "mopidy"}]}}'
okt 23 23:58:09 Desktop-Ubuntu mopidy[10569]: DEBUG    2022-10-23 23:58:09,773 [10569:HttpServer] mopidy.http.handlers
okt 23 23:58:09 Desktop-Ubuntu mopidy[10569]:   Failed looking up file:///var/lib/mopidy: gst-resource-error-quark: "/var/lib/mopidy" is a directory. (5)
okt 23 23:58:09 Desktop-Ubuntu mopidy[10569]: WARNING  2022-10-23 23:58:09,772 [10569:FileBackend-4 (_actor_loop)] mopidy.file.library
okt 23 23:58:09 Desktop-Ubuntu mopidy[10569]:   element filesrc0: GstMessageError, gerror=(GError)NULL, debug=(string)"../plugins/elements/gstf...
okt 23 23:58:09 Desktop-Ubuntu mopidy[10569]: TRACE    2022-10-23 23:58:09,771 [10569:FileBackend-4 (_actor_loop)] mopidy.audio.scan
okt 23 23:58:09 Desktop-Ubuntu mopidy[10569]:   Looking up file URI: file:///var/lib/mopidy
okt 23 23:58:09 Desktop-Ubuntu mopidy[10569]: DEBUG    2022-10-23 23:58:09,768 [10569:FileBackend-4 (_actor_loop)] mopidy.file.library
okt 23 23:58:09 Desktop-Ubuntu mopidy[10569]:   Received WebSocket message from 127.0.0.1: '{"method":"core.library.lookup","params":{"uris":["file:///var/lib/mopidy"]},"jsonrpc":"2.0","id":17}'
okt 23 23:58:09 Desktop-Ubuntu mopidy[10569]: DEBUG    2022-10-23 23:58:09,767 [10569:HttpServer] mopidy.http.handlers
okt 23 23:58:09 Desktop-Ubuntu mopidy[10569]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 16, "result": [{"__model__": "Ref", "uri": "file:///var/lib/mopidy", "name": "Files", "type": "directory"}, {"__model__": "Ref", "uri": "local:directory", "name": "Local media", "type": "directory"}]}'
okt 23 23:58:09 Desktop-Ubuntu mopidy[10569]: DEBUG    2022-10-23 23:58:09,211 [10569:HttpServer] mopidy.http.handlers
okt 23 23:58:09 Desktop-Ubuntu mopidy[10569]:   Received WebSocket message from 127.0.0.1: '{"method":"core.library.browse","params":{"uri":null},"jsonrpc":"2.0","id":16}'
okt 23 23:58:09 Desktop-Ubuntu mopidy[10569]: DEBUG    2022-10-23 23:58:09,209 [10569:HttpServer] mopidy.http.handlers
okt 23 23:58:07 Desktop-Ubuntu mopidy[10569]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 15, "result": [{"__model__": "Ref", "uri": "file:///var/lib/mopidy", "name": "Files", "type": "directory"}, {"__model__": "Ref", "uri": "local:directory", "name": "Local media", "type": "directory"}]}'
okt 23 23:58:07 Desktop-Ubuntu mopidy[10569]: DEBUG    2022-10-23 23:58:07,254 [10569:HttpServer] mopidy.http.handlers
okt 23 23:58:07 Desktop-Ubuntu mopidy[10569]:   Received WebSocket message from 127.0.0.1: '{"method":"core.library.browse","params":{"uri":null},"jsonrpc":"2.0","id":15}'
okt 23 23:58:07 Desktop-Ubuntu mopidy[10569]: DEBUG    2022-10-23 23:58:07,252 [10569:HttpServer] mopidy.http.handlers
okt 23 23:58:02 Desktop-Ubuntu mopidy[10569]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 14, "result": []}'
okt 23 23:58:02 Desktop-Ubuntu mopidy[10569]: DEBUG    2022-10-23 23:58:02,636 [10569:HttpServer] mopidy.http.handlers
okt 23 23:58:02 Desktop-Ubuntu mopidy[10569]:   Error browsing local:directory?type=track: no such table: track
okt 23 23:58:02 Desktop-Ubuntu mopidy[10569]: ERROR    2022-10-23 23:58:02,636 [10569:LocalBackend-3 (_actor_loop)] mopidy_local.library
okt 23 23:58:02 Desktop-Ubuntu mopidy[10569]:     
okt 23 23:58:02 Desktop-Ubuntu mopidy[10569]:      ORDER BY type, name COLLATE NOCASE
okt 23 23:58:02 Desktop-Ubuntu mopidy[10569]:      WHERE 1
okt 23 23:58:02 Desktop-Ubuntu mopidy[10569]:       FROM track
okt 23 23:58:02 Desktop-Ubuntu mopidy[10569]:     SELECT 'track' AS type, uri AS uri, name AS name
okt 23 23:58:02 Desktop-Ubuntu mopidy[10569]:   SQLite browse query []:
okt 23 23:58:02 Desktop-Ubuntu mopidy[10569]: DEBUG    2022-10-23 23:58:02,635 [10569:LocalBackend-3 (_actor_loop)] mopidy_local.schema
okt 23 23:58:02 Desktop-Ubuntu mopidy[10569]:   Received WebSocket message from 127.0.0.1: '{"method":"core.library.browse","params":{"uri":"local:directory?type=track"},"jsonrpc":"2.0","id":14}'
okt 23 23:58:02 Desktop-Ubuntu mopidy[10569]: DEBUG    2022-10-23 23:58:02,635 [10569:HttpServer] mopidy.http.handlers
okt 23 23:58:02 Desktop-Ubuntu mopidy[10569]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 13, "result": {"local:directory?type=track": []}}'
okt 23 23:58:02 Desktop-Ubuntu mopidy[10569]: DEBUG    2022-10-23 23:58:02,631 [10569:HttpServer] mopidy.http.handlers
okt 23 23:58:02 Desktop-Ubuntu mopidy[10569]:   Lookup error for local:directory?type=track: Invalid lookup URI
okt 23 23:58:02 Desktop-Ubuntu mopidy[10569]: ERROR    2022-10-23 23:58:02,630 [10569:LocalBackend-3 (_actor_loop)] mopidy_local.library
okt 23 23:58:02 Desktop-Ubuntu mopidy[10569]:   Received WebSocket message from 127.0.0.1: '{"method":"core.library.lookup","params":{"uris":["local:directory?type=track"]},"jsonrpc":"2.0","id":13}'
okt 23 23:58:02 Desktop-Ubuntu mopidy[10569]: DEBUG    2022-10-23 23:58:02,630 [10569:HttpServer] mopidy.http.handlers
okt 23 23:58:01 Desktop-Ubuntu mopidy[10569]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 12, "result": [{"__model__": "Ref", "uri": "file:///var/lib/mopidy", "name": "Files", "type": "directory"}, {"__model__": "Ref", "uri": "local:directory", "name": "Local media", "type": "directory"}]}'
okt 23 23:58:01 Desktop-Ubuntu mopidy[10569]: DEBUG    2022-10-23 23:58:01,830 [10569:HttpServer] mopidy.http.handlers
okt 23 23:58:01 Desktop-Ubuntu mopidy[10569]:   Received WebSocket message from 127.0.0.1: '{"method":"core.library.browse","params":{"uri":null},"jsonrpc":"2.0","id":12}'
okt 23 23:58:01 Desktop-Ubuntu mopidy[10569]: DEBUG    2022-10-23 23:58:01,824 [10569:HttpServer] mopidy.http.handlers
okt 23 23:58:01 Desktop-Ubuntu mopidy[10569]:   {'id': 166656228150248, 'jsonrpc': '2.0', 'method': 'get_version', 'result': {'version': {'current': '3.64.1', 'latest': '3.64.1', 'is_root': False, 'upgrade_available': False}}, 'recipient': 'UCERE7R7PUJ3'}
okt 23 23:58:01 Desktop-Ubuntu mopidy[10569]: DEBUG    2022-10-23 23:58:01,633 [10569:HttpServer] mopidy_iris.core
okt 23 23:58:01 Desktop-Ubuntu mopidy[10569]:   Iris websocket message received: {"jsonrpc":"2.0","id":166656228150248,"method":"get_version"}
okt 23 23:58:01 Desktop-Ubuntu mopidy[10569]: DEBUG    2022-10-23 23:58:01,503 [10569:HttpServer] mopidy_iris.handlers
okt 23 23:58:01 Desktop-Ubuntu mopidy[10569]:   304 GET /iris/assets/favicon_paused.png (127.0.0.1) 0.85ms
okt 23 23:58:01 Desktop-Ubuntu mopidy[10569]: INFO     2022-10-23 23:58:01,219 [10569:HttpServer] tornado.access
okt 23 23:58:01 Desktop-Ubuntu mopidy[10569]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 11, "result": null}'
okt 23 23:58:01 Desktop-Ubuntu mopidy[10569]: DEBUG    2022-10-23 23:58:01,099 [10569:HttpServer] mopidy.http.handlers
okt 23 23:58:01 Desktop-Ubuntu mopidy[10569]:   Received WebSocket message from 127.0.0.1: '{"method":"core.playback.get_stream_title","params":{},"jsonrpc":"2.0","id":11}'
okt 23 23:58:01 Desktop-Ubuntu mopidy[10569]: DEBUG    2022-10-23 23:58:01,098 [10569:HttpServer] mopidy.http.handlers
okt 23 23:58:01 Desktop-Ubuntu mopidy[10569]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 10, "result": ["file", "http", "https", "local", "m3u", "rtsp"]}'
okt 23 23:58:01 Desktop-Ubuntu mopidy[10569]: DEBUG    2022-10-23 23:58:01,098 [10569:HttpServer] mopidy.http.handlers
okt 23 23:58:01 Desktop-Ubuntu mopidy[10569]:   Received WebSocket message from 127.0.0.1: '{"method":"core.get_uri_schemes","params":{},"jsonrpc":"2.0","id":10}'
okt 23 23:58:01 Desktop-Ubuntu mopidy[10569]: DEBUG    2022-10-23 23:58:01,097 [10569:HttpServer] mopidy.http.handlers
okt 23 23:58:01 Desktop-Ubuntu mopidy[10569]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 9, "result": 0}'
okt 23 23:58:01 Desktop-Ubuntu mopidy[10569]: DEBUG    2022-10-23 23:58:01,097 [10569:HttpServer] mopidy.http.handlers
okt 23 23:58:01 Desktop-Ubuntu mopidy[10569]:   Received WebSocket message from 127.0.0.1: '{"method":"core.playback.get_time_position","params":{},"jsonrpc":"2.0","id":9}'
okt 23 23:58:01 Desktop-Ubuntu mopidy[10569]: DEBUG    2022-10-23 23:58:01,096 [10569:HttpServer] mopidy.http.handlers
okt 23 23:58:01 Desktop-Ubuntu mopidy[10569]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 8, "result": []}'
okt 23 23:58:01 Desktop-Ubuntu mopidy[10569]: DEBUG    2022-10-23 23:58:01,096 [10569:HttpServer] mopidy.http.handlers
okt 23 23:58:01 Desktop-Ubuntu mopidy[10569]:   Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_tl_tracks","params":{},"jsonrpc":"2.0","id":8}'
okt 23 23:58:01 Desktop-Ubuntu mopidy[10569]: DEBUG    2022-10-23 23:58:01,096 [10569:HttpServer] mopidy.http.handlers
okt 23 23:58:01 Desktop-Ubuntu mopidy[10569]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 7, "result": false}'
okt 23 23:58:01 Desktop-Ubuntu mopidy[10569]: DEBUG    2022-10-23 23:58:01,092 [10569:HttpServer] mopidy.http.handlers
okt 23 23:58:01 Desktop-Ubuntu mopidy[10569]:   Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_repeat","params":{},"jsonrpc":"2.0","id":7}'
okt 23 23:58:01 Desktop-Ubuntu mopidy[10569]: DEBUG    2022-10-23 23:58:01,092 [10569:HttpServer] mopidy.http.handlers
okt 23 23:58:01 Desktop-Ubuntu mopidy[10569]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 6, "result": false}'
okt 23 23:58:01 Desktop-Ubuntu mopidy[10569]: DEBUG    2022-10-23 23:58:01,091 [10569:HttpServer] mopidy.http.handlers
okt 23 23:58:01 Desktop-Ubuntu mopidy[10569]:   Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_random","params":{},"jsonrpc":"2.0","id":6}'
okt 23 23:58:01 Desktop-Ubuntu mopidy[10569]: DEBUG    2022-10-23 23:58:01,091 [10569:HttpServer] mopidy.http.handlers
okt 23 23:58:01 Desktop-Ubuntu mopidy[10569]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 5, "result": false}'
okt 23 23:58:01 Desktop-Ubuntu mopidy[10569]: DEBUG    2022-10-23 23:58:01,091 [10569:HttpServer] mopidy.http.handlers
okt 23 23:58:01 Desktop-Ubuntu mopidy[10569]:   Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_consume","params":{},"jsonrpc":"2.0","id":5}'
okt 23 23:58:01 Desktop-Ubuntu mopidy[10569]: DEBUG    2022-10-23 23:58:01,091 [10569:HttpServer] mopidy.http.handlers
okt 23 23:58:01 Desktop-Ubuntu mopidy[10569]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 4, "result": false}'
okt 23 23:58:01 Desktop-Ubuntu mopidy[10569]: DEBUG    2022-10-23 23:58:01,090 [10569:HttpServer] mopidy.http.handlers
okt 23 23:58:01 Desktop-Ubuntu mopidy[10569]:   Received WebSocket message from 127.0.0.1: '{"method":"core.mixer.get_mute","params":{},"jsonrpc":"2.0","id":4}'
okt 23 23:58:01 Desktop-Ubuntu mopidy[10569]: DEBUG    2022-10-23 23:58:01,090 [10569:HttpServer] mopidy.http.handlers
okt 23 23:58:01 Desktop-Ubuntu mopidy[10569]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 3, "result": 100}'
okt 23 23:58:01 Desktop-Ubuntu mopidy[10569]: DEBUG    2022-10-23 23:58:01,090 [10569:HttpServer] mopidy.http.handlers
okt 23 23:58:01 Desktop-Ubuntu mopidy[10569]:   Received WebSocket message from 127.0.0.1: '{"method":"core.mixer.get_volume","params":{},"jsonrpc":"2.0","id":3}'
okt 23 23:58:01 Desktop-Ubuntu mopidy[10569]: DEBUG    2022-10-23 23:58:01,089 [10569:HttpServer] mopidy.http.handlers
okt 23 23:58:01 Desktop-Ubuntu mopidy[10569]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 2, "result": "stopped"}'
okt 23 23:58:01 Desktop-Ubuntu mopidy[10569]: DEBUG    2022-10-23 23:58:01,089 [10569:HttpServer] mopidy.http.handlers
okt 23 23:58:01 Desktop-Ubuntu mopidy[10569]:   Received WebSocket message from 127.0.0.1: '{"method":"core.playback.get_state","params":{},"jsonrpc":"2.0","id":2}'
okt 23 23:58:01 Desktop-Ubuntu mopidy[10569]: DEBUG    2022-10-23 23:58:01,088 [10569:HttpServer] mopidy.http.handlers
okt 23 23:58:01 Desktop-Ubuntu mopidy[10569]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 1, "result": null}'
okt 23 23:58:01 Desktop-Ubuntu mopidy[10569]: DEBUG    2022-10-23 23:58:01,088 [10569:HttpServer] mopidy.http.handlers
okt 23 23:58:01 Desktop-Ubuntu mopidy[10569]:   Received WebSocket message from 127.0.0.1: '{"method":"core.playback.get_current_tl_track","params":{},"jsonrpc":"2.0","id":1}'
okt 23 23:58:01 Desktop-Ubuntu mopidy[10569]: DEBUG    2022-10-23 23:58:01,087 [10569:HttpServer] mopidy.http.handlers
okt 23 23:58:01 Desktop-Ubuntu mopidy[10569]:   {'id': 166656228100120, 'jsonrpc': '2.0', 'method': 'get_queue_metadata', 'result': {'queue_metadata': {}}, 'recipient': 'UCERE7R7PUJ3'}
okt 23 23:58:01 Desktop-Ubuntu mopidy[10569]: DEBUG    2022-10-23 23:58:01,002 [10569:HttpServer] mopidy_iris.core
okt 23 23:58:01 Desktop-Ubuntu mopidy[10569]:   Iris websocket message received: {"jsonrpc":"2.0","id":166656228100120,"method":"get_queue_metadata"}
okt 23 23:58:01 Desktop-Ubuntu mopidy[10569]: DEBUG    2022-10-23 23:58:01,002 [10569:HttpServer] mopidy_iris.handlers
okt 23 23:58:01 Desktop-Ubuntu mopidy[10569]:   {'id': 166656228100048, 'jsonrpc': '2.0', 'method': 'get_pinned', 'result': {'pinned': []}, 'recipient': 'UCERE7R7PUJ3'}
okt 23 23:58:01 Desktop-Ubuntu mopidy[10569]: DEBUG    2022-10-23 23:58:01,000 [10569:HttpServer] mopidy_iris.core
okt 23 23:58:01 Desktop-Ubuntu mopidy[10569]:   Iris websocket message received: {"jsonrpc":"2.0","id":166656228100048,"method":"get_pinned"}
okt 23 23:58:01 Desktop-Ubuntu mopidy[10569]: DEBUG    2022-10-23 23:58:01,000 [10569:HttpServer] mopidy_iris.handlers
okt 23 23:58:01 Desktop-Ubuntu mopidy[10569]:   {'id': 166656228099978, 'jsonrpc': '2.0', 'method': 'get_commands', 'result': {'commands': {}}, 'recipient': 'UCERE7R7PUJ3'}
okt 23 23:58:01 Desktop-Ubuntu mopidy[10569]: DEBUG    2022-10-23 23:58:01,000 [10569:HttpServer] mopidy_iris.core
okt 23 23:58:01 Desktop-Ubuntu mopidy[10569]:   Iris websocket message received: {"jsonrpc":"2.0","id":166656228099978,"method":"get_commands"}
okt 23 23:58:01 Desktop-Ubuntu mopidy[10569]: DEBUG    2022-10-23 23:58:01,000 [10569:HttpServer] mopidy_iris.handlers
okt 23 23:58:00 Desktop-Ubuntu mopidy[10569]:   {'id': 166656228099843, 'jsonrpc': '2.0', 'method': 'get_radio', 'result': {'radio': {'enabled': 0, 'seed_artists': [], 'seed_genres': [], 'seed_tracks': [], 'results': []}}, 'recipient': 'UCERE7R7PUJ3'}
okt 23 23:58:00 Desktop-Ubuntu mopidy[10569]: DEBUG    2022-10-23 23:58:00,999 [10569:HttpServer] mopidy_iris.core
okt 23 23:58:00 Desktop-Ubuntu mopidy[10569]:   Iris websocket message received: {"jsonrpc":"2.0","id":166656228099843,"method":"get_radio"}
okt 23 23:58:00 Desktop-Ubuntu mopidy[10569]: DEBUG    2022-10-23 23:58:00,999 [10569:HttpServer] mopidy_iris.handlers
okt 23 23:58:00 Desktop-Ubuntu mopidy[10569]:   {'id': 166656228099666, 'jsonrpc': '2.0', 'method': 'get_shared_config', 'result': {'shared_config': {}}, 'recipient': 'UCERE7R7PUJ3'}
okt 23 23:58:00 Desktop-Ubuntu mopidy[10569]: DEBUG    2022-10-23 23:58:00,999 [10569:HttpServer] mopidy_iris.core
okt 23 23:58:00 Desktop-Ubuntu mopidy[10569]:   Iris websocket message received: {"jsonrpc":"2.0","id":166656228099666,"method":"get_shared_config"}
okt 23 23:58:00 Desktop-Ubuntu mopidy[10569]: DEBUG    2022-10-23 23:58:00,999 [10569:HttpServer] mopidy_iris.handlers
okt 23 23:58:00 Desktop-Ubuntu mopidy[10569]:   {'id': 166656228099565, 'jsonrpc': '2.0', 'method': 'get_config', 'result': {'config': {'is_root': False, 'spotify_username': False, 'country': 'NZ', 'locale': 'en_NZ', 'snapcast_enabled': True, 'snapcast_host': 'localhost', 'snapcast_port': '1780', 'snapcast_ssl': False, 'snapcast_stream': 'Default', 'spotify_authorization_url': 'https://jamesbarnsley.co.nz/iris/auth_spotify.php', 'lastfm_authorization_url': 'https://jamesbarnsley.co.nz/iris/auth_lastfm.php', 'genius_authorization_url': 'https://jamesbarnsley.co.nz/iris/auth_genius.php', 'shared_config': {}}}, 'recipient': 'UCERE7R7PUJ3'}
okt 23 23:58:00 Desktop-Ubuntu mopidy[10569]: DEBUG    2022-10-23 23:58:00,998 [10569:HttpServer] mopidy_iris.core
okt 23 23:58:00 Desktop-Ubuntu mopidy[10569]:   Iris websocket message received: {"jsonrpc":"2.0","id":166656228099565,"method":"get_config"}
okt 23 23:58:00 Desktop-Ubuntu mopidy[10569]: DEBUG    2022-10-23 23:58:00,998 [10569:HttpServer] mopidy_iris.handlers
okt 23 23:58:00 Desktop-Ubuntu mopidy[10569]:   {'id': 166656228099484, 'jsonrpc': '2.0', 'method': 'update_connection', 'result': {'connection': {'connection_id': 'UCERE7R7PUJ3', 'ip': '127.0.0.1', 'created': '2022-10-23 23:58:00', 'username': 166656148284185, 'client_id': 166656148284193}}, 'recipient': 'UCERE7R7PUJ3'}
okt 23 23:58:00 Desktop-Ubuntu mopidy[10569]: DEBUG    2022-10-23 23:58:00,998 [10569:HttpServer] mopidy_iris.core
okt 23 23:58:00 Desktop-Ubuntu mopidy[10569]:   {'method': 'connection_changed', 'params': {'connection': {'connection_id': 'UCERE7R7PUJ3', 'ip': '127.0.0.1', 'created': '2022-10-23 23:58:00', 'username': 166656148284185, 'client_id': 166656148284193}}}
okt 23 23:58:00 Desktop-Ubuntu mopidy[10569]: DEBUG    2022-10-23 23:58:00,998 [10569:HttpServer] mopidy_iris.core
okt 23 23:58:00 Desktop-Ubuntu mopidy[10569]:   Iris websocket message received: {"jsonrpc":"2.0","id":166656228099484,"method":"update_connection","params":{"username":166656148284185,"client_id":166656148284193}}
okt 23 23:58:00 Desktop-Ubuntu mopidy[10569]: DEBUG    2022-10-23 23:58:00,998 [10569:HttpServer] mopidy_iris.handlers
okt 23 23:58:00 Desktop-Ubuntu mopidy[10569]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 0, "result": {"core.get_uri_schemes": {"description": "Get list of URI schemes we can handle", "params": []}, "core.get_version": {"description": "Get version of the Mopidy core API", "params": []}, "core.history.get_history": {"description": "Get the track history.\\n\\nThe timestamps are milliseconds since epoch.\\n\\n:returns: the track history\\n:rtype: list of (timestamp, :class:`mopidy.models.Ref`) tuples", "params": []}, "core.history.get_length": {"description": "Get the number of tracks in the history.\\n\\n:returns: the history length\\n:rtype: int", "params": []}, "core.library.browse": {"description": "Browse directories and tracks at the given ``uri``.\\n\\n``uri`` is a string which represents some directory belonging to a\\nbackend. To get the intial root directories for backends pass\\n:class:`None` as the URI.\\n\\nReturns a list of :class:`mopidy.models.Ref` objects for the\\ndirectories and tracks at the given ``uri``.\\n\\nThe :class:`~mopidy.models.Ref` objects representing tracks keep the\\ntrack\'s original URI. A matching pair of objects can look like this::\\n\\n    Track(uri=\'dummy:/foo.mp3\', name=\'foo\', artists=..., album=...)\\n    Ref.track(uri=\'dummy:/foo.mp3\', name=\'foo\')\\n\\nThe :class:`~mopidy.models.Ref` objects representing directories have\\nbackend specific URIs. These are opaque values, so no one but the\\nbackend that created them should try and derive any meaning from them.\\nThe only valid exception to this is checking the scheme, as it is used\\nto route browse requests to the correct backend.\\n\\nFor example, the dummy library\'s ``/bar`` directory could be returned\\nlike this::\\n\\n    Ref.directory(uri=\'dummy:directory:/bar\', name=\'bar\')\\n\\n:param string uri: URI to browse\\n:rtype: list of :class:`mopidy.models.Ref`\\n\\n.. versionadded:: 0.18", "params": [{"name": "uri"}]}, "core.library.get_distinct": {"description": "List distinct values for a given field from the library.\\n\\nThis has mainly been added to support the list commands the MPD\\nprotocol supports in a more sane fashion. Other frontends are not\\nrecommended to use this method.\\n\\n:param string field: Any one of ``uri``, ``track_name``, ``album``,\\n    ``artist``, ``albumartist``, ``composer``, ``performer``,\\n    ``track_no``, ``genre``, ``date``, ``comment``, ``disc_no``,\\n    ``musicbrainz_albumid``, ``musicbrainz_artistid``, or\\n    ``musicbrainz_trackid``.\\n:param dict query: Query to use for limiting results, see\\n    :meth:`search` for details about the query format.\\n:rtype: set of values corresponding to the requested field type.\\n\\n.. versionadded:: 1.0", "params": [{"name": "field"}, {"name": "query", "default": null}]}, "core.library.get_images": {"description": "Lookup the images for the given URIs\\n\\nBackends can use this to return image URIs for any URI they know about\\nbe it tracks, albums, playlists. The lookup result is a dictionary\\nmapping the provided URIs to lists of images.\\n\\nUnknown URIs or URIs the corresponding backend couldn\'t find anything\\nfor will simply return an empty list for that URI.\\n\\n:param uris: list of URIs to find images for\\n:type uris: list of string\\n:rtype: {uri: tuple of :class:`mopidy.models.Image`}\\n\\n.. versionadded:: 1.0", "params": [{"name": "uris"}]}, "core.library.lookup": {"description": "Lookup the given URIs.\\n\\nIf the URI expands to multiple tracks, the returned list will contain\\nthem all.\\n\\n:param uris: track URIs\\n:type uris: list of string\\n:rtype: {uri: list of :class:`mopidy.models.Track`}", "params": [{"name": "uris"}]}, "core.library.refresh": {"description": "Refresh library. Limit to URI and below if an URI is given.\\n\\n:param uri: directory or track URI\\n:type uri: string", "params": [{"name": "uri", "default": null}]}, "core.library.search": {"description": "Search the library for tracks where ``field`` contains ``values``.\\n\\n``field`` can be one of ``uri``, ``track_name``, ``album``, ``artist``,\\n``albumartist``, ``composer``, ``performer``, ``track_no``, ``genre``,\\n``date``, ``comment``, ``disc_no``, ``musicbrainz_albumid``,\\n``musicbrainz_artistid``, ``musicbrainz_trackid`` or ``any``.\\n\\nIf ``uris`` is given, the search is limited to results from within the\\nURI roots. For example passing ``uris=[\'file:\']`` will limit the search\\nto the local backend.\\n\\nExamples::\\n\\n    # Returns results matching \'a\' in any backend\\n    search({\'any\': [\'a\']})\\n\\n    # Returns results matching artist \'xyz\' in any backend\\n    search({\'artist\': [\'xyz\']})\\n\\n    # Returns results matching \'a\' and \'b\' and artist \'xyz\' in any\\n    # backend\\n    search({\'any\': [\'a\', \'b\'], \'artist\': [\'xyz\']})\\n\\n    # Returns results matching \'a\' if within the given URI roots\\n    # \\"file:///media/music\\" and \\"spotify:\\"\\n    search({\'any\': [\'a\']}, uris=[\'file:///media/music\', \'spotify:\'])\\n\\n    # Returns results matching artist \'xyz\' and \'abc\' in any backend\\n    search({\'artist\': [\'xyz\', \'abc\']})\\n\\n:param query: one or more queries to search for\\n:type query: dict\\n:param uris: zero or more URI roots to limit the search to\\n:type uris: list of string or :class:`None`\\n:param exact: if the search should use exact matching\\n:type exact: :class:`bool`\\n:rtype: list of :class:`mopidy.models.SearchResult`\\n\\n.. versionadded:: 1.0\\n    The ``exact`` keyword argument.", "params": [{"name": "query"}, {"name": "uris", "default": null}, {"name": "exact", "default": false}]}, "core.mixer.get_mute": {"description": "Get mute state.\\n\\n:class:`True` if muted, :class:`False` unmuted, :class:`None` if\\nunknown.", "params": []}, "core.mixer.get_volume": {"description": "Get the volume.\\n\\nInteger in range [0..100] or :class:`None` if unknown.\\n\\nThe volume scale is linear.", "params": []}, "core.mixer.set_mute": {"description": "Set mute state.\\n\\n:class:`True` to mute, :class:`False` to unmute.\\n\\nReturns :class:`True` if call is successful, otherwise :class:`False`.", "params": [{"name": "mute"}]}, "core.mixer.set_volume": {"description": "Set the volume.\\n\\nThe volume is defined as an integer in range [0..100].\\n\\nThe volume scale is linear.\\n\\nReturns :class:`True` if call is successful, otherwise :class:`False`.", "params": [{"name": "volume"}]}, "core.playback.get_current_tl_track": {"description": "Get the currently playing or selected track.\\n\\nReturns a :class:`mopidy.models.TlTrack` or :class:`None`.", "params": []}, "core.playback.get_current_tlid": {"description": "Get the currently playing or selected TLID.\\n\\nExtracted from :meth:`get_current_tl_track` for convenience.\\n\\nReturns a :class:`int` or :class:`None`.\\n\\n.. versionadded:: 1.1", "params": []}, "core.playback.get_current_track": {"description": "Get the currently playing or selected track.\\n\\nExtracted from :meth:`get_current_tl_track` for convenience.\\n\\nReturns a :class:`mopidy.models.Track` or :class:`None`.", "params": []}, "core.playback.get_state": {"description": "Get The playback state.", "params": []}, "core.playback.get_stream_title": {"description": "Get the current stream title or :class:`None`.", "params": []}, "core.playback.get_time_position": {"description": "Get time position in milliseconds.", "params": []}, "core.playback.next": {"description": "Change to the next track.\\n\\nThe current playback state will be kept. If it was playing, playing\\nwill continue. If it was paused, it will still be paused, etc.", "params": []}, "core.playback.pause": {"description": "Pause playback.", "params": []}, "core.playback.play": {"description": "Play the given track, or if the given tl_track and tlid is\\n:class:`None`, play the currently active track.\\n\\nNote that the track **must** already be in the tracklist.\\n\\n.. deprecated:: 3.0\\n    The ``tl_track`` argument. Use ``tlid`` instead.\\n\\n:param tl_track: track to play\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:param tlid: TLID of the track to play\\n:type tlid: :class:`int` or :class:`None`", "params": [{"name": "tl_track", "default": null}, {"name": "tlid", "default": null}]}, "core.playback.previous": {"description": "Change to the previous track.\\n\\nThe current playback state will be kept. If it was playing, playing\\nwill continue. If it was paused, it will still be paused, etc.", "params": []}, "core.playback.resume": {"description": "If paused, resume playing the current track.", "params": []}, "core.playback.seek": {"description": "Seeks to time position given in milliseconds.\\n\\n:param time_position: time position in milliseconds\\n:type time_position: int\\n:rtype: :class:`True` if successful, else :class:`False`", "params": [{"name": "time_position"}]}, "core.playback.set_state": {"description": "Set the playback state.\\n\\nMust be :attr:`PLAYING`, :attr:`PAUSED`, or :attr:`STOPPED`.\\n\\nPossible states and transitions:\\n\\n.. digraph:: state_transitions\\n\\n    \\"STOPPED\\" -> \\"PLAYING\\" [ label=\\"play\\" ]\\n    \\"STOPPED\\" -> \\"PAUSED\\" [ label=\\"pause\\" ]\\n    \\"PLAYING\\" -> \\"STOPPED\\" [ label=\\"stop\\" ]\\n    \\"PLAYING\\" -> \\"PAUSED\\" [ label=\\"pause\\" ]\\n    \\"PLAYING\\" -> \\"PLAYING\\" [ label=\\"play\\" ]\\n    \\"PAUSED\\" -> \\"PLAYING\\" [ label=\\"resume\\" ]\\n    \\"PAUSED\\" -> \\"STOPPED\\" [ label=\\"stop\\" ]", "params": [{"name": "new_state"}]}, "core.playback.stop": {"description": "Stop playing.", "params": []}, "core.playlists.as_list": {"description": "Get a list of the currently available playlists.\\n\\nReturns a list of :class:`~mopidy.models.Ref` objects referring to the\\nplaylists. In other words, no information about the playlists\' content\\nis given.\\n\\n:rtype: list of :class:`mopidy.models.Ref`\\n\\n.. versionadded:: 1.0", "params": []}, "core.playlists.create": {"description": "Create a new playlist.\\n\\nIf ``uri_scheme`` matches an URI scheme handled by a current backend,\\nthat backend is asked to create the playlist. If ``uri_scheme`` is\\n:class:`None` or doesn\'t match a current backend, the first backend is\\nasked to create the playlist.\\n\\nAll new playlists must be created by calling this method, and **not**\\nby creating new instances of :class:`mopidy.models.Playlist`.\\n\\n:param name: name of the new playlist\\n:type name: string\\n:param uri_scheme: use the backend matching the URI scheme\\n:type uri_scheme: string\\n:rtype: :class:`mopidy.models.Playlist` or :class:`None`", "params": [{"name": "name"}, {"name": "uri_scheme", "default": null}]}, "core.playlists.delete": {"description": "Delete playlist identified by the URI.\\n\\nIf the URI doesn\'t match the URI schemes handled by the current\\nbackends, nothing happens.\\n\\nReturns :class:`True` if deleted, :class:`False` otherwise.\\n\\n:param uri: URI of the playlist to delete\\n:type uri: string\\n:rtype: :class:`bool`\\n\\n.. versionchanged:: 2.2\\n    Return type defined.", "params": [{"name": "uri"}]}, "core.playlists.get_items": {"description": "Get the items in a playlist specified by ``uri``.\\n\\nReturns a list of :class:`~mopidy.models.Ref` objects referring to the\\nplaylist\'s items.\\n\\nIf a playlist with the given ``uri`` doesn\'t exist, it returns\\n:class:`None`.\\n\\n:rtype: list of :class:`mopidy.models.Ref`, or :class:`None`\\n\\n.. versionadded:: 1.0", "params": [{"name": "uri"}]}, "core.playlists.get_uri_schemes": {"description": "Get the list of URI schemes that support playlists.\\n\\n:rtype: list of string\\n\\n.. versionadded:: 2.0", "params": []}, "core.playlists.lookup": {"description": "Lookup playlist with given URI in both the set of playlists and in any\\nother playlist sources. Returns :class:`None` if not found.\\n\\n:param uri: playlist URI\\n:type uri: string\\n:rtype: :class:`mopidy.models.Playlist` or :class:`None`", "params": [{"name": "uri"}]}, "core.playlists.refresh": {"description": "Refresh the playlists in :attr:`playlists`.\\n\\nIf ``uri_scheme`` is :class:`None`, all backends are asked to refresh.\\nIf ``uri_scheme`` is an URI scheme handled by a backend, only that\\nbackend is asked to refresh. If ``uri_scheme`` doesn\'t match any\\ncurrent backend, nothing happens.\\n\\n:param uri_scheme: limit to the backend matching the URI scheme\\n:type uri_scheme: string", "params": [{"name": "uri_scheme", "default": null}]}, "core.playlists.save": {"description": "Save the playlist.\\n\\nFor a playlist to be saveable, it must have the ``uri`` attribute set.\\nYou must not set the ``uri`` atribute yourself, but use playlist\\nobjects returned by :meth:`create` or retrieved from :attr:`playlists`,\\nwhich will always give you saveable playlists.\\n\\nThe method returns the saved playlist. The return playlist may differ\\nfrom the saved playlist. E.g. if the playlist name was changed, the\\nreturned playlist may have a different URI. The caller of this method\\nmust throw away the playlist sent to this method, and use the\\nreturned playlist instead.\\n\\nIf the playlist\'s URI isn\'t set or doesn\'t match the URI scheme of a\\ncurrent backend, nothing is done and :class:`None` is returned.\\n\\n:param playlist: the playlist\\n:type playlist: :class:`mopidy.models.Playlist`\\n:rtype: :class:`mopidy.models.Playlist` or :class:`None`", "params": [{"name": "playlist"}]}, "core.tracklist.add": {"description": "Add tracks to the tracklist.\\n\\nIf ``uris`` is given instead of ``tracks``, the URIs are\\nlooked up in the library and the resulting tracks are added to the\\ntracklist.\\n\\nIf ``at_position`` is given, the tracks are inserted at the given\\nposition in the tracklist. If ``at_position`` is not given, the tracks\\nare appended to the end of the tracklist.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.\\n\\n:param tracks: tracks to add\\n:type tracks: list of :class:`mopidy.models.Track` or :class:`None`\\n:param at_position: position in tracklist to add tracks\\n:type at_position: int or :class:`None`\\n:param uris: list of URIs for tracks to add\\n:type uris: list of string or :class:`None`\\n:rtype: list of :class:`mopidy.models.TlTrack`\\n\\n.. versionadded:: 1.0\\n    The ``uris`` argument.\\n\\n.. deprecated:: 1.0\\n    The ``tracks`` argument. Use ``uris``.", "params": [{"name": "tracks", "default": null}, {"name": "at_position", "default": null}, {"name": "uris", "default": null}]}, "core.tracklist.clear": {"description": "Clear the tracklist.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.", "params": []}, "core.tracklist.eot_track": {"description": "The track that will be played after the given track.\\n\\nNot necessarily the same track as :meth:`next_track`.\\n\\n.. deprecated:: 3.0\\n    Use :meth:`get_eot_tlid` instead.\\n\\n:param tl_track: the reference track\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:rtype: :class:`mopidy.models.TlTrack` or :class:`None`", "params": [{"name": "tl_track"}]}, "core.tracklist.filter": {"description": "Filter the tracklist by the given criteria.\\n\\nEach rule in the criteria consists of a model field and a list of\\nvalues to compare it against. If the model field matches any of the\\nvalues, it may be returned.\\n\\nOnly tracks that match all the given criteria are returned.\\n\\nExamples::\\n\\n    # Returns tracks with TLIDs 1, 2, 3, or 4 (tracklist ID)\\n    filter({\'tlid\': [1, 2, 3, 4]})\\n\\n    # Returns track with URIs \'xyz\' or \'abc\'\\n    filter({\'uri\': [\'xyz\', \'abc\']})\\n\\n    # Returns track with a matching TLIDs (1, 3 or 6) and a\\n    # matching URI (\'xyz\' or \'abc\')\\n    filter({\'tlid\': [1, 3, 6], \'uri\': [\'xyz\', \'abc\']})\\n\\n:param criteria: one or more rules to match by\\n:type criteria: dict, of (string, list) pairs\\n:rtype: list of :class:`mopidy.models.TlTrack`", "params": [{"name": "criteria"}]}, "core.tracklist.get_consume": {"description": "Get consume mode.\\n\\n:class:`True`\\n    Tracks are removed from the tracklist when they have been played.\\n:class:`False`\\n    Tracks are not removed from the tracklist.", "params": []}, "core.tracklist.get_eot_tlid": {"description": "The TLID of the track that will be played after the current track.\\n\\nNot necessarily the same TLID as returned by :meth:`get_next_tlid`.\\n\\n:rtype: :class:`int` or :class:`None`\\n\\n.. versionadded:: 1.1", "params": []}, "core.tracklist.get_length": {"description": "Get length of the tracklist.", "params": []}, "core.tracklist.get_next_tlid": {"description": "The tlid of the track that will be played if calling\\n:meth:`mopidy.core.PlaybackController.next()`.\\n\\nFor normal playback this is the next track in the tracklist. If repeat\\nis enabled the next track can loop around the tracklist. When random is\\nenabled this should be a random track, all tracks should be played once\\nbefore the tracklist repeats.\\n\\n:rtype: :class:`int` or :class:`None`\\n\\n.. versionadded:: 1.1", "params": []}, "core.tracklist.get_previous_tlid": {"description": "Returns the TLID of the track that will be played if calling\\n:meth:`mopidy.core.PlaybackController.previous()`.\\n\\nFor normal playback this is the previous track in the tracklist. If\\nrandom and/or consume is enabled it should return the current track\\ninstead.\\n\\n:rtype: :class:`int` or :class:`None`\\n\\n.. versionadded:: 1.1", "params": []}, "core.tracklist.get_random": {"description": "Get random mode.\\n\\n:class:`True`\\n    Tracks are selected at random from the tracklist.\\n:class:`False`\\n    Tracks are played in the order of the tracklist.", "params": []}, "core.tracklist.get_repeat": {"description": "Get repeat mode.\\n\\n:class:`True`\\n    The tracklist is played repeatedly.\\n:class:`False`\\n    The tracklist is played once.", "params": []}, "core.tracklist.get_single": {"description": "Get single mode.\\n\\n:class:`True`\\n    Playback is stopped after current song, unless in ``repeat`` mode.\\n:class:`False`\\n    Playback continues after current song.", "params": []}, "core.tracklist.get_tl_tracks": {"description": "Get tracklist as list of :class:`mopidy.models.TlTrack`.", "params": []}, "core.tracklist.get_tracks": {"description": "Get tracklist as list of :class:`mopidy.models.Track`.", "params": []}, "core.tracklist.get_version": {"description": "Get the tracklist version.\\n\\nInteger which is increased every time the tracklist is changed. Is not\\nreset before Mopidy is restarted.", "params": []}, "core.tracklist.index": {"description": "The position of the given track in the tracklist.\\n\\nIf neither *tl_track* or *tlid* is given we return the index of\\nthe currently playing track.\\n\\n:param tl_track: the track to find the index of\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:param tlid: TLID of the track to find the index of\\n:type tlid: :class:`int` or :class:`None`\\n:rtype: :class:`int` or :class:`None`\\n\\n.. versionadded:: 1.1\\n    The *tlid* parameter", "params": [{"name": "tl_track", "default": null}, {"name": "tlid", "default": null}]}, "core.tracklist.move": {"description": "Move the tracks in the slice ``[start:end]`` to ``to_position``.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.\\n\\n:param start: position of first track to move\\n:type start: int\\n:param end: position after last track to move\\n:type end: int\\n:param to_position: new position for the tracks\\n:type to_position: int", "params": [{"name": "start"}, {"name": "end"}, {"name": "to_position"}]}, "core.tracklist.next_track": {"description": "The track that will be played if calling\\n:meth:`mopidy.core.PlaybackController.next()`.\\n\\nFor normal playback this is the next track in the tracklist. If repeat\\nis enabled the next track can loop around the tracklist. When random is\\nenabled this should be a random track, all tracks should be played once\\nbefore the tracklist repeats.\\n\\n.. deprecated:: 3.0\\n    Use :meth:`get_next_tlid` instead.\\n\\n:param tl_track: the reference track\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:rtype: :class:`mopidy.models.TlTrack` or :class:`None`", "params": [{"name": "tl_track"}]}, "core.tracklist.previous_track": {"description": "Returns the track that will be played if calling\\n:meth:`mopidy.core.PlaybackController.previous()`.\\n\\nFor normal playback this is the previous track in the tracklist. If\\nrandom and/or consume is enabled it should return the current track\\ninstead.\\n\\n.. deprecated:: 3.0\\n    Use :meth:`get_previous_tlid` instead.\\n\\n:param tl_track: the reference track\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:rtype: :class:`mopidy.models.TlTrack` or :class:`None`", "params": [{"name": "tl_track"}]}, "core.tracklist.remove": {"description": "Remove the matching tracks from the tracklist.\\n\\nUses :meth:`filter()` to lookup the tracks to remove.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.\\n\\n:param criteria: one or more rules to match by\\n:type criteria: dict, of (string, list) pairs\\n:rtype: list of :class:`mopidy.models.TlTrack` that were removed", "params": [{"name": "criteria"}]}, "core.tracklist.set_consume": {"description": "Set consume mode.\\n\\n:class:`True`\\n    Tracks are removed from the tracklist when they have been played.\\n:class:`False`\\n    Tracks are not removed from the tracklist.", "params": [{"name": "value"}]}, "core.tracklist.set_random": {"description": "Set random mode.\\n\\n:class:`True`\\n    Tracks are selected at random from the tracklist.\\n:class:`False`\\n    Tracks are played in the order of the tracklist.", "params": [{"name": "value"}]}, "core.tracklist.set_repeat": {"description": "Set repeat mode.\\n\\nTo repeat a single track, set both ``repeat`` and ``single``.\\n\\n:class:`True`\\n    The tracklist is played repeatedly.\\n:class:`False`\\n    The tracklist is played once.", "params": [{"name": "value"}]}, "core.tracklist.set_single": {"description": "Set single mode.\\n\\n:class:`True`\\n    Playback is stopped after current song, unless in ``repeat`` mode.\\n:class:`False`\\n    Playback continues after current song.", "params": [{"name": "value"}]}, "core.tracklist.shuffle": {"description": "Shuffles the entire tracklist. If ``start`` and ``end`` is given only\\nshuffles the slice ``[start:end]``.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.\\n\\n:param start: position of first track to shuffle\\n:type start: int or :class:`None`\\n:param end: position after last track to shuffle\\n:type end: int or :class:`None`", "params": [{"name": "start", "default": null}, {"name": "end", "default": null}]}, "core.tracklist.slice": {"description": "Returns a slice of the tracklist, limited by the given start and end\\npositions.\\n\\n:param start: position of first track to include in slice\\n:type start: int\\n:param end: position after last track to include in slice\\n:type end: int\\n:rtype: :class:`mopidy.models.TlTrack`", "params": [{"name": "start"}, {"name": "end"}]}}}'
okt 23 23:58:00 Desktop-Ubuntu mopidy[10569]: DEBUG    2022-10-23 23:58:00,997 [10569:HttpServer] mopidy.http.handlers
okt 23 23:58:00 Desktop-Ubuntu mopidy[10569]:   Received WebSocket message from 127.0.0.1: '{"method":"core.describe","jsonrpc":"2.0","id":0}'
okt 23 23:58:00 Desktop-Ubuntu mopidy[10569]: DEBUG    2022-10-23 23:58:00,993 [10569:HttpServer] mopidy.http.handlers
okt 23 23:58:00 Desktop-Ubuntu mopidy[10569]:   {'method': 'connection_added', 'params': {'connection': {'connection_id': 'UCERE7R7PUJ3', 'ip': '127.0.0.1', 'created': '2022-10-23 23:58:00'}}}
okt 23 23:58:00 Desktop-Ubuntu mopidy[10569]: DEBUG    2022-10-23 23:58:00,951 [10569:HttpServer] mopidy_iris.core
okt 23 23:58:00 Desktop-Ubuntu mopidy[10569]:   <mopidy_iris.handlers.WebsocketHandler object at 0x7f43343d5c60>
okt 23 23:58:00 Desktop-Ubuntu mopidy[10569]: DEBUG    2022-10-23 23:58:00,951 [10569:HttpServer] mopidy_iris.core
okt 23 23:58:00 Desktop-Ubuntu mopidy[10569]:   Connection added
okt 23 23:58:00 Desktop-Ubuntu mopidy[10569]: DEBUG    2022-10-23 23:58:00,951 [10569:HttpServer] mopidy_iris.core
okt 23 23:58:00 Desktop-Ubuntu mopidy[10569]:   101 GET /iris/ws/ (127.0.0.1) 0.50ms
okt 23 23:58:00 Desktop-Ubuntu mopidy[10569]: INFO     2022-10-23 23:58:00,951 [10569:HttpServer] tornado.access
okt 23 23:58:00 Desktop-Ubuntu mopidy[10569]:   New WebSocket connection from 127.0.0.1
okt 23 23:58:00 Desktop-Ubuntu mopidy[10569]: DEBUG    2022-10-23 23:58:00,940 [10569:HttpServer] mopidy.http.handlers
okt 23 23:58:00 Desktop-Ubuntu mopidy[10569]:   101 GET /mopidy/ws/ (127.0.0.1) 0.60ms
okt 23 23:58:00 Desktop-Ubuntu mopidy[10569]: INFO     2022-10-23 23:58:00,939 [10569:HttpServer] tornado.access
okt 23 23:58:00 Desktop-Ubuntu mopidy[10569]:   200 GET /iris/assets/favicon.png (127.0.0.1) 0.73ms
okt 23 23:58:00 Desktop-Ubuntu mopidy[10569]: INFO     2022-10-23 23:58:00,719 [10569:HttpServer] tornado.access
okt 23 23:58:00 Desktop-Ubuntu mopidy[10569]:   200 GET /iris/library/browse/Tracks/null (127.0.0.1) 0.69ms
okt 23 23:58:00 Desktop-Ubuntu mopidy[10569]: INFO     2022-10-23 23:58:00,657 [10569:HttpServer] tornado.access
okt 23 23:57:59 Desktop-Ubuntu mopidy[10569]:   200 GET /iris/app.min.js?v=1666559547 (127.0.0.1) 10.99ms
okt 23 23:57:59 Desktop-Ubuntu mopidy[10569]: INFO     2022-10-23 23:57:59,820 [10569:HttpServer] tornado.access
okt 23 23:57:59 Desktop-Ubuntu mopidy[10569]:   200 GET /iris/app.min.css?v=1666559547 (127.0.0.1) 5.12ms
okt 23 23:57:59 Desktop-Ubuntu mopidy[10569]: INFO     2022-10-23 23:57:59,806 [10569:HttpServer] tornado.access
okt 23 23:57:59 Desktop-Ubuntu mopidy[10569]:   200 GET /iris/assets/app-icon.svg (127.0.0.1) 0.74ms
okt 23 23:57:59 Desktop-Ubuntu mopidy[10569]: INFO     2022-10-23 23:57:59,622 [10569:HttpServer] tornado.access
okt 23 23:57:59 Desktop-Ubuntu mopidy[10569]:   {'method': 'connection_removed', 'params': {'connection': {'connection_id': 'Q98U92RCZIWR', 'ip': '127.0.0.1', 'created': '2022-10-23 23:57:49', 'username': 166656148284185, 'client_id': 166656148284193}}}
okt 23 23:57:59 Desktop-Ubuntu mopidy[10569]: DEBUG    2022-10-23 23:57:59,563 [10569:HttpServer] mopidy_iris.core
okt 23 23:57:59 Desktop-Ubuntu mopidy[10569]:   Closed WebSocket connection from 127.0.0.1
okt 23 23:57:59 Desktop-Ubuntu mopidy[10569]: DEBUG    2022-10-23 23:57:59,562 [10569:HttpServer] mopidy.http.handlers
okt 23 23:57:59 Desktop-Ubuntu mopidy[10569]:   200 GET /iris/library/browse/Tracks/bG9jYWw6ZGlyZWN0b3J5P3R5cGU9dHJhY2s= (127.0.0.1) 5.34ms
okt 23 23:57:59 Desktop-Ubuntu mopidy[10569]: INFO     2022-10-23 23:57:59,549 [10569:HttpServer] tornado.access
okt 23 23:57:50 Desktop-Ubuntu mopidy[10569]:   {'id': 166656226997259, 'jsonrpc': '2.0', 'method': 'get_version', 'result': {'version': {'current': '3.64.1', 'latest': '3.64.1', 'is_root': False, 'upgrade_available': False}}, 'recipient': 'Q98U92RCZIWR'}
okt 23 23:57:50 Desktop-Ubuntu mopidy[10569]: DEBUG    2022-10-23 23:57:50,152 [10569:HttpServer] mopidy_iris.core
okt 23 23:57:49 Desktop-Ubuntu mopidy[10569]:   Iris websocket message received: {"jsonrpc":"2.0","id":166656226997259,"method":"get_version"}
okt 23 23:57:49 Desktop-Ubuntu mopidy[10569]: DEBUG    2022-10-23 23:57:49,972 [10569:HttpServer] mopidy_iris.handlers
okt 23 23:57:49 Desktop-Ubuntu mopidy[10569]:   {'id': 166656226947048, 'jsonrpc': '2.0', 'method': 'get_queue_metadata', 'result': {'queue_metadata': {}}, 'recipient': 'Q98U92RCZIWR'}
okt 23 23:57:49 Desktop-Ubuntu mopidy[10569]: DEBUG    2022-10-23 23:57:49,471 [10569:HttpServer] mopidy_iris.core
okt 23 23:57:49 Desktop-Ubuntu mopidy[10569]:   Iris websocket message received: {"jsonrpc":"2.0","id":166656226947048,"method":"get_queue_metadata"}
okt 23 23:57:49 Desktop-Ubuntu mopidy[10569]: DEBUG    2022-10-23 23:57:49,471 [10569:HttpServer] mopidy_iris.handlers
okt 23 23:57:49 Desktop-Ubuntu mopidy[10569]:   {'id': 16665622694695, 'jsonrpc': '2.0', 'method': 'get_pinned', 'result': {'pinned': []}, 'recipient': 'Q98U92RCZIWR'}
okt 23 23:57:49 Desktop-Ubuntu mopidy[10569]: DEBUG    2022-10-23 23:57:49,470 [10569:HttpServer] mopidy_iris.core
okt 23 23:57:49 Desktop-Ubuntu mopidy[10569]:   Iris websocket message received: {"jsonrpc":"2.0","id":16665622694695,"method":"get_pinned"}
okt 23 23:57:49 Desktop-Ubuntu mopidy[10569]: DEBUG    2022-10-23 23:57:49,470 [10569:HttpServer] mopidy_iris.handlers
okt 23 23:57:49 Desktop-Ubuntu mopidy[10569]:   {'id': 166656226946884, 'jsonrpc': '2.0', 'method': 'get_commands', 'result': {'commands': {}}, 'recipient': 'Q98U92RCZIWR'}
okt 23 23:57:49 Desktop-Ubuntu mopidy[10569]: DEBUG    2022-10-23 23:57:49,469 [10569:HttpServer] mopidy_iris.core
okt 23 23:57:49 Desktop-Ubuntu mopidy[10569]:   Iris websocket message received: {"jsonrpc":"2.0","id":166656226946884,"method":"get_commands"}
okt 23 23:57:49 Desktop-Ubuntu mopidy[10569]: DEBUG    2022-10-23 23:57:49,469 [10569:HttpServer] mopidy_iris.handlers
okt 23 23:57:49 Desktop-Ubuntu mopidy[10569]:   {'id': 166656226946781, 'jsonrpc': '2.0', 'method': 'get_radio', 'result': {'radio': {'enabled': 0, 'seed_artists': [], 'seed_genres': [], 'seed_tracks': [], 'results': []}}, 'recipient': 'Q98U92RCZIWR'}
okt 23 23:57:49 Desktop-Ubuntu mopidy[10569]: DEBUG    2022-10-23 23:57:49,468 [10569:HttpServer] mopidy_iris.core
okt 23 23:57:49 Desktop-Ubuntu mopidy[10569]:   Iris websocket message received: {"jsonrpc":"2.0","id":166656226946781,"method":"get_radio"}
okt 23 23:57:49 Desktop-Ubuntu mopidy[10569]: DEBUG    2022-10-23 23:57:49,468 [10569:HttpServer] mopidy_iris.handlers
okt 23 23:57:49 Desktop-Ubuntu mopidy[10569]:   {'id': 16665622694665, 'jsonrpc': '2.0', 'method': 'get_shared_config', 'result': {'shared_config': {}}, 'recipient': 'Q98U92RCZIWR'}
okt 23 23:57:49 Desktop-Ubuntu mopidy[10569]: DEBUG    2022-10-23 23:57:49,467 [10569:HttpServer] mopidy_iris.core
okt 23 23:57:49 Desktop-Ubuntu mopidy[10569]:   Iris websocket message received: {"jsonrpc":"2.0","id":16665622694665,"method":"get_shared_config"}
okt 23 23:57:49 Desktop-Ubuntu mopidy[10569]: DEBUG    2022-10-23 23:57:49,467 [10569:HttpServer] mopidy_iris.handlers
okt 23 23:57:49 Desktop-Ubuntu mopidy[10569]:   {'id': 166656226946540, 'jsonrpc': '2.0', 'method': 'get_config', 'result': {'config': {'is_root': False, 'spotify_username': False, 'country': 'NZ', 'locale': 'en_NZ', 'snapcast_enabled': True, 'snapcast_host': 'localhost', 'snapcast_port': '1780', 'snapcast_ssl': False, 'snapcast_stream': 'Default', 'spotify_authorization_url': 'https://jamesbarnsley.co.nz/iris/auth_spotify.php', 'lastfm_authorization_url': 'https://jamesbarnsley.co.nz/iris/auth_lastfm.php', 'genius_authorization_url': 'https://jamesbarnsley.co.nz/iris/auth_genius.php', 'shared_config': {}}}, 'recipient': 'Q98U92RCZIWR'}
okt 23 23:57:49 Desktop-Ubuntu mopidy[10569]: DEBUG    2022-10-23 23:57:49,466 [10569:HttpServer] mopidy_iris.core
okt 23 23:57:49 Desktop-Ubuntu mopidy[10569]:   Iris websocket message received: {"jsonrpc":"2.0","id":166656226946540,"method":"get_config"}
okt 23 23:57:49 Desktop-Ubuntu mopidy[10569]: DEBUG    2022-10-23 23:57:49,466 [10569:HttpServer] mopidy_iris.handlers
okt 23 23:57:49 Desktop-Ubuntu mopidy[10569]:   {'id': 166656226946430, 'jsonrpc': '2.0', 'method': 'update_connection', 'result': {'connection': {'connection_id': 'Q98U92RCZIWR', 'ip': '127.0.0.1', 'created': '2022-10-23 23:57:49', 'username': 166656148284185, 'client_id': 166656148284193}}, 'recipient': 'Q98U92RCZIWR'}
okt 23 23:57:49 Desktop-Ubuntu mopidy[10569]: DEBUG    2022-10-23 23:57:49,465 [10569:HttpServer] mopidy_iris.core
okt 23 23:57:49 Desktop-Ubuntu mopidy[10569]:   {'method': 'connection_changed', 'params': {'connection': {'connection_id': 'Q98U92RCZIWR', 'ip': '127.0.0.1', 'created': '2022-10-23 23:57:49', 'username': 166656148284185, 'client_id': 166656148284193}}}
okt 23 23:57:49 Desktop-Ubuntu mopidy[10569]: DEBUG    2022-10-23 23:57:49,465 [10569:HttpServer] mopidy_iris.core
okt 23 23:57:49 Desktop-Ubuntu mopidy[10569]:   Iris websocket message received: {"jsonrpc":"2.0","id":166656226946430,"method":"update_connection","params":{"username":166656148284185,"client_id":166656148284193}}
okt 23 23:57:49 Desktop-Ubuntu mopidy[10569]: DEBUG    2022-10-23 23:57:49,465 [10569:HttpServer] mopidy_iris.handlers
okt 23 23:57:49 Desktop-Ubuntu mopidy[10569]:   {'method': 'connection_added', 'params': {'connection': {'connection_id': 'Q98U92RCZIWR', 'ip': '127.0.0.1', 'created': '2022-10-23 23:57:49'}}}
okt 23 23:57:49 Desktop-Ubuntu mopidy[10569]: DEBUG    2022-10-23 23:57:49,461 [10569:HttpServer] mopidy_iris.core
okt 23 23:57:49 Desktop-Ubuntu mopidy[10569]:   <mopidy_iris.handlers.WebsocketHandler object at 0x7f4338073700>
okt 23 23:57:49 Desktop-Ubuntu mopidy[10569]: DEBUG    2022-10-23 23:57:49,461 [10569:HttpServer] mopidy_iris.core
okt 23 23:57:49 Desktop-Ubuntu mopidy[10569]:   Connection added
okt 23 23:57:49 Desktop-Ubuntu mopidy[10569]: DEBUG    2022-10-23 23:57:49,461 [10569:HttpServer] mopidy_iris.core
okt 23 23:57:49 Desktop-Ubuntu mopidy[10569]:   101 GET /iris/ws/ (127.0.0.1) 0.52ms
okt 23 23:57:49 Desktop-Ubuntu mopidy[10569]: INFO     2022-10-23 23:57:49,460 [10569:HttpServer] tornado.access
okt 23 23:57:45 Desktop-Ubuntu mopidy[10569]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 68, "result": null}'
okt 23 23:57:45 Desktop-Ubuntu mopidy[10569]: DEBUG    2022-10-23 23:57:45,434 [10569:HttpServer] mopidy.http.handlers
okt 23 23:57:45 Desktop-Ubuntu mopidy[10569]:   Received WebSocket message from 127.0.0.1: '{"method":"core.playback.get_stream_title","params":{},"jsonrpc":"2.0","id":68}'
okt 23 23:57:45 Desktop-Ubuntu mopidy[10569]: DEBUG    2022-10-23 23:57:45,433 [10569:HttpServer] mopidy.http.handlers
okt 23 23:57:45 Desktop-Ubuntu mopidy[10569]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 67, "result": ["file", "http", "https", "local", "m3u", "rtsp"]}'
okt 23 23:57:45 Desktop-Ubuntu mopidy[10569]: DEBUG    2022-10-23 23:57:45,433 [10569:HttpServer] mopidy.http.handlers
okt 23 23:57:45 Desktop-Ubuntu mopidy[10569]:   Received WebSocket message from 127.0.0.1: '{"method":"core.get_uri_schemes","params":{},"jsonrpc":"2.0","id":67}'
okt 23 23:57:45 Desktop-Ubuntu mopidy[10569]: DEBUG    2022-10-23 23:57:45,433 [10569:HttpServer] mopidy.http.handlers
okt 23 23:57:45 Desktop-Ubuntu mopidy[10569]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 66, "result": 0}'
okt 23 23:57:45 Desktop-Ubuntu mopidy[10569]: DEBUG    2022-10-23 23:57:45,432 [10569:HttpServer] mopidy.http.handlers
okt 23 23:57:45 Desktop-Ubuntu mopidy[10569]:   Received WebSocket message from 127.0.0.1: '{"method":"core.playback.get_time_position","params":{},"jsonrpc":"2.0","id":66}'
okt 23 23:57:45 Desktop-Ubuntu mopidy[10569]: DEBUG    2022-10-23 23:57:45,432 [10569:HttpServer] mopidy.http.handlers
okt 23 23:57:45 Desktop-Ubuntu mopidy[10569]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 65, "result": []}'
okt 23 23:57:45 Desktop-Ubuntu mopidy[10569]: DEBUG    2022-10-23 23:57:45,431 [10569:HttpServer] mopidy.http.handlers
okt 23 23:57:45 Desktop-Ubuntu mopidy[10569]:   Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_tl_tracks","params":{},"jsonrpc":"2.0","id":65}'
okt 23 23:57:45 Desktop-Ubuntu mopidy[10569]: DEBUG    2022-10-23 23:57:45,431 [10569:HttpServer] mopidy.http.handlers
okt 23 23:57:45 Desktop-Ubuntu mopidy[10569]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 64, "result": false}'
okt 23 23:57:45 Desktop-Ubuntu mopidy[10569]: DEBUG    2022-10-23 23:57:45,430 [10569:HttpServer] mopidy.http.handlers
okt 23 23:57:45 Desktop-Ubuntu mopidy[10569]:   Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_repeat","params":{},"jsonrpc":"2.0","id":64}'
okt 23 23:57:45 Desktop-Ubuntu mopidy[10569]: DEBUG    2022-10-23 23:57:45,430 [10569:HttpServer] mopidy.http.handlers
okt 23 23:57:45 Desktop-Ubuntu mopidy[10569]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 63, "result": false}'
okt 23 23:57:45 Desktop-Ubuntu mopidy[10569]: DEBUG    2022-10-23 23:57:45,429 [10569:HttpServer] mopidy.http.handlers
okt 23 23:57:45 Desktop-Ubuntu mopidy[10569]:   Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_random","params":{},"jsonrpc":"2.0","id":63}'
okt 23 23:57:45 Desktop-Ubuntu mopidy[10569]: DEBUG    2022-10-23 23:57:45,429 [10569:HttpServer] mopidy.http.handlers
okt 23 23:57:45 Desktop-Ubuntu mopidy[10569]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 62, "result": false}'
okt 23 23:57:45 Desktop-Ubuntu mopidy[10569]: DEBUG    2022-10-23 23:57:45,429 [10569:HttpServer] mopidy.http.handlers
okt 23 23:57:45 Desktop-Ubuntu mopidy[10569]:   Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_consume","params":{},"jsonrpc":"2.0","id":62}'
okt 23 23:57:45 Desktop-Ubuntu mopidy[10569]: DEBUG    2022-10-23 23:57:45,428 [10569:HttpServer] mopidy.http.handlers
okt 23 23:57:45 Desktop-Ubuntu mopidy[10569]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 61, "result": false}'
okt 23 23:57:45 Desktop-Ubuntu mopidy[10569]: DEBUG    2022-10-23 23:57:45,427 [10569:HttpServer] mopidy.http.handlers
okt 23 23:57:45 Desktop-Ubuntu mopidy[10569]:   Received WebSocket message from 127.0.0.1: '{"method":"core.mixer.get_mute","params":{},"jsonrpc":"2.0","id":61}'
okt 23 23:57:45 Desktop-Ubuntu mopidy[10569]: DEBUG    2022-10-23 23:57:45,427 [10569:HttpServer] mopidy.http.handlers
okt 23 23:57:45 Desktop-Ubuntu mopidy[10569]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 60, "result": 100}'
okt 23 23:57:45 Desktop-Ubuntu mopidy[10569]: DEBUG    2022-10-23 23:57:45,427 [10569:HttpServer] mopidy.http.handlers
okt 23 23:57:45 Desktop-Ubuntu mopidy[10569]:   Received WebSocket message from 127.0.0.1: '{"method":"core.mixer.get_volume","params":{},"jsonrpc":"2.0","id":60}'
okt 23 23:57:45 Desktop-Ubuntu mopidy[10569]: DEBUG    2022-10-23 23:57:45,426 [10569:HttpServer] mopidy.http.handlers
okt 23 23:57:45 Desktop-Ubuntu mopidy[10569]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 59, "result": "stopped"}'
okt 23 23:57:45 Desktop-Ubuntu mopidy[10569]: DEBUG    2022-10-23 23:57:45,425 [10569:HttpServer] mopidy.http.handlers
okt 23 23:57:45 Desktop-Ubuntu mopidy[10569]:   Received WebSocket message from 127.0.0.1: '{"method":"core.playback.get_state","params":{},"jsonrpc":"2.0","id":59}'
okt 23 23:57:45 Desktop-Ubuntu mopidy[10569]: DEBUG    2022-10-23 23:57:45,425 [10569:HttpServer] mopidy.http.handlers
okt 23 23:57:45 Desktop-Ubuntu mopidy[10569]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 58, "result": null}'
okt 23 23:57:45 Desktop-Ubuntu mopidy[10569]: DEBUG    2022-10-23 23:57:45,425 [10569:HttpServer] mopidy.http.handlers
okt 23 23:57:45 Desktop-Ubuntu mopidy[10569]:   Received WebSocket message from 127.0.0.1: '{"method":"core.playback.get_current_tl_track","params":{},"jsonrpc":"2.0","id":58}'
okt 23 23:57:45 Desktop-Ubuntu mopidy[10569]: DEBUG    2022-10-23 23:57:45,424 [10569:HttpServer] mopidy.http.handlers
okt 23 23:57:45 Desktop-Ubuntu mopidy[10569]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 57, "result": {"core.get_uri_schemes": {"description": "Get list of URI schemes we can handle", "params": []}, "core.get_version": {"description": "Get version of the Mopidy core API", "params": []}, "core.history.get_history": {"description": "Get the track history.\\n\\nThe timestamps are milliseconds since epoch.\\n\\n:returns: the track history\\n:rtype: list of (timestamp, :class:`mopidy.models.Ref`) tuples", "params": []}, "core.history.get_length": {"description": "Get the number of tracks in the history.\\n\\n:returns: the history length\\n:rtype: int", "params": []}, "core.library.browse": {"description": "Browse directories and tracks at the given ``uri``.\\n\\n``uri`` is a string which represents some directory belonging to a\\nbackend. To get the intial root directories for backends pass\\n:class:`None` as the URI.\\n\\nReturns a list of :class:`mopidy.models.Ref` objects for the\\ndirectories and tracks at the given ``uri``.\\n\\nThe :class:`~mopidy.models.Ref` objects representing tracks keep the\\ntrack\'s original URI. A matching pair of objects can look like this::\\n\\n    Track(uri=\'dummy:/foo.mp3\', name=\'foo\', artists=..., album=...)\\n    Ref.track(uri=\'dummy:/foo.mp3\', name=\'foo\')\\n\\nThe :class:`~mopidy.models.Ref` objects representing directories have\\nbackend specific URIs. These are opaque values, so no one but the\\nbackend that created them should try and derive any meaning from them.\\nThe only valid exception to this is checking the scheme, as it is used\\nto route browse requests to the correct backend.\\n\\nFor example, the dummy library\'s ``/bar`` directory could be returned\\nlike this::\\n\\n    Ref.directory(uri=\'dummy:directory:/bar\', name=\'bar\')\\n\\n:param string uri: URI to browse\\n:rtype: list of :class:`mopidy.models.Ref`\\n\\n.. versionadded:: 0.18", "params": [{"name": "uri"}]}, "core.library.get_distinct": {"description": "List distinct values for a given field from the library.\\n\\nThis has mainly been added to support the list commands the MPD\\nprotocol supports in a more sane fashion. Other frontends are not\\nrecommended to use this method.\\n\\n:param string field: Any one of ``uri``, ``track_name``, ``album``,\\n    ``artist``, ``albumartist``, ``composer``, ``performer``,\\n    ``track_no``, ``genre``, ``date``, ``comment``, ``disc_no``,\\n    ``musicbrainz_albumid``, ``musicbrainz_artistid``, or\\n    ``musicbrainz_trackid``.\\n:param dict query: Query to use for limiting results, see\\n    :meth:`search` for details about the query format.\\n:rtype: set of values corresponding to the requested field type.\\n\\n.. versionadded:: 1.0", "params": [{"name": "field"}, {"name": "query", "default": null}]}, "core.library.get_images": {"description": "Lookup the images for the given URIs\\n\\nBackends can use this to return image URIs for any URI they know about\\nbe it tracks, albums, playlists. The lookup result is a dictionary\\nmapping the provided URIs to lists of images.\\n\\nUnknown URIs or URIs the corresponding backend couldn\'t find anything\\nfor will simply return an empty list for that URI.\\n\\n:param uris: list of URIs to find images for\\n:type uris: list of string\\n:rtype: {uri: tuple of :class:`mopidy.models.Image`}\\n\\n.. versionadded:: 1.0", "params": [{"name": "uris"}]}, "core.library.lookup": {"description": "Lookup the given URIs.\\n\\nIf the URI expands to multiple tracks, the returned list will contain\\nthem all.\\n\\n:param uris: track URIs\\n:type uris: list of string\\n:rtype: {uri: list of :class:`mopidy.models.Track`}", "params": [{"name": "uris"}]}, "core.library.refresh": {"description": "Refresh library. Limit to URI and below if an URI is given.\\n\\n:param uri: directory or track URI\\n:type uri: string", "params": [{"name": "uri", "default": null}]}, "core.library.search": {"description": "Search the library for tracks where ``field`` contains ``values``.\\n\\n``field`` can be one of ``uri``, ``track_name``, ``album``, ``artist``,\\n``albumartist``, ``composer``, ``performer``, ``track_no``, ``genre``,\\n``date``, ``comment``, ``disc_no``, ``musicbrainz_albumid``,\\n``musicbrainz_artistid``, ``musicbrainz_trackid`` or ``any``.\\n\\nIf ``uris`` is given, the search is limited to results from within the\\nURI roots. For example passing ``uris=[\'file:\']`` will limit the search\\nto the local backend.\\n\\nExamples::\\n\\n    # Returns results matching \'a\' in any backend\\n    search({\'any\': [\'a\']})\\n\\n    # Returns results matching artist \'xyz\' in any backend\\n    search({\'artist\': [\'xyz\']})\\n\\n    # Returns results matching \'a\' and \'b\' and artist \'xyz\' in any\\n    # backend\\n    search({\'any\': [\'a\', \'b\'], \'artist\': [\'xyz\']})\\n\\n    # Returns results matching \'a\' if within the given URI roots\\n    # \\"file:///media/music\\" and \\"spotify:\\"\\n    search({\'any\': [\'a\']}, uris=[\'file:///media/music\', \'spotify:\'])\\n\\n    # Returns results matching artist \'xyz\' and \'abc\' in any backend\\n    search({\'artist\': [\'xyz\', \'abc\']})\\n\\n:param query: one or more queries to search for\\n:type query: dict\\n:param uris: zero or more URI roots to limit the search to\\n:type uris: list of string or :class:`None`\\n:param exact: if the search should use exact matching\\n:type exact: :class:`bool`\\n:rtype: list of :class:`mopidy.models.SearchResult`\\n\\n.. versionadded:: 1.0\\n    The ``exact`` keyword argument.", "params": [{"name": "query"}, {"name": "uris", "default": null}, {"name": "exact", "default": false}]}, "core.mixer.get_mute": {"description": "Get mute state.\\n\\n:class:`True` if muted, :class:`False` unmuted, :class:`None` if\\nunknown.", "params": []}, "core.mixer.get_volume": {"description": "Get the volume.\\n\\nInteger in range [0..100] or :class:`None` if unknown.\\n\\nThe volume scale is linear.", "params": []}, "core.mixer.set_mute": {"description": "Set mute state.\\n\\n:class:`True` to mute, :class:`False` to unmute.\\n\\nReturns :class:`True` if call is successful, otherwise :class:`False`.", "params": [{"name": "mute"}]}, "core.mixer.set_volume": {"description": "Set the volume.\\n\\nThe volume is defined as an integer in range [0..100].\\n\\nThe volume scale is linear.\\n\\nReturns :class:`True` if call is successful, otherwise :class:`False`.", "params": [{"name": "volume"}]}, "core.playback.get_current_tl_track": {"description": "Get the currently playing or selected track.\\n\\nReturns a :class:`mopidy.models.TlTrack` or :class:`None`.", "params": []}, "core.playback.get_current_tlid": {"description": "Get the currently playing or selected TLID.\\n\\nExtracted from :meth:`get_current_tl_track` for convenience.\\n\\nReturns a :class:`int` or :class:`None`.\\n\\n.. versionadded:: 1.1", "params": []}, "core.playback.get_current_track": {"description": "Get the currently playing or selected track.\\n\\nExtracted from :meth:`get_current_tl_track` for convenience.\\n\\nReturns a :class:`mopidy.models.Track` or :class:`None`.", "params": []}, "core.playback.get_state": {"description": "Get The playback state.", "params": []}, "core.playback.get_stream_title": {"description": "Get the current stream title or :class:`None`.", "params": []}, "core.playback.get_time_position": {"description": "Get time position in milliseconds.", "params": []}, "core.playback.next": {"description": "Change to the next track.\\n\\nThe current playback state will be kept. If it was playing, playing\\nwill continue. If it was paused, it will still be paused, etc.", "params": []}, "core.playback.pause": {"description": "Pause playback.", "params": []}, "core.playback.play": {"description": "Play the given track, or if the given tl_track and tlid is\\n:class:`None`, play the currently active track.\\n\\nNote that the track **must** already be in the tracklist.\\n\\n.. deprecated:: 3.0\\n    The ``tl_track`` argument. Use ``tlid`` instead.\\n\\n:param tl_track: track to play\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:param tlid: TLID of the track to play\\n:type tlid: :class:`int` or :class:`None`", "params": [{"name": "tl_track", "default": null}, {"name": "tlid", "default": null}]}, "core.playback.previous": {"description": "Change to the previous track.\\n\\nThe current playback state will be kept. If it was playing, playing\\nwill continue. If it was paused, it will still be paused, etc.", "params": []}, "core.playback.resume": {"description": "If paused, resume playing the current track.", "params": []}, "core.playback.seek": {"description": "Seeks to time position given in milliseconds.\\n\\n:param time_position: time position in milliseconds\\n:type time_position: int\\n:rtype: :class:`True` if successful, else :class:`False`", "params": [{"name": "time_position"}]}, "core.playback.set_state": {"description": "Set the playback state.\\n\\nMust be :attr:`PLAYING`, :attr:`PAUSED`, or :attr:`STOPPED`.\\n\\nPossible states and transitions:\\n\\n.. digraph:: state_transitions\\n\\n    \\"STOPPED\\" -> \\"PLAYING\\" [ label=\\"play\\" ]\\n    \\"STOPPED\\" -> \\"PAUSED\\" [ label=\\"pause\\" ]\\n    \\"PLAYING\\" -> \\"STOPPED\\" [ label=\\"stop\\" ]\\n    \\"PLAYING\\" -> \\"PAUSED\\" [ label=\\"pause\\" ]\\n    \\"PLAYING\\" -> \\"PLAYING\\" [ label=\\"play\\" ]\\n    \\"PAUSED\\" -> \\"PLAYING\\" [ label=\\"resume\\" ]\\n    \\"PAUSED\\" -> \\"STOPPED\\" [ label=\\"stop\\" ]", "params": [{"name": "new_state"}]}, "core.playback.stop": {"description": "Stop playing.", "params": []}, "core.playlists.as_list": {"description": "Get a list of the currently available playlists.\\n\\nReturns a list of :class:`~mopidy.models.Ref` objects referring to the\\nplaylists. In other words, no information about the playlists\' content\\nis given.\\n\\n:rtype: list of :class:`mopidy.models.Ref`\\n\\n.. versionadded:: 1.0", "params": []}, "core.playlists.create": {"description": "Create a new playlist.\\n\\nIf ``uri_scheme`` matches an URI scheme handled by a current backend,\\nthat backend is asked to create the playlist. If ``uri_scheme`` is\\n:class:`None` or doesn\'t match a current backend, the first backend is\\nasked to create the playlist.\\n\\nAll new playlists must be created by calling this method, and **not**\\nby creating new instances of :class:`mopidy.models.Playlist`.\\n\\n:param name: name of the new playlist\\n:type name: string\\n:param uri_scheme: use the backend matching the URI scheme\\n:type uri_scheme: string\\n:rtype: :class:`mopidy.models.Playlist` or :class:`None`", "params": [{"name": "name"}, {"name": "uri_scheme", "default": null}]}, "core.playlists.delete": {"description": "Delete playlist identified by the URI.\\n\\nIf the URI doesn\'t match the URI schemes handled by the current\\nbackends, nothing happens.\\n\\nReturns :class:`True` if deleted, :class:`False` otherwise.\\n\\n:param uri: URI of the playlist to delete\\n:type uri: string\\n:rtype: :class:`bool`\\n\\n.. versionchanged:: 2.2\\n    Return type defined.", "params": [{"name": "uri"}]}, "core.playlists.get_items": {"description": "Get the items in a playlist specified by ``uri``.\\n\\nReturns a list of :class:`~mopidy.models.Ref` objects referring to the\\nplaylist\'s items.\\n\\nIf a playlist with the given ``uri`` doesn\'t exist, it returns\\n:class:`None`.\\n\\n:rtype: list of :class:`mopidy.models.Ref`, or :class:`None`\\n\\n.. versionadded:: 1.0", "params": [{"name": "uri"}]}, "core.playlists.get_uri_schemes": {"description": "Get the list of URI schemes that support playlists.\\n\\n:rtype: list of string\\n\\n.. versionadded:: 2.0", "params": []}, "core.playlists.lookup": {"description": "Lookup playlist with given URI in both the set of playlists and in any\\nother playlist sources. Returns :class:`None` if not found.\\n\\n:param uri: playlist URI\\n:type uri: string\\n:rtype: :class:`mopidy.models.Playlist` or :class:`None`", "params": [{"name": "uri"}]}, "core.playlists.refresh": {"description": "Refresh the playlists in :attr:`playlists`.\\n\\nIf ``uri_scheme`` is :class:`None`, all backends are asked to refresh.\\nIf ``uri_scheme`` is an URI scheme handled by a backend, only that\\nbackend is asked to refresh. If ``uri_scheme`` doesn\'t match any\\ncurrent backend, nothing happens.\\n\\n:param uri_scheme: limit to the backend matching the URI scheme\\n:type uri_scheme: string", "params": [{"name": "uri_scheme", "default": null}]}, "core.playlists.save": {"description": "Save the playlist.\\n\\nFor a playlist to be saveable, it must have the ``uri`` attribute set.\\nYou must not set the ``uri`` atribute yourself, but use playlist\\nobjects returned by :meth:`create` or retrieved from :attr:`playlists`,\\nwhich will always give you saveable playlists.\\n\\nThe method returns the saved playlist. The return playlist may differ\\nfrom the saved playlist. E.g. if the playlist name was changed, the\\nreturned playlist may have a different URI. The caller of this method\\nmust throw away the playlist sent to this method, and use the\\nreturned playlist instead.\\n\\nIf the playlist\'s URI isn\'t set or doesn\'t match the URI scheme of a\\ncurrent backend, nothing is done and :class:`None` is returned.\\n\\n:param playlist: the playlist\\n:type playlist: :class:`mopidy.models.Playlist`\\n:rtype: :class:`mopidy.models.Playlist` or :class:`None`", "params": [{"name": "playlist"}]}, "core.tracklist.add": {"description": "Add tracks to the tracklist.\\n\\nIf ``uris`` is given instead of ``tracks``, the URIs are\\nlooked up in the library and the resulting tracks are added to the\\ntracklist.\\n\\nIf ``at_position`` is given, the tracks are inserted at the given\\nposition in the tracklist. If ``at_position`` is not given, the tracks\\nare appended to the end of the tracklist.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.\\n\\n:param tracks: tracks to add\\n:type tracks: list of :class:`mopidy.models.Track` or :class:`None`\\n:param at_position: position in tracklist to add tracks\\n:type at_position: int or :class:`None`\\n:param uris: list of URIs for tracks to add\\n:type uris: list of string or :class:`None`\\n:rtype: list of :class:`mopidy.models.TlTrack`\\n\\n.. versionadded:: 1.0\\n    The ``uris`` argument.\\n\\n.. deprecated:: 1.0\\n    The ``tracks`` argument. Use ``uris``.", "params": [{"name": "tracks", "default": null}, {"name": "at_position", "default": null}, {"name": "uris", "default": null}]}, "core.tracklist.clear": {"description": "Clear the tracklist.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.", "params": []}, "core.tracklist.eot_track": {"description": "The track that will be played after the given track.\\n\\nNot necessarily the same track as :meth:`next_track`.\\n\\n.. deprecated:: 3.0\\n    Use :meth:`get_eot_tlid` instead.\\n\\n:param tl_track: the reference track\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:rtype: :class:`mopidy.models.TlTrack` or :class:`None`", "params": [{"name": "tl_track"}]}, "core.tracklist.filter": {"description": "Filter the tracklist by the given criteria.\\n\\nEach rule in the criteria consists of a model field and a list of\\nvalues to compare it against. If the model field matches any of the\\nvalues, it may be returned.\\n\\nOnly tracks that match all the given criteria are returned.\\n\\nExamples::\\n\\n    # Returns tracks with TLIDs 1, 2, 3, or 4 (tracklist ID)\\n    filter({\'tlid\': [1, 2, 3, 4]})\\n\\n    # Returns track with URIs \'xyz\' or \'abc\'\\n    filter({\'uri\': [\'xyz\', \'abc\']})\\n\\n    # Returns track with a matching TLIDs (1, 3 or 6) and a\\n    # matching URI (\'xyz\' or \'abc\')\\n    filter({\'tlid\': [1, 3, 6], \'uri\': [\'xyz\', \'abc\']})\\n\\n:param criteria: one or more rules to match by\\n:type criteria: dict, of (string, list) pairs\\n:rtype: list of :class:`mopidy.models.TlTrack`", "params": [{"name": "criteria"}]}, "core.tracklist.get_consume": {"description": "Get consume mode.\\n\\n:class:`True`\\n    Tracks are removed from the tracklist when they have been played.\\n:class:`False`\\n    Tracks are not removed from the tracklist.", "params": []}, "core.tracklist.get_eot_tlid": {"description": "The TLID of the track that will be played after the current track.\\n\\nNot necessarily the same TLID as returned by :meth:`get_next_tlid`.\\n\\n:rtype: :class:`int` or :class:`None`\\n\\n.. versionadded:: 1.1", "params": []}, "core.tracklist.get_length": {"description": "Get length of the tracklist.", "params": []}, "core.tracklist.get_next_tlid": {"description": "The tlid of the track that will be played if calling\\n:meth:`mopidy.core.PlaybackController.next()`.\\n\\nFor normal playback this is the next track in the tracklist. If repeat\\nis enabled the next track can loop around the tracklist. When random is\\nenabled this should be a random track, all tracks should be played once\\nbefore the tracklist repeats.\\n\\n:rtype: :class:`int` or :class:`None`\\n\\n.. versionadded:: 1.1", "params": []}, "core.tracklist.get_previous_tlid": {"description": "Returns the TLID of the track that will be played if calling\\n:meth:`mopidy.core.PlaybackController.previous()`.\\n\\nFor normal playback this is the previous track in the tracklist. If\\nrandom and/or consume is enabled it should return the current track\\ninstead.\\n\\n:rtype: :class:`int` or :class:`None`\\n\\n.. versionadded:: 1.1", "params": []}, "core.tracklist.get_random": {"description": "Get random mode.\\n\\n:class:`True`\\n    Tracks are selected at random from the tracklist.\\n:class:`False`\\n    Tracks are played in the order of the tracklist.", "params": []}, "core.tracklist.get_repeat": {"description": "Get repeat mode.\\n\\n:class:`True`\\n    The tracklist is played repeatedly.\\n:class:`False`\\n    The tracklist is played once.", "params": []}, "core.tracklist.get_single": {"description": "Get single mode.\\n\\n:class:`True`\\n    Playback is stopped after current song, unless in ``repeat`` mode.\\n:class:`False`\\n    Playback continues after current song.", "params": []}, "core.tracklist.get_tl_tracks": {"description": "Get tracklist as list of :class:`mopidy.models.TlTrack`.", "params": []}, "core.tracklist.get_tracks": {"description": "Get tracklist as list of :class:`mopidy.models.Track`.", "params": []}, "core.tracklist.get_version": {"description": "Get the tracklist version.\\n\\nInteger which is increased every time the tracklist is changed. Is not\\nreset before Mopidy is restarted.", "params": []}, "core.tracklist.index": {"description": "The position of the given track in the tracklist.\\n\\nIf neither *tl_track* or *tlid* is given we return the index of\\nthe currently playing track.\\n\\n:param tl_track: the track to find the index of\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:param tlid: TLID of the track to find the index of\\n:type tlid: :class:`int` or :class:`None`\\n:rtype: :class:`int` or :class:`None`\\n\\n.. versionadded:: 1.1\\n    The *tlid* parameter", "params": [{"name": "tl_track", "default": null}, {"name": "tlid", "default": null}]}, "core.tracklist.move": {"description": "Move the tracks in the slice ``[start:end]`` to ``to_position``.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.\\n\\n:param start: position of first track to move\\n:type start: int\\n:param end: position after last track to move\\n:type end: int\\n:param to_position: new position for the tracks\\n:type to_position: int", "params": [{"name": "start"}, {"name": "end"}, {"name": "to_position"}]}, "core.tracklist.next_track": {"description": "The track that will be played if calling\\n:meth:`mopidy.core.PlaybackController.next()`.\\n\\nFor normal playback this is the next track in the tracklist. If repeat\\nis enabled the next track can loop around the tracklist. When random is\\nenabled this should be a random track, all tracks should be played once\\nbefore the tracklist repeats.\\n\\n.. deprecated:: 3.0\\n    Use :meth:`get_next_tlid` instead.\\n\\n:param tl_track: the reference track\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:rtype: :class:`mopidy.models.TlTrack` or :class:`None`", "params": [{"name": "tl_track"}]}, "core.tracklist.previous_track": {"description": "Returns the track that will be played if calling\\n:meth:`mopidy.core.PlaybackController.previous()`.\\n\\nFor normal playback this is the previous track in the tracklist. If\\nrandom and/or consume is enabled it should return the current track\\ninstead.\\n\\n.. deprecated:: 3.0\\n    Use :meth:`get_previous_tlid` instead.\\n\\n:param tl_track: the reference track\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:rtype: :class:`mopidy.models.TlTrack` or :class:`None`", "params": [{"name": "tl_track"}]}, "core.tracklist.remove": {"description": "Remove the matching tracks from the tracklist.\\n\\nUses :meth:`filter()` to lookup the tracks to remove.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.\\n\\n:param criteria: one or more rules to match by\\n:type criteria: dict, of (string, list) pairs\\n:rtype: list of :class:`mopidy.models.TlTrack` that were removed", "params": [{"name": "criteria"}]}, "core.tracklist.set_consume": {"description": "Set consume mode.\\n\\n:class:`True`\\n    Tracks are removed from the tracklist when they have been played.\\n:class:`False`\\n    Tracks are not removed from the tracklist.", "params": [{"name": "value"}]}, "core.tracklist.set_random": {"description": "Set random mode.\\n\\n:class:`True`\\n    Tracks are selected at random from the tracklist.\\n:class:`False`\\n    Tracks are played in the order of the tracklist.", "params": [{"name": "value"}]}, "core.tracklist.set_repeat": {"description": "Set repeat mode.\\n\\nTo repeat a single track, set both ``repeat`` and ``single``.\\n\\n:class:`True`\\n    The tracklist is played repeatedly.\\n:class:`False`\\n    The tracklist is played once.", "params": [{"name": "value"}]}, "core.tracklist.set_single": {"description": "Set single mode.\\n\\n:class:`True`\\n    Playback is stopped after current song, unless in ``repeat`` mode.\\n:class:`False`\\n    Playback continues after current song.", "params": [{"name": "value"}]}, "core.tracklist.shuffle": {"description": "Shuffles the entire tracklist. If ``start`` and ``end`` is given only\\nshuffles the slice ``[start:end]``.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.\\n\\n:param start: position of first track to shuffle\\n:type start: int or :class:`None`\\n:param end: position after last track to shuffle\\n:type end: int or :class:`None`", "params": [{"name": "start", "default": null}, {"name": "end", "default": null}]}, "core.tracklist.slice": {"description": "Returns a slice of the tracklist, limited by the given start and end\\npositions.\\n\\n:param start: position of first track to include in slice\\n:type start: int\\n:param end: position after last track to include in slice\\n:type end: int\\n:rtype: :class:`mopidy.models.TlTrack`", "params": [{"name": "start"}, {"name": "end"}]}}}'
okt 23 23:57:45 Desktop-Ubuntu mopidy[10569]: DEBUG    2022-10-23 23:57:45,417 [10569:HttpServer] mopidy.http.handlers
okt 23 23:57:45 Desktop-Ubuntu mopidy[10569]:   Received WebSocket message from 127.0.0.1: '{"method":"core.describe","jsonrpc":"2.0","id":57}'
okt 23 23:57:45 Desktop-Ubuntu mopidy[10569]: DEBUG    2022-10-23 23:57:45,413 [10569:HttpServer] mopidy.http.handlers
okt 23 23:57:45 Desktop-Ubuntu mopidy[10569]:   New WebSocket connection from 127.0.0.1
okt 23 23:57:45 Desktop-Ubuntu mopidy[10569]: DEBUG    2022-10-23 23:57:45,412 [10569:HttpServer] mopidy.http.handlers
okt 23 23:57:45 Desktop-Ubuntu mopidy[10569]:   101 GET /mopidy/ws/ (127.0.0.1) 19.22ms
okt 23 23:57:45 Desktop-Ubuntu mopidy[10569]: INFO     2022-10-23 23:57:45,411 [10569:HttpServer] tornado.access
okt 23 23:57:45 Desktop-Ubuntu mopidy[10569]:   Zeroconf service 'Mopidy HTTP server on Desktop-Ubuntu' (_mopidy-http._tcp at []:6680): Published
okt 23 23:57:45 Desktop-Ubuntu mopidy[10569]: DEBUG    2022-10-23 23:57:45,131 [10569:HttpFrontend-12 (_actor_loop)] mopidy.zeroconf
okt 23 23:57:45 Desktop-Ubuntu mopidy[10569]:   Zeroconf service 'Mopidy HTTP server on Desktop-Ubuntu' (_http._tcp at []:6680): Published
okt 23 23:57:45 Desktop-Ubuntu mopidy[10569]: DEBUG    2022-10-23 23:57:45,129 [10569:HttpFrontend-12 (_actor_loop)] mopidy.zeroconf
okt 23 23:57:45 Desktop-Ubuntu mopidy[10569]:     '/': <class 'tornado.web.RedirectHandler'>
okt 23 23:57:45 Desktop-Ubuntu mopidy[10569]:     '/mopidy/': <class 'mopidy.http.handlers.ClientListHandler'>
okt 23 23:57:45 Desktop-Ubuntu mopidy[10569]:     '/mopidy/(.+)': <class 'mopidy.http.handlers.StaticFileHandler'>
okt 23 23:57:45 Desktop-Ubuntu mopidy[10569]:     '/mopidy/rpc': <class 'mopidy.http.handlers.JsonRpcHandler'>
okt 23 23:57:45 Desktop-Ubuntu mopidy[10569]:     '/mopidy/ws/?': <class 'mopidy.http.handlers.WebSocketHandler'>
okt 23 23:57:45 Desktop-Ubuntu mopidy[10569]:     '/mopidy': <class 'mopidy.http.handlers.AddSlashHandler'>
okt 23 23:57:45 Desktop-Ubuntu mopidy[10569]:     '/iris/(.*)': <class 'mopidy_iris.handlers.ReactRouterHandler'>
okt 23 23:57:45 Desktop-Ubuntu mopidy[10569]:     '/iris/((.*)(?:css|js|json|map)$)': <class 'tornado.web.StaticFileHandler'>
okt 23 23:57:45 Desktop-Ubuntu mopidy[10569]:     '/iris/assets/(.*)': <class 'tornado.web.StaticFileHandler'>
okt 23 23:57:45 Desktop-Ubuntu mopidy[10569]:     '/iris/ws/?': <class 'mopidy_iris.handlers.WebsocketHandler'>
okt 23 23:57:45 Desktop-Ubuntu mopidy[10569]:     '/iris/http/([^/]*)': <class 'mopidy_iris.handlers.HttpHandler'>
okt 23 23:57:45 Desktop-Ubuntu mopidy[10569]:     '/iris': <class 'mopidy.http.handlers.AddSlashHandler'>
okt 23 23:57:45 Desktop-Ubuntu mopidy[10569]:     '/local/(.+)': <class 'mopidy_local.web.ImageHandler'>
okt 23 23:57:45 Desktop-Ubuntu mopidy[10569]:     '/local/(index.html)?': <class 'mopidy_local.web.IndexHandler'>
okt 23 23:57:45 Desktop-Ubuntu mopidy[10569]:     '/local': <class 'mopidy.http.handlers.AddSlashHandler'>
okt 23 23:57:45 Desktop-Ubuntu mopidy[10569]:     '/youtube/(.*\\.(?:webm|m4a|mp3|ogg))': <class 'mopidy_youtube.web.AudioHandler'>
okt 23 23:57:45 Desktop-Ubuntu mopidy[10569]:     '/youtube/(.*\\.jpg)': <class 'mopidy_youtube.web.ImageHandler'>
okt 23 23:57:45 Desktop-Ubuntu mopidy[10569]:     '/youtube/(index.html|image.html)?': <class 'mopidy_youtube.web.IndexHandler'>
okt 23 23:57:45 Desktop-Ubuntu mopidy[10569]:     '/youtube': <class 'mopidy.http.handlers.AddSlashHandler'>
okt 23 23:57:45 Desktop-Ubuntu mopidy[10569]:   HTTP routes from extensions:
okt 23 23:57:45 Desktop-Ubuntu mopidy[10569]: DEBUG    2022-10-23 23:57:45,125 [10569:HttpServer] mopidy.http.actor
okt 23 23:57:45 Desktop-Ubuntu mopidy[10569]:   Default webclient is mopidy
okt 23 23:57:45 Desktop-Ubuntu mopidy[10569]: DEBUG    2022-10-23 23:57:45,125 [10569:HttpServer] mopidy.http.actor
okt 23 23:57:45 Desktop-Ubuntu mopidy[10569]:   Loaded HTTP extension: mopidy
okt 23 23:57:45 Desktop-Ubuntu mopidy[10569]: DEBUG    2022-10-23 23:57:45,124 [10569:HttpServer] mopidy.http.actor
okt 23 23:57:45 Desktop-Ubuntu mopidy[10569]:   Loaded HTTP extension: iris
okt 23 23:57:45 Desktop-Ubuntu mopidy[10569]: DEBUG    2022-10-23 23:57:45,124 [10569:HttpServer] mopidy.http.actor
okt 23 23:57:45 Desktop-Ubuntu mopidy[10569]:   Loaded HTTP extension: local
okt 23 23:57:45 Desktop-Ubuntu mopidy[10569]: DEBUG    2022-10-23 23:57:45,124 [10569:HttpServer] mopidy.http.actor
okt 23 23:57:45 Desktop-Ubuntu mopidy[10569]:   Loaded HTTP extension: youtube
okt 23 23:57:45 Desktop-Ubuntu mopidy[10569]: DEBUG    2022-10-23 23:57:45,121 [10569:HttpServer] mopidy.http.actor
okt 23 23:57:45 Desktop-Ubuntu mopidy[10569]:   Starting GLib mainloop
okt 23 23:57:45 Desktop-Ubuntu mopidy[10569]: INFO     2022-10-23 23:57:45,117 [10569:MainThread] mopidy.commands
okt 23 23:57:45 Desktop-Ubuntu mopidy[10569]:   Using selector: EpollSelector
okt 23 23:57:45 Desktop-Ubuntu mopidy[10569]: DEBUG    2022-10-23 23:57:45,117 [10569:HttpServer] asyncio
okt 23 23:57:45 Desktop-Ubuntu mopidy[10569]:   HttpFrontend took 1ms
okt 23 23:57:45 Desktop-Ubuntu mopidy[10569]: TRACE    2022-10-23 23:57:45,117 [10569:MainThread] mopidy.internal.timer
okt 23 23:57:45 Desktop-Ubuntu mopidy[10569]:   HTTP server running at [::ffff:127.0.0.1]:6680
okt 23 23:57:45 Desktop-Ubuntu mopidy[10569]: INFO     2022-10-23 23:57:45,117 [10569:HttpFrontend-12 (_actor_loop)] mopidy.http.actor
okt 23 23:57:45 Desktop-Ubuntu mopidy[10569]:   Starting HttpFrontend (urn:uuid:ab20a397-f192-4498-8d47-d055fcc7619c)
okt 23 23:57:45 Desktop-Ubuntu mopidy[10569]: DEBUG    2022-10-23 23:57:45,116 [10569:MainThread] pykka
okt 23 23:57:45 Desktop-Ubuntu mopidy[10569]:   Registered HttpFrontend (urn:uuid:ab20a397-f192-4498-8d47-d055fcc7619c)
okt 23 23:57:45 Desktop-Ubuntu mopidy[10569]: DEBUG    2022-10-23 23:57:45,116 [10569:MainThread] pykka
okt 23 23:57:45 Desktop-Ubuntu mopidy[10569]:   Starting HTTP server
okt 23 23:57:45 Desktop-Ubuntu mopidy[10569]: DEBUG    2022-10-23 23:57:45,116 [10569:MainThread] mopidy.http.actor
okt 23 23:57:45 Desktop-Ubuntu mopidy[10569]:   IrisFrontend took 0ms
okt 23 23:57:45 Desktop-Ubuntu mopidy[10569]: TRACE    2022-10-23 23:57:45,115 [10569:MainThread] mopidy.internal.timer
okt 23 23:57:45 Desktop-Ubuntu mopidy[10569]:   Starting Iris 3.64.1
okt 23 23:57:45 Desktop-Ubuntu mopidy[10569]: INFO     2022-10-23 23:57:45,115 [10569:IrisFrontend-10 (_actor_loop)] mopidy_iris.core
okt 23 23:57:45 Desktop-Ubuntu mopidy[10569]:   Starting IrisFrontend (urn:uuid:6fb125f5-2bbd-48de-ad80-848eebedc0e3)
okt 23 23:57:45 Desktop-Ubuntu mopidy[10569]: DEBUG    2022-10-23 23:57:45,115 [10569:MainThread] pykka
okt 23 23:57:45 Desktop-Ubuntu mopidy[10569]:   Registered IrisFrontend (urn:uuid:6fb125f5-2bbd-48de-ad80-848eebedc0e3)
okt 23 23:57:45 Desktop-Ubuntu mopidy[10569]: DEBUG    2022-10-23 23:57:45,115 [10569:MainThread] pykka
okt 23 23:57:45 Desktop-Ubuntu mopidy[10569]:   YouTubeCoreListener took 0ms
okt 23 23:57:45 Desktop-Ubuntu mopidy[10569]: TRACE    2022-10-23 23:57:45,115 [10569:MainThread] mopidy.internal.timer
okt 23 23:57:45 Desktop-Ubuntu mopidy[10569]:   Starting YouTubeCoreListener (urn:uuid:79301c9e-325f-4a39-92de-2809a982e0d4)
okt 23 23:57:45 Desktop-Ubuntu mopidy[10569]: DEBUG    2022-10-23 23:57:45,115 [10569:MainThread] pykka
okt 23 23:57:45 Desktop-Ubuntu mopidy[10569]:   Registered YouTubeCoreListener (urn:uuid:79301c9e-325f-4a39-92de-2809a982e0d4)
okt 23 23:57:45 Desktop-Ubuntu mopidy[10569]: DEBUG    2022-10-23 23:57:45,114 [10569:MainThread] pykka
okt 23 23:57:45 Desktop-Ubuntu mopidy[10569]:   YouTubeAutoplayer took 0ms
okt 23 23:57:45 Desktop-Ubuntu mopidy[10569]: TRACE    2022-10-23 23:57:45,114 [10569:MainThread] mopidy.internal.timer
okt 23 23:57:45 Desktop-Ubuntu mopidy[10569]:   Starting YouTubeAutoplayer (urn:uuid:a8b7e333-7d5e-4afa-8847-ec9eb7ef191c)
okt 23 23:57:45 Desktop-Ubuntu mopidy[10569]: DEBUG    2022-10-23 23:57:45,114 [10569:MainThread] pykka
okt 23 23:57:45 Desktop-Ubuntu mopidy[10569]:   Registered YouTubeAutoplayer (urn:uuid:a8b7e333-7d5e-4afa-8847-ec9eb7ef191c)
okt 23 23:57:45 Desktop-Ubuntu mopidy[10569]: DEBUG    2022-10-23 23:57:45,114 [10569:MainThread] pykka
okt 23 23:57:45 Desktop-Ubuntu mopidy[10569]:   Starting Mopidy frontends: YouTubeAutoplayer, YouTubeCoreListener, IrisFrontend, HttpFrontend
okt 23 23:57:45 Desktop-Ubuntu mopidy[10569]: INFO     2022-10-23 23:57:45,114 [10569:MainThread] mopidy.commands
okt 23 23:57:45 Desktop-Ubuntu mopidy[10569]:   Starting Core (urn:uuid:925094b8-ce32-4daa-bc51-92707a409f2f)
okt 23 23:57:45 Desktop-Ubuntu mopidy[10569]: DEBUG    2022-10-23 23:57:45,110 [10569:MainThread] pykka
okt 23 23:57:45 Desktop-Ubuntu mopidy[10569]:   Registered Core (urn:uuid:925094b8-ce32-4daa-bc51-92707a409f2f)
okt 23 23:57:45 Desktop-Ubuntu mopidy[10569]: DEBUG    2022-10-23 23:57:45,110 [10569:MainThread] pykka
okt 23 23:57:45 Desktop-Ubuntu mopidy[10569]:   Starting Mopidy core
okt 23 23:57:45 Desktop-Ubuntu mopidy[10569]: INFO     2022-10-23 23:57:45,107 [10569:MainThread] mopidy.commands
okt 23 23:57:45 Desktop-Ubuntu mopidy[10569]:   StreamBackend took 7ms
okt 23 23:57:45 Desktop-Ubuntu mopidy[10569]: TRACE    2022-10-23 23:57:45,106 [10569:MainThread] mopidy.internal.timer
okt 23 23:57:45 Desktop-Ubuntu mopidy[10569]:   Starting StreamBackend (urn:uuid:86360615-a961-49df-ad6c-ccd22a66f054)
okt 23 23:57:45 Desktop-Ubuntu mopidy[10569]: DEBUG    2022-10-23 23:57:45,103 [10569:MainThread] pykka
okt 23 23:57:45 Desktop-Ubuntu mopidy[10569]:   Registered StreamBackend (urn:uuid:86360615-a961-49df-ad6c-ccd22a66f054)
okt 23 23:57:45 Desktop-Ubuntu mopidy[10569]: DEBUG    2022-10-23 23:57:45,103 [10569:MainThread] pykka
okt 23 23:57:45 Desktop-Ubuntu mopidy[10569]:   Audio output set to "pulsesink server=127.0.0.1"
okt 23 23:57:45 Desktop-Ubuntu mopidy[10569]: INFO     2022-10-23 23:57:45,100 [10569:Audio-2 (_actor_loop)] mopidy.audio.actor
okt 23 23:57:45 Desktop-Ubuntu mopidy[10569]:   M3UBackend took 3ms
okt 23 23:57:45 Desktop-Ubuntu mopidy[10569]: TRACE    2022-10-23 23:57:45,099 [10569:MainThread] mopidy.internal.timer
okt 23 23:57:45 Desktop-Ubuntu mopidy[10569]:   Starting M3UBackend (urn:uuid:bf6d39b8-572c-440a-af7a-f7e5f59ae6bd)
okt 23 23:57:45 Desktop-Ubuntu mopidy[10569]: DEBUG    2022-10-23 23:57:45,096 [10569:MainThread] pykka
okt 23 23:57:45 Desktop-Ubuntu mopidy[10569]:   Registered M3UBackend (urn:uuid:bf6d39b8-572c-440a-af7a-f7e5f59ae6bd)
okt 23 23:57:45 Desktop-Ubuntu mopidy[10569]: DEBUG    2022-10-23 23:57:45,095 [10569:MainThread] pykka
okt 23 23:57:45 Desktop-Ubuntu mopidy[10569]:   FileBackend took 2ms
okt 23 23:57:45 Desktop-Ubuntu mopidy[10569]: TRACE    2022-10-23 23:57:45,095 [10569:MainThread] mopidy.internal.timer
okt 23 23:57:45 Desktop-Ubuntu mopidy[10569]:   Starting FileBackend (urn:uuid:45743d0e-e8dd-4866-b37d-6aa3ca935d52)
okt 23 23:57:45 Desktop-Ubuntu mopidy[10569]: DEBUG    2022-10-23 23:57:45,093 [10569:MainThread] pykka
okt 23 23:57:45 Desktop-Ubuntu mopidy[10569]:   Registered FileBackend (urn:uuid:45743d0e-e8dd-4866-b37d-6aa3ca935d52)
okt 23 23:57:45 Desktop-Ubuntu mopidy[10569]: DEBUG    2022-10-23 23:57:45,092 [10569:MainThread] pykka
okt 23 23:57:45 Desktop-Ubuntu mopidy[10569]:   Failed expanding path ($XDG_MUSIC_DIR) from file/media_dirs config value.
okt 23 23:57:45 Desktop-Ubuntu mopidy[10569]: DEBUG    2022-10-23 23:57:45,092 [10569:MainThread] mopidy.file.library
okt 23 23:57:45 Desktop-Ubuntu mopidy[10569]:   LocalBackend took 3ms
okt 23 23:57:45 Desktop-Ubuntu mopidy[10569]: TRACE    2022-10-23 23:57:45,092 [10569:MainThread] mopidy.internal.timer
okt 23 23:57:45 Desktop-Ubuntu mopidy[10569]:   Starting LocalBackend (urn:uuid:daa7578f-1e53-4382-85a8-ab8a8ef6c50f)
okt 23 23:57:45 Desktop-Ubuntu mopidy[10569]: DEBUG    2022-10-23 23:57:45,089 [10569:MainThread] pykka
okt 23 23:57:45 Desktop-Ubuntu mopidy[10569]:   Registered LocalBackend (urn:uuid:daa7578f-1e53-4382-85a8-ab8a8ef6c50f)
okt 23 23:57:45 Desktop-Ubuntu mopidy[10569]: DEBUG    2022-10-23 23:57:45,089 [10569:MainThread] pykka
okt 23 23:57:45 Desktop-Ubuntu mopidy[10569]: ModuleNotFoundError: No module named 'ytmusicapi'
okt 23 23:57:45 Desktop-Ubuntu mopidy[10569]:     from ytmusicapi import YTMusic
okt 23 23:57:45 Desktop-Ubuntu mopidy[10569]:   File "/usr/local/lib/python3.10/dist-packages/mopidy_youtube/apis/youtube_music.py", line 7, in <module>
okt 23 23:57:45 Desktop-Ubuntu mopidy[10569]:     from mopidy_youtube.apis import youtube_music
okt 23 23:57:45 Desktop-Ubuntu mopidy[10569]:   File "/usr/local/lib/python3.10/dist-packages/mopidy_youtube/backend.py", line 84, in __init__
okt 23 23:57:45 Desktop-Ubuntu mopidy[10569]:     obj = cls(*args, **kwargs)
okt 23 23:57:45 Desktop-Ubuntu mopidy[10569]:   File "/usr/lib/python3/dist-packages/pykka/_actor.py", line 91, in start
okt 23 23:57:45 Desktop-Ubuntu mopidy[10569]:     backend = backend_class.start(
okt 23 23:57:45 Desktop-Ubuntu mopidy[10569]:   File "/usr/lib/python3/dist-packages/mopidy/commands.py", line 412, in start_backends
okt 23 23:57:45 Desktop-Ubuntu mopidy[10569]:     yield
okt 23 23:57:45 Desktop-Ubuntu mopidy[10569]:   File "/usr/lib/python3/dist-packages/mopidy/commands.py", line 248, in _actor_error_handling
okt 23 23:57:45 Desktop-Ubuntu mopidy[10569]: Traceback (most recent call last):
okt 23 23:57:45 Desktop-Ubuntu mopidy[10569]:   Got un-handled exception from YouTubeBackend
okt 23 23:57:45 Desktop-Ubuntu mopidy[10569]: ERROR    2022-10-23 23:57:45,087 [10569:MainThread] mopidy.commands
okt 23 23:57:45 Desktop-Ubuntu mopidy[10569]:   Starting Mopidy backends: YouTubeBackend, LocalBackend, FileBackend, M3UBackend, StreamBackend
okt 23 23:57:45 Desktop-Ubuntu mopidy[10569]: INFO     2022-10-23 23:57:45,086 [10569:MainThread] mopidy.commands
okt 23 23:57:45 Desktop-Ubuntu mopidy[10569]:   Starting Audio (urn:uuid:1ee5d69a-0fba-41a3-903a-b817f79cd3f4)
okt 23 23:57:45 Desktop-Ubuntu mopidy[10569]: DEBUG    2022-10-23 23:57:45,085 [10569:MainThread] pykka
okt 23 23:57:45 Desktop-Ubuntu mopidy[10569]:   Registered Audio (urn:uuid:1ee5d69a-0fba-41a3-903a-b817f79cd3f4)
okt 23 23:57:45 Desktop-Ubuntu mopidy[10569]: DEBUG    2022-10-23 23:57:45,085 [10569:MainThread] pykka
okt 23 23:57:45 Desktop-Ubuntu mopidy[10569]:   Starting Mopidy audio
okt 23 23:57:45 Desktop-Ubuntu mopidy[10569]: INFO     2022-10-23 23:57:45,085 [10569:MainThread] mopidy.commands
okt 23 23:57:45 Desktop-Ubuntu mopidy[10569]:   Mixer volume left unchanged
okt 23 23:57:45 Desktop-Ubuntu mopidy[10569]: DEBUG    2022-10-23 23:57:45,085 [10569:MainThread] mopidy.commands
okt 23 23:57:45 Desktop-Ubuntu mopidy[10569]:   Starting SoftwareMixer (urn:uuid:09b488a1-b465-42e3-8ff7-051c5f5726ba)
okt 23 23:57:45 Desktop-Ubuntu mopidy[10569]: DEBUG    2022-10-23 23:57:45,084 [10569:MainThread] pykka
okt 23 23:57:45 Desktop-Ubuntu mopidy[10569]:   Registered SoftwareMixer (urn:uuid:09b488a1-b465-42e3-8ff7-051c5f5726ba)
okt 23 23:57:45 Desktop-Ubuntu mopidy[10569]: DEBUG    2022-10-23 23:57:45,084 [10569:MainThread] pykka
okt 23 23:57:45 Desktop-Ubuntu mopidy[10569]:   Starting Mopidy mixer: SoftwareMixer
okt 23 23:57:45 Desktop-Ubuntu mopidy[10569]: INFO     2022-10-23 23:57:45,083 [10569:MainThread] mopidy.commands
okt 23 23:57:45 Desktop-Ubuntu mopidy[10569]:   Available Mopidy mixers: SoftwareMixer
okt 23 23:57:45 Desktop-Ubuntu mopidy[10569]: DEBUG    2022-10-23 23:57:45,083 [10569:MainThread] mopidy.commands
okt 23 23:57:45 Desktop-Ubuntu mopidy[10569]:   Disabled extensions: soundcloud
okt 23 23:57:45 Desktop-Ubuntu mopidy[10569]: INFO     2022-10-23 23:57:45,004 [10569:MainThread] mopidy.__main__
okt 23 23:57:45 Desktop-Ubuntu mopidy[10569]:   Enabled extensions: local, youtube, iris, m3u, http, file, softwaremixer, stream
okt 23 23:57:45 Desktop-Ubuntu mopidy[10569]: INFO     2022-10-23 23:57:45,004 [10569:MainThread] mopidy.__main__
okt 23 23:57:45 Desktop-Ubuntu mopidy[10569]:   Validating extension: stream
okt 23 23:57:45 Desktop-Ubuntu mopidy[10569]: DEBUG    2022-10-23 23:57:45,004 [10569:MainThread] mopidy.ext
okt 23 23:57:45 Desktop-Ubuntu mopidy[10569]:   Validating extension: softwaremixer
okt 23 23:57:45 Desktop-Ubuntu mopidy[10569]: DEBUG    2022-10-23 23:57:45,004 [10569:MainThread] mopidy.ext
okt 23 23:57:45 Desktop-Ubuntu mopidy[10569]:   Validating extension: m3u
okt 23 23:57:45 Desktop-Ubuntu mopidy[10569]: DEBUG    2022-10-23 23:57:45,004 [10569:MainThread] mopidy.ext
okt 23 23:57:44 Desktop-Ubuntu mopidy[10569]:   Validating extension: http
okt 23 23:57:44 Desktop-Ubuntu mopidy[10569]: DEBUG    2022-10-23 23:57:44,950 [10569:MainThread] mopidy.ext
okt 23 23:57:44 Desktop-Ubuntu mopidy[10569]:   Validating extension: file
okt 23 23:57:44 Desktop-Ubuntu mopidy[10569]: DEBUG    2022-10-23 23:57:44,950 [10569:MainThread] mopidy.ext
okt 23 23:57:44 Desktop-Ubuntu mopidy[10569]:   Validating extension: iris
okt 23 23:57:44 Desktop-Ubuntu mopidy[10569]: DEBUG    2022-10-23 23:57:44,933 [10569:MainThread] mopidy.ext
okt 23 23:57:44 Desktop-Ubuntu mopidy[10569]:   Validating extension: soundcloud
okt 23 23:57:44 Desktop-Ubuntu mopidy[10569]: DEBUG    2022-10-23 23:57:44,908 [10569:MainThread] mopidy.ext
okt 23 23:57:44 Desktop-Ubuntu mopidy[10569]:   Validating extension: local
okt 23 23:57:44 Desktop-Ubuntu mopidy[10569]: DEBUG    2022-10-23 23:57:44,886 [10569:MainThread] mopidy.ext
okt 23 23:57:44 Desktop-Ubuntu mopidy[10569]:   Validating extension: youtube
okt 23 23:57:44 Desktop-Ubuntu mopidy[10569]: DEBUG    2022-10-23 23:57:44,834 [10569:MainThread] mopidy.ext
okt 23 23:57:44 Desktop-Ubuntu mopidy[10569]:   Ignoring config section 'jukebox' because no matching extension was found
okt 23 23:57:44 Desktop-Ubuntu mopidy[10569]: WARNING  2022-10-23 23:57:44,832 [10569:MainThread] mopidy.config
okt 23 23:57:44 Desktop-Ubuntu mopidy[10569]:   Ignoring config section 'ytmusic' because no matching extension was found
okt 23 23:57:44 Desktop-Ubuntu mopidy[10569]: WARNING  2022-10-23 23:57:44,832 [10569:MainThread] mopidy.config
okt 23 23:57:44 Desktop-Ubuntu mopidy[10569]:   Loading config from command line options
okt 23 23:57:44 Desktop-Ubuntu mopidy[10569]: INFO     2022-10-23 23:57:44,829 [10569:MainThread] mopidy.config
okt 23 23:57:44 Desktop-Ubuntu mopidy[10569]:   Loading config from file:///etc/mopidy/mopidy.conf
okt 23 23:57:44 Desktop-Ubuntu mopidy[10569]: INFO     2022-10-23 23:57:44,828 [10569:MainThread] mopidy.config
okt 23 23:57:44 Desktop-Ubuntu mopidy[10569]:   Loading config from file:///usr/share/mopidy/conf.d/mopidy.conf
okt 23 23:57:44 Desktop-Ubuntu mopidy[10569]: INFO     2022-10-23 23:57:44,828 [10569:MainThread] mopidy.config
okt 23 23:57:44 Desktop-Ubuntu mopidy[10569]:   Loading config from builtin defaults
okt 23 23:57:44 Desktop-Ubuntu mopidy[10569]: INFO     2022-10-23 23:57:44,826 [10569:MainThread] mopidy.config
okt 23 23:57:44 Desktop-Ubuntu mopidy[10569]:   Fetching passwords from your keyring failed. Any passwords stored in the keyring will not be available. (org.freedesktop.DBus.Error.NotSupported: Unable to autolaunch a dbus-daemon without a $DISPLAY for X11)
okt 23 23:57:44 Desktop-Ubuntu mopidy[10569]: DEBUG    2022-10-23 23:57:44,826 [10569:MainThread] mopidy.config.keyring
okt 23 23:57:44 Desktop-Ubuntu mopidy[10569]:   Discovered extensions: youtube, local, soundcloud, iris, file, http, m3u, softwaremixer, stream
okt 23 23:57:44 Desktop-Ubuntu mopidy[10569]: DEBUG    2022-10-23 23:57:44,825 [10569:MainThread] mopidy.ext
okt 23 23:57:44 Desktop-Ubuntu mopidy[10569]:   Loaded extension: Mopidy-Stream 3.3.0
okt 23 23:57:44 Desktop-Ubuntu mopidy[10569]: DEBUG    2022-10-23 23:57:44,821 [10569:MainThread] mopidy.ext
okt 23 23:57:44 Desktop-Ubuntu mopidy[10569]:   Loading entry point: stream = mopidy.stream:Extension
okt 23 23:57:44 Desktop-Ubuntu mopidy[10569]: DEBUG    2022-10-23 23:57:44,821 [10569:MainThread] mopidy.ext
okt 23 23:57:44 Desktop-Ubuntu mopidy[10569]:   Loaded extension: Mopidy-SoftwareMixer 3.3.0
okt 23 23:57:44 Desktop-Ubuntu mopidy[10569]: DEBUG    2022-10-23 23:57:44,821 [10569:MainThread] mopidy.ext
okt 23 23:57:44 Desktop-Ubuntu mopidy[10569]:   Loading entry point: softwaremixer = mopidy.softwaremixer:Extension
okt 23 23:57:44 Desktop-Ubuntu mopidy[10569]: DEBUG    2022-10-23 23:57:44,820 [10569:MainThread] mopidy.ext
okt 23 23:57:44 Desktop-Ubuntu mopidy[10569]:   Loaded extension: Mopidy-M3U 3.3.0
okt 23 23:57:44 Desktop-Ubuntu mopidy[10569]: DEBUG    2022-10-23 23:57:44,820 [10569:MainThread] mopidy.ext
okt 23 23:57:44 Desktop-Ubuntu mopidy[10569]:   Loading entry point: m3u = mopidy.m3u:Extension
okt 23 23:57:44 Desktop-Ubuntu mopidy[10569]: DEBUG    2022-10-23 23:57:44,820 [10569:MainThread] mopidy.ext
okt 23 23:57:44 Desktop-Ubuntu mopidy[10569]:   Loaded extension: Mopidy-HTTP 3.3.0
okt 23 23:57:44 Desktop-Ubuntu mopidy[10569]: DEBUG    2022-10-23 23:57:44,820 [10569:MainThread] mopidy.ext
okt 23 23:57:44 Desktop-Ubuntu mopidy[10569]:   Loading entry point: http = mopidy.http:Extension
okt 23 23:57:44 Desktop-Ubuntu mopidy[10569]: DEBUG    2022-10-23 23:57:44,820 [10569:MainThread] mopidy.ext
okt 23 23:57:44 Desktop-Ubuntu mopidy[10569]:   Loaded extension: Mopidy-File 3.3.0
okt 23 23:57:44 Desktop-Ubuntu mopidy[10569]: DEBUG    2022-10-23 23:57:44,820 [10569:MainThread] mopidy.ext
okt 23 23:57:44 Desktop-Ubuntu mopidy[10569]:   Loading entry point: file = mopidy.file:Extension
okt 23 23:57:44 Desktop-Ubuntu mopidy[10569]: DEBUG    2022-10-23 23:57:44,819 [10569:MainThread] mopidy.ext
okt 23 23:57:44 Desktop-Ubuntu mopidy[10569]:   Loaded extension: Mopidy-Iris 3.64.1
okt 23 23:57:44 Desktop-Ubuntu mopidy[10569]: DEBUG    2022-10-23 23:57:44,817 [10569:MainThread] mopidy.ext
okt 23 23:57:44 Desktop-Ubuntu mopidy[10569]:   Loading entry point: iris = mopidy_iris:Extension
okt 23 23:57:44 Desktop-Ubuntu mopidy[10569]: DEBUG    2022-10-23 23:57:44,816 [10569:MainThread] mopidy.ext
okt 23 23:57:44 Desktop-Ubuntu mopidy[10569]:   Loaded extension: Mopidy-SoundCloud 3.0.1
okt 23 23:57:44 Desktop-Ubuntu mopidy[10569]: DEBUG    2022-10-23 23:57:44,816 [10569:MainThread] mopidy.ext
okt 23 23:57:44 Desktop-Ubuntu mopidy[10569]:   Loading entry point: soundcloud = mopidy_soundcloud:Extension
okt 23 23:57:44 Desktop-Ubuntu mopidy[10569]: DEBUG    2022-10-23 23:57:44,815 [10569:MainThread] mopidy.ext
okt 23 23:57:44 Desktop-Ubuntu mopidy[10569]:   Loaded extension: Mopidy-Local 3.2.1
okt 23 23:57:44 Desktop-Ubuntu mopidy[10569]: DEBUG    2022-10-23 23:57:44,815 [10569:MainThread] mopidy.ext
okt 23 23:57:44 Desktop-Ubuntu mopidy[10569]:   Loading entry point: local = mopidy_local:Extension
okt 23 23:57:44 Desktop-Ubuntu mopidy[10569]: DEBUG    2022-10-23 23:57:44,803 [10569:MainThread] mopidy.ext
okt 23 23:57:44 Desktop-Ubuntu mopidy[10569]:   Loaded extension: Mopidy-YouTube 3.6.1
okt 23 23:57:44 Desktop-Ubuntu mopidy[10569]: DEBUG    2022-10-23 23:57:44,803 [10569:MainThread] mopidy.ext
okt 23 23:57:44 Desktop-Ubuntu mopidy[10569]:   Loading entry point: youtube = mopidy_youtube:Extension
okt 23 23:57:44 Desktop-Ubuntu mopidy[10569]: DEBUG    2022-10-23 23:57:44,802 [10569:MainThread] mopidy.ext
okt 23 23:57:44 Desktop-Ubuntu mopidy[10569]:   Starting Mopidy 3.3.0
okt 23 23:57:44 Desktop-Ubuntu mopidy[10569]: INFO     2022-10-23 23:57:44,800 [10569:MainThread] mopidy.__main__
okt 23 23:57:44 Desktop-Ubuntu systemd[1]: Started Mopidy music server.
okt 23 23:57:44 Desktop-Ubuntu systemd[1]: Starting Mopidy music server...
okt 23 23:57:44 Desktop-Ubuntu systemd[1]: Stopped Mopidy music server.
okt 23 23:57:44 Desktop-Ubuntu systemd[1]: mopidy.service: Deactivated successfully.
okt 23 23:57:44 Desktop-Ubuntu mopidy[10401]:   All actors stopped.
okt 23 23:57:44 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:57:44,333 [10401:MainThread] mopidy.internal.process
okt 23 23:57:44 Desktop-Ubuntu mopidy[10401]:   Stopped SoftwareMixer (urn:uuid:e76db424-5fa9-45ba-9309-fb43d92554bd)
okt 23 23:57:44 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:57:44,333 [10401:SoftwareMixer-1 (_actor_loop)] pykka
okt 23 23:57:44 Desktop-Ubuntu mopidy[10401]:   Unregistered SoftwareMixer (urn:uuid:e76db424-5fa9-45ba-9309-fb43d92554bd)
okt 23 23:57:44 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:57:44,333 [10401:SoftwareMixer-1 (_actor_loop)] pykka
okt 23 23:57:44 Desktop-Ubuntu mopidy[10401]:   Stopping 1 instance(s) of SoftwareMixer
okt 23 23:57:44 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:57:44,333 [10401:MainThread] mopidy.internal.process
okt 23 23:57:44 Desktop-Ubuntu mopidy[10401]:   Stopping Mopidy mixer
okt 23 23:57:44 Desktop-Ubuntu mopidy[10401]: INFO     2022-10-23 23:57:44,333 [10401:MainThread] mopidy.commands
okt 23 23:57:44 Desktop-Ubuntu mopidy[10401]:   Stopped Audio (urn:uuid:9bca1e50-fec2-4fe5-b068-4386fdc048e4)
okt 23 23:57:44 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:57:44,332 [10401:Audio-2 (_actor_loop)] pykka
okt 23 23:57:44 Desktop-Ubuntu mopidy[10401]:   Unregistered Audio (urn:uuid:9bca1e50-fec2-4fe5-b068-4386fdc048e4)
okt 23 23:57:44 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:57:44,332 [10401:Audio-2 (_actor_loop)] pykka
okt 23 23:57:44 Desktop-Ubuntu mopidy[10401]:   Stopping 1 instance(s) of Audio
okt 23 23:57:44 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:57:44,332 [10401:MainThread] mopidy.internal.process
okt 23 23:57:44 Desktop-Ubuntu mopidy[10401]:   Stopping Mopidy audio
okt 23 23:57:44 Desktop-Ubuntu mopidy[10401]: INFO     2022-10-23 23:57:44,332 [10401:MainThread] mopidy.commands
okt 23 23:57:44 Desktop-Ubuntu mopidy[10401]:   Stopped StreamBackend (urn:uuid:58840cb6-8ea2-4e3e-854a-27476ddcbf8f)
okt 23 23:57:44 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:57:44,332 [10401:StreamBackend-6 (_actor_loop)] pykka
okt 23 23:57:44 Desktop-Ubuntu mopidy[10401]:   Unregistered StreamBackend (urn:uuid:58840cb6-8ea2-4e3e-854a-27476ddcbf8f)
okt 23 23:57:44 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:57:44,332 [10401:StreamBackend-6 (_actor_loop)] pykka
okt 23 23:57:44 Desktop-Ubuntu mopidy[10401]:   Stopping 1 instance(s) of StreamBackend
okt 23 23:57:44 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:57:44,332 [10401:MainThread] mopidy.internal.process
okt 23 23:57:44 Desktop-Ubuntu mopidy[10401]:   Stopped M3UBackend (urn:uuid:1d671d14-510f-4850-92b0-dc977b30bfa1)
okt 23 23:57:44 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:57:44,331 [10401:M3UBackend-5 (_actor_loop)] pykka
okt 23 23:57:44 Desktop-Ubuntu mopidy[10401]:   Unregistered M3UBackend (urn:uuid:1d671d14-510f-4850-92b0-dc977b30bfa1)
okt 23 23:57:44 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:57:44,331 [10401:M3UBackend-5 (_actor_loop)] pykka
okt 23 23:57:44 Desktop-Ubuntu mopidy[10401]:   Stopping 1 instance(s) of M3UBackend
okt 23 23:57:44 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:57:44,331 [10401:MainThread] mopidy.internal.process
okt 23 23:57:44 Desktop-Ubuntu mopidy[10401]:   Stopped FileBackend (urn:uuid:f0866fc2-90ce-45f3-86db-20019bcaba94)
okt 23 23:57:44 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:57:44,331 [10401:FileBackend-4 (_actor_loop)] pykka
okt 23 23:57:44 Desktop-Ubuntu mopidy[10401]:   Unregistered FileBackend (urn:uuid:f0866fc2-90ce-45f3-86db-20019bcaba94)
okt 23 23:57:44 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:57:44,331 [10401:FileBackend-4 (_actor_loop)] pykka
okt 23 23:57:44 Desktop-Ubuntu mopidy[10401]:   Stopping 1 instance(s) of FileBackend
okt 23 23:57:44 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:57:44,331 [10401:MainThread] mopidy.internal.process
okt 23 23:57:44 Desktop-Ubuntu mopidy[10401]:   Stopped LocalBackend (urn:uuid:c7765a70-b61e-4c67-8e9c-de8bb79e227a)
okt 23 23:57:44 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:57:44,330 [10401:LocalBackend-3 (_actor_loop)] pykka
okt 23 23:57:44 Desktop-Ubuntu mopidy[10401]:   Unregistered LocalBackend (urn:uuid:c7765a70-b61e-4c67-8e9c-de8bb79e227a)
okt 23 23:57:44 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:57:44,330 [10401:LocalBackend-3 (_actor_loop)] pykka
okt 23 23:57:44 Desktop-Ubuntu mopidy[10401]:   Stopping 1 instance(s) of LocalBackend
okt 23 23:57:44 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:57:44,330 [10401:MainThread] mopidy.internal.process
okt 23 23:57:44 Desktop-Ubuntu mopidy[10401]:   Stopping 0 instance(s) of YouTubeBackend
okt 23 23:57:44 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:57:44,330 [10401:MainThread] mopidy.internal.process
okt 23 23:57:44 Desktop-Ubuntu mopidy[10401]:   Stopping Mopidy backends
okt 23 23:57:44 Desktop-Ubuntu mopidy[10401]: INFO     2022-10-23 23:57:44,330 [10401:MainThread] mopidy.commands
okt 23 23:57:44 Desktop-Ubuntu mopidy[10401]:   Stopped Core (urn:uuid:a386d3cc-c777-4477-a64e-7d87ccf86d01)
okt 23 23:57:44 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:57:44,330 [10401:Core-7 (_actor_loop)] pykka
okt 23 23:57:44 Desktop-Ubuntu mopidy[10401]:   Unregistered Core (urn:uuid:a386d3cc-c777-4477-a64e-7d87ccf86d01)
okt 23 23:57:44 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:57:44,330 [10401:Core-7 (_actor_loop)] pykka
okt 23 23:57:44 Desktop-Ubuntu mopidy[10401]:   Stopping 1 instance(s) of Core
okt 23 23:57:44 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:57:44,330 [10401:MainThread] mopidy.internal.process
okt 23 23:57:44 Desktop-Ubuntu mopidy[10401]:   Stopped HTTP server
okt 23 23:57:44 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:57:44,329 [10401:HttpServer] mopidy.http.actor
okt 23 23:57:44 Desktop-Ubuntu mopidy[10401]:   Stopping Mopidy core
okt 23 23:57:44 Desktop-Ubuntu mopidy[10401]: INFO     2022-10-23 23:57:44,329 [10401:MainThread] mopidy.commands
okt 23 23:57:44 Desktop-Ubuntu mopidy[10401]:   Stopping HTTP server
okt 23 23:57:44 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:57:44,329 [10401:HttpFrontend-12 (_actor_loop)] mopidy.http.actor
okt 23 23:57:44 Desktop-Ubuntu mopidy[10401]:   Zeroconf service 'Mopidy HTTP server on Desktop-Ubuntu' (_mopidy-http._tcp at []:6680): Unpublished
okt 23 23:57:44 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:57:44,329 [10401:HttpFrontend-12 (_actor_loop)] mopidy.zeroconf
okt 23 23:57:44 Desktop-Ubuntu mopidy[10401]:   Zeroconf service 'Mopidy HTTP server on Desktop-Ubuntu' (_http._tcp at []:6680): Unpublished
okt 23 23:57:44 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:57:44,328 [10401:HttpFrontend-12 (_actor_loop)] mopidy.zeroconf
okt 23 23:57:44 Desktop-Ubuntu mopidy[10401]:   Stopped HttpFrontend (urn:uuid:7e1cf762-1938-46a8-b282-d722d2fa8c73)
okt 23 23:57:44 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:57:44,328 [10401:HttpFrontend-12 (_actor_loop)] pykka
okt 23 23:57:44 Desktop-Ubuntu mopidy[10401]:   Unregistered HttpFrontend (urn:uuid:7e1cf762-1938-46a8-b282-d722d2fa8c73)
okt 23 23:57:44 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:57:44,328 [10401:HttpFrontend-12 (_actor_loop)] pykka
okt 23 23:57:44 Desktop-Ubuntu mopidy[10401]:   Stopping 1 instance(s) of HttpFrontend
okt 23 23:57:44 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:57:44,327 [10401:MainThread] mopidy.internal.process
okt 23 23:57:44 Desktop-Ubuntu mopidy[10401]:   Stopping Iris
okt 23 23:57:44 Desktop-Ubuntu mopidy[10401]: INFO     2022-10-23 23:57:44,327 [10401:IrisFrontend-10 (_actor_loop)] mopidy_iris.core
okt 23 23:57:44 Desktop-Ubuntu mopidy[10401]:   Stopped IrisFrontend (urn:uuid:b346e14b-ec68-428f-94b0-1fe5ccfcb021)
okt 23 23:57:44 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:57:44,327 [10401:IrisFrontend-10 (_actor_loop)] pykka
okt 23 23:57:44 Desktop-Ubuntu mopidy[10401]:   Unregistered IrisFrontend (urn:uuid:b346e14b-ec68-428f-94b0-1fe5ccfcb021)
okt 23 23:57:44 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:57:44,327 [10401:IrisFrontend-10 (_actor_loop)] pykka
okt 23 23:57:44 Desktop-Ubuntu mopidy[10401]:   Stopping 1 instance(s) of IrisFrontend
okt 23 23:57:44 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:57:44,327 [10401:MainThread] mopidy.internal.process
okt 23 23:57:44 Desktop-Ubuntu mopidy[10401]:   Stopped YouTubeCoreListener (urn:uuid:5616cf0e-317d-4519-bd59-363de81a1ab5)
okt 23 23:57:44 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:57:44,327 [10401:YouTubeCoreListener-9 (_actor_loop)] pykka
okt 23 23:57:44 Desktop-Ubuntu mopidy[10401]:   Unregistered YouTubeCoreListener (urn:uuid:5616cf0e-317d-4519-bd59-363de81a1ab5)
okt 23 23:57:44 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:57:44,327 [10401:YouTubeCoreListener-9 (_actor_loop)] pykka
okt 23 23:57:44 Desktop-Ubuntu mopidy[10401]:   Stopping 1 instance(s) of YouTubeCoreListener
okt 23 23:57:44 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:57:44,326 [10401:MainThread] mopidy.internal.process
okt 23 23:57:44 Desktop-Ubuntu mopidy[10401]:   Stopped YouTubeAutoplayer (urn:uuid:89ffdbe6-42d5-42d4-90bc-ddf8e3085c31)
okt 23 23:57:44 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:57:44,326 [10401:YouTubeAutoplayer-8 (_actor_loop)] pykka
okt 23 23:57:44 Desktop-Ubuntu mopidy[10401]:   Unregistered YouTubeAutoplayer (urn:uuid:89ffdbe6-42d5-42d4-90bc-ddf8e3085c31)
okt 23 23:57:44 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:57:44,326 [10401:YouTubeAutoplayer-8 (_actor_loop)] pykka
okt 23 23:57:44 Desktop-Ubuntu mopidy[10401]:   Stopping 1 instance(s) of YouTubeAutoplayer
okt 23 23:57:44 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:57:44,326 [10401:MainThread] mopidy.internal.process
okt 23 23:57:44 Desktop-Ubuntu mopidy[10401]:   Stopping Mopidy frontends
okt 23 23:57:44 Desktop-Ubuntu mopidy[10401]: INFO     2022-10-23 23:57:44,326 [10401:MainThread] mopidy.commands
okt 23 23:57:44 Desktop-Ubuntu mopidy[10401]:   GLib mainloop got SIGTERM. Exiting...
okt 23 23:57:44 Desktop-Ubuntu mopidy[10401]: INFO     2022-10-23 23:57:44,325 [10401:MainThread] mopidy.commands
okt 23 23:57:44 Desktop-Ubuntu systemd[1]: Stopping Mopidy music server...
okt 23 23:57:09 Desktop-Ubuntu mopidy[10401]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 56, "result": []}'
okt 23 23:57:09 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:57:09,353 [10401:HttpServer] mopidy.http.handlers
okt 23 23:57:09 Desktop-Ubuntu mopidy[10401]:   Error browsing local:directory?type=track: no such table: track
okt 23 23:57:09 Desktop-Ubuntu mopidy[10401]: ERROR    2022-10-23 23:57:09,353 [10401:LocalBackend-3 (_actor_loop)] mopidy_local.library
okt 23 23:57:09 Desktop-Ubuntu mopidy[10401]:     
okt 23 23:57:09 Desktop-Ubuntu mopidy[10401]:      ORDER BY type, name COLLATE NOCASE
okt 23 23:57:09 Desktop-Ubuntu mopidy[10401]:      WHERE 1
okt 23 23:57:09 Desktop-Ubuntu mopidy[10401]:       FROM track
okt 23 23:57:09 Desktop-Ubuntu mopidy[10401]:     SELECT 'track' AS type, uri AS uri, name AS name
okt 23 23:57:09 Desktop-Ubuntu mopidy[10401]:   SQLite browse query []:
okt 23 23:57:09 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:57:09,352 [10401:LocalBackend-3 (_actor_loop)] mopidy_local.schema
okt 23 23:57:09 Desktop-Ubuntu mopidy[10401]:   Received WebSocket message from 127.0.0.1: '{"method":"core.library.browse","params":{"uri":"local:directory?type=track"},"jsonrpc":"2.0","id":56}'
okt 23 23:57:09 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:57:09,351 [10401:HttpServer] mopidy.http.handlers
okt 23 23:57:09 Desktop-Ubuntu mopidy[10401]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 55, "result": {"local:directory?type=track": []}}'
okt 23 23:57:09 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:57:09,285 [10401:HttpServer] mopidy.http.handlers
okt 23 23:57:09 Desktop-Ubuntu mopidy[10401]:   Lookup error for local:directory?type=track: Invalid lookup URI
okt 23 23:57:09 Desktop-Ubuntu mopidy[10401]: ERROR    2022-10-23 23:57:09,284 [10401:LocalBackend-3 (_actor_loop)] mopidy_local.library
okt 23 23:57:09 Desktop-Ubuntu mopidy[10401]:   Received WebSocket message from 127.0.0.1: '{"method":"core.library.lookup","params":{"uris":["local:directory?type=track"]},"jsonrpc":"2.0","id":55}'
okt 23 23:57:09 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:57:09,284 [10401:HttpServer] mopidy.http.handlers
okt 23 23:57:04 Desktop-Ubuntu mopidy[10401]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 54, "result": [{"__model__": "Ref", "uri": "local:directory?type=album", "name": "Albums", "type": "directory"}, {"__model__": "Ref", "uri": "local:directory?type=artist", "name": "Artists", "type": "directory"}, {"__model__": "Ref", "uri": "local:directory?type=artist&role=composer", "name": "Composers", "type": "directory"}, {"__model__": "Ref", "uri": "local:directory?type=genre", "name": "Genres", "type": "directory"}, {"__model__": "Ref", "uri": "local:directory?type=artist&role=performer", "name": "Performers", "type": "directory"}, {"__model__": "Ref", "uri": "local:directory?type=date&format=%25Y", "name": "Release Years", "type": "directory"}, {"__model__": "Ref", "uri": "local:directory?type=track", "name": "Tracks", "type": "directory"}, {"__model__": "Ref", "uri": "local:directory?max-age=604800", "name": "Last Week\'s Updates", "type": "directory"}, {"__model__": "Ref", "uri": "local:directory?max-age=2592000", "name": "Last Month\'s Updates", "type": "directory"}]}'
okt 23 23:57:04 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:57:04,949 [10401:HttpServer] mopidy.http.handlers
okt 23 23:57:04 Desktop-Ubuntu mopidy[10401]:   Received WebSocket message from 127.0.0.1: '{"method":"core.library.browse","params":{"uri":"local:directory"},"jsonrpc":"2.0","id":54}'
okt 23 23:57:04 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:57:04,948 [10401:HttpServer] mopidy.http.handlers
okt 23 23:57:04 Desktop-Ubuntu mopidy[10401]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 53, "result": {"local:directory": []}}'
okt 23 23:57:04 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:57:04,888 [10401:HttpServer] mopidy.http.handlers
okt 23 23:57:04 Desktop-Ubuntu mopidy[10401]:   Lookup error for local:directory: Invalid lookup URI
okt 23 23:57:04 Desktop-Ubuntu mopidy[10401]: ERROR    2022-10-23 23:57:04,886 [10401:LocalBackend-3 (_actor_loop)] mopidy_local.library
okt 23 23:57:04 Desktop-Ubuntu mopidy[10401]:   Received WebSocket message from 127.0.0.1: '{"method":"core.library.lookup","params":{"uris":["local:directory"]},"jsonrpc":"2.0","id":53}'
okt 23 23:57:04 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:57:04,885 [10401:HttpServer] mopidy.http.handlers
okt 23 23:57:04 Desktop-Ubuntu mopidy[10401]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 52, "result": [{"__model__": "Ref", "uri": "file:///var/lib/mopidy", "name": "Files", "type": "directory"}, {"__model__": "Ref", "uri": "local:directory", "name": "Local media", "type": "directory"}]}'
okt 23 23:57:04 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:57:04,254 [10401:HttpServer] mopidy.http.handlers
okt 23 23:57:04 Desktop-Ubuntu mopidy[10401]:   Received WebSocket message from 127.0.0.1: '{"method":"core.library.browse","params":{"uri":null},"jsonrpc":"2.0","id":52}'
okt 23 23:57:04 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:57:04,253 [10401:HttpServer] mopidy.http.handlers
okt 23 23:56:43 Desktop-Ubuntu mopidy[10401]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 51, "result": [{"__model__": "Ref", "uri": "file:///var/lib/mopidy/http", "name": "http", "type": "directory"}, {"__model__": "Ref", "uri": "file:///var/lib/mopidy/iris", "name": "iris", "type": "directory"}, {"__model__": "Ref", "uri": "file:///var/lib/mopidy/local", "name": "local", "type": "directory"}, {"__model__": "Ref", "uri": "file:///var/lib/mopidy/m3u", "name": "m3u", "type": "directory"}]}'
okt 23 23:56:43 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:43,783 [10401:HttpServer] mopidy.http.handlers
okt 23 23:56:43 Desktop-Ubuntu mopidy[10401]:   Browsing files at: file:///var/lib/mopidy
okt 23 23:56:43 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:43,780 [10401:FileBackend-4 (_actor_loop)] mopidy.file.library
okt 23 23:56:43 Desktop-Ubuntu mopidy[10401]:   Received WebSocket message from 127.0.0.1: '{"method":"core.library.browse","params":{"uri":"file:///var/lib/mopidy"},"jsonrpc":"2.0","id":51}'
okt 23 23:56:43 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:43,779 [10401:HttpServer] mopidy.http.handlers
okt 23 23:56:43 Desktop-Ubuntu mopidy[10401]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 50, "result": {"file:///var/lib/mopidy": [{"__model__": "Track", "uri": "file:///var/lib/mopidy", "name": "mopidy"}]}}'
okt 23 23:56:43 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:43,727 [10401:HttpServer] mopidy.http.handlers
okt 23 23:56:43 Desktop-Ubuntu mopidy[10401]:   Failed looking up file:///var/lib/mopidy: gst-resource-error-quark: "/var/lib/mopidy" is a directory. (5)
okt 23 23:56:43 Desktop-Ubuntu mopidy[10401]: WARNING  2022-10-23 23:56:43,726 [10401:FileBackend-4 (_actor_loop)] mopidy.file.library
okt 23 23:56:43 Desktop-Ubuntu mopidy[10401]:   element filesrc9: GstMessageError, gerror=(GError)NULL, debug=(string)"../plugins/elements/gstf...
okt 23 23:56:43 Desktop-Ubuntu mopidy[10401]: TRACE    2022-10-23 23:56:43,725 [10401:FileBackend-4 (_actor_loop)] mopidy.audio.scan
okt 23 23:56:43 Desktop-Ubuntu mopidy[10401]:   Looking up file URI: file:///var/lib/mopidy
okt 23 23:56:43 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:43,724 [10401:FileBackend-4 (_actor_loop)] mopidy.file.library
okt 23 23:56:43 Desktop-Ubuntu mopidy[10401]:   Received WebSocket message from 127.0.0.1: '{"method":"core.library.lookup","params":{"uris":["file:///var/lib/mopidy"]},"jsonrpc":"2.0","id":50}'
okt 23 23:56:43 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:43,724 [10401:HttpServer] mopidy.http.handlers
okt 23 23:56:42 Desktop-Ubuntu mopidy[10401]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 49, "result": {"file:///var/lib/mopidy/http/cookie_secret": [{"__model__": "Track", "uri": "file:///var/lib/mopidy/http/cookie_secret", "name": "cookie_secret"}]}}'
okt 23 23:56:42 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:42,601 [10401:HttpServer] mopidy.http.handlers
okt 23 23:56:42 Desktop-Ubuntu mopidy[10401]:   Failed looking up file:///var/lib/mopidy/http/cookie_secret: gst-stream-error-quark: Could not determine type of stream. (4)
okt 23 23:56:42 Desktop-Ubuntu mopidy[10401]: WARNING  2022-10-23 23:56:42,601 [10401:FileBackend-4 (_actor_loop)] mopidy.file.library
okt 23 23:56:42 Desktop-Ubuntu mopidy[10401]:   element typefind: GstMessageError, gerror=(GError)NULL, debug=(string)"../plugins/elements/gstt...
okt 23 23:56:42 Desktop-Ubuntu mopidy[10401]: TRACE    2022-10-23 23:56:42,600 [10401:FileBackend-4 (_actor_loop)] mopidy.audio.scan
okt 23 23:56:42 Desktop-Ubuntu mopidy[10401]:   Looking up file URI: file:///var/lib/mopidy/http/cookie_secret
okt 23 23:56:42 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:42,595 [10401:FileBackend-4 (_actor_loop)] mopidy.file.library
okt 23 23:56:42 Desktop-Ubuntu mopidy[10401]:   Received WebSocket message from 127.0.0.1: '{"method":"core.library.lookup","params":{"uris":["file:///var/lib/mopidy/http/cookie_secret"]},"jsonrpc":"2.0","id":49}'
okt 23 23:56:42 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:42,594 [10401:HttpServer] mopidy.http.handlers
okt 23 23:56:42 Desktop-Ubuntu mopidy[10401]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 48, "result": [{"__model__": "Ref", "uri": "file:///var/lib/mopidy/http/cookie_secret", "name": "cookie_secret", "type": "track"}]}'
okt 23 23:56:42 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:42,500 [10401:HttpServer] mopidy.http.handlers
okt 23 23:56:42 Desktop-Ubuntu mopidy[10401]:   Browsing files at: file:///var/lib/mopidy/http
okt 23 23:56:42 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:42,499 [10401:FileBackend-4 (_actor_loop)] mopidy.file.library
okt 23 23:56:42 Desktop-Ubuntu mopidy[10401]:   Received WebSocket message from 127.0.0.1: '{"method":"core.library.browse","params":{"uri":"file:///var/lib/mopidy/http"},"jsonrpc":"2.0","id":48}'
okt 23 23:56:42 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:42,498 [10401:HttpServer] mopidy.http.handlers
okt 23 23:56:42 Desktop-Ubuntu mopidy[10401]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 47, "result": {"file:///var/lib/mopidy/http": [{"__model__": "Track", "uri": "file:///var/lib/mopidy/http", "name": "http"}]}}'
okt 23 23:56:42 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:42,445 [10401:HttpServer] mopidy.http.handlers
okt 23 23:56:42 Desktop-Ubuntu mopidy[10401]:   Failed looking up file:///var/lib/mopidy/http: gst-resource-error-quark: "/var/lib/mopidy/http" is a directory. (5)
okt 23 23:56:42 Desktop-Ubuntu mopidy[10401]: WARNING  2022-10-23 23:56:42,445 [10401:FileBackend-4 (_actor_loop)] mopidy.file.library
okt 23 23:56:42 Desktop-Ubuntu mopidy[10401]:   element filesrc7: GstMessageError, gerror=(GError)NULL, debug=(string)"../plugins/elements/gstf...
okt 23 23:56:42 Desktop-Ubuntu mopidy[10401]: TRACE    2022-10-23 23:56:42,444 [10401:FileBackend-4 (_actor_loop)] mopidy.audio.scan
okt 23 23:56:42 Desktop-Ubuntu mopidy[10401]:   Looking up file URI: file:///var/lib/mopidy/http
okt 23 23:56:42 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:42,443 [10401:FileBackend-4 (_actor_loop)] mopidy.file.library
okt 23 23:56:42 Desktop-Ubuntu mopidy[10401]:   Received WebSocket message from 127.0.0.1: '{"method":"core.library.lookup","params":{"uris":["file:///var/lib/mopidy/http"]},"jsonrpc":"2.0","id":47}'
okt 23 23:56:42 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:42,442 [10401:HttpServer] mopidy.http.handlers
okt 23 23:56:40 Desktop-Ubuntu mopidy[10401]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 46, "result": [{"__model__": "Ref", "uri": "file:///var/lib/mopidy/http", "name": "http", "type": "directory"}, {"__model__": "Ref", "uri": "file:///var/lib/mopidy/iris", "name": "iris", "type": "directory"}, {"__model__": "Ref", "uri": "file:///var/lib/mopidy/local", "name": "local", "type": "directory"}, {"__model__": "Ref", "uri": "file:///var/lib/mopidy/m3u", "name": "m3u", "type": "directory"}]}'
okt 23 23:56:40 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:40,762 [10401:HttpServer] mopidy.http.handlers
okt 23 23:56:40 Desktop-Ubuntu mopidy[10401]:   Browsing files at: file:///var/lib/mopidy
okt 23 23:56:40 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:40,759 [10401:FileBackend-4 (_actor_loop)] mopidy.file.library
okt 23 23:56:40 Desktop-Ubuntu mopidy[10401]:   Received WebSocket message from 127.0.0.1: '{"method":"core.library.browse","params":{"uri":"file:///var/lib/mopidy"},"jsonrpc":"2.0","id":46}'
okt 23 23:56:40 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:40,759 [10401:HttpServer] mopidy.http.handlers
okt 23 23:56:40 Desktop-Ubuntu mopidy[10401]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 45, "result": {"file:///var/lib/mopidy": [{"__model__": "Track", "uri": "file:///var/lib/mopidy", "name": "mopidy"}]}}'
okt 23 23:56:40 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:40,710 [10401:HttpServer] mopidy.http.handlers
okt 23 23:56:40 Desktop-Ubuntu mopidy[10401]:   Failed looking up file:///var/lib/mopidy: gst-resource-error-quark: "/var/lib/mopidy" is a directory. (5)
okt 23 23:56:40 Desktop-Ubuntu mopidy[10401]: WARNING  2022-10-23 23:56:40,709 [10401:FileBackend-4 (_actor_loop)] mopidy.file.library
okt 23 23:56:40 Desktop-Ubuntu mopidy[10401]:   element filesrc6: GstMessageError, gerror=(GError)NULL, debug=(string)"../plugins/elements/gstf...
okt 23 23:56:40 Desktop-Ubuntu mopidy[10401]: TRACE    2022-10-23 23:56:40,709 [10401:FileBackend-4 (_actor_loop)] mopidy.audio.scan
okt 23 23:56:40 Desktop-Ubuntu mopidy[10401]:   Looking up file URI: file:///var/lib/mopidy
okt 23 23:56:40 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:40,707 [10401:FileBackend-4 (_actor_loop)] mopidy.file.library
okt 23 23:56:40 Desktop-Ubuntu mopidy[10401]:   Received WebSocket message from 127.0.0.1: '{"method":"core.library.lookup","params":{"uris":["file:///var/lib/mopidy"]},"jsonrpc":"2.0","id":45}'
okt 23 23:56:40 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:40,706 [10401:HttpServer] mopidy.http.handlers
okt 23 23:56:39 Desktop-Ubuntu mopidy[10401]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 44, "result": [{"__model__": "Ref", "uri": "file:///var/lib/mopidy", "name": "Files", "type": "directory"}, {"__model__": "Ref", "uri": "local:directory", "name": "Local media", "type": "directory"}]}'
okt 23 23:56:39 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:39,863 [10401:HttpServer] mopidy.http.handlers
okt 23 23:56:39 Desktop-Ubuntu mopidy[10401]:   Received WebSocket message from 127.0.0.1: '{"method":"core.library.browse","params":{"uri":null},"jsonrpc":"2.0","id":44}'
okt 23 23:56:39 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:39,861 [10401:HttpServer] mopidy.http.handlers
okt 23 23:56:37 Desktop-Ubuntu mopidy[10401]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 43, "result": {"file:///var/lib/mopidy/local/library.db": [{"__model__": "Track", "uri": "file:///var/lib/mopidy/local/library.db", "name": "library.db"}]}}'
okt 23 23:56:37 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:37,766 [10401:HttpServer] mopidy.http.handlers
okt 23 23:56:37 Desktop-Ubuntu mopidy[10401]:   Failed looking up file:///var/lib/mopidy/local/library.db: gst-stream-error-quark: Stream contains no data. (4)
okt 23 23:56:37 Desktop-Ubuntu mopidy[10401]: WARNING  2022-10-23 23:56:37,766 [10401:FileBackend-4 (_actor_loop)] mopidy.file.library
okt 23 23:56:37 Desktop-Ubuntu mopidy[10401]:   element typefind: GstMessageError, gerror=(GError)NULL, debug=(string)"../plugins/elements/gstt...
okt 23 23:56:37 Desktop-Ubuntu mopidy[10401]: TRACE    2022-10-23 23:56:37,765 [10401:FileBackend-4 (_actor_loop)] mopidy.audio.scan
okt 23 23:56:37 Desktop-Ubuntu mopidy[10401]:   Looking up file URI: file:///var/lib/mopidy/local/library.db
okt 23 23:56:37 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:37,764 [10401:FileBackend-4 (_actor_loop)] mopidy.file.library
okt 23 23:56:37 Desktop-Ubuntu mopidy[10401]:   Received WebSocket message from 127.0.0.1: '{"method":"core.library.lookup","params":{"uris":["file:///var/lib/mopidy/local/library.db"]},"jsonrpc":"2.0","id":43}'
okt 23 23:56:37 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:37,763 [10401:HttpServer] mopidy.http.handlers
okt 23 23:56:37 Desktop-Ubuntu mopidy[10401]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 42, "result": [{"__model__": "Ref", "uri": "file:///var/lib/mopidy/local/images", "name": "images", "type": "directory"}, {"__model__": "Ref", "uri": "file:///var/lib/mopidy/local/library.db", "name": "library.db", "type": "track"}]}'
okt 23 23:56:37 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:37,668 [10401:HttpServer] mopidy.http.handlers
okt 23 23:56:37 Desktop-Ubuntu mopidy[10401]:   Browsing files at: file:///var/lib/mopidy/local
okt 23 23:56:37 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:37,667 [10401:FileBackend-4 (_actor_loop)] mopidy.file.library
okt 23 23:56:37 Desktop-Ubuntu mopidy[10401]:   Received WebSocket message from 127.0.0.1: '{"method":"core.library.browse","params":{"uri":"file:///var/lib/mopidy/local"},"jsonrpc":"2.0","id":42}'
okt 23 23:56:37 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:37,666 [10401:HttpServer] mopidy.http.handlers
okt 23 23:56:37 Desktop-Ubuntu mopidy[10401]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 41, "result": {"file:///var/lib/mopidy/local": [{"__model__": "Track", "uri": "file:///var/lib/mopidy/local", "name": "local"}]}}'
okt 23 23:56:37 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:37,607 [10401:HttpServer] mopidy.http.handlers
okt 23 23:56:37 Desktop-Ubuntu mopidy[10401]:   Failed looking up file:///var/lib/mopidy/local: gst-resource-error-quark: "/var/lib/mopidy/local" is a directory. (5)
okt 23 23:56:37 Desktop-Ubuntu mopidy[10401]: WARNING  2022-10-23 23:56:37,606 [10401:FileBackend-4 (_actor_loop)] mopidy.file.library
okt 23 23:56:37 Desktop-Ubuntu mopidy[10401]:   element filesrc4: GstMessageError, gerror=(GError)NULL, debug=(string)"../plugins/elements/gstf...
okt 23 23:56:37 Desktop-Ubuntu mopidy[10401]: TRACE    2022-10-23 23:56:37,606 [10401:FileBackend-4 (_actor_loop)] mopidy.audio.scan
okt 23 23:56:37 Desktop-Ubuntu mopidy[10401]:   Looking up file URI: file:///var/lib/mopidy/local
okt 23 23:56:37 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:37,605 [10401:FileBackend-4 (_actor_loop)] mopidy.file.library
okt 23 23:56:37 Desktop-Ubuntu mopidy[10401]:   Received WebSocket message from 127.0.0.1: '{"method":"core.library.lookup","params":{"uris":["file:///var/lib/mopidy/local"]},"jsonrpc":"2.0","id":41}'
okt 23 23:56:37 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:37,604 [10401:HttpServer] mopidy.http.handlers
okt 23 23:56:36 Desktop-Ubuntu mopidy[10401]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 40, "result": []}'
okt 23 23:56:36 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:36,367 [10401:HttpServer] mopidy.http.handlers
okt 23 23:56:36 Desktop-Ubuntu mopidy[10401]:   Browsing files at: file:///var/lib/mopidy/local/images
okt 23 23:56:36 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:36,366 [10401:FileBackend-4 (_actor_loop)] mopidy.file.library
okt 23 23:56:36 Desktop-Ubuntu mopidy[10401]:   Received WebSocket message from 127.0.0.1: '{"method":"core.library.browse","params":{"uri":"file:///var/lib/mopidy/local/images"},"jsonrpc":"2.0","id":40}'
okt 23 23:56:36 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:36,365 [10401:HttpServer] mopidy.http.handlers
okt 23 23:56:36 Desktop-Ubuntu mopidy[10401]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 39, "result": {"file:///var/lib/mopidy/local/images": [{"__model__": "Track", "uri": "file:///var/lib/mopidy/local/images", "name": "images"}]}}'
okt 23 23:56:36 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:36,310 [10401:HttpServer] mopidy.http.handlers
okt 23 23:56:36 Desktop-Ubuntu mopidy[10401]:   Failed looking up file:///var/lib/mopidy/local/images: gst-resource-error-quark: "/var/lib/mopidy/local/images" is a directory. (5)
okt 23 23:56:36 Desktop-Ubuntu mopidy[10401]: WARNING  2022-10-23 23:56:36,309 [10401:FileBackend-4 (_actor_loop)] mopidy.file.library
okt 23 23:56:36 Desktop-Ubuntu mopidy[10401]:   element filesrc3: GstMessageError, gerror=(GError)NULL, debug=(string)"../plugins/elements/gstf...
okt 23 23:56:36 Desktop-Ubuntu mopidy[10401]: TRACE    2022-10-23 23:56:36,309 [10401:FileBackend-4 (_actor_loop)] mopidy.audio.scan
okt 23 23:56:36 Desktop-Ubuntu mopidy[10401]:   Looking up file URI: file:///var/lib/mopidy/local/images
okt 23 23:56:36 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:36,308 [10401:FileBackend-4 (_actor_loop)] mopidy.file.library
okt 23 23:56:36 Desktop-Ubuntu mopidy[10401]:   Received WebSocket message from 127.0.0.1: '{"method":"core.library.lookup","params":{"uris":["file:///var/lib/mopidy/local/images"]},"jsonrpc":"2.0","id":39}'
okt 23 23:56:36 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:36,307 [10401:HttpServer] mopidy.http.handlers
okt 23 23:56:34 Desktop-Ubuntu mopidy[10401]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 38, "result": {"file:///var/lib/mopidy/local/library.db": [{"__model__": "Track", "uri": "file:///var/lib/mopidy/local/library.db", "name": "library.db"}]}}'
okt 23 23:56:34 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:34,233 [10401:HttpServer] mopidy.http.handlers
okt 23 23:56:34 Desktop-Ubuntu mopidy[10401]:   Failed looking up file:///var/lib/mopidy/local/library.db: gst-stream-error-quark: Stream contains no data. (4)
okt 23 23:56:34 Desktop-Ubuntu mopidy[10401]: WARNING  2022-10-23 23:56:34,232 [10401:FileBackend-4 (_actor_loop)] mopidy.file.library
okt 23 23:56:34 Desktop-Ubuntu mopidy[10401]:   element typefind: GstMessageError, gerror=(GError)NULL, debug=(string)"../plugins/elements/gstt...
okt 23 23:56:34 Desktop-Ubuntu mopidy[10401]: TRACE    2022-10-23 23:56:34,231 [10401:FileBackend-4 (_actor_loop)] mopidy.audio.scan
okt 23 23:56:34 Desktop-Ubuntu mopidy[10401]:   Looking up file URI: file:///var/lib/mopidy/local/library.db
okt 23 23:56:34 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:34,230 [10401:FileBackend-4 (_actor_loop)] mopidy.file.library
okt 23 23:56:34 Desktop-Ubuntu mopidy[10401]:   Received WebSocket message from 127.0.0.1: '{"method":"core.library.lookup","params":{"uris":["file:///var/lib/mopidy/local/library.db"]},"jsonrpc":"2.0","id":38}'
okt 23 23:56:34 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:34,229 [10401:HttpServer] mopidy.http.handlers
okt 23 23:56:34 Desktop-Ubuntu mopidy[10401]:   200 GET /iris/library/browse/local/null (127.0.0.1) 0.70ms
okt 23 23:56:34 Desktop-Ubuntu mopidy[10401]: INFO     2022-10-23 23:56:34,225 [10401:HttpServer] tornado.access
okt 23 23:56:34 Desktop-Ubuntu mopidy[10401]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 37, "result": [{"__model__": "Ref", "uri": "file:///var/lib/mopidy/local/images", "name": "images", "type": "directory"}, {"__model__": "Ref", "uri": "file:///var/lib/mopidy/local/library.db", "name": "library.db", "type": "track"}]}'
okt 23 23:56:34 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:34,127 [10401:HttpServer] mopidy.http.handlers
okt 23 23:56:34 Desktop-Ubuntu mopidy[10401]:   Browsing files at: file:///var/lib/mopidy/local
okt 23 23:56:34 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:34,125 [10401:FileBackend-4 (_actor_loop)] mopidy.file.library
okt 23 23:56:34 Desktop-Ubuntu mopidy[10401]:   Received WebSocket message from 127.0.0.1: '{"method":"core.library.browse","params":{"uri":"file:///var/lib/mopidy/local"},"jsonrpc":"2.0","id":37}'
okt 23 23:56:34 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:34,125 [10401:HttpServer] mopidy.http.handlers
okt 23 23:56:34 Desktop-Ubuntu mopidy[10401]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 36, "result": {"file:///var/lib/mopidy/local": [{"__model__": "Track", "uri": "file:///var/lib/mopidy/local", "name": "local"}]}}'
okt 23 23:56:34 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:34,068 [10401:HttpServer] mopidy.http.handlers
okt 23 23:56:34 Desktop-Ubuntu mopidy[10401]:   Failed looking up file:///var/lib/mopidy/local: gst-resource-error-quark: "/var/lib/mopidy/local" is a directory. (5)
okt 23 23:56:34 Desktop-Ubuntu mopidy[10401]: WARNING  2022-10-23 23:56:34,068 [10401:FileBackend-4 (_actor_loop)] mopidy.file.library
okt 23 23:56:34 Desktop-Ubuntu mopidy[10401]:   element filesrc1: GstMessageError, gerror=(GError)NULL, debug=(string)"../plugins/elements/gstf...
okt 23 23:56:34 Desktop-Ubuntu mopidy[10401]: TRACE    2022-10-23 23:56:34,068 [10401:FileBackend-4 (_actor_loop)] mopidy.audio.scan
okt 23 23:56:34 Desktop-Ubuntu mopidy[10401]:   Looking up file URI: file:///var/lib/mopidy/local
okt 23 23:56:34 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:34,066 [10401:FileBackend-4 (_actor_loop)] mopidy.file.library
okt 23 23:56:34 Desktop-Ubuntu mopidy[10401]:   Received WebSocket message from 127.0.0.1: '{"method":"core.library.lookup","params":{"uris":["file:///var/lib/mopidy/local"]},"jsonrpc":"2.0","id":36}'
okt 23 23:56:34 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:34,066 [10401:HttpServer] mopidy.http.handlers
okt 23 23:56:31 Desktop-Ubuntu mopidy[10401]:   304 GET /iris/library/browse/Files/null (127.0.0.1) 0.78ms
okt 23 23:56:31 Desktop-Ubuntu mopidy[10401]: INFO     2022-10-23 23:56:31,690 [10401:HttpServer] tornado.access
okt 23 23:56:31 Desktop-Ubuntu mopidy[10401]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 35, "result": [{"__model__": "Ref", "uri": "file:///var/lib/mopidy/http", "name": "http", "type": "directory"}, {"__model__": "Ref", "uri": "file:///var/lib/mopidy/iris", "name": "iris", "type": "directory"}, {"__model__": "Ref", "uri": "file:///var/lib/mopidy/local", "name": "local", "type": "directory"}, {"__model__": "Ref", "uri": "file:///var/lib/mopidy/m3u", "name": "m3u", "type": "directory"}]}'
okt 23 23:56:31 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:31,586 [10401:HttpServer] mopidy.http.handlers
okt 23 23:56:31 Desktop-Ubuntu mopidy[10401]:   Browsing files at: file:///var/lib/mopidy
okt 23 23:56:31 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:31,584 [10401:FileBackend-4 (_actor_loop)] mopidy.file.library
okt 23 23:56:31 Desktop-Ubuntu mopidy[10401]:   Received WebSocket message from 127.0.0.1: '{"method":"core.library.browse","params":{"uri":"file:///var/lib/mopidy"},"jsonrpc":"2.0","id":35}'
okt 23 23:56:31 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:31,583 [10401:HttpServer] mopidy.http.handlers
okt 23 23:56:31 Desktop-Ubuntu mopidy[10401]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 34, "result": {"file:///var/lib/mopidy": [{"__model__": "Track", "uri": "file:///var/lib/mopidy", "name": "mopidy"}]}}'
okt 23 23:56:31 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:31,531 [10401:HttpServer] mopidy.http.handlers
okt 23 23:56:31 Desktop-Ubuntu mopidy[10401]:   Failed looking up file:///var/lib/mopidy: gst-resource-error-quark: "/var/lib/mopidy" is a directory. (5)
okt 23 23:56:31 Desktop-Ubuntu mopidy[10401]: WARNING  2022-10-23 23:56:31,530 [10401:FileBackend-4 (_actor_loop)] mopidy.file.library
okt 23 23:56:31 Desktop-Ubuntu mopidy[10401]:   element filesrc0: GstMessageError, gerror=(GError)NULL, debug=(string)"../plugins/elements/gstf...
okt 23 23:56:31 Desktop-Ubuntu mopidy[10401]: TRACE    2022-10-23 23:56:31,530 [10401:FileBackend-4 (_actor_loop)] mopidy.audio.scan
okt 23 23:56:31 Desktop-Ubuntu mopidy[10401]:   Looking up file URI: file:///var/lib/mopidy
okt 23 23:56:31 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:31,527 [10401:FileBackend-4 (_actor_loop)] mopidy.file.library
okt 23 23:56:31 Desktop-Ubuntu mopidy[10401]:   Received WebSocket message from 127.0.0.1: '{"method":"core.library.lookup","params":{"uris":["file:///var/lib/mopidy"]},"jsonrpc":"2.0","id":34}'
okt 23 23:56:31 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:31,526 [10401:HttpServer] mopidy.http.handlers
okt 23 23:56:30 Desktop-Ubuntu mopidy[10401]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 33, "result": [{"__model__": "Ref", "uri": "file:///var/lib/mopidy", "name": "Files", "type": "directory"}, {"__model__": "Ref", "uri": "local:directory", "name": "Local media", "type": "directory"}]}'
okt 23 23:56:30 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:30,794 [10401:HttpServer] mopidy.http.handlers
okt 23 23:56:30 Desktop-Ubuntu mopidy[10401]:   Received WebSocket message from 127.0.0.1: '{"method":"core.library.browse","params":{"uri":null},"jsonrpc":"2.0","id":33}'
okt 23 23:56:30 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:30,793 [10401:HttpServer] mopidy.http.handlers
okt 23 23:56:30 Desktop-Ubuntu mopidy[10401]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 32, "result": [{"__model__": "Ref", "uri": "local:directory?type=album", "name": "Albums", "type": "directory"}, {"__model__": "Ref", "uri": "local:directory?type=artist", "name": "Artists", "type": "directory"}, {"__model__": "Ref", "uri": "local:directory?type=artist&role=composer", "name": "Composers", "type": "directory"}, {"__model__": "Ref", "uri": "local:directory?type=genre", "name": "Genres", "type": "directory"}, {"__model__": "Ref", "uri": "local:directory?type=artist&role=performer", "name": "Performers", "type": "directory"}, {"__model__": "Ref", "uri": "local:directory?type=date&format=%25Y", "name": "Release Years", "type": "directory"}, {"__model__": "Ref", "uri": "local:directory?type=track", "name": "Tracks", "type": "directory"}, {"__model__": "Ref", "uri": "local:directory?max-age=604800", "name": "Last Week\'s Updates", "type": "directory"}, {"__model__": "Ref", "uri": "local:directory?max-age=2592000", "name": "Last Month\'s Updates", "type": "directory"}]}'
okt 23 23:56:30 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:30,263 [10401:HttpServer] mopidy.http.handlers
okt 23 23:56:30 Desktop-Ubuntu mopidy[10401]:   Received WebSocket message from 127.0.0.1: '{"method":"core.library.browse","params":{"uri":"local:directory"},"jsonrpc":"2.0","id":32}'
okt 23 23:56:30 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:30,262 [10401:HttpServer] mopidy.http.handlers
okt 23 23:56:30 Desktop-Ubuntu mopidy[10401]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 31, "result": {"local:directory": []}}'
okt 23 23:56:30 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:30,204 [10401:HttpServer] mopidy.http.handlers
okt 23 23:56:30 Desktop-Ubuntu mopidy[10401]:   Lookup error for local:directory: Invalid lookup URI
okt 23 23:56:30 Desktop-Ubuntu mopidy[10401]: ERROR    2022-10-23 23:56:30,203 [10401:LocalBackend-3 (_actor_loop)] mopidy_local.library
okt 23 23:56:30 Desktop-Ubuntu mopidy[10401]:   Received WebSocket message from 127.0.0.1: '{"method":"core.library.lookup","params":{"uris":["local:directory"]},"jsonrpc":"2.0","id":31}'
okt 23 23:56:30 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:30,202 [10401:HttpServer] mopidy.http.handlers
okt 23 23:56:29 Desktop-Ubuntu mopidy[10401]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 30, "result": []}'
okt 23 23:56:29 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:29,078 [10401:HttpServer] mopidy.http.handlers
okt 23 23:56:29 Desktop-Ubuntu mopidy[10401]:   Error browsing local:directory?max-age=2592000: no such table: track
okt 23 23:56:29 Desktop-Ubuntu mopidy[10401]: ERROR    2022-10-23 23:56:29,078 [10401:LocalBackend-3 (_actor_loop)] mopidy_local.library
okt 23 23:56:29 Desktop-Ubuntu mopidy[10401]:     
okt 23 23:56:29 Desktop-Ubuntu mopidy[10401]:      ORDER BY type, name COLLATE NOCASE
okt 23 23:56:29 Desktop-Ubuntu mopidy[10401]:      GROUP BY coalesce(album.uri, track.uri)
okt 23 23:56:29 Desktop-Ubuntu mopidy[10401]:      WHERE track.last_modified >= (strftime('%s', 'now') - ?) * 1000
okt 23 23:56:29 Desktop-Ubuntu mopidy[10401]:       FROM track LEFT OUTER JOIN album ON track.album = album.uri
okt 23 23:56:29 Desktop-Ubuntu mopidy[10401]:            coalesce(album.name, track.name) AS name
okt 23 23:56:29 Desktop-Ubuntu mopidy[10401]:            coalesce(album.uri, track.uri) AS uri,
okt 23 23:56:29 Desktop-Ubuntu mopidy[10401]:     SELECT CASE WHEN album.uri IS NULL THEN 'track' ELSE 'album' END AS type,
okt 23 23:56:29 Desktop-Ubuntu mopidy[10401]:   SQLite browse query ['2592000']:
okt 23 23:56:29 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:29,077 [10401:LocalBackend-3 (_actor_loop)] mopidy_local.schema
okt 23 23:56:29 Desktop-Ubuntu mopidy[10401]:   Received WebSocket message from 127.0.0.1: '{"method":"core.library.browse","params":{"uri":"local:directory?max-age=2592000"},"jsonrpc":"2.0","id":30}'
okt 23 23:56:29 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:29,077 [10401:HttpServer] mopidy.http.handlers
okt 23 23:56:29 Desktop-Ubuntu mopidy[10401]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 29, "result": {"local:directory?max-age=2592000": []}}'
okt 23 23:56:29 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:29,023 [10401:HttpServer] mopidy.http.handlers
okt 23 23:56:29 Desktop-Ubuntu mopidy[10401]:   Lookup error for local:directory?max-age=2592000: Invalid lookup URI
okt 23 23:56:29 Desktop-Ubuntu mopidy[10401]: ERROR    2022-10-23 23:56:29,023 [10401:LocalBackend-3 (_actor_loop)] mopidy_local.library
okt 23 23:56:29 Desktop-Ubuntu mopidy[10401]:   Received WebSocket message from 127.0.0.1: '{"method":"core.library.lookup","params":{"uris":["local:directory?max-age=2592000"]},"jsonrpc":"2.0","id":29}'
okt 23 23:56:29 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:29,023 [10401:HttpServer] mopidy.http.handlers
okt 23 23:56:27 Desktop-Ubuntu mopidy[10401]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 28, "result": [{"__model__": "Ref", "uri": "local:directory?type=album", "name": "Albums", "type": "directory"}, {"__model__": "Ref", "uri": "local:directory?type=artist", "name": "Artists", "type": "directory"}, {"__model__": "Ref", "uri": "local:directory?type=artist&role=composer", "name": "Composers", "type": "directory"}, {"__model__": "Ref", "uri": "local:directory?type=genre", "name": "Genres", "type": "directory"}, {"__model__": "Ref", "uri": "local:directory?type=artist&role=performer", "name": "Performers", "type": "directory"}, {"__model__": "Ref", "uri": "local:directory?type=date&format=%25Y", "name": "Release Years", "type": "directory"}, {"__model__": "Ref", "uri": "local:directory?type=track", "name": "Tracks", "type": "directory"}, {"__model__": "Ref", "uri": "local:directory?max-age=604800", "name": "Last Week\'s Updates", "type": "directory"}, {"__model__": "Ref", "uri": "local:directory?max-age=2592000", "name": "Last Month\'s Updates", "type": "directory"}]}'
okt 23 23:56:27 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:27,196 [10401:HttpServer] mopidy.http.handlers
okt 23 23:56:27 Desktop-Ubuntu mopidy[10401]:   Received WebSocket message from 127.0.0.1: '{"method":"core.library.browse","params":{"uri":"local:directory"},"jsonrpc":"2.0","id":28}'
okt 23 23:56:27 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:27,195 [10401:HttpServer] mopidy.http.handlers
okt 23 23:56:27 Desktop-Ubuntu mopidy[10401]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 27, "result": {"local:directory": []}}'
okt 23 23:56:27 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:27,141 [10401:HttpServer] mopidy.http.handlers
okt 23 23:56:27 Desktop-Ubuntu mopidy[10401]:   Lookup error for local:directory: Invalid lookup URI
okt 23 23:56:27 Desktop-Ubuntu mopidy[10401]: ERROR    2022-10-23 23:56:27,140 [10401:LocalBackend-3 (_actor_loop)] mopidy_local.library
okt 23 23:56:27 Desktop-Ubuntu mopidy[10401]:   Received WebSocket message from 127.0.0.1: '{"method":"core.library.lookup","params":{"uris":["local:directory"]},"jsonrpc":"2.0","id":27}'
okt 23 23:56:27 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:27,140 [10401:HttpServer] mopidy.http.handlers
okt 23 23:56:26 Desktop-Ubuntu mopidy[10401]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 26, "result": []}'
okt 23 23:56:26 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:26,258 [10401:HttpServer] mopidy.http.handlers
okt 23 23:56:26 Desktop-Ubuntu mopidy[10401]:   Error browsing local:directory?type=album: no such table: album
okt 23 23:56:26 Desktop-Ubuntu mopidy[10401]: ERROR    2022-10-23 23:56:26,258 [10401:LocalBackend-3 (_actor_loop)] mopidy_local.library
okt 23 23:56:26 Desktop-Ubuntu mopidy[10401]:     
okt 23 23:56:26 Desktop-Ubuntu mopidy[10401]:      ORDER BY type, name COLLATE NOCASE
okt 23 23:56:26 Desktop-Ubuntu mopidy[10401]:      WHERE 1
okt 23 23:56:26 Desktop-Ubuntu mopidy[10401]:       FROM album
okt 23 23:56:26 Desktop-Ubuntu mopidy[10401]:     SELECT 'album' AS type, uri AS uri, name AS name
okt 23 23:56:26 Desktop-Ubuntu mopidy[10401]:   SQLite browse query []:
okt 23 23:56:26 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:26,258 [10401:LocalBackend-3 (_actor_loop)] mopidy_local.schema
okt 23 23:56:26 Desktop-Ubuntu mopidy[10401]:   Received WebSocket message from 127.0.0.1: '{"method":"core.library.browse","params":{"uri":"local:directory?type=album"},"jsonrpc":"2.0","id":26}'
okt 23 23:56:26 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:26,257 [10401:HttpServer] mopidy.http.handlers
okt 23 23:56:26 Desktop-Ubuntu mopidy[10401]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 25, "result": {"local:directory?type=album": []}}'
okt 23 23:56:26 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:26,202 [10401:HttpServer] mopidy.http.handlers
okt 23 23:56:26 Desktop-Ubuntu mopidy[10401]:   Lookup error for local:directory?type=album: Invalid lookup URI
okt 23 23:56:26 Desktop-Ubuntu mopidy[10401]: ERROR    2022-10-23 23:56:26,202 [10401:LocalBackend-3 (_actor_loop)] mopidy_local.library
okt 23 23:56:26 Desktop-Ubuntu mopidy[10401]:   Received WebSocket message from 127.0.0.1: '{"method":"core.library.lookup","params":{"uris":["local:directory?type=album"]},"jsonrpc":"2.0","id":25}'
okt 23 23:56:26 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:26,201 [10401:HttpServer] mopidy.http.handlers
okt 23 23:56:25 Desktop-Ubuntu mopidy[10401]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 24, "result": [{"__model__": "Ref", "uri": "local:directory?type=album", "name": "Albums", "type": "directory"}, {"__model__": "Ref", "uri": "local:directory?type=artist", "name": "Artists", "type": "directory"}, {"__model__": "Ref", "uri": "local:directory?type=artist&role=composer", "name": "Composers", "type": "directory"}, {"__model__": "Ref", "uri": "local:directory?type=genre", "name": "Genres", "type": "directory"}, {"__model__": "Ref", "uri": "local:directory?type=artist&role=performer", "name": "Performers", "type": "directory"}, {"__model__": "Ref", "uri": "local:directory?type=date&format=%25Y", "name": "Release Years", "type": "directory"}, {"__model__": "Ref", "uri": "local:directory?type=track", "name": "Tracks", "type": "directory"}, {"__model__": "Ref", "uri": "local:directory?max-age=604800", "name": "Last Week\'s Updates", "type": "directory"}, {"__model__": "Ref", "uri": "local:directory?max-age=2592000", "name": "Last Month\'s Updates", "type": "directory"}]}'
okt 23 23:56:25 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:25,361 [10401:HttpServer] mopidy.http.handlers
okt 23 23:56:25 Desktop-Ubuntu mopidy[10401]:   Received WebSocket message from 127.0.0.1: '{"method":"core.library.browse","params":{"uri":"local:directory"},"jsonrpc":"2.0","id":24}'
okt 23 23:56:25 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:25,360 [10401:HttpServer] mopidy.http.handlers
okt 23 23:56:25 Desktop-Ubuntu mopidy[10401]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 23, "result": {"local:directory": []}}'
okt 23 23:56:25 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:25,305 [10401:HttpServer] mopidy.http.handlers
okt 23 23:56:25 Desktop-Ubuntu mopidy[10401]:   Lookup error for local:directory: Invalid lookup URI
okt 23 23:56:25 Desktop-Ubuntu mopidy[10401]: ERROR    2022-10-23 23:56:25,304 [10401:LocalBackend-3 (_actor_loop)] mopidy_local.library
okt 23 23:56:25 Desktop-Ubuntu mopidy[10401]:   Received WebSocket message from 127.0.0.1: '{"method":"core.library.lookup","params":{"uris":["local:directory"]},"jsonrpc":"2.0","id":23}'
okt 23 23:56:25 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:25,304 [10401:HttpServer] mopidy.http.handlers
okt 23 23:56:24 Desktop-Ubuntu mopidy[10401]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 22, "result": []}'
okt 23 23:56:24 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:24,173 [10401:HttpServer] mopidy.http.handlers
okt 23 23:56:24 Desktop-Ubuntu mopidy[10401]:   Error browsing local:directory?type=artist: no such table: artist
okt 23 23:56:24 Desktop-Ubuntu mopidy[10401]: ERROR    2022-10-23 23:56:24,172 [10401:LocalBackend-3 (_actor_loop)] mopidy_local.library
okt 23 23:56:24 Desktop-Ubuntu mopidy[10401]:     
okt 23 23:56:24 Desktop-Ubuntu mopidy[10401]:      ORDER BY type, name COLLATE NOCASE
okt 23 23:56:24 Desktop-Ubuntu mopidy[10401]:             )
okt 23 23:56:24 Desktop-Ubuntu mopidy[10401]:                 SELECT * FROM album WHERE album.artists = artist.uri
okt 23 23:56:24 Desktop-Ubuntu mopidy[10401]:             ) OR EXISTS (
okt 23 23:56:24 Desktop-Ubuntu mopidy[10401]:                 SELECT * FROM track WHERE track.artists = artist.uri
okt 23 23:56:24 Desktop-Ubuntu mopidy[10401]:      WHERE EXISTS (
okt 23 23:56:24 Desktop-Ubuntu mopidy[10401]:       FROM artist
okt 23 23:56:24 Desktop-Ubuntu mopidy[10401]:     SELECT 'artist' AS type, uri AS uri, name AS name
okt 23 23:56:24 Desktop-Ubuntu mopidy[10401]:   SQLite browse query []:
okt 23 23:56:24 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:24,172 [10401:LocalBackend-3 (_actor_loop)] mopidy_local.schema
okt 23 23:56:24 Desktop-Ubuntu mopidy[10401]:   Received WebSocket message from 127.0.0.1: '{"method":"core.library.browse","params":{"uri":"local:directory?type=artist"},"jsonrpc":"2.0","id":22}'
okt 23 23:56:24 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:24,172 [10401:HttpServer] mopidy.http.handlers
okt 23 23:56:24 Desktop-Ubuntu mopidy[10401]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 21, "result": {"local:directory?type=artist": []}}'
okt 23 23:56:24 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:24,111 [10401:HttpServer] mopidy.http.handlers
okt 23 23:56:24 Desktop-Ubuntu mopidy[10401]:   Lookup error for local:directory?type=artist: Invalid lookup URI
okt 23 23:56:24 Desktop-Ubuntu mopidy[10401]: ERROR    2022-10-23 23:56:24,111 [10401:LocalBackend-3 (_actor_loop)] mopidy_local.library
okt 23 23:56:24 Desktop-Ubuntu mopidy[10401]:   Received WebSocket message from 127.0.0.1: '{"method":"core.library.lookup","params":{"uris":["local:directory?type=artist"]},"jsonrpc":"2.0","id":21}'
okt 23 23:56:24 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:24,110 [10401:HttpServer] mopidy.http.handlers
okt 23 23:56:23 Desktop-Ubuntu mopidy[10401]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 20, "result": [{"__model__": "Ref", "uri": "local:directory?type=album", "name": "Albums", "type": "directory"}, {"__model__": "Ref", "uri": "local:directory?type=artist", "name": "Artists", "type": "directory"}, {"__model__": "Ref", "uri": "local:directory?type=artist&role=composer", "name": "Composers", "type": "directory"}, {"__model__": "Ref", "uri": "local:directory?type=genre", "name": "Genres", "type": "directory"}, {"__model__": "Ref", "uri": "local:directory?type=artist&role=performer", "name": "Performers", "type": "directory"}, {"__model__": "Ref", "uri": "local:directory?type=date&format=%25Y", "name": "Release Years", "type": "directory"}, {"__model__": "Ref", "uri": "local:directory?type=track", "name": "Tracks", "type": "directory"}, {"__model__": "Ref", "uri": "local:directory?max-age=604800", "name": "Last Week\'s Updates", "type": "directory"}, {"__model__": "Ref", "uri": "local:directory?max-age=2592000", "name": "Last Month\'s Updates", "type": "directory"}]}'
okt 23 23:56:23 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:23,095 [10401:HttpServer] mopidy.http.handlers
okt 23 23:56:23 Desktop-Ubuntu mopidy[10401]:   Received WebSocket message from 127.0.0.1: '{"method":"core.library.browse","params":{"uri":"local:directory"},"jsonrpc":"2.0","id":20}'
okt 23 23:56:23 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:23,094 [10401:HttpServer] mopidy.http.handlers
okt 23 23:56:23 Desktop-Ubuntu mopidy[10401]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 19, "result": {"local:directory": []}}'
okt 23 23:56:23 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:23,038 [10401:HttpServer] mopidy.http.handlers
okt 23 23:56:23 Desktop-Ubuntu mopidy[10401]:   Lookup error for local:directory: Invalid lookup URI
okt 23 23:56:23 Desktop-Ubuntu mopidy[10401]: ERROR    2022-10-23 23:56:23,037 [10401:LocalBackend-3 (_actor_loop)] mopidy_local.library
okt 23 23:56:23 Desktop-Ubuntu mopidy[10401]:   Received WebSocket message from 127.0.0.1: '{"method":"core.library.lookup","params":{"uris":["local:directory"]},"jsonrpc":"2.0","id":19}'
okt 23 23:56:23 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:23,036 [10401:HttpServer] mopidy.http.handlers
okt 23 23:56:21 Desktop-Ubuntu mopidy[10401]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 18, "result": []}'
okt 23 23:56:21 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:21,241 [10401:HttpServer] mopidy.http.handlers
okt 23 23:56:21 Desktop-Ubuntu mopidy[10401]:   Error browsing local:directory?type=album: no such table: album
okt 23 23:56:21 Desktop-Ubuntu mopidy[10401]: ERROR    2022-10-23 23:56:21,240 [10401:LocalBackend-3 (_actor_loop)] mopidy_local.library
okt 23 23:56:21 Desktop-Ubuntu mopidy[10401]:     
okt 23 23:56:21 Desktop-Ubuntu mopidy[10401]:      ORDER BY type, name COLLATE NOCASE
okt 23 23:56:21 Desktop-Ubuntu mopidy[10401]:      WHERE 1
okt 23 23:56:21 Desktop-Ubuntu mopidy[10401]:       FROM album
okt 23 23:56:21 Desktop-Ubuntu mopidy[10401]:     SELECT 'album' AS type, uri AS uri, name AS name
okt 23 23:56:21 Desktop-Ubuntu mopidy[10401]:   SQLite browse query []:
okt 23 23:56:21 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:21,239 [10401:LocalBackend-3 (_actor_loop)] mopidy_local.schema
okt 23 23:56:21 Desktop-Ubuntu mopidy[10401]:   Received WebSocket message from 127.0.0.1: '{"method":"core.library.browse","params":{"uri":"local:directory?type=album"},"jsonrpc":"2.0","id":18}'
okt 23 23:56:21 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:21,238 [10401:HttpServer] mopidy.http.handlers
okt 23 23:56:21 Desktop-Ubuntu mopidy[10401]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 17, "result": {"local:directory?type=album": []}}'
okt 23 23:56:21 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:21,183 [10401:HttpServer] mopidy.http.handlers
okt 23 23:56:21 Desktop-Ubuntu mopidy[10401]:   Lookup error for local:directory?type=album: Invalid lookup URI
okt 23 23:56:21 Desktop-Ubuntu mopidy[10401]: ERROR    2022-10-23 23:56:21,183 [10401:LocalBackend-3 (_actor_loop)] mopidy_local.library
okt 23 23:56:21 Desktop-Ubuntu mopidy[10401]:   Received WebSocket message from 127.0.0.1: '{"method":"core.library.lookup","params":{"uris":["local:directory?type=album"]},"jsonrpc":"2.0","id":17}'
okt 23 23:56:21 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:21,182 [10401:HttpServer] mopidy.http.handlers
okt 23 23:56:17 Desktop-Ubuntu mopidy[10401]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 16, "result": [{"__model__": "Ref", "uri": "local:directory?type=album", "name": "Albums", "type": "directory"}, {"__model__": "Ref", "uri": "local:directory?type=artist", "name": "Artists", "type": "directory"}, {"__model__": "Ref", "uri": "local:directory?type=artist&role=composer", "name": "Composers", "type": "directory"}, {"__model__": "Ref", "uri": "local:directory?type=genre", "name": "Genres", "type": "directory"}, {"__model__": "Ref", "uri": "local:directory?type=artist&role=performer", "name": "Performers", "type": "directory"}, {"__model__": "Ref", "uri": "local:directory?type=date&format=%25Y", "name": "Release Years", "type": "directory"}, {"__model__": "Ref", "uri": "local:directory?type=track", "name": "Tracks", "type": "directory"}, {"__model__": "Ref", "uri": "local:directory?max-age=604800", "name": "Last Week\'s Updates", "type": "directory"}, {"__model__": "Ref", "uri": "local:directory?max-age=2592000", "name": "Last Month\'s Updates", "type": "directory"}]}'
okt 23 23:56:17 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:17,660 [10401:HttpServer] mopidy.http.handlers
okt 23 23:56:17 Desktop-Ubuntu mopidy[10401]:   Received WebSocket message from 127.0.0.1: '{"method":"core.library.browse","params":{"uri":"local:directory"},"jsonrpc":"2.0","id":16}'
okt 23 23:56:17 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:17,658 [10401:HttpServer] mopidy.http.handlers
okt 23 23:56:17 Desktop-Ubuntu mopidy[10401]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 15, "result": {"local:directory": []}}'
okt 23 23:56:17 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:17,602 [10401:HttpServer] mopidy.http.handlers
okt 23 23:56:17 Desktop-Ubuntu mopidy[10401]:   Lookup error for local:directory: Invalid lookup URI
okt 23 23:56:17 Desktop-Ubuntu mopidy[10401]: ERROR    2022-10-23 23:56:17,601 [10401:LocalBackend-3 (_actor_loop)] mopidy_local.library
okt 23 23:56:17 Desktop-Ubuntu mopidy[10401]:   Received WebSocket message from 127.0.0.1: '{"method":"core.library.lookup","params":{"uris":["local:directory"]},"jsonrpc":"2.0","id":15}'
okt 23 23:56:17 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:17,601 [10401:HttpServer] mopidy.http.handlers
okt 23 23:56:16 Desktop-Ubuntu mopidy[10401]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 14, "result": [{"__model__": "Ref", "uri": "file:///var/lib/mopidy", "name": "Files", "type": "directory"}, {"__model__": "Ref", "uri": "local:directory", "name": "Local media", "type": "directory"}]}'
okt 23 23:56:16 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:16,620 [10401:HttpServer] mopidy.http.handlers
okt 23 23:56:16 Desktop-Ubuntu mopidy[10401]:   Received WebSocket message from 127.0.0.1: '{"method":"core.library.browse","params":{"uri":null},"jsonrpc":"2.0","id":14}'
okt 23 23:56:16 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:16,617 [10401:HttpServer] mopidy.http.handlers
okt 23 23:56:14 Desktop-Ubuntu mopidy[10401]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 13, "result": [{"__model__": "Ref", "uri": "local:directory?type=album", "name": "Albums", "type": "directory"}, {"__model__": "Ref", "uri": "local:directory?type=artist", "name": "Artists", "type": "directory"}, {"__model__": "Ref", "uri": "local:directory?type=artist&role=composer", "name": "Composers", "type": "directory"}, {"__model__": "Ref", "uri": "local:directory?type=genre", "name": "Genres", "type": "directory"}, {"__model__": "Ref", "uri": "local:directory?type=artist&role=performer", "name": "Performers", "type": "directory"}, {"__model__": "Ref", "uri": "local:directory?type=date&format=%25Y", "name": "Release Years", "type": "directory"}, {"__model__": "Ref", "uri": "local:directory?type=track", "name": "Tracks", "type": "directory"}, {"__model__": "Ref", "uri": "local:directory?max-age=604800", "name": "Last Week\'s Updates", "type": "directory"}, {"__model__": "Ref", "uri": "local:directory?max-age=2592000", "name": "Last Month\'s Updates", "type": "directory"}]}'
okt 23 23:56:14 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:14,810 [10401:HttpServer] mopidy.http.handlers
okt 23 23:56:14 Desktop-Ubuntu mopidy[10401]:   Received WebSocket message from 127.0.0.1: '{"method":"core.library.browse","params":{"uri":"local:directory"},"jsonrpc":"2.0","id":13}'
okt 23 23:56:14 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:14,809 [10401:HttpServer] mopidy.http.handlers
okt 23 23:56:14 Desktop-Ubuntu mopidy[10401]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 12, "result": {"local:directory": []}}'
okt 23 23:56:14 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:14,803 [10401:HttpServer] mopidy.http.handlers
okt 23 23:56:14 Desktop-Ubuntu mopidy[10401]:   Lookup error for local:directory: Invalid lookup URI
okt 23 23:56:14 Desktop-Ubuntu mopidy[10401]: ERROR    2022-10-23 23:56:14,803 [10401:LocalBackend-3 (_actor_loop)] mopidy_local.library
okt 23 23:56:14 Desktop-Ubuntu mopidy[10401]:   Received WebSocket message from 127.0.0.1: '{"method":"core.library.lookup","params":{"uris":["local:directory"]},"jsonrpc":"2.0","id":12}'
okt 23 23:56:14 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:14,800 [10401:HttpServer] mopidy.http.handlers
okt 23 23:56:13 Desktop-Ubuntu mopidy[10401]:   {'id': 166656217368250, 'jsonrpc': '2.0', 'method': 'get_version', 'result': {'version': {'current': '3.64.1', 'latest': '3.64.1', 'is_root': False, 'upgrade_available': False}}, 'recipient': '3NTF1W54U5OJ'}
okt 23 23:56:13 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:13,800 [10401:HttpServer] mopidy_iris.core
okt 23 23:56:13 Desktop-Ubuntu mopidy[10401]:   Iris websocket message received: {"jsonrpc":"2.0","id":166656217368250,"method":"get_version"}
okt 23 23:56:13 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:13,683 [10401:HttpServer] mopidy_iris.handlers
okt 23 23:56:13 Desktop-Ubuntu mopidy[10401]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 11, "result": null}'
okt 23 23:56:13 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:13,273 [10401:HttpServer] mopidy.http.handlers
okt 23 23:56:13 Desktop-Ubuntu mopidy[10401]:   Received WebSocket message from 127.0.0.1: '{"method":"core.playback.get_stream_title","params":{},"jsonrpc":"2.0","id":11}'
okt 23 23:56:13 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:13,273 [10401:HttpServer] mopidy.http.handlers
okt 23 23:56:13 Desktop-Ubuntu mopidy[10401]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 10, "result": ["file", "http", "https", "local", "m3u", "rtsp"]}'
okt 23 23:56:13 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:13,272 [10401:HttpServer] mopidy.http.handlers
okt 23 23:56:13 Desktop-Ubuntu mopidy[10401]:   Received WebSocket message from 127.0.0.1: '{"method":"core.get_uri_schemes","params":{},"jsonrpc":"2.0","id":10}'
okt 23 23:56:13 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:13,272 [10401:HttpServer] mopidy.http.handlers
okt 23 23:56:13 Desktop-Ubuntu mopidy[10401]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 9, "result": 0}'
okt 23 23:56:13 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:13,271 [10401:HttpServer] mopidy.http.handlers
okt 23 23:56:13 Desktop-Ubuntu mopidy[10401]:   Received WebSocket message from 127.0.0.1: '{"method":"core.playback.get_time_position","params":{},"jsonrpc":"2.0","id":9}'
okt 23 23:56:13 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:13,271 [10401:HttpServer] mopidy.http.handlers
okt 23 23:56:13 Desktop-Ubuntu mopidy[10401]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 8, "result": []}'
okt 23 23:56:13 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:13,271 [10401:HttpServer] mopidy.http.handlers
okt 23 23:56:13 Desktop-Ubuntu mopidy[10401]:   Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_tl_tracks","params":{},"jsonrpc":"2.0","id":8}'
okt 23 23:56:13 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:13,270 [10401:HttpServer] mopidy.http.handlers
okt 23 23:56:13 Desktop-Ubuntu mopidy[10401]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 7, "result": false}'
okt 23 23:56:13 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:13,269 [10401:HttpServer] mopidy.http.handlers
okt 23 23:56:13 Desktop-Ubuntu mopidy[10401]:   Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_repeat","params":{},"jsonrpc":"2.0","id":7}'
okt 23 23:56:13 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:13,269 [10401:HttpServer] mopidy.http.handlers
okt 23 23:56:13 Desktop-Ubuntu mopidy[10401]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 6, "result": false}'
okt 23 23:56:13 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:13,268 [10401:HttpServer] mopidy.http.handlers
okt 23 23:56:13 Desktop-Ubuntu mopidy[10401]:   Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_random","params":{},"jsonrpc":"2.0","id":6}'
okt 23 23:56:13 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:13,268 [10401:HttpServer] mopidy.http.handlers
okt 23 23:56:13 Desktop-Ubuntu mopidy[10401]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 5, "result": false}'
okt 23 23:56:13 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:13,268 [10401:HttpServer] mopidy.http.handlers
okt 23 23:56:13 Desktop-Ubuntu mopidy[10401]:   Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_consume","params":{},"jsonrpc":"2.0","id":5}'
okt 23 23:56:13 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:13,267 [10401:HttpServer] mopidy.http.handlers
okt 23 23:56:13 Desktop-Ubuntu mopidy[10401]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 4, "result": false}'
okt 23 23:56:13 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:13,267 [10401:HttpServer] mopidy.http.handlers
okt 23 23:56:13 Desktop-Ubuntu mopidy[10401]:   Received WebSocket message from 127.0.0.1: '{"method":"core.mixer.get_mute","params":{},"jsonrpc":"2.0","id":4}'
okt 23 23:56:13 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:13,267 [10401:HttpServer] mopidy.http.handlers
okt 23 23:56:13 Desktop-Ubuntu mopidy[10401]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 3, "result": 100}'
okt 23 23:56:13 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:13,266 [10401:HttpServer] mopidy.http.handlers
okt 23 23:56:13 Desktop-Ubuntu mopidy[10401]:   Received WebSocket message from 127.0.0.1: '{"method":"core.mixer.get_volume","params":{},"jsonrpc":"2.0","id":3}'
okt 23 23:56:13 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:13,266 [10401:HttpServer] mopidy.http.handlers
okt 23 23:56:13 Desktop-Ubuntu mopidy[10401]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 2, "result": "stopped"}'
okt 23 23:56:13 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:13,266 [10401:HttpServer] mopidy.http.handlers
okt 23 23:56:13 Desktop-Ubuntu mopidy[10401]:   Received WebSocket message from 127.0.0.1: '{"method":"core.playback.get_state","params":{},"jsonrpc":"2.0","id":2}'
okt 23 23:56:13 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:13,265 [10401:HttpServer] mopidy.http.handlers
okt 23 23:56:13 Desktop-Ubuntu mopidy[10401]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 1, "result": null}'
okt 23 23:56:13 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:13,265 [10401:HttpServer] mopidy.http.handlers
okt 23 23:56:13 Desktop-Ubuntu mopidy[10401]:   Received WebSocket message from 127.0.0.1: '{"method":"core.playback.get_current_tl_track","params":{},"jsonrpc":"2.0","id":1}'
okt 23 23:56:13 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:13,265 [10401:HttpServer] mopidy.http.handlers
okt 23 23:56:13 Desktop-Ubuntu mopidy[10401]:   {'id': 166656217318171, 'jsonrpc': '2.0', 'method': 'get_queue_metadata', 'result': {'queue_metadata': {}}, 'recipient': '3NTF1W54U5OJ'}
okt 23 23:56:13 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:13,182 [10401:HttpServer] mopidy_iris.core
okt 23 23:56:13 Desktop-Ubuntu mopidy[10401]:   Iris websocket message received: {"jsonrpc":"2.0","id":166656217318171,"method":"get_queue_metadata"}
okt 23 23:56:13 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:13,182 [10401:HttpServer] mopidy_iris.handlers
okt 23 23:56:13 Desktop-Ubuntu mopidy[10401]:   {'id': 166656217318015, 'jsonrpc': '2.0', 'method': 'get_pinned', 'result': {'pinned': []}, 'recipient': '3NTF1W54U5OJ'}
okt 23 23:56:13 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:13,181 [10401:HttpServer] mopidy_iris.core
okt 23 23:56:13 Desktop-Ubuntu mopidy[10401]:   Iris websocket message received: {"jsonrpc":"2.0","id":166656217318015,"method":"get_pinned"}
okt 23 23:56:13 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:13,181 [10401:HttpServer] mopidy_iris.handlers
okt 23 23:56:13 Desktop-Ubuntu mopidy[10401]:   {'id': 166656217317921, 'jsonrpc': '2.0', 'method': 'get_commands', 'result': {'commands': {}}, 'recipient': '3NTF1W54U5OJ'}
okt 23 23:56:13 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:13,181 [10401:HttpServer] mopidy_iris.core
okt 23 23:56:13 Desktop-Ubuntu mopidy[10401]:   Iris websocket message received: {"jsonrpc":"2.0","id":166656217317921,"method":"get_commands"}
okt 23 23:56:13 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:13,181 [10401:HttpServer] mopidy_iris.handlers
okt 23 23:56:13 Desktop-Ubuntu mopidy[10401]:   {'id': 166656217317847, 'jsonrpc': '2.0', 'method': 'get_radio', 'result': {'radio': {'enabled': 0, 'seed_artists': [], 'seed_genres': [], 'seed_tracks': [], 'results': []}}, 'recipient': '3NTF1W54U5OJ'}
okt 23 23:56:13 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:13,181 [10401:HttpServer] mopidy_iris.core
okt 23 23:56:13 Desktop-Ubuntu mopidy[10401]:   Iris websocket message received: {"jsonrpc":"2.0","id":166656217317847,"method":"get_radio"}
okt 23 23:56:13 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:13,181 [10401:HttpServer] mopidy_iris.handlers
okt 23 23:56:13 Desktop-Ubuntu mopidy[10401]:   {'id': 166656217317723, 'jsonrpc': '2.0', 'method': 'get_shared_config', 'result': {'shared_config': {}}, 'recipient': '3NTF1W54U5OJ'}
okt 23 23:56:13 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:13,180 [10401:HttpServer] mopidy_iris.core
okt 23 23:56:13 Desktop-Ubuntu mopidy[10401]:   Iris websocket message received: {"jsonrpc":"2.0","id":166656217317723,"method":"get_shared_config"}
okt 23 23:56:13 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:13,180 [10401:HttpServer] mopidy_iris.handlers
okt 23 23:56:13 Desktop-Ubuntu mopidy[10401]:   {'id': 166656217317630, 'jsonrpc': '2.0', 'method': 'get_config', 'result': {'config': {'is_root': False, 'spotify_username': False, 'country': 'NZ', 'locale': 'en_NZ', 'snapcast_enabled': True, 'snapcast_host': 'localhost', 'snapcast_port': '1780', 'snapcast_ssl': False, 'snapcast_stream': 'Default', 'spotify_authorization_url': 'https://jamesbarnsley.co.nz/iris/auth_spotify.php', 'lastfm_authorization_url': 'https://jamesbarnsley.co.nz/iris/auth_lastfm.php', 'genius_authorization_url': 'https://jamesbarnsley.co.nz/iris/auth_genius.php', 'shared_config': {}}}, 'recipient': '3NTF1W54U5OJ'}
okt 23 23:56:13 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:13,179 [10401:HttpServer] mopidy_iris.core
okt 23 23:56:13 Desktop-Ubuntu mopidy[10401]:   Iris websocket message received: {"jsonrpc":"2.0","id":166656217317630,"method":"get_config"}
okt 23 23:56:13 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:13,179 [10401:HttpServer] mopidy_iris.handlers
okt 23 23:56:13 Desktop-Ubuntu mopidy[10401]:   {'id': 166656217317463, 'jsonrpc': '2.0', 'method': 'update_connection', 'result': {'connection': {'connection_id': '3NTF1W54U5OJ', 'ip': '127.0.0.1', 'created': '2022-10-23 23:56:13', 'username': 166656148284185, 'client_id': 166656148284193}}, 'recipient': '3NTF1W54U5OJ'}
okt 23 23:56:13 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:13,178 [10401:HttpServer] mopidy_iris.core
okt 23 23:56:13 Desktop-Ubuntu mopidy[10401]:   {'method': 'connection_changed', 'params': {'connection': {'connection_id': '3NTF1W54U5OJ', 'ip': '127.0.0.1', 'created': '2022-10-23 23:56:13', 'username': 166656148284185, 'client_id': 166656148284193}}}
okt 23 23:56:13 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:13,178 [10401:HttpServer] mopidy_iris.core
okt 23 23:56:13 Desktop-Ubuntu mopidy[10401]:   Iris websocket message received: {"jsonrpc":"2.0","id":166656217317463,"method":"update_connection","params":{"username":166656148284185,"client_id":166656148284193}}
okt 23 23:56:13 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:13,178 [10401:HttpServer] mopidy_iris.handlers
okt 23 23:56:13 Desktop-Ubuntu mopidy[10401]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 0, "result": {"core.get_uri_schemes": {"description": "Get list of URI schemes we can handle", "params": []}, "core.get_version": {"description": "Get version of the Mopidy core API", "params": []}, "core.history.get_history": {"description": "Get the track history.\\n\\nThe timestamps are milliseconds since epoch.\\n\\n:returns: the track history\\n:rtype: list of (timestamp, :class:`mopidy.models.Ref`) tuples", "params": []}, "core.history.get_length": {"description": "Get the number of tracks in the history.\\n\\n:returns: the history length\\n:rtype: int", "params": []}, "core.library.browse": {"description": "Browse directories and tracks at the given ``uri``.\\n\\n``uri`` is a string which represents some directory belonging to a\\nbackend. To get the intial root directories for backends pass\\n:class:`None` as the URI.\\n\\nReturns a list of :class:`mopidy.models.Ref` objects for the\\ndirectories and tracks at the given ``uri``.\\n\\nThe :class:`~mopidy.models.Ref` objects representing tracks keep the\\ntrack\'s original URI. A matching pair of objects can look like this::\\n\\n    Track(uri=\'dummy:/foo.mp3\', name=\'foo\', artists=..., album=...)\\n    Ref.track(uri=\'dummy:/foo.mp3\', name=\'foo\')\\n\\nThe :class:`~mopidy.models.Ref` objects representing directories have\\nbackend specific URIs. These are opaque values, so no one but the\\nbackend that created them should try and derive any meaning from them.\\nThe only valid exception to this is checking the scheme, as it is used\\nto route browse requests to the correct backend.\\n\\nFor example, the dummy library\'s ``/bar`` directory could be returned\\nlike this::\\n\\n    Ref.directory(uri=\'dummy:directory:/bar\', name=\'bar\')\\n\\n:param string uri: URI to browse\\n:rtype: list of :class:`mopidy.models.Ref`\\n\\n.. versionadded:: 0.18", "params": [{"name": "uri"}]}, "core.library.get_distinct": {"description": "List distinct values for a given field from the library.\\n\\nThis has mainly been added to support the list commands the MPD\\nprotocol supports in a more sane fashion. Other frontends are not\\nrecommended to use this method.\\n\\n:param string field: Any one of ``uri``, ``track_name``, ``album``,\\n    ``artist``, ``albumartist``, ``composer``, ``performer``,\\n    ``track_no``, ``genre``, ``date``, ``comment``, ``disc_no``,\\n    ``musicbrainz_albumid``, ``musicbrainz_artistid``, or\\n    ``musicbrainz_trackid``.\\n:param dict query: Query to use for limiting results, see\\n    :meth:`search` for details about the query format.\\n:rtype: set of values corresponding to the requested field type.\\n\\n.. versionadded:: 1.0", "params": [{"name": "field"}, {"name": "query", "default": null}]}, "core.library.get_images": {"description": "Lookup the images for the given URIs\\n\\nBackends can use this to return image URIs for any URI they know about\\nbe it tracks, albums, playlists. The lookup result is a dictionary\\nmapping the provided URIs to lists of images.\\n\\nUnknown URIs or URIs the corresponding backend couldn\'t find anything\\nfor will simply return an empty list for that URI.\\n\\n:param uris: list of URIs to find images for\\n:type uris: list of string\\n:rtype: {uri: tuple of :class:`mopidy.models.Image`}\\n\\n.. versionadded:: 1.0", "params": [{"name": "uris"}]}, "core.library.lookup": {"description": "Lookup the given URIs.\\n\\nIf the URI expands to multiple tracks, the returned list will contain\\nthem all.\\n\\n:param uris: track URIs\\n:type uris: list of string\\n:rtype: {uri: list of :class:`mopidy.models.Track`}", "params": [{"name": "uris"}]}, "core.library.refresh": {"description": "Refresh library. Limit to URI and below if an URI is given.\\n\\n:param uri: directory or track URI\\n:type uri: string", "params": [{"name": "uri", "default": null}]}, "core.library.search": {"description": "Search the library for tracks where ``field`` contains ``values``.\\n\\n``field`` can be one of ``uri``, ``track_name``, ``album``, ``artist``,\\n``albumartist``, ``composer``, ``performer``, ``track_no``, ``genre``,\\n``date``, ``comment``, ``disc_no``, ``musicbrainz_albumid``,\\n``musicbrainz_artistid``, ``musicbrainz_trackid`` or ``any``.\\n\\nIf ``uris`` is given, the search is limited to results from within the\\nURI roots. For example passing ``uris=[\'file:\']`` will limit the search\\nto the local backend.\\n\\nExamples::\\n\\n    # Returns results matching \'a\' in any backend\\n    search({\'any\': [\'a\']})\\n\\n    # Returns results matching artist \'xyz\' in any backend\\n    search({\'artist\': [\'xyz\']})\\n\\n    # Returns results matching \'a\' and \'b\' and artist \'xyz\' in any\\n    # backend\\n    search({\'any\': [\'a\', \'b\'], \'artist\': [\'xyz\']})\\n\\n    # Returns results matching \'a\' if within the given URI roots\\n    # \\"file:///media/music\\" and \\"spotify:\\"\\n    search({\'any\': [\'a\']}, uris=[\'file:///media/music\', \'spotify:\'])\\n\\n    # Returns results matching artist \'xyz\' and \'abc\' in any backend\\n    search({\'artist\': [\'xyz\', \'abc\']})\\n\\n:param query: one or more queries to search for\\n:type query: dict\\n:param uris: zero or more URI roots to limit the search to\\n:type uris: list of string or :class:`None`\\n:param exact: if the search should use exact matching\\n:type exact: :class:`bool`\\n:rtype: list of :class:`mopidy.models.SearchResult`\\n\\n.. versionadded:: 1.0\\n    The ``exact`` keyword argument.", "params": [{"name": "query"}, {"name": "uris", "default": null}, {"name": "exact", "default": false}]}, "core.mixer.get_mute": {"description": "Get mute state.\\n\\n:class:`True` if muted, :class:`False` unmuted, :class:`None` if\\nunknown.", "params": []}, "core.mixer.get_volume": {"description": "Get the volume.\\n\\nInteger in range [0..100] or :class:`None` if unknown.\\n\\nThe volume scale is linear.", "params": []}, "core.mixer.set_mute": {"description": "Set mute state.\\n\\n:class:`True` to mute, :class:`False` to unmute.\\n\\nReturns :class:`True` if call is successful, otherwise :class:`False`.", "params": [{"name": "mute"}]}, "core.mixer.set_volume": {"description": "Set the volume.\\n\\nThe volume is defined as an integer in range [0..100].\\n\\nThe volume scale is linear.\\n\\nReturns :class:`True` if call is successful, otherwise :class:`False`.", "params": [{"name": "volume"}]}, "core.playback.get_current_tl_track": {"description": "Get the currently playing or selected track.\\n\\nReturns a :class:`mopidy.models.TlTrack` or :class:`None`.", "params": []}, "core.playback.get_current_tlid": {"description": "Get the currently playing or selected TLID.\\n\\nExtracted from :meth:`get_current_tl_track` for convenience.\\n\\nReturns a :class:`int` or :class:`None`.\\n\\n.. versionadded:: 1.1", "params": []}, "core.playback.get_current_track": {"description": "Get the currently playing or selected track.\\n\\nExtracted from :meth:`get_current_tl_track` for convenience.\\n\\nReturns a :class:`mopidy.models.Track` or :class:`None`.", "params": []}, "core.playback.get_state": {"description": "Get The playback state.", "params": []}, "core.playback.get_stream_title": {"description": "Get the current stream title or :class:`None`.", "params": []}, "core.playback.get_time_position": {"description": "Get time position in milliseconds.", "params": []}, "core.playback.next": {"description": "Change to the next track.\\n\\nThe current playback state will be kept. If it was playing, playing\\nwill continue. If it was paused, it will still be paused, etc.", "params": []}, "core.playback.pause": {"description": "Pause playback.", "params": []}, "core.playback.play": {"description": "Play the given track, or if the given tl_track and tlid is\\n:class:`None`, play the currently active track.\\n\\nNote that the track **must** already be in the tracklist.\\n\\n.. deprecated:: 3.0\\n    The ``tl_track`` argument. Use ``tlid`` instead.\\n\\n:param tl_track: track to play\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:param tlid: TLID of the track to play\\n:type tlid: :class:`int` or :class:`None`", "params": [{"name": "tl_track", "default": null}, {"name": "tlid", "default": null}]}, "core.playback.previous": {"description": "Change to the previous track.\\n\\nThe current playback state will be kept. If it was playing, playing\\nwill continue. If it was paused, it will still be paused, etc.", "params": []}, "core.playback.resume": {"description": "If paused, resume playing the current track.", "params": []}, "core.playback.seek": {"description": "Seeks to time position given in milliseconds.\\n\\n:param time_position: time position in milliseconds\\n:type time_position: int\\n:rtype: :class:`True` if successful, else :class:`False`", "params": [{"name": "time_position"}]}, "core.playback.set_state": {"description": "Set the playback state.\\n\\nMust be :attr:`PLAYING`, :attr:`PAUSED`, or :attr:`STOPPED`.\\n\\nPossible states and transitions:\\n\\n.. digraph:: state_transitions\\n\\n    \\"STOPPED\\" -> \\"PLAYING\\" [ label=\\"play\\" ]\\n    \\"STOPPED\\" -> \\"PAUSED\\" [ label=\\"pause\\" ]\\n    \\"PLAYING\\" -> \\"STOPPED\\" [ label=\\"stop\\" ]\\n    \\"PLAYING\\" -> \\"PAUSED\\" [ label=\\"pause\\" ]\\n    \\"PLAYING\\" -> \\"PLAYING\\" [ label=\\"play\\" ]\\n    \\"PAUSED\\" -> \\"PLAYING\\" [ label=\\"resume\\" ]\\n    \\"PAUSED\\" -> \\"STOPPED\\" [ label=\\"stop\\" ]", "params": [{"name": "new_state"}]}, "core.playback.stop": {"description": "Stop playing.", "params": []}, "core.playlists.as_list": {"description": "Get a list of the currently available playlists.\\n\\nReturns a list of :class:`~mopidy.models.Ref` objects referring to the\\nplaylists. In other words, no information about the playlists\' content\\nis given.\\n\\n:rtype: list of :class:`mopidy.models.Ref`\\n\\n.. versionadded:: 1.0", "params": []}, "core.playlists.create": {"description": "Create a new playlist.\\n\\nIf ``uri_scheme`` matches an URI scheme handled by a current backend,\\nthat backend is asked to create the playlist. If ``uri_scheme`` is\\n:class:`None` or doesn\'t match a current backend, the first backend is\\nasked to create the playlist.\\n\\nAll new playlists must be created by calling this method, and **not**\\nby creating new instances of :class:`mopidy.models.Playlist`.\\n\\n:param name: name of the new playlist\\n:type name: string\\n:param uri_scheme: use the backend matching the URI scheme\\n:type uri_scheme: string\\n:rtype: :class:`mopidy.models.Playlist` or :class:`None`", "params": [{"name": "name"}, {"name": "uri_scheme", "default": null}]}, "core.playlists.delete": {"description": "Delete playlist identified by the URI.\\n\\nIf the URI doesn\'t match the URI schemes handled by the current\\nbackends, nothing happens.\\n\\nReturns :class:`True` if deleted, :class:`False` otherwise.\\n\\n:param uri: URI of the playlist to delete\\n:type uri: string\\n:rtype: :class:`bool`\\n\\n.. versionchanged:: 2.2\\n    Return type defined.", "params": [{"name": "uri"}]}, "core.playlists.get_items": {"description": "Get the items in a playlist specified by ``uri``.\\n\\nReturns a list of :class:`~mopidy.models.Ref` objects referring to the\\nplaylist\'s items.\\n\\nIf a playlist with the given ``uri`` doesn\'t exist, it returns\\n:class:`None`.\\n\\n:rtype: list of :class:`mopidy.models.Ref`, or :class:`None`\\n\\n.. versionadded:: 1.0", "params": [{"name": "uri"}]}, "core.playlists.get_uri_schemes": {"description": "Get the list of URI schemes that support playlists.\\n\\n:rtype: list of string\\n\\n.. versionadded:: 2.0", "params": []}, "core.playlists.lookup": {"description": "Lookup playlist with given URI in both the set of playlists and in any\\nother playlist sources. Returns :class:`None` if not found.\\n\\n:param uri: playlist URI\\n:type uri: string\\n:rtype: :class:`mopidy.models.Playlist` or :class:`None`", "params": [{"name": "uri"}]}, "core.playlists.refresh": {"description": "Refresh the playlists in :attr:`playlists`.\\n\\nIf ``uri_scheme`` is :class:`None`, all backends are asked to refresh.\\nIf ``uri_scheme`` is an URI scheme handled by a backend, only that\\nbackend is asked to refresh. If ``uri_scheme`` doesn\'t match any\\ncurrent backend, nothing happens.\\n\\n:param uri_scheme: limit to the backend matching the URI scheme\\n:type uri_scheme: string", "params": [{"name": "uri_scheme", "default": null}]}, "core.playlists.save": {"description": "Save the playlist.\\n\\nFor a playlist to be saveable, it must have the ``uri`` attribute set.\\nYou must not set the ``uri`` atribute yourself, but use playlist\\nobjects returned by :meth:`create` or retrieved from :attr:`playlists`,\\nwhich will always give you saveable playlists.\\n\\nThe method returns the saved playlist. The return playlist may differ\\nfrom the saved playlist. E.g. if the playlist name was changed, the\\nreturned playlist may have a different URI. The caller of this method\\nmust throw away the playlist sent to this method, and use the\\nreturned playlist instead.\\n\\nIf the playlist\'s URI isn\'t set or doesn\'t match the URI scheme of a\\ncurrent backend, nothing is done and :class:`None` is returned.\\n\\n:param playlist: the playlist\\n:type playlist: :class:`mopidy.models.Playlist`\\n:rtype: :class:`mopidy.models.Playlist` or :class:`None`", "params": [{"name": "playlist"}]}, "core.tracklist.add": {"description": "Add tracks to the tracklist.\\n\\nIf ``uris`` is given instead of ``tracks``, the URIs are\\nlooked up in the library and the resulting tracks are added to the\\ntracklist.\\n\\nIf ``at_position`` is given, the tracks are inserted at the given\\nposition in the tracklist. If ``at_position`` is not given, the tracks\\nare appended to the end of the tracklist.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.\\n\\n:param tracks: tracks to add\\n:type tracks: list of :class:`mopidy.models.Track` or :class:`None`\\n:param at_position: position in tracklist to add tracks\\n:type at_position: int or :class:`None`\\n:param uris: list of URIs for tracks to add\\n:type uris: list of string or :class:`None`\\n:rtype: list of :class:`mopidy.models.TlTrack`\\n\\n.. versionadded:: 1.0\\n    The ``uris`` argument.\\n\\n.. deprecated:: 1.0\\n    The ``tracks`` argument. Use ``uris``.", "params": [{"name": "tracks", "default": null}, {"name": "at_position", "default": null}, {"name": "uris", "default": null}]}, "core.tracklist.clear": {"description": "Clear the tracklist.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.", "params": []}, "core.tracklist.eot_track": {"description": "The track that will be played after the given track.\\n\\nNot necessarily the same track as :meth:`next_track`.\\n\\n.. deprecated:: 3.0\\n    Use :meth:`get_eot_tlid` instead.\\n\\n:param tl_track: the reference track\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:rtype: :class:`mopidy.models.TlTrack` or :class:`None`", "params": [{"name": "tl_track"}]}, "core.tracklist.filter": {"description": "Filter the tracklist by the given criteria.\\n\\nEach rule in the criteria consists of a model field and a list of\\nvalues to compare it against. If the model field matches any of the\\nvalues, it may be returned.\\n\\nOnly tracks that match all the given criteria are returned.\\n\\nExamples::\\n\\n    # Returns tracks with TLIDs 1, 2, 3, or 4 (tracklist ID)\\n    filter({\'tlid\': [1, 2, 3, 4]})\\n\\n    # Returns track with URIs \'xyz\' or \'abc\'\\n    filter({\'uri\': [\'xyz\', \'abc\']})\\n\\n    # Returns track with a matching TLIDs (1, 3 or 6) and a\\n    # matching URI (\'xyz\' or \'abc\')\\n    filter({\'tlid\': [1, 3, 6], \'uri\': [\'xyz\', \'abc\']})\\n\\n:param criteria: one or more rules to match by\\n:type criteria: dict, of (string, list) pairs\\n:rtype: list of :class:`mopidy.models.TlTrack`", "params": [{"name": "criteria"}]}, "core.tracklist.get_consume": {"description": "Get consume mode.\\n\\n:class:`True`\\n    Tracks are removed from the tracklist when they have been played.\\n:class:`False`\\n    Tracks are not removed from the tracklist.", "params": []}, "core.tracklist.get_eot_tlid": {"description": "The TLID of the track that will be played after the current track.\\n\\nNot necessarily the same TLID as returned by :meth:`get_next_tlid`.\\n\\n:rtype: :class:`int` or :class:`None`\\n\\n.. versionadded:: 1.1", "params": []}, "core.tracklist.get_length": {"description": "Get length of the tracklist.", "params": []}, "core.tracklist.get_next_tlid": {"description": "The tlid of the track that will be played if calling\\n:meth:`mopidy.core.PlaybackController.next()`.\\n\\nFor normal playback this is the next track in the tracklist. If repeat\\nis enabled the next track can loop around the tracklist. When random is\\nenabled this should be a random track, all tracks should be played once\\nbefore the tracklist repeats.\\n\\n:rtype: :class:`int` or :class:`None`\\n\\n.. versionadded:: 1.1", "params": []}, "core.tracklist.get_previous_tlid": {"description": "Returns the TLID of the track that will be played if calling\\n:meth:`mopidy.core.PlaybackController.previous()`.\\n\\nFor normal playback this is the previous track in the tracklist. If\\nrandom and/or consume is enabled it should return the current track\\ninstead.\\n\\n:rtype: :class:`int` or :class:`None`\\n\\n.. versionadded:: 1.1", "params": []}, "core.tracklist.get_random": {"description": "Get random mode.\\n\\n:class:`True`\\n    Tracks are selected at random from the tracklist.\\n:class:`False`\\n    Tracks are played in the order of the tracklist.", "params": []}, "core.tracklist.get_repeat": {"description": "Get repeat mode.\\n\\n:class:`True`\\n    The tracklist is played repeatedly.\\n:class:`False`\\n    The tracklist is played once.", "params": []}, "core.tracklist.get_single": {"description": "Get single mode.\\n\\n:class:`True`\\n    Playback is stopped after current song, unless in ``repeat`` mode.\\n:class:`False`\\n    Playback continues after current song.", "params": []}, "core.tracklist.get_tl_tracks": {"description": "Get tracklist as list of :class:`mopidy.models.TlTrack`.", "params": []}, "core.tracklist.get_tracks": {"description": "Get tracklist as list of :class:`mopidy.models.Track`.", "params": []}, "core.tracklist.get_version": {"description": "Get the tracklist version.\\n\\nInteger which is increased every time the tracklist is changed. Is not\\nreset before Mopidy is restarted.", "params": []}, "core.tracklist.index": {"description": "The position of the given track in the tracklist.\\n\\nIf neither *tl_track* or *tlid* is given we return the index of\\nthe currently playing track.\\n\\n:param tl_track: the track to find the index of\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:param tlid: TLID of the track to find the index of\\n:type tlid: :class:`int` or :class:`None`\\n:rtype: :class:`int` or :class:`None`\\n\\n.. versionadded:: 1.1\\n    The *tlid* parameter", "params": [{"name": "tl_track", "default": null}, {"name": "tlid", "default": null}]}, "core.tracklist.move": {"description": "Move the tracks in the slice ``[start:end]`` to ``to_position``.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.\\n\\n:param start: position of first track to move\\n:type start: int\\n:param end: position after last track to move\\n:type end: int\\n:param to_position: new position for the tracks\\n:type to_position: int", "params": [{"name": "start"}, {"name": "end"}, {"name": "to_position"}]}, "core.tracklist.next_track": {"description": "The track that will be played if calling\\n:meth:`mopidy.core.PlaybackController.next()`.\\n\\nFor normal playback this is the next track in the tracklist. If repeat\\nis enabled the next track can loop around the tracklist. When random is\\nenabled this should be a random track, all tracks should be played once\\nbefore the tracklist repeats.\\n\\n.. deprecated:: 3.0\\n    Use :meth:`get_next_tlid` instead.\\n\\n:param tl_track: the reference track\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:rtype: :class:`mopidy.models.TlTrack` or :class:`None`", "params": [{"name": "tl_track"}]}, "core.tracklist.previous_track": {"description": "Returns the track that will be played if calling\\n:meth:`mopidy.core.PlaybackController.previous()`.\\n\\nFor normal playback this is the previous track in the tracklist. If\\nrandom and/or consume is enabled it should return the current track\\ninstead.\\n\\n.. deprecated:: 3.0\\n    Use :meth:`get_previous_tlid` instead.\\n\\n:param tl_track: the reference track\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:rtype: :class:`mopidy.models.TlTrack` or :class:`None`", "params": [{"name": "tl_track"}]}, "core.tracklist.remove": {"description": "Remove the matching tracks from the tracklist.\\n\\nUses :meth:`filter()` to lookup the tracks to remove.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.\\n\\n:param criteria: one or more rules to match by\\n:type criteria: dict, of (string, list) pairs\\n:rtype: list of :class:`mopidy.models.TlTrack` that were removed", "params": [{"name": "criteria"}]}, "core.tracklist.set_consume": {"description": "Set consume mode.\\n\\n:class:`True`\\n    Tracks are removed from the tracklist when they have been played.\\n:class:`False`\\n    Tracks are not removed from the tracklist.", "params": [{"name": "value"}]}, "core.tracklist.set_random": {"description": "Set random mode.\\n\\n:class:`True`\\n    Tracks are selected at random from the tracklist.\\n:class:`False`\\n    Tracks are played in the order of the tracklist.", "params": [{"name": "value"}]}, "core.tracklist.set_repeat": {"description": "Set repeat mode.\\n\\nTo repeat a single track, set both ``repeat`` and ``single``.\\n\\n:class:`True`\\n    The tracklist is played repeatedly.\\n:class:`False`\\n    The tracklist is played once.", "params": [{"name": "value"}]}, "core.tracklist.set_single": {"description": "Set single mode.\\n\\n:class:`True`\\n    Playback is stopped after current song, unless in ``repeat`` mode.\\n:class:`False`\\n    Playback continues after current song.", "params": [{"name": "value"}]}, "core.tracklist.shuffle": {"description": "Shuffles the entire tracklist. If ``start`` and ``end`` is given only\\nshuffles the slice ``[start:end]``.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.\\n\\n:param start: position of first track to shuffle\\n:type start: int or :class:`None`\\n:param end: position after last track to shuffle\\n:type end: int or :class:`None`", "params": [{"name": "start", "default": null}, {"name": "end", "default": null}]}, "core.tracklist.slice": {"description": "Returns a slice of the tracklist, limited by the given start and end\\npositions.\\n\\n:param start: position of first track to include in slice\\n:type start: int\\n:param end: position after last track to include in slice\\n:type end: int\\n:rtype: :class:`mopidy.models.TlTrack`", "params": [{"name": "start"}, {"name": "end"}]}}}'
okt 23 23:56:13 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:13,177 [10401:HttpServer] mopidy.http.handlers
okt 23 23:56:13 Desktop-Ubuntu mopidy[10401]:   Received WebSocket message from 127.0.0.1: '{"method":"core.describe","jsonrpc":"2.0","id":0}'
okt 23 23:56:13 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:13,172 [10401:HttpServer] mopidy.http.handlers
okt 23 23:56:13 Desktop-Ubuntu mopidy[10401]:   {'method': 'connection_added', 'params': {'connection': {'connection_id': '3NTF1W54U5OJ', 'ip': '127.0.0.1', 'created': '2022-10-23 23:56:13'}}}
okt 23 23:56:13 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:13,125 [10401:HttpServer] mopidy_iris.core
okt 23 23:56:13 Desktop-Ubuntu mopidy[10401]:   <mopidy_iris.handlers.WebsocketHandler object at 0x7f1d4c3b77c0>
okt 23 23:56:13 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:13,125 [10401:HttpServer] mopidy_iris.core
okt 23 23:56:13 Desktop-Ubuntu mopidy[10401]:   Connection added
okt 23 23:56:13 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:13,125 [10401:HttpServer] mopidy_iris.core
okt 23 23:56:13 Desktop-Ubuntu mopidy[10401]:   101 GET /iris/ws/ (127.0.0.1) 0.49ms
okt 23 23:56:13 Desktop-Ubuntu mopidy[10401]: INFO     2022-10-23 23:56:13,125 [10401:HttpServer] tornado.access
okt 23 23:56:13 Desktop-Ubuntu mopidy[10401]:   New WebSocket connection from 127.0.0.1
okt 23 23:56:13 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:13,113 [10401:HttpServer] mopidy.http.handlers
okt 23 23:56:13 Desktop-Ubuntu mopidy[10401]:   101 GET /mopidy/ws/ (127.0.0.1) 0.56ms
okt 23 23:56:13 Desktop-Ubuntu mopidy[10401]: INFO     2022-10-23 23:56:13,113 [10401:HttpServer] tornado.access
okt 23 23:56:12 Desktop-Ubuntu mopidy[10401]:   200 GET /iris/assets/favicon.png (127.0.0.1) 0.75ms
okt 23 23:56:12 Desktop-Ubuntu mopidy[10401]: INFO     2022-10-23 23:56:12,893 [10401:HttpServer] tornado.access
okt 23 23:56:11 Desktop-Ubuntu mopidy[10401]:   200 GET /iris/app.min.js?v=1666559547 (127.0.0.1) 10.57ms
okt 23 23:56:11 Desktop-Ubuntu mopidy[10401]: INFO     2022-10-23 23:56:11,990 [10401:HttpServer] tornado.access
okt 23 23:56:11 Desktop-Ubuntu mopidy[10401]:   200 GET /iris/app.min.css?v=1666559547 (127.0.0.1) 5.00ms
okt 23 23:56:11 Desktop-Ubuntu mopidy[10401]: INFO     2022-10-23 23:56:11,977 [10401:HttpServer] tornado.access
okt 23 23:56:11 Desktop-Ubuntu mopidy[10401]:   200 GET /iris/assets/app-icon.svg (127.0.0.1) 0.72ms
okt 23 23:56:11 Desktop-Ubuntu mopidy[10401]: INFO     2022-10-23 23:56:11,794 [10401:HttpServer] tornado.access
okt 23 23:56:11 Desktop-Ubuntu mopidy[10401]:   {'method': 'connection_removed', 'params': {'connection': {'connection_id': 'BDX3KXPNDZEK', 'ip': '127.0.0.1', 'created': '2022-10-23 23:56:08', 'username': 166656148284185, 'client_id': 166656148284193}}}
okt 23 23:56:11 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:11,738 [10401:HttpServer] mopidy_iris.core
okt 23 23:56:11 Desktop-Ubuntu mopidy[10401]:   Closed WebSocket connection from 127.0.0.1
okt 23 23:56:11 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:11,736 [10401:HttpServer] mopidy.http.handlers
okt 23 23:56:11 Desktop-Ubuntu mopidy[10401]:   200 GET /iris/library/browse/Local%20media/bG9jYWw6ZGlyZWN0b3J5 (127.0.0.1) 5.57ms
okt 23 23:56:11 Desktop-Ubuntu mopidy[10401]: INFO     2022-10-23 23:56:11,722 [10401:HttpServer] tornado.access
okt 23 23:56:09 Desktop-Ubuntu mopidy[10401]:   {'id': 166656216904811, 'jsonrpc': '2.0', 'method': 'get_version', 'result': {'version': {'current': '3.64.1', 'latest': '3.64.1', 'is_root': False, 'upgrade_available': False}}, 'recipient': 'BDX3KXPNDZEK'}
okt 23 23:56:09 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:09,219 [10401:HttpServer] mopidy_iris.core
okt 23 23:56:09 Desktop-Ubuntu mopidy[10401]:   Iris websocket message received: {"jsonrpc":"2.0","id":166656216904811,"method":"get_version"}
okt 23 23:56:09 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:09,049 [10401:HttpServer] mopidy_iris.handlers
okt 23 23:56:08 Desktop-Ubuntu mopidy[10401]:   {'id': 166656216854741, 'jsonrpc': '2.0', 'method': 'get_queue_metadata', 'result': {'queue_metadata': {}}, 'recipient': 'BDX3KXPNDZEK'}
okt 23 23:56:08 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:08,547 [10401:HttpServer] mopidy_iris.core
okt 23 23:56:08 Desktop-Ubuntu mopidy[10401]:   Iris websocket message received: {"jsonrpc":"2.0","id":166656216854741,"method":"get_queue_metadata"}
okt 23 23:56:08 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:08,547 [10401:HttpServer] mopidy_iris.handlers
okt 23 23:56:08 Desktop-Ubuntu mopidy[10401]:   {'id': 166656216854675, 'jsonrpc': '2.0', 'method': 'get_pinned', 'result': {'pinned': []}, 'recipient': 'BDX3KXPNDZEK'}
okt 23 23:56:08 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:08,546 [10401:HttpServer] mopidy_iris.core
okt 23 23:56:08 Desktop-Ubuntu mopidy[10401]:   Iris websocket message received: {"jsonrpc":"2.0","id":166656216854675,"method":"get_pinned"}
okt 23 23:56:08 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:08,546 [10401:HttpServer] mopidy_iris.handlers
okt 23 23:56:08 Desktop-Ubuntu mopidy[10401]:   {'id': 166656216854491, 'jsonrpc': '2.0', 'method': 'get_commands', 'result': {'commands': {}}, 'recipient': 'BDX3KXPNDZEK'}
okt 23 23:56:08 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:08,545 [10401:HttpServer] mopidy_iris.core
okt 23 23:56:08 Desktop-Ubuntu mopidy[10401]:   Iris websocket message received: {"jsonrpc":"2.0","id":166656216854491,"method":"get_commands"}
okt 23 23:56:08 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:08,545 [10401:HttpServer] mopidy_iris.handlers
okt 23 23:56:08 Desktop-Ubuntu mopidy[10401]:   {'id': 166656216854411, 'jsonrpc': '2.0', 'method': 'get_radio', 'result': {'radio': {'enabled': 0, 'seed_artists': [], 'seed_genres': [], 'seed_tracks': [], 'results': []}}, 'recipient': 'BDX3KXPNDZEK'}
okt 23 23:56:08 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:08,544 [10401:HttpServer] mopidy_iris.core
okt 23 23:56:08 Desktop-Ubuntu mopidy[10401]:   Iris websocket message received: {"jsonrpc":"2.0","id":166656216854411,"method":"get_radio"}
okt 23 23:56:08 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:08,544 [10401:HttpServer] mopidy_iris.handlers
okt 23 23:56:08 Desktop-Ubuntu mopidy[10401]:   {'id': 166656216854387, 'jsonrpc': '2.0', 'method': 'get_shared_config', 'result': {'shared_config': {}}, 'recipient': 'BDX3KXPNDZEK'}
okt 23 23:56:08 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:08,543 [10401:HttpServer] mopidy_iris.core
okt 23 23:56:08 Desktop-Ubuntu mopidy[10401]:   Iris websocket message received: {"jsonrpc":"2.0","id":166656216854387,"method":"get_shared_config"}
okt 23 23:56:08 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:08,543 [10401:HttpServer] mopidy_iris.handlers
okt 23 23:56:08 Desktop-Ubuntu mopidy[10401]:   {'id': 166656216854194, 'jsonrpc': '2.0', 'method': 'get_config', 'result': {'config': {'is_root': False, 'spotify_username': False, 'country': 'NZ', 'locale': 'en_NZ', 'snapcast_enabled': True, 'snapcast_host': 'localhost', 'snapcast_port': '1780', 'snapcast_ssl': False, 'snapcast_stream': 'Default', 'spotify_authorization_url': 'https://jamesbarnsley.co.nz/iris/auth_spotify.php', 'lastfm_authorization_url': 'https://jamesbarnsley.co.nz/iris/auth_lastfm.php', 'genius_authorization_url': 'https://jamesbarnsley.co.nz/iris/auth_genius.php', 'shared_config': {}}}, 'recipient': 'BDX3KXPNDZEK'}
okt 23 23:56:08 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:08,542 [10401:HttpServer] mopidy_iris.core
okt 23 23:56:08 Desktop-Ubuntu mopidy[10401]:   Iris websocket message received: {"jsonrpc":"2.0","id":166656216854194,"method":"get_config"}
okt 23 23:56:08 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:08,542 [10401:HttpServer] mopidy_iris.handlers
okt 23 23:56:08 Desktop-Ubuntu mopidy[10401]:   {'id': 166656216854054, 'jsonrpc': '2.0', 'method': 'update_connection', 'result': {'connection': {'connection_id': 'BDX3KXPNDZEK', 'ip': '127.0.0.1', 'created': '2022-10-23 23:56:08', 'username': 166656148284185, 'client_id': 166656148284193}}, 'recipient': 'BDX3KXPNDZEK'}
okt 23 23:56:08 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:08,541 [10401:HttpServer] mopidy_iris.core
okt 23 23:56:08 Desktop-Ubuntu mopidy[10401]:   {'method': 'connection_changed', 'params': {'connection': {'connection_id': 'BDX3KXPNDZEK', 'ip': '127.0.0.1', 'created': '2022-10-23 23:56:08', 'username': 166656148284185, 'client_id': 166656148284193}}}
okt 23 23:56:08 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:08,541 [10401:HttpServer] mopidy_iris.core
okt 23 23:56:08 Desktop-Ubuntu mopidy[10401]:   Iris websocket message received: {"jsonrpc":"2.0","id":166656216854054,"method":"update_connection","params":{"username":166656148284185,"client_id":166656148284193}}
okt 23 23:56:08 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:08,540 [10401:HttpServer] mopidy_iris.handlers
okt 23 23:56:08 Desktop-Ubuntu mopidy[10401]:   {'method': 'connection_added', 'params': {'connection': {'connection_id': 'BDX3KXPNDZEK', 'ip': '127.0.0.1', 'created': '2022-10-23 23:56:08'}}}
okt 23 23:56:08 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:08,536 [10401:HttpServer] mopidy_iris.core
okt 23 23:56:08 Desktop-Ubuntu mopidy[10401]:   <mopidy_iris.handlers.WebsocketHandler object at 0x7f1d4d88b940>
okt 23 23:56:08 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:08,536 [10401:HttpServer] mopidy_iris.core
okt 23 23:56:08 Desktop-Ubuntu mopidy[10401]:   Connection added
okt 23 23:56:08 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:08,536 [10401:HttpServer] mopidy_iris.core
okt 23 23:56:08 Desktop-Ubuntu mopidy[10401]:   101 GET /iris/ws/ (127.0.0.1) 0.52ms
okt 23 23:56:08 Desktop-Ubuntu mopidy[10401]: INFO     2022-10-23 23:56:08,536 [10401:HttpServer] tornado.access
okt 23 23:56:04 Desktop-Ubuntu mopidy[10401]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 38, "result": null}'
okt 23 23:56:04 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:04,515 [10401:HttpServer] mopidy.http.handlers
okt 23 23:56:04 Desktop-Ubuntu mopidy[10401]:   Received WebSocket message from 127.0.0.1: '{"method":"core.playback.get_stream_title","params":{},"jsonrpc":"2.0","id":38}'
okt 23 23:56:04 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:04,514 [10401:HttpServer] mopidy.http.handlers
okt 23 23:56:04 Desktop-Ubuntu mopidy[10401]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 37, "result": ["file", "http", "https", "local", "m3u", "rtsp"]}'
okt 23 23:56:04 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:04,514 [10401:HttpServer] mopidy.http.handlers
okt 23 23:56:04 Desktop-Ubuntu mopidy[10401]:   Received WebSocket message from 127.0.0.1: '{"method":"core.get_uri_schemes","params":{},"jsonrpc":"2.0","id":37}'
okt 23 23:56:04 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:04,513 [10401:HttpServer] mopidy.http.handlers
okt 23 23:56:04 Desktop-Ubuntu mopidy[10401]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 36, "result": 0}'
okt 23 23:56:04 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:04,512 [10401:HttpServer] mopidy.http.handlers
okt 23 23:56:04 Desktop-Ubuntu mopidy[10401]:   Received WebSocket message from 127.0.0.1: '{"method":"core.playback.get_time_position","params":{},"jsonrpc":"2.0","id":36}'
okt 23 23:56:04 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:04,512 [10401:HttpServer] mopidy.http.handlers
okt 23 23:56:04 Desktop-Ubuntu mopidy[10401]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 35, "result": []}'
okt 23 23:56:04 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:04,511 [10401:HttpServer] mopidy.http.handlers
okt 23 23:56:04 Desktop-Ubuntu mopidy[10401]:   Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_tl_tracks","params":{},"jsonrpc":"2.0","id":35}'
okt 23 23:56:04 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:04,511 [10401:HttpServer] mopidy.http.handlers
okt 23 23:56:04 Desktop-Ubuntu mopidy[10401]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 34, "result": false}'
okt 23 23:56:04 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:04,510 [10401:HttpServer] mopidy.http.handlers
okt 23 23:56:04 Desktop-Ubuntu mopidy[10401]:   Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_repeat","params":{},"jsonrpc":"2.0","id":34}'
okt 23 23:56:04 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:04,510 [10401:HttpServer] mopidy.http.handlers
okt 23 23:56:04 Desktop-Ubuntu mopidy[10401]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 33, "result": false}'
okt 23 23:56:04 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:04,509 [10401:HttpServer] mopidy.http.handlers
okt 23 23:56:04 Desktop-Ubuntu mopidy[10401]:   Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_random","params":{},"jsonrpc":"2.0","id":33}'
okt 23 23:56:04 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:04,509 [10401:HttpServer] mopidy.http.handlers
okt 23 23:56:04 Desktop-Ubuntu mopidy[10401]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 32, "result": false}'
okt 23 23:56:04 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:04,508 [10401:HttpServer] mopidy.http.handlers
okt 23 23:56:04 Desktop-Ubuntu mopidy[10401]:   Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_consume","params":{},"jsonrpc":"2.0","id":32}'
okt 23 23:56:04 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:04,508 [10401:HttpServer] mopidy.http.handlers
okt 23 23:56:04 Desktop-Ubuntu mopidy[10401]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 31, "result": false}'
okt 23 23:56:04 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:04,507 [10401:HttpServer] mopidy.http.handlers
okt 23 23:56:04 Desktop-Ubuntu mopidy[10401]:   Received WebSocket message from 127.0.0.1: '{"method":"core.mixer.get_mute","params":{},"jsonrpc":"2.0","id":31}'
okt 23 23:56:04 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:04,507 [10401:HttpServer] mopidy.http.handlers
okt 23 23:56:04 Desktop-Ubuntu mopidy[10401]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 30, "result": 100}'
okt 23 23:56:04 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:04,506 [10401:HttpServer] mopidy.http.handlers
okt 23 23:56:04 Desktop-Ubuntu mopidy[10401]:   Received WebSocket message from 127.0.0.1: '{"method":"core.mixer.get_volume","params":{},"jsonrpc":"2.0","id":30}'
okt 23 23:56:04 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:04,505 [10401:HttpServer] mopidy.http.handlers
okt 23 23:56:04 Desktop-Ubuntu mopidy[10401]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 29, "result": "stopped"}'
okt 23 23:56:04 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:04,504 [10401:HttpServer] mopidy.http.handlers
okt 23 23:56:04 Desktop-Ubuntu mopidy[10401]:   Received WebSocket message from 127.0.0.1: '{"method":"core.playback.get_state","params":{},"jsonrpc":"2.0","id":29}'
okt 23 23:56:04 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:04,504 [10401:HttpServer] mopidy.http.handlers
okt 23 23:56:04 Desktop-Ubuntu mopidy[10401]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 28, "result": null}'
okt 23 23:56:04 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:04,503 [10401:HttpServer] mopidy.http.handlers
okt 23 23:56:04 Desktop-Ubuntu mopidy[10401]:   Received WebSocket message from 127.0.0.1: '{"method":"core.playback.get_current_tl_track","params":{},"jsonrpc":"2.0","id":28}'
okt 23 23:56:04 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:04,503 [10401:HttpServer] mopidy.http.handlers
okt 23 23:56:04 Desktop-Ubuntu mopidy[10401]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 27, "result": {"core.get_uri_schemes": {"description": "Get list of URI schemes we can handle", "params": []}, "core.get_version": {"description": "Get version of the Mopidy core API", "params": []}, "core.history.get_history": {"description": "Get the track history.\\n\\nThe timestamps are milliseconds since epoch.\\n\\n:returns: the track history\\n:rtype: list of (timestamp, :class:`mopidy.models.Ref`) tuples", "params": []}, "core.history.get_length": {"description": "Get the number of tracks in the history.\\n\\n:returns: the history length\\n:rtype: int", "params": []}, "core.library.browse": {"description": "Browse directories and tracks at the given ``uri``.\\n\\n``uri`` is a string which represents some directory belonging to a\\nbackend. To get the intial root directories for backends pass\\n:class:`None` as the URI.\\n\\nReturns a list of :class:`mopidy.models.Ref` objects for the\\ndirectories and tracks at the given ``uri``.\\n\\nThe :class:`~mopidy.models.Ref` objects representing tracks keep the\\ntrack\'s original URI. A matching pair of objects can look like this::\\n\\n    Track(uri=\'dummy:/foo.mp3\', name=\'foo\', artists=..., album=...)\\n    Ref.track(uri=\'dummy:/foo.mp3\', name=\'foo\')\\n\\nThe :class:`~mopidy.models.Ref` objects representing directories have\\nbackend specific URIs. These are opaque values, so no one but the\\nbackend that created them should try and derive any meaning from them.\\nThe only valid exception to this is checking the scheme, as it is used\\nto route browse requests to the correct backend.\\n\\nFor example, the dummy library\'s ``/bar`` directory could be returned\\nlike this::\\n\\n    Ref.directory(uri=\'dummy:directory:/bar\', name=\'bar\')\\n\\n:param string uri: URI to browse\\n:rtype: list of :class:`mopidy.models.Ref`\\n\\n.. versionadded:: 0.18", "params": [{"name": "uri"}]}, "core.library.get_distinct": {"description": "List distinct values for a given field from the library.\\n\\nThis has mainly been added to support the list commands the MPD\\nprotocol supports in a more sane fashion. Other frontends are not\\nrecommended to use this method.\\n\\n:param string field: Any one of ``uri``, ``track_name``, ``album``,\\n    ``artist``, ``albumartist``, ``composer``, ``performer``,\\n    ``track_no``, ``genre``, ``date``, ``comment``, ``disc_no``,\\n    ``musicbrainz_albumid``, ``musicbrainz_artistid``, or\\n    ``musicbrainz_trackid``.\\n:param dict query: Query to use for limiting results, see\\n    :meth:`search` for details about the query format.\\n:rtype: set of values corresponding to the requested field type.\\n\\n.. versionadded:: 1.0", "params": [{"name": "field"}, {"name": "query", "default": null}]}, "core.library.get_images": {"description": "Lookup the images for the given URIs\\n\\nBackends can use this to return image URIs for any URI they know about\\nbe it tracks, albums, playlists. The lookup result is a dictionary\\nmapping the provided URIs to lists of images.\\n\\nUnknown URIs or URIs the corresponding backend couldn\'t find anything\\nfor will simply return an empty list for that URI.\\n\\n:param uris: list of URIs to find images for\\n:type uris: list of string\\n:rtype: {uri: tuple of :class:`mopidy.models.Image`}\\n\\n.. versionadded:: 1.0", "params": [{"name": "uris"}]}, "core.library.lookup": {"description": "Lookup the given URIs.\\n\\nIf the URI expands to multiple tracks, the returned list will contain\\nthem all.\\n\\n:param uris: track URIs\\n:type uris: list of string\\n:rtype: {uri: list of :class:`mopidy.models.Track`}", "params": [{"name": "uris"}]}, "core.library.refresh": {"description": "Refresh library. Limit to URI and below if an URI is given.\\n\\n:param uri: directory or track URI\\n:type uri: string", "params": [{"name": "uri", "default": null}]}, "core.library.search": {"description": "Search the library for tracks where ``field`` contains ``values``.\\n\\n``field`` can be one of ``uri``, ``track_name``, ``album``, ``artist``,\\n``albumartist``, ``composer``, ``performer``, ``track_no``, ``genre``,\\n``date``, ``comment``, ``disc_no``, ``musicbrainz_albumid``,\\n``musicbrainz_artistid``, ``musicbrainz_trackid`` or ``any``.\\n\\nIf ``uris`` is given, the search is limited to results from within the\\nURI roots. For example passing ``uris=[\'file:\']`` will limit the search\\nto the local backend.\\n\\nExamples::\\n\\n    # Returns results matching \'a\' in any backend\\n    search({\'any\': [\'a\']})\\n\\n    # Returns results matching artist \'xyz\' in any backend\\n    search({\'artist\': [\'xyz\']})\\n\\n    # Returns results matching \'a\' and \'b\' and artist \'xyz\' in any\\n    # backend\\n    search({\'any\': [\'a\', \'b\'], \'artist\': [\'xyz\']})\\n\\n    # Returns results matching \'a\' if within the given URI roots\\n    # \\"file:///media/music\\" and \\"spotify:\\"\\n    search({\'any\': [\'a\']}, uris=[\'file:///media/music\', \'spotify:\'])\\n\\n    # Returns results matching artist \'xyz\' and \'abc\' in any backend\\n    search({\'artist\': [\'xyz\', \'abc\']})\\n\\n:param query: one or more queries to search for\\n:type query: dict\\n:param uris: zero or more URI roots to limit the search to\\n:type uris: list of string or :class:`None`\\n:param exact: if the search should use exact matching\\n:type exact: :class:`bool`\\n:rtype: list of :class:`mopidy.models.SearchResult`\\n\\n.. versionadded:: 1.0\\n    The ``exact`` keyword argument.", "params": [{"name": "query"}, {"name": "uris", "default": null}, {"name": "exact", "default": false}]}, "core.mixer.get_mute": {"description": "Get mute state.\\n\\n:class:`True` if muted, :class:`False` unmuted, :class:`None` if\\nunknown.", "params": []}, "core.mixer.get_volume": {"description": "Get the volume.\\n\\nInteger in range [0..100] or :class:`None` if unknown.\\n\\nThe volume scale is linear.", "params": []}, "core.mixer.set_mute": {"description": "Set mute state.\\n\\n:class:`True` to mute, :class:`False` to unmute.\\n\\nReturns :class:`True` if call is successful, otherwise :class:`False`.", "params": [{"name": "mute"}]}, "core.mixer.set_volume": {"description": "Set the volume.\\n\\nThe volume is defined as an integer in range [0..100].\\n\\nThe volume scale is linear.\\n\\nReturns :class:`True` if call is successful, otherwise :class:`False`.", "params": [{"name": "volume"}]}, "core.playback.get_current_tl_track": {"description": "Get the currently playing or selected track.\\n\\nReturns a :class:`mopidy.models.TlTrack` or :class:`None`.", "params": []}, "core.playback.get_current_tlid": {"description": "Get the currently playing or selected TLID.\\n\\nExtracted from :meth:`get_current_tl_track` for convenience.\\n\\nReturns a :class:`int` or :class:`None`.\\n\\n.. versionadded:: 1.1", "params": []}, "core.playback.get_current_track": {"description": "Get the currently playing or selected track.\\n\\nExtracted from :meth:`get_current_tl_track` for convenience.\\n\\nReturns a :class:`mopidy.models.Track` or :class:`None`.", "params": []}, "core.playback.get_state": {"description": "Get The playback state.", "params": []}, "core.playback.get_stream_title": {"description": "Get the current stream title or :class:`None`.", "params": []}, "core.playback.get_time_position": {"description": "Get time position in milliseconds.", "params": []}, "core.playback.next": {"description": "Change to the next track.\\n\\nThe current playback state will be kept. If it was playing, playing\\nwill continue. If it was paused, it will still be paused, etc.", "params": []}, "core.playback.pause": {"description": "Pause playback.", "params": []}, "core.playback.play": {"description": "Play the given track, or if the given tl_track and tlid is\\n:class:`None`, play the currently active track.\\n\\nNote that the track **must** already be in the tracklist.\\n\\n.. deprecated:: 3.0\\n    The ``tl_track`` argument. Use ``tlid`` instead.\\n\\n:param tl_track: track to play\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:param tlid: TLID of the track to play\\n:type tlid: :class:`int` or :class:`None`", "params": [{"name": "tl_track", "default": null}, {"name": "tlid", "default": null}]}, "core.playback.previous": {"description": "Change to the previous track.\\n\\nThe current playback state will be kept. If it was playing, playing\\nwill continue. If it was paused, it will still be paused, etc.", "params": []}, "core.playback.resume": {"description": "If paused, resume playing the current track.", "params": []}, "core.playback.seek": {"description": "Seeks to time position given in milliseconds.\\n\\n:param time_position: time position in milliseconds\\n:type time_position: int\\n:rtype: :class:`True` if successful, else :class:`False`", "params": [{"name": "time_position"}]}, "core.playback.set_state": {"description": "Set the playback state.\\n\\nMust be :attr:`PLAYING`, :attr:`PAUSED`, or :attr:`STOPPED`.\\n\\nPossible states and transitions:\\n\\n.. digraph:: state_transitions\\n\\n    \\"STOPPED\\" -> \\"PLAYING\\" [ label=\\"play\\" ]\\n    \\"STOPPED\\" -> \\"PAUSED\\" [ label=\\"pause\\" ]\\n    \\"PLAYING\\" -> \\"STOPPED\\" [ label=\\"stop\\" ]\\n    \\"PLAYING\\" -> \\"PAUSED\\" [ label=\\"pause\\" ]\\n    \\"PLAYING\\" -> \\"PLAYING\\" [ label=\\"play\\" ]\\n    \\"PAUSED\\" -> \\"PLAYING\\" [ label=\\"resume\\" ]\\n    \\"PAUSED\\" -> \\"STOPPED\\" [ label=\\"stop\\" ]", "params": [{"name": "new_state"}]}, "core.playback.stop": {"description": "Stop playing.", "params": []}, "core.playlists.as_list": {"description": "Get a list of the currently available playlists.\\n\\nReturns a list of :class:`~mopidy.models.Ref` objects referring to the\\nplaylists. In other words, no information about the playlists\' content\\nis given.\\n\\n:rtype: list of :class:`mopidy.models.Ref`\\n\\n.. versionadded:: 1.0", "params": []}, "core.playlists.create": {"description": "Create a new playlist.\\n\\nIf ``uri_scheme`` matches an URI scheme handled by a current backend,\\nthat backend is asked to create the playlist. If ``uri_scheme`` is\\n:class:`None` or doesn\'t match a current backend, the first backend is\\nasked to create the playlist.\\n\\nAll new playlists must be created by calling this method, and **not**\\nby creating new instances of :class:`mopidy.models.Playlist`.\\n\\n:param name: name of the new playlist\\n:type name: string\\n:param uri_scheme: use the backend matching the URI scheme\\n:type uri_scheme: string\\n:rtype: :class:`mopidy.models.Playlist` or :class:`None`", "params": [{"name": "name"}, {"name": "uri_scheme", "default": null}]}, "core.playlists.delete": {"description": "Delete playlist identified by the URI.\\n\\nIf the URI doesn\'t match the URI schemes handled by the current\\nbackends, nothing happens.\\n\\nReturns :class:`True` if deleted, :class:`False` otherwise.\\n\\n:param uri: URI of the playlist to delete\\n:type uri: string\\n:rtype: :class:`bool`\\n\\n.. versionchanged:: 2.2\\n    Return type defined.", "params": [{"name": "uri"}]}, "core.playlists.get_items": {"description": "Get the items in a playlist specified by ``uri``.\\n\\nReturns a list of :class:`~mopidy.models.Ref` objects referring to the\\nplaylist\'s items.\\n\\nIf a playlist with the given ``uri`` doesn\'t exist, it returns\\n:class:`None`.\\n\\n:rtype: list of :class:`mopidy.models.Ref`, or :class:`None`\\n\\n.. versionadded:: 1.0", "params": [{"name": "uri"}]}, "core.playlists.get_uri_schemes": {"description": "Get the list of URI schemes that support playlists.\\n\\n:rtype: list of string\\n\\n.. versionadded:: 2.0", "params": []}, "core.playlists.lookup": {"description": "Lookup playlist with given URI in both the set of playlists and in any\\nother playlist sources. Returns :class:`None` if not found.\\n\\n:param uri: playlist URI\\n:type uri: string\\n:rtype: :class:`mopidy.models.Playlist` or :class:`None`", "params": [{"name": "uri"}]}, "core.playlists.refresh": {"description": "Refresh the playlists in :attr:`playlists`.\\n\\nIf ``uri_scheme`` is :class:`None`, all backends are asked to refresh.\\nIf ``uri_scheme`` is an URI scheme handled by a backend, only that\\nbackend is asked to refresh. If ``uri_scheme`` doesn\'t match any\\ncurrent backend, nothing happens.\\n\\n:param uri_scheme: limit to the backend matching the URI scheme\\n:type uri_scheme: string", "params": [{"name": "uri_scheme", "default": null}]}, "core.playlists.save": {"description": "Save the playlist.\\n\\nFor a playlist to be saveable, it must have the ``uri`` attribute set.\\nYou must not set the ``uri`` atribute yourself, but use playlist\\nobjects returned by :meth:`create` or retrieved from :attr:`playlists`,\\nwhich will always give you saveable playlists.\\n\\nThe method returns the saved playlist. The return playlist may differ\\nfrom the saved playlist. E.g. if the playlist name was changed, the\\nreturned playlist may have a different URI. The caller of this method\\nmust throw away the playlist sent to this method, and use the\\nreturned playlist instead.\\n\\nIf the playlist\'s URI isn\'t set or doesn\'t match the URI scheme of a\\ncurrent backend, nothing is done and :class:`None` is returned.\\n\\n:param playlist: the playlist\\n:type playlist: :class:`mopidy.models.Playlist`\\n:rtype: :class:`mopidy.models.Playlist` or :class:`None`", "params": [{"name": "playlist"}]}, "core.tracklist.add": {"description": "Add tracks to the tracklist.\\n\\nIf ``uris`` is given instead of ``tracks``, the URIs are\\nlooked up in the library and the resulting tracks are added to the\\ntracklist.\\n\\nIf ``at_position`` is given, the tracks are inserted at the given\\nposition in the tracklist. If ``at_position`` is not given, the tracks\\nare appended to the end of the tracklist.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.\\n\\n:param tracks: tracks to add\\n:type tracks: list of :class:`mopidy.models.Track` or :class:`None`\\n:param at_position: position in tracklist to add tracks\\n:type at_position: int or :class:`None`\\n:param uris: list of URIs for tracks to add\\n:type uris: list of string or :class:`None`\\n:rtype: list of :class:`mopidy.models.TlTrack`\\n\\n.. versionadded:: 1.0\\n    The ``uris`` argument.\\n\\n.. deprecated:: 1.0\\n    The ``tracks`` argument. Use ``uris``.", "params": [{"name": "tracks", "default": null}, {"name": "at_position", "default": null}, {"name": "uris", "default": null}]}, "core.tracklist.clear": {"description": "Clear the tracklist.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.", "params": []}, "core.tracklist.eot_track": {"description": "The track that will be played after the given track.\\n\\nNot necessarily the same track as :meth:`next_track`.\\n\\n.. deprecated:: 3.0\\n    Use :meth:`get_eot_tlid` instead.\\n\\n:param tl_track: the reference track\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:rtype: :class:`mopidy.models.TlTrack` or :class:`None`", "params": [{"name": "tl_track"}]}, "core.tracklist.filter": {"description": "Filter the tracklist by the given criteria.\\n\\nEach rule in the criteria consists of a model field and a list of\\nvalues to compare it against. If the model field matches any of the\\nvalues, it may be returned.\\n\\nOnly tracks that match all the given criteria are returned.\\n\\nExamples::\\n\\n    # Returns tracks with TLIDs 1, 2, 3, or 4 (tracklist ID)\\n    filter({\'tlid\': [1, 2, 3, 4]})\\n\\n    # Returns track with URIs \'xyz\' or \'abc\'\\n    filter({\'uri\': [\'xyz\', \'abc\']})\\n\\n    # Returns track with a matching TLIDs (1, 3 or 6) and a\\n    # matching URI (\'xyz\' or \'abc\')\\n    filter({\'tlid\': [1, 3, 6], \'uri\': [\'xyz\', \'abc\']})\\n\\n:param criteria: one or more rules to match by\\n:type criteria: dict, of (string, list) pairs\\n:rtype: list of :class:`mopidy.models.TlTrack`", "params": [{"name": "criteria"}]}, "core.tracklist.get_consume": {"description": "Get consume mode.\\n\\n:class:`True`\\n    Tracks are removed from the tracklist when they have been played.\\n:class:`False`\\n    Tracks are not removed from the tracklist.", "params": []}, "core.tracklist.get_eot_tlid": {"description": "The TLID of the track that will be played after the current track.\\n\\nNot necessarily the same TLID as returned by :meth:`get_next_tlid`.\\n\\n:rtype: :class:`int` or :class:`None`\\n\\n.. versionadded:: 1.1", "params": []}, "core.tracklist.get_length": {"description": "Get length of the tracklist.", "params": []}, "core.tracklist.get_next_tlid": {"description": "The tlid of the track that will be played if calling\\n:meth:`mopidy.core.PlaybackController.next()`.\\n\\nFor normal playback this is the next track in the tracklist. If repeat\\nis enabled the next track can loop around the tracklist. When random is\\nenabled this should be a random track, all tracks should be played once\\nbefore the tracklist repeats.\\n\\n:rtype: :class:`int` or :class:`None`\\n\\n.. versionadded:: 1.1", "params": []}, "core.tracklist.get_previous_tlid": {"description": "Returns the TLID of the track that will be played if calling\\n:meth:`mopidy.core.PlaybackController.previous()`.\\n\\nFor normal playback this is the previous track in the tracklist. If\\nrandom and/or consume is enabled it should return the current track\\ninstead.\\n\\n:rtype: :class:`int` or :class:`None`\\n\\n.. versionadded:: 1.1", "params": []}, "core.tracklist.get_random": {"description": "Get random mode.\\n\\n:class:`True`\\n    Tracks are selected at random from the tracklist.\\n:class:`False`\\n    Tracks are played in the order of the tracklist.", "params": []}, "core.tracklist.get_repeat": {"description": "Get repeat mode.\\n\\n:class:`True`\\n    The tracklist is played repeatedly.\\n:class:`False`\\n    The tracklist is played once.", "params": []}, "core.tracklist.get_single": {"description": "Get single mode.\\n\\n:class:`True`\\n    Playback is stopped after current song, unless in ``repeat`` mode.\\n:class:`False`\\n    Playback continues after current song.", "params": []}, "core.tracklist.get_tl_tracks": {"description": "Get tracklist as list of :class:`mopidy.models.TlTrack`.", "params": []}, "core.tracklist.get_tracks": {"description": "Get tracklist as list of :class:`mopidy.models.Track`.", "params": []}, "core.tracklist.get_version": {"description": "Get the tracklist version.\\n\\nInteger which is increased every time the tracklist is changed. Is not\\nreset before Mopidy is restarted.", "params": []}, "core.tracklist.index": {"description": "The position of the given track in the tracklist.\\n\\nIf neither *tl_track* or *tlid* is given we return the index of\\nthe currently playing track.\\n\\n:param tl_track: the track to find the index of\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:param tlid: TLID of the track to find the index of\\n:type tlid: :class:`int` or :class:`None`\\n:rtype: :class:`int` or :class:`None`\\n\\n.. versionadded:: 1.1\\n    The *tlid* parameter", "params": [{"name": "tl_track", "default": null}, {"name": "tlid", "default": null}]}, "core.tracklist.move": {"description": "Move the tracks in the slice ``[start:end]`` to ``to_position``.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.\\n\\n:param start: position of first track to move\\n:type start: int\\n:param end: position after last track to move\\n:type end: int\\n:param to_position: new position for the tracks\\n:type to_position: int", "params": [{"name": "start"}, {"name": "end"}, {"name": "to_position"}]}, "core.tracklist.next_track": {"description": "The track that will be played if calling\\n:meth:`mopidy.core.PlaybackController.next()`.\\n\\nFor normal playback this is the next track in the tracklist. If repeat\\nis enabled the next track can loop around the tracklist. When random is\\nenabled this should be a random track, all tracks should be played once\\nbefore the tracklist repeats.\\n\\n.. deprecated:: 3.0\\n    Use :meth:`get_next_tlid` instead.\\n\\n:param tl_track: the reference track\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:rtype: :class:`mopidy.models.TlTrack` or :class:`None`", "params": [{"name": "tl_track"}]}, "core.tracklist.previous_track": {"description": "Returns the track that will be played if calling\\n:meth:`mopidy.core.PlaybackController.previous()`.\\n\\nFor normal playback this is the previous track in the tracklist. If\\nrandom and/or consume is enabled it should return the current track\\ninstead.\\n\\n.. deprecated:: 3.0\\n    Use :meth:`get_previous_tlid` instead.\\n\\n:param tl_track: the reference track\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:rtype: :class:`mopidy.models.TlTrack` or :class:`None`", "params": [{"name": "tl_track"}]}, "core.tracklist.remove": {"description": "Remove the matching tracks from the tracklist.\\n\\nUses :meth:`filter()` to lookup the tracks to remove.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.\\n\\n:param criteria: one or more rules to match by\\n:type criteria: dict, of (string, list) pairs\\n:rtype: list of :class:`mopidy.models.TlTrack` that were removed", "params": [{"name": "criteria"}]}, "core.tracklist.set_consume": {"description": "Set consume mode.\\n\\n:class:`True`\\n    Tracks are removed from the tracklist when they have been played.\\n:class:`False`\\n    Tracks are not removed from the tracklist.", "params": [{"name": "value"}]}, "core.tracklist.set_random": {"description": "Set random mode.\\n\\n:class:`True`\\n    Tracks are selected at random from the tracklist.\\n:class:`False`\\n    Tracks are played in the order of the tracklist.", "params": [{"name": "value"}]}, "core.tracklist.set_repeat": {"description": "Set repeat mode.\\n\\nTo repeat a single track, set both ``repeat`` and ``single``.\\n\\n:class:`True`\\n    The tracklist is played repeatedly.\\n:class:`False`\\n    The tracklist is played once.", "params": [{"name": "value"}]}, "core.tracklist.set_single": {"description": "Set single mode.\\n\\n:class:`True`\\n    Playback is stopped after current song, unless in ``repeat`` mode.\\n:class:`False`\\n    Playback continues after current song.", "params": [{"name": "value"}]}, "core.tracklist.shuffle": {"description": "Shuffles the entire tracklist. If ``start`` and ``end`` is given only\\nshuffles the slice ``[start:end]``.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.\\n\\n:param start: position of first track to shuffle\\n:type start: int or :class:`None`\\n:param end: position after last track to shuffle\\n:type end: int or :class:`None`", "params": [{"name": "start", "default": null}, {"name": "end", "default": null}]}, "core.tracklist.slice": {"description": "Returns a slice of the tracklist, limited by the given start and end\\npositions.\\n\\n:param start: position of first track to include in slice\\n:type start: int\\n:param end: position after last track to include in slice\\n:type end: int\\n:rtype: :class:`mopidy.models.TlTrack`", "params": [{"name": "start"}, {"name": "end"}]}}}'
okt 23 23:56:04 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:04,493 [10401:HttpServer] mopidy.http.handlers
okt 23 23:56:04 Desktop-Ubuntu mopidy[10401]:   Received WebSocket message from 127.0.0.1: '{"method":"core.describe","jsonrpc":"2.0","id":27}'
okt 23 23:56:04 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:04,489 [10401:HttpServer] mopidy.http.handlers
okt 23 23:56:04 Desktop-Ubuntu mopidy[10401]:   New WebSocket connection from 127.0.0.1
okt 23 23:56:04 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:04,487 [10401:HttpServer] mopidy.http.handlers
okt 23 23:56:04 Desktop-Ubuntu mopidy[10401]:   101 GET /mopidy/ws/ (127.0.0.1) 19.20ms
okt 23 23:56:04 Desktop-Ubuntu mopidy[10401]: INFO     2022-10-23 23:56:04,487 [10401:HttpServer] tornado.access
okt 23 23:56:04 Desktop-Ubuntu mopidy[10401]:   Zeroconf service 'Mopidy HTTP server on Desktop-Ubuntu' (_mopidy-http._tcp at []:6680): Published
okt 23 23:56:04 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:04,205 [10401:HttpFrontend-12 (_actor_loop)] mopidy.zeroconf
okt 23 23:56:04 Desktop-Ubuntu mopidy[10401]:   Zeroconf service 'Mopidy HTTP server on Desktop-Ubuntu' (_http._tcp at []:6680): Published
okt 23 23:56:04 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:04,202 [10401:HttpFrontend-12 (_actor_loop)] mopidy.zeroconf
okt 23 23:56:04 Desktop-Ubuntu mopidy[10401]:     '/': <class 'tornado.web.RedirectHandler'>
okt 23 23:56:04 Desktop-Ubuntu mopidy[10401]:     '/mopidy/': <class 'mopidy.http.handlers.ClientListHandler'>
okt 23 23:56:04 Desktop-Ubuntu mopidy[10401]:     '/mopidy/(.+)': <class 'mopidy.http.handlers.StaticFileHandler'>
okt 23 23:56:04 Desktop-Ubuntu mopidy[10401]:     '/mopidy/rpc': <class 'mopidy.http.handlers.JsonRpcHandler'>
okt 23 23:56:04 Desktop-Ubuntu mopidy[10401]:     '/mopidy/ws/?': <class 'mopidy.http.handlers.WebSocketHandler'>
okt 23 23:56:04 Desktop-Ubuntu mopidy[10401]:     '/mopidy': <class 'mopidy.http.handlers.AddSlashHandler'>
okt 23 23:56:04 Desktop-Ubuntu mopidy[10401]:     '/iris/(.*)': <class 'mopidy_iris.handlers.ReactRouterHandler'>
okt 23 23:56:04 Desktop-Ubuntu mopidy[10401]:     '/iris/((.*)(?:css|js|json|map)$)': <class 'tornado.web.StaticFileHandler'>
okt 23 23:56:04 Desktop-Ubuntu mopidy[10401]:     '/iris/assets/(.*)': <class 'tornado.web.StaticFileHandler'>
okt 23 23:56:04 Desktop-Ubuntu mopidy[10401]:     '/iris/ws/?': <class 'mopidy_iris.handlers.WebsocketHandler'>
okt 23 23:56:04 Desktop-Ubuntu mopidy[10401]:     '/iris/http/([^/]*)': <class 'mopidy_iris.handlers.HttpHandler'>
okt 23 23:56:04 Desktop-Ubuntu mopidy[10401]:     '/iris': <class 'mopidy.http.handlers.AddSlashHandler'>
okt 23 23:56:04 Desktop-Ubuntu mopidy[10401]:     '/local/(.+)': <class 'mopidy_local.web.ImageHandler'>
okt 23 23:56:04 Desktop-Ubuntu mopidy[10401]:     '/local/(index.html)?': <class 'mopidy_local.web.IndexHandler'>
okt 23 23:56:04 Desktop-Ubuntu mopidy[10401]:     '/local': <class 'mopidy.http.handlers.AddSlashHandler'>
okt 23 23:56:04 Desktop-Ubuntu mopidy[10401]:     '/youtube/(.*\\.(?:webm|m4a|mp3|ogg))': <class 'mopidy_youtube.web.AudioHandler'>
okt 23 23:56:04 Desktop-Ubuntu mopidy[10401]:     '/youtube/(.*\\.jpg)': <class 'mopidy_youtube.web.ImageHandler'>
okt 23 23:56:04 Desktop-Ubuntu mopidy[10401]:     '/youtube/(index.html|image.html)?': <class 'mopidy_youtube.web.IndexHandler'>
okt 23 23:56:04 Desktop-Ubuntu mopidy[10401]:     '/youtube': <class 'mopidy.http.handlers.AddSlashHandler'>
okt 23 23:56:04 Desktop-Ubuntu mopidy[10401]:   HTTP routes from extensions:
okt 23 23:56:04 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:04,197 [10401:HttpServer] mopidy.http.actor
okt 23 23:56:04 Desktop-Ubuntu mopidy[10401]:   Default webclient is mopidy
okt 23 23:56:04 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:04,197 [10401:HttpServer] mopidy.http.actor
okt 23 23:56:04 Desktop-Ubuntu mopidy[10401]:   Loaded HTTP extension: mopidy
okt 23 23:56:04 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:04,196 [10401:HttpServer] mopidy.http.actor
okt 23 23:56:04 Desktop-Ubuntu mopidy[10401]:   Loaded HTTP extension: iris
okt 23 23:56:04 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:04,196 [10401:HttpServer] mopidy.http.actor
okt 23 23:56:04 Desktop-Ubuntu mopidy[10401]:   Loaded HTTP extension: local
okt 23 23:56:04 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:04,195 [10401:HttpServer] mopidy.http.actor
okt 23 23:56:04 Desktop-Ubuntu mopidy[10401]:   Loaded HTTP extension: youtube
okt 23 23:56:04 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:04,193 [10401:HttpServer] mopidy.http.actor
okt 23 23:56:04 Desktop-Ubuntu mopidy[10401]:   Starting GLib mainloop
okt 23 23:56:04 Desktop-Ubuntu mopidy[10401]: INFO     2022-10-23 23:56:04,190 [10401:MainThread] mopidy.commands
okt 23 23:56:04 Desktop-Ubuntu mopidy[10401]:   Using selector: EpollSelector
okt 23 23:56:04 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:04,190 [10401:HttpServer] asyncio
okt 23 23:56:04 Desktop-Ubuntu mopidy[10401]:   HttpFrontend took 0ms
okt 23 23:56:04 Desktop-Ubuntu mopidy[10401]: TRACE    2022-10-23 23:56:04,189 [10401:MainThread] mopidy.internal.timer
okt 23 23:56:04 Desktop-Ubuntu mopidy[10401]:   HTTP server running at [::ffff:127.0.0.1]:6680
okt 23 23:56:04 Desktop-Ubuntu mopidy[10401]: INFO     2022-10-23 23:56:04,189 [10401:HttpFrontend-12 (_actor_loop)] mopidy.http.actor
okt 23 23:56:04 Desktop-Ubuntu mopidy[10401]:   Starting HttpFrontend (urn:uuid:7e1cf762-1938-46a8-b282-d722d2fa8c73)
okt 23 23:56:04 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:04,189 [10401:MainThread] pykka
okt 23 23:56:04 Desktop-Ubuntu mopidy[10401]:   Registered HttpFrontend (urn:uuid:7e1cf762-1938-46a8-b282-d722d2fa8c73)
okt 23 23:56:04 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:04,189 [10401:MainThread] pykka
okt 23 23:56:04 Desktop-Ubuntu mopidy[10401]:   Starting HTTP server
okt 23 23:56:04 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:04,189 [10401:MainThread] mopidy.http.actor
okt 23 23:56:04 Desktop-Ubuntu mopidy[10401]:   IrisFrontend took 0ms
okt 23 23:56:04 Desktop-Ubuntu mopidy[10401]: TRACE    2022-10-23 23:56:04,188 [10401:MainThread] mopidy.internal.timer
okt 23 23:56:04 Desktop-Ubuntu mopidy[10401]:   Starting Iris 3.64.1
okt 23 23:56:04 Desktop-Ubuntu mopidy[10401]: INFO     2022-10-23 23:56:04,188 [10401:IrisFrontend-10 (_actor_loop)] mopidy_iris.core
okt 23 23:56:04 Desktop-Ubuntu mopidy[10401]:   Starting IrisFrontend (urn:uuid:b346e14b-ec68-428f-94b0-1fe5ccfcb021)
okt 23 23:56:04 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:04,188 [10401:MainThread] pykka
okt 23 23:56:04 Desktop-Ubuntu mopidy[10401]:   Registered IrisFrontend (urn:uuid:b346e14b-ec68-428f-94b0-1fe5ccfcb021)
okt 23 23:56:04 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:04,188 [10401:MainThread] pykka
okt 23 23:56:04 Desktop-Ubuntu mopidy[10401]:   YouTubeCoreListener took 0ms
okt 23 23:56:04 Desktop-Ubuntu mopidy[10401]: TRACE    2022-10-23 23:56:04,187 [10401:MainThread] mopidy.internal.timer
okt 23 23:56:04 Desktop-Ubuntu mopidy[10401]:   Starting YouTubeCoreListener (urn:uuid:5616cf0e-317d-4519-bd59-363de81a1ab5)
okt 23 23:56:04 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:04,187 [10401:MainThread] pykka
okt 23 23:56:04 Desktop-Ubuntu mopidy[10401]:   Registered YouTubeCoreListener (urn:uuid:5616cf0e-317d-4519-bd59-363de81a1ab5)
okt 23 23:56:04 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:04,187 [10401:MainThread] pykka
okt 23 23:56:04 Desktop-Ubuntu mopidy[10401]:   YouTubeAutoplayer took 0ms
okt 23 23:56:04 Desktop-Ubuntu mopidy[10401]: TRACE    2022-10-23 23:56:04,187 [10401:MainThread] mopidy.internal.timer
okt 23 23:56:04 Desktop-Ubuntu mopidy[10401]:   Starting YouTubeAutoplayer (urn:uuid:89ffdbe6-42d5-42d4-90bc-ddf8e3085c31)
okt 23 23:56:04 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:04,187 [10401:MainThread] pykka
okt 23 23:56:04 Desktop-Ubuntu mopidy[10401]:   Registered YouTubeAutoplayer (urn:uuid:89ffdbe6-42d5-42d4-90bc-ddf8e3085c31)
okt 23 23:56:04 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:04,187 [10401:MainThread] pykka
okt 23 23:56:04 Desktop-Ubuntu mopidy[10401]:   Starting Mopidy frontends: YouTubeAutoplayer, YouTubeCoreListener, IrisFrontend, HttpFrontend
okt 23 23:56:04 Desktop-Ubuntu mopidy[10401]: INFO     2022-10-23 23:56:04,187 [10401:MainThread] mopidy.commands
okt 23 23:56:04 Desktop-Ubuntu mopidy[10401]:   Starting Core (urn:uuid:a386d3cc-c777-4477-a64e-7d87ccf86d01)
okt 23 23:56:04 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:04,183 [10401:MainThread] pykka
okt 23 23:56:04 Desktop-Ubuntu mopidy[10401]:   Registered Core (urn:uuid:a386d3cc-c777-4477-a64e-7d87ccf86d01)
okt 23 23:56:04 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:04,183 [10401:MainThread] pykka
okt 23 23:56:04 Desktop-Ubuntu mopidy[10401]:   Starting Mopidy core
okt 23 23:56:04 Desktop-Ubuntu mopidy[10401]: INFO     2022-10-23 23:56:04,181 [10401:MainThread] mopidy.commands
okt 23 23:56:04 Desktop-Ubuntu mopidy[10401]:   StreamBackend took 3ms
okt 23 23:56:04 Desktop-Ubuntu mopidy[10401]: TRACE    2022-10-23 23:56:04,180 [10401:MainThread] mopidy.internal.timer
okt 23 23:56:04 Desktop-Ubuntu mopidy[10401]:   Starting StreamBackend (urn:uuid:58840cb6-8ea2-4e3e-854a-27476ddcbf8f)
okt 23 23:56:04 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:04,178 [10401:MainThread] pykka
okt 23 23:56:04 Desktop-Ubuntu mopidy[10401]:   Registered StreamBackend (urn:uuid:58840cb6-8ea2-4e3e-854a-27476ddcbf8f)
okt 23 23:56:04 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:04,178 [10401:MainThread] pykka
okt 23 23:56:04 Desktop-Ubuntu mopidy[10401]:   M3UBackend took 1ms
okt 23 23:56:04 Desktop-Ubuntu mopidy[10401]: TRACE    2022-10-23 23:56:04,175 [10401:MainThread] mopidy.internal.timer
okt 23 23:56:04 Desktop-Ubuntu mopidy[10401]:   Starting M3UBackend (urn:uuid:1d671d14-510f-4850-92b0-dc977b30bfa1)
okt 23 23:56:04 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:04,174 [10401:MainThread] pykka
okt 23 23:56:04 Desktop-Ubuntu mopidy[10401]:   Registered M3UBackend (urn:uuid:1d671d14-510f-4850-92b0-dc977b30bfa1)
okt 23 23:56:04 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:04,174 [10401:MainThread] pykka
okt 23 23:56:04 Desktop-Ubuntu mopidy[10401]:   FileBackend took 3ms
okt 23 23:56:04 Desktop-Ubuntu mopidy[10401]: TRACE    2022-10-23 23:56:04,173 [10401:MainThread] mopidy.internal.timer
okt 23 23:56:04 Desktop-Ubuntu mopidy[10401]:   Audio output set to "pulsesink server=127.0.0.1"
okt 23 23:56:04 Desktop-Ubuntu mopidy[10401]: INFO     2022-10-23 23:56:04,170 [10401:Audio-2 (_actor_loop)] mopidy.audio.actor
okt 23 23:56:04 Desktop-Ubuntu mopidy[10401]:   Starting FileBackend (urn:uuid:f0866fc2-90ce-45f3-86db-20019bcaba94)
okt 23 23:56:04 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:04,170 [10401:MainThread] pykka
okt 23 23:56:04 Desktop-Ubuntu mopidy[10401]:   Registered FileBackend (urn:uuid:f0866fc2-90ce-45f3-86db-20019bcaba94)
okt 23 23:56:04 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:04,170 [10401:MainThread] pykka
okt 23 23:56:04 Desktop-Ubuntu mopidy[10401]:   Failed expanding path ($XDG_MUSIC_DIR) from file/media_dirs config value.
okt 23 23:56:04 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:04,169 [10401:MainThread] mopidy.file.library
okt 23 23:56:04 Desktop-Ubuntu mopidy[10401]:   LocalBackend took 3ms
okt 23 23:56:04 Desktop-Ubuntu mopidy[10401]: TRACE    2022-10-23 23:56:04,169 [10401:MainThread] mopidy.internal.timer
okt 23 23:56:04 Desktop-Ubuntu mopidy[10401]:   Starting LocalBackend (urn:uuid:c7765a70-b61e-4c67-8e9c-de8bb79e227a)
okt 23 23:56:04 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:04,167 [10401:MainThread] pykka
okt 23 23:56:04 Desktop-Ubuntu mopidy[10401]:   Registered LocalBackend (urn:uuid:c7765a70-b61e-4c67-8e9c-de8bb79e227a)
okt 23 23:56:04 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:04,166 [10401:MainThread] pykka
okt 23 23:56:04 Desktop-Ubuntu mopidy[10401]: ModuleNotFoundError: No module named 'ytmusicapi'
okt 23 23:56:04 Desktop-Ubuntu mopidy[10401]:     from ytmusicapi import YTMusic
okt 23 23:56:04 Desktop-Ubuntu mopidy[10401]:   File "/usr/local/lib/python3.10/dist-packages/mopidy_youtube/apis/youtube_music.py", line 7, in <module>
okt 23 23:56:04 Desktop-Ubuntu mopidy[10401]:     from mopidy_youtube.apis import youtube_music
okt 23 23:56:04 Desktop-Ubuntu mopidy[10401]:   File "/usr/local/lib/python3.10/dist-packages/mopidy_youtube/backend.py", line 84, in __init__
okt 23 23:56:04 Desktop-Ubuntu mopidy[10401]:     obj = cls(*args, **kwargs)
okt 23 23:56:04 Desktop-Ubuntu mopidy[10401]:   File "/usr/lib/python3/dist-packages/pykka/_actor.py", line 91, in start
okt 23 23:56:04 Desktop-Ubuntu mopidy[10401]:     backend = backend_class.start(
okt 23 23:56:04 Desktop-Ubuntu mopidy[10401]:   File "/usr/lib/python3/dist-packages/mopidy/commands.py", line 412, in start_backends
okt 23 23:56:04 Desktop-Ubuntu mopidy[10401]:     yield
okt 23 23:56:04 Desktop-Ubuntu mopidy[10401]:   File "/usr/lib/python3/dist-packages/mopidy/commands.py", line 248, in _actor_error_handling
okt 23 23:56:04 Desktop-Ubuntu mopidy[10401]: Traceback (most recent call last):
okt 23 23:56:04 Desktop-Ubuntu mopidy[10401]:   Got un-handled exception from YouTubeBackend
okt 23 23:56:04 Desktop-Ubuntu mopidy[10401]: ERROR    2022-10-23 23:56:04,164 [10401:MainThread] mopidy.commands
okt 23 23:56:04 Desktop-Ubuntu mopidy[10401]:   Starting Mopidy backends: YouTubeBackend, LocalBackend, FileBackend, M3UBackend, StreamBackend
okt 23 23:56:04 Desktop-Ubuntu mopidy[10401]: INFO     2022-10-23 23:56:04,163 [10401:MainThread] mopidy.commands
okt 23 23:56:04 Desktop-Ubuntu mopidy[10401]:   Starting Audio (urn:uuid:9bca1e50-fec2-4fe5-b068-4386fdc048e4)
okt 23 23:56:04 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:04,162 [10401:MainThread] pykka
okt 23 23:56:04 Desktop-Ubuntu mopidy[10401]:   Registered Audio (urn:uuid:9bca1e50-fec2-4fe5-b068-4386fdc048e4)
okt 23 23:56:04 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:04,162 [10401:MainThread] pykka
okt 23 23:56:04 Desktop-Ubuntu mopidy[10401]:   Starting Mopidy audio
okt 23 23:56:04 Desktop-Ubuntu mopidy[10401]: INFO     2022-10-23 23:56:04,162 [10401:MainThread] mopidy.commands
okt 23 23:56:04 Desktop-Ubuntu mopidy[10401]:   Mixer volume left unchanged
okt 23 23:56:04 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:04,161 [10401:MainThread] mopidy.commands
okt 23 23:56:04 Desktop-Ubuntu mopidy[10401]:   Starting SoftwareMixer (urn:uuid:e76db424-5fa9-45ba-9309-fb43d92554bd)
okt 23 23:56:04 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:04,160 [10401:MainThread] pykka
okt 23 23:56:04 Desktop-Ubuntu mopidy[10401]:   Registered SoftwareMixer (urn:uuid:e76db424-5fa9-45ba-9309-fb43d92554bd)
okt 23 23:56:04 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:04,160 [10401:MainThread] pykka
okt 23 23:56:04 Desktop-Ubuntu mopidy[10401]:   Starting Mopidy mixer: SoftwareMixer
okt 23 23:56:04 Desktop-Ubuntu mopidy[10401]: INFO     2022-10-23 23:56:04,160 [10401:MainThread] mopidy.commands
okt 23 23:56:04 Desktop-Ubuntu mopidy[10401]:   Available Mopidy mixers: SoftwareMixer
okt 23 23:56:04 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:04,160 [10401:MainThread] mopidy.commands
okt 23 23:56:04 Desktop-Ubuntu mopidy[10401]:   Disabled extensions: soundcloud
okt 23 23:56:04 Desktop-Ubuntu mopidy[10401]: INFO     2022-10-23 23:56:04,081 [10401:MainThread] mopidy.__main__
okt 23 23:56:04 Desktop-Ubuntu mopidy[10401]:   Enabled extensions: softwaremixer, stream, http, m3u, file, iris, local, youtube
okt 23 23:56:04 Desktop-Ubuntu mopidy[10401]: INFO     2022-10-23 23:56:04,081 [10401:MainThread] mopidy.__main__
okt 23 23:56:04 Desktop-Ubuntu mopidy[10401]:   Validating extension: stream
okt 23 23:56:04 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:04,081 [10401:MainThread] mopidy.ext
okt 23 23:56:04 Desktop-Ubuntu mopidy[10401]:   Validating extension: softwaremixer
okt 23 23:56:04 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:04,081 [10401:MainThread] mopidy.ext
okt 23 23:56:04 Desktop-Ubuntu mopidy[10401]:   Validating extension: m3u
okt 23 23:56:04 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:04,080 [10401:MainThread] mopidy.ext
okt 23 23:56:04 Desktop-Ubuntu mopidy[10401]:   Validating extension: http
okt 23 23:56:04 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:04,027 [10401:MainThread] mopidy.ext
okt 23 23:56:04 Desktop-Ubuntu mopidy[10401]:   Validating extension: file
okt 23 23:56:04 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:04,027 [10401:MainThread] mopidy.ext
okt 23 23:56:04 Desktop-Ubuntu mopidy[10401]:   Validating extension: iris
okt 23 23:56:04 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:04,010 [10401:MainThread] mopidy.ext
okt 23 23:56:03 Desktop-Ubuntu mopidy[10401]:   Validating extension: soundcloud
okt 23 23:56:03 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:03,985 [10401:MainThread] mopidy.ext
okt 23 23:56:03 Desktop-Ubuntu mopidy[10401]:   Validating extension: local
okt 23 23:56:03 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:03,963 [10401:MainThread] mopidy.ext
okt 23 23:56:03 Desktop-Ubuntu mopidy[10401]:   Validating extension: youtube
okt 23 23:56:03 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:03,912 [10401:MainThread] mopidy.ext
okt 23 23:56:03 Desktop-Ubuntu mopidy[10401]:   Ignoring config section 'ytmusic' because no matching extension was found
okt 23 23:56:03 Desktop-Ubuntu mopidy[10401]: WARNING  2022-10-23 23:56:03,910 [10401:MainThread] mopidy.config
okt 23 23:56:03 Desktop-Ubuntu mopidy[10401]:   Ignoring config section 'jukebox' because no matching extension was found
okt 23 23:56:03 Desktop-Ubuntu mopidy[10401]: WARNING  2022-10-23 23:56:03,910 [10401:MainThread] mopidy.config
okt 23 23:56:03 Desktop-Ubuntu mopidy[10401]:   Loading config from command line options
okt 23 23:56:03 Desktop-Ubuntu mopidy[10401]: INFO     2022-10-23 23:56:03,907 [10401:MainThread] mopidy.config
okt 23 23:56:03 Desktop-Ubuntu mopidy[10401]:   Loading config from file:///etc/mopidy/mopidy.conf
okt 23 23:56:03 Desktop-Ubuntu mopidy[10401]: INFO     2022-10-23 23:56:03,906 [10401:MainThread] mopidy.config
okt 23 23:56:03 Desktop-Ubuntu mopidy[10401]:   Loading config from file:///usr/share/mopidy/conf.d/mopidy.conf
okt 23 23:56:03 Desktop-Ubuntu mopidy[10401]: INFO     2022-10-23 23:56:03,906 [10401:MainThread] mopidy.config
okt 23 23:56:03 Desktop-Ubuntu mopidy[10401]:   Loading config from builtin defaults
okt 23 23:56:03 Desktop-Ubuntu mopidy[10401]: INFO     2022-10-23 23:56:03,904 [10401:MainThread] mopidy.config
okt 23 23:56:03 Desktop-Ubuntu mopidy[10401]:   Fetching passwords from your keyring failed. Any passwords stored in the keyring will not be available. (org.freedesktop.DBus.Error.NotSupported: Unable to autolaunch a dbus-daemon without a $DISPLAY for X11)
okt 23 23:56:03 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:03,904 [10401:MainThread] mopidy.config.keyring
okt 23 23:56:03 Desktop-Ubuntu mopidy[10401]:   Discovered extensions: youtube, local, soundcloud, iris, file, http, m3u, softwaremixer, stream
okt 23 23:56:03 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:03,903 [10401:MainThread] mopidy.ext
okt 23 23:56:03 Desktop-Ubuntu mopidy[10401]:   Loaded extension: Mopidy-Stream 3.3.0
okt 23 23:56:03 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:03,899 [10401:MainThread] mopidy.ext
okt 23 23:56:03 Desktop-Ubuntu mopidy[10401]:   Loading entry point: stream = mopidy.stream:Extension
okt 23 23:56:03 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:03,899 [10401:MainThread] mopidy.ext
okt 23 23:56:03 Desktop-Ubuntu mopidy[10401]:   Loaded extension: Mopidy-SoftwareMixer 3.3.0
okt 23 23:56:03 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:03,899 [10401:MainThread] mopidy.ext
okt 23 23:56:03 Desktop-Ubuntu mopidy[10401]:   Loading entry point: softwaremixer = mopidy.softwaremixer:Extension
okt 23 23:56:03 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:03,899 [10401:MainThread] mopidy.ext
okt 23 23:56:03 Desktop-Ubuntu mopidy[10401]:   Loaded extension: Mopidy-M3U 3.3.0
okt 23 23:56:03 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:03,898 [10401:MainThread] mopidy.ext
okt 23 23:56:03 Desktop-Ubuntu mopidy[10401]:   Loading entry point: m3u = mopidy.m3u:Extension
okt 23 23:56:03 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:03,898 [10401:MainThread] mopidy.ext
okt 23 23:56:03 Desktop-Ubuntu mopidy[10401]:   Loaded extension: Mopidy-HTTP 3.3.0
okt 23 23:56:03 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:03,898 [10401:MainThread] mopidy.ext
okt 23 23:56:03 Desktop-Ubuntu mopidy[10401]:   Loading entry point: http = mopidy.http:Extension
okt 23 23:56:03 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:03,898 [10401:MainThread] mopidy.ext
okt 23 23:56:03 Desktop-Ubuntu mopidy[10401]:   Loaded extension: Mopidy-File 3.3.0
okt 23 23:56:03 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:03,898 [10401:MainThread] mopidy.ext
okt 23 23:56:03 Desktop-Ubuntu mopidy[10401]:   Loading entry point: file = mopidy.file:Extension
okt 23 23:56:03 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:03,897 [10401:MainThread] mopidy.ext
okt 23 23:56:03 Desktop-Ubuntu mopidy[10401]:   Loaded extension: Mopidy-Iris 3.64.1
okt 23 23:56:03 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:03,895 [10401:MainThread] mopidy.ext
okt 23 23:56:03 Desktop-Ubuntu mopidy[10401]:   Loading entry point: iris = mopidy_iris:Extension
okt 23 23:56:03 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:03,895 [10401:MainThread] mopidy.ext
okt 23 23:56:03 Desktop-Ubuntu mopidy[10401]:   Loaded extension: Mopidy-SoundCloud 3.0.1
okt 23 23:56:03 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:03,894 [10401:MainThread] mopidy.ext
okt 23 23:56:03 Desktop-Ubuntu mopidy[10401]:   Loading entry point: soundcloud = mopidy_soundcloud:Extension
okt 23 23:56:03 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:03,893 [10401:MainThread] mopidy.ext
okt 23 23:56:03 Desktop-Ubuntu mopidy[10401]:   Loaded extension: Mopidy-Local 3.2.1
okt 23 23:56:03 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:03,893 [10401:MainThread] mopidy.ext
okt 23 23:56:03 Desktop-Ubuntu mopidy[10401]:   Loading entry point: local = mopidy_local:Extension
okt 23 23:56:03 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:03,882 [10401:MainThread] mopidy.ext
okt 23 23:56:03 Desktop-Ubuntu mopidy[10401]:   Loaded extension: Mopidy-YouTube 3.6.1
okt 23 23:56:03 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:03,881 [10401:MainThread] mopidy.ext
okt 23 23:56:03 Desktop-Ubuntu mopidy[10401]:   Loading entry point: youtube = mopidy_youtube:Extension
okt 23 23:56:03 Desktop-Ubuntu mopidy[10401]: DEBUG    2022-10-23 23:56:03,880 [10401:MainThread] mopidy.ext
okt 23 23:56:03 Desktop-Ubuntu mopidy[10401]:   Starting Mopidy 3.3.0
okt 23 23:56:03 Desktop-Ubuntu mopidy[10401]: INFO     2022-10-23 23:56:03,878 [10401:MainThread] mopidy.__main__
okt 23 23:56:03 Desktop-Ubuntu systemd[1]: Started Mopidy music server.
okt 23 23:56:03 Desktop-Ubuntu systemd[1]: Starting Mopidy music server...
okt 23 23:56:03 Desktop-Ubuntu systemd[1]: Stopped Mopidy music server.
okt 23 23:56:03 Desktop-Ubuntu systemd[1]: mopidy.service: Deactivated successfully.
okt 23 23:56:03 Desktop-Ubuntu systemd[1]: Stopping Mopidy music server...
okt 23 23:56:03 Desktop-Ubuntu mopidy[10074]:   All actors stopped.
okt 23 23:56:03 Desktop-Ubuntu mopidy[10074]: DEBUG    2022-10-23 23:56:03,410 [10074:MainThread] mopidy.internal.process
okt 23 23:56:03 Desktop-Ubuntu mopidy[10074]:   Stopped SoftwareMixer (urn:uuid:766549ca-6b32-4406-8b41-e3b4161b404a)
okt 23 23:56:03 Desktop-Ubuntu mopidy[10074]: DEBUG    2022-10-23 23:56:03,410 [10074:SoftwareMixer-1 (_actor_loop)] pykka
okt 23 23:56:03 Desktop-Ubuntu mopidy[10074]:   Unregistered SoftwareMixer (urn:uuid:766549ca-6b32-4406-8b41-e3b4161b404a)
okt 23 23:56:03 Desktop-Ubuntu mopidy[10074]: DEBUG    2022-10-23 23:56:03,410 [10074:SoftwareMixer-1 (_actor_loop)] pykka
okt 23 23:56:03 Desktop-Ubuntu mopidy[10074]:   Stopping 1 instance(s) of SoftwareMixer
okt 23 23:56:03 Desktop-Ubuntu mopidy[10074]: DEBUG    2022-10-23 23:56:03,409 [10074:MainThread] mopidy.internal.process
okt 23 23:56:03 Desktop-Ubuntu mopidy[10074]:   Stopping Mopidy mixer
okt 23 23:56:03 Desktop-Ubuntu mopidy[10074]: INFO     2022-10-23 23:56:03,409 [10074:MainThread] mopidy.commands
okt 23 23:56:03 Desktop-Ubuntu mopidy[10074]:   Stopped Audio (urn:uuid:ab164f4e-9111-4118-ac9c-a0ecb3243721)
okt 23 23:56:03 Desktop-Ubuntu mopidy[10074]: DEBUG    2022-10-23 23:56:03,409 [10074:Audio-2 (_actor_loop)] pykka
okt 23 23:56:03 Desktop-Ubuntu mopidy[10074]:   Unregistered Audio (urn:uuid:ab164f4e-9111-4118-ac9c-a0ecb3243721)
okt 23 23:56:03 Desktop-Ubuntu mopidy[10074]: DEBUG    2022-10-23 23:56:03,409 [10074:Audio-2 (_actor_loop)] pykka
okt 23 23:56:03 Desktop-Ubuntu mopidy[10074]:   Stopping 1 instance(s) of Audio
okt 23 23:56:03 Desktop-Ubuntu mopidy[10074]: DEBUG    2022-10-23 23:56:03,409 [10074:MainThread] mopidy.internal.process
okt 23 23:56:03 Desktop-Ubuntu mopidy[10074]:   Stopping Mopidy audio
okt 23 23:56:03 Desktop-Ubuntu mopidy[10074]: INFO     2022-10-23 23:56:03,408 [10074:MainThread] mopidy.commands
okt 23 23:56:03 Desktop-Ubuntu mopidy[10074]:   Stopped StreamBackend (urn:uuid:d7cd5c4a-a0b4-46c1-9bea-8dab1cc8ce08)
okt 23 23:56:03 Desktop-Ubuntu mopidy[10074]: DEBUG    2022-10-23 23:56:03,408 [10074:StreamBackend-6 (_actor_loop)] pykka
okt 23 23:56:03 Desktop-Ubuntu mopidy[10074]:   Unregistered StreamBackend (urn:uuid:d7cd5c4a-a0b4-46c1-9bea-8dab1cc8ce08)
okt 23 23:56:03 Desktop-Ubuntu mopidy[10074]: DEBUG    2022-10-23 23:56:03,408 [10074:StreamBackend-6 (_actor_loop)] pykka
okt 23 23:56:03 Desktop-Ubuntu mopidy[10074]:   Stopping 1 instance(s) of StreamBackend
okt 23 23:56:03 Desktop-Ubuntu mopidy[10074]: DEBUG    2022-10-23 23:56:03,408 [10074:MainThread] mopidy.internal.process
okt 23 23:56:03 Desktop-Ubuntu mopidy[10074]:   Stopped M3UBackend (urn:uuid:18ba4c7c-875d-4c8b-9b4a-8efdc3002870)
okt 23 23:56:03 Desktop-Ubuntu mopidy[10074]: DEBUG    2022-10-23 23:56:03,408 [10074:M3UBackend-5 (_actor_loop)] pykka
okt 23 23:56:03 Desktop-Ubuntu mopidy[10074]:   Unregistered M3UBackend (urn:uuid:18ba4c7c-875d-4c8b-9b4a-8efdc3002870)
okt 23 23:56:03 Desktop-Ubuntu mopidy[10074]: DEBUG    2022-10-23 23:56:03,408 [10074:M3UBackend-5 (_actor_loop)] pykka
okt 23 23:56:03 Desktop-Ubuntu mopidy[10074]:   Stopping 1 instance(s) of M3UBackend
okt 23 23:56:03 Desktop-Ubuntu mopidy[10074]: DEBUG    2022-10-23 23:56:03,407 [10074:MainThread] mopidy.internal.process
okt 23 23:56:03 Desktop-Ubuntu mopidy[10074]:   Stopped FileBackend (urn:uuid:6ff75c73-7a97-48f3-a94a-118c58323e82)
okt 23 23:56:03 Desktop-Ubuntu mopidy[10074]: DEBUG    2022-10-23 23:56:03,407 [10074:FileBackend-4 (_actor_loop)] pykka
okt 23 23:56:03 Desktop-Ubuntu mopidy[10074]:   Unregistered FileBackend (urn:uuid:6ff75c73-7a97-48f3-a94a-118c58323e82)
okt 23 23:56:03 Desktop-Ubuntu mopidy[10074]: DEBUG    2022-10-23 23:56:03,407 [10074:FileBackend-4 (_actor_loop)] pykka
okt 23 23:56:03 Desktop-Ubuntu mopidy[10074]:   Stopping 1 instance(s) of FileBackend
okt 23 23:56:03 Desktop-Ubuntu mopidy[10074]: DEBUG    2022-10-23 23:56:03,407 [10074:MainThread] mopidy.internal.process
okt 23 23:56:03 Desktop-Ubuntu mopidy[10074]:   Stopped LocalBackend (urn:uuid:fa4200cf-3eed-4cd7-b487-a792440bd758)
okt 23 23:56:03 Desktop-Ubuntu mopidy[10074]: DEBUG    2022-10-23 23:56:03,407 [10074:LocalBackend-3 (_actor_loop)] pykka
okt 23 23:56:03 Desktop-Ubuntu mopidy[10074]:   Unregistered LocalBackend (urn:uuid:fa4200cf-3eed-4cd7-b487-a792440bd758)
okt 23 23:56:03 Desktop-Ubuntu mopidy[10074]: DEBUG    2022-10-23 23:56:03,407 [10074:LocalBackend-3 (_actor_loop)] pykka
okt 23 23:56:03 Desktop-Ubuntu mopidy[10074]:   Stopping 1 instance(s) of LocalBackend
okt 23 23:56:03 Desktop-Ubuntu mopidy[10074]: DEBUG    2022-10-23 23:56:03,407 [10074:MainThread] mopidy.internal.process
okt 23 23:56:03 Desktop-Ubuntu mopidy[10074]:   Stopping 0 instance(s) of YouTubeBackend
okt 23 23:56:03 Desktop-Ubuntu mopidy[10074]: DEBUG    2022-10-23 23:56:03,406 [10074:MainThread] mopidy.internal.process
okt 23 23:56:03 Desktop-Ubuntu mopidy[10074]:   Stopping Mopidy backends
okt 23 23:56:03 Desktop-Ubuntu mopidy[10074]: INFO     2022-10-23 23:56:03,406 [10074:MainThread] mopidy.commands
okt 23 23:56:03 Desktop-Ubuntu mopidy[10074]:   Stopped Core (urn:uuid:cbd08166-2af0-4bab-9a21-b96f7dbc0ffb)
okt 23 23:56:03 Desktop-Ubuntu mopidy[10074]: DEBUG    2022-10-23 23:56:03,406 [10074:Core-7 (_actor_loop)] pykka
okt 23 23:56:03 Desktop-Ubuntu mopidy[10074]:   Unregistered Core (urn:uuid:cbd08166-2af0-4bab-9a21-b96f7dbc0ffb)
okt 23 23:56:03 Desktop-Ubuntu mopidy[10074]: DEBUG    2022-10-23 23:56:03,406 [10074:Core-7 (_actor_loop)] pykka
okt 23 23:56:03 Desktop-Ubuntu mopidy[10074]:   Stopping 1 instance(s) of Core
okt 23 23:56:03 Desktop-Ubuntu mopidy[10074]: DEBUG    2022-10-23 23:56:03,406 [10074:MainThread] mopidy.internal.process
okt 23 23:56:03 Desktop-Ubuntu mopidy[10074]:   Stopping Mopidy core
okt 23 23:56:03 Desktop-Ubuntu mopidy[10074]: INFO     2022-10-23 23:56:03,406 [10074:MainThread] mopidy.commands
okt 23 23:56:03 Desktop-Ubuntu mopidy[10074]:   Stopped HTTP server
okt 23 23:56:03 Desktop-Ubuntu mopidy[10074]: DEBUG    2022-10-23 23:56:03,406 [10074:HttpServer] mopidy.http.actor
okt 23 23:56:03 Desktop-Ubuntu mopidy[10074]:   Stopping HTTP server
okt 23 23:56:03 Desktop-Ubuntu mopidy[10074]: DEBUG    2022-10-23 23:56:03,405 [10074:HttpFrontend-12 (_actor_loop)] mopidy.http.actor
okt 23 23:56:03 Desktop-Ubuntu mopidy[10074]:   Zeroconf service 'Mopidy HTTP server on Desktop-Ubuntu' (_mopidy-http._tcp at []:6680): Unpublished
okt 23 23:56:03 Desktop-Ubuntu mopidy[10074]: DEBUG    2022-10-23 23:56:03,405 [10074:HttpFrontend-12 (_actor_loop)] mopidy.zeroconf
okt 23 23:56:03 Desktop-Ubuntu mopidy[10074]:   Zeroconf service 'Mopidy HTTP server on Desktop-Ubuntu' (_http._tcp at []:6680): Unpublished
okt 23 23:56:03 Desktop-Ubuntu mopidy[10074]: DEBUG    2022-10-23 23:56:03,405 [10074:HttpFrontend-12 (_actor_loop)] mopidy.zeroconf
okt 23 23:56:03 Desktop-Ubuntu mopidy[10074]:   Stopped HttpFrontend (urn:uuid:b2ff8abb-cecb-4835-a965-9a122760617f)
okt 23 23:56:03 Desktop-Ubuntu mopidy[10074]: DEBUG    2022-10-23 23:56:03,404 [10074:HttpFrontend-12 (_actor_loop)] pykka
okt 23 23:56:03 Desktop-Ubuntu mopidy[10074]:   Unregistered HttpFrontend (urn:uuid:b2ff8abb-cecb-4835-a965-9a122760617f)
okt 23 23:56:03 Desktop-Ubuntu mopidy[10074]: DEBUG    2022-10-23 23:56:03,404 [10074:HttpFrontend-12 (_actor_loop)] pykka
okt 23 23:56:03 Desktop-Ubuntu mopidy[10074]:   Stopping 1 instance(s) of HttpFrontend
okt 23 23:56:03 Desktop-Ubuntu mopidy[10074]: DEBUG    2022-10-23 23:56:03,404 [10074:MainThread] mopidy.internal.process
okt 23 23:56:03 Desktop-Ubuntu mopidy[10074]:   Stopping Iris
okt 23 23:56:03 Desktop-Ubuntu mopidy[10074]: INFO     2022-10-23 23:56:03,404 [10074:IrisFrontend-10 (_actor_loop)] mopidy_iris.core
okt 23 23:56:03 Desktop-Ubuntu mopidy[10074]:   Stopped IrisFrontend (urn:uuid:ff97b094-f35d-4d67-99a9-f294784c708d)
okt 23 23:56:03 Desktop-Ubuntu mopidy[10074]: DEBUG    2022-10-23 23:56:03,403 [10074:IrisFrontend-10 (_actor_loop)] pykka
okt 23 23:56:03 Desktop-Ubuntu mopidy[10074]:   Unregistered IrisFrontend (urn:uuid:ff97b094-f35d-4d67-99a9-f294784c708d)
okt 23 23:56:03 Desktop-Ubuntu mopidy[10074]: DEBUG    2022-10-23 23:56:03,403 [10074:IrisFrontend-10 (_actor_loop)] pykka
okt 23 23:56:03 Desktop-Ubuntu mopidy[10074]:   Stopping 1 instance(s) of IrisFrontend
okt 23 23:56:03 Desktop-Ubuntu mopidy[10074]: DEBUG    2022-10-23 23:56:03,403 [10074:MainThread] mopidy.internal.process
okt 23 23:56:03 Desktop-Ubuntu mopidy[10074]:   Stopped YouTubeCoreListener (urn:uuid:3f6a3164-ea2a-416c-9fcc-95d09de6d503)
okt 23 23:56:03 Desktop-Ubuntu mopidy[10074]: DEBUG    2022-10-23 23:56:03,403 [10074:YouTubeCoreListener-9 (_actor_loop)] pykka
okt 23 23:56:03 Desktop-Ubuntu mopidy[10074]:   Unregistered YouTubeCoreListener (urn:uuid:3f6a3164-ea2a-416c-9fcc-95d09de6d503)
okt 23 23:56:03 Desktop-Ubuntu mopidy[10074]: DEBUG    2022-10-23 23:56:03,403 [10074:YouTubeCoreListener-9 (_actor_loop)] pykka
okt 23 23:56:03 Desktop-Ubuntu mopidy[10074]:   Stopping 1 instance(s) of YouTubeCoreListener
okt 23 23:56:03 Desktop-Ubuntu mopidy[10074]: DEBUG    2022-10-23 23:56:03,403 [10074:MainThread] mopidy.internal.process
okt 23 23:56:03 Desktop-Ubuntu mopidy[10074]:   Stopped YouTubeAutoplayer (urn:uuid:11d2a757-ccaa-4904-8e15-bb5ea1b19524)
okt 23 23:56:03 Desktop-Ubuntu mopidy[10074]: DEBUG    2022-10-23 23:56:03,403 [10074:YouTubeAutoplayer-8 (_actor_loop)] pykka
okt 23 23:56:03 Desktop-Ubuntu mopidy[10074]:   Unregistered YouTubeAutoplayer (urn:uuid:11d2a757-ccaa-4904-8e15-bb5ea1b19524)
okt 23 23:56:03 Desktop-Ubuntu mopidy[10074]: DEBUG    2022-10-23 23:56:03,402 [10074:YouTubeAutoplayer-8 (_actor_loop)] pykka
okt 23 23:56:03 Desktop-Ubuntu mopidy[10074]:   Stopping 1 instance(s) of YouTubeAutoplayer
okt 23 23:56:03 Desktop-Ubuntu mopidy[10074]: DEBUG    2022-10-23 23:56:03,402 [10074:MainThread] mopidy.internal.process
okt 23 23:56:03 Desktop-Ubuntu mopidy[10074]:   Stopping Mopidy frontends
okt 23 23:56:03 Desktop-Ubuntu mopidy[10074]: INFO     2022-10-23 23:56:03,402 [10074:MainThread] mopidy.commands
okt 23 23:56:03 Desktop-Ubuntu mopidy[10074]:   GLib mainloop got SIGTERM. Exiting...
okt 23 23:56:03 Desktop-Ubuntu mopidy[10074]: INFO     2022-10-23 23:56:03,402 [10074:MainThread] mopidy.commands
okt 23 23:55:01 Desktop-Ubuntu mopidy[10074]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 26, "result": [{"__model__": "Ref", "uri": "local:directory?type=album", "name": "Albums", "type": "directory"}, {"__model__": "Ref", "uri": "local:directory?type=artist", "name": "Artists", "type": "directory"}, {"__model__": "Ref", "uri": "local:directory?type=artist&role=composer", "name": "Composers", "type": "directory"}, {"__model__": "Ref", "uri": "local:directory?type=genre", "name": "Genres", "type": "directory"}, {"__model__": "Ref", "uri": "local:directory?type=artist&role=performer", "name": "Performers", "type": "directory"}, {"__model__": "Ref", "uri": "local:directory?type=date&format=%25Y", "name": "Release Years", "type": "directory"}, {"__model__": "Ref", "uri": "local:directory?type=track", "name": "Tracks", "type": "directory"}, {"__model__": "Ref", "uri": "local:directory?max-age=604800", "name": "Last Week\'s Updates", "type": "directory"}, {"__model__": "Ref", "uri": "local:directory?max-age=2592000", "name": "Last Month\'s Updates", "type": "directory"}]}'
okt 23 23:55:01 Desktop-Ubuntu mopidy[10074]: DEBUG    2022-10-23 23:55:01,124 [10074:HttpServer] mopidy.http.handlers
okt 23 23:55:01 Desktop-Ubuntu mopidy[10074]:   Received WebSocket message from 127.0.0.1: '{"method":"core.library.browse","params":{"uri":"local:directory"},"jsonrpc":"2.0","id":26}'
okt 23 23:55:01 Desktop-Ubuntu mopidy[10074]: DEBUG    2022-10-23 23:55:01,123 [10074:HttpServer] mopidy.http.handlers
okt 23 23:55:01 Desktop-Ubuntu mopidy[10074]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 25, "result": {"local:directory": []}}'
okt 23 23:55:01 Desktop-Ubuntu mopidy[10074]: DEBUG    2022-10-23 23:55:01,072 [10074:HttpServer] mopidy.http.handlers
okt 23 23:55:01 Desktop-Ubuntu mopidy[10074]:   Lookup error for local:directory: Invalid lookup URI
okt 23 23:55:01 Desktop-Ubuntu mopidy[10074]: ERROR    2022-10-23 23:55:01,071 [10074:LocalBackend-3 (_actor_loop)] mopidy_local.library
okt 23 23:55:01 Desktop-Ubuntu mopidy[10074]:   Received WebSocket message from 127.0.0.1: '{"method":"core.library.lookup","params":{"uris":["local:directory"]},"jsonrpc":"2.0","id":25}'
okt 23 23:55:01 Desktop-Ubuntu mopidy[10074]: DEBUG    2022-10-23 23:55:01,071 [10074:HttpServer] mopidy.http.handlers
okt 23 23:54:59 Desktop-Ubuntu mopidy[10074]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 24, "result": []}'
okt 23 23:54:59 Desktop-Ubuntu mopidy[10074]: DEBUG    2022-10-23 23:54:59,853 [10074:HttpServer] mopidy.http.handlers
okt 23 23:54:59 Desktop-Ubuntu mopidy[10074]:   Error browsing local:directory?type=artist: no such table: artist
okt 23 23:54:59 Desktop-Ubuntu mopidy[10074]: ERROR    2022-10-23 23:54:59,852 [10074:LocalBackend-3 (_actor_loop)] mopidy_local.library
okt 23 23:54:59 Desktop-Ubuntu mopidy[10074]:     
okt 23 23:54:59 Desktop-Ubuntu mopidy[10074]:      ORDER BY type, name COLLATE NOCASE
okt 23 23:54:59 Desktop-Ubuntu mopidy[10074]:             )
okt 23 23:54:59 Desktop-Ubuntu mopidy[10074]:                 SELECT * FROM album WHERE album.artists = artist.uri
okt 23 23:54:59 Desktop-Ubuntu mopidy[10074]:             ) OR EXISTS (
okt 23 23:54:59 Desktop-Ubuntu mopidy[10074]:                 SELECT * FROM track WHERE track.artists = artist.uri
okt 23 23:54:59 Desktop-Ubuntu mopidy[10074]:      WHERE EXISTS (
okt 23 23:54:59 Desktop-Ubuntu mopidy[10074]:       FROM artist
okt 23 23:54:59 Desktop-Ubuntu mopidy[10074]:     SELECT 'artist' AS type, uri AS uri, name AS name
okt 23 23:54:59 Desktop-Ubuntu mopidy[10074]:   SQLite browse query []:
okt 23 23:54:59 Desktop-Ubuntu mopidy[10074]: DEBUG    2022-10-23 23:54:59,851 [10074:LocalBackend-3 (_actor_loop)] mopidy_local.schema
okt 23 23:54:59 Desktop-Ubuntu mopidy[10074]:   Received WebSocket message from 127.0.0.1: '{"method":"core.library.browse","params":{"uri":"local:directory?type=artist"},"jsonrpc":"2.0","id":24}'
okt 23 23:54:59 Desktop-Ubuntu mopidy[10074]: DEBUG    2022-10-23 23:54:59,850 [10074:HttpServer] mopidy.http.handlers
okt 23 23:54:59 Desktop-Ubuntu mopidy[10074]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 23, "result": {"local:directory?type=artist": []}}'
okt 23 23:54:59 Desktop-Ubuntu mopidy[10074]: DEBUG    2022-10-23 23:54:59,796 [10074:HttpServer] mopidy.http.handlers
okt 23 23:54:59 Desktop-Ubuntu mopidy[10074]:   Lookup error for local:directory?type=artist: Invalid lookup URI
okt 23 23:54:59 Desktop-Ubuntu mopidy[10074]: ERROR    2022-10-23 23:54:59,796 [10074:LocalBackend-3 (_actor_loop)] mopidy_local.library
okt 23 23:54:59 Desktop-Ubuntu mopidy[10074]:   Received WebSocket message from 127.0.0.1: '{"method":"core.library.lookup","params":{"uris":["local:directory?type=artist"]},"jsonrpc":"2.0","id":23}'
okt 23 23:54:59 Desktop-Ubuntu mopidy[10074]: DEBUG    2022-10-23 23:54:59,795 [10074:HttpServer] mopidy.http.handlers
okt 23 23:54:59 Desktop-Ubuntu mopidy[10074]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 22, "result": [{"__model__": "Ref", "uri": "local:directory?type=album", "name": "Albums", "type": "directory"}, {"__model__": "Ref", "uri": "local:directory?type=artist", "name": "Artists", "type": "directory"}, {"__model__": "Ref", "uri": "local:directory?type=artist&role=composer", "name": "Composers", "type": "directory"}, {"__model__": "Ref", "uri": "local:directory?type=genre", "name": "Genres", "type": "directory"}, {"__model__": "Ref", "uri": "local:directory?type=artist&role=performer", "name": "Performers", "type": "directory"}, {"__model__": "Ref", "uri": "local:directory?type=date&format=%25Y", "name": "Release Years", "type": "directory"}, {"__model__": "Ref", "uri": "local:directory?type=track", "name": "Tracks", "type": "directory"}, {"__model__": "Ref", "uri": "local:directory?max-age=604800", "name": "Last Week\'s Updates", "type": "directory"}, {"__model__": "Ref", "uri": "local:directory?max-age=2592000", "name": "Last Month\'s Updates", "type": "directory"}]}'
okt 23 23:54:59 Desktop-Ubuntu mopidy[10074]: DEBUG    2022-10-23 23:54:59,061 [10074:HttpServer] mopidy.http.handlers
okt 23 23:54:59 Desktop-Ubuntu mopidy[10074]:   Received WebSocket message from 127.0.0.1: '{"method":"core.library.browse","params":{"uri":"local:directory"},"jsonrpc":"2.0","id":22}'
okt 23 23:54:59 Desktop-Ubuntu mopidy[10074]: DEBUG    2022-10-23 23:54:59,060 [10074:HttpServer] mopidy.http.handlers
okt 23 23:54:59 Desktop-Ubuntu mopidy[10074]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 21, "result": {"local:directory": []}}'
okt 23 23:54:59 Desktop-Ubuntu mopidy[10074]: DEBUG    2022-10-23 23:54:59,005 [10074:HttpServer] mopidy.http.handlers
okt 23 23:54:59 Desktop-Ubuntu mopidy[10074]:   Lookup error for local:directory: Invalid lookup URI
okt 23 23:54:59 Desktop-Ubuntu mopidy[10074]: ERROR    2022-10-23 23:54:59,004 [10074:LocalBackend-3 (_actor_loop)] mopidy_local.library
okt 23 23:54:59 Desktop-Ubuntu mopidy[10074]:   Received WebSocket message from 127.0.0.1: '{"method":"core.library.lookup","params":{"uris":["local:directory"]},"jsonrpc":"2.0","id":21}'
okt 23 23:54:59 Desktop-Ubuntu mopidy[10074]: DEBUG    2022-10-23 23:54:59,003 [10074:HttpServer] mopidy.http.handlers
okt 23 23:54:57 Desktop-Ubuntu mopidy[10074]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 20, "result": []}'
okt 23 23:54:57 Desktop-Ubuntu mopidy[10074]: DEBUG    2022-10-23 23:54:57,580 [10074:HttpServer] mopidy.http.handlers
okt 23 23:54:57 Desktop-Ubuntu mopidy[10074]:   Error browsing local:directory?max-age=604800: no such table: track
okt 23 23:54:57 Desktop-Ubuntu mopidy[10074]: ERROR    2022-10-23 23:54:57,579 [10074:LocalBackend-3 (_actor_loop)] mopidy_local.library
okt 23 23:54:57 Desktop-Ubuntu mopidy[10074]:     
okt 23 23:54:57 Desktop-Ubuntu mopidy[10074]:      ORDER BY type, name COLLATE NOCASE
okt 23 23:54:57 Desktop-Ubuntu mopidy[10074]:      GROUP BY coalesce(album.uri, track.uri)
okt 23 23:54:57 Desktop-Ubuntu mopidy[10074]:      WHERE track.last_modified >= (strftime('%s', 'now') - ?) * 1000
okt 23 23:54:57 Desktop-Ubuntu mopidy[10074]:       FROM track LEFT OUTER JOIN album ON track.album = album.uri
okt 23 23:54:57 Desktop-Ubuntu mopidy[10074]:            coalesce(album.name, track.name) AS name
okt 23 23:54:57 Desktop-Ubuntu mopidy[10074]:            coalesce(album.uri, track.uri) AS uri,
okt 23 23:54:57 Desktop-Ubuntu mopidy[10074]:     SELECT CASE WHEN album.uri IS NULL THEN 'track' ELSE 'album' END AS type,
okt 23 23:54:57 Desktop-Ubuntu mopidy[10074]:   SQLite browse query ['604800']:
okt 23 23:54:57 Desktop-Ubuntu mopidy[10074]: DEBUG    2022-10-23 23:54:57,578 [10074:LocalBackend-3 (_actor_loop)] mopidy_local.schema
okt 23 23:54:57 Desktop-Ubuntu mopidy[10074]:   Received WebSocket message from 127.0.0.1: '{"method":"core.library.browse","params":{"uri":"local:directory?max-age=604800"},"jsonrpc":"2.0","id":20}'
okt 23 23:54:57 Desktop-Ubuntu mopidy[10074]: DEBUG    2022-10-23 23:54:57,577 [10074:HttpServer] mopidy.http.handlers
okt 23 23:54:57 Desktop-Ubuntu mopidy[10074]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 19, "result": {"local:directory?max-age=604800": []}}'
okt 23 23:54:57 Desktop-Ubuntu mopidy[10074]: DEBUG    2022-10-23 23:54:57,525 [10074:HttpServer] mopidy.http.handlers
okt 23 23:54:57 Desktop-Ubuntu mopidy[10074]:   Lookup error for local:directory?max-age=604800: Invalid lookup URI
okt 23 23:54:57 Desktop-Ubuntu mopidy[10074]: ERROR    2022-10-23 23:54:57,524 [10074:LocalBackend-3 (_actor_loop)] mopidy_local.library
okt 23 23:54:57 Desktop-Ubuntu mopidy[10074]:   Received WebSocket message from 127.0.0.1: '{"method":"core.library.lookup","params":{"uris":["local:directory?max-age=604800"]},"jsonrpc":"2.0","id":19}'
okt 23 23:54:57 Desktop-Ubuntu mopidy[10074]: DEBUG    2022-10-23 23:54:57,524 [10074:HttpServer] mopidy.http.handlers
okt 23 23:54:55 Desktop-Ubuntu mopidy[10074]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 18, "result": [{"__model__": "Ref", "uri": "local:directory?type=album", "name": "Albums", "type": "directory"}, {"__model__": "Ref", "uri": "local:directory?type=artist", "name": "Artists", "type": "directory"}, {"__model__": "Ref", "uri": "local:directory?type=artist&role=composer", "name": "Composers", "type": "directory"}, {"__model__": "Ref", "uri": "local:directory?type=genre", "name": "Genres", "type": "directory"}, {"__model__": "Ref", "uri": "local:directory?type=artist&role=performer", "name": "Performers", "type": "directory"}, {"__model__": "Ref", "uri": "local:directory?type=date&format=%25Y", "name": "Release Years", "type": "directory"}, {"__model__": "Ref", "uri": "local:directory?type=track", "name": "Tracks", "type": "directory"}, {"__model__": "Ref", "uri": "local:directory?max-age=604800", "name": "Last Week\'s Updates", "type": "directory"}, {"__model__": "Ref", "uri": "local:directory?max-age=2592000", "name": "Last Month\'s Updates", "type": "directory"}]}'
okt 23 23:54:55 Desktop-Ubuntu mopidy[10074]: DEBUG    2022-10-23 23:54:55,987 [10074:HttpServer] mopidy.http.handlers
okt 23 23:54:55 Desktop-Ubuntu mopidy[10074]:   Received WebSocket message from 127.0.0.1: '{"method":"core.library.browse","params":{"uri":"local:directory"},"jsonrpc":"2.0","id":18}'
okt 23 23:54:55 Desktop-Ubuntu mopidy[10074]: DEBUG    2022-10-23 23:54:55,986 [10074:HttpServer] mopidy.http.handlers
okt 23 23:54:55 Desktop-Ubuntu mopidy[10074]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 17, "result": {"local:directory": []}}'
okt 23 23:54:55 Desktop-Ubuntu mopidy[10074]: DEBUG    2022-10-23 23:54:55,924 [10074:HttpServer] mopidy.http.handlers
okt 23 23:54:55 Desktop-Ubuntu mopidy[10074]:   Lookup error for local:directory: Invalid lookup URI
okt 23 23:54:55 Desktop-Ubuntu mopidy[10074]: ERROR    2022-10-23 23:54:55,923 [10074:LocalBackend-3 (_actor_loop)] mopidy_local.library
okt 23 23:54:55 Desktop-Ubuntu mopidy[10074]:   Received WebSocket message from 127.0.0.1: '{"method":"core.library.lookup","params":{"uris":["local:directory"]},"jsonrpc":"2.0","id":17}'
okt 23 23:54:55 Desktop-Ubuntu mopidy[10074]: DEBUG    2022-10-23 23:54:55,923 [10074:HttpServer] mopidy.http.handlers
okt 23 23:54:54 Desktop-Ubuntu mopidy[10074]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 16, "result": []}'
okt 23 23:54:54 Desktop-Ubuntu mopidy[10074]: DEBUG    2022-10-23 23:54:54,405 [10074:HttpServer] mopidy.http.handlers
okt 23 23:54:54 Desktop-Ubuntu mopidy[10074]:   Error browsing local:directory?max-age=2592000: no such table: track
okt 23 23:54:54 Desktop-Ubuntu mopidy[10074]: ERROR    2022-10-23 23:54:54,404 [10074:LocalBackend-3 (_actor_loop)] mopidy_local.library
okt 23 23:54:54 Desktop-Ubuntu mopidy[10074]:     
okt 23 23:54:54 Desktop-Ubuntu mopidy[10074]:      ORDER BY type, name COLLATE NOCASE
okt 23 23:54:54 Desktop-Ubuntu mopidy[10074]:      GROUP BY coalesce(album.uri, track.uri)
okt 23 23:54:54 Desktop-Ubuntu mopidy[10074]:      WHERE track.last_modified >= (strftime('%s', 'now') - ?) * 1000
okt 23 23:54:54 Desktop-Ubuntu mopidy[10074]:       FROM track LEFT OUTER JOIN album ON track.album = album.uri
okt 23 23:54:54 Desktop-Ubuntu mopidy[10074]:            coalesce(album.name, track.name) AS name
okt 23 23:54:54 Desktop-Ubuntu mopidy[10074]:            coalesce(album.uri, track.uri) AS uri,
okt 23 23:54:54 Desktop-Ubuntu mopidy[10074]:     SELECT CASE WHEN album.uri IS NULL THEN 'track' ELSE 'album' END AS type,
okt 23 23:54:54 Desktop-Ubuntu mopidy[10074]:   SQLite browse query ['2592000']:
okt 23 23:54:54 Desktop-Ubuntu mopidy[10074]: DEBUG    2022-10-23 23:54:54,404 [10074:LocalBackend-3 (_actor_loop)] mopidy_local.schema
okt 23 23:54:54 Desktop-Ubuntu mopidy[10074]:   Received WebSocket message from 127.0.0.1: '{"method":"core.library.browse","params":{"uri":"local:directory?max-age=2592000"},"jsonrpc":"2.0","id":16}'
okt 23 23:54:54 Desktop-Ubuntu mopidy[10074]: DEBUG    2022-10-23 23:54:54,403 [10074:HttpServer] mopidy.http.handlers
okt 23 23:54:54 Desktop-Ubuntu mopidy[10074]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 15, "result": {"local:directory?max-age=2592000": []}}'
okt 23 23:54:54 Desktop-Ubuntu mopidy[10074]: DEBUG    2022-10-23 23:54:54,348 [10074:HttpServer] mopidy.http.handlers
okt 23 23:54:54 Desktop-Ubuntu mopidy[10074]:   Lookup error for local:directory?max-age=2592000: Invalid lookup URI
okt 23 23:54:54 Desktop-Ubuntu mopidy[10074]: ERROR    2022-10-23 23:54:54,348 [10074:LocalBackend-3 (_actor_loop)] mopidy_local.library
okt 23 23:54:54 Desktop-Ubuntu mopidy[10074]:   Received WebSocket message from 127.0.0.1: '{"method":"core.library.lookup","params":{"uris":["local:directory?max-age=2592000"]},"jsonrpc":"2.0","id":15}'
okt 23 23:54:54 Desktop-Ubuntu mopidy[10074]: DEBUG    2022-10-23 23:54:54,347 [10074:HttpServer] mopidy.http.handlers
okt 23 23:54:49 Desktop-Ubuntu mopidy[10074]:   200 GET /iris/library/browse/Local%20media/null (127.0.0.1) 0.93ms
okt 23 23:54:49 Desktop-Ubuntu mopidy[10074]: INFO     2022-10-23 23:54:49,600 [10074:HttpServer] tornado.access
okt 23 23:54:49 Desktop-Ubuntu mopidy[10074]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 14, "result": [{"__model__": "Ref", "uri": "local:directory?type=album", "name": "Albums", "type": "directory"}, {"__model__": "Ref", "uri": "local:directory?type=artist", "name": "Artists", "type": "directory"}, {"__model__": "Ref", "uri": "local:directory?type=artist&role=composer", "name": "Composers", "type": "directory"}, {"__model__": "Ref", "uri": "local:directory?type=genre", "name": "Genres", "type": "directory"}, {"__model__": "Ref", "uri": "local:directory?type=artist&role=performer", "name": "Performers", "type": "directory"}, {"__model__": "Ref", "uri": "local:directory?type=date&format=%25Y", "name": "Release Years", "type": "directory"}, {"__model__": "Ref", "uri": "local:directory?type=track", "name": "Tracks", "type": "directory"}, {"__model__": "Ref", "uri": "local:directory?max-age=604800", "name": "Last Week\'s Updates", "type": "directory"}, {"__model__": "Ref", "uri": "local:directory?max-age=2592000", "name": "Last Month\'s Updates", "type": "directory"}]}'
okt 23 23:54:49 Desktop-Ubuntu mopidy[10074]: DEBUG    2022-10-23 23:54:49,466 [10074:HttpServer] mopidy.http.handlers
okt 23 23:54:49 Desktop-Ubuntu mopidy[10074]:   Received WebSocket message from 127.0.0.1: '{"method":"core.library.browse","params":{"uri":"local:directory"},"jsonrpc":"2.0","id":14}'
okt 23 23:54:49 Desktop-Ubuntu mopidy[10074]: DEBUG    2022-10-23 23:54:49,466 [10074:HttpServer] mopidy.http.handlers
okt 23 23:54:49 Desktop-Ubuntu mopidy[10074]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 13, "result": {"local:directory": []}}'
okt 23 23:54:49 Desktop-Ubuntu mopidy[10074]: DEBUG    2022-10-23 23:54:49,389 [10074:HttpServer] mopidy.http.handlers
okt 23 23:54:49 Desktop-Ubuntu mopidy[10074]:   Lookup error for local:directory: Invalid lookup URI
okt 23 23:54:49 Desktop-Ubuntu mopidy[10074]: ERROR    2022-10-23 23:54:49,388 [10074:LocalBackend-3 (_actor_loop)] mopidy_local.library
okt 23 23:54:49 Desktop-Ubuntu mopidy[10074]:   Received WebSocket message from 127.0.0.1: '{"method":"core.library.lookup","params":{"uris":["local:directory"]},"jsonrpc":"2.0","id":13}'
okt 23 23:54:49 Desktop-Ubuntu mopidy[10074]: DEBUG    2022-10-23 23:54:49,387 [10074:HttpServer] mopidy.http.handlers
okt 23 23:54:48 Desktop-Ubuntu mopidy[10074]:   304 GET /iris/assets/backgrounds/browse-folders.jpg (127.0.0.1) 0.79ms
okt 23 23:54:48 Desktop-Ubuntu mopidy[10074]: INFO     2022-10-23 23:54:48,459 [10074:HttpServer] tornado.access
okt 23 23:54:48 Desktop-Ubuntu mopidy[10074]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 12, "result": [{"__model__": "Ref", "uri": "file:///var/lib/mopidy", "name": "Files", "type": "directory"}, {"__model__": "Ref", "uri": "local:directory", "name": "Local media", "type": "directory"}]}'
okt 23 23:54:48 Desktop-Ubuntu mopidy[10074]: DEBUG    2022-10-23 23:54:48,449 [10074:HttpServer] mopidy.http.handlers
okt 23 23:54:48 Desktop-Ubuntu mopidy[10074]:   Received WebSocket message from 127.0.0.1: '{"method":"core.library.browse","params":{"uri":null},"jsonrpc":"2.0","id":12}'
okt 23 23:54:48 Desktop-Ubuntu mopidy[10074]: DEBUG    2022-10-23 23:54:48,443 [10074:HttpServer] mopidy.http.handlers
okt 23 23:54:47 Desktop-Ubuntu mopidy[10074]:   {'id': 166656208732046, 'jsonrpc': '2.0', 'method': 'get_version', 'result': {'version': {'current': '3.64.1', 'latest': '3.64.1', 'is_root': False, 'upgrade_available': False}}, 'recipient': 'V9ZASCBSK4RJ'}
okt 23 23:54:47 Desktop-Ubuntu mopidy[10074]: DEBUG    2022-10-23 23:54:47,436 [10074:HttpServer] mopidy_iris.core
okt 23 23:54:47 Desktop-Ubuntu mopidy[10074]:   Iris websocket message received: {"jsonrpc":"2.0","id":166656208732046,"method":"get_version"}
okt 23 23:54:47 Desktop-Ubuntu mopidy[10074]: DEBUG    2022-10-23 23:54:47,321 [10074:HttpServer] mopidy_iris.handlers
okt 23 23:54:46 Desktop-Ubuntu mopidy[10074]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 11, "result": null}'
okt 23 23:54:46 Desktop-Ubuntu mopidy[10074]: DEBUG    2022-10-23 23:54:46,911 [10074:HttpServer] mopidy.http.handlers
okt 23 23:54:46 Desktop-Ubuntu mopidy[10074]:   Received WebSocket message from 127.0.0.1: '{"method":"core.playback.get_stream_title","params":{},"jsonrpc":"2.0","id":11}'
okt 23 23:54:46 Desktop-Ubuntu mopidy[10074]: DEBUG    2022-10-23 23:54:46,911 [10074:HttpServer] mopidy.http.handlers
okt 23 23:54:46 Desktop-Ubuntu mopidy[10074]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 10, "result": ["file", "http", "https", "local", "m3u", "rtsp"]}'
okt 23 23:54:46 Desktop-Ubuntu mopidy[10074]: DEBUG    2022-10-23 23:54:46,911 [10074:HttpServer] mopidy.http.handlers
okt 23 23:54:46 Desktop-Ubuntu mopidy[10074]:   Received WebSocket message from 127.0.0.1: '{"method":"core.get_uri_schemes","params":{},"jsonrpc":"2.0","id":10}'
okt 23 23:54:46 Desktop-Ubuntu mopidy[10074]: DEBUG    2022-10-23 23:54:46,910 [10074:HttpServer] mopidy.http.handlers
okt 23 23:54:46 Desktop-Ubuntu mopidy[10074]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 9, "result": 0}'
okt 23 23:54:46 Desktop-Ubuntu mopidy[10074]: DEBUG    2022-10-23 23:54:46,910 [10074:HttpServer] mopidy.http.handlers
okt 23 23:54:46 Desktop-Ubuntu mopidy[10074]:   Received WebSocket message from 127.0.0.1: '{"method":"core.playback.get_time_position","params":{},"jsonrpc":"2.0","id":9}'
okt 23 23:54:46 Desktop-Ubuntu mopidy[10074]: DEBUG    2022-10-23 23:54:46,909 [10074:HttpServer] mopidy.http.handlers
okt 23 23:54:46 Desktop-Ubuntu mopidy[10074]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 8, "result": []}'
okt 23 23:54:46 Desktop-Ubuntu mopidy[10074]: DEBUG    2022-10-23 23:54:46,909 [10074:HttpServer] mopidy.http.handlers
okt 23 23:54:46 Desktop-Ubuntu mopidy[10074]:   Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_tl_tracks","params":{},"jsonrpc":"2.0","id":8}'
okt 23 23:54:46 Desktop-Ubuntu mopidy[10074]: DEBUG    2022-10-23 23:54:46,908 [10074:HttpServer] mopidy.http.handlers
okt 23 23:54:46 Desktop-Ubuntu mopidy[10074]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 7, "result": false}'
okt 23 23:54:46 Desktop-Ubuntu mopidy[10074]: DEBUG    2022-10-23 23:54:46,908 [10074:HttpServer] mopidy.http.handlers
okt 23 23:54:46 Desktop-Ubuntu mopidy[10074]:   Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_repeat","params":{},"jsonrpc":"2.0","id":7}'
okt 23 23:54:46 Desktop-Ubuntu mopidy[10074]: DEBUG    2022-10-23 23:54:46,907 [10074:HttpServer] mopidy.http.handlers
okt 23 23:54:46 Desktop-Ubuntu mopidy[10074]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 6, "result": false}'
okt 23 23:54:46 Desktop-Ubuntu mopidy[10074]: DEBUG    2022-10-23 23:54:46,907 [10074:HttpServer] mopidy.http.handlers
okt 23 23:54:46 Desktop-Ubuntu mopidy[10074]:   Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_random","params":{},"jsonrpc":"2.0","id":6}'
okt 23 23:54:46 Desktop-Ubuntu mopidy[10074]: DEBUG    2022-10-23 23:54:46,906 [10074:HttpServer] mopidy.http.handlers
okt 23 23:54:46 Desktop-Ubuntu mopidy[10074]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 5, "result": false}'
okt 23 23:54:46 Desktop-Ubuntu mopidy[10074]: DEBUG    2022-10-23 23:54:46,906 [10074:HttpServer] mopidy.http.handlers
okt 23 23:54:46 Desktop-Ubuntu mopidy[10074]:   Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_consume","params":{},"jsonrpc":"2.0","id":5}'
okt 23 23:54:46 Desktop-Ubuntu mopidy[10074]: DEBUG    2022-10-23 23:54:46,906 [10074:HttpServer] mopidy.http.handlers
okt 23 23:54:46 Desktop-Ubuntu mopidy[10074]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 4, "result": false}'
okt 23 23:54:46 Desktop-Ubuntu mopidy[10074]: DEBUG    2022-10-23 23:54:46,906 [10074:HttpServer] mopidy.http.handlers
okt 23 23:54:46 Desktop-Ubuntu mopidy[10074]:   Received WebSocket message from 127.0.0.1: '{"method":"core.mixer.get_mute","params":{},"jsonrpc":"2.0","id":4}'
okt 23 23:54:46 Desktop-Ubuntu mopidy[10074]: DEBUG    2022-10-23 23:54:46,905 [10074:HttpServer] mopidy.http.handlers
okt 23 23:54:46 Desktop-Ubuntu mopidy[10074]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 3, "result": 100}'
okt 23 23:54:46 Desktop-Ubuntu mopidy[10074]: DEBUG    2022-10-23 23:54:46,905 [10074:HttpServer] mopidy.http.handlers
okt 23 23:54:46 Desktop-Ubuntu mopidy[10074]:   Received WebSocket message from 127.0.0.1: '{"method":"core.mixer.get_volume","params":{},"jsonrpc":"2.0","id":3}'
okt 23 23:54:46 Desktop-Ubuntu mopidy[10074]: DEBUG    2022-10-23 23:54:46,904 [10074:HttpServer] mopidy.http.handlers
okt 23 23:54:46 Desktop-Ubuntu mopidy[10074]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 2, "result": "stopped"}'
okt 23 23:54:46 Desktop-Ubuntu mopidy[10074]: DEBUG    2022-10-23 23:54:46,904 [10074:HttpServer] mopidy.http.handlers
okt 23 23:54:46 Desktop-Ubuntu mopidy[10074]:   Received WebSocket message from 127.0.0.1: '{"method":"core.playback.get_state","params":{},"jsonrpc":"2.0","id":2}'
okt 23 23:54:46 Desktop-Ubuntu mopidy[10074]: DEBUG    2022-10-23 23:54:46,904 [10074:HttpServer] mopidy.http.handlers
okt 23 23:54:46 Desktop-Ubuntu mopidy[10074]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 1, "result": null}'
okt 23 23:54:46 Desktop-Ubuntu mopidy[10074]: DEBUG    2022-10-23 23:54:46,903 [10074:HttpServer] mopidy.http.handlers
okt 23 23:54:46 Desktop-Ubuntu mopidy[10074]:   Received WebSocket message from 127.0.0.1: '{"method":"core.playback.get_current_tl_track","params":{},"jsonrpc":"2.0","id":1}'
okt 23 23:54:46 Desktop-Ubuntu mopidy[10074]: DEBUG    2022-10-23 23:54:46,903 [10074:HttpServer] mopidy.http.handlers
okt 23 23:54:46 Desktop-Ubuntu mopidy[10074]:   {'id': 16665620868196, 'jsonrpc': '2.0', 'method': 'get_queue_metadata', 'result': {'queue_metadata': {}}, 'recipient': 'V9ZASCBSK4RJ'}
okt 23 23:54:46 Desktop-Ubuntu mopidy[10074]: DEBUG    2022-10-23 23:54:46,820 [10074:HttpServer] mopidy_iris.core
okt 23 23:54:46 Desktop-Ubuntu mopidy[10074]:   Iris websocket message received: {"jsonrpc":"2.0","id":16665620868196,"method":"get_queue_metadata"}
okt 23 23:54:46 Desktop-Ubuntu mopidy[10074]: DEBUG    2022-10-23 23:54:46,820 [10074:HttpServer] mopidy_iris.handlers
okt 23 23:54:46 Desktop-Ubuntu mopidy[10074]:   {'id': 166656208681841, 'jsonrpc': '2.0', 'method': 'get_pinned', 'result': {'pinned': []}, 'recipient': 'V9ZASCBSK4RJ'}
okt 23 23:54:46 Desktop-Ubuntu mopidy[10074]: DEBUG    2022-10-23 23:54:46,819 [10074:HttpServer] mopidy_iris.core
okt 23 23:54:46 Desktop-Ubuntu mopidy[10074]:   Iris websocket message received: {"jsonrpc":"2.0","id":166656208681841,"method":"get_pinned"}
okt 23 23:54:46 Desktop-Ubuntu mopidy[10074]: DEBUG    2022-10-23 23:54:46,819 [10074:HttpServer] mopidy_iris.handlers
okt 23 23:54:46 Desktop-Ubuntu mopidy[10074]:   {'id': 166656208681782, 'jsonrpc': '2.0', 'method': 'get_commands', 'result': {'commands': {}}, 'recipient': 'V9ZASCBSK4RJ'}
okt 23 23:54:46 Desktop-Ubuntu mopidy[10074]: DEBUG    2022-10-23 23:54:46,818 [10074:HttpServer] mopidy_iris.core
okt 23 23:54:46 Desktop-Ubuntu mopidy[10074]:   Iris websocket message received: {"jsonrpc":"2.0","id":166656208681782,"method":"get_commands"}
okt 23 23:54:46 Desktop-Ubuntu mopidy[10074]: DEBUG    2022-10-23 23:54:46,818 [10074:HttpServer] mopidy_iris.handlers
okt 23 23:54:46 Desktop-Ubuntu mopidy[10074]:   {'id': 166656208681641, 'jsonrpc': '2.0', 'method': 'get_radio', 'result': {'radio': {'enabled': 0, 'seed_artists': [], 'seed_genres': [], 'seed_tracks': [], 'results': []}}, 'recipient': 'V9ZASCBSK4RJ'}
okt 23 23:54:46 Desktop-Ubuntu mopidy[10074]: DEBUG    2022-10-23 23:54:46,818 [10074:HttpServer] mopidy_iris.core
okt 23 23:54:46 Desktop-Ubuntu mopidy[10074]:   Iris websocket message received: {"jsonrpc":"2.0","id":166656208681641,"method":"get_radio"}
okt 23 23:54:46 Desktop-Ubuntu mopidy[10074]: DEBUG    2022-10-23 23:54:46,817 [10074:HttpServer] mopidy_iris.handlers
okt 23 23:54:46 Desktop-Ubuntu mopidy[10074]:   {'id': 166656208681531, 'jsonrpc': '2.0', 'method': 'get_shared_config', 'result': {'shared_config': {}}, 'recipient': 'V9ZASCBSK4RJ'}
okt 23 23:54:46 Desktop-Ubuntu mopidy[10074]: DEBUG    2022-10-23 23:54:46,817 [10074:HttpServer] mopidy_iris.core
okt 23 23:54:46 Desktop-Ubuntu mopidy[10074]:   Iris websocket message received: {"jsonrpc":"2.0","id":166656208681531,"method":"get_shared_config"}
okt 23 23:54:46 Desktop-Ubuntu mopidy[10074]: DEBUG    2022-10-23 23:54:46,817 [10074:HttpServer] mopidy_iris.handlers
okt 23 23:54:46 Desktop-Ubuntu mopidy[10074]:   {'id': 166656208681433, 'jsonrpc': '2.0', 'method': 'get_config', 'result': {'config': {'is_root': False, 'spotify_username': False, 'country': 'NZ', 'locale': 'en_NZ', 'snapcast_enabled': True, 'snapcast_host': 'localhost', 'snapcast_port': '1780', 'snapcast_ssl': False, 'snapcast_stream': 'Default', 'spotify_authorization_url': 'https://jamesbarnsley.co.nz/iris/auth_spotify.php', 'lastfm_authorization_url': 'https://jamesbarnsley.co.nz/iris/auth_lastfm.php', 'genius_authorization_url': 'https://jamesbarnsley.co.nz/iris/auth_genius.php', 'shared_config': {}}}, 'recipient': 'V9ZASCBSK4RJ'}
okt 23 23:54:46 Desktop-Ubuntu mopidy[10074]: DEBUG    2022-10-23 23:54:46,817 [10074:HttpServer] mopidy_iris.core
okt 23 23:54:46 Desktop-Ubuntu mopidy[10074]:   Iris websocket message received: {"jsonrpc":"2.0","id":166656208681433,"method":"get_config"}
okt 23 23:54:46 Desktop-Ubuntu mopidy[10074]: DEBUG    2022-10-23 23:54:46,817 [10074:HttpServer] mopidy_iris.handlers
okt 23 23:54:46 Desktop-Ubuntu mopidy[10074]:   {'id': 166656208681335, 'jsonrpc': '2.0', 'method': 'update_connection', 'result': {'connection': {'connection_id': 'V9ZASCBSK4RJ', 'ip': '127.0.0.1', 'created': '2022-10-23 23:54:46', 'username': 166656148284185, 'client_id': 166656148284193}}, 'recipient': 'V9ZASCBSK4RJ'}
okt 23 23:54:46 Desktop-Ubuntu mopidy[10074]: DEBUG    2022-10-23 23:54:46,816 [10074:HttpServer] mopidy_iris.core
okt 23 23:54:46 Desktop-Ubuntu mopidy[10074]:   {'method': 'connection_changed', 'params': {'connection': {'connection_id': 'V9ZASCBSK4RJ', 'ip': '127.0.0.1', 'created': '2022-10-23 23:54:46', 'username': 166656148284185, 'client_id': 166656148284193}}}
okt 23 23:54:46 Desktop-Ubuntu mopidy[10074]: DEBUG    2022-10-23 23:54:46,816 [10074:HttpServer] mopidy_iris.core
okt 23 23:54:46 Desktop-Ubuntu mopidy[10074]:   Iris websocket message received: {"jsonrpc":"2.0","id":166656208681335,"method":"update_connection","params":{"username":166656148284185,"client_id":166656148284193}}
okt 23 23:54:46 Desktop-Ubuntu mopidy[10074]: DEBUG    2022-10-23 23:54:46,816 [10074:HttpServer] mopidy_iris.handlers
okt 23 23:54:46 Desktop-Ubuntu mopidy[10074]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 0, "result": {"core.get_uri_schemes": {"description": "Get list of URI schemes we can handle", "params": []}, "core.get_version": {"description": "Get version of the Mopidy core API", "params": []}, "core.history.get_history": {"description": "Get the track history.\\n\\nThe timestamps are milliseconds since epoch.\\n\\n:returns: the track history\\n:rtype: list of (timestamp, :class:`mopidy.models.Ref`) tuples", "params": []}, "core.history.get_length": {"description": "Get the number of tracks in the history.\\n\\n:returns: the history length\\n:rtype: int", "params": []}, "core.library.browse": {"description": "Browse directories and tracks at the given ``uri``.\\n\\n``uri`` is a string which represents some directory belonging to a\\nbackend. To get the intial root directories for backends pass\\n:class:`None` as the URI.\\n\\nReturns a list of :class:`mopidy.models.Ref` objects for the\\ndirectories and tracks at the given ``uri``.\\n\\nThe :class:`~mopidy.models.Ref` objects representing tracks keep the\\ntrack\'s original URI. A matching pair of objects can look like this::\\n\\n    Track(uri=\'dummy:/foo.mp3\', name=\'foo\', artists=..., album=...)\\n    Ref.track(uri=\'dummy:/foo.mp3\', name=\'foo\')\\n\\nThe :class:`~mopidy.models.Ref` objects representing directories have\\nbackend specific URIs. These are opaque values, so no one but the\\nbackend that created them should try and derive any meaning from them.\\nThe only valid exception to this is checking the scheme, as it is used\\nto route browse requests to the correct backend.\\n\\nFor example, the dummy library\'s ``/bar`` directory could be returned\\nlike this::\\n\\n    Ref.directory(uri=\'dummy:directory:/bar\', name=\'bar\')\\n\\n:param string uri: URI to browse\\n:rtype: list of :class:`mopidy.models.Ref`\\n\\n.. versionadded:: 0.18", "params": [{"name": "uri"}]}, "core.library.get_distinct": {"description": "List distinct values for a given field from the library.\\n\\nThis has mainly been added to support the list commands the MPD\\nprotocol supports in a more sane fashion. Other frontends are not\\nrecommended to use this method.\\n\\n:param string field: Any one of ``uri``, ``track_name``, ``album``,\\n    ``artist``, ``albumartist``, ``composer``, ``performer``,\\n    ``track_no``, ``genre``, ``date``, ``comment``, ``disc_no``,\\n    ``musicbrainz_albumid``, ``musicbrainz_artistid``, or\\n    ``musicbrainz_trackid``.\\n:param dict query: Query to use for limiting results, see\\n    :meth:`search` for details about the query format.\\n:rtype: set of values corresponding to the requested field type.\\n\\n.. versionadded:: 1.0", "params": [{"name": "field"}, {"name": "query", "default": null}]}, "core.library.get_images": {"description": "Lookup the images for the given URIs\\n\\nBackends can use this to return image URIs for any URI they know about\\nbe it tracks, albums, playlists. The lookup result is a dictionary\\nmapping the provided URIs to lists of images.\\n\\nUnknown URIs or URIs the corresponding backend couldn\'t find anything\\nfor will simply return an empty list for that URI.\\n\\n:param uris: list of URIs to find images for\\n:type uris: list of string\\n:rtype: {uri: tuple of :class:`mopidy.models.Image`}\\n\\n.. versionadded:: 1.0", "params": [{"name": "uris"}]}, "core.library.lookup": {"description": "Lookup the given URIs.\\n\\nIf the URI expands to multiple tracks, the returned list will contain\\nthem all.\\n\\n:param uris: track URIs\\n:type uris: list of string\\n:rtype: {uri: list of :class:`mopidy.models.Track`}", "params": [{"name": "uris"}]}, "core.library.refresh": {"description": "Refresh library. Limit to URI and below if an URI is given.\\n\\n:param uri: directory or track URI\\n:type uri: string", "params": [{"name": "uri", "default": null}]}, "core.library.search": {"description": "Search the library for tracks where ``field`` contains ``values``.\\n\\n``field`` can be one of ``uri``, ``track_name``, ``album``, ``artist``,\\n``albumartist``, ``composer``, ``performer``, ``track_no``, ``genre``,\\n``date``, ``comment``, ``disc_no``, ``musicbrainz_albumid``,\\n``musicbrainz_artistid``, ``musicbrainz_trackid`` or ``any``.\\n\\nIf ``uris`` is given, the search is limited to results from within the\\nURI roots. For example passing ``uris=[\'file:\']`` will limit the search\\nto the local backend.\\n\\nExamples::\\n\\n    # Returns results matching \'a\' in any backend\\n    search({\'any\': [\'a\']})\\n\\n    # Returns results matching artist \'xyz\' in any backend\\n    search({\'artist\': [\'xyz\']})\\n\\n    # Returns results matching \'a\' and \'b\' and artist \'xyz\' in any\\n    # backend\\n    search({\'any\': [\'a\', \'b\'], \'artist\': [\'xyz\']})\\n\\n    # Returns results matching \'a\' if within the given URI roots\\n    # \\"file:///media/music\\" and \\"spotify:\\"\\n    search({\'any\': [\'a\']}, uris=[\'file:///media/music\', \'spotify:\'])\\n\\n    # Returns results matching artist \'xyz\' and \'abc\' in any backend\\n    search({\'artist\': [\'xyz\', \'abc\']})\\n\\n:param query: one or more queries to search for\\n:type query: dict\\n:param uris: zero or more URI roots to limit the search to\\n:type uris: list of string or :class:`None`\\n:param exact: if the search should use exact matching\\n:type exact: :class:`bool`\\n:rtype: list of :class:`mopidy.models.SearchResult`\\n\\n.. versionadded:: 1.0\\n    The ``exact`` keyword argument.", "params": [{"name": "query"}, {"name": "uris", "default": null}, {"name": "exact", "default": false}]}, "core.mixer.get_mute": {"description": "Get mute state.\\n\\n:class:`True` if muted, :class:`False` unmuted, :class:`None` if\\nunknown.", "params": []}, "core.mixer.get_volume": {"description": "Get the volume.\\n\\nInteger in range [0..100] or :class:`None` if unknown.\\n\\nThe volume scale is linear.", "params": []}, "core.mixer.set_mute": {"description": "Set mute state.\\n\\n:class:`True` to mute, :class:`False` to unmute.\\n\\nReturns :class:`True` if call is successful, otherwise :class:`False`.", "params": [{"name": "mute"}]}, "core.mixer.set_volume": {"description": "Set the volume.\\n\\nThe volume is defined as an integer in range [0..100].\\n\\nThe volume scale is linear.\\n\\nReturns :class:`True` if call is successful, otherwise :class:`False`.", "params": [{"name": "volume"}]}, "core.playback.get_current_tl_track": {"description": "Get the currently playing or selected track.\\n\\nReturns a :class:`mopidy.models.TlTrack` or :class:`None`.", "params": []}, "core.playback.get_current_tlid": {"description": "Get the currently playing or selected TLID.\\n\\nExtracted from :meth:`get_current_tl_track` for convenience.\\n\\nReturns a :class:`int` or :class:`None`.\\n\\n.. versionadded:: 1.1", "params": []}, "core.playback.get_current_track": {"description": "Get the currently playing or selected track.\\n\\nExtracted from :meth:`get_current_tl_track` for convenience.\\n\\nReturns a :class:`mopidy.models.Track` or :class:`None`.", "params": []}, "core.playback.get_state": {"description": "Get The playback state.", "params": []}, "core.playback.get_stream_title": {"description": "Get the current stream title or :class:`None`.", "params": []}, "core.playback.get_time_position": {"description": "Get time position in milliseconds.", "params": []}, "core.playback.next": {"description": "Change to the next track.\\n\\nThe current playback state will be kept. If it was playing, playing\\nwill continue. If it was paused, it will still be paused, etc.", "params": []}, "core.playback.pause": {"description": "Pause playback.", "params": []}, "core.playback.play": {"description": "Play the given track, or if the given tl_track and tlid is\\n:class:`None`, play the currently active track.\\n\\nNote that the track **must** already be in the tracklist.\\n\\n.. deprecated:: 3.0\\n    The ``tl_track`` argument. Use ``tlid`` instead.\\n\\n:param tl_track: track to play\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:param tlid: TLID of the track to play\\n:type tlid: :class:`int` or :class:`None`", "params": [{"name": "tl_track", "default": null}, {"name": "tlid", "default": null}]}, "core.playback.previous": {"description": "Change to the previous track.\\n\\nThe current playback state will be kept. If it was playing, playing\\nwill continue. If it was paused, it will still be paused, etc.", "params": []}, "core.playback.resume": {"description": "If paused, resume playing the current track.", "params": []}, "core.playback.seek": {"description": "Seeks to time position given in milliseconds.\\n\\n:param time_position: time position in milliseconds\\n:type time_position: int\\n:rtype: :class:`True` if successful, else :class:`False`", "params": [{"name": "time_position"}]}, "core.playback.set_state": {"description": "Set the playback state.\\n\\nMust be :attr:`PLAYING`, :attr:`PAUSED`, or :attr:`STOPPED`.\\n\\nPossible states and transitions:\\n\\n.. digraph:: state_transitions\\n\\n    \\"STOPPED\\" -> \\"PLAYING\\" [ label=\\"play\\" ]\\n    \\"STOPPED\\" -> \\"PAUSED\\" [ label=\\"pause\\" ]\\n    \\"PLAYING\\" -> \\"STOPPED\\" [ label=\\"stop\\" ]\\n    \\"PLAYING\\" -> \\"PAUSED\\" [ label=\\"pause\\" ]\\n    \\"PLAYING\\" -> \\"PLAYING\\" [ label=\\"play\\" ]\\n    \\"PAUSED\\" -> \\"PLAYING\\" [ label=\\"resume\\" ]\\n    \\"PAUSED\\" -> \\"STOPPED\\" [ label=\\"stop\\" ]", "params": [{"name": "new_state"}]}, "core.playback.stop": {"description": "Stop playing.", "params": []}, "core.playlists.as_list": {"description": "Get a list of the currently available playlists.\\n\\nReturns a list of :class:`~mopidy.models.Ref` objects referring to the\\nplaylists. In other words, no information about the playlists\' content\\nis given.\\n\\n:rtype: list of :class:`mopidy.models.Ref`\\n\\n.. versionadded:: 1.0", "params": []}, "core.playlists.create": {"description": "Create a new playlist.\\n\\nIf ``uri_scheme`` matches an URI scheme handled by a current backend,\\nthat backend is asked to create the playlist. If ``uri_scheme`` is\\n:class:`None` or doesn\'t match a current backend, the first backend is\\nasked to create the playlist.\\n\\nAll new playlists must be created by calling this method, and **not**\\nby creating new instances of :class:`mopidy.models.Playlist`.\\n\\n:param name: name of the new playlist\\n:type name: string\\n:param uri_scheme: use the backend matching the URI scheme\\n:type uri_scheme: string\\n:rtype: :class:`mopidy.models.Playlist` or :class:`None`", "params": [{"name": "name"}, {"name": "uri_scheme", "default": null}]}, "core.playlists.delete": {"description": "Delete playlist identified by the URI.\\n\\nIf the URI doesn\'t match the URI schemes handled by the current\\nbackends, nothing happens.\\n\\nReturns :class:`True` if deleted, :class:`False` otherwise.\\n\\n:param uri: URI of the playlist to delete\\n:type uri: string\\n:rtype: :class:`bool`\\n\\n.. versionchanged:: 2.2\\n    Return type defined.", "params": [{"name": "uri"}]}, "core.playlists.get_items": {"description": "Get the items in a playlist specified by ``uri``.\\n\\nReturns a list of :class:`~mopidy.models.Ref` objects referring to the\\nplaylist\'s items.\\n\\nIf a playlist with the given ``uri`` doesn\'t exist, it returns\\n:class:`None`.\\n\\n:rtype: list of :class:`mopidy.models.Ref`, or :class:`None`\\n\\n.. versionadded:: 1.0", "params": [{"name": "uri"}]}, "core.playlists.get_uri_schemes": {"description": "Get the list of URI schemes that support playlists.\\n\\n:rtype: list of string\\n\\n.. versionadded:: 2.0", "params": []}, "core.playlists.lookup": {"description": "Lookup playlist with given URI in both the set of playlists and in any\\nother playlist sources. Returns :class:`None` if not found.\\n\\n:param uri: playlist URI\\n:type uri: string\\n:rtype: :class:`mopidy.models.Playlist` or :class:`None`", "params": [{"name": "uri"}]}, "core.playlists.refresh": {"description": "Refresh the playlists in :attr:`playlists`.\\n\\nIf ``uri_scheme`` is :class:`None`, all backends are asked to refresh.\\nIf ``uri_scheme`` is an URI scheme handled by a backend, only that\\nbackend is asked to refresh. If ``uri_scheme`` doesn\'t match any\\ncurrent backend, nothing happens.\\n\\n:param uri_scheme: limit to the backend matching the URI scheme\\n:type uri_scheme: string", "params": [{"name": "uri_scheme", "default": null}]}, "core.playlists.save": {"description": "Save the playlist.\\n\\nFor a playlist to be saveable, it must have the ``uri`` attribute set.\\nYou must not set the ``uri`` atribute yourself, but use playlist\\nobjects returned by :meth:`create` or retrieved from :attr:`playlists`,\\nwhich will always give you saveable playlists.\\n\\nThe method returns the saved playlist. The return playlist may differ\\nfrom the saved playlist. E.g. if the playlist name was changed, the\\nreturned playlist may have a different URI. The caller of this method\\nmust throw away the playlist sent to this method, and use the\\nreturned playlist instead.\\n\\nIf the playlist\'s URI isn\'t set or doesn\'t match the URI scheme of a\\ncurrent backend, nothing is done and :class:`None` is returned.\\n\\n:param playlist: the playlist\\n:type playlist: :class:`mopidy.models.Playlist`\\n:rtype: :class:`mopidy.models.Playlist` or :class:`None`", "params": [{"name": "playlist"}]}, "core.tracklist.add": {"description": "Add tracks to the tracklist.\\n\\nIf ``uris`` is given instead of ``tracks``, the URIs are\\nlooked up in the library and the resulting tracks are added to the\\ntracklist.\\n\\nIf ``at_position`` is given, the tracks are inserted at the given\\nposition in the tracklist. If ``at_position`` is not given, the tracks\\nare appended to the end of the tracklist.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.\\n\\n:param tracks: tracks to add\\n:type tracks: list of :class:`mopidy.models.Track` or :class:`None`\\n:param at_position: position in tracklist to add tracks\\n:type at_position: int or :class:`None`\\n:param uris: list of URIs for tracks to add\\n:type uris: list of string or :class:`None`\\n:rtype: list of :class:`mopidy.models.TlTrack`\\n\\n.. versionadded:: 1.0\\n    The ``uris`` argument.\\n\\n.. deprecated:: 1.0\\n    The ``tracks`` argument. Use ``uris``.", "params": [{"name": "tracks", "default": null}, {"name": "at_position", "default": null}, {"name": "uris", "default": null}]}, "core.tracklist.clear": {"description": "Clear the tracklist.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.", "params": []}, "core.tracklist.eot_track": {"description": "The track that will be played after the given track.\\n\\nNot necessarily the same track as :meth:`next_track`.\\n\\n.. deprecated:: 3.0\\n    Use :meth:`get_eot_tlid` instead.\\n\\n:param tl_track: the reference track\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:rtype: :class:`mopidy.models.TlTrack` or :class:`None`", "params": [{"name": "tl_track"}]}, "core.tracklist.filter": {"description": "Filter the tracklist by the given criteria.\\n\\nEach rule in the criteria consists of a model field and a list of\\nvalues to compare it against. If the model field matches any of the\\nvalues, it may be returned.\\n\\nOnly tracks that match all the given criteria are returned.\\n\\nExamples::\\n\\n    # Returns tracks with TLIDs 1, 2, 3, or 4 (tracklist ID)\\n    filter({\'tlid\': [1, 2, 3, 4]})\\n\\n    # Returns track with URIs \'xyz\' or \'abc\'\\n    filter({\'uri\': [\'xyz\', \'abc\']})\\n\\n    # Returns track with a matching TLIDs (1, 3 or 6) and a\\n    # matching URI (\'xyz\' or \'abc\')\\n    filter({\'tlid\': [1, 3, 6], \'uri\': [\'xyz\', \'abc\']})\\n\\n:param criteria: one or more rules to match by\\n:type criteria: dict, of (string, list) pairs\\n:rtype: list of :class:`mopidy.models.TlTrack`", "params": [{"name": "criteria"}]}, "core.tracklist.get_consume": {"description": "Get consume mode.\\n\\n:class:`True`\\n    Tracks are removed from the tracklist when they have been played.\\n:class:`False`\\n    Tracks are not removed from the tracklist.", "params": []}, "core.tracklist.get_eot_tlid": {"description": "The TLID of the track that will be played after the current track.\\n\\nNot necessarily the same TLID as returned by :meth:`get_next_tlid`.\\n\\n:rtype: :class:`int` or :class:`None`\\n\\n.. versionadded:: 1.1", "params": []}, "core.tracklist.get_length": {"description": "Get length of the tracklist.", "params": []}, "core.tracklist.get_next_tlid": {"description": "The tlid of the track that will be played if calling\\n:meth:`mopidy.core.PlaybackController.next()`.\\n\\nFor normal playback this is the next track in the tracklist. If repeat\\nis enabled the next track can loop around the tracklist. When random is\\nenabled this should be a random track, all tracks should be played once\\nbefore the tracklist repeats.\\n\\n:rtype: :class:`int` or :class:`None`\\n\\n.. versionadded:: 1.1", "params": []}, "core.tracklist.get_previous_tlid": {"description": "Returns the TLID of the track that will be played if calling\\n:meth:`mopidy.core.PlaybackController.previous()`.\\n\\nFor normal playback this is the previous track in the tracklist. If\\nrandom and/or consume is enabled it should return the current track\\ninstead.\\n\\n:rtype: :class:`int` or :class:`None`\\n\\n.. versionadded:: 1.1", "params": []}, "core.tracklist.get_random": {"description": "Get random mode.\\n\\n:class:`True`\\n    Tracks are selected at random from the tracklist.\\n:class:`False`\\n    Tracks are played in the order of the tracklist.", "params": []}, "core.tracklist.get_repeat": {"description": "Get repeat mode.\\n\\n:class:`True`\\n    The tracklist is played repeatedly.\\n:class:`False`\\n    The tracklist is played once.", "params": []}, "core.tracklist.get_single": {"description": "Get single mode.\\n\\n:class:`True`\\n    Playback is stopped after current song, unless in ``repeat`` mode.\\n:class:`False`\\n    Playback continues after current song.", "params": []}, "core.tracklist.get_tl_tracks": {"description": "Get tracklist as list of :class:`mopidy.models.TlTrack`.", "params": []}, "core.tracklist.get_tracks": {"description": "Get tracklist as list of :class:`mopidy.models.Track`.", "params": []}, "core.tracklist.get_version": {"description": "Get the tracklist version.\\n\\nInteger which is increased every time the tracklist is changed. Is not\\nreset before Mopidy is restarted.", "params": []}, "core.tracklist.index": {"description": "The position of the given track in the tracklist.\\n\\nIf neither *tl_track* or *tlid* is given we return the index of\\nthe currently playing track.\\n\\n:param tl_track: the track to find the index of\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:param tlid: TLID of the track to find the index of\\n:type tlid: :class:`int` or :class:`None`\\n:rtype: :class:`int` or :class:`None`\\n\\n.. versionadded:: 1.1\\n    The *tlid* parameter", "params": [{"name": "tl_track", "default": null}, {"name": "tlid", "default": null}]}, "core.tracklist.move": {"description": "Move the tracks in the slice ``[start:end]`` to ``to_position``.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.\\n\\n:param start: position of first track to move\\n:type start: int\\n:param end: position after last track to move\\n:type end: int\\n:param to_position: new position for the tracks\\n:type to_position: int", "params": [{"name": "start"}, {"name": "end"}, {"name": "to_position"}]}, "core.tracklist.next_track": {"description": "The track that will be played if calling\\n:meth:`mopidy.core.PlaybackController.next()`.\\n\\nFor normal playback this is the next track in the tracklist. If repeat\\nis enabled the next track can loop around the tracklist. When random is\\nenabled this should be a random track, all tracks should be played once\\nbefore the tracklist repeats.\\n\\n.. deprecated:: 3.0\\n    Use :meth:`get_next_tlid` instead.\\n\\n:param tl_track: the reference track\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:rtype: :class:`mopidy.models.TlTrack` or :class:`None`", "params": [{"name": "tl_track"}]}, "core.tracklist.previous_track": {"description": "Returns the track that will be played if calling\\n:meth:`mopidy.core.PlaybackController.previous()`.\\n\\nFor normal playback this is the previous track in the tracklist. If\\nrandom and/or consume is enabled it should return the current track\\ninstead.\\n\\n.. deprecated:: 3.0\\n    Use :meth:`get_previous_tlid` instead.\\n\\n:param tl_track: the reference track\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:rtype: :class:`mopidy.models.TlTrack` or :class:`None`", "params": [{"name": "tl_track"}]}, "core.tracklist.remove": {"description": "Remove the matching tracks from the tracklist.\\n\\nUses :meth:`filter()` to lookup the tracks to remove.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.\\n\\n:param criteria: one or more rules to match by\\n:type criteria: dict, of (string, list) pairs\\n:rtype: list of :class:`mopidy.models.TlTrack` that were removed", "params": [{"name": "criteria"}]}, "core.tracklist.set_consume": {"description": "Set consume mode.\\n\\n:class:`True`\\n    Tracks are removed from the tracklist when they have been played.\\n:class:`False`\\n    Tracks are not removed from the tracklist.", "params": [{"name": "value"}]}, "core.tracklist.set_random": {"description": "Set random mode.\\n\\n:class:`True`\\n    Tracks are selected at random from the tracklist.\\n:class:`False`\\n    Tracks are played in the order of the tracklist.", "params": [{"name": "value"}]}, "core.tracklist.set_repeat": {"description": "Set repeat mode.\\n\\nTo repeat a single track, set both ``repeat`` and ``single``.\\n\\n:class:`True`\\n    The tracklist is played repeatedly.\\n:class:`False`\\n    The tracklist is played once.", "params": [{"name": "value"}]}, "core.tracklist.set_single": {"description": "Set single mode.\\n\\n:class:`True`\\n    Playback is stopped after current song, unless in ``repeat`` mode.\\n:class:`False`\\n    Playback continues after current song.", "params": [{"name": "value"}]}, "core.tracklist.shuffle": {"description": "Shuffles the entire tracklist. If ``start`` and ``end`` is given only\\nshuffles the slice ``[start:end]``.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.\\n\\n:param start: position of first track to shuffle\\n:type start: int or :class:`None`\\n:param end: position after last track to shuffle\\n:type end: int or :class:`None`", "params": [{"name": "start", "default": null}, {"name": "end", "default": null}]}, "core.tracklist.slice": {"description": "Returns a slice of the tracklist, limited by the given start and end\\npositions.\\n\\n:param start: position of first track to include in slice\\n:type start: int\\n:param end: position after last track to include in slice\\n:type end: int\\n:rtype: :class:`mopidy.models.TlTrack`", "params": [{"name": "start"}, {"name": "end"}]}}}'
okt 23 23:54:46 Desktop-Ubuntu mopidy[10074]: DEBUG    2022-10-23 23:54:46,815 [10074:HttpServer] mopidy.http.handlers
okt 23 23:54:46 Desktop-Ubuntu mopidy[10074]:   Received WebSocket message from 127.0.0.1: '{"method":"core.describe","jsonrpc":"2.0","id":0}'
okt 23 23:54:46 Desktop-Ubuntu mopidy[10074]: DEBUG    2022-10-23 23:54:46,812 [10074:HttpServer] mopidy.http.handlers
okt 23 23:54:46 Desktop-Ubuntu mopidy[10074]:   {'method': 'connection_added', 'params': {'connection': {'connection_id': 'V9ZASCBSK4RJ', 'ip': '127.0.0.1', 'created': '2022-10-23 23:54:46'}}}
okt 23 23:54:46 Desktop-Ubuntu mopidy[10074]: DEBUG    2022-10-23 23:54:46,771 [10074:HttpServer] mopidy_iris.core
okt 23 23:54:46 Desktop-Ubuntu mopidy[10074]:   <mopidy_iris.handlers.WebsocketHandler object at 0x7fdb486317b0>
okt 23 23:54:46 Desktop-Ubuntu mopidy[10074]: DEBUG    2022-10-23 23:54:46,770 [10074:HttpServer] mopidy_iris.core
okt 23 23:54:46 Desktop-Ubuntu mopidy[10074]:   Connection added
okt 23 23:54:46 Desktop-Ubuntu mopidy[10074]: DEBUG    2022-10-23 23:54:46,770 [10074:HttpServer] mopidy_iris.core
okt 23 23:54:46 Desktop-Ubuntu mopidy[10074]:   101 GET /iris/ws/ (127.0.0.1) 0.44ms
okt 23 23:54:46 Desktop-Ubuntu mopidy[10074]: INFO     2022-10-23 23:54:46,770 [10074:HttpServer] tornado.access
okt 23 23:54:46 Desktop-Ubuntu mopidy[10074]:   New WebSocket connection from 127.0.0.1
okt 23 23:54:46 Desktop-Ubuntu mopidy[10074]: DEBUG    2022-10-23 23:54:46,757 [10074:HttpServer] mopidy.http.handlers
okt 23 23:54:46 Desktop-Ubuntu mopidy[10074]:   101 GET /mopidy/ws/ (127.0.0.1) 0.53ms
okt 23 23:54:46 Desktop-Ubuntu mopidy[10074]: INFO     2022-10-23 23:54:46,756 [10074:HttpServer] tornado.access
okt 23 23:54:46 Desktop-Ubuntu mopidy[10074]:   304 GET /iris/assets/app-icon_192.png (127.0.0.1) 0.68ms
okt 23 23:54:46 Desktop-Ubuntu mopidy[10074]: INFO     2022-10-23 23:54:46,646 [10074:HttpServer] tornado.access
okt 23 23:54:46 Desktop-Ubuntu mopidy[10074]:   304 GET /iris/library/null (127.0.0.1) 0.62ms
okt 23 23:54:46 Desktop-Ubuntu mopidy[10074]: INFO     2022-10-23 23:54:46,547 [10074:HttpServer] tornado.access
okt 23 23:54:46 Desktop-Ubuntu mopidy[10074]:   304 GET /iris/manifest.json (127.0.0.1) 0.64ms
okt 23 23:54:46 Desktop-Ubuntu mopidy[10074]: INFO     2022-10-23 23:54:46,408 [10074:HttpServer] tornado.access
okt 23 23:54:46 Desktop-Ubuntu mopidy[10074]:   200 GET /iris/assets/favicon.png (127.0.0.1) 0.80ms
okt 23 23:54:46 Desktop-Ubuntu mopidy[10074]: INFO     2022-10-23 23:54:46,404 [10074:HttpServer] tornado.access
okt 23 23:54:45 Desktop-Ubuntu mopidy[10074]:   200 GET /iris/app.min.js?v=1666559547 (127.0.0.1) 10.59ms
okt 23 23:54:45 Desktop-Ubuntu mopidy[10074]: INFO     2022-10-23 23:54:45,781 [10074:HttpServer] tornado.access
okt 23 23:54:45 Desktop-Ubuntu mopidy[10074]:   200 GET /iris/app.min.css?v=1666559547 (127.0.0.1) 4.97ms
okt 23 23:54:45 Desktop-Ubuntu mopidy[10074]: INFO     2022-10-23 23:54:45,765 [10074:HttpServer] tornado.access
okt 23 23:54:45 Desktop-Ubuntu mopidy[10074]:   200 GET /iris/assets/app-icon.svg (127.0.0.1) 0.71ms
okt 23 23:54:45 Desktop-Ubuntu mopidy[10074]: INFO     2022-10-23 23:54:45,592 [10074:HttpServer] tornado.access
okt 23 23:54:45 Desktop-Ubuntu mopidy[10074]:   Closed WebSocket connection from 127.0.0.1
okt 23 23:54:45 Desktop-Ubuntu mopidy[10074]: DEBUG    2022-10-23 23:54:45,539 [10074:HttpServer] mopidy.http.handlers
okt 23 23:54:45 Desktop-Ubuntu mopidy[10074]:   {'method': 'connection_removed', 'params': {'connection': {'connection_id': 'OBOXVOFZ0OD9', 'ip': '127.0.0.1', 'created': '2022-10-23 23:54:36', 'username': 166656148284185, 'client_id': 166656148284193}}}
okt 23 23:54:45 Desktop-Ubuntu mopidy[10074]: DEBUG    2022-10-23 23:54:45,539 [10074:HttpServer] mopidy_iris.core
okt 23 23:54:45 Desktop-Ubuntu mopidy[10074]:   200 GET /iris/library/browse (127.0.0.1) 0.72ms
okt 23 23:54:45 Desktop-Ubuntu mopidy[10074]: INFO     2022-10-23 23:54:45,521 [10074:HttpServer] tornado.access
okt 23 23:54:44 Desktop-Ubuntu mopidy[10074]:   304 GET /iris/assets/silence.mp3 (127.0.0.1) 0.96ms
okt 23 23:54:44 Desktop-Ubuntu mopidy[10074]: INFO     2022-10-23 23:54:44,885 [10074:HttpServer] tornado.access
okt 23 23:54:37 Desktop-Ubuntu mopidy[10074]:   {'id': 166656207722447, 'jsonrpc': '2.0', 'method': 'get_version', 'result': {'version': {'current': '3.64.1', 'latest': '3.64.1', 'is_root': False, 'upgrade_available': False}}, 'recipient': 'OBOXVOFZ0OD9'}
okt 23 23:54:37 Desktop-Ubuntu mopidy[10074]: DEBUG    2022-10-23 23:54:37,375 [10074:HttpServer] mopidy_iris.core
okt 23 23:54:37 Desktop-Ubuntu mopidy[10074]:   Iris websocket message received: {"jsonrpc":"2.0","id":166656207722447,"method":"get_version"}
okt 23 23:54:37 Desktop-Ubuntu mopidy[10074]: DEBUG    2022-10-23 23:54:37,224 [10074:HttpServer] mopidy_iris.handlers
okt 23 23:54:36 Desktop-Ubuntu mopidy[10074]:   {'id': 166656207672330, 'jsonrpc': '2.0', 'method': 'get_queue_metadata', 'result': {'queue_metadata': {}}, 'recipient': 'OBOXVOFZ0OD9'}
okt 23 23:54:36 Desktop-Ubuntu mopidy[10074]: DEBUG    2022-10-23 23:54:36,725 [10074:HttpServer] mopidy_iris.core
okt 23 23:54:36 Desktop-Ubuntu mopidy[10074]:   Iris websocket message received: {"jsonrpc":"2.0","id":166656207672330,"method":"get_queue_metadata"}
okt 23 23:54:36 Desktop-Ubuntu mopidy[10074]: DEBUG    2022-10-23 23:54:36,725 [10074:HttpServer] mopidy_iris.handlers
okt 23 23:54:36 Desktop-Ubuntu mopidy[10074]:   {'id': 166656207672260, 'jsonrpc': '2.0', 'method': 'get_pinned', 'result': {'pinned': []}, 'recipient': 'OBOXVOFZ0OD9'}
okt 23 23:54:36 Desktop-Ubuntu mopidy[10074]: DEBUG    2022-10-23 23:54:36,723 [10074:HttpServer] mopidy_iris.core
okt 23 23:54:36 Desktop-Ubuntu mopidy[10074]:   Iris websocket message received: {"jsonrpc":"2.0","id":166656207672260,"method":"get_pinned"}
okt 23 23:54:36 Desktop-Ubuntu mopidy[10074]: DEBUG    2022-10-23 23:54:36,723 [10074:HttpServer] mopidy_iris.handlers
okt 23 23:54:36 Desktop-Ubuntu mopidy[10074]:   {'id': 166656207672162, 'jsonrpc': '2.0', 'method': 'get_commands', 'result': {'commands': {}}, 'recipient': 'OBOXVOFZ0OD9'}
okt 23 23:54:36 Desktop-Ubuntu mopidy[10074]: DEBUG    2022-10-23 23:54:36,722 [10074:HttpServer] mopidy_iris.core
okt 23 23:54:36 Desktop-Ubuntu mopidy[10074]:   Iris websocket message received: {"jsonrpc":"2.0","id":166656207672162,"method":"get_commands"}
okt 23 23:54:36 Desktop-Ubuntu mopidy[10074]: DEBUG    2022-10-23 23:54:36,722 [10074:HttpServer] mopidy_iris.handlers
okt 23 23:54:36 Desktop-Ubuntu mopidy[10074]:   {'id': 16665620767211, 'jsonrpc': '2.0', 'method': 'get_radio', 'result': {'radio': {'enabled': 0, 'seed_artists': [], 'seed_genres': [], 'seed_tracks': [], 'results': []}}, 'recipient': 'OBOXVOFZ0OD9'}
okt 23 23:54:36 Desktop-Ubuntu mopidy[10074]: DEBUG    2022-10-23 23:54:36,721 [10074:HttpServer] mopidy_iris.core
okt 23 23:54:36 Desktop-Ubuntu mopidy[10074]:   Iris websocket message received: {"jsonrpc":"2.0","id":16665620767211,"method":"get_radio"}
okt 23 23:54:36 Desktop-Ubuntu mopidy[10074]: DEBUG    2022-10-23 23:54:36,721 [10074:HttpServer] mopidy_iris.handlers
okt 23 23:54:36 Desktop-Ubuntu mopidy[10074]:   {'id': 166656207672088, 'jsonrpc': '2.0', 'method': 'get_shared_config', 'result': {'shared_config': {}}, 'recipient': 'OBOXVOFZ0OD9'}
okt 23 23:54:36 Desktop-Ubuntu mopidy[10074]: DEBUG    2022-10-23 23:54:36,721 [10074:HttpServer] mopidy_iris.core
okt 23 23:54:36 Desktop-Ubuntu mopidy[10074]:   Iris websocket message received: {"jsonrpc":"2.0","id":166656207672088,"method":"get_shared_config"}
okt 23 23:54:36 Desktop-Ubuntu mopidy[10074]: DEBUG    2022-10-23 23:54:36,721 [10074:HttpServer] mopidy_iris.handlers
okt 23 23:54:36 Desktop-Ubuntu mopidy[10074]:   {'id': 166656207672084, 'jsonrpc': '2.0', 'method': 'get_config', 'result': {'config': {'is_root': False, 'spotify_username': False, 'country': 'NZ', 'locale': 'en_NZ', 'snapcast_enabled': True, 'snapcast_host': 'localhost', 'snapcast_port': '1780', 'snapcast_ssl': False, 'snapcast_stream': 'Default', 'spotify_authorization_url': 'https://jamesbarnsley.co.nz/iris/auth_spotify.php', 'lastfm_authorization_url': 'https://jamesbarnsley.co.nz/iris/auth_lastfm.php', 'genius_authorization_url': 'https://jamesbarnsley.co.nz/iris/auth_genius.php', 'shared_config': {}}}, 'recipient': 'OBOXVOFZ0OD9'}
okt 23 23:54:36 Desktop-Ubuntu mopidy[10074]: DEBUG    2022-10-23 23:54:36,720 [10074:HttpServer] mopidy_iris.core
okt 23 23:54:36 Desktop-Ubuntu mopidy[10074]:   Iris websocket message received: {"jsonrpc":"2.0","id":166656207672084,"method":"get_config"}
okt 23 23:54:36 Desktop-Ubuntu mopidy[10074]: DEBUG    2022-10-23 23:54:36,720 [10074:HttpServer] mopidy_iris.handlers
okt 23 23:54:36 Desktop-Ubuntu mopidy[10074]:   {'id': 166656207671977, 'jsonrpc': '2.0', 'method': 'update_connection', 'result': {'connection': {'connection_id': 'OBOXVOFZ0OD9', 'ip': '127.0.0.1', 'created': '2022-10-23 23:54:36', 'username': 166656148284185, 'client_id': 166656148284193}}, 'recipient': 'OBOXVOFZ0OD9'}
okt 23 23:54:36 Desktop-Ubuntu mopidy[10074]: DEBUG    2022-10-23 23:54:36,720 [10074:HttpServer] mopidy_iris.core
okt 23 23:54:36 Desktop-Ubuntu mopidy[10074]:   {'method': 'connection_changed', 'params': {'connection': {'connection_id': 'OBOXVOFZ0OD9', 'ip': '127.0.0.1', 'created': '2022-10-23 23:54:36', 'username': 166656148284185, 'client_id': 166656148284193}}}
okt 23 23:54:36 Desktop-Ubuntu mopidy[10074]: DEBUG    2022-10-23 23:54:36,720 [10074:HttpServer] mopidy_iris.core
okt 23 23:54:36 Desktop-Ubuntu mopidy[10074]:   Iris websocket message received: {"jsonrpc":"2.0","id":166656207671977,"method":"update_connection","params":{"username":166656148284185,"client_id":166656148284193}}
okt 23 23:54:36 Desktop-Ubuntu mopidy[10074]: DEBUG    2022-10-23 23:54:36,720 [10074:HttpServer] mopidy_iris.handlers
okt 23 23:54:36 Desktop-Ubuntu mopidy[10074]:   {'method': 'connection_added', 'params': {'connection': {'connection_id': 'OBOXVOFZ0OD9', 'ip': '127.0.0.1', 'created': '2022-10-23 23:54:36'}}}
okt 23 23:54:36 Desktop-Ubuntu mopidy[10074]: DEBUG    2022-10-23 23:54:36,716 [10074:HttpServer] mopidy_iris.core
okt 23 23:54:36 Desktop-Ubuntu mopidy[10074]:   <mopidy_iris.handlers.WebsocketHandler object at 0x7fdb48630970>
okt 23 23:54:36 Desktop-Ubuntu mopidy[10074]: DEBUG    2022-10-23 23:54:36,715 [10074:HttpServer] mopidy_iris.core
okt 23 23:54:36 Desktop-Ubuntu mopidy[10074]:   Connection added
okt 23 23:54:36 Desktop-Ubuntu mopidy[10074]: DEBUG    2022-10-23 23:54:36,715 [10074:HttpServer] mopidy_iris.core
okt 23 23:54:36 Desktop-Ubuntu mopidy[10074]:   101 GET /iris/ws/ (127.0.0.1) 0.53ms
okt 23 23:54:36 Desktop-Ubuntu mopidy[10074]: INFO     2022-10-23 23:54:36,715 [10074:HttpServer] tornado.access
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]:   200 GET /iris/assets/favicon_error.png (127.0.0.1) 5.53ms
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]: INFO     2022-10-23 23:54:32,804 [10074:HttpServer] tornado.access
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 36, "result": null}'
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]: DEBUG    2022-10-23 23:54:32,708 [10074:HttpServer] mopidy.http.handlers
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]:   Received WebSocket message from 127.0.0.1: '{"method":"core.playback.get_stream_title","params":{},"jsonrpc":"2.0","id":36}'
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]: DEBUG    2022-10-23 23:54:32,707 [10074:HttpServer] mopidy.http.handlers
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 35, "result": ["file", "http", "https", "local", "m3u", "rtsp"]}'
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]: DEBUG    2022-10-23 23:54:32,707 [10074:HttpServer] mopidy.http.handlers
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]:   Received WebSocket message from 127.0.0.1: '{"method":"core.get_uri_schemes","params":{},"jsonrpc":"2.0","id":35}'
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]: DEBUG    2022-10-23 23:54:32,706 [10074:HttpServer] mopidy.http.handlers
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 34, "result": 0}'
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]: DEBUG    2022-10-23 23:54:32,706 [10074:HttpServer] mopidy.http.handlers
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]:   Received WebSocket message from 127.0.0.1: '{"method":"core.playback.get_time_position","params":{},"jsonrpc":"2.0","id":34}'
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]: DEBUG    2022-10-23 23:54:32,706 [10074:HttpServer] mopidy.http.handlers
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 33, "result": []}'
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]: DEBUG    2022-10-23 23:54:32,706 [10074:HttpServer] mopidy.http.handlers
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]:   Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_tl_tracks","params":{},"jsonrpc":"2.0","id":33}'
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]: DEBUG    2022-10-23 23:54:32,705 [10074:HttpServer] mopidy.http.handlers
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 32, "result": false}'
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]: DEBUG    2022-10-23 23:54:32,705 [10074:HttpServer] mopidy.http.handlers
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]:   Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_repeat","params":{},"jsonrpc":"2.0","id":32}'
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]: DEBUG    2022-10-23 23:54:32,705 [10074:HttpServer] mopidy.http.handlers
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 31, "result": false}'
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]: DEBUG    2022-10-23 23:54:32,705 [10074:HttpServer] mopidy.http.handlers
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]:   Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_random","params":{},"jsonrpc":"2.0","id":31}'
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]: DEBUG    2022-10-23 23:54:32,704 [10074:HttpServer] mopidy.http.handlers
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 30, "result": false}'
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]: DEBUG    2022-10-23 23:54:32,704 [10074:HttpServer] mopidy.http.handlers
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]:   Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_consume","params":{},"jsonrpc":"2.0","id":30}'
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]: DEBUG    2022-10-23 23:54:32,704 [10074:HttpServer] mopidy.http.handlers
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 29, "result": false}'
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]: DEBUG    2022-10-23 23:54:32,704 [10074:HttpServer] mopidy.http.handlers
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]:   Received WebSocket message from 127.0.0.1: '{"method":"core.mixer.get_mute","params":{},"jsonrpc":"2.0","id":29}'
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]: DEBUG    2022-10-23 23:54:32,703 [10074:HttpServer] mopidy.http.handlers
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 28, "result": 100}'
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]: DEBUG    2022-10-23 23:54:32,703 [10074:HttpServer] mopidy.http.handlers
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]:   Received WebSocket message from 127.0.0.1: '{"method":"core.mixer.get_volume","params":{},"jsonrpc":"2.0","id":28}'
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]: DEBUG    2022-10-23 23:54:32,702 [10074:HttpServer] mopidy.http.handlers
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 27, "result": "stopped"}'
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]: DEBUG    2022-10-23 23:54:32,702 [10074:HttpServer] mopidy.http.handlers
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]:   Received WebSocket message from 127.0.0.1: '{"method":"core.playback.get_state","params":{},"jsonrpc":"2.0","id":27}'
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]: DEBUG    2022-10-23 23:54:32,701 [10074:HttpServer] mopidy.http.handlers
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 26, "result": null}'
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]: DEBUG    2022-10-23 23:54:32,701 [10074:HttpServer] mopidy.http.handlers
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]:   Received WebSocket message from 127.0.0.1: '{"method":"core.playback.get_current_tl_track","params":{},"jsonrpc":"2.0","id":26}'
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]: DEBUG    2022-10-23 23:54:32,701 [10074:HttpServer] mopidy.http.handlers
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 25, "result": {"core.get_uri_schemes": {"description": "Get list of URI schemes we can handle", "params": []}, "core.get_version": {"description": "Get version of the Mopidy core API", "params": []}, "core.history.get_history": {"description": "Get the track history.\\n\\nThe timestamps are milliseconds since epoch.\\n\\n:returns: the track history\\n:rtype: list of (timestamp, :class:`mopidy.models.Ref`) tuples", "params": []}, "core.history.get_length": {"description": "Get the number of tracks in the history.\\n\\n:returns: the history length\\n:rtype: int", "params": []}, "core.library.browse": {"description": "Browse directories and tracks at the given ``uri``.\\n\\n``uri`` is a string which represents some directory belonging to a\\nbackend. To get the intial root directories for backends pass\\n:class:`None` as the URI.\\n\\nReturns a list of :class:`mopidy.models.Ref` objects for the\\ndirectories and tracks at the given ``uri``.\\n\\nThe :class:`~mopidy.models.Ref` objects representing tracks keep the\\ntrack\'s original URI. A matching pair of objects can look like this::\\n\\n    Track(uri=\'dummy:/foo.mp3\', name=\'foo\', artists=..., album=...)\\n    Ref.track(uri=\'dummy:/foo.mp3\', name=\'foo\')\\n\\nThe :class:`~mopidy.models.Ref` objects representing directories have\\nbackend specific URIs. These are opaque values, so no one but the\\nbackend that created them should try and derive any meaning from them.\\nThe only valid exception to this is checking the scheme, as it is used\\nto route browse requests to the correct backend.\\n\\nFor example, the dummy library\'s ``/bar`` directory could be returned\\nlike this::\\n\\n    Ref.directory(uri=\'dummy:directory:/bar\', name=\'bar\')\\n\\n:param string uri: URI to browse\\n:rtype: list of :class:`mopidy.models.Ref`\\n\\n.. versionadded:: 0.18", "params": [{"name": "uri"}]}, "core.library.get_distinct": {"description": "List distinct values for a given field from the library.\\n\\nThis has mainly been added to support the list commands the MPD\\nprotocol supports in a more sane fashion. Other frontends are not\\nrecommended to use this method.\\n\\n:param string field: Any one of ``uri``, ``track_name``, ``album``,\\n    ``artist``, ``albumartist``, ``composer``, ``performer``,\\n    ``track_no``, ``genre``, ``date``, ``comment``, ``disc_no``,\\n    ``musicbrainz_albumid``, ``musicbrainz_artistid``, or\\n    ``musicbrainz_trackid``.\\n:param dict query: Query to use for limiting results, see\\n    :meth:`search` for details about the query format.\\n:rtype: set of values corresponding to the requested field type.\\n\\n.. versionadded:: 1.0", "params": [{"name": "field"}, {"name": "query", "default": null}]}, "core.library.get_images": {"description": "Lookup the images for the given URIs\\n\\nBackends can use this to return image URIs for any URI they know about\\nbe it tracks, albums, playlists. The lookup result is a dictionary\\nmapping the provided URIs to lists of images.\\n\\nUnknown URIs or URIs the corresponding backend couldn\'t find anything\\nfor will simply return an empty list for that URI.\\n\\n:param uris: list of URIs to find images for\\n:type uris: list of string\\n:rtype: {uri: tuple of :class:`mopidy.models.Image`}\\n\\n.. versionadded:: 1.0", "params": [{"name": "uris"}]}, "core.library.lookup": {"description": "Lookup the given URIs.\\n\\nIf the URI expands to multiple tracks, the returned list will contain\\nthem all.\\n\\n:param uris: track URIs\\n:type uris: list of string\\n:rtype: {uri: list of :class:`mopidy.models.Track`}", "params": [{"name": "uris"}]}, "core.library.refresh": {"description": "Refresh library. Limit to URI and below if an URI is given.\\n\\n:param uri: directory or track URI\\n:type uri: string", "params": [{"name": "uri", "default": null}]}, "core.library.search": {"description": "Search the library for tracks where ``field`` contains ``values``.\\n\\n``field`` can be one of ``uri``, ``track_name``, ``album``, ``artist``,\\n``albumartist``, ``composer``, ``performer``, ``track_no``, ``genre``,\\n``date``, ``comment``, ``disc_no``, ``musicbrainz_albumid``,\\n``musicbrainz_artistid``, ``musicbrainz_trackid`` or ``any``.\\n\\nIf ``uris`` is given, the search is limited to results from within the\\nURI roots. For example passing ``uris=[\'file:\']`` will limit the search\\nto the local backend.\\n\\nExamples::\\n\\n    # Returns results matching \'a\' in any backend\\n    search({\'any\': [\'a\']})\\n\\n    # Returns results matching artist \'xyz\' in any backend\\n    search({\'artist\': [\'xyz\']})\\n\\n    # Returns results matching \'a\' and \'b\' and artist \'xyz\' in any\\n    # backend\\n    search({\'any\': [\'a\', \'b\'], \'artist\': [\'xyz\']})\\n\\n    # Returns results matching \'a\' if within the given URI roots\\n    # \\"file:///media/music\\" and \\"spotify:\\"\\n    search({\'any\': [\'a\']}, uris=[\'file:///media/music\', \'spotify:\'])\\n\\n    # Returns results matching artist \'xyz\' and \'abc\' in any backend\\n    search({\'artist\': [\'xyz\', \'abc\']})\\n\\n:param query: one or more queries to search for\\n:type query: dict\\n:param uris: zero or more URI roots to limit the search to\\n:type uris: list of string or :class:`None`\\n:param exact: if the search should use exact matching\\n:type exact: :class:`bool`\\n:rtype: list of :class:`mopidy.models.SearchResult`\\n\\n.. versionadded:: 1.0\\n    The ``exact`` keyword argument.", "params": [{"name": "query"}, {"name": "uris", "default": null}, {"name": "exact", "default": false}]}, "core.mixer.get_mute": {"description": "Get mute state.\\n\\n:class:`True` if muted, :class:`False` unmuted, :class:`None` if\\nunknown.", "params": []}, "core.mixer.get_volume": {"description": "Get the volume.\\n\\nInteger in range [0..100] or :class:`None` if unknown.\\n\\nThe volume scale is linear.", "params": []}, "core.mixer.set_mute": {"description": "Set mute state.\\n\\n:class:`True` to mute, :class:`False` to unmute.\\n\\nReturns :class:`True` if call is successful, otherwise :class:`False`.", "params": [{"name": "mute"}]}, "core.mixer.set_volume": {"description": "Set the volume.\\n\\nThe volume is defined as an integer in range [0..100].\\n\\nThe volume scale is linear.\\n\\nReturns :class:`True` if call is successful, otherwise :class:`False`.", "params": [{"name": "volume"}]}, "core.playback.get_current_tl_track": {"description": "Get the currently playing or selected track.\\n\\nReturns a :class:`mopidy.models.TlTrack` or :class:`None`.", "params": []}, "core.playback.get_current_tlid": {"description": "Get the currently playing or selected TLID.\\n\\nExtracted from :meth:`get_current_tl_track` for convenience.\\n\\nReturns a :class:`int` or :class:`None`.\\n\\n.. versionadded:: 1.1", "params": []}, "core.playback.get_current_track": {"description": "Get the currently playing or selected track.\\n\\nExtracted from :meth:`get_current_tl_track` for convenience.\\n\\nReturns a :class:`mopidy.models.Track` or :class:`None`.", "params": []}, "core.playback.get_state": {"description": "Get The playback state.", "params": []}, "core.playback.get_stream_title": {"description": "Get the current stream title or :class:`None`.", "params": []}, "core.playback.get_time_position": {"description": "Get time position in milliseconds.", "params": []}, "core.playback.next": {"description": "Change to the next track.\\n\\nThe current playback state will be kept. If it was playing, playing\\nwill continue. If it was paused, it will still be paused, etc.", "params": []}, "core.playback.pause": {"description": "Pause playback.", "params": []}, "core.playback.play": {"description": "Play the given track, or if the given tl_track and tlid is\\n:class:`None`, play the currently active track.\\n\\nNote that the track **must** already be in the tracklist.\\n\\n.. deprecated:: 3.0\\n    The ``tl_track`` argument. Use ``tlid`` instead.\\n\\n:param tl_track: track to play\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:param tlid: TLID of the track to play\\n:type tlid: :class:`int` or :class:`None`", "params": [{"name": "tl_track", "default": null}, {"name": "tlid", "default": null}]}, "core.playback.previous": {"description": "Change to the previous track.\\n\\nThe current playback state will be kept. If it was playing, playing\\nwill continue. If it was paused, it will still be paused, etc.", "params": []}, "core.playback.resume": {"description": "If paused, resume playing the current track.", "params": []}, "core.playback.seek": {"description": "Seeks to time position given in milliseconds.\\n\\n:param time_position: time position in milliseconds\\n:type time_position: int\\n:rtype: :class:`True` if successful, else :class:`False`", "params": [{"name": "time_position"}]}, "core.playback.set_state": {"description": "Set the playback state.\\n\\nMust be :attr:`PLAYING`, :attr:`PAUSED`, or :attr:`STOPPED`.\\n\\nPossible states and transitions:\\n\\n.. digraph:: state_transitions\\n\\n    \\"STOPPED\\" -> \\"PLAYING\\" [ label=\\"play\\" ]\\n    \\"STOPPED\\" -> \\"PAUSED\\" [ label=\\"pause\\" ]\\n    \\"PLAYING\\" -> \\"STOPPED\\" [ label=\\"stop\\" ]\\n    \\"PLAYING\\" -> \\"PAUSED\\" [ label=\\"pause\\" ]\\n    \\"PLAYING\\" -> \\"PLAYING\\" [ label=\\"play\\" ]\\n    \\"PAUSED\\" -> \\"PLAYING\\" [ label=\\"resume\\" ]\\n    \\"PAUSED\\" -> \\"STOPPED\\" [ label=\\"stop\\" ]", "params": [{"name": "new_state"}]}, "core.playback.stop": {"description": "Stop playing.", "params": []}, "core.playlists.as_list": {"description": "Get a list of the currently available playlists.\\n\\nReturns a list of :class:`~mopidy.models.Ref` objects referring to the\\nplaylists. In other words, no information about the playlists\' content\\nis given.\\n\\n:rtype: list of :class:`mopidy.models.Ref`\\n\\n.. versionadded:: 1.0", "params": []}, "core.playlists.create": {"description": "Create a new playlist.\\n\\nIf ``uri_scheme`` matches an URI scheme handled by a current backend,\\nthat backend is asked to create the playlist. If ``uri_scheme`` is\\n:class:`None` or doesn\'t match a current backend, the first backend is\\nasked to create the playlist.\\n\\nAll new playlists must be created by calling this method, and **not**\\nby creating new instances of :class:`mopidy.models.Playlist`.\\n\\n:param name: name of the new playlist\\n:type name: string\\n:param uri_scheme: use the backend matching the URI scheme\\n:type uri_scheme: string\\n:rtype: :class:`mopidy.models.Playlist` or :class:`None`", "params": [{"name": "name"}, {"name": "uri_scheme", "default": null}]}, "core.playlists.delete": {"description": "Delete playlist identified by the URI.\\n\\nIf the URI doesn\'t match the URI schemes handled by the current\\nbackends, nothing happens.\\n\\nReturns :class:`True` if deleted, :class:`False` otherwise.\\n\\n:param uri: URI of the playlist to delete\\n:type uri: string\\n:rtype: :class:`bool`\\n\\n.. versionchanged:: 2.2\\n    Return type defined.", "params": [{"name": "uri"}]}, "core.playlists.get_items": {"description": "Get the items in a playlist specified by ``uri``.\\n\\nReturns a list of :class:`~mopidy.models.Ref` objects referring to the\\nplaylist\'s items.\\n\\nIf a playlist with the given ``uri`` doesn\'t exist, it returns\\n:class:`None`.\\n\\n:rtype: list of :class:`mopidy.models.Ref`, or :class:`None`\\n\\n.. versionadded:: 1.0", "params": [{"name": "uri"}]}, "core.playlists.get_uri_schemes": {"description": "Get the list of URI schemes that support playlists.\\n\\n:rtype: list of string\\n\\n.. versionadded:: 2.0", "params": []}, "core.playlists.lookup": {"description": "Lookup playlist with given URI in both the set of playlists and in any\\nother playlist sources. Returns :class:`None` if not found.\\n\\n:param uri: playlist URI\\n:type uri: string\\n:rtype: :class:`mopidy.models.Playlist` or :class:`None`", "params": [{"name": "uri"}]}, "core.playlists.refresh": {"description": "Refresh the playlists in :attr:`playlists`.\\n\\nIf ``uri_scheme`` is :class:`None`, all backends are asked to refresh.\\nIf ``uri_scheme`` is an URI scheme handled by a backend, only that\\nbackend is asked to refresh. If ``uri_scheme`` doesn\'t match any\\ncurrent backend, nothing happens.\\n\\n:param uri_scheme: limit to the backend matching the URI scheme\\n:type uri_scheme: string", "params": [{"name": "uri_scheme", "default": null}]}, "core.playlists.save": {"description": "Save the playlist.\\n\\nFor a playlist to be saveable, it must have the ``uri`` attribute set.\\nYou must not set the ``uri`` atribute yourself, but use playlist\\nobjects returned by :meth:`create` or retrieved from :attr:`playlists`,\\nwhich will always give you saveable playlists.\\n\\nThe method returns the saved playlist. The return playlist may differ\\nfrom the saved playlist. E.g. if the playlist name was changed, the\\nreturned playlist may have a different URI. The caller of this method\\nmust throw away the playlist sent to this method, and use the\\nreturned playlist instead.\\n\\nIf the playlist\'s URI isn\'t set or doesn\'t match the URI scheme of a\\ncurrent backend, nothing is done and :class:`None` is returned.\\n\\n:param playlist: the playlist\\n:type playlist: :class:`mopidy.models.Playlist`\\n:rtype: :class:`mopidy.models.Playlist` or :class:`None`", "params": [{"name": "playlist"}]}, "core.tracklist.add": {"description": "Add tracks to the tracklist.\\n\\nIf ``uris`` is given instead of ``tracks``, the URIs are\\nlooked up in the library and the resulting tracks are added to the\\ntracklist.\\n\\nIf ``at_position`` is given, the tracks are inserted at the given\\nposition in the tracklist. If ``at_position`` is not given, the tracks\\nare appended to the end of the tracklist.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.\\n\\n:param tracks: tracks to add\\n:type tracks: list of :class:`mopidy.models.Track` or :class:`None`\\n:param at_position: position in tracklist to add tracks\\n:type at_position: int or :class:`None`\\n:param uris: list of URIs for tracks to add\\n:type uris: list of string or :class:`None`\\n:rtype: list of :class:`mopidy.models.TlTrack`\\n\\n.. versionadded:: 1.0\\n    The ``uris`` argument.\\n\\n.. deprecated:: 1.0\\n    The ``tracks`` argument. Use ``uris``.", "params": [{"name": "tracks", "default": null}, {"name": "at_position", "default": null}, {"name": "uris", "default": null}]}, "core.tracklist.clear": {"description": "Clear the tracklist.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.", "params": []}, "core.tracklist.eot_track": {"description": "The track that will be played after the given track.\\n\\nNot necessarily the same track as :meth:`next_track`.\\n\\n.. deprecated:: 3.0\\n    Use :meth:`get_eot_tlid` instead.\\n\\n:param tl_track: the reference track\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:rtype: :class:`mopidy.models.TlTrack` or :class:`None`", "params": [{"name": "tl_track"}]}, "core.tracklist.filter": {"description": "Filter the tracklist by the given criteria.\\n\\nEach rule in the criteria consists of a model field and a list of\\nvalues to compare it against. If the model field matches any of the\\nvalues, it may be returned.\\n\\nOnly tracks that match all the given criteria are returned.\\n\\nExamples::\\n\\n    # Returns tracks with TLIDs 1, 2, 3, or 4 (tracklist ID)\\n    filter({\'tlid\': [1, 2, 3, 4]})\\n\\n    # Returns track with URIs \'xyz\' or \'abc\'\\n    filter({\'uri\': [\'xyz\', \'abc\']})\\n\\n    # Returns track with a matching TLIDs (1, 3 or 6) and a\\n    # matching URI (\'xyz\' or \'abc\')\\n    filter({\'tlid\': [1, 3, 6], \'uri\': [\'xyz\', \'abc\']})\\n\\n:param criteria: one or more rules to match by\\n:type criteria: dict, of (string, list) pairs\\n:rtype: list of :class:`mopidy.models.TlTrack`", "params": [{"name": "criteria"}]}, "core.tracklist.get_consume": {"description": "Get consume mode.\\n\\n:class:`True`\\n    Tracks are removed from the tracklist when they have been played.\\n:class:`False`\\n    Tracks are not removed from the tracklist.", "params": []}, "core.tracklist.get_eot_tlid": {"description": "The TLID of the track that will be played after the current track.\\n\\nNot necessarily the same TLID as returned by :meth:`get_next_tlid`.\\n\\n:rtype: :class:`int` or :class:`None`\\n\\n.. versionadded:: 1.1", "params": []}, "core.tracklist.get_length": {"description": "Get length of the tracklist.", "params": []}, "core.tracklist.get_next_tlid": {"description": "The tlid of the track that will be played if calling\\n:meth:`mopidy.core.PlaybackController.next()`.\\n\\nFor normal playback this is the next track in the tracklist. If repeat\\nis enabled the next track can loop around the tracklist. When random is\\nenabled this should be a random track, all tracks should be played once\\nbefore the tracklist repeats.\\n\\n:rtype: :class:`int` or :class:`None`\\n\\n.. versionadded:: 1.1", "params": []}, "core.tracklist.get_previous_tlid": {"description": "Returns the TLID of the track that will be played if calling\\n:meth:`mopidy.core.PlaybackController.previous()`.\\n\\nFor normal playback this is the previous track in the tracklist. If\\nrandom and/or consume is enabled it should return the current track\\ninstead.\\n\\n:rtype: :class:`int` or :class:`None`\\n\\n.. versionadded:: 1.1", "params": []}, "core.tracklist.get_random": {"description": "Get random mode.\\n\\n:class:`True`\\n    Tracks are selected at random from the tracklist.\\n:class:`False`\\n    Tracks are played in the order of the tracklist.", "params": []}, "core.tracklist.get_repeat": {"description": "Get repeat mode.\\n\\n:class:`True`\\n    The tracklist is played repeatedly.\\n:class:`False`\\n    The tracklist is played once.", "params": []}, "core.tracklist.get_single": {"description": "Get single mode.\\n\\n:class:`True`\\n    Playback is stopped after current song, unless in ``repeat`` mode.\\n:class:`False`\\n    Playback continues after current song.", "params": []}, "core.tracklist.get_tl_tracks": {"description": "Get tracklist as list of :class:`mopidy.models.TlTrack`.", "params": []}, "core.tracklist.get_tracks": {"description": "Get tracklist as list of :class:`mopidy.models.Track`.", "params": []}, "core.tracklist.get_version": {"description": "Get the tracklist version.\\n\\nInteger which is increased every time the tracklist is changed. Is not\\nreset before Mopidy is restarted.", "params": []}, "core.tracklist.index": {"description": "The position of the given track in the tracklist.\\n\\nIf neither *tl_track* or *tlid* is given we return the index of\\nthe currently playing track.\\n\\n:param tl_track: the track to find the index of\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:param tlid: TLID of the track to find the index of\\n:type tlid: :class:`int` or :class:`None`\\n:rtype: :class:`int` or :class:`None`\\n\\n.. versionadded:: 1.1\\n    The *tlid* parameter", "params": [{"name": "tl_track", "default": null}, {"name": "tlid", "default": null}]}, "core.tracklist.move": {"description": "Move the tracks in the slice ``[start:end]`` to ``to_position``.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.\\n\\n:param start: position of first track to move\\n:type start: int\\n:param end: position after last track to move\\n:type end: int\\n:param to_position: new position for the tracks\\n:type to_position: int", "params": [{"name": "start"}, {"name": "end"}, {"name": "to_position"}]}, "core.tracklist.next_track": {"description": "The track that will be played if calling\\n:meth:`mopidy.core.PlaybackController.next()`.\\n\\nFor normal playback this is the next track in the tracklist. If repeat\\nis enabled the next track can loop around the tracklist. When random is\\nenabled this should be a random track, all tracks should be played once\\nbefore the tracklist repeats.\\n\\n.. deprecated:: 3.0\\n    Use :meth:`get_next_tlid` instead.\\n\\n:param tl_track: the reference track\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:rtype: :class:`mopidy.models.TlTrack` or :class:`None`", "params": [{"name": "tl_track"}]}, "core.tracklist.previous_track": {"description": "Returns the track that will be played if calling\\n:meth:`mopidy.core.PlaybackController.previous()`.\\n\\nFor normal playback this is the previous track in the tracklist. If\\nrandom and/or consume is enabled it should return the current track\\ninstead.\\n\\n.. deprecated:: 3.0\\n    Use :meth:`get_previous_tlid` instead.\\n\\n:param tl_track: the reference track\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:rtype: :class:`mopidy.models.TlTrack` or :class:`None`", "params": [{"name": "tl_track"}]}, "core.tracklist.remove": {"description": "Remove the matching tracks from the tracklist.\\n\\nUses :meth:`filter()` to lookup the tracks to remove.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.\\n\\n:param criteria: one or more rules to match by\\n:type criteria: dict, of (string, list) pairs\\n:rtype: list of :class:`mopidy.models.TlTrack` that were removed", "params": [{"name": "criteria"}]}, "core.tracklist.set_consume": {"description": "Set consume mode.\\n\\n:class:`True`\\n    Tracks are removed from the tracklist when they have been played.\\n:class:`False`\\n    Tracks are not removed from the tracklist.", "params": [{"name": "value"}]}, "core.tracklist.set_random": {"description": "Set random mode.\\n\\n:class:`True`\\n    Tracks are selected at random from the tracklist.\\n:class:`False`\\n    Tracks are played in the order of the tracklist.", "params": [{"name": "value"}]}, "core.tracklist.set_repeat": {"description": "Set repeat mode.\\n\\nTo repeat a single track, set both ``repeat`` and ``single``.\\n\\n:class:`True`\\n    The tracklist is played repeatedly.\\n:class:`False`\\n    The tracklist is played once.", "params": [{"name": "value"}]}, "core.tracklist.set_single": {"description": "Set single mode.\\n\\n:class:`True`\\n    Playback is stopped after current song, unless in ``repeat`` mode.\\n:class:`False`\\n    Playback continues after current song.", "params": [{"name": "value"}]}, "core.tracklist.shuffle": {"description": "Shuffles the entire tracklist. If ``start`` and ``end`` is given only\\nshuffles the slice ``[start:end]``.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.\\n\\n:param start: position of first track to shuffle\\n:type start: int or :class:`None`\\n:param end: position after last track to shuffle\\n:type end: int or :class:`None`", "params": [{"name": "start", "default": null}, {"name": "end", "default": null}]}, "core.tracklist.slice": {"description": "Returns a slice of the tracklist, limited by the given start and end\\npositions.\\n\\n:param start: position of first track to include in slice\\n:type start: int\\n:param end: position after last track to include in slice\\n:type end: int\\n:rtype: :class:`mopidy.models.TlTrack`", "params": [{"name": "start"}, {"name": "end"}]}}}'
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]: DEBUG    2022-10-23 23:54:32,695 [10074:HttpServer] mopidy.http.handlers
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]:   Received WebSocket message from 127.0.0.1: '{"method":"core.describe","jsonrpc":"2.0","id":25}'
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]: DEBUG    2022-10-23 23:54:32,691 [10074:HttpServer] mopidy.http.handlers
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]:   New WebSocket connection from 127.0.0.1
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]: DEBUG    2022-10-23 23:54:32,690 [10074:HttpServer] mopidy.http.handlers
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]:   101 GET /mopidy/ws/ (127.0.0.1) 19.68ms
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]: INFO     2022-10-23 23:54:32,690 [10074:HttpServer] tornado.access
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]:   Zeroconf service 'Mopidy HTTP server on Desktop-Ubuntu' (_mopidy-http._tcp at []:6680): Published
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]: DEBUG    2022-10-23 23:54:32,392 [10074:HttpFrontend-12 (_actor_loop)] mopidy.zeroconf
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]:   Zeroconf service 'Mopidy HTTP server on Desktop-Ubuntu' (_http._tcp at []:6680): Published
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]: DEBUG    2022-10-23 23:54:32,389 [10074:HttpFrontend-12 (_actor_loop)] mopidy.zeroconf
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]:     '/': <class 'tornado.web.RedirectHandler'>
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]:     '/mopidy/': <class 'mopidy.http.handlers.ClientListHandler'>
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]:     '/mopidy/(.+)': <class 'mopidy.http.handlers.StaticFileHandler'>
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]:     '/mopidy/rpc': <class 'mopidy.http.handlers.JsonRpcHandler'>
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]:     '/mopidy/ws/?': <class 'mopidy.http.handlers.WebSocketHandler'>
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]:     '/mopidy': <class 'mopidy.http.handlers.AddSlashHandler'>
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]:     '/iris/(.*)': <class 'mopidy_iris.handlers.ReactRouterHandler'>
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]:     '/iris/((.*)(?:css|js|json|map)$)': <class 'tornado.web.StaticFileHandler'>
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]:     '/iris/assets/(.*)': <class 'tornado.web.StaticFileHandler'>
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]:     '/iris/ws/?': <class 'mopidy_iris.handlers.WebsocketHandler'>
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]:     '/iris/http/([^/]*)': <class 'mopidy_iris.handlers.HttpHandler'>
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]:     '/iris': <class 'mopidy.http.handlers.AddSlashHandler'>
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]:     '/local/(.+)': <class 'mopidy_local.web.ImageHandler'>
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]:     '/local/(index.html)?': <class 'mopidy_local.web.IndexHandler'>
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]:     '/local': <class 'mopidy.http.handlers.AddSlashHandler'>
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]:     '/youtube/(.*\\.(?:webm|m4a|mp3|ogg))': <class 'mopidy_youtube.web.AudioHandler'>
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]:     '/youtube/(.*\\.jpg)': <class 'mopidy_youtube.web.ImageHandler'>
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]:     '/youtube/(index.html|image.html)?': <class 'mopidy_youtube.web.IndexHandler'>
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]:     '/youtube': <class 'mopidy.http.handlers.AddSlashHandler'>
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]:   HTTP routes from extensions:
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]: DEBUG    2022-10-23 23:54:32,385 [10074:HttpServer] mopidy.http.actor
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]:   Default webclient is mopidy
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]: DEBUG    2022-10-23 23:54:32,385 [10074:HttpServer] mopidy.http.actor
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]:   Loaded HTTP extension: mopidy
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]: DEBUG    2022-10-23 23:54:32,385 [10074:HttpServer] mopidy.http.actor
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]:   Loaded HTTP extension: iris
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]: DEBUG    2022-10-23 23:54:32,385 [10074:HttpServer] mopidy.http.actor
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]:   Loaded HTTP extension: local
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]: DEBUG    2022-10-23 23:54:32,383 [10074:HttpServer] mopidy.http.actor
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]:   Loaded HTTP extension: youtube
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]: DEBUG    2022-10-23 23:54:32,381 [10074:HttpServer] mopidy.http.actor
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]:   Starting GLib mainloop
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]: INFO     2022-10-23 23:54:32,378 [10074:MainThread] mopidy.commands
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]:   Using selector: EpollSelector
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]: DEBUG    2022-10-23 23:54:32,378 [10074:HttpServer] asyncio
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]:   HttpFrontend took 1ms
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]: TRACE    2022-10-23 23:54:32,378 [10074:MainThread] mopidy.internal.timer
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]:   HTTP server running at [::ffff:127.0.0.1]:6680
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]: INFO     2022-10-23 23:54:32,377 [10074:HttpFrontend-12 (_actor_loop)] mopidy.http.actor
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]:   Starting HttpFrontend (urn:uuid:b2ff8abb-cecb-4835-a965-9a122760617f)
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]: DEBUG    2022-10-23 23:54:32,377 [10074:MainThread] pykka
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]:   Registered HttpFrontend (urn:uuid:b2ff8abb-cecb-4835-a965-9a122760617f)
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]: DEBUG    2022-10-23 23:54:32,377 [10074:MainThread] pykka
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]:   Starting HTTP server
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]: DEBUG    2022-10-23 23:54:32,377 [10074:MainThread] mopidy.http.actor
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]:   IrisFrontend took 0ms
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]: TRACE    2022-10-23 23:54:32,376 [10074:MainThread] mopidy.internal.timer
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]:   Starting Iris 3.64.1
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]: INFO     2022-10-23 23:54:32,376 [10074:IrisFrontend-10 (_actor_loop)] mopidy_iris.core
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]:   Starting IrisFrontend (urn:uuid:ff97b094-f35d-4d67-99a9-f294784c708d)
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]: DEBUG    2022-10-23 23:54:32,376 [10074:MainThread] pykka
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]:   Registered IrisFrontend (urn:uuid:ff97b094-f35d-4d67-99a9-f294784c708d)
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]: DEBUG    2022-10-23 23:54:32,376 [10074:MainThread] pykka
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]:   YouTubeCoreListener took 0ms
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]: TRACE    2022-10-23 23:54:32,376 [10074:MainThread] mopidy.internal.timer
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]:   Starting YouTubeCoreListener (urn:uuid:3f6a3164-ea2a-416c-9fcc-95d09de6d503)
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]: DEBUG    2022-10-23 23:54:32,375 [10074:MainThread] pykka
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]:   Registered YouTubeCoreListener (urn:uuid:3f6a3164-ea2a-416c-9fcc-95d09de6d503)
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]: DEBUG    2022-10-23 23:54:32,375 [10074:MainThread] pykka
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]:   YouTubeAutoplayer took 0ms
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]: TRACE    2022-10-23 23:54:32,375 [10074:MainThread] mopidy.internal.timer
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]:   Starting YouTubeAutoplayer (urn:uuid:11d2a757-ccaa-4904-8e15-bb5ea1b19524)
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]: DEBUG    2022-10-23 23:54:32,375 [10074:MainThread] pykka
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]:   Registered YouTubeAutoplayer (urn:uuid:11d2a757-ccaa-4904-8e15-bb5ea1b19524)
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]: DEBUG    2022-10-23 23:54:32,375 [10074:MainThread] pykka
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]:   Starting Mopidy frontends: YouTubeAutoplayer, YouTubeCoreListener, IrisFrontend, HttpFrontend
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]: INFO     2022-10-23 23:54:32,375 [10074:MainThread] mopidy.commands
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]:   Starting Core (urn:uuid:cbd08166-2af0-4bab-9a21-b96f7dbc0ffb)
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]: DEBUG    2022-10-23 23:54:32,371 [10074:MainThread] pykka
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]:   Registered Core (urn:uuid:cbd08166-2af0-4bab-9a21-b96f7dbc0ffb)
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]: DEBUG    2022-10-23 23:54:32,371 [10074:MainThread] pykka
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]:   Starting Mopidy core
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]: INFO     2022-10-23 23:54:32,369 [10074:MainThread] mopidy.commands
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]:   StreamBackend took 5ms
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]: TRACE    2022-10-23 23:54:32,368 [10074:MainThread] mopidy.internal.timer
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]:   Starting StreamBackend (urn:uuid:d7cd5c4a-a0b4-46c1-9bea-8dab1cc8ce08)
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]: DEBUG    2022-10-23 23:54:32,366 [10074:MainThread] pykka
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]:   Registered StreamBackend (urn:uuid:d7cd5c4a-a0b4-46c1-9bea-8dab1cc8ce08)
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]: DEBUG    2022-10-23 23:54:32,366 [10074:MainThread] pykka
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]:   M3UBackend took 2ms
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]: TRACE    2022-10-23 23:54:32,363 [10074:MainThread] mopidy.internal.timer
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]:   Starting M3UBackend (urn:uuid:18ba4c7c-875d-4c8b-9b4a-8efdc3002870)
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]: DEBUG    2022-10-23 23:54:32,361 [10074:MainThread] pykka
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]:   Registered M3UBackend (urn:uuid:18ba4c7c-875d-4c8b-9b4a-8efdc3002870)
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]: DEBUG    2022-10-23 23:54:32,361 [10074:MainThread] pykka
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]:   Audio output set to "pulsesink server=127.0.0.1"
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]: INFO     2022-10-23 23:54:32,360 [10074:Audio-2 (_actor_loop)] mopidy.audio.actor
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]:   FileBackend took 2ms
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]: TRACE    2022-10-23 23:54:32,360 [10074:MainThread] mopidy.internal.timer
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]:   Starting FileBackend (urn:uuid:6ff75c73-7a97-48f3-a94a-118c58323e82)
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]: DEBUG    2022-10-23 23:54:32,358 [10074:MainThread] pykka
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]:   Registered FileBackend (urn:uuid:6ff75c73-7a97-48f3-a94a-118c58323e82)
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]: DEBUG    2022-10-23 23:54:32,358 [10074:MainThread] pykka
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]:   Failed expanding path ($XDG_MUSIC_DIR) from file/media_dirs config value.
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]: DEBUG    2022-10-23 23:54:32,357 [10074:MainThread] mopidy.file.library
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]:   LocalBackend took 4ms
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]: TRACE    2022-10-23 23:54:32,357 [10074:MainThread] mopidy.internal.timer
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]:   Starting LocalBackend (urn:uuid:fa4200cf-3eed-4cd7-b487-a792440bd758)
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]: DEBUG    2022-10-23 23:54:32,354 [10074:MainThread] pykka
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]:   Registered LocalBackend (urn:uuid:fa4200cf-3eed-4cd7-b487-a792440bd758)
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]: DEBUG    2022-10-23 23:54:32,354 [10074:MainThread] pykka
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]:   Creating dir file:///var/lib/mopidy/local
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]: INFO     2022-10-23 23:54:32,354 [10074:MainThread] mopidy.internal.path
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]:   Local media dir /var/lib/mopidy/Music does not exist or we lack permissions to the directory or one of its parents
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]: WARNING  2022-10-23 23:54:32,353 [10074:MainThread] mopidy_local.storage
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]: ModuleNotFoundError: No module named 'ytmusicapi'
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]:     from ytmusicapi import YTMusic
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]:   File "/usr/local/lib/python3.10/dist-packages/mopidy_youtube/apis/youtube_music.py", line 7, in <module>
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]:     from mopidy_youtube.apis import youtube_music
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]:   File "/usr/local/lib/python3.10/dist-packages/mopidy_youtube/backend.py", line 84, in __init__
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]:     obj = cls(*args, **kwargs)
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]:   File "/usr/lib/python3/dist-packages/pykka/_actor.py", line 91, in start
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]:     backend = backend_class.start(
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]:   File "/usr/lib/python3/dist-packages/mopidy/commands.py", line 412, in start_backends
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]:     yield
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]:   File "/usr/lib/python3/dist-packages/mopidy/commands.py", line 248, in _actor_error_handling
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]: Traceback (most recent call last):
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]:   Got un-handled exception from YouTubeBackend
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]: ERROR    2022-10-23 23:54:32,351 [10074:MainThread] mopidy.commands
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]:   Starting Mopidy backends: YouTubeBackend, LocalBackend, FileBackend, M3UBackend, StreamBackend
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]: INFO     2022-10-23 23:54:32,350 [10074:MainThread] mopidy.commands
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]:   Starting Audio (urn:uuid:ab164f4e-9111-4118-ac9c-a0ecb3243721)
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]: DEBUG    2022-10-23 23:54:32,349 [10074:MainThread] pykka
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]:   Registered Audio (urn:uuid:ab164f4e-9111-4118-ac9c-a0ecb3243721)
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]: DEBUG    2022-10-23 23:54:32,349 [10074:MainThread] pykka
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]:   Starting Mopidy audio
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]: INFO     2022-10-23 23:54:32,349 [10074:MainThread] mopidy.commands
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]:   Mixer volume left unchanged
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]: DEBUG    2022-10-23 23:54:32,349 [10074:MainThread] mopidy.commands
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]:   Starting SoftwareMixer (urn:uuid:766549ca-6b32-4406-8b41-e3b4161b404a)
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]: DEBUG    2022-10-23 23:54:32,348 [10074:MainThread] pykka
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]:   Registered SoftwareMixer (urn:uuid:766549ca-6b32-4406-8b41-e3b4161b404a)
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]: DEBUG    2022-10-23 23:54:32,348 [10074:MainThread] pykka
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]:   Starting Mopidy mixer: SoftwareMixer
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]: INFO     2022-10-23 23:54:32,348 [10074:MainThread] mopidy.commands
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]:   Available Mopidy mixers: SoftwareMixer
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]: DEBUG    2022-10-23 23:54:32,348 [10074:MainThread] mopidy.commands
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]:   Disabled extensions: soundcloud
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]: INFO     2022-10-23 23:54:32,269 [10074:MainThread] mopidy.__main__
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]:   Enabled extensions: local, http, m3u, iris, softwaremixer, youtube, file, stream
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]: INFO     2022-10-23 23:54:32,269 [10074:MainThread] mopidy.__main__
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]:   Validating extension: stream
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]: DEBUG    2022-10-23 23:54:32,269 [10074:MainThread] mopidy.ext
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]:   Validating extension: softwaremixer
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]: DEBUG    2022-10-23 23:54:32,269 [10074:MainThread] mopidy.ext
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]:   Validating extension: m3u
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]: DEBUG    2022-10-23 23:54:32,269 [10074:MainThread] mopidy.ext
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]:   Validating extension: http
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]: DEBUG    2022-10-23 23:54:32,215 [10074:MainThread] mopidy.ext
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]:   Validating extension: file
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]: DEBUG    2022-10-23 23:54:32,215 [10074:MainThread] mopidy.ext
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]:   Validating extension: iris
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]: DEBUG    2022-10-23 23:54:32,199 [10074:MainThread] mopidy.ext
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]:   Validating extension: soundcloud
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]: DEBUG    2022-10-23 23:54:32,173 [10074:MainThread] mopidy.ext
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]:   Validating extension: local
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]: DEBUG    2022-10-23 23:54:32,152 [10074:MainThread] mopidy.ext
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]:   Validating extension: youtube
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]: DEBUG    2022-10-23 23:54:32,100 [10074:MainThread] mopidy.ext
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]:   Ignoring config section 'ytmusic' because no matching extension was found
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]: WARNING  2022-10-23 23:54:32,099 [10074:MainThread] mopidy.config
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]:   Ignoring config section 'jukebox' because no matching extension was found
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]: WARNING  2022-10-23 23:54:32,099 [10074:MainThread] mopidy.config
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]:   Loading config from command line options
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]: INFO     2022-10-23 23:54:32,096 [10074:MainThread] mopidy.config
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]:   Loading config from file:///etc/mopidy/mopidy.conf
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]: INFO     2022-10-23 23:54:32,095 [10074:MainThread] mopidy.config
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]:   Loading config from file:///usr/share/mopidy/conf.d/mopidy.conf
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]: INFO     2022-10-23 23:54:32,095 [10074:MainThread] mopidy.config
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]:   Loading config from builtin defaults
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]: INFO     2022-10-23 23:54:32,093 [10074:MainThread] mopidy.config
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]:   Fetching passwords from your keyring failed. Any passwords stored in the keyring will not be available. (org.freedesktop.DBus.Error.NotSupported: Unable to autolaunch a dbus-daemon without a $DISPLAY for X11)
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]: DEBUG    2022-10-23 23:54:32,093 [10074:MainThread] mopidy.config.keyring
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]:   Discovered extensions: youtube, local, soundcloud, iris, file, http, m3u, softwaremixer, stream
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]: DEBUG    2022-10-23 23:54:32,091 [10074:MainThread] mopidy.ext
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]:   Loaded extension: Mopidy-Stream 3.3.0
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]: DEBUG    2022-10-23 23:54:32,088 [10074:MainThread] mopidy.ext
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]:   Loading entry point: stream = mopidy.stream:Extension
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]: DEBUG    2022-10-23 23:54:32,088 [10074:MainThread] mopidy.ext
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]:   Loaded extension: Mopidy-SoftwareMixer 3.3.0
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]: DEBUG    2022-10-23 23:54:32,088 [10074:MainThread] mopidy.ext
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]:   Loading entry point: softwaremixer = mopidy.softwaremixer:Extension
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]: DEBUG    2022-10-23 23:54:32,087 [10074:MainThread] mopidy.ext
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]:   Loaded extension: Mopidy-M3U 3.3.0
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]: DEBUG    2022-10-23 23:54:32,087 [10074:MainThread] mopidy.ext
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]:   Loading entry point: m3u = mopidy.m3u:Extension
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]: DEBUG    2022-10-23 23:54:32,087 [10074:MainThread] mopidy.ext
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]:   Loaded extension: Mopidy-HTTP 3.3.0
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]: DEBUG    2022-10-23 23:54:32,087 [10074:MainThread] mopidy.ext
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]:   Loading entry point: http = mopidy.http:Extension
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]: DEBUG    2022-10-23 23:54:32,086 [10074:MainThread] mopidy.ext
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]:   Loaded extension: Mopidy-File 3.3.0
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]: DEBUG    2022-10-23 23:54:32,086 [10074:MainThread] mopidy.ext
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]:   Loading entry point: file = mopidy.file:Extension
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]: DEBUG    2022-10-23 23:54:32,086 [10074:MainThread] mopidy.ext
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]:   Loaded extension: Mopidy-Iris 3.64.1
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]: DEBUG    2022-10-23 23:54:32,084 [10074:MainThread] mopidy.ext
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]:   Loading entry point: iris = mopidy_iris:Extension
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]: DEBUG    2022-10-23 23:54:32,083 [10074:MainThread] mopidy.ext
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]:   Loaded extension: Mopidy-SoundCloud 3.0.1
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]: DEBUG    2022-10-23 23:54:32,082 [10074:MainThread] mopidy.ext
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]:   Loading entry point: soundcloud = mopidy_soundcloud:Extension
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]: DEBUG    2022-10-23 23:54:32,082 [10074:MainThread] mopidy.ext
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]:   Loaded extension: Mopidy-Local 3.2.1
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]: DEBUG    2022-10-23 23:54:32,081 [10074:MainThread] mopidy.ext
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]:   Loading entry point: local = mopidy_local:Extension
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]: DEBUG    2022-10-23 23:54:32,070 [10074:MainThread] mopidy.ext
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]:   Loaded extension: Mopidy-YouTube 3.6.1
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]: DEBUG    2022-10-23 23:54:32,070 [10074:MainThread] mopidy.ext
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]:   Loading entry point: youtube = mopidy_youtube:Extension
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]: DEBUG    2022-10-23 23:54:32,069 [10074:MainThread] mopidy.ext
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]:   Starting Mopidy 3.3.0
okt 23 23:54:32 Desktop-Ubuntu mopidy[10074]: INFO     2022-10-23 23:54:32,067 [10074:MainThread] mopidy.__main__
okt 23 23:54:31 Desktop-Ubuntu systemd[1]: Started Mopidy music server.
okt 23 23:54:31 Desktop-Ubuntu systemd[1]: Starting Mopidy music server...
okt 23 23:54:31 Desktop-Ubuntu systemd[1]: Stopped Mopidy music server.
okt 23 23:54:31 Desktop-Ubuntu systemd[1]: mopidy.service: Deactivated successfully.
okt 23 23:54:31 Desktop-Ubuntu systemd[1]: Stopping Mopidy music server...
okt 23 23:54:31 Desktop-Ubuntu mopidy[9886]:   All actors stopped.
okt 23 23:54:31 Desktop-Ubuntu mopidy[9886]: DEBUG    2022-10-23 23:54:31,614 [9886:MainThread] mopidy.internal.process
okt 23 23:54:31 Desktop-Ubuntu mopidy[9886]:   Stopped SoftwareMixer (urn:uuid:d247b378-e3a8-4511-bc3d-8d1ef4f437d5)
okt 23 23:54:31 Desktop-Ubuntu mopidy[9886]: DEBUG    2022-10-23 23:54:31,614 [9886:SoftwareMixer-1 (_actor_loop)] pykka
okt 23 23:54:31 Desktop-Ubuntu mopidy[9886]:   Unregistered SoftwareMixer (urn:uuid:d247b378-e3a8-4511-bc3d-8d1ef4f437d5)
okt 23 23:54:31 Desktop-Ubuntu mopidy[9886]: DEBUG    2022-10-23 23:54:31,614 [9886:SoftwareMixer-1 (_actor_loop)] pykka
okt 23 23:54:31 Desktop-Ubuntu mopidy[9886]:   Stopping 1 instance(s) of SoftwareMixer
okt 23 23:54:31 Desktop-Ubuntu mopidy[9886]: DEBUG    2022-10-23 23:54:31,614 [9886:MainThread] mopidy.internal.process
okt 23 23:54:31 Desktop-Ubuntu mopidy[9886]:   Stopping Mopidy mixer
okt 23 23:54:31 Desktop-Ubuntu mopidy[9886]: INFO     2022-10-23 23:54:31,614 [9886:MainThread] mopidy.commands
okt 23 23:54:31 Desktop-Ubuntu mopidy[9886]:   Stopped Audio (urn:uuid:231134f2-1b50-47e4-a115-81c7472391df)
okt 23 23:54:31 Desktop-Ubuntu mopidy[9886]: DEBUG    2022-10-23 23:54:31,613 [9886:Audio-2 (_actor_loop)] pykka
okt 23 23:54:31 Desktop-Ubuntu mopidy[9886]:   Unregistered Audio (urn:uuid:231134f2-1b50-47e4-a115-81c7472391df)
okt 23 23:54:31 Desktop-Ubuntu mopidy[9886]: DEBUG    2022-10-23 23:54:31,613 [9886:Audio-2 (_actor_loop)] pykka
okt 23 23:54:31 Desktop-Ubuntu mopidy[9886]:   Stopping 1 instance(s) of Audio
okt 23 23:54:31 Desktop-Ubuntu mopidy[9886]: DEBUG    2022-10-23 23:54:31,613 [9886:MainThread] mopidy.internal.process
okt 23 23:54:31 Desktop-Ubuntu mopidy[9886]:   Stopping Mopidy audio
okt 23 23:54:31 Desktop-Ubuntu mopidy[9886]: INFO     2022-10-23 23:54:31,613 [9886:MainThread] mopidy.commands
okt 23 23:54:31 Desktop-Ubuntu mopidy[9886]:   Stopped StreamBackend (urn:uuid:822c74eb-5e52-4c58-bb25-3ce79f4f33fa)
okt 23 23:54:31 Desktop-Ubuntu mopidy[9886]: DEBUG    2022-10-23 23:54:31,613 [9886:StreamBackend-5 (_actor_loop)] pykka
okt 23 23:54:31 Desktop-Ubuntu mopidy[9886]:   Unregistered StreamBackend (urn:uuid:822c74eb-5e52-4c58-bb25-3ce79f4f33fa)
okt 23 23:54:31 Desktop-Ubuntu mopidy[9886]: DEBUG    2022-10-23 23:54:31,612 [9886:StreamBackend-5 (_actor_loop)] pykka
okt 23 23:54:31 Desktop-Ubuntu mopidy[9886]:   Stopping 1 instance(s) of StreamBackend
okt 23 23:54:31 Desktop-Ubuntu mopidy[9886]: DEBUG    2022-10-23 23:54:31,612 [9886:MainThread] mopidy.internal.process
okt 23 23:54:31 Desktop-Ubuntu mopidy[9886]:   Stopped M3UBackend (urn:uuid:49de748d-1d00-4853-ba85-79d62f126517)
okt 23 23:54:31 Desktop-Ubuntu mopidy[9886]: DEBUG    2022-10-23 23:54:31,612 [9886:M3UBackend-4 (_actor_loop)] pykka
okt 23 23:54:31 Desktop-Ubuntu mopidy[9886]:   Unregistered M3UBackend (urn:uuid:49de748d-1d00-4853-ba85-79d62f126517)
okt 23 23:54:31 Desktop-Ubuntu mopidy[9886]: DEBUG    2022-10-23 23:54:31,612 [9886:M3UBackend-4 (_actor_loop)] pykka
okt 23 23:54:31 Desktop-Ubuntu mopidy[9886]:   Stopping 1 instance(s) of M3UBackend
okt 23 23:54:31 Desktop-Ubuntu mopidy[9886]: DEBUG    2022-10-23 23:54:31,612 [9886:MainThread] mopidy.internal.process
okt 23 23:54:31 Desktop-Ubuntu mopidy[9886]:   Stopped FileBackend (urn:uuid:a4c4eebd-8f58-4fbf-899f-dbd6ffc56611)
okt 23 23:54:31 Desktop-Ubuntu mopidy[9886]: DEBUG    2022-10-23 23:54:31,612 [9886:FileBackend-3 (_actor_loop)] pykka
okt 23 23:54:31 Desktop-Ubuntu mopidy[9886]:   Unregistered FileBackend (urn:uuid:a4c4eebd-8f58-4fbf-899f-dbd6ffc56611)
okt 23 23:54:31 Desktop-Ubuntu mopidy[9886]: DEBUG    2022-10-23 23:54:31,611 [9886:FileBackend-3 (_actor_loop)] pykka
okt 23 23:54:31 Desktop-Ubuntu mopidy[9886]:   Stopping 1 instance(s) of FileBackend
okt 23 23:54:31 Desktop-Ubuntu mopidy[9886]: DEBUG    2022-10-23 23:54:31,611 [9886:MainThread] mopidy.internal.process
okt 23 23:54:31 Desktop-Ubuntu mopidy[9886]:   Stopping 0 instance(s) of YouTubeBackend
okt 23 23:54:31 Desktop-Ubuntu mopidy[9886]: DEBUG    2022-10-23 23:54:31,611 [9886:MainThread] mopidy.internal.process
okt 23 23:54:31 Desktop-Ubuntu mopidy[9886]:   Stopping Mopidy backends
okt 23 23:54:31 Desktop-Ubuntu mopidy[9886]: INFO     2022-10-23 23:54:31,611 [9886:MainThread] mopidy.commands
okt 23 23:54:31 Desktop-Ubuntu mopidy[9886]:   Stopped Core (urn:uuid:7e3215cd-82b4-460d-a986-785c1bc612bf)
okt 23 23:54:31 Desktop-Ubuntu mopidy[9886]: DEBUG    2022-10-23 23:54:31,611 [9886:Core-6 (_actor_loop)] pykka
okt 23 23:54:31 Desktop-Ubuntu mopidy[9886]:   Unregistered Core (urn:uuid:7e3215cd-82b4-460d-a986-785c1bc612bf)
okt 23 23:54:31 Desktop-Ubuntu mopidy[9886]: DEBUG    2022-10-23 23:54:31,611 [9886:Core-6 (_actor_loop)] pykka
okt 23 23:54:31 Desktop-Ubuntu mopidy[9886]:   Stopping 1 instance(s) of Core
okt 23 23:54:31 Desktop-Ubuntu mopidy[9886]: DEBUG    2022-10-23 23:54:31,611 [9886:MainThread] mopidy.internal.process
okt 23 23:54:31 Desktop-Ubuntu mopidy[9886]:   Stopped HTTP server
okt 23 23:54:31 Desktop-Ubuntu mopidy[9886]: DEBUG    2022-10-23 23:54:31,610 [9886:HttpServer] mopidy.http.actor
okt 23 23:54:31 Desktop-Ubuntu mopidy[9886]:   Stopping Mopidy core
okt 23 23:54:31 Desktop-Ubuntu mopidy[9886]: INFO     2022-10-23 23:54:31,610 [9886:MainThread] mopidy.commands
okt 23 23:54:31 Desktop-Ubuntu mopidy[9886]:   Stopping HTTP server
okt 23 23:54:31 Desktop-Ubuntu mopidy[9886]: DEBUG    2022-10-23 23:54:31,610 [9886:HttpFrontend-11 (_actor_loop)] mopidy.http.actor
okt 23 23:54:31 Desktop-Ubuntu mopidy[9886]:   Zeroconf service 'Mopidy HTTP server on Desktop-Ubuntu' (_mopidy-http._tcp at []:6680): Unpublished
okt 23 23:54:31 Desktop-Ubuntu mopidy[9886]: DEBUG    2022-10-23 23:54:31,610 [9886:HttpFrontend-11 (_actor_loop)] mopidy.zeroconf
okt 23 23:54:31 Desktop-Ubuntu mopidy[9886]:   Zeroconf service 'Mopidy HTTP server on Desktop-Ubuntu' (_http._tcp at []:6680): Unpublished
okt 23 23:54:31 Desktop-Ubuntu mopidy[9886]: DEBUG    2022-10-23 23:54:31,609 [9886:HttpFrontend-11 (_actor_loop)] mopidy.zeroconf
okt 23 23:54:31 Desktop-Ubuntu mopidy[9886]:   Stopped HttpFrontend (urn:uuid:6c7524d0-81e7-43dd-b3b9-c8f32844c95a)
okt 23 23:54:31 Desktop-Ubuntu mopidy[9886]: DEBUG    2022-10-23 23:54:31,608 [9886:HttpFrontend-11 (_actor_loop)] pykka
okt 23 23:54:31 Desktop-Ubuntu mopidy[9886]:   Unregistered HttpFrontend (urn:uuid:6c7524d0-81e7-43dd-b3b9-c8f32844c95a)
okt 23 23:54:31 Desktop-Ubuntu mopidy[9886]: DEBUG    2022-10-23 23:54:31,608 [9886:HttpFrontend-11 (_actor_loop)] pykka
okt 23 23:54:31 Desktop-Ubuntu mopidy[9886]:   Stopping 1 instance(s) of HttpFrontend
okt 23 23:54:31 Desktop-Ubuntu mopidy[9886]: DEBUG    2022-10-23 23:54:31,608 [9886:MainThread] mopidy.internal.process
okt 23 23:54:31 Desktop-Ubuntu mopidy[9886]:   Stopping Iris
okt 23 23:54:31 Desktop-Ubuntu mopidy[9886]: INFO     2022-10-23 23:54:31,608 [9886:IrisFrontend-9 (_actor_loop)] mopidy_iris.core
okt 23 23:54:31 Desktop-Ubuntu mopidy[9886]:   Stopped IrisFrontend (urn:uuid:05690baf-8ac6-42cf-b529-d238ba0da209)
okt 23 23:54:31 Desktop-Ubuntu mopidy[9886]: DEBUG    2022-10-23 23:54:31,608 [9886:IrisFrontend-9 (_actor_loop)] pykka
okt 23 23:54:31 Desktop-Ubuntu mopidy[9886]:   Unregistered IrisFrontend (urn:uuid:05690baf-8ac6-42cf-b529-d238ba0da209)
okt 23 23:54:31 Desktop-Ubuntu mopidy[9886]: DEBUG    2022-10-23 23:54:31,608 [9886:IrisFrontend-9 (_actor_loop)] pykka
okt 23 23:54:31 Desktop-Ubuntu mopidy[9886]:   Stopping 1 instance(s) of IrisFrontend
okt 23 23:54:31 Desktop-Ubuntu mopidy[9886]: DEBUG    2022-10-23 23:54:31,608 [9886:MainThread] mopidy.internal.process
okt 23 23:54:31 Desktop-Ubuntu mopidy[9886]:   Stopped YouTubeCoreListener (urn:uuid:d604562b-5e2d-4874-98a5-1a44d4fbec6e)
okt 23 23:54:31 Desktop-Ubuntu mopidy[9886]: DEBUG    2022-10-23 23:54:31,607 [9886:YouTubeCoreListener-8 (_actor_loop)] pykka
okt 23 23:54:31 Desktop-Ubuntu mopidy[9886]:   Unregistered YouTubeCoreListener (urn:uuid:d604562b-5e2d-4874-98a5-1a44d4fbec6e)
okt 23 23:54:31 Desktop-Ubuntu mopidy[9886]: DEBUG    2022-10-23 23:54:31,607 [9886:YouTubeCoreListener-8 (_actor_loop)] pykka
okt 23 23:54:31 Desktop-Ubuntu mopidy[9886]:   Stopping 1 instance(s) of YouTubeCoreListener
okt 23 23:54:31 Desktop-Ubuntu mopidy[9886]: DEBUG    2022-10-23 23:54:31,607 [9886:MainThread] mopidy.internal.process
okt 23 23:54:31 Desktop-Ubuntu mopidy[9886]:   Stopped YouTubeAutoplayer (urn:uuid:86b4ab2f-1d81-4c63-a851-370744834e7b)
okt 23 23:54:31 Desktop-Ubuntu mopidy[9886]: DEBUG    2022-10-23 23:54:31,607 [9886:YouTubeAutoplayer-7 (_actor_loop)] pykka
okt 23 23:54:31 Desktop-Ubuntu mopidy[9886]:   Unregistered YouTubeAutoplayer (urn:uuid:86b4ab2f-1d81-4c63-a851-370744834e7b)
okt 23 23:54:31 Desktop-Ubuntu mopidy[9886]: DEBUG    2022-10-23 23:54:31,607 [9886:YouTubeAutoplayer-7 (_actor_loop)] pykka
okt 23 23:54:31 Desktop-Ubuntu mopidy[9886]:   Stopping 1 instance(s) of YouTubeAutoplayer
okt 23 23:54:31 Desktop-Ubuntu mopidy[9886]: DEBUG    2022-10-23 23:54:31,607 [9886:MainThread] mopidy.internal.process
okt 23 23:54:31 Desktop-Ubuntu mopidy[9886]:   Stopping Mopidy frontends
okt 23 23:54:31 Desktop-Ubuntu mopidy[9886]: INFO     2022-10-23 23:54:31,606 [9886:MainThread] mopidy.commands
okt 23 23:54:31 Desktop-Ubuntu mopidy[9886]:   GLib mainloop got SIGTERM. Exiting...
okt 23 23:54:31 Desktop-Ubuntu mopidy[9886]: INFO     2022-10-23 23:54:31,606 [9886:MainThread] mopidy.commands
okt 23 23:53:43 Desktop-Ubuntu mopidy[9886]:   {'id': 166656202287985, 'jsonrpc': '2.0', 'method': 'get_version', 'result': {'version': {'current': '3.64.1', 'latest': '3.64.1', 'is_root': False, 'upgrade_available': False}}, 'recipient': 'ETK26WQ33JGY'}
okt 23 23:53:43 Desktop-Ubuntu mopidy[9886]: DEBUG    2022-10-23 23:53:43,019 [9886:HttpServer] mopidy_iris.core
okt 23 23:53:42 Desktop-Ubuntu mopidy[9886]:   Iris websocket message received: {"jsonrpc":"2.0","id":166656202287985,"method":"get_version"}
okt 23 23:53:42 Desktop-Ubuntu mopidy[9886]: DEBUG    2022-10-23 23:53:42,880 [9886:HttpServer] mopidy_iris.handlers
okt 23 23:53:42 Desktop-Ubuntu mopidy[9886]:   {'id': 166656202237834, 'jsonrpc': '2.0', 'method': 'get_queue_metadata', 'result': {'queue_metadata': {}}, 'recipient': 'ETK26WQ33JGY'}
okt 23 23:53:42 Desktop-Ubuntu mopidy[9886]: DEBUG    2022-10-23 23:53:42,379 [9886:HttpServer] mopidy_iris.core
okt 23 23:53:42 Desktop-Ubuntu mopidy[9886]:   Iris websocket message received: {"jsonrpc":"2.0","id":166656202237834,"method":"get_queue_metadata"}
okt 23 23:53:42 Desktop-Ubuntu mopidy[9886]: DEBUG    2022-10-23 23:53:42,379 [9886:HttpServer] mopidy_iris.handlers
okt 23 23:53:42 Desktop-Ubuntu mopidy[9886]:   {'id': 166656202237837, 'jsonrpc': '2.0', 'method': 'get_pinned', 'result': {'pinned': []}, 'recipient': 'ETK26WQ33JGY'}
okt 23 23:53:42 Desktop-Ubuntu mopidy[9886]: DEBUG    2022-10-23 23:53:42,378 [9886:HttpServer] mopidy_iris.core
okt 23 23:53:42 Desktop-Ubuntu mopidy[9886]:   Iris websocket message received: {"jsonrpc":"2.0","id":166656202237837,"method":"get_pinned"}
okt 23 23:53:42 Desktop-Ubuntu mopidy[9886]: DEBUG    2022-10-23 23:53:42,378 [9886:HttpServer] mopidy_iris.handlers
okt 23 23:53:42 Desktop-Ubuntu mopidy[9886]:   {'id': 166656202237714, 'jsonrpc': '2.0', 'method': 'get_commands', 'result': {'commands': {}}, 'recipient': 'ETK26WQ33JGY'}
okt 23 23:53:42 Desktop-Ubuntu mopidy[9886]: DEBUG    2022-10-23 23:53:42,377 [9886:HttpServer] mopidy_iris.core
okt 23 23:53:42 Desktop-Ubuntu mopidy[9886]:   Iris websocket message received: {"jsonrpc":"2.0","id":166656202237714,"method":"get_commands"}
okt 23 23:53:42 Desktop-Ubuntu mopidy[9886]: DEBUG    2022-10-23 23:53:42,377 [9886:HttpServer] mopidy_iris.handlers
okt 23 23:53:42 Desktop-Ubuntu mopidy[9886]:   {'id': 16665620223764, 'jsonrpc': '2.0', 'method': 'get_radio', 'result': {'radio': {'enabled': 0, 'seed_artists': [], 'seed_genres': [], 'seed_tracks': [], 'results': []}}, 'recipient': 'ETK26WQ33JGY'}
okt 23 23:53:42 Desktop-Ubuntu mopidy[9886]: DEBUG    2022-10-23 23:53:42,377 [9886:HttpServer] mopidy_iris.core
okt 23 23:53:42 Desktop-Ubuntu mopidy[9886]:   Iris websocket message received: {"jsonrpc":"2.0","id":16665620223764,"method":"get_radio"}
okt 23 23:53:42 Desktop-Ubuntu mopidy[9886]: DEBUG    2022-10-23 23:53:42,377 [9886:HttpServer] mopidy_iris.handlers
okt 23 23:53:42 Desktop-Ubuntu mopidy[9886]:   {'id': 166656202237611, 'jsonrpc': '2.0', 'method': 'get_shared_config', 'result': {'shared_config': {}}, 'recipient': 'ETK26WQ33JGY'}
okt 23 23:53:42 Desktop-Ubuntu mopidy[9886]: DEBUG    2022-10-23 23:53:42,376 [9886:HttpServer] mopidy_iris.core
okt 23 23:53:42 Desktop-Ubuntu mopidy[9886]:   Iris websocket message received: {"jsonrpc":"2.0","id":166656202237611,"method":"get_shared_config"}
okt 23 23:53:42 Desktop-Ubuntu mopidy[9886]: DEBUG    2022-10-23 23:53:42,376 [9886:HttpServer] mopidy_iris.handlers
okt 23 23:53:42 Desktop-Ubuntu mopidy[9886]:   {'id': 16665620223754, 'jsonrpc': '2.0', 'method': 'get_config', 'result': {'config': {'is_root': False, 'spotify_username': False, 'country': 'NZ', 'locale': 'en_NZ', 'snapcast_enabled': True, 'snapcast_host': 'localhost', 'snapcast_port': '1780', 'snapcast_ssl': False, 'snapcast_stream': 'Default', 'spotify_authorization_url': 'https://jamesbarnsley.co.nz/iris/auth_spotify.php', 'lastfm_authorization_url': 'https://jamesbarnsley.co.nz/iris/auth_lastfm.php', 'genius_authorization_url': 'https://jamesbarnsley.co.nz/iris/auth_genius.php', 'shared_config': {}}}, 'recipient': 'ETK26WQ33JGY'}
okt 23 23:53:42 Desktop-Ubuntu mopidy[9886]: DEBUG    2022-10-23 23:53:42,376 [9886:HttpServer] mopidy_iris.core
okt 23 23:53:42 Desktop-Ubuntu mopidy[9886]:   Iris websocket message received: {"jsonrpc":"2.0","id":16665620223754,"method":"get_config"}
okt 23 23:53:42 Desktop-Ubuntu mopidy[9886]: DEBUG    2022-10-23 23:53:42,376 [9886:HttpServer] mopidy_iris.handlers
okt 23 23:53:42 Desktop-Ubuntu mopidy[9886]:   {'id': 166656202237448, 'jsonrpc': '2.0', 'method': 'update_connection', 'result': {'connection': {'connection_id': 'ETK26WQ33JGY', 'ip': '127.0.0.1', 'created': '2022-10-23 23:53:42', 'username': 166656148284185, 'client_id': 166656148284193}}, 'recipient': 'ETK26WQ33JGY'}
okt 23 23:53:42 Desktop-Ubuntu mopidy[9886]: DEBUG    2022-10-23 23:53:42,375 [9886:HttpServer] mopidy_iris.core
okt 23 23:53:42 Desktop-Ubuntu mopidy[9886]:   {'method': 'connection_changed', 'params': {'connection': {'connection_id': 'ETK26WQ33JGY', 'ip': '127.0.0.1', 'created': '2022-10-23 23:53:42', 'username': 166656148284185, 'client_id': 166656148284193}}}
okt 23 23:53:42 Desktop-Ubuntu mopidy[9886]: DEBUG    2022-10-23 23:53:42,375 [9886:HttpServer] mopidy_iris.core
okt 23 23:53:42 Desktop-Ubuntu mopidy[9886]:   Iris websocket message received: {"jsonrpc":"2.0","id":166656202237448,"method":"update_connection","params":{"username":166656148284185,"client_id":166656148284193}}
okt 23 23:53:42 Desktop-Ubuntu mopidy[9886]: DEBUG    2022-10-23 23:53:42,375 [9886:HttpServer] mopidy_iris.handlers
okt 23 23:53:42 Desktop-Ubuntu mopidy[9886]:   {'method': 'connection_added', 'params': {'connection': {'connection_id': 'ETK26WQ33JGY', 'ip': '127.0.0.1', 'created': '2022-10-23 23:53:42'}}}
okt 23 23:53:42 Desktop-Ubuntu mopidy[9886]: DEBUG    2022-10-23 23:53:42,371 [9886:HttpServer] mopidy_iris.core
okt 23 23:53:42 Desktop-Ubuntu mopidy[9886]:   <mopidy_iris.handlers.WebsocketHandler object at 0x7f3a10102680>
okt 23 23:53:42 Desktop-Ubuntu mopidy[9886]: DEBUG    2022-10-23 23:53:42,371 [9886:HttpServer] mopidy_iris.core
okt 23 23:53:42 Desktop-Ubuntu mopidy[9886]:   Connection added
okt 23 23:53:42 Desktop-Ubuntu mopidy[9886]: DEBUG    2022-10-23 23:53:42,371 [9886:HttpServer] mopidy_iris.core
okt 23 23:53:42 Desktop-Ubuntu mopidy[9886]:   101 GET /iris/ws/ (127.0.0.1) 0.55ms
okt 23 23:53:42 Desktop-Ubuntu mopidy[9886]: INFO     2022-10-23 23:53:42,371 [9886:HttpServer] tornado.access
okt 23 23:53:38 Desktop-Ubuntu mopidy[9886]:   304 GET /iris/assets/favicon_error.png (127.0.0.1) 0.53ms
okt 23 23:53:38 Desktop-Ubuntu mopidy[9886]: INFO     2022-10-23 23:53:38,413 [9886:HttpServer] tornado.access
okt 23 23:53:38 Desktop-Ubuntu mopidy[9886]:   304 GET /iris/assets/favicon_paused.png (127.0.0.1) 5.54ms
okt 23 23:53:38 Desktop-Ubuntu mopidy[9886]: INFO     2022-10-23 23:53:38,407 [9886:HttpServer] tornado.access
okt 23 23:53:38 Desktop-Ubuntu mopidy[9886]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 24, "result": null}'
okt 23 23:53:38 Desktop-Ubuntu mopidy[9886]: DEBUG    2022-10-23 23:53:38,343 [9886:HttpServer] mopidy.http.handlers
okt 23 23:53:38 Desktop-Ubuntu mopidy[9886]:   Received WebSocket message from 127.0.0.1: '{"method":"core.playback.get_stream_title","params":{},"jsonrpc":"2.0","id":24}'
okt 23 23:53:38 Desktop-Ubuntu mopidy[9886]: DEBUG    2022-10-23 23:53:38,342 [9886:HttpServer] mopidy.http.handlers
okt 23 23:53:38 Desktop-Ubuntu mopidy[9886]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 23, "result": ["file", "http", "https", "m3u", "rtsp"]}'
okt 23 23:53:38 Desktop-Ubuntu mopidy[9886]: DEBUG    2022-10-23 23:53:38,342 [9886:HttpServer] mopidy.http.handlers
okt 23 23:53:38 Desktop-Ubuntu mopidy[9886]:   Received WebSocket message from 127.0.0.1: '{"method":"core.get_uri_schemes","params":{},"jsonrpc":"2.0","id":23}'
okt 23 23:53:38 Desktop-Ubuntu mopidy[9886]: DEBUG    2022-10-23 23:53:38,342 [9886:HttpServer] mopidy.http.handlers
okt 23 23:53:38 Desktop-Ubuntu mopidy[9886]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 22, "result": 0}'
okt 23 23:53:38 Desktop-Ubuntu mopidy[9886]: DEBUG    2022-10-23 23:53:38,341 [9886:HttpServer] mopidy.http.handlers
okt 23 23:53:38 Desktop-Ubuntu mopidy[9886]:   Received WebSocket message from 127.0.0.1: '{"method":"core.playback.get_time_position","params":{},"jsonrpc":"2.0","id":22}'
okt 23 23:53:38 Desktop-Ubuntu mopidy[9886]: DEBUG    2022-10-23 23:53:38,341 [9886:HttpServer] mopidy.http.handlers
okt 23 23:53:38 Desktop-Ubuntu mopidy[9886]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 21, "result": []}'
okt 23 23:53:38 Desktop-Ubuntu mopidy[9886]: DEBUG    2022-10-23 23:53:38,341 [9886:HttpServer] mopidy.http.handlers
okt 23 23:53:38 Desktop-Ubuntu mopidy[9886]:   Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_tl_tracks","params":{},"jsonrpc":"2.0","id":21}'
okt 23 23:53:38 Desktop-Ubuntu mopidy[9886]: DEBUG    2022-10-23 23:53:38,340 [9886:HttpServer] mopidy.http.handlers
okt 23 23:53:38 Desktop-Ubuntu mopidy[9886]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 20, "result": false}'
okt 23 23:53:38 Desktop-Ubuntu mopidy[9886]: DEBUG    2022-10-23 23:53:38,340 [9886:HttpServer] mopidy.http.handlers
okt 23 23:53:38 Desktop-Ubuntu mopidy[9886]:   Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_repeat","params":{},"jsonrpc":"2.0","id":20}'
okt 23 23:53:38 Desktop-Ubuntu mopidy[9886]: DEBUG    2022-10-23 23:53:38,340 [9886:HttpServer] mopidy.http.handlers
okt 23 23:53:38 Desktop-Ubuntu mopidy[9886]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 19, "result": false}'
okt 23 23:53:38 Desktop-Ubuntu mopidy[9886]: DEBUG    2022-10-23 23:53:38,340 [9886:HttpServer] mopidy.http.handlers
okt 23 23:53:38 Desktop-Ubuntu mopidy[9886]:   Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_random","params":{},"jsonrpc":"2.0","id":19}'
okt 23 23:53:38 Desktop-Ubuntu mopidy[9886]: DEBUG    2022-10-23 23:53:38,340 [9886:HttpServer] mopidy.http.handlers
okt 23 23:53:38 Desktop-Ubuntu mopidy[9886]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 18, "result": false}'
okt 23 23:53:38 Desktop-Ubuntu mopidy[9886]: DEBUG    2022-10-23 23:53:38,339 [9886:HttpServer] mopidy.http.handlers
okt 23 23:53:38 Desktop-Ubuntu mopidy[9886]:   Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_consume","params":{},"jsonrpc":"2.0","id":18}'
okt 23 23:53:38 Desktop-Ubuntu mopidy[9886]: DEBUG    2022-10-23 23:53:38,339 [9886:HttpServer] mopidy.http.handlers
okt 23 23:53:38 Desktop-Ubuntu mopidy[9886]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 17, "result": false}'
okt 23 23:53:38 Desktop-Ubuntu mopidy[9886]: DEBUG    2022-10-23 23:53:38,339 [9886:HttpServer] mopidy.http.handlers
okt 23 23:53:38 Desktop-Ubuntu mopidy[9886]:   Received WebSocket message from 127.0.0.1: '{"method":"core.mixer.get_mute","params":{},"jsonrpc":"2.0","id":17}'
okt 23 23:53:38 Desktop-Ubuntu mopidy[9886]: DEBUG    2022-10-23 23:53:38,338 [9886:HttpServer] mopidy.http.handlers
okt 23 23:53:38 Desktop-Ubuntu mopidy[9886]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 16, "result": 100}'
okt 23 23:53:38 Desktop-Ubuntu mopidy[9886]: DEBUG    2022-10-23 23:53:38,338 [9886:HttpServer] mopidy.http.handlers
okt 23 23:53:38 Desktop-Ubuntu mopidy[9886]:   Received WebSocket message from 127.0.0.1: '{"method":"core.mixer.get_volume","params":{},"jsonrpc":"2.0","id":16}'
okt 23 23:53:38 Desktop-Ubuntu mopidy[9886]: DEBUG    2022-10-23 23:53:38,337 [9886:HttpServer] mopidy.http.handlers
okt 23 23:53:38 Desktop-Ubuntu mopidy[9886]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 15, "result": "stopped"}'
okt 23 23:53:38 Desktop-Ubuntu mopidy[9886]: DEBUG    2022-10-23 23:53:38,337 [9886:HttpServer] mopidy.http.handlers
okt 23 23:53:38 Desktop-Ubuntu mopidy[9886]:   Received WebSocket message from 127.0.0.1: '{"method":"core.playback.get_state","params":{},"jsonrpc":"2.0","id":15}'
okt 23 23:53:38 Desktop-Ubuntu mopidy[9886]: DEBUG    2022-10-23 23:53:38,337 [9886:HttpServer] mopidy.http.handlers
okt 23 23:53:38 Desktop-Ubuntu mopidy[9886]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 14, "result": null}'
okt 23 23:53:38 Desktop-Ubuntu mopidy[9886]: DEBUG    2022-10-23 23:53:38,336 [9886:HttpServer] mopidy.http.handlers
okt 23 23:53:38 Desktop-Ubuntu mopidy[9886]:   Received WebSocket message from 127.0.0.1: '{"method":"core.playback.get_current_tl_track","params":{},"jsonrpc":"2.0","id":14}'
okt 23 23:53:38 Desktop-Ubuntu mopidy[9886]: DEBUG    2022-10-23 23:53:38,336 [9886:HttpServer] mopidy.http.handlers
okt 23 23:53:38 Desktop-Ubuntu mopidy[9886]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 13, "result": {"core.get_uri_schemes": {"description": "Get list of URI schemes we can handle", "params": []}, "core.get_version": {"description": "Get version of the Mopidy core API", "params": []}, "core.history.get_history": {"description": "Get the track history.\\n\\nThe timestamps are milliseconds since epoch.\\n\\n:returns: the track history\\n:rtype: list of (timestamp, :class:`mopidy.models.Ref`) tuples", "params": []}, "core.history.get_length": {"description": "Get the number of tracks in the history.\\n\\n:returns: the history length\\n:rtype: int", "params": []}, "core.library.browse": {"description": "Browse directories and tracks at the given ``uri``.\\n\\n``uri`` is a string which represents some directory belonging to a\\nbackend. To get the intial root directories for backends pass\\n:class:`None` as the URI.\\n\\nReturns a list of :class:`mopidy.models.Ref` objects for the\\ndirectories and tracks at the given ``uri``.\\n\\nThe :class:`~mopidy.models.Ref` objects representing tracks keep the\\ntrack\'s original URI. A matching pair of objects can look like this::\\n\\n    Track(uri=\'dummy:/foo.mp3\', name=\'foo\', artists=..., album=...)\\n    Ref.track(uri=\'dummy:/foo.mp3\', name=\'foo\')\\n\\nThe :class:`~mopidy.models.Ref` objects representing directories have\\nbackend specific URIs. These are opaque values, so no one but the\\nbackend that created them should try and derive any meaning from them.\\nThe only valid exception to this is checking the scheme, as it is used\\nto route browse requests to the correct backend.\\n\\nFor example, the dummy library\'s ``/bar`` directory could be returned\\nlike this::\\n\\n    Ref.directory(uri=\'dummy:directory:/bar\', name=\'bar\')\\n\\n:param string uri: URI to browse\\n:rtype: list of :class:`mopidy.models.Ref`\\n\\n.. versionadded:: 0.18", "params": [{"name": "uri"}]}, "core.library.get_distinct": {"description": "List distinct values for a given field from the library.\\n\\nThis has mainly been added to support the list commands the MPD\\nprotocol supports in a more sane fashion. Other frontends are not\\nrecommended to use this method.\\n\\n:param string field: Any one of ``uri``, ``track_name``, ``album``,\\n    ``artist``, ``albumartist``, ``composer``, ``performer``,\\n    ``track_no``, ``genre``, ``date``, ``comment``, ``disc_no``,\\n    ``musicbrainz_albumid``, ``musicbrainz_artistid``, or\\n    ``musicbrainz_trackid``.\\n:param dict query: Query to use for limiting results, see\\n    :meth:`search` for details about the query format.\\n:rtype: set of values corresponding to the requested field type.\\n\\n.. versionadded:: 1.0", "params": [{"name": "field"}, {"name": "query", "default": null}]}, "core.library.get_images": {"description": "Lookup the images for the given URIs\\n\\nBackends can use this to return image URIs for any URI they know about\\nbe it tracks, albums, playlists. The lookup result is a dictionary\\nmapping the provided URIs to lists of images.\\n\\nUnknown URIs or URIs the corresponding backend couldn\'t find anything\\nfor will simply return an empty list for that URI.\\n\\n:param uris: list of URIs to find images for\\n:type uris: list of string\\n:rtype: {uri: tuple of :class:`mopidy.models.Image`}\\n\\n.. versionadded:: 1.0", "params": [{"name": "uris"}]}, "core.library.lookup": {"description": "Lookup the given URIs.\\n\\nIf the URI expands to multiple tracks, the returned list will contain\\nthem all.\\n\\n:param uris: track URIs\\n:type uris: list of string\\n:rtype: {uri: list of :class:`mopidy.models.Track`}", "params": [{"name": "uris"}]}, "core.library.refresh": {"description": "Refresh library. Limit to URI and below if an URI is given.\\n\\n:param uri: directory or track URI\\n:type uri: string", "params": [{"name": "uri", "default": null}]}, "core.library.search": {"description": "Search the library for tracks where ``field`` contains ``values``.\\n\\n``field`` can be one of ``uri``, ``track_name``, ``album``, ``artist``,\\n``albumartist``, ``composer``, ``performer``, ``track_no``, ``genre``,\\n``date``, ``comment``, ``disc_no``, ``musicbrainz_albumid``,\\n``musicbrainz_artistid``, ``musicbrainz_trackid`` or ``any``.\\n\\nIf ``uris`` is given, the search is limited to results from within the\\nURI roots. For example passing ``uris=[\'file:\']`` will limit the search\\nto the local backend.\\n\\nExamples::\\n\\n    # Returns results matching \'a\' in any backend\\n    search({\'any\': [\'a\']})\\n\\n    # Returns results matching artist \'xyz\' in any backend\\n    search({\'artist\': [\'xyz\']})\\n\\n    # Returns results matching \'a\' and \'b\' and artist \'xyz\' in any\\n    # backend\\n    search({\'any\': [\'a\', \'b\'], \'artist\': [\'xyz\']})\\n\\n    # Returns results matching \'a\' if within the given URI roots\\n    # \\"file:///media/music\\" and \\"spotify:\\"\\n    search({\'any\': [\'a\']}, uris=[\'file:///media/music\', \'spotify:\'])\\n\\n    # Returns results matching artist \'xyz\' and \'abc\' in any backend\\n    search({\'artist\': [\'xyz\', \'abc\']})\\n\\n:param query: one or more queries to search for\\n:type query: dict\\n:param uris: zero or more URI roots to limit the search to\\n:type uris: list of string or :class:`None`\\n:param exact: if the search should use exact matching\\n:type exact: :class:`bool`\\n:rtype: list of :class:`mopidy.models.SearchResult`\\n\\n.. versionadded:: 1.0\\n    The ``exact`` keyword argument.", "params": [{"name": "query"}, {"name": "uris", "default": null}, {"name": "exact", "default": false}]}, "core.mixer.get_mute": {"description": "Get mute state.\\n\\n:class:`True` if muted, :class:`False` unmuted, :class:`None` if\\nunknown.", "params": []}, "core.mixer.get_volume": {"description": "Get the volume.\\n\\nInteger in range [0..100] or :class:`None` if unknown.\\n\\nThe volume scale is linear.", "params": []}, "core.mixer.set_mute": {"description": "Set mute state.\\n\\n:class:`True` to mute, :class:`False` to unmute.\\n\\nReturns :class:`True` if call is successful, otherwise :class:`False`.", "params": [{"name": "mute"}]}, "core.mixer.set_volume": {"description": "Set the volume.\\n\\nThe volume is defined as an integer in range [0..100].\\n\\nThe volume scale is linear.\\n\\nReturns :class:`True` if call is successful, otherwise :class:`False`.", "params": [{"name": "volume"}]}, "core.playback.get_current_tl_track": {"description": "Get the currently playing or selected track.\\n\\nReturns a :class:`mopidy.models.TlTrack` or :class:`None`.", "params": []}, "core.playback.get_current_tlid": {"description": "Get the currently playing or selected TLID.\\n\\nExtracted from :meth:`get_current_tl_track` for convenience.\\n\\nReturns a :class:`int` or :class:`None`.\\n\\n.. versionadded:: 1.1", "params": []}, "core.playback.get_current_track": {"description": "Get the currently playing or selected track.\\n\\nExtracted from :meth:`get_current_tl_track` for convenience.\\n\\nReturns a :class:`mopidy.models.Track` or :class:`None`.", "params": []}, "core.playback.get_state": {"description": "Get The playback state.", "params": []}, "core.playback.get_stream_title": {"description": "Get the current stream title or :class:`None`.", "params": []}, "core.playback.get_time_position": {"description": "Get time position in milliseconds.", "params": []}, "core.playback.next": {"description": "Change to the next track.\\n\\nThe current playback state will be kept. If it was playing, playing\\nwill continue. If it was paused, it will still be paused, etc.", "params": []}, "core.playback.pause": {"description": "Pause playback.", "params": []}, "core.playback.play": {"description": "Play the given track, or if the given tl_track and tlid is\\n:class:`None`, play the currently active track.\\n\\nNote that the track **must** already be in the tracklist.\\n\\n.. deprecated:: 3.0\\n    The ``tl_track`` argument. Use ``tlid`` instead.\\n\\n:param tl_track: track to play\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:param tlid: TLID of the track to play\\n:type tlid: :class:`int` or :class:`None`", "params": [{"name": "tl_track", "default": null}, {"name": "tlid", "default": null}]}, "core.playback.previous": {"description": "Change to the previous track.\\n\\nThe current playback state will be kept. If it was playing, playing\\nwill continue. If it was paused, it will still be paused, etc.", "params": []}, "core.playback.resume": {"description": "If paused, resume playing the current track.", "params": []}, "core.playback.seek": {"description": "Seeks to time position given in milliseconds.\\n\\n:param time_position: time position in milliseconds\\n:type time_position: int\\n:rtype: :class:`True` if successful, else :class:`False`", "params": [{"name": "time_position"}]}, "core.playback.set_state": {"description": "Set the playback state.\\n\\nMust be :attr:`PLAYING`, :attr:`PAUSED`, or :attr:`STOPPED`.\\n\\nPossible states and transitions:\\n\\n.. digraph:: state_transitions\\n\\n    \\"STOPPED\\" -> \\"PLAYING\\" [ label=\\"play\\" ]\\n    \\"STOPPED\\" -> \\"PAUSED\\" [ label=\\"pause\\" ]\\n    \\"PLAYING\\" -> \\"STOPPED\\" [ label=\\"stop\\" ]\\n    \\"PLAYING\\" -> \\"PAUSED\\" [ label=\\"pause\\" ]\\n    \\"PLAYING\\" -> \\"PLAYING\\" [ label=\\"play\\" ]\\n    \\"PAUSED\\" -> \\"PLAYING\\" [ label=\\"resume\\" ]\\n    \\"PAUSED\\" -> \\"STOPPED\\" [ label=\\"stop\\" ]", "params": [{"name": "new_state"}]}, "core.playback.stop": {"description": "Stop playing.", "params": []}, "core.playlists.as_list": {"description": "Get a list of the currently available playlists.\\n\\nReturns a list of :class:`~mopidy.models.Ref` objects referring to the\\nplaylists. In other words, no information about the playlists\' content\\nis given.\\n\\n:rtype: list of :class:`mopidy.models.Ref`\\n\\n.. versionadded:: 1.0", "params": []}, "core.playlists.create": {"description": "Create a new playlist.\\n\\nIf ``uri_scheme`` matches an URI scheme handled by a current backend,\\nthat backend is asked to create the playlist. If ``uri_scheme`` is\\n:class:`None` or doesn\'t match a current backend, the first backend is\\nasked to create the playlist.\\n\\nAll new playlists must be created by calling this method, and **not**\\nby creating new instances of :class:`mopidy.models.Playlist`.\\n\\n:param name: name of the new playlist\\n:type name: string\\n:param uri_scheme: use the backend matching the URI scheme\\n:type uri_scheme: string\\n:rtype: :class:`mopidy.models.Playlist` or :class:`None`", "params": [{"name": "name"}, {"name": "uri_scheme", "default": null}]}, "core.playlists.delete": {"description": "Delete playlist identified by the URI.\\n\\nIf the URI doesn\'t match the URI schemes handled by the current\\nbackends, nothing happens.\\n\\nReturns :class:`True` if deleted, :class:`False` otherwise.\\n\\n:param uri: URI of the playlist to delete\\n:type uri: string\\n:rtype: :class:`bool`\\n\\n.. versionchanged:: 2.2\\n    Return type defined.", "params": [{"name": "uri"}]}, "core.playlists.get_items": {"description": "Get the items in a playlist specified by ``uri``.\\n\\nReturns a list of :class:`~mopidy.models.Ref` objects referring to the\\nplaylist\'s items.\\n\\nIf a playlist with the given ``uri`` doesn\'t exist, it returns\\n:class:`None`.\\n\\n:rtype: list of :class:`mopidy.models.Ref`, or :class:`None`\\n\\n.. versionadded:: 1.0", "params": [{"name": "uri"}]}, "core.playlists.get_uri_schemes": {"description": "Get the list of URI schemes that support playlists.\\n\\n:rtype: list of string\\n\\n.. versionadded:: 2.0", "params": []}, "core.playlists.lookup": {"description": "Lookup playlist with given URI in both the set of playlists and in any\\nother playlist sources. Returns :class:`None` if not found.\\n\\n:param uri: playlist URI\\n:type uri: string\\n:rtype: :class:`mopidy.models.Playlist` or :class:`None`", "params": [{"name": "uri"}]}, "core.playlists.refresh": {"description": "Refresh the playlists in :attr:`playlists`.\\n\\nIf ``uri_scheme`` is :class:`None`, all backends are asked to refresh.\\nIf ``uri_scheme`` is an URI scheme handled by a backend, only that\\nbackend is asked to refresh. If ``uri_scheme`` doesn\'t match any\\ncurrent backend, nothing happens.\\n\\n:param uri_scheme: limit to the backend matching the URI scheme\\n:type uri_scheme: string", "params": [{"name": "uri_scheme", "default": null}]}, "core.playlists.save": {"description": "Save the playlist.\\n\\nFor a playlist to be saveable, it must have the ``uri`` attribute set.\\nYou must not set the ``uri`` atribute yourself, but use playlist\\nobjects returned by :meth:`create` or retrieved from :attr:`playlists`,\\nwhich will always give you saveable playlists.\\n\\nThe method returns the saved playlist. The return playlist may differ\\nfrom the saved playlist. E.g. if the playlist name was changed, the\\nreturned playlist may have a different URI. The caller of this method\\nmust throw away the playlist sent to this method, and use the\\nreturned playlist instead.\\n\\nIf the playlist\'s URI isn\'t set or doesn\'t match the URI scheme of a\\ncurrent backend, nothing is done and :class:`None` is returned.\\n\\n:param playlist: the playlist\\n:type playlist: :class:`mopidy.models.Playlist`\\n:rtype: :class:`mopidy.models.Playlist` or :class:`None`", "params": [{"name": "playlist"}]}, "core.tracklist.add": {"description": "Add tracks to the tracklist.\\n\\nIf ``uris`` is given instead of ``tracks``, the URIs are\\nlooked up in the library and the resulting tracks are added to the\\ntracklist.\\n\\nIf ``at_position`` is given, the tracks are inserted at the given\\nposition in the tracklist. If ``at_position`` is not given, the tracks\\nare appended to the end of the tracklist.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.\\n\\n:param tracks: tracks to add\\n:type tracks: list of :class:`mopidy.models.Track` or :class:`None`\\n:param at_position: position in tracklist to add tracks\\n:type at_position: int or :class:`None`\\n:param uris: list of URIs for tracks to add\\n:type uris: list of string or :class:`None`\\n:rtype: list of :class:`mopidy.models.TlTrack`\\n\\n.. versionadded:: 1.0\\n    The ``uris`` argument.\\n\\n.. deprecated:: 1.0\\n    The ``tracks`` argument. Use ``uris``.", "params": [{"name": "tracks", "default": null}, {"name": "at_position", "default": null}, {"name": "uris", "default": null}]}, "core.tracklist.clear": {"description": "Clear the tracklist.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.", "params": []}, "core.tracklist.eot_track": {"description": "The track that will be played after the given track.\\n\\nNot necessarily the same track as :meth:`next_track`.\\n\\n.. deprecated:: 3.0\\n    Use :meth:`get_eot_tlid` instead.\\n\\n:param tl_track: the reference track\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:rtype: :class:`mopidy.models.TlTrack` or :class:`None`", "params": [{"name": "tl_track"}]}, "core.tracklist.filter": {"description": "Filter the tracklist by the given criteria.\\n\\nEach rule in the criteria consists of a model field and a list of\\nvalues to compare it against. If the model field matches any of the\\nvalues, it may be returned.\\n\\nOnly tracks that match all the given criteria are returned.\\n\\nExamples::\\n\\n    # Returns tracks with TLIDs 1, 2, 3, or 4 (tracklist ID)\\n    filter({\'tlid\': [1, 2, 3, 4]})\\n\\n    # Returns track with URIs \'xyz\' or \'abc\'\\n    filter({\'uri\': [\'xyz\', \'abc\']})\\n\\n    # Returns track with a matching TLIDs (1, 3 or 6) and a\\n    # matching URI (\'xyz\' or \'abc\')\\n    filter({\'tlid\': [1, 3, 6], \'uri\': [\'xyz\', \'abc\']})\\n\\n:param criteria: one or more rules to match by\\n:type criteria: dict, of (string, list) pairs\\n:rtype: list of :class:`mopidy.models.TlTrack`", "params": [{"name": "criteria"}]}, "core.tracklist.get_consume": {"description": "Get consume mode.\\n\\n:class:`True`\\n    Tracks are removed from the tracklist when they have been played.\\n:class:`False`\\n    Tracks are not removed from the tracklist.", "params": []}, "core.tracklist.get_eot_tlid": {"description": "The TLID of the track that will be played after the current track.\\n\\nNot necessarily the same TLID as returned by :meth:`get_next_tlid`.\\n\\n:rtype: :class:`int` or :class:`None`\\n\\n.. versionadded:: 1.1", "params": []}, "core.tracklist.get_length": {"description": "Get length of the tracklist.", "params": []}, "core.tracklist.get_next_tlid": {"description": "The tlid of the track that will be played if calling\\n:meth:`mopidy.core.PlaybackController.next()`.\\n\\nFor normal playback this is the next track in the tracklist. If repeat\\nis enabled the next track can loop around the tracklist. When random is\\nenabled this should be a random track, all tracks should be played once\\nbefore the tracklist repeats.\\n\\n:rtype: :class:`int` or :class:`None`\\n\\n.. versionadded:: 1.1", "params": []}, "core.tracklist.get_previous_tlid": {"description": "Returns the TLID of the track that will be played if calling\\n:meth:`mopidy.core.PlaybackController.previous()`.\\n\\nFor normal playback this is the previous track in the tracklist. If\\nrandom and/or consume is enabled it should return the current track\\ninstead.\\n\\n:rtype: :class:`int` or :class:`None`\\n\\n.. versionadded:: 1.1", "params": []}, "core.tracklist.get_random": {"description": "Get random mode.\\n\\n:class:`True`\\n    Tracks are selected at random from the tracklist.\\n:class:`False`\\n    Tracks are played in the order of the tracklist.", "params": []}, "core.tracklist.get_repeat": {"description": "Get repeat mode.\\n\\n:class:`True`\\n    The tracklist is played repeatedly.\\n:class:`False`\\n    The tracklist is played once.", "params": []}, "core.tracklist.get_single": {"description": "Get single mode.\\n\\n:class:`True`\\n    Playback is stopped after current song, unless in ``repeat`` mode.\\n:class:`False`\\n    Playback continues after current song.", "params": []}, "core.tracklist.get_tl_tracks": {"description": "Get tracklist as list of :class:`mopidy.models.TlTrack`.", "params": []}, "core.tracklist.get_tracks": {"description": "Get tracklist as list of :class:`mopidy.models.Track`.", "params": []}, "core.tracklist.get_version": {"description": "Get the tracklist version.\\n\\nInteger which is increased every time the tracklist is changed. Is not\\nreset before Mopidy is restarted.", "params": []}, "core.tracklist.index": {"description": "The position of the given track in the tracklist.\\n\\nIf neither *tl_track* or *tlid* is given we return the index of\\nthe currently playing track.\\n\\n:param tl_track: the track to find the index of\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:param tlid: TLID of the track to find the index of\\n:type tlid: :class:`int` or :class:`None`\\n:rtype: :class:`int` or :class:`None`\\n\\n.. versionadded:: 1.1\\n    The *tlid* parameter", "params": [{"name": "tl_track", "default": null}, {"name": "tlid", "default": null}]}, "core.tracklist.move": {"description": "Move the tracks in the slice ``[start:end]`` to ``to_position``.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.\\n\\n:param start: position of first track to move\\n:type start: int\\n:param end: position after last track to move\\n:type end: int\\n:param to_position: new position for the tracks\\n:type to_position: int", "params": [{"name": "start"}, {"name": "end"}, {"name": "to_position"}]}, "core.tracklist.next_track": {"description": "The track that will be played if calling\\n:meth:`mopidy.core.PlaybackController.next()`.\\n\\nFor normal playback this is the next track in the tracklist. If repeat\\nis enabled the next track can loop around the tracklist. When random is\\nenabled this should be a random track, all tracks should be played once\\nbefore the tracklist repeats.\\n\\n.. deprecated:: 3.0\\n    Use :meth:`get_next_tlid` instead.\\n\\n:param tl_track: the reference track\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:rtype: :class:`mopidy.models.TlTrack` or :class:`None`", "params": [{"name": "tl_track"}]}, "core.tracklist.previous_track": {"description": "Returns the track that will be played if calling\\n:meth:`mopidy.core.PlaybackController.previous()`.\\n\\nFor normal playback this is the previous track in the tracklist. If\\nrandom and/or consume is enabled it should return the current track\\ninstead.\\n\\n.. deprecated:: 3.0\\n    Use :meth:`get_previous_tlid` instead.\\n\\n:param tl_track: the reference track\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:rtype: :class:`mopidy.models.TlTrack` or :class:`None`", "params": [{"name": "tl_track"}]}, "core.tracklist.remove": {"description": "Remove the matching tracks from the tracklist.\\n\\nUses :meth:`filter()` to lookup the tracks to remove.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.\\n\\n:param criteria: one or more rules to match by\\n:type criteria: dict, of (string, list) pairs\\n:rtype: list of :class:`mopidy.models.TlTrack` that were removed", "params": [{"name": "criteria"}]}, "core.tracklist.set_consume": {"description": "Set consume mode.\\n\\n:class:`True`\\n    Tracks are removed from the tracklist when they have been played.\\n:class:`False`\\n    Tracks are not removed from the tracklist.", "params": [{"name": "value"}]}, "core.tracklist.set_random": {"description": "Set random mode.\\n\\n:class:`True`\\n    Tracks are selected at random from the tracklist.\\n:class:`False`\\n    Tracks are played in the order of the tracklist.", "params": [{"name": "value"}]}, "core.tracklist.set_repeat": {"description": "Set repeat mode.\\n\\nTo repeat a single track, set both ``repeat`` and ``single``.\\n\\n:class:`True`\\n    The tracklist is played repeatedly.\\n:class:`False`\\n    The tracklist is played once.", "params": [{"name": "value"}]}, "core.tracklist.set_single": {"description": "Set single mode.\\n\\n:class:`True`\\n    Playback is stopped after current song, unless in ``repeat`` mode.\\n:class:`False`\\n    Playback continues after current song.", "params": [{"name": "value"}]}, "core.tracklist.shuffle": {"description": "Shuffles the entire tracklist. If ``start`` and ``end`` is given only\\nshuffles the slice ``[start:end]``.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.\\n\\n:param start: position of first track to shuffle\\n:type start: int or :class:`None`\\n:param end: position after last track to shuffle\\n:type end: int or :class:`None`", "params": [{"name": "start", "default": null}, {"name": "end", "default": null}]}, "core.tracklist.slice": {"description": "Returns a slice of the tracklist, limited by the given start and end\\npositions.\\n\\n:param start: position of first track to include in slice\\n:type start: int\\n:param end: position after last track to include in slice\\n:type end: int\\n:rtype: :class:`mopidy.models.TlTrack`", "params": [{"name": "start"}, {"name": "end"}]}}}'
okt 23 23:53:38 Desktop-Ubuntu mopidy[9886]: DEBUG    2022-10-23 23:53:38,327 [9886:HttpServer] mopidy.http.handlers
okt 23 23:53:38 Desktop-Ubuntu mopidy[9886]:   Received WebSocket message from 127.0.0.1: '{"method":"core.describe","jsonrpc":"2.0","id":13}'
okt 23 23:53:38 Desktop-Ubuntu mopidy[9886]: DEBUG    2022-10-23 23:53:38,323 [9886:HttpServer] mopidy.http.handlers
okt 23 23:53:38 Desktop-Ubuntu mopidy[9886]:   New WebSocket connection from 127.0.0.1
okt 23 23:53:38 Desktop-Ubuntu mopidy[9886]: DEBUG    2022-10-23 23:53:38,322 [9886:HttpServer] mopidy.http.handlers
okt 23 23:53:38 Desktop-Ubuntu mopidy[9886]:   101 GET /mopidy/ws/ (127.0.0.1) 19.51ms
okt 23 23:53:38 Desktop-Ubuntu mopidy[9886]: INFO     2022-10-23 23:53:38,321 [9886:HttpServer] tornado.access
okt 23 23:53:38 Desktop-Ubuntu mopidy[9886]:   Zeroconf service 'Mopidy HTTP server on Desktop-Ubuntu' (_mopidy-http._tcp at []:6680): Published
okt 23 23:53:38 Desktop-Ubuntu mopidy[9886]: DEBUG    2022-10-23 23:53:38,015 [9886:HttpFrontend-11 (_actor_loop)] mopidy.zeroconf
okt 23 23:53:38 Desktop-Ubuntu mopidy[9886]:   Zeroconf service 'Mopidy HTTP server on Desktop-Ubuntu' (_http._tcp at []:6680): Published
okt 23 23:53:38 Desktop-Ubuntu mopidy[9886]: DEBUG    2022-10-23 23:53:38,011 [9886:HttpFrontend-11 (_actor_loop)] mopidy.zeroconf
okt 23 23:53:38 Desktop-Ubuntu mopidy[9886]:     '/': <class 'tornado.web.RedirectHandler'>
okt 23 23:53:38 Desktop-Ubuntu mopidy[9886]:     '/mopidy/': <class 'mopidy.http.handlers.ClientListHandler'>
okt 23 23:53:38 Desktop-Ubuntu mopidy[9886]:     '/mopidy/(.+)': <class 'mopidy.http.handlers.StaticFileHandler'>
okt 23 23:53:38 Desktop-Ubuntu mopidy[9886]:     '/mopidy/rpc': <class 'mopidy.http.handlers.JsonRpcHandler'>
okt 23 23:53:38 Desktop-Ubuntu mopidy[9886]:     '/mopidy/ws/?': <class 'mopidy.http.handlers.WebSocketHandler'>
okt 23 23:53:38 Desktop-Ubuntu mopidy[9886]:     '/mopidy': <class 'mopidy.http.handlers.AddSlashHandler'>
okt 23 23:53:38 Desktop-Ubuntu mopidy[9886]:     '/iris/(.*)': <class 'mopidy_iris.handlers.ReactRouterHandler'>
okt 23 23:53:38 Desktop-Ubuntu mopidy[9886]:     '/iris/((.*)(?:css|js|json|map)$)': <class 'tornado.web.StaticFileHandler'>
okt 23 23:53:38 Desktop-Ubuntu mopidy[9886]:     '/iris/assets/(.*)': <class 'tornado.web.StaticFileHandler'>
okt 23 23:53:38 Desktop-Ubuntu mopidy[9886]:     '/iris/ws/?': <class 'mopidy_iris.handlers.WebsocketHandler'>
okt 23 23:53:38 Desktop-Ubuntu mopidy[9886]:     '/iris/http/([^/]*)': <class 'mopidy_iris.handlers.HttpHandler'>
okt 23 23:53:38 Desktop-Ubuntu mopidy[9886]:     '/iris': <class 'mopidy.http.handlers.AddSlashHandler'>
okt 23 23:53:38 Desktop-Ubuntu mopidy[9886]:     '/youtube/(.*\\.(?:webm|m4a|mp3|ogg))': <class 'mopidy_youtube.web.AudioHandler'>
okt 23 23:53:38 Desktop-Ubuntu mopidy[9886]:     '/youtube/(.*\\.jpg)': <class 'mopidy_youtube.web.ImageHandler'>
okt 23 23:53:38 Desktop-Ubuntu mopidy[9886]:     '/youtube/(index.html|image.html)?': <class 'mopidy_youtube.web.IndexHandler'>
okt 23 23:53:38 Desktop-Ubuntu mopidy[9886]:     '/youtube': <class 'mopidy.http.handlers.AddSlashHandler'>
okt 23 23:53:38 Desktop-Ubuntu mopidy[9886]:   HTTP routes from extensions:
okt 23 23:53:38 Desktop-Ubuntu mopidy[9886]: DEBUG    2022-10-23 23:53:38,003 [9886:HttpServer] mopidy.http.actor
okt 23 23:53:38 Desktop-Ubuntu mopidy[9886]:   Default webclient is mopidy
okt 23 23:53:38 Desktop-Ubuntu mopidy[9886]: DEBUG    2022-10-23 23:53:38,003 [9886:HttpServer] mopidy.http.actor
okt 23 23:53:38 Desktop-Ubuntu mopidy[9886]:   Loaded HTTP extension: mopidy
okt 23 23:53:38 Desktop-Ubuntu mopidy[9886]: DEBUG    2022-10-23 23:53:38,003 [9886:HttpServer] mopidy.http.actor
okt 23 23:53:38 Desktop-Ubuntu mopidy[9886]:   Loaded HTTP extension: iris
okt 23 23:53:38 Desktop-Ubuntu mopidy[9886]: DEBUG    2022-10-23 23:53:38,003 [9886:HttpServer] mopidy.http.actor
okt 23 23:53:38 Desktop-Ubuntu mopidy[9886]:   Loaded HTTP extension: youtube
okt 23 23:53:38 Desktop-Ubuntu mopidy[9886]: DEBUG    2022-10-23 23:53:38,002 [9886:HttpServer] mopidy.http.actor
okt 23 23:53:38 Desktop-Ubuntu mopidy[9886]:   Using selector: EpollSelector
okt 23 23:53:38 Desktop-Ubuntu mopidy[9886]: DEBUG    2022-10-23 23:53:37,998 [9886:HttpServer] asyncio
okt 23 23:53:37 Desktop-Ubuntu mopidy[9886]:   Starting GLib mainloop
okt 23 23:53:37 Desktop-Ubuntu mopidy[9886]: INFO     2022-10-23 23:53:37,999 [9886:MainThread] mopidy.commands
okt 23 23:53:37 Desktop-Ubuntu mopidy[9886]:   HttpFrontend took 1ms
okt 23 23:53:37 Desktop-Ubuntu mopidy[9886]: TRACE    2022-10-23 23:53:37,998 [9886:MainThread] mopidy.internal.timer
okt 23 23:53:37 Desktop-Ubuntu mopidy[9886]:   HTTP server running at [::ffff:127.0.0.1]:6680
okt 23 23:53:37 Desktop-Ubuntu mopidy[9886]: INFO     2022-10-23 23:53:37,998 [9886:HttpFrontend-11 (_actor_loop)] mopidy.http.actor
okt 23 23:53:37 Desktop-Ubuntu mopidy[9886]:   Starting HttpFrontend (urn:uuid:6c7524d0-81e7-43dd-b3b9-c8f32844c95a)
okt 23 23:53:37 Desktop-Ubuntu mopidy[9886]: DEBUG    2022-10-23 23:53:37,998 [9886:MainThread] pykka
okt 23 23:53:37 Desktop-Ubuntu mopidy[9886]:   Registered HttpFrontend (urn:uuid:6c7524d0-81e7-43dd-b3b9-c8f32844c95a)
okt 23 23:53:37 Desktop-Ubuntu mopidy[9886]: DEBUG    2022-10-23 23:53:37,997 [9886:MainThread] pykka
okt 23 23:53:37 Desktop-Ubuntu mopidy[9886]:   Starting HTTP server
okt 23 23:53:37 Desktop-Ubuntu mopidy[9886]: DEBUG    2022-10-23 23:53:37,997 [9886:MainThread] mopidy.http.actor
okt 23 23:53:37 Desktop-Ubuntu mopidy[9886]:   IrisFrontend took 0ms
okt 23 23:53:37 Desktop-Ubuntu mopidy[9886]: TRACE    2022-10-23 23:53:37,997 [9886:MainThread] mopidy.internal.timer
okt 23 23:53:37 Desktop-Ubuntu mopidy[9886]:   Starting Iris 3.64.1
okt 23 23:53:37 Desktop-Ubuntu mopidy[9886]: INFO     2022-10-23 23:53:37,996 [9886:IrisFrontend-9 (_actor_loop)] mopidy_iris.core
okt 23 23:53:37 Desktop-Ubuntu mopidy[9886]:   Starting IrisFrontend (urn:uuid:05690baf-8ac6-42cf-b529-d238ba0da209)
okt 23 23:53:37 Desktop-Ubuntu mopidy[9886]: DEBUG    2022-10-23 23:53:37,996 [9886:MainThread] pykka
okt 23 23:53:37 Desktop-Ubuntu mopidy[9886]:   Registered IrisFrontend (urn:uuid:05690baf-8ac6-42cf-b529-d238ba0da209)
okt 23 23:53:37 Desktop-Ubuntu mopidy[9886]: DEBUG    2022-10-23 23:53:37,996 [9886:MainThread] pykka
okt 23 23:53:37 Desktop-Ubuntu mopidy[9886]:   YouTubeCoreListener took 0ms
okt 23 23:53:37 Desktop-Ubuntu mopidy[9886]: TRACE    2022-10-23 23:53:37,996 [9886:MainThread] mopidy.internal.timer
okt 23 23:53:37 Desktop-Ubuntu mopidy[9886]:   Starting YouTubeCoreListener (urn:uuid:d604562b-5e2d-4874-98a5-1a44d4fbec6e)
okt 23 23:53:37 Desktop-Ubuntu mopidy[9886]: DEBUG    2022-10-23 23:53:37,996 [9886:MainThread] pykka
okt 23 23:53:37 Desktop-Ubuntu mopidy[9886]:   Registered YouTubeCoreListener (urn:uuid:d604562b-5e2d-4874-98a5-1a44d4fbec6e)
okt 23 23:53:37 Desktop-Ubuntu mopidy[9886]: DEBUG    2022-10-23 23:53:37,996 [9886:MainThread] pykka
okt 23 23:53:37 Desktop-Ubuntu mopidy[9886]:   YouTubeAutoplayer took 0ms
okt 23 23:53:37 Desktop-Ubuntu mopidy[9886]: TRACE    2022-10-23 23:53:37,996 [9886:MainThread] mopidy.internal.timer
okt 23 23:53:37 Desktop-Ubuntu mopidy[9886]:   Starting YouTubeAutoplayer (urn:uuid:86b4ab2f-1d81-4c63-a851-370744834e7b)
okt 23 23:53:37 Desktop-Ubuntu mopidy[9886]: DEBUG    2022-10-23 23:53:37,995 [9886:MainThread] pykka
okt 23 23:53:37 Desktop-Ubuntu mopidy[9886]:   Registered YouTubeAutoplayer (urn:uuid:86b4ab2f-1d81-4c63-a851-370744834e7b)
okt 23 23:53:37 Desktop-Ubuntu mopidy[9886]: DEBUG    2022-10-23 23:53:37,995 [9886:MainThread] pykka
okt 23 23:53:37 Desktop-Ubuntu mopidy[9886]:   Starting Mopidy frontends: YouTubeAutoplayer, YouTubeCoreListener, IrisFrontend, HttpFrontend
okt 23 23:53:37 Desktop-Ubuntu mopidy[9886]: INFO     2022-10-23 23:53:37,995 [9886:MainThread] mopidy.commands
okt 23 23:53:37 Desktop-Ubuntu mopidy[9886]:   Starting Core (urn:uuid:7e3215cd-82b4-460d-a986-785c1bc612bf)
okt 23 23:53:37 Desktop-Ubuntu mopidy[9886]: DEBUG    2022-10-23 23:53:37,991 [9886:MainThread] pykka
okt 23 23:53:37 Desktop-Ubuntu mopidy[9886]:   Registered Core (urn:uuid:7e3215cd-82b4-460d-a986-785c1bc612bf)
okt 23 23:53:37 Desktop-Ubuntu mopidy[9886]: DEBUG    2022-10-23 23:53:37,991 [9886:MainThread] pykka
okt 23 23:53:37 Desktop-Ubuntu mopidy[9886]:   Starting Mopidy core
okt 23 23:53:37 Desktop-Ubuntu mopidy[9886]: INFO     2022-10-23 23:53:37,989 [9886:MainThread] mopidy.commands
okt 23 23:53:37 Desktop-Ubuntu mopidy[9886]:   StreamBackend took 6ms
okt 23 23:53:37 Desktop-Ubuntu mopidy[9886]: TRACE    2022-10-23 23:53:37,986 [9886:MainThread] mopidy.internal.timer
okt 23 23:53:37 Desktop-Ubuntu mopidy[9886]:   Starting StreamBackend (urn:uuid:822c74eb-5e52-4c58-bb25-3ce79f4f33fa)
okt 23 23:53:37 Desktop-Ubuntu mopidy[9886]: DEBUG    2022-10-23 23:53:37,983 [9886:MainThread] pykka
okt 23 23:53:37 Desktop-Ubuntu mopidy[9886]:   Registered StreamBackend (urn:uuid:822c74eb-5e52-4c58-bb25-3ce79f4f33fa)
okt 23 23:53:37 Desktop-Ubuntu mopidy[9886]: DEBUG    2022-10-23 23:53:37,983 [9886:MainThread] pykka
okt 23 23:53:37 Desktop-Ubuntu mopidy[9886]:   Audio output set to "pulsesink server=127.0.0.1"
okt 23 23:53:37 Desktop-Ubuntu mopidy[9886]: INFO     2022-10-23 23:53:37,983 [9886:Audio-2 (_actor_loop)] mopidy.audio.actor
okt 23 23:53:37 Desktop-Ubuntu mopidy[9886]:   M3UBackend took 1ms
okt 23 23:53:37 Desktop-Ubuntu mopidy[9886]: TRACE    2022-10-23 23:53:37,980 [9886:MainThread] mopidy.internal.timer
okt 23 23:53:37 Desktop-Ubuntu mopidy[9886]:   Starting M3UBackend (urn:uuid:49de748d-1d00-4853-ba85-79d62f126517)
okt 23 23:53:37 Desktop-Ubuntu mopidy[9886]: DEBUG    2022-10-23 23:53:37,979 [9886:MainThread] pykka
okt 23 23:53:37 Desktop-Ubuntu mopidy[9886]:   Registered M3UBackend (urn:uuid:49de748d-1d00-4853-ba85-79d62f126517)
okt 23 23:53:37 Desktop-Ubuntu mopidy[9886]: DEBUG    2022-10-23 23:53:37,979 [9886:MainThread] pykka
okt 23 23:53:37 Desktop-Ubuntu mopidy[9886]:   FileBackend took 3ms
okt 23 23:53:37 Desktop-Ubuntu mopidy[9886]: TRACE    2022-10-23 23:53:37,978 [9886:MainThread] mopidy.internal.timer
okt 23 23:53:37 Desktop-Ubuntu mopidy[9886]:   Starting FileBackend (urn:uuid:a4c4eebd-8f58-4fbf-899f-dbd6ffc56611)
okt 23 23:53:37 Desktop-Ubuntu mopidy[9886]: DEBUG    2022-10-23 23:53:37,976 [9886:MainThread] pykka
okt 23 23:53:37 Desktop-Ubuntu mopidy[9886]:   Registered FileBackend (urn:uuid:a4c4eebd-8f58-4fbf-899f-dbd6ffc56611)
okt 23 23:53:37 Desktop-Ubuntu mopidy[9886]: DEBUG    2022-10-23 23:53:37,975 [9886:MainThread] pykka
okt 23 23:53:37 Desktop-Ubuntu mopidy[9886]:   Failed expanding path ($XDG_MUSIC_DIR) from file/media_dirs config value.
okt 23 23:53:37 Desktop-Ubuntu mopidy[9886]: DEBUG    2022-10-23 23:53:37,975 [9886:MainThread] mopidy.file.library
okt 23 23:53:37 Desktop-Ubuntu mopidy[9886]: ModuleNotFoundError: No module named 'ytmusicapi'
okt 23 23:53:37 Desktop-Ubuntu mopidy[9886]:     from ytmusicapi import YTMusic
okt 23 23:53:37 Desktop-Ubuntu mopidy[9886]:   File "/usr/local/lib/python3.10/dist-packages/mopidy_youtube/apis/youtube_music.py", line 7, in <module>
okt 23 23:53:37 Desktop-Ubuntu mopidy[9886]:     from mopidy_youtube.apis import youtube_music
okt 23 23:53:37 Desktop-Ubuntu mopidy[9886]:   File "/usr/local/lib/python3.10/dist-packages/mopidy_youtube/backend.py", line 84, in __init__
okt 23 23:53:37 Desktop-Ubuntu mopidy[9886]:     obj = cls(*args, **kwargs)
okt 23 23:53:37 Desktop-Ubuntu mopidy[9886]:   File "/usr/lib/python3/dist-packages/pykka/_actor.py", line 91, in start
okt 23 23:53:37 Desktop-Ubuntu mopidy[9886]:     backend = backend_class.start(
okt 23 23:53:37 Desktop-Ubuntu mopidy[9886]:   File "/usr/lib/python3/dist-packages/mopidy/commands.py", line 412, in start_backends
okt 23 23:53:37 Desktop-Ubuntu mopidy[9886]:     yield
okt 23 23:53:37 Desktop-Ubuntu mopidy[9886]:   File "/usr/lib/python3/dist-packages/mopidy/commands.py", line 248, in _actor_error_handling
okt 23 23:53:37 Desktop-Ubuntu mopidy[9886]: Traceback (most recent call last):
okt 23 23:53:37 Desktop-Ubuntu mopidy[9886]:   Got un-handled exception from YouTubeBackend
okt 23 23:53:37 Desktop-Ubuntu mopidy[9886]: ERROR    2022-10-23 23:53:37,974 [9886:MainThread] mopidy.commands
okt 23 23:53:37 Desktop-Ubuntu mopidy[9886]:   Starting Mopidy backends: YouTubeBackend, FileBackend, M3UBackend, StreamBackend
okt 23 23:53:37 Desktop-Ubuntu mopidy[9886]: INFO     2022-10-23 23:53:37,973 [9886:MainThread] mopidy.commands
okt 23 23:53:37 Desktop-Ubuntu mopidy[9886]:   Starting Audio (urn:uuid:231134f2-1b50-47e4-a115-81c7472391df)
okt 23 23:53:37 Desktop-Ubuntu mopidy[9886]: DEBUG    2022-10-23 23:53:37,972 [9886:MainThread] pykka
okt 23 23:53:37 Desktop-Ubuntu mopidy[9886]:   Registered Audio (urn:uuid:231134f2-1b50-47e4-a115-81c7472391df)
okt 23 23:53:37 Desktop-Ubuntu mopidy[9886]: DEBUG    2022-10-23 23:53:37,972 [9886:MainThread] pykka
okt 23 23:53:37 Desktop-Ubuntu mopidy[9886]:   Starting Mopidy audio
okt 23 23:53:37 Desktop-Ubuntu mopidy[9886]: INFO     2022-10-23 23:53:37,971 [9886:MainThread] mopidy.commands
okt 23 23:53:37 Desktop-Ubuntu mopidy[9886]:   Mixer volume left unchanged
okt 23 23:53:37 Desktop-Ubuntu mopidy[9886]: DEBUG    2022-10-23 23:53:37,971 [9886:MainThread] mopidy.commands
okt 23 23:53:37 Desktop-Ubuntu mopidy[9886]:   Starting SoftwareMixer (urn:uuid:d247b378-e3a8-4511-bc3d-8d1ef4f437d5)
okt 23 23:53:37 Desktop-Ubuntu mopidy[9886]: DEBUG    2022-10-23 23:53:37,970 [9886:MainThread] pykka
okt 23 23:53:37 Desktop-Ubuntu mopidy[9886]:   Registered SoftwareMixer (urn:uuid:d247b378-e3a8-4511-bc3d-8d1ef4f437d5)
okt 23 23:53:37 Desktop-Ubuntu mopidy[9886]: DEBUG    2022-10-23 23:53:37,970 [9886:MainThread] pykka
okt 23 23:53:37 Desktop-Ubuntu mopidy[9886]:   Starting Mopidy mixer: SoftwareMixer
okt 23 23:53:37 Desktop-Ubuntu mopidy[9886]: INFO     2022-10-23 23:53:37,970 [9886:MainThread] mopidy.commands
okt 23 23:53:37 Desktop-Ubuntu mopidy[9886]:   Available Mopidy mixers: SoftwareMixer
okt 23 23:53:37 Desktop-Ubuntu mopidy[9886]: DEBUG    2022-10-23 23:53:37,970 [9886:MainThread] mopidy.commands
okt 23 23:53:37 Desktop-Ubuntu mopidy[9886]:   Please fix the extension configuration errors or disable the extensions to silence these messages.
okt 23 23:53:37 Desktop-Ubuntu mopidy[9886]: WARNING  2022-10-23 23:53:37,891 [9886:MainThread] mopidy.__main__
okt 23 23:53:37 Desktop-Ubuntu mopidy[9886]:     local/media_dir must be set.
okt 23 23:53:37 Desktop-Ubuntu mopidy[9886]: WARNING  2022-10-23 23:53:37,891 [9886:MainThread] mopidy.__main__
okt 23 23:53:37 Desktop-Ubuntu mopidy[9886]:   Found local configuration errors. The extension has been automatically disabled:
okt 23 23:53:37 Desktop-Ubuntu mopidy[9886]: WARNING  2022-10-23 23:53:37,891 [9886:MainThread] mopidy.__main__
okt 23 23:53:37 Desktop-Ubuntu mopidy[9886]:   Disabled extensions: local, soundcloud
okt 23 23:53:37 Desktop-Ubuntu mopidy[9886]: INFO     2022-10-23 23:53:37,891 [9886:MainThread] mopidy.__main__
okt 23 23:53:37 Desktop-Ubuntu mopidy[9886]:   Enabled extensions: m3u, iris, stream, http, softwaremixer, youtube, file
okt 23 23:53:37 Desktop-Ubuntu mopidy[9886]: INFO     2022-10-23 23:53:37,891 [9886:MainThread] mopidy.__main__
okt 23 23:53:37 Desktop-Ubuntu mopidy[9886]:   Validating extension: stream
okt 23 23:53:37 Desktop-Ubuntu mopidy[9886]: DEBUG    2022-10-23 23:53:37,891 [9886:MainThread] mopidy.ext
okt 23 23:53:37 Desktop-Ubuntu mopidy[9886]:   Validating extension: softwaremixer
okt 23 23:53:37 Desktop-Ubuntu mopidy[9886]: DEBUG    2022-10-23 23:53:37,891 [9886:MainThread] mopidy.ext
okt 23 23:53:37 Desktop-Ubuntu mopidy[9886]:   Validating extension: m3u
okt 23 23:53:37 Desktop-Ubuntu mopidy[9886]: DEBUG    2022-10-23 23:53:37,891 [9886:MainThread] mopidy.ext
okt 23 23:53:37 Desktop-Ubuntu mopidy[9886]:   Validating extension: http
okt 23 23:53:37 Desktop-Ubuntu mopidy[9886]: DEBUG    2022-10-23 23:53:37,837 [9886:MainThread] mopidy.ext
okt 23 23:53:37 Desktop-Ubuntu mopidy[9886]:   Validating extension: file
okt 23 23:53:37 Desktop-Ubuntu mopidy[9886]: DEBUG    2022-10-23 23:53:37,837 [9886:MainThread] mopidy.ext
okt 23 23:53:37 Desktop-Ubuntu mopidy[9886]:   Validating extension: iris
okt 23 23:53:37 Desktop-Ubuntu mopidy[9886]: DEBUG    2022-10-23 23:53:37,820 [9886:MainThread] mopidy.ext
okt 23 23:53:37 Desktop-Ubuntu mopidy[9886]:   Validating extension: soundcloud
okt 23 23:53:37 Desktop-Ubuntu mopidy[9886]: DEBUG    2022-10-23 23:53:37,795 [9886:MainThread] mopidy.ext
okt 23 23:53:37 Desktop-Ubuntu mopidy[9886]:   Validating extension: local
okt 23 23:53:37 Desktop-Ubuntu mopidy[9886]: DEBUG    2022-10-23 23:53:37,773 [9886:MainThread] mopidy.ext
okt 23 23:53:37 Desktop-Ubuntu mopidy[9886]:   Validating extension: youtube
okt 23 23:53:37 Desktop-Ubuntu mopidy[9886]: DEBUG    2022-10-23 23:53:37,721 [9886:MainThread] mopidy.ext
okt 23 23:53:37 Desktop-Ubuntu mopidy[9886]:   Ignoring config section 'ytmusic' because no matching extension was found
okt 23 23:53:37 Desktop-Ubuntu mopidy[9886]: WARNING  2022-10-23 23:53:37,720 [9886:MainThread] mopidy.config
okt 23 23:53:37 Desktop-Ubuntu mopidy[9886]:   Ignoring config section 'jukebox' because no matching extension was found
okt 23 23:53:37 Desktop-Ubuntu mopidy[9886]: WARNING  2022-10-23 23:53:37,720 [9886:MainThread] mopidy.config
okt 23 23:53:37 Desktop-Ubuntu mopidy[9886]:   Loading config from command line options
okt 23 23:53:37 Desktop-Ubuntu mopidy[9886]: INFO     2022-10-23 23:53:37,716 [9886:MainThread] mopidy.config
okt 23 23:53:37 Desktop-Ubuntu mopidy[9886]:   Loading config from file:///etc/mopidy/mopidy.conf
okt 23 23:53:37 Desktop-Ubuntu mopidy[9886]: INFO     2022-10-23 23:53:37,716 [9886:MainThread] mopidy.config
okt 23 23:53:37 Desktop-Ubuntu mopidy[9886]:   Loading config from file:///usr/share/mopidy/conf.d/mopidy.conf
okt 23 23:53:37 Desktop-Ubuntu mopidy[9886]: INFO     2022-10-23 23:53:37,715 [9886:MainThread] mopidy.config
okt 23 23:53:37 Desktop-Ubuntu mopidy[9886]:   Loading config from builtin defaults
okt 23 23:53:37 Desktop-Ubuntu mopidy[9886]: INFO     2022-10-23 23:53:37,714 [9886:MainThread] mopidy.config
okt 23 23:53:37 Desktop-Ubuntu mopidy[9886]:   Fetching passwords from your keyring failed. Any passwords stored in the keyring will not be available. (org.freedesktop.DBus.Error.NotSupported: Unable to autolaunch a dbus-daemon without a $DISPLAY for X11)
okt 23 23:53:37 Desktop-Ubuntu mopidy[9886]: DEBUG    2022-10-23 23:53:37,713 [9886:MainThread] mopidy.config.keyring
okt 23 23:53:37 Desktop-Ubuntu mopidy[9886]:   Discovered extensions: youtube, local, soundcloud, iris, file, http, m3u, softwaremixer, stream
okt 23 23:53:37 Desktop-Ubuntu mopidy[9886]: DEBUG    2022-10-23 23:53:37,712 [9886:MainThread] mopidy.ext
okt 23 23:53:37 Desktop-Ubuntu mopidy[9886]:   Loaded extension: Mopidy-Stream 3.3.0
okt 23 23:53:37 Desktop-Ubuntu mopidy[9886]: DEBUG    2022-10-23 23:53:37,709 [9886:MainThread] mopidy.ext
okt 23 23:53:37 Desktop-Ubuntu mopidy[9886]:   Loading entry point: stream = mopidy.stream:Extension
okt 23 23:53:37 Desktop-Ubuntu mopidy[9886]: DEBUG    2022-10-23 23:53:37,708 [9886:MainThread] mopidy.ext
okt 23 23:53:37 Desktop-Ubuntu mopidy[9886]:   Loaded extension: Mopidy-SoftwareMixer 3.3.0
okt 23 23:53:37 Desktop-Ubuntu mopidy[9886]: DEBUG    2022-10-23 23:53:37,708 [9886:MainThread] mopidy.ext
okt 23 23:53:37 Desktop-Ubuntu mopidy[9886]:   Loading entry point: softwaremixer = mopidy.softwaremixer:Extension
okt 23 23:53:37 Desktop-Ubuntu mopidy[9886]: DEBUG    2022-10-23 23:53:37,708 [9886:MainThread] mopidy.ext
okt 23 23:53:37 Desktop-Ubuntu mopidy[9886]:   Loaded extension: Mopidy-M3U 3.3.0
okt 23 23:53:37 Desktop-Ubuntu mopidy[9886]: DEBUG    2022-10-23 23:53:37,708 [9886:MainThread] mopidy.ext
okt 23 23:53:37 Desktop-Ubuntu mopidy[9886]:   Loading entry point: m3u = mopidy.m3u:Extension
okt 23 23:53:37 Desktop-Ubuntu mopidy[9886]: DEBUG    2022-10-23 23:53:37,707 [9886:MainThread] mopidy.ext
okt 23 23:53:37 Desktop-Ubuntu mopidy[9886]:   Loaded extension: Mopidy-HTTP 3.3.0
okt 23 23:53:37 Desktop-Ubuntu mopidy[9886]: DEBUG    2022-10-23 23:53:37,707 [9886:MainThread] mopidy.ext
okt 23 23:53:37 Desktop-Ubuntu mopidy[9886]:   Loading entry point: http = mopidy.http:Extension
okt 23 23:53:37 Desktop-Ubuntu mopidy[9886]: DEBUG    2022-10-23 23:53:37,707 [9886:MainThread] mopidy.ext
okt 23 23:53:37 Desktop-Ubuntu mopidy[9886]:   Loaded extension: Mopidy-File 3.3.0
okt 23 23:53:37 Desktop-Ubuntu mopidy[9886]: DEBUG    2022-10-23 23:53:37,707 [9886:MainThread] mopidy.ext
okt 23 23:53:37 Desktop-Ubuntu mopidy[9886]:   Loading entry point: file = mopidy.file:Extension
okt 23 23:53:37 Desktop-Ubuntu mopidy[9886]: DEBUG    2022-10-23 23:53:37,707 [9886:MainThread] mopidy.ext
okt 23 23:53:37 Desktop-Ubuntu mopidy[9886]:   Loaded extension: Mopidy-Iris 3.64.1
okt 23 23:53:37 Desktop-Ubuntu mopidy[9886]: DEBUG    2022-10-23 23:53:37,704 [9886:MainThread] mopidy.ext
okt 23 23:53:37 Desktop-Ubuntu mopidy[9886]:   Loading entry point: iris = mopidy_iris:Extension
okt 23 23:53:37 Desktop-Ubuntu mopidy[9886]: DEBUG    2022-10-23 23:53:37,704 [9886:MainThread] mopidy.ext
okt 23 23:53:37 Desktop-Ubuntu mopidy[9886]:   Loaded extension: Mopidy-SoundCloud 3.0.1
okt 23 23:53:37 Desktop-Ubuntu mopidy[9886]: DEBUG    2022-10-23 23:53:37,703 [9886:MainThread] mopidy.ext
okt 23 23:53:37 Desktop-Ubuntu mopidy[9886]:   Loading entry point: soundcloud = mopidy_soundcloud:Extension
okt 23 23:53:37 Desktop-Ubuntu mopidy[9886]: DEBUG    2022-10-23 23:53:37,702 [9886:MainThread] mopidy.ext
okt 23 23:53:37 Desktop-Ubuntu mopidy[9886]:   Loaded extension: Mopidy-Local 3.2.1
okt 23 23:53:37 Desktop-Ubuntu mopidy[9886]: DEBUG    2022-10-23 23:53:37,702 [9886:MainThread] mopidy.ext
okt 23 23:53:37 Desktop-Ubuntu mopidy[9886]:   Loading entry point: local = mopidy_local:Extension
okt 23 23:53:37 Desktop-Ubuntu mopidy[9886]: DEBUG    2022-10-23 23:53:37,691 [9886:MainThread] mopidy.ext
okt 23 23:53:37 Desktop-Ubuntu mopidy[9886]:   Loaded extension: Mopidy-YouTube 3.6.1
okt 23 23:53:37 Desktop-Ubuntu mopidy[9886]: DEBUG    2022-10-23 23:53:37,691 [9886:MainThread] mopidy.ext
okt 23 23:53:37 Desktop-Ubuntu mopidy[9886]:   Loading entry point: youtube = mopidy_youtube:Extension
okt 23 23:53:37 Desktop-Ubuntu mopidy[9886]: DEBUG    2022-10-23 23:53:37,690 [9886:MainThread] mopidy.ext
okt 23 23:53:37 Desktop-Ubuntu mopidy[9886]:   Starting Mopidy 3.3.0
okt 23 23:53:37 Desktop-Ubuntu mopidy[9886]: INFO     2022-10-23 23:53:37,687 [9886:MainThread] mopidy.__main__
okt 23 23:53:37 Desktop-Ubuntu systemd[1]: Started Mopidy music server.
okt 23 23:53:37 Desktop-Ubuntu systemd[1]: Starting Mopidy music server...
okt 23 23:53:37 Desktop-Ubuntu systemd[1]: Stopped Mopidy music server.
okt 23 23:53:37 Desktop-Ubuntu systemd[1]: mopidy.service: Deactivated successfully.
okt 23 23:53:37 Desktop-Ubuntu mopidy[9684]:   All actors stopped.
okt 23 23:53:37 Desktop-Ubuntu mopidy[9684]: DEBUG    2022-10-23 23:53:37,245 [9684:MainThread] mopidy.internal.process
okt 23 23:53:37 Desktop-Ubuntu mopidy[9684]:   Stopped SoftwareMixer (urn:uuid:8b032216-13ba-419a-a0c8-1c645ed69df8)
okt 23 23:53:37 Desktop-Ubuntu mopidy[9684]: DEBUG    2022-10-23 23:53:37,245 [9684:SoftwareMixer-1 (_actor_loop)] pykka
okt 23 23:53:37 Desktop-Ubuntu mopidy[9684]:   Unregistered SoftwareMixer (urn:uuid:8b032216-13ba-419a-a0c8-1c645ed69df8)
okt 23 23:53:37 Desktop-Ubuntu mopidy[9684]: DEBUG    2022-10-23 23:53:37,245 [9684:SoftwareMixer-1 (_actor_loop)] pykka
okt 23 23:53:37 Desktop-Ubuntu mopidy[9684]:   Stopping 1 instance(s) of SoftwareMixer
okt 23 23:53:37 Desktop-Ubuntu mopidy[9684]: DEBUG    2022-10-23 23:53:37,245 [9684:MainThread] mopidy.internal.process
okt 23 23:53:37 Desktop-Ubuntu mopidy[9684]:   Stopping Mopidy mixer
okt 23 23:53:37 Desktop-Ubuntu mopidy[9684]: INFO     2022-10-23 23:53:37,245 [9684:MainThread] mopidy.commands
okt 23 23:53:37 Desktop-Ubuntu mopidy[9684]:   Stopped Audio (urn:uuid:8ad4e198-8e96-41d1-965b-c65492d8c787)
okt 23 23:53:37 Desktop-Ubuntu mopidy[9684]: DEBUG    2022-10-23 23:53:37,244 [9684:Audio-2 (_actor_loop)] pykka
okt 23 23:53:37 Desktop-Ubuntu mopidy[9684]:   Unregistered Audio (urn:uuid:8ad4e198-8e96-41d1-965b-c65492d8c787)
okt 23 23:53:37 Desktop-Ubuntu mopidy[9684]: DEBUG    2022-10-23 23:53:37,244 [9684:Audio-2 (_actor_loop)] pykka
okt 23 23:53:37 Desktop-Ubuntu mopidy[9684]:   Stopping 1 instance(s) of Audio
okt 23 23:53:37 Desktop-Ubuntu mopidy[9684]: DEBUG    2022-10-23 23:53:37,244 [9684:MainThread] mopidy.internal.process
okt 23 23:53:37 Desktop-Ubuntu mopidy[9684]:   Stopping Mopidy audio
okt 23 23:53:37 Desktop-Ubuntu mopidy[9684]: INFO     2022-10-23 23:53:37,244 [9684:MainThread] mopidy.commands
okt 23 23:53:37 Desktop-Ubuntu mopidy[9684]:   Stopped StreamBackend (urn:uuid:a1ccc842-f58b-4aef-b7b9-09c1e991d9c3)
okt 23 23:53:37 Desktop-Ubuntu mopidy[9684]: DEBUG    2022-10-23 23:53:37,244 [9684:StreamBackend-5 (_actor_loop)] pykka
okt 23 23:53:37 Desktop-Ubuntu mopidy[9684]:   Unregistered StreamBackend (urn:uuid:a1ccc842-f58b-4aef-b7b9-09c1e991d9c3)
okt 23 23:53:37 Desktop-Ubuntu mopidy[9684]: DEBUG    2022-10-23 23:53:37,244 [9684:StreamBackend-5 (_actor_loop)] pykka
okt 23 23:53:37 Desktop-Ubuntu mopidy[9684]:   Stopping 1 instance(s) of StreamBackend
okt 23 23:53:37 Desktop-Ubuntu mopidy[9684]: DEBUG    2022-10-23 23:53:37,244 [9684:MainThread] mopidy.internal.process
okt 23 23:53:37 Desktop-Ubuntu mopidy[9684]:   Stopped M3UBackend (urn:uuid:5e4fbd82-5f56-4107-822d-bdadd06c2251)
okt 23 23:53:37 Desktop-Ubuntu mopidy[9684]: DEBUG    2022-10-23 23:53:37,244 [9684:M3UBackend-4 (_actor_loop)] pykka
okt 23 23:53:37 Desktop-Ubuntu mopidy[9684]:   Unregistered M3UBackend (urn:uuid:5e4fbd82-5f56-4107-822d-bdadd06c2251)
okt 23 23:53:37 Desktop-Ubuntu mopidy[9684]: DEBUG    2022-10-23 23:53:37,244 [9684:M3UBackend-4 (_actor_loop)] pykka
okt 23 23:53:37 Desktop-Ubuntu mopidy[9684]:   Stopping 1 instance(s) of M3UBackend
okt 23 23:53:37 Desktop-Ubuntu mopidy[9684]: DEBUG    2022-10-23 23:53:37,243 [9684:MainThread] mopidy.internal.process
okt 23 23:53:37 Desktop-Ubuntu mopidy[9684]:   Stopped FileBackend (urn:uuid:c8c49c08-aa5e-473b-a358-b20e65658530)
okt 23 23:53:37 Desktop-Ubuntu mopidy[9684]: DEBUG    2022-10-23 23:53:37,243 [9684:FileBackend-3 (_actor_loop)] pykka
okt 23 23:53:37 Desktop-Ubuntu mopidy[9684]:   Unregistered FileBackend (urn:uuid:c8c49c08-aa5e-473b-a358-b20e65658530)
okt 23 23:53:37 Desktop-Ubuntu mopidy[9684]: DEBUG    2022-10-23 23:53:37,243 [9684:FileBackend-3 (_actor_loop)] pykka
okt 23 23:53:37 Desktop-Ubuntu mopidy[9684]:   Stopping 1 instance(s) of FileBackend
okt 23 23:53:37 Desktop-Ubuntu mopidy[9684]: DEBUG    2022-10-23 23:53:37,243 [9684:MainThread] mopidy.internal.process
okt 23 23:53:37 Desktop-Ubuntu mopidy[9684]:   Stopping 0 instance(s) of YouTubeBackend
okt 23 23:53:37 Desktop-Ubuntu mopidy[9684]: DEBUG    2022-10-23 23:53:37,243 [9684:MainThread] mopidy.internal.process
okt 23 23:53:37 Desktop-Ubuntu mopidy[9684]:   Stopping Mopidy backends
okt 23 23:53:37 Desktop-Ubuntu mopidy[9684]: INFO     2022-10-23 23:53:37,243 [9684:MainThread] mopidy.commands
okt 23 23:53:37 Desktop-Ubuntu mopidy[9684]:   Stopped Core (urn:uuid:b8e0361f-b864-4673-92f8-93b25c5a024e)
okt 23 23:53:37 Desktop-Ubuntu mopidy[9684]: DEBUG    2022-10-23 23:53:37,243 [9684:Core-6 (_actor_loop)] pykka
okt 23 23:53:37 Desktop-Ubuntu mopidy[9684]:   Unregistered Core (urn:uuid:b8e0361f-b864-4673-92f8-93b25c5a024e)
okt 23 23:53:37 Desktop-Ubuntu mopidy[9684]: DEBUG    2022-10-23 23:53:37,243 [9684:Core-6 (_actor_loop)] pykka
okt 23 23:53:37 Desktop-Ubuntu mopidy[9684]:   Stopping 1 instance(s) of Core
okt 23 23:53:37 Desktop-Ubuntu mopidy[9684]: DEBUG    2022-10-23 23:53:37,242 [9684:MainThread] mopidy.internal.process
okt 23 23:53:37 Desktop-Ubuntu mopidy[9684]:   Stopping Mopidy core
okt 23 23:53:37 Desktop-Ubuntu mopidy[9684]: INFO     2022-10-23 23:53:37,242 [9684:MainThread] mopidy.commands
okt 23 23:53:37 Desktop-Ubuntu mopidy[9684]:   Stopped HTTP server
okt 23 23:53:37 Desktop-Ubuntu mopidy[9684]: DEBUG    2022-10-23 23:53:37,242 [9684:HttpServer] mopidy.http.actor
okt 23 23:53:37 Desktop-Ubuntu mopidy[9684]:   Stopping HTTP server
okt 23 23:53:37 Desktop-Ubuntu mopidy[9684]: DEBUG    2022-10-23 23:53:37,242 [9684:HttpFrontend-11 (_actor_loop)] mopidy.http.actor
okt 23 23:53:37 Desktop-Ubuntu mopidy[9684]:   Zeroconf service 'Mopidy HTTP server on Desktop-Ubuntu' (_mopidy-http._tcp at []:6680): Unpublished
okt 23 23:53:37 Desktop-Ubuntu mopidy[9684]: DEBUG    2022-10-23 23:53:37,242 [9684:HttpFrontend-11 (_actor_loop)] mopidy.zeroconf
okt 23 23:53:37 Desktop-Ubuntu mopidy[9684]:   Zeroconf service 'Mopidy HTTP server on Desktop-Ubuntu' (_http._tcp at []:6680): Unpublished
okt 23 23:53:37 Desktop-Ubuntu mopidy[9684]: DEBUG    2022-10-23 23:53:37,241 [9684:HttpFrontend-11 (_actor_loop)] mopidy.zeroconf
okt 23 23:53:37 Desktop-Ubuntu mopidy[9684]:   Stopped HttpFrontend (urn:uuid:85ee44e7-4a90-4569-94d7-9d25b2874dfb)
okt 23 23:53:37 Desktop-Ubuntu mopidy[9684]: DEBUG    2022-10-23 23:53:37,240 [9684:HttpFrontend-11 (_actor_loop)] pykka
okt 23 23:53:37 Desktop-Ubuntu mopidy[9684]:   Unregistered HttpFrontend (urn:uuid:85ee44e7-4a90-4569-94d7-9d25b2874dfb)
okt 23 23:53:37 Desktop-Ubuntu mopidy[9684]: DEBUG    2022-10-23 23:53:37,240 [9684:HttpFrontend-11 (_actor_loop)] pykka
okt 23 23:53:37 Desktop-Ubuntu mopidy[9684]:   Stopping 1 instance(s) of HttpFrontend
okt 23 23:53:37 Desktop-Ubuntu mopidy[9684]: DEBUG    2022-10-23 23:53:37,240 [9684:MainThread] mopidy.internal.process
okt 23 23:53:37 Desktop-Ubuntu mopidy[9684]:   Stopping Iris
okt 23 23:53:37 Desktop-Ubuntu mopidy[9684]: INFO     2022-10-23 23:53:37,240 [9684:IrisFrontend-9 (_actor_loop)] mopidy_iris.core
okt 23 23:53:37 Desktop-Ubuntu mopidy[9684]:   Stopped IrisFrontend (urn:uuid:6a185e66-3e82-4ed3-9870-cb955a1805bc)
okt 23 23:53:37 Desktop-Ubuntu mopidy[9684]: DEBUG    2022-10-23 23:53:37,240 [9684:IrisFrontend-9 (_actor_loop)] pykka
okt 23 23:53:37 Desktop-Ubuntu mopidy[9684]:   Unregistered IrisFrontend (urn:uuid:6a185e66-3e82-4ed3-9870-cb955a1805bc)
okt 23 23:53:37 Desktop-Ubuntu mopidy[9684]: DEBUG    2022-10-23 23:53:37,240 [9684:IrisFrontend-9 (_actor_loop)] pykka
okt 23 23:53:37 Desktop-Ubuntu mopidy[9684]:   Stopping 1 instance(s) of IrisFrontend
okt 23 23:53:37 Desktop-Ubuntu mopidy[9684]: DEBUG    2022-10-23 23:53:37,240 [9684:MainThread] mopidy.internal.process
okt 23 23:53:37 Desktop-Ubuntu mopidy[9684]:   Stopped YouTubeCoreListener (urn:uuid:d7ab6b58-3a1d-4656-b281-6e7c8f54ca5b)
okt 23 23:53:37 Desktop-Ubuntu mopidy[9684]: DEBUG    2022-10-23 23:53:37,240 [9684:YouTubeCoreListener-8 (_actor_loop)] pykka
okt 23 23:53:37 Desktop-Ubuntu mopidy[9684]:   Unregistered YouTubeCoreListener (urn:uuid:d7ab6b58-3a1d-4656-b281-6e7c8f54ca5b)
okt 23 23:53:37 Desktop-Ubuntu mopidy[9684]: DEBUG    2022-10-23 23:53:37,239 [9684:YouTubeCoreListener-8 (_actor_loop)] pykka
okt 23 23:53:37 Desktop-Ubuntu mopidy[9684]:   Stopping 1 instance(s) of YouTubeCoreListener
okt 23 23:53:37 Desktop-Ubuntu mopidy[9684]: DEBUG    2022-10-23 23:53:37,239 [9684:MainThread] mopidy.internal.process
okt 23 23:53:37 Desktop-Ubuntu mopidy[9684]:   Stopped YouTubeAutoplayer (urn:uuid:229fefb7-a97c-4feb-9e0e-428f96c24786)
okt 23 23:53:37 Desktop-Ubuntu mopidy[9684]: DEBUG    2022-10-23 23:53:37,239 [9684:YouTubeAutoplayer-7 (_actor_loop)] pykka
okt 23 23:53:37 Desktop-Ubuntu mopidy[9684]:   Unregistered YouTubeAutoplayer (urn:uuid:229fefb7-a97c-4feb-9e0e-428f96c24786)
okt 23 23:53:37 Desktop-Ubuntu mopidy[9684]: DEBUG    2022-10-23 23:53:37,239 [9684:YouTubeAutoplayer-7 (_actor_loop)] pykka
okt 23 23:53:37 Desktop-Ubuntu mopidy[9684]:   Stopping 1 instance(s) of YouTubeAutoplayer
okt 23 23:53:37 Desktop-Ubuntu mopidy[9684]: DEBUG    2022-10-23 23:53:37,239 [9684:MainThread] mopidy.internal.process
okt 23 23:53:37 Desktop-Ubuntu mopidy[9684]:   Stopping Mopidy frontends
okt 23 23:53:37 Desktop-Ubuntu mopidy[9684]: INFO     2022-10-23 23:53:37,239 [9684:MainThread] mopidy.commands
okt 23 23:53:37 Desktop-Ubuntu mopidy[9684]:   GLib mainloop got SIGTERM. Exiting...
okt 23 23:53:37 Desktop-Ubuntu mopidy[9684]: INFO     2022-10-23 23:53:37,238 [9684:MainThread] mopidy.commands
okt 23 23:53:37 Desktop-Ubuntu systemd[1]: Stopping Mopidy music server...
okt 23 23:51:17 Desktop-Ubuntu mopidy[9684]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 12, "result": [{"__model__": "Ref", "uri": "file:///var/lib/mopidy", "name": "Files", "type": "directory"}]}'
okt 23 23:51:17 Desktop-Ubuntu mopidy[9684]: DEBUG    2022-10-23 23:51:17,007 [9684:HttpServer] mopidy.http.handlers
okt 23 23:51:17 Desktop-Ubuntu mopidy[9684]:   Received WebSocket message from 127.0.0.1: '{"method":"core.library.browse","params":{"uri":null},"jsonrpc":"2.0","id":12}'
okt 23 23:51:17 Desktop-Ubuntu mopidy[9684]: DEBUG    2022-10-23 23:51:17,006 [9684:HttpServer] mopidy.http.handlers
okt 23 23:51:16 Desktop-Ubuntu mopidy[9684]:   {'id': 166656187587613, 'jsonrpc': '2.0', 'method': 'get_version', 'result': {'version': {'current': '3.64.1', 'latest': '3.64.1', 'is_root': False, 'upgrade_available': False}}, 'recipient': 'ZJRP92VR95FO'}
okt 23 23:51:16 Desktop-Ubuntu mopidy[9684]: DEBUG    2022-10-23 23:51:16,018 [9684:HttpServer] mopidy_iris.core
okt 23 23:51:15 Desktop-Ubuntu mopidy[9684]:   Iris websocket message received: {"jsonrpc":"2.0","id":166656187587613,"method":"get_version"}
okt 23 23:51:15 Desktop-Ubuntu mopidy[9684]: DEBUG    2022-10-23 23:51:15,876 [9684:HttpServer] mopidy_iris.handlers
okt 23 23:51:15 Desktop-Ubuntu mopidy[9684]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 11, "result": null}'
okt 23 23:51:15 Desktop-Ubuntu mopidy[9684]: DEBUG    2022-10-23 23:51:15,453 [9684:HttpServer] mopidy.http.handlers
okt 23 23:51:15 Desktop-Ubuntu mopidy[9684]:   Received WebSocket message from 127.0.0.1: '{"method":"core.playback.get_stream_title","params":{},"jsonrpc":"2.0","id":11}'
okt 23 23:51:15 Desktop-Ubuntu mopidy[9684]: DEBUG    2022-10-23 23:51:15,452 [9684:HttpServer] mopidy.http.handlers
okt 23 23:51:15 Desktop-Ubuntu mopidy[9684]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 10, "result": ["file", "http", "https", "m3u", "rtsp"]}'
okt 23 23:51:15 Desktop-Ubuntu mopidy[9684]: DEBUG    2022-10-23 23:51:15,452 [9684:HttpServer] mopidy.http.handlers
okt 23 23:51:15 Desktop-Ubuntu mopidy[9684]:   Received WebSocket message from 127.0.0.1: '{"method":"core.get_uri_schemes","params":{},"jsonrpc":"2.0","id":10}'
okt 23 23:51:15 Desktop-Ubuntu mopidy[9684]: DEBUG    2022-10-23 23:51:15,452 [9684:HttpServer] mopidy.http.handlers
okt 23 23:51:15 Desktop-Ubuntu mopidy[9684]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 9, "result": 0}'
okt 23 23:51:15 Desktop-Ubuntu mopidy[9684]: DEBUG    2022-10-23 23:51:15,451 [9684:HttpServer] mopidy.http.handlers
okt 23 23:51:15 Desktop-Ubuntu mopidy[9684]:   Received WebSocket message from 127.0.0.1: '{"method":"core.playback.get_time_position","params":{},"jsonrpc":"2.0","id":9}'
okt 23 23:51:15 Desktop-Ubuntu mopidy[9684]: DEBUG    2022-10-23 23:51:15,451 [9684:HttpServer] mopidy.http.handlers
okt 23 23:51:15 Desktop-Ubuntu mopidy[9684]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 8, "result": []}'
okt 23 23:51:15 Desktop-Ubuntu mopidy[9684]: DEBUG    2022-10-23 23:51:15,451 [9684:HttpServer] mopidy.http.handlers
okt 23 23:51:15 Desktop-Ubuntu mopidy[9684]:   Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_tl_tracks","params":{},"jsonrpc":"2.0","id":8}'
okt 23 23:51:15 Desktop-Ubuntu mopidy[9684]: DEBUG    2022-10-23 23:51:15,450 [9684:HttpServer] mopidy.http.handlers
okt 23 23:51:15 Desktop-Ubuntu mopidy[9684]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 7, "result": false}'
okt 23 23:51:15 Desktop-Ubuntu mopidy[9684]: DEBUG    2022-10-23 23:51:15,447 [9684:HttpServer] mopidy.http.handlers
okt 23 23:51:15 Desktop-Ubuntu mopidy[9684]:   Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_repeat","params":{},"jsonrpc":"2.0","id":7}'
okt 23 23:51:15 Desktop-Ubuntu mopidy[9684]: DEBUG    2022-10-23 23:51:15,447 [9684:HttpServer] mopidy.http.handlers
okt 23 23:51:15 Desktop-Ubuntu mopidy[9684]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 6, "result": false}'
okt 23 23:51:15 Desktop-Ubuntu mopidy[9684]: DEBUG    2022-10-23 23:51:15,447 [9684:HttpServer] mopidy.http.handlers
okt 23 23:51:15 Desktop-Ubuntu mopidy[9684]:   Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_random","params":{},"jsonrpc":"2.0","id":6}'
okt 23 23:51:15 Desktop-Ubuntu mopidy[9684]: DEBUG    2022-10-23 23:51:15,447 [9684:HttpServer] mopidy.http.handlers
okt 23 23:51:15 Desktop-Ubuntu mopidy[9684]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 5, "result": false}'
okt 23 23:51:15 Desktop-Ubuntu mopidy[9684]: DEBUG    2022-10-23 23:51:15,446 [9684:HttpServer] mopidy.http.handlers
okt 23 23:51:15 Desktop-Ubuntu mopidy[9684]:   Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_consume","params":{},"jsonrpc":"2.0","id":5}'
okt 23 23:51:15 Desktop-Ubuntu mopidy[9684]: DEBUG    2022-10-23 23:51:15,446 [9684:HttpServer] mopidy.http.handlers
okt 23 23:51:15 Desktop-Ubuntu mopidy[9684]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 4, "result": false}'
okt 23 23:51:15 Desktop-Ubuntu mopidy[9684]: DEBUG    2022-10-23 23:51:15,446 [9684:HttpServer] mopidy.http.handlers
okt 23 23:51:15 Desktop-Ubuntu mopidy[9684]:   Received WebSocket message from 127.0.0.1: '{"method":"core.mixer.get_mute","params":{},"jsonrpc":"2.0","id":4}'
okt 23 23:51:15 Desktop-Ubuntu mopidy[9684]: DEBUG    2022-10-23 23:51:15,445 [9684:HttpServer] mopidy.http.handlers
okt 23 23:51:15 Desktop-Ubuntu mopidy[9684]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 3, "result": 100}'
okt 23 23:51:15 Desktop-Ubuntu mopidy[9684]: DEBUG    2022-10-23 23:51:15,445 [9684:HttpServer] mopidy.http.handlers
okt 23 23:51:15 Desktop-Ubuntu mopidy[9684]:   Received WebSocket message from 127.0.0.1: '{"method":"core.mixer.get_volume","params":{},"jsonrpc":"2.0","id":3}'
okt 23 23:51:15 Desktop-Ubuntu mopidy[9684]: DEBUG    2022-10-23 23:51:15,444 [9684:HttpServer] mopidy.http.handlers
okt 23 23:51:15 Desktop-Ubuntu mopidy[9684]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 2, "result": "stopped"}'
okt 23 23:51:15 Desktop-Ubuntu mopidy[9684]: DEBUG    2022-10-23 23:51:15,444 [9684:HttpServer] mopidy.http.handlers
okt 23 23:51:15 Desktop-Ubuntu mopidy[9684]:   Received WebSocket message from 127.0.0.1: '{"method":"core.playback.get_state","params":{},"jsonrpc":"2.0","id":2}'
okt 23 23:51:15 Desktop-Ubuntu mopidy[9684]: DEBUG    2022-10-23 23:51:15,444 [9684:HttpServer] mopidy.http.handlers
okt 23 23:51:15 Desktop-Ubuntu mopidy[9684]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 1, "result": null}'
okt 23 23:51:15 Desktop-Ubuntu mopidy[9684]: DEBUG    2022-10-23 23:51:15,444 [9684:HttpServer] mopidy.http.handlers
okt 23 23:51:15 Desktop-Ubuntu mopidy[9684]:   Received WebSocket message from 127.0.0.1: '{"method":"core.playback.get_current_tl_track","params":{},"jsonrpc":"2.0","id":1}'
okt 23 23:51:15 Desktop-Ubuntu mopidy[9684]: DEBUG    2022-10-23 23:51:15,443 [9684:HttpServer] mopidy.http.handlers
okt 23 23:51:15 Desktop-Ubuntu mopidy[9684]:   {'id': 16665618753754, 'jsonrpc': '2.0', 'method': 'get_queue_metadata', 'result': {'queue_metadata': {}}, 'recipient': 'ZJRP92VR95FO'}
okt 23 23:51:15 Desktop-Ubuntu mopidy[9684]: DEBUG    2022-10-23 23:51:15,377 [9684:HttpServer] mopidy_iris.core
okt 23 23:51:15 Desktop-Ubuntu mopidy[9684]:   Iris websocket message received: {"jsonrpc":"2.0","id":16665618753754,"method":"get_queue_metadata"}
okt 23 23:51:15 Desktop-Ubuntu mopidy[9684]: DEBUG    2022-10-23 23:51:15,377 [9684:HttpServer] mopidy_iris.handlers
okt 23 23:51:15 Desktop-Ubuntu mopidy[9684]:   {'id': 166656187537442, 'jsonrpc': '2.0', 'method': 'get_pinned', 'result': {'pinned': []}, 'recipient': 'ZJRP92VR95FO'}
okt 23 23:51:15 Desktop-Ubuntu mopidy[9684]: DEBUG    2022-10-23 23:51:15,377 [9684:HttpServer] mopidy_iris.core
okt 23 23:51:15 Desktop-Ubuntu mopidy[9684]:   Iris websocket message received: {"jsonrpc":"2.0","id":166656187537442,"method":"get_pinned"}
okt 23 23:51:15 Desktop-Ubuntu mopidy[9684]: DEBUG    2022-10-23 23:51:15,377 [9684:HttpServer] mopidy_iris.handlers
okt 23 23:51:15 Desktop-Ubuntu mopidy[9684]:   {'id': 166656187537367, 'jsonrpc': '2.0', 'method': 'get_commands', 'result': {'commands': {}}, 'recipient': 'ZJRP92VR95FO'}
okt 23 23:51:15 Desktop-Ubuntu mopidy[9684]: DEBUG    2022-10-23 23:51:15,377 [9684:HttpServer] mopidy_iris.core
okt 23 23:51:15 Desktop-Ubuntu mopidy[9684]:   Iris websocket message received: {"jsonrpc":"2.0","id":166656187537367,"method":"get_commands"}
okt 23 23:51:15 Desktop-Ubuntu mopidy[9684]: DEBUG    2022-10-23 23:51:15,376 [9684:HttpServer] mopidy_iris.handlers
okt 23 23:51:15 Desktop-Ubuntu mopidy[9684]:   {'id': 166656187537326, 'jsonrpc': '2.0', 'method': 'get_radio', 'result': {'radio': {'enabled': 0, 'seed_artists': [], 'seed_genres': [], 'seed_tracks': [], 'results': []}}, 'recipient': 'ZJRP92VR95FO'}
okt 23 23:51:15 Desktop-Ubuntu mopidy[9684]: DEBUG    2022-10-23 23:51:15,376 [9684:HttpServer] mopidy_iris.core
okt 23 23:51:15 Desktop-Ubuntu mopidy[9684]:   Iris websocket message received: {"jsonrpc":"2.0","id":166656187537326,"method":"get_radio"}
okt 23 23:51:15 Desktop-Ubuntu mopidy[9684]: DEBUG    2022-10-23 23:51:15,376 [9684:HttpServer] mopidy_iris.handlers
okt 23 23:51:15 Desktop-Ubuntu mopidy[9684]:   {'id': 166656187537241, 'jsonrpc': '2.0', 'method': 'get_shared_config', 'result': {'shared_config': {}}, 'recipient': 'ZJRP92VR95FO'}
okt 23 23:51:15 Desktop-Ubuntu mopidy[9684]: DEBUG    2022-10-23 23:51:15,376 [9684:HttpServer] mopidy_iris.core
okt 23 23:51:15 Desktop-Ubuntu mopidy[9684]:   Iris websocket message received: {"jsonrpc":"2.0","id":166656187537241,"method":"get_shared_config"}
okt 23 23:51:15 Desktop-Ubuntu mopidy[9684]: DEBUG    2022-10-23 23:51:15,376 [9684:HttpServer] mopidy_iris.handlers
okt 23 23:51:15 Desktop-Ubuntu mopidy[9684]:   {'id': 166656187537167, 'jsonrpc': '2.0', 'method': 'get_config', 'result': {'config': {'is_root': False, 'spotify_username': False, 'country': 'NZ', 'locale': 'en_NZ', 'snapcast_enabled': True, 'snapcast_host': 'localhost', 'snapcast_port': '1780', 'snapcast_ssl': False, 'snapcast_stream': 'Default', 'spotify_authorization_url': 'https://jamesbarnsley.co.nz/iris/auth_spotify.php', 'lastfm_authorization_url': 'https://jamesbarnsley.co.nz/iris/auth_lastfm.php', 'genius_authorization_url': 'https://jamesbarnsley.co.nz/iris/auth_genius.php', 'shared_config': {}}}, 'recipient': 'ZJRP92VR95FO'}
okt 23 23:51:15 Desktop-Ubuntu mopidy[9684]: DEBUG    2022-10-23 23:51:15,375 [9684:HttpServer] mopidy_iris.core
okt 23 23:51:15 Desktop-Ubuntu mopidy[9684]:   Iris websocket message received: {"jsonrpc":"2.0","id":166656187537167,"method":"get_config"}
okt 23 23:51:15 Desktop-Ubuntu mopidy[9684]: DEBUG    2022-10-23 23:51:15,375 [9684:HttpServer] mopidy_iris.handlers
okt 23 23:51:15 Desktop-Ubuntu mopidy[9684]:   {'id': 166656187537026, 'jsonrpc': '2.0', 'method': 'update_connection', 'result': {'connection': {'connection_id': 'ZJRP92VR95FO', 'ip': '127.0.0.1', 'created': '2022-10-23 23:51:15', 'username': 166656148284185, 'client_id': 166656148284193}}, 'recipient': 'ZJRP92VR95FO'}
okt 23 23:51:15 Desktop-Ubuntu mopidy[9684]: DEBUG    2022-10-23 23:51:15,375 [9684:HttpServer] mopidy_iris.core
okt 23 23:51:15 Desktop-Ubuntu mopidy[9684]:   {'method': 'connection_changed', 'params': {'connection': {'connection_id': 'ZJRP92VR95FO', 'ip': '127.0.0.1', 'created': '2022-10-23 23:51:15', 'username': 166656148284185, 'client_id': 166656148284193}}}
okt 23 23:51:15 Desktop-Ubuntu mopidy[9684]: DEBUG    2022-10-23 23:51:15,375 [9684:HttpServer] mopidy_iris.core
okt 23 23:51:15 Desktop-Ubuntu mopidy[9684]:   Iris websocket message received: {"jsonrpc":"2.0","id":166656187537026,"method":"update_connection","params":{"username":166656148284185,"client_id":166656148284193}}
okt 23 23:51:15 Desktop-Ubuntu mopidy[9684]: DEBUG    2022-10-23 23:51:15,374 [9684:HttpServer] mopidy_iris.handlers
okt 23 23:51:15 Desktop-Ubuntu mopidy[9684]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 0, "result": {"core.get_uri_schemes": {"description": "Get list of URI schemes we can handle", "params": []}, "core.get_version": {"description": "Get version of the Mopidy core API", "params": []}, "core.history.get_history": {"description": "Get the track history.\\n\\nThe timestamps are milliseconds since epoch.\\n\\n:returns: the track history\\n:rtype: list of (timestamp, :class:`mopidy.models.Ref`) tuples", "params": []}, "core.history.get_length": {"description": "Get the number of tracks in the history.\\n\\n:returns: the history length\\n:rtype: int", "params": []}, "core.library.browse": {"description": "Browse directories and tracks at the given ``uri``.\\n\\n``uri`` is a string which represents some directory belonging to a\\nbackend. To get the intial root directories for backends pass\\n:class:`None` as the URI.\\n\\nReturns a list of :class:`mopidy.models.Ref` objects for the\\ndirectories and tracks at the given ``uri``.\\n\\nThe :class:`~mopidy.models.Ref` objects representing tracks keep the\\ntrack\'s original URI. A matching pair of objects can look like this::\\n\\n    Track(uri=\'dummy:/foo.mp3\', name=\'foo\', artists=..., album=...)\\n    Ref.track(uri=\'dummy:/foo.mp3\', name=\'foo\')\\n\\nThe :class:`~mopidy.models.Ref` objects representing directories have\\nbackend specific URIs. These are opaque values, so no one but the\\nbackend that created them should try and derive any meaning from them.\\nThe only valid exception to this is checking the scheme, as it is used\\nto route browse requests to the correct backend.\\n\\nFor example, the dummy library\'s ``/bar`` directory could be returned\\nlike this::\\n\\n    Ref.directory(uri=\'dummy:directory:/bar\', name=\'bar\')\\n\\n:param string uri: URI to browse\\n:rtype: list of :class:`mopidy.models.Ref`\\n\\n.. versionadded:: 0.18", "params": [{"name": "uri"}]}, "core.library.get_distinct": {"description": "List distinct values for a given field from the library.\\n\\nThis has mainly been added to support the list commands the MPD\\nprotocol supports in a more sane fashion. Other frontends are not\\nrecommended to use this method.\\n\\n:param string field: Any one of ``uri``, ``track_name``, ``album``,\\n    ``artist``, ``albumartist``, ``composer``, ``performer``,\\n    ``track_no``, ``genre``, ``date``, ``comment``, ``disc_no``,\\n    ``musicbrainz_albumid``, ``musicbrainz_artistid``, or\\n    ``musicbrainz_trackid``.\\n:param dict query: Query to use for limiting results, see\\n    :meth:`search` for details about the query format.\\n:rtype: set of values corresponding to the requested field type.\\n\\n.. versionadded:: 1.0", "params": [{"name": "field"}, {"name": "query", "default": null}]}, "core.library.get_images": {"description": "Lookup the images for the given URIs\\n\\nBackends can use this to return image URIs for any URI they know about\\nbe it tracks, albums, playlists. The lookup result is a dictionary\\nmapping the provided URIs to lists of images.\\n\\nUnknown URIs or URIs the corresponding backend couldn\'t find anything\\nfor will simply return an empty list for that URI.\\n\\n:param uris: list of URIs to find images for\\n:type uris: list of string\\n:rtype: {uri: tuple of :class:`mopidy.models.Image`}\\n\\n.. versionadded:: 1.0", "params": [{"name": "uris"}]}, "core.library.lookup": {"description": "Lookup the given URIs.\\n\\nIf the URI expands to multiple tracks, the returned list will contain\\nthem all.\\n\\n:param uris: track URIs\\n:type uris: list of string\\n:rtype: {uri: list of :class:`mopidy.models.Track`}", "params": [{"name": "uris"}]}, "core.library.refresh": {"description": "Refresh library. Limit to URI and below if an URI is given.\\n\\n:param uri: directory or track URI\\n:type uri: string", "params": [{"name": "uri", "default": null}]}, "core.library.search": {"description": "Search the library for tracks where ``field`` contains ``values``.\\n\\n``field`` can be one of ``uri``, ``track_name``, ``album``, ``artist``,\\n``albumartist``, ``composer``, ``performer``, ``track_no``, ``genre``,\\n``date``, ``comment``, ``disc_no``, ``musicbrainz_albumid``,\\n``musicbrainz_artistid``, ``musicbrainz_trackid`` or ``any``.\\n\\nIf ``uris`` is given, the search is limited to results from within the\\nURI roots. For example passing ``uris=[\'file:\']`` will limit the search\\nto the local backend.\\n\\nExamples::\\n\\n    # Returns results matching \'a\' in any backend\\n    search({\'any\': [\'a\']})\\n\\n    # Returns results matching artist \'xyz\' in any backend\\n    search({\'artist\': [\'xyz\']})\\n\\n    # Returns results matching \'a\' and \'b\' and artist \'xyz\' in any\\n    # backend\\n    search({\'any\': [\'a\', \'b\'], \'artist\': [\'xyz\']})\\n\\n    # Returns results matching \'a\' if within the given URI roots\\n    # \\"file:///media/music\\" and \\"spotify:\\"\\n    search({\'any\': [\'a\']}, uris=[\'file:///media/music\', \'spotify:\'])\\n\\n    # Returns results matching artist \'xyz\' and \'abc\' in any backend\\n    search({\'artist\': [\'xyz\', \'abc\']})\\n\\n:param query: one or more queries to search for\\n:type query: dict\\n:param uris: zero or more URI roots to limit the search to\\n:type uris: list of string or :class:`None`\\n:param exact: if the search should use exact matching\\n:type exact: :class:`bool`\\n:rtype: list of :class:`mopidy.models.SearchResult`\\n\\n.. versionadded:: 1.0\\n    The ``exact`` keyword argument.", "params": [{"name": "query"}, {"name": "uris", "default": null}, {"name": "exact", "default": false}]}, "core.mixer.get_mute": {"description": "Get mute state.\\n\\n:class:`True` if muted, :class:`False` unmuted, :class:`None` if\\nunknown.", "params": []}, "core.mixer.get_volume": {"description": "Get the volume.\\n\\nInteger in range [0..100] or :class:`None` if unknown.\\n\\nThe volume scale is linear.", "params": []}, "core.mixer.set_mute": {"description": "Set mute state.\\n\\n:class:`True` to mute, :class:`False` to unmute.\\n\\nReturns :class:`True` if call is successful, otherwise :class:`False`.", "params": [{"name": "mute"}]}, "core.mixer.set_volume": {"description": "Set the volume.\\n\\nThe volume is defined as an integer in range [0..100].\\n\\nThe volume scale is linear.\\n\\nReturns :class:`True` if call is successful, otherwise :class:`False`.", "params": [{"name": "volume"}]}, "core.playback.get_current_tl_track": {"description": "Get the currently playing or selected track.\\n\\nReturns a :class:`mopidy.models.TlTrack` or :class:`None`.", "params": []}, "core.playback.get_current_tlid": {"description": "Get the currently playing or selected TLID.\\n\\nExtracted from :meth:`get_current_tl_track` for convenience.\\n\\nReturns a :class:`int` or :class:`None`.\\n\\n.. versionadded:: 1.1", "params": []}, "core.playback.get_current_track": {"description": "Get the currently playing or selected track.\\n\\nExtracted from :meth:`get_current_tl_track` for convenience.\\n\\nReturns a :class:`mopidy.models.Track` or :class:`None`.", "params": []}, "core.playback.get_state": {"description": "Get The playback state.", "params": []}, "core.playback.get_stream_title": {"description": "Get the current stream title or :class:`None`.", "params": []}, "core.playback.get_time_position": {"description": "Get time position in milliseconds.", "params": []}, "core.playback.next": {"description": "Change to the next track.\\n\\nThe current playback state will be kept. If it was playing, playing\\nwill continue. If it was paused, it will still be paused, etc.", "params": []}, "core.playback.pause": {"description": "Pause playback.", "params": []}, "core.playback.play": {"description": "Play the given track, or if the given tl_track and tlid is\\n:class:`None`, play the currently active track.\\n\\nNote that the track **must** already be in the tracklist.\\n\\n.. deprecated:: 3.0\\n    The ``tl_track`` argument. Use ``tlid`` instead.\\n\\n:param tl_track: track to play\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:param tlid: TLID of the track to play\\n:type tlid: :class:`int` or :class:`None`", "params": [{"name": "tl_track", "default": null}, {"name": "tlid", "default": null}]}, "core.playback.previous": {"description": "Change to the previous track.\\n\\nThe current playback state will be kept. If it was playing, playing\\nwill continue. If it was paused, it will still be paused, etc.", "params": []}, "core.playback.resume": {"description": "If paused, resume playing the current track.", "params": []}, "core.playback.seek": {"description": "Seeks to time position given in milliseconds.\\n\\n:param time_position: time position in milliseconds\\n:type time_position: int\\n:rtype: :class:`True` if successful, else :class:`False`", "params": [{"name": "time_position"}]}, "core.playback.set_state": {"description": "Set the playback state.\\n\\nMust be :attr:`PLAYING`, :attr:`PAUSED`, or :attr:`STOPPED`.\\n\\nPossible states and transitions:\\n\\n.. digraph:: state_transitions\\n\\n    \\"STOPPED\\" -> \\"PLAYING\\" [ label=\\"play\\" ]\\n    \\"STOPPED\\" -> \\"PAUSED\\" [ label=\\"pause\\" ]\\n    \\"PLAYING\\" -> \\"STOPPED\\" [ label=\\"stop\\" ]\\n    \\"PLAYING\\" -> \\"PAUSED\\" [ label=\\"pause\\" ]\\n    \\"PLAYING\\" -> \\"PLAYING\\" [ label=\\"play\\" ]\\n    \\"PAUSED\\" -> \\"PLAYING\\" [ label=\\"resume\\" ]\\n    \\"PAUSED\\" -> \\"STOPPED\\" [ label=\\"stop\\" ]", "params": [{"name": "new_state"}]}, "core.playback.stop": {"description": "Stop playing.", "params": []}, "core.playlists.as_list": {"description": "Get a list of the currently available playlists.\\n\\nReturns a list of :class:`~mopidy.models.Ref` objects referring to the\\nplaylists. In other words, no information about the playlists\' content\\nis given.\\n\\n:rtype: list of :class:`mopidy.models.Ref`\\n\\n.. versionadded:: 1.0", "params": []}, "core.playlists.create": {"description": "Create a new playlist.\\n\\nIf ``uri_scheme`` matches an URI scheme handled by a current backend,\\nthat backend is asked to create the playlist. If ``uri_scheme`` is\\n:class:`None` or doesn\'t match a current backend, the first backend is\\nasked to create the playlist.\\n\\nAll new playlists must be created by calling this method, and **not**\\nby creating new instances of :class:`mopidy.models.Playlist`.\\n\\n:param name: name of the new playlist\\n:type name: string\\n:param uri_scheme: use the backend matching the URI scheme\\n:type uri_scheme: string\\n:rtype: :class:`mopidy.models.Playlist` or :class:`None`", "params": [{"name": "name"}, {"name": "uri_scheme", "default": null}]}, "core.playlists.delete": {"description": "Delete playlist identified by the URI.\\n\\nIf the URI doesn\'t match the URI schemes handled by the current\\nbackends, nothing happens.\\n\\nReturns :class:`True` if deleted, :class:`False` otherwise.\\n\\n:param uri: URI of the playlist to delete\\n:type uri: string\\n:rtype: :class:`bool`\\n\\n.. versionchanged:: 2.2\\n    Return type defined.", "params": [{"name": "uri"}]}, "core.playlists.get_items": {"description": "Get the items in a playlist specified by ``uri``.\\n\\nReturns a list of :class:`~mopidy.models.Ref` objects referring to the\\nplaylist\'s items.\\n\\nIf a playlist with the given ``uri`` doesn\'t exist, it returns\\n:class:`None`.\\n\\n:rtype: list of :class:`mopidy.models.Ref`, or :class:`None`\\n\\n.. versionadded:: 1.0", "params": [{"name": "uri"}]}, "core.playlists.get_uri_schemes": {"description": "Get the list of URI schemes that support playlists.\\n\\n:rtype: list of string\\n\\n.. versionadded:: 2.0", "params": []}, "core.playlists.lookup": {"description": "Lookup playlist with given URI in both the set of playlists and in any\\nother playlist sources. Returns :class:`None` if not found.\\n\\n:param uri: playlist URI\\n:type uri: string\\n:rtype: :class:`mopidy.models.Playlist` or :class:`None`", "params": [{"name": "uri"}]}, "core.playlists.refresh": {"description": "Refresh the playlists in :attr:`playlists`.\\n\\nIf ``uri_scheme`` is :class:`None`, all backends are asked to refresh.\\nIf ``uri_scheme`` is an URI scheme handled by a backend, only that\\nbackend is asked to refresh. If ``uri_scheme`` doesn\'t match any\\ncurrent backend, nothing happens.\\n\\n:param uri_scheme: limit to the backend matching the URI scheme\\n:type uri_scheme: string", "params": [{"name": "uri_scheme", "default": null}]}, "core.playlists.save": {"description": "Save the playlist.\\n\\nFor a playlist to be saveable, it must have the ``uri`` attribute set.\\nYou must not set the ``uri`` atribute yourself, but use playlist\\nobjects returned by :meth:`create` or retrieved from :attr:`playlists`,\\nwhich will always give you saveable playlists.\\n\\nThe method returns the saved playlist. The return playlist may differ\\nfrom the saved playlist. E.g. if the playlist name was changed, the\\nreturned playlist may have a different URI. The caller of this method\\nmust throw away the playlist sent to this method, and use the\\nreturned playlist instead.\\n\\nIf the playlist\'s URI isn\'t set or doesn\'t match the URI scheme of a\\ncurrent backend, nothing is done and :class:`None` is returned.\\n\\n:param playlist: the playlist\\n:type playlist: :class:`mopidy.models.Playlist`\\n:rtype: :class:`mopidy.models.Playlist` or :class:`None`", "params": [{"name": "playlist"}]}, "core.tracklist.add": {"description": "Add tracks to the tracklist.\\n\\nIf ``uris`` is given instead of ``tracks``, the URIs are\\nlooked up in the library and the resulting tracks are added to the\\ntracklist.\\n\\nIf ``at_position`` is given, the tracks are inserted at the given\\nposition in the tracklist. If ``at_position`` is not given, the tracks\\nare appended to the end of the tracklist.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.\\n\\n:param tracks: tracks to add\\n:type tracks: list of :class:`mopidy.models.Track` or :class:`None`\\n:param at_position: position in tracklist to add tracks\\n:type at_position: int or :class:`None`\\n:param uris: list of URIs for tracks to add\\n:type uris: list of string or :class:`None`\\n:rtype: list of :class:`mopidy.models.TlTrack`\\n\\n.. versionadded:: 1.0\\n    The ``uris`` argument.\\n\\n.. deprecated:: 1.0\\n    The ``tracks`` argument. Use ``uris``.", "params": [{"name": "tracks", "default": null}, {"name": "at_position", "default": null}, {"name": "uris", "default": null}]}, "core.tracklist.clear": {"description": "Clear the tracklist.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.", "params": []}, "core.tracklist.eot_track": {"description": "The track that will be played after the given track.\\n\\nNot necessarily the same track as :meth:`next_track`.\\n\\n.. deprecated:: 3.0\\n    Use :meth:`get_eot_tlid` instead.\\n\\n:param tl_track: the reference track\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:rtype: :class:`mopidy.models.TlTrack` or :class:`None`", "params": [{"name": "tl_track"}]}, "core.tracklist.filter": {"description": "Filter the tracklist by the given criteria.\\n\\nEach rule in the criteria consists of a model field and a list of\\nvalues to compare it against. If the model field matches any of the\\nvalues, it may be returned.\\n\\nOnly tracks that match all the given criteria are returned.\\n\\nExamples::\\n\\n    # Returns tracks with TLIDs 1, 2, 3, or 4 (tracklist ID)\\n    filter({\'tlid\': [1, 2, 3, 4]})\\n\\n    # Returns track with URIs \'xyz\' or \'abc\'\\n    filter({\'uri\': [\'xyz\', \'abc\']})\\n\\n    # Returns track with a matching TLIDs (1, 3 or 6) and a\\n    # matching URI (\'xyz\' or \'abc\')\\n    filter({\'tlid\': [1, 3, 6], \'uri\': [\'xyz\', \'abc\']})\\n\\n:param criteria: one or more rules to match by\\n:type criteria: dict, of (string, list) pairs\\n:rtype: list of :class:`mopidy.models.TlTrack`", "params": [{"name": "criteria"}]}, "core.tracklist.get_consume": {"description": "Get consume mode.\\n\\n:class:`True`\\n    Tracks are removed from the tracklist when they have been played.\\n:class:`False`\\n    Tracks are not removed from the tracklist.", "params": []}, "core.tracklist.get_eot_tlid": {"description": "The TLID of the track that will be played after the current track.\\n\\nNot necessarily the same TLID as returned by :meth:`get_next_tlid`.\\n\\n:rtype: :class:`int` or :class:`None`\\n\\n.. versionadded:: 1.1", "params": []}, "core.tracklist.get_length": {"description": "Get length of the tracklist.", "params": []}, "core.tracklist.get_next_tlid": {"description": "The tlid of the track that will be played if calling\\n:meth:`mopidy.core.PlaybackController.next()`.\\n\\nFor normal playback this is the next track in the tracklist. If repeat\\nis enabled the next track can loop around the tracklist. When random is\\nenabled this should be a random track, all tracks should be played once\\nbefore the tracklist repeats.\\n\\n:rtype: :class:`int` or :class:`None`\\n\\n.. versionadded:: 1.1", "params": []}, "core.tracklist.get_previous_tlid": {"description": "Returns the TLID of the track that will be played if calling\\n:meth:`mopidy.core.PlaybackController.previous()`.\\n\\nFor normal playback this is the previous track in the tracklist. If\\nrandom and/or consume is enabled it should return the current track\\ninstead.\\n\\n:rtype: :class:`int` or :class:`None`\\n\\n.. versionadded:: 1.1", "params": []}, "core.tracklist.get_random": {"description": "Get random mode.\\n\\n:class:`True`\\n    Tracks are selected at random from the tracklist.\\n:class:`False`\\n    Tracks are played in the order of the tracklist.", "params": []}, "core.tracklist.get_repeat": {"description": "Get repeat mode.\\n\\n:class:`True`\\n    The tracklist is played repeatedly.\\n:class:`False`\\n    The tracklist is played once.", "params": []}, "core.tracklist.get_single": {"description": "Get single mode.\\n\\n:class:`True`\\n    Playback is stopped after current song, unless in ``repeat`` mode.\\n:class:`False`\\n    Playback continues after current song.", "params": []}, "core.tracklist.get_tl_tracks": {"description": "Get tracklist as list of :class:`mopidy.models.TlTrack`.", "params": []}, "core.tracklist.get_tracks": {"description": "Get tracklist as list of :class:`mopidy.models.Track`.", "params": []}, "core.tracklist.get_version": {"description": "Get the tracklist version.\\n\\nInteger which is increased every time the tracklist is changed. Is not\\nreset before Mopidy is restarted.", "params": []}, "core.tracklist.index": {"description": "The position of the given track in the tracklist.\\n\\nIf neither *tl_track* or *tlid* is given we return the index of\\nthe currently playing track.\\n\\n:param tl_track: the track to find the index of\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:param tlid: TLID of the track to find the index of\\n:type tlid: :class:`int` or :class:`None`\\n:rtype: :class:`int` or :class:`None`\\n\\n.. versionadded:: 1.1\\n    The *tlid* parameter", "params": [{"name": "tl_track", "default": null}, {"name": "tlid", "default": null}]}, "core.tracklist.move": {"description": "Move the tracks in the slice ``[start:end]`` to ``to_position``.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.\\n\\n:param start: position of first track to move\\n:type start: int\\n:param end: position after last track to move\\n:type end: int\\n:param to_position: new position for the tracks\\n:type to_position: int", "params": [{"name": "start"}, {"name": "end"}, {"name": "to_position"}]}, "core.tracklist.next_track": {"description": "The track that will be played if calling\\n:meth:`mopidy.core.PlaybackController.next()`.\\n\\nFor normal playback this is the next track in the tracklist. If repeat\\nis enabled the next track can loop around the tracklist. When random is\\nenabled this should be a random track, all tracks should be played once\\nbefore the tracklist repeats.\\n\\n.. deprecated:: 3.0\\n    Use :meth:`get_next_tlid` instead.\\n\\n:param tl_track: the reference track\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:rtype: :class:`mopidy.models.TlTrack` or :class:`None`", "params": [{"name": "tl_track"}]}, "core.tracklist.previous_track": {"description": "Returns the track that will be played if calling\\n:meth:`mopidy.core.PlaybackController.previous()`.\\n\\nFor normal playback this is the previous track in the tracklist. If\\nrandom and/or consume is enabled it should return the current track\\ninstead.\\n\\n.. deprecated:: 3.0\\n    Use :meth:`get_previous_tlid` instead.\\n\\n:param tl_track: the reference track\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:rtype: :class:`mopidy.models.TlTrack` or :class:`None`", "params": [{"name": "tl_track"}]}, "core.tracklist.remove": {"description": "Remove the matching tracks from the tracklist.\\n\\nUses :meth:`filter()` to lookup the tracks to remove.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.\\n\\n:param criteria: one or more rules to match by\\n:type criteria: dict, of (string, list) pairs\\n:rtype: list of :class:`mopidy.models.TlTrack` that were removed", "params": [{"name": "criteria"}]}, "core.tracklist.set_consume": {"description": "Set consume mode.\\n\\n:class:`True`\\n    Tracks are removed from the tracklist when they have been played.\\n:class:`False`\\n    Tracks are not removed from the tracklist.", "params": [{"name": "value"}]}, "core.tracklist.set_random": {"description": "Set random mode.\\n\\n:class:`True`\\n    Tracks are selected at random from the tracklist.\\n:class:`False`\\n    Tracks are played in the order of the tracklist.", "params": [{"name": "value"}]}, "core.tracklist.set_repeat": {"description": "Set repeat mode.\\n\\nTo repeat a single track, set both ``repeat`` and ``single``.\\n\\n:class:`True`\\n    The tracklist is played repeatedly.\\n:class:`False`\\n    The tracklist is played once.", "params": [{"name": "value"}]}, "core.tracklist.set_single": {"description": "Set single mode.\\n\\n:class:`True`\\n    Playback is stopped after current song, unless in ``repeat`` mode.\\n:class:`False`\\n    Playback continues after current song.", "params": [{"name": "value"}]}, "core.tracklist.shuffle": {"description": "Shuffles the entire tracklist. If ``start`` and ``end`` is given only\\nshuffles the slice ``[start:end]``.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.\\n\\n:param start: position of first track to shuffle\\n:type start: int or :class:`None`\\n:param end: position after last track to shuffle\\n:type end: int or :class:`None`", "params": [{"name": "start", "default": null}, {"name": "end", "default": null}]}, "core.tracklist.slice": {"description": "Returns a slice of the tracklist, limited by the given start and end\\npositions.\\n\\n:param start: position of first track to include in slice\\n:type start: int\\n:param end: position after last track to include in slice\\n:type end: int\\n:rtype: :class:`mopidy.models.TlTrack`", "params": [{"name": "start"}, {"name": "end"}]}}}'
okt 23 23:51:15 Desktop-Ubuntu mopidy[9684]: DEBUG    2022-10-23 23:51:15,374 [9684:HttpServer] mopidy.http.handlers
okt 23 23:51:15 Desktop-Ubuntu mopidy[9684]:   Received WebSocket message from 127.0.0.1: '{"method":"core.describe","jsonrpc":"2.0","id":0}'
okt 23 23:51:15 Desktop-Ubuntu mopidy[9684]: DEBUG    2022-10-23 23:51:15,370 [9684:HttpServer] mopidy.http.handlers
okt 23 23:51:15 Desktop-Ubuntu mopidy[9684]:   {'method': 'connection_added', 'params': {'connection': {'connection_id': 'ZJRP92VR95FO', 'ip': '127.0.0.1', 'created': '2022-10-23 23:51:15'}}}
okt 23 23:51:15 Desktop-Ubuntu mopidy[9684]: DEBUG    2022-10-23 23:51:15,320 [9684:HttpServer] mopidy_iris.core
okt 23 23:51:15 Desktop-Ubuntu mopidy[9684]:   <mopidy_iris.handlers.WebsocketHandler object at 0x7f2b18707850>
okt 23 23:51:15 Desktop-Ubuntu mopidy[9684]: DEBUG    2022-10-23 23:51:15,320 [9684:HttpServer] mopidy_iris.core
okt 23 23:51:15 Desktop-Ubuntu mopidy[9684]:   Connection added
okt 23 23:51:15 Desktop-Ubuntu mopidy[9684]: DEBUG    2022-10-23 23:51:15,320 [9684:HttpServer] mopidy_iris.core
okt 23 23:51:15 Desktop-Ubuntu mopidy[9684]:   101 GET /iris/ws/ (127.0.0.1) 0.44ms
okt 23 23:51:15 Desktop-Ubuntu mopidy[9684]: INFO     2022-10-23 23:51:15,320 [9684:HttpServer] tornado.access
okt 23 23:51:15 Desktop-Ubuntu mopidy[9684]:   New WebSocket connection from 127.0.0.1
okt 23 23:51:15 Desktop-Ubuntu mopidy[9684]: DEBUG    2022-10-23 23:51:15,309 [9684:HttpServer] mopidy.http.handlers
okt 23 23:51:15 Desktop-Ubuntu mopidy[9684]:   101 GET /mopidy/ws/ (127.0.0.1) 0.54ms
okt 23 23:51:15 Desktop-Ubuntu mopidy[9684]: INFO     2022-10-23 23:51:15,308 [9684:HttpServer] tornado.access
okt 23 23:51:15 Desktop-Ubuntu mopidy[9684]:   200 GET /iris/assets/favicon.png (127.0.0.1) 0.66ms
okt 23 23:51:15 Desktop-Ubuntu mopidy[9684]: INFO     2022-10-23 23:51:15,019 [9684:HttpServer] tornado.access
okt 23 23:51:14 Desktop-Ubuntu mopidy[9684]:   200 GET /iris/app.min.js?v=1666559547 (127.0.0.1) 3.19ms
okt 23 23:51:14 Desktop-Ubuntu mopidy[9684]: INFO     2022-10-23 23:51:14,635 [9684:HttpServer] tornado.access
okt 23 23:51:14 Desktop-Ubuntu mopidy[9684]:   200 GET /iris/app.min.css?v=1666559547 (127.0.0.1) 2.00ms
okt 23 23:51:14 Desktop-Ubuntu mopidy[9684]: INFO     2022-10-23 23:51:14,630 [9684:HttpServer] tornado.access
okt 23 23:51:14 Desktop-Ubuntu mopidy[9684]:   200 GET /iris/assets/app-icon.svg (127.0.0.1) 0.69ms
okt 23 23:51:14 Desktop-Ubuntu mopidy[9684]: INFO     2022-10-23 23:51:14,568 [9684:HttpServer] tornado.access
okt 23 23:51:14 Desktop-Ubuntu mopidy[9684]:   Closed WebSocket connection from 127.0.0.1
okt 23 23:51:14 Desktop-Ubuntu mopidy[9684]: DEBUG    2022-10-23 23:51:14,520 [9684:HttpServer] mopidy.http.handlers
okt 23 23:51:14 Desktop-Ubuntu mopidy[9684]:   {'method': 'connection_removed', 'params': {'connection': {'connection_id': 'UOH3TSOL0PIK', 'ip': '127.0.0.1', 'created': '2022-10-23 23:51:06', 'username': 166656148284185, 'client_id': 166656148284193}}}
okt 23 23:51:14 Desktop-Ubuntu mopidy[9684]: DEBUG    2022-10-23 23:51:14,519 [9684:HttpServer] mopidy_iris.core
okt 23 23:51:14 Desktop-Ubuntu mopidy[9684]:   200 GET /iris/library/browse (127.0.0.1) 0.68ms
okt 23 23:51:14 Desktop-Ubuntu mopidy[9684]: INFO     2022-10-23 23:51:14,505 [9684:HttpServer] tornado.access
okt 23 23:51:08 Desktop-Ubuntu mopidy[9684]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 12, "result": [{"__model__": "Ref", "uri": "file:///var/lib/mopidy", "name": "Files", "type": "directory"}]}'
okt 23 23:51:08 Desktop-Ubuntu mopidy[9684]: DEBUG    2022-10-23 23:51:08,122 [9684:HttpServer] mopidy.http.handlers
okt 23 23:51:08 Desktop-Ubuntu mopidy[9684]:   Received WebSocket message from 127.0.0.1: '{"method":"core.library.browse","params":{"uri":null},"jsonrpc":"2.0","id":12}'
okt 23 23:51:08 Desktop-Ubuntu mopidy[9684]: DEBUG    2022-10-23 23:51:08,119 [9684:HttpServer] mopidy.http.handlers
okt 23 23:51:07 Desktop-Ubuntu mopidy[9684]:   {'id': 166656186699014, 'jsonrpc': '2.0', 'method': 'get_version', 'result': {'version': {'current': '3.64.1', 'latest': '3.64.1', 'is_root': False, 'upgrade_available': False}}, 'recipient': 'UOH3TSOL0PIK'}
okt 23 23:51:07 Desktop-Ubuntu mopidy[9684]: DEBUG    2022-10-23 23:51:07,155 [9684:HttpServer] mopidy_iris.core
okt 23 23:51:06 Desktop-Ubuntu mopidy[9684]:   Iris websocket message received: {"jsonrpc":"2.0","id":166656186699014,"method":"get_version"}
okt 23 23:51:06 Desktop-Ubuntu mopidy[9684]: DEBUG    2022-10-23 23:51:06,990 [9684:HttpServer] mopidy_iris.handlers
okt 23 23:51:06 Desktop-Ubuntu mopidy[9684]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 11, "result": null}'
okt 23 23:51:06 Desktop-Ubuntu mopidy[9684]: DEBUG    2022-10-23 23:51:06,577 [9684:HttpServer] mopidy.http.handlers
okt 23 23:51:06 Desktop-Ubuntu mopidy[9684]:   Received WebSocket message from 127.0.0.1: '{"method":"core.playback.get_stream_title","params":{},"jsonrpc":"2.0","id":11}'
okt 23 23:51:06 Desktop-Ubuntu mopidy[9684]: DEBUG    2022-10-23 23:51:06,577 [9684:HttpServer] mopidy.http.handlers
okt 23 23:51:06 Desktop-Ubuntu mopidy[9684]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 10, "result": ["file", "http", "https", "m3u", "rtsp"]}'
okt 23 23:51:06 Desktop-Ubuntu mopidy[9684]: DEBUG    2022-10-23 23:51:06,577 [9684:HttpServer] mopidy.http.handlers
okt 23 23:51:06 Desktop-Ubuntu mopidy[9684]:   Received WebSocket message from 127.0.0.1: '{"method":"core.get_uri_schemes","params":{},"jsonrpc":"2.0","id":10}'
okt 23 23:51:06 Desktop-Ubuntu mopidy[9684]: DEBUG    2022-10-23 23:51:06,576 [9684:HttpServer] mopidy.http.handlers
okt 23 23:51:06 Desktop-Ubuntu mopidy[9684]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 9, "result": 0}'
okt 23 23:51:06 Desktop-Ubuntu mopidy[9684]: DEBUG    2022-10-23 23:51:06,575 [9684:HttpServer] mopidy.http.handlers
okt 23 23:51:06 Desktop-Ubuntu mopidy[9684]:   Received WebSocket message from 127.0.0.1: '{"method":"core.playback.get_time_position","params":{},"jsonrpc":"2.0","id":9}'
okt 23 23:51:06 Desktop-Ubuntu mopidy[9684]: DEBUG    2022-10-23 23:51:06,575 [9684:HttpServer] mopidy.http.handlers
okt 23 23:51:06 Desktop-Ubuntu mopidy[9684]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 8, "result": []}'
okt 23 23:51:06 Desktop-Ubuntu mopidy[9684]: DEBUG    2022-10-23 23:51:06,575 [9684:HttpServer] mopidy.http.handlers
okt 23 23:51:06 Desktop-Ubuntu mopidy[9684]:   Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_tl_tracks","params":{},"jsonrpc":"2.0","id":8}'
okt 23 23:51:06 Desktop-Ubuntu mopidy[9684]: DEBUG    2022-10-23 23:51:06,574 [9684:HttpServer] mopidy.http.handlers
okt 23 23:51:06 Desktop-Ubuntu mopidy[9684]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 7, "result": false}'
okt 23 23:51:06 Desktop-Ubuntu mopidy[9684]: DEBUG    2022-10-23 23:51:06,574 [9684:HttpServer] mopidy.http.handlers
okt 23 23:51:06 Desktop-Ubuntu mopidy[9684]:   Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_repeat","params":{},"jsonrpc":"2.0","id":7}'
okt 23 23:51:06 Desktop-Ubuntu mopidy[9684]: DEBUG    2022-10-23 23:51:06,574 [9684:HttpServer] mopidy.http.handlers
okt 23 23:51:06 Desktop-Ubuntu mopidy[9684]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 6, "result": false}'
okt 23 23:51:06 Desktop-Ubuntu mopidy[9684]: DEBUG    2022-10-23 23:51:06,573 [9684:HttpServer] mopidy.http.handlers
okt 23 23:51:06 Desktop-Ubuntu mopidy[9684]:   Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_random","params":{},"jsonrpc":"2.0","id":6}'
okt 23 23:51:06 Desktop-Ubuntu mopidy[9684]: DEBUG    2022-10-23 23:51:06,573 [9684:HttpServer] mopidy.http.handlers
okt 23 23:51:06 Desktop-Ubuntu mopidy[9684]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 5, "result": false}'
okt 23 23:51:06 Desktop-Ubuntu mopidy[9684]: DEBUG    2022-10-23 23:51:06,573 [9684:HttpServer] mopidy.http.handlers
okt 23 23:51:06 Desktop-Ubuntu mopidy[9684]:   Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_consume","params":{},"jsonrpc":"2.0","id":5}'
okt 23 23:51:06 Desktop-Ubuntu mopidy[9684]: DEBUG    2022-10-23 23:51:06,572 [9684:HttpServer] mopidy.http.handlers
okt 23 23:51:06 Desktop-Ubuntu mopidy[9684]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 4, "result": false}'
okt 23 23:51:06 Desktop-Ubuntu mopidy[9684]: DEBUG    2022-10-23 23:51:06,572 [9684:HttpServer] mopidy.http.handlers
okt 23 23:51:06 Desktop-Ubuntu mopidy[9684]:   Received WebSocket message from 127.0.0.1: '{"method":"core.mixer.get_mute","params":{},"jsonrpc":"2.0","id":4}'
okt 23 23:51:06 Desktop-Ubuntu mopidy[9684]: DEBUG    2022-10-23 23:51:06,571 [9684:HttpServer] mopidy.http.handlers
okt 23 23:51:06 Desktop-Ubuntu mopidy[9684]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 3, "result": 100}'
okt 23 23:51:06 Desktop-Ubuntu mopidy[9684]: DEBUG    2022-10-23 23:51:06,571 [9684:HttpServer] mopidy.http.handlers
okt 23 23:51:06 Desktop-Ubuntu mopidy[9684]:   Received WebSocket message from 127.0.0.1: '{"method":"core.mixer.get_volume","params":{},"jsonrpc":"2.0","id":3}'
okt 23 23:51:06 Desktop-Ubuntu mopidy[9684]: DEBUG    2022-10-23 23:51:06,571 [9684:HttpServer] mopidy.http.handlers
okt 23 23:51:06 Desktop-Ubuntu mopidy[9684]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 2, "result": "stopped"}'
okt 23 23:51:06 Desktop-Ubuntu mopidy[9684]: DEBUG    2022-10-23 23:51:06,570 [9684:HttpServer] mopidy.http.handlers
okt 23 23:51:06 Desktop-Ubuntu mopidy[9684]:   Received WebSocket message from 127.0.0.1: '{"method":"core.playback.get_state","params":{},"jsonrpc":"2.0","id":2}'
okt 23 23:51:06 Desktop-Ubuntu mopidy[9684]: DEBUG    2022-10-23 23:51:06,570 [9684:HttpServer] mopidy.http.handlers
okt 23 23:51:06 Desktop-Ubuntu mopidy[9684]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 1, "result": null}'
okt 23 23:51:06 Desktop-Ubuntu mopidy[9684]: DEBUG    2022-10-23 23:51:06,570 [9684:HttpServer] mopidy.http.handlers
okt 23 23:51:06 Desktop-Ubuntu mopidy[9684]:   Received WebSocket message from 127.0.0.1: '{"method":"core.playback.get_current_tl_track","params":{},"jsonrpc":"2.0","id":1}'
okt 23 23:51:06 Desktop-Ubuntu mopidy[9684]: DEBUG    2022-10-23 23:51:06,569 [9684:HttpServer] mopidy.http.handlers
okt 23 23:51:06 Desktop-Ubuntu mopidy[9684]:   {'id': 166656186648830, 'jsonrpc': '2.0', 'method': 'get_queue_metadata', 'result': {'queue_metadata': {}}, 'recipient': 'UOH3TSOL0PIK'}
okt 23 23:51:06 Desktop-Ubuntu mopidy[9684]: DEBUG    2022-10-23 23:51:06,489 [9684:HttpServer] mopidy_iris.core
okt 23 23:51:06 Desktop-Ubuntu mopidy[9684]:   Iris websocket message received: {"jsonrpc":"2.0","id":166656186648830,"method":"get_queue_metadata"}
okt 23 23:51:06 Desktop-Ubuntu mopidy[9684]: DEBUG    2022-10-23 23:51:06,489 [9684:HttpServer] mopidy_iris.handlers
okt 23 23:51:06 Desktop-Ubuntu mopidy[9684]:   {'id': 166656186648736, 'jsonrpc': '2.0', 'method': 'get_pinned', 'result': {'pinned': []}, 'recipient': 'UOH3TSOL0PIK'}
okt 23 23:51:06 Desktop-Ubuntu mopidy[9684]: DEBUG    2022-10-23 23:51:06,488 [9684:HttpServer] mopidy_iris.core
okt 23 23:51:06 Desktop-Ubuntu mopidy[9684]:   Iris websocket message received: {"jsonrpc":"2.0","id":166656186648736,"method":"get_pinned"}
okt 23 23:51:06 Desktop-Ubuntu mopidy[9684]: DEBUG    2022-10-23 23:51:06,488 [9684:HttpServer] mopidy_iris.handlers
okt 23 23:51:06 Desktop-Ubuntu mopidy[9684]:   {'id': 166656186648673, 'jsonrpc': '2.0', 'method': 'get_commands', 'result': {'commands': {}}, 'recipient': 'UOH3TSOL0PIK'}
okt 23 23:51:06 Desktop-Ubuntu mopidy[9684]: DEBUG    2022-10-23 23:51:06,487 [9684:HttpServer] mopidy_iris.core
okt 23 23:51:06 Desktop-Ubuntu mopidy[9684]:   Iris websocket message received: {"jsonrpc":"2.0","id":166656186648673,"method":"get_commands"}
okt 23 23:51:06 Desktop-Ubuntu mopidy[9684]: DEBUG    2022-10-23 23:51:06,487 [9684:HttpServer] mopidy_iris.handlers
okt 23 23:51:06 Desktop-Ubuntu mopidy[9684]:   {'id': 166656186648570, 'jsonrpc': '2.0', 'method': 'get_radio', 'result': {'radio': {'enabled': 0, 'seed_artists': [], 'seed_genres': [], 'seed_tracks': [], 'results': []}}, 'recipient': 'UOH3TSOL0PIK'}
okt 23 23:51:06 Desktop-Ubuntu mopidy[9684]: DEBUG    2022-10-23 23:51:06,487 [9684:HttpServer] mopidy_iris.core
okt 23 23:51:06 Desktop-Ubuntu mopidy[9684]:   Iris websocket message received: {"jsonrpc":"2.0","id":166656186648570,"method":"get_radio"}
okt 23 23:51:06 Desktop-Ubuntu mopidy[9684]: DEBUG    2022-10-23 23:51:06,487 [9684:HttpServer] mopidy_iris.handlers
okt 23 23:51:06 Desktop-Ubuntu mopidy[9684]:   {'id': 166656186648427, 'jsonrpc': '2.0', 'method': 'get_shared_config', 'result': {'shared_config': {}}, 'recipient': 'UOH3TSOL0PIK'}
okt 23 23:51:06 Desktop-Ubuntu mopidy[9684]: DEBUG    2022-10-23 23:51:06,487 [9684:HttpServer] mopidy_iris.core
okt 23 23:51:06 Desktop-Ubuntu mopidy[9684]:   Iris websocket message received: {"jsonrpc":"2.0","id":166656186648427,"method":"get_shared_config"}
okt 23 23:51:06 Desktop-Ubuntu mopidy[9684]: DEBUG    2022-10-23 23:51:06,487 [9684:HttpServer] mopidy_iris.handlers
okt 23 23:51:06 Desktop-Ubuntu mopidy[9684]:   {'id': 166656186648372, 'jsonrpc': '2.0', 'method': 'get_config', 'result': {'config': {'is_root': False, 'spotify_username': False, 'country': 'NZ', 'locale': 'en_NZ', 'snapcast_enabled': True, 'snapcast_host': 'localhost', 'snapcast_port': '1780', 'snapcast_ssl': False, 'snapcast_stream': 'Default', 'spotify_authorization_url': 'https://jamesbarnsley.co.nz/iris/auth_spotify.php', 'lastfm_authorization_url': 'https://jamesbarnsley.co.nz/iris/auth_lastfm.php', 'genius_authorization_url': 'https://jamesbarnsley.co.nz/iris/auth_genius.php', 'shared_config': {}}}, 'recipient': 'UOH3TSOL0PIK'}
okt 23 23:51:06 Desktop-Ubuntu mopidy[9684]: DEBUG    2022-10-23 23:51:06,486 [9684:HttpServer] mopidy_iris.core
okt 23 23:51:06 Desktop-Ubuntu mopidy[9684]:   Iris websocket message received: {"jsonrpc":"2.0","id":166656186648372,"method":"get_config"}
okt 23 23:51:06 Desktop-Ubuntu mopidy[9684]: DEBUG    2022-10-23 23:51:06,486 [9684:HttpServer] mopidy_iris.handlers
okt 23 23:51:06 Desktop-Ubuntu mopidy[9684]:   {'id': 166656186648253, 'jsonrpc': '2.0', 'method': 'update_connection', 'result': {'connection': {'connection_id': 'UOH3TSOL0PIK', 'ip': '127.0.0.1', 'created': '2022-10-23 23:51:06', 'username': 166656148284185, 'client_id': 166656148284193}}, 'recipient': 'UOH3TSOL0PIK'}
okt 23 23:51:06 Desktop-Ubuntu mopidy[9684]: DEBUG    2022-10-23 23:51:06,486 [9684:HttpServer] mopidy_iris.core
okt 23 23:51:06 Desktop-Ubuntu mopidy[9684]:   {'method': 'connection_changed', 'params': {'connection': {'connection_id': 'UOH3TSOL0PIK', 'ip': '127.0.0.1', 'created': '2022-10-23 23:51:06', 'username': 166656148284185, 'client_id': 166656148284193}}}
okt 23 23:51:06 Desktop-Ubuntu mopidy[9684]: DEBUG    2022-10-23 23:51:06,486 [9684:HttpServer] mopidy_iris.core
okt 23 23:51:06 Desktop-Ubuntu mopidy[9684]:   Iris websocket message received: {"jsonrpc":"2.0","id":166656186648253,"method":"update_connection","params":{"username":166656148284185,"client_id":166656148284193}}
okt 23 23:51:06 Desktop-Ubuntu mopidy[9684]: DEBUG    2022-10-23 23:51:06,485 [9684:HttpServer] mopidy_iris.handlers
okt 23 23:51:06 Desktop-Ubuntu mopidy[9684]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 0, "result": {"core.get_uri_schemes": {"description": "Get list of URI schemes we can handle", "params": []}, "core.get_version": {"description": "Get version of the Mopidy core API", "params": []}, "core.history.get_history": {"description": "Get the track history.\\n\\nThe timestamps are milliseconds since epoch.\\n\\n:returns: the track history\\n:rtype: list of (timestamp, :class:`mopidy.models.Ref`) tuples", "params": []}, "core.history.get_length": {"description": "Get the number of tracks in the history.\\n\\n:returns: the history length\\n:rtype: int", "params": []}, "core.library.browse": {"description": "Browse directories and tracks at the given ``uri``.\\n\\n``uri`` is a string which represents some directory belonging to a\\nbackend. To get the intial root directories for backends pass\\n:class:`None` as the URI.\\n\\nReturns a list of :class:`mopidy.models.Ref` objects for the\\ndirectories and tracks at the given ``uri``.\\n\\nThe :class:`~mopidy.models.Ref` objects representing tracks keep the\\ntrack\'s original URI. A matching pair of objects can look like this::\\n\\n    Track(uri=\'dummy:/foo.mp3\', name=\'foo\', artists=..., album=...)\\n    Ref.track(uri=\'dummy:/foo.mp3\', name=\'foo\')\\n\\nThe :class:`~mopidy.models.Ref` objects representing directories have\\nbackend specific URIs. These are opaque values, so no one but the\\nbackend that created them should try and derive any meaning from them.\\nThe only valid exception to this is checking the scheme, as it is used\\nto route browse requests to the correct backend.\\n\\nFor example, the dummy library\'s ``/bar`` directory could be returned\\nlike this::\\n\\n    Ref.directory(uri=\'dummy:directory:/bar\', name=\'bar\')\\n\\n:param string uri: URI to browse\\n:rtype: list of :class:`mopidy.models.Ref`\\n\\n.. versionadded:: 0.18", "params": [{"name": "uri"}]}, "core.library.get_distinct": {"description": "List distinct values for a given field from the library.\\n\\nThis has mainly been added to support the list commands the MPD\\nprotocol supports in a more sane fashion. Other frontends are not\\nrecommended to use this method.\\n\\n:param string field: Any one of ``uri``, ``track_name``, ``album``,\\n    ``artist``, ``albumartist``, ``composer``, ``performer``,\\n    ``track_no``, ``genre``, ``date``, ``comment``, ``disc_no``,\\n    ``musicbrainz_albumid``, ``musicbrainz_artistid``, or\\n    ``musicbrainz_trackid``.\\n:param dict query: Query to use for limiting results, see\\n    :meth:`search` for details about the query format.\\n:rtype: set of values corresponding to the requested field type.\\n\\n.. versionadded:: 1.0", "params": [{"name": "field"}, {"name": "query", "default": null}]}, "core.library.get_images": {"description": "Lookup the images for the given URIs\\n\\nBackends can use this to return image URIs for any URI they know about\\nbe it tracks, albums, playlists. The lookup result is a dictionary\\nmapping the provided URIs to lists of images.\\n\\nUnknown URIs or URIs the corresponding backend couldn\'t find anything\\nfor will simply return an empty list for that URI.\\n\\n:param uris: list of URIs to find images for\\n:type uris: list of string\\n:rtype: {uri: tuple of :class:`mopidy.models.Image`}\\n\\n.. versionadded:: 1.0", "params": [{"name": "uris"}]}, "core.library.lookup": {"description": "Lookup the given URIs.\\n\\nIf the URI expands to multiple tracks, the returned list will contain\\nthem all.\\n\\n:param uris: track URIs\\n:type uris: list of string\\n:rtype: {uri: list of :class:`mopidy.models.Track`}", "params": [{"name": "uris"}]}, "core.library.refresh": {"description": "Refresh library. Limit to URI and below if an URI is given.\\n\\n:param uri: directory or track URI\\n:type uri: string", "params": [{"name": "uri", "default": null}]}, "core.library.search": {"description": "Search the library for tracks where ``field`` contains ``values``.\\n\\n``field`` can be one of ``uri``, ``track_name``, ``album``, ``artist``,\\n``albumartist``, ``composer``, ``performer``, ``track_no``, ``genre``,\\n``date``, ``comment``, ``disc_no``, ``musicbrainz_albumid``,\\n``musicbrainz_artistid``, ``musicbrainz_trackid`` or ``any``.\\n\\nIf ``uris`` is given, the search is limited to results from within the\\nURI roots. For example passing ``uris=[\'file:\']`` will limit the search\\nto the local backend.\\n\\nExamples::\\n\\n    # Returns results matching \'a\' in any backend\\n    search({\'any\': [\'a\']})\\n\\n    # Returns results matching artist \'xyz\' in any backend\\n    search({\'artist\': [\'xyz\']})\\n\\n    # Returns results matching \'a\' and \'b\' and artist \'xyz\' in any\\n    # backend\\n    search({\'any\': [\'a\', \'b\'], \'artist\': [\'xyz\']})\\n\\n    # Returns results matching \'a\' if within the given URI roots\\n    # \\"file:///media/music\\" and \\"spotify:\\"\\n    search({\'any\': [\'a\']}, uris=[\'file:///media/music\', \'spotify:\'])\\n\\n    # Returns results matching artist \'xyz\' and \'abc\' in any backend\\n    search({\'artist\': [\'xyz\', \'abc\']})\\n\\n:param query: one or more queries to search for\\n:type query: dict\\n:param uris: zero or more URI roots to limit the search to\\n:type uris: list of string or :class:`None`\\n:param exact: if the search should use exact matching\\n:type exact: :class:`bool`\\n:rtype: list of :class:`mopidy.models.SearchResult`\\n\\n.. versionadded:: 1.0\\n    The ``exact`` keyword argument.", "params": [{"name": "query"}, {"name": "uris", "default": null}, {"name": "exact", "default": false}]}, "core.mixer.get_mute": {"description": "Get mute state.\\n\\n:class:`True` if muted, :class:`False` unmuted, :class:`None` if\\nunknown.", "params": []}, "core.mixer.get_volume": {"description": "Get the volume.\\n\\nInteger in range [0..100] or :class:`None` if unknown.\\n\\nThe volume scale is linear.", "params": []}, "core.mixer.set_mute": {"description": "Set mute state.\\n\\n:class:`True` to mute, :class:`False` to unmute.\\n\\nReturns :class:`True` if call is successful, otherwise :class:`False`.", "params": [{"name": "mute"}]}, "core.mixer.set_volume": {"description": "Set the volume.\\n\\nThe volume is defined as an integer in range [0..100].\\n\\nThe volume scale is linear.\\n\\nReturns :class:`True` if call is successful, otherwise :class:`False`.", "params": [{"name": "volume"}]}, "core.playback.get_current_tl_track": {"description": "Get the currently playing or selected track.\\n\\nReturns a :class:`mopidy.models.TlTrack` or :class:`None`.", "params": []}, "core.playback.get_current_tlid": {"description": "Get the currently playing or selected TLID.\\n\\nExtracted from :meth:`get_current_tl_track` for convenience.\\n\\nReturns a :class:`int` or :class:`None`.\\n\\n.. versionadded:: 1.1", "params": []}, "core.playback.get_current_track": {"description": "Get the currently playing or selected track.\\n\\nExtracted from :meth:`get_current_tl_track` for convenience.\\n\\nReturns a :class:`mopidy.models.Track` or :class:`None`.", "params": []}, "core.playback.get_state": {"description": "Get The playback state.", "params": []}, "core.playback.get_stream_title": {"description": "Get the current stream title or :class:`None`.", "params": []}, "core.playback.get_time_position": {"description": "Get time position in milliseconds.", "params": []}, "core.playback.next": {"description": "Change to the next track.\\n\\nThe current playback state will be kept. If it was playing, playing\\nwill continue. If it was paused, it will still be paused, etc.", "params": []}, "core.playback.pause": {"description": "Pause playback.", "params": []}, "core.playback.play": {"description": "Play the given track, or if the given tl_track and tlid is\\n:class:`None`, play the currently active track.\\n\\nNote that the track **must** already be in the tracklist.\\n\\n.. deprecated:: 3.0\\n    The ``tl_track`` argument. Use ``tlid`` instead.\\n\\n:param tl_track: track to play\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:param tlid: TLID of the track to play\\n:type tlid: :class:`int` or :class:`None`", "params": [{"name": "tl_track", "default": null}, {"name": "tlid", "default": null}]}, "core.playback.previous": {"description": "Change to the previous track.\\n\\nThe current playback state will be kept. If it was playing, playing\\nwill continue. If it was paused, it will still be paused, etc.", "params": []}, "core.playback.resume": {"description": "If paused, resume playing the current track.", "params": []}, "core.playback.seek": {"description": "Seeks to time position given in milliseconds.\\n\\n:param time_position: time position in milliseconds\\n:type time_position: int\\n:rtype: :class:`True` if successful, else :class:`False`", "params": [{"name": "time_position"}]}, "core.playback.set_state": {"description": "Set the playback state.\\n\\nMust be :attr:`PLAYING`, :attr:`PAUSED`, or :attr:`STOPPED`.\\n\\nPossible states and transitions:\\n\\n.. digraph:: state_transitions\\n\\n    \\"STOPPED\\" -> \\"PLAYING\\" [ label=\\"play\\" ]\\n    \\"STOPPED\\" -> \\"PAUSED\\" [ label=\\"pause\\" ]\\n    \\"PLAYING\\" -> \\"STOPPED\\" [ label=\\"stop\\" ]\\n    \\"PLAYING\\" -> \\"PAUSED\\" [ label=\\"pause\\" ]\\n    \\"PLAYING\\" -> \\"PLAYING\\" [ label=\\"play\\" ]\\n    \\"PAUSED\\" -> \\"PLAYING\\" [ label=\\"resume\\" ]\\n    \\"PAUSED\\" -> \\"STOPPED\\" [ label=\\"stop\\" ]", "params": [{"name": "new_state"}]}, "core.playback.stop": {"description": "Stop playing.", "params": []}, "core.playlists.as_list": {"description": "Get a list of the currently available playlists.\\n\\nReturns a list of :class:`~mopidy.models.Ref` objects referring to the\\nplaylists. In other words, no information about the playlists\' content\\nis given.\\n\\n:rtype: list of :class:`mopidy.models.Ref`\\n\\n.. versionadded:: 1.0", "params": []}, "core.playlists.create": {"description": "Create a new playlist.\\n\\nIf ``uri_scheme`` matches an URI scheme handled by a current backend,\\nthat backend is asked to create the playlist. If ``uri_scheme`` is\\n:class:`None` or doesn\'t match a current backend, the first backend is\\nasked to create the playlist.\\n\\nAll new playlists must be created by calling this method, and **not**\\nby creating new instances of :class:`mopidy.models.Playlist`.\\n\\n:param name: name of the new playlist\\n:type name: string\\n:param uri_scheme: use the backend matching the URI scheme\\n:type uri_scheme: string\\n:rtype: :class:`mopidy.models.Playlist` or :class:`None`", "params": [{"name": "name"}, {"name": "uri_scheme", "default": null}]}, "core.playlists.delete": {"description": "Delete playlist identified by the URI.\\n\\nIf the URI doesn\'t match the URI schemes handled by the current\\nbackends, nothing happens.\\n\\nReturns :class:`True` if deleted, :class:`False` otherwise.\\n\\n:param uri: URI of the playlist to delete\\n:type uri: string\\n:rtype: :class:`bool`\\n\\n.. versionchanged:: 2.2\\n    Return type defined.", "params": [{"name": "uri"}]}, "core.playlists.get_items": {"description": "Get the items in a playlist specified by ``uri``.\\n\\nReturns a list of :class:`~mopidy.models.Ref` objects referring to the\\nplaylist\'s items.\\n\\nIf a playlist with the given ``uri`` doesn\'t exist, it returns\\n:class:`None`.\\n\\n:rtype: list of :class:`mopidy.models.Ref`, or :class:`None`\\n\\n.. versionadded:: 1.0", "params": [{"name": "uri"}]}, "core.playlists.get_uri_schemes": {"description": "Get the list of URI schemes that support playlists.\\n\\n:rtype: list of string\\n\\n.. versionadded:: 2.0", "params": []}, "core.playlists.lookup": {"description": "Lookup playlist with given URI in both the set of playlists and in any\\nother playlist sources. Returns :class:`None` if not found.\\n\\n:param uri: playlist URI\\n:type uri: string\\n:rtype: :class:`mopidy.models.Playlist` or :class:`None`", "params": [{"name": "uri"}]}, "core.playlists.refresh": {"description": "Refresh the playlists in :attr:`playlists`.\\n\\nIf ``uri_scheme`` is :class:`None`, all backends are asked to refresh.\\nIf ``uri_scheme`` is an URI scheme handled by a backend, only that\\nbackend is asked to refresh. If ``uri_scheme`` doesn\'t match any\\ncurrent backend, nothing happens.\\n\\n:param uri_scheme: limit to the backend matching the URI scheme\\n:type uri_scheme: string", "params": [{"name": "uri_scheme", "default": null}]}, "core.playlists.save": {"description": "Save the playlist.\\n\\nFor a playlist to be saveable, it must have the ``uri`` attribute set.\\nYou must not set the ``uri`` atribute yourself, but use playlist\\nobjects returned by :meth:`create` or retrieved from :attr:`playlists`,\\nwhich will always give you saveable playlists.\\n\\nThe method returns the saved playlist. The return playlist may differ\\nfrom the saved playlist. E.g. if the playlist name was changed, the\\nreturned playlist may have a different URI. The caller of this method\\nmust throw away the playlist sent to this method, and use the\\nreturned playlist instead.\\n\\nIf the playlist\'s URI isn\'t set or doesn\'t match the URI scheme of a\\ncurrent backend, nothing is done and :class:`None` is returned.\\n\\n:param playlist: the playlist\\n:type playlist: :class:`mopidy.models.Playlist`\\n:rtype: :class:`mopidy.models.Playlist` or :class:`None`", "params": [{"name": "playlist"}]}, "core.tracklist.add": {"description": "Add tracks to the tracklist.\\n\\nIf ``uris`` is given instead of ``tracks``, the URIs are\\nlooked up in the library and the resulting tracks are added to the\\ntracklist.\\n\\nIf ``at_position`` is given, the tracks are inserted at the given\\nposition in the tracklist. If ``at_position`` is not given, the tracks\\nare appended to the end of the tracklist.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.\\n\\n:param tracks: tracks to add\\n:type tracks: list of :class:`mopidy.models.Track` or :class:`None`\\n:param at_position: position in tracklist to add tracks\\n:type at_position: int or :class:`None`\\n:param uris: list of URIs for tracks to add\\n:type uris: list of string or :class:`None`\\n:rtype: list of :class:`mopidy.models.TlTrack`\\n\\n.. versionadded:: 1.0\\n    The ``uris`` argument.\\n\\n.. deprecated:: 1.0\\n    The ``tracks`` argument. Use ``uris``.", "params": [{"name": "tracks", "default": null}, {"name": "at_position", "default": null}, {"name": "uris", "default": null}]}, "core.tracklist.clear": {"description": "Clear the tracklist.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.", "params": []}, "core.tracklist.eot_track": {"description": "The track that will be played after the given track.\\n\\nNot necessarily the same track as :meth:`next_track`.\\n\\n.. deprecated:: 3.0\\n    Use :meth:`get_eot_tlid` instead.\\n\\n:param tl_track: the reference track\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:rtype: :class:`mopidy.models.TlTrack` or :class:`None`", "params": [{"name": "tl_track"}]}, "core.tracklist.filter": {"description": "Filter the tracklist by the given criteria.\\n\\nEach rule in the criteria consists of a model field and a list of\\nvalues to compare it against. If the model field matches any of the\\nvalues, it may be returned.\\n\\nOnly tracks that match all the given criteria are returned.\\n\\nExamples::\\n\\n    # Returns tracks with TLIDs 1, 2, 3, or 4 (tracklist ID)\\n    filter({\'tlid\': [1, 2, 3, 4]})\\n\\n    # Returns track with URIs \'xyz\' or \'abc\'\\n    filter({\'uri\': [\'xyz\', \'abc\']})\\n\\n    # Returns track with a matching TLIDs (1, 3 or 6) and a\\n    # matching URI (\'xyz\' or \'abc\')\\n    filter({\'tlid\': [1, 3, 6], \'uri\': [\'xyz\', \'abc\']})\\n\\n:param criteria: one or more rules to match by\\n:type criteria: dict, of (string, list) pairs\\n:rtype: list of :class:`mopidy.models.TlTrack`", "params": [{"name": "criteria"}]}, "core.tracklist.get_consume": {"description": "Get consume mode.\\n\\n:class:`True`\\n    Tracks are removed from the tracklist when they have been played.\\n:class:`False`\\n    Tracks are not removed from the tracklist.", "params": []}, "core.tracklist.get_eot_tlid": {"description": "The TLID of the track that will be played after the current track.\\n\\nNot necessarily the same TLID as returned by :meth:`get_next_tlid`.\\n\\n:rtype: :class:`int` or :class:`None`\\n\\n.. versionadded:: 1.1", "params": []}, "core.tracklist.get_length": {"description": "Get length of the tracklist.", "params": []}, "core.tracklist.get_next_tlid": {"description": "The tlid of the track that will be played if calling\\n:meth:`mopidy.core.PlaybackController.next()`.\\n\\nFor normal playback this is the next track in the tracklist. If repeat\\nis enabled the next track can loop around the tracklist. When random is\\nenabled this should be a random track, all tracks should be played once\\nbefore the tracklist repeats.\\n\\n:rtype: :class:`int` or :class:`None`\\n\\n.. versionadded:: 1.1", "params": []}, "core.tracklist.get_previous_tlid": {"description": "Returns the TLID of the track that will be played if calling\\n:meth:`mopidy.core.PlaybackController.previous()`.\\n\\nFor normal playback this is the previous track in the tracklist. If\\nrandom and/or consume is enabled it should return the current track\\ninstead.\\n\\n:rtype: :class:`int` or :class:`None`\\n\\n.. versionadded:: 1.1", "params": []}, "core.tracklist.get_random": {"description": "Get random mode.\\n\\n:class:`True`\\n    Tracks are selected at random from the tracklist.\\n:class:`False`\\n    Tracks are played in the order of the tracklist.", "params": []}, "core.tracklist.get_repeat": {"description": "Get repeat mode.\\n\\n:class:`True`\\n    The tracklist is played repeatedly.\\n:class:`False`\\n    The tracklist is played once.", "params": []}, "core.tracklist.get_single": {"description": "Get single mode.\\n\\n:class:`True`\\n    Playback is stopped after current song, unless in ``repeat`` mode.\\n:class:`False`\\n    Playback continues after current song.", "params": []}, "core.tracklist.get_tl_tracks": {"description": "Get tracklist as list of :class:`mopidy.models.TlTrack`.", "params": []}, "core.tracklist.get_tracks": {"description": "Get tracklist as list of :class:`mopidy.models.Track`.", "params": []}, "core.tracklist.get_version": {"description": "Get the tracklist version.\\n\\nInteger which is increased every time the tracklist is changed. Is not\\nreset before Mopidy is restarted.", "params": []}, "core.tracklist.index": {"description": "The position of the given track in the tracklist.\\n\\nIf neither *tl_track* or *tlid* is given we return the index of\\nthe currently playing track.\\n\\n:param tl_track: the track to find the index of\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:param tlid: TLID of the track to find the index of\\n:type tlid: :class:`int` or :class:`None`\\n:rtype: :class:`int` or :class:`None`\\n\\n.. versionadded:: 1.1\\n    The *tlid* parameter", "params": [{"name": "tl_track", "default": null}, {"name": "tlid", "default": null}]}, "core.tracklist.move": {"description": "Move the tracks in the slice ``[start:end]`` to ``to_position``.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.\\n\\n:param start: position of first track to move\\n:type start: int\\n:param end: position after last track to move\\n:type end: int\\n:param to_position: new position for the tracks\\n:type to_position: int", "params": [{"name": "start"}, {"name": "end"}, {"name": "to_position"}]}, "core.tracklist.next_track": {"description": "The track that will be played if calling\\n:meth:`mopidy.core.PlaybackController.next()`.\\n\\nFor normal playback this is the next track in the tracklist. If repeat\\nis enabled the next track can loop around the tracklist. When random is\\nenabled this should be a random track, all tracks should be played once\\nbefore the tracklist repeats.\\n\\n.. deprecated:: 3.0\\n    Use :meth:`get_next_tlid` instead.\\n\\n:param tl_track: the reference track\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:rtype: :class:`mopidy.models.TlTrack` or :class:`None`", "params": [{"name": "tl_track"}]}, "core.tracklist.previous_track": {"description": "Returns the track that will be played if calling\\n:meth:`mopidy.core.PlaybackController.previous()`.\\n\\nFor normal playback this is the previous track in the tracklist. If\\nrandom and/or consume is enabled it should return the current track\\ninstead.\\n\\n.. deprecated:: 3.0\\n    Use :meth:`get_previous_tlid` instead.\\n\\n:param tl_track: the reference track\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:rtype: :class:`mopidy.models.TlTrack` or :class:`None`", "params": [{"name": "tl_track"}]}, "core.tracklist.remove": {"description": "Remove the matching tracks from the tracklist.\\n\\nUses :meth:`filter()` to lookup the tracks to remove.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.\\n\\n:param criteria: one or more rules to match by\\n:type criteria: dict, of (string, list) pairs\\n:rtype: list of :class:`mopidy.models.TlTrack` that were removed", "params": [{"name": "criteria"}]}, "core.tracklist.set_consume": {"description": "Set consume mode.\\n\\n:class:`True`\\n    Tracks are removed from the tracklist when they have been played.\\n:class:`False`\\n    Tracks are not removed from the tracklist.", "params": [{"name": "value"}]}, "core.tracklist.set_random": {"description": "Set random mode.\\n\\n:class:`True`\\n    Tracks are selected at random from the tracklist.\\n:class:`False`\\n    Tracks are played in the order of the tracklist.", "params": [{"name": "value"}]}, "core.tracklist.set_repeat": {"description": "Set repeat mode.\\n\\nTo repeat a single track, set both ``repeat`` and ``single``.\\n\\n:class:`True`\\n    The tracklist is played repeatedly.\\n:class:`False`\\n    The tracklist is played once.", "params": [{"name": "value"}]}, "core.tracklist.set_single": {"description": "Set single mode.\\n\\n:class:`True`\\n    Playback is stopped after current song, unless in ``repeat`` mode.\\n:class:`False`\\n    Playback continues after current song.", "params": [{"name": "value"}]}, "core.tracklist.shuffle": {"description": "Shuffles the entire tracklist. If ``start`` and ``end`` is given only\\nshuffles the slice ``[start:end]``.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.\\n\\n:param start: position of first track to shuffle\\n:type start: int or :class:`None`\\n:param end: position after last track to shuffle\\n:type end: int or :class:`None`", "params": [{"name": "start", "default": null}, {"name": "end", "default": null}]}, "core.tracklist.slice": {"description": "Returns a slice of the tracklist, limited by the given start and end\\npositions.\\n\\n:param start: position of first track to include in slice\\n:type start: int\\n:param end: position after last track to include in slice\\n:type end: int\\n:rtype: :class:`mopidy.models.TlTrack`", "params": [{"name": "start"}, {"name": "end"}]}}}'
okt 23 23:51:06 Desktop-Ubuntu mopidy[9684]: DEBUG    2022-10-23 23:51:06,485 [9684:HttpServer] mopidy.http.handlers
okt 23 23:51:06 Desktop-Ubuntu mopidy[9684]:   Received WebSocket message from 127.0.0.1: '{"method":"core.describe","jsonrpc":"2.0","id":0}'
okt 23 23:51:06 Desktop-Ubuntu mopidy[9684]: DEBUG    2022-10-23 23:51:06,481 [9684:HttpServer] mopidy.http.handlers
okt 23 23:51:06 Desktop-Ubuntu mopidy[9684]:   {'method': 'connection_added', 'params': {'connection': {'connection_id': 'UOH3TSOL0PIK', 'ip': '127.0.0.1', 'created': '2022-10-23 23:51:06'}}}
okt 23 23:51:06 Desktop-Ubuntu mopidy[9684]: DEBUG    2022-10-23 23:51:06,441 [9684:HttpServer] mopidy_iris.core
okt 23 23:51:06 Desktop-Ubuntu mopidy[9684]:   <mopidy_iris.handlers.WebsocketHandler object at 0x7f2b187077c0>
okt 23 23:51:06 Desktop-Ubuntu mopidy[9684]: DEBUG    2022-10-23 23:51:06,441 [9684:HttpServer] mopidy_iris.core
okt 23 23:51:06 Desktop-Ubuntu mopidy[9684]:   Connection added
okt 23 23:51:06 Desktop-Ubuntu mopidy[9684]: DEBUG    2022-10-23 23:51:06,441 [9684:HttpServer] mopidy_iris.core
okt 23 23:51:06 Desktop-Ubuntu mopidy[9684]:   101 GET /iris/ws/ (127.0.0.1) 0.45ms
okt 23 23:51:06 Desktop-Ubuntu mopidy[9684]: INFO     2022-10-23 23:51:06,441 [9684:HttpServer] tornado.access
okt 23 23:51:06 Desktop-Ubuntu mopidy[9684]:   New WebSocket connection from 127.0.0.1
okt 23 23:51:06 Desktop-Ubuntu mopidy[9684]: DEBUG    2022-10-23 23:51:06,429 [9684:HttpServer] mopidy.http.handlers
okt 23 23:51:06 Desktop-Ubuntu mopidy[9684]:   101 GET /mopidy/ws/ (127.0.0.1) 0.59ms
okt 23 23:51:06 Desktop-Ubuntu mopidy[9684]: INFO     2022-10-23 23:51:06,429 [9684:HttpServer] tornado.access
okt 23 23:51:05 Desktop-Ubuntu mopidy[9684]:   200 GET /iris/assets/favicon.png (127.0.0.1) 0.83ms
okt 23 23:51:05 Desktop-Ubuntu mopidy[9684]: INFO     2022-10-23 23:51:05,928 [9684:HttpServer] tornado.access
okt 23 23:51:05 Desktop-Ubuntu mopidy[9684]:   200 GET /iris/app.min.js?v=1666559547 (127.0.0.1) 11.25ms
okt 23 23:51:05 Desktop-Ubuntu mopidy[9684]: INFO     2022-10-23 23:51:05,324 [9684:HttpServer] tornado.access
okt 23 23:51:05 Desktop-Ubuntu mopidy[9684]:   200 GET /iris/app.min.css?v=1666559547 (127.0.0.1) 5.05ms
okt 23 23:51:05 Desktop-Ubuntu mopidy[9684]: INFO     2022-10-23 23:51:05,311 [9684:HttpServer] tornado.access
okt 23 23:51:05 Desktop-Ubuntu mopidy[9684]:   200 GET /iris/assets/app-icon.svg (127.0.0.1) 0.72ms
okt 23 23:51:05 Desktop-Ubuntu mopidy[9684]: INFO     2022-10-23 23:51:05,144 [9684:HttpServer] tornado.access
okt 23 23:51:05 Desktop-Ubuntu mopidy[9684]:   Closed WebSocket connection from 127.0.0.1
okt 23 23:51:05 Desktop-Ubuntu mopidy[9684]: DEBUG    2022-10-23 23:51:05,107 [9684:HttpServer] mopidy.http.handlers
okt 23 23:51:05 Desktop-Ubuntu mopidy[9684]:   200 GET /iris/library/browse (127.0.0.1) 5.60ms
okt 23 23:51:05 Desktop-Ubuntu mopidy[9684]: INFO     2022-10-23 23:51:05,092 [9684:HttpServer] tornado.access
okt 23 23:51:01 Desktop-Ubuntu mopidy[9684]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 27, "result": null}'
okt 23 23:51:01 Desktop-Ubuntu mopidy[9684]: DEBUG    2022-10-23 23:51:01,498 [9684:HttpServer] mopidy.http.handlers
okt 23 23:51:01 Desktop-Ubuntu mopidy[9684]:   Received WebSocket message from 127.0.0.1: '{"method":"core.playback.get_stream_title","params":{},"jsonrpc":"2.0","id":27}'
okt 23 23:51:01 Desktop-Ubuntu mopidy[9684]: DEBUG    2022-10-23 23:51:01,498 [9684:HttpServer] mopidy.http.handlers
okt 23 23:51:01 Desktop-Ubuntu mopidy[9684]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 26, "result": ["file", "http", "https", "m3u", "rtsp"]}'
okt 23 23:51:01 Desktop-Ubuntu mopidy[9684]: DEBUG    2022-10-23 23:51:01,498 [9684:HttpServer] mopidy.http.handlers
okt 23 23:51:01 Desktop-Ubuntu mopidy[9684]:   Received WebSocket message from 127.0.0.1: '{"method":"core.get_uri_schemes","params":{},"jsonrpc":"2.0","id":26}'
okt 23 23:51:01 Desktop-Ubuntu mopidy[9684]: DEBUG    2022-10-23 23:51:01,497 [9684:HttpServer] mopidy.http.handlers
okt 23 23:51:01 Desktop-Ubuntu mopidy[9684]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 25, "result": 0}'
okt 23 23:51:01 Desktop-Ubuntu mopidy[9684]: DEBUG    2022-10-23 23:51:01,496 [9684:HttpServer] mopidy.http.handlers
okt 23 23:51:01 Desktop-Ubuntu mopidy[9684]:   Received WebSocket message from 127.0.0.1: '{"method":"core.playback.get_time_position","params":{},"jsonrpc":"2.0","id":25}'
okt 23 23:51:01 Desktop-Ubuntu mopidy[9684]: DEBUG    2022-10-23 23:51:01,496 [9684:HttpServer] mopidy.http.handlers
okt 23 23:51:01 Desktop-Ubuntu mopidy[9684]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 24, "result": []}'
okt 23 23:51:01 Desktop-Ubuntu mopidy[9684]: DEBUG    2022-10-23 23:51:01,495 [9684:HttpServer] mopidy.http.handlers
okt 23 23:51:01 Desktop-Ubuntu mopidy[9684]:   Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_tl_tracks","params":{},"jsonrpc":"2.0","id":24}'
okt 23 23:51:01 Desktop-Ubuntu mopidy[9684]: DEBUG    2022-10-23 23:51:01,495 [9684:HttpServer] mopidy.http.handlers
okt 23 23:51:01 Desktop-Ubuntu mopidy[9684]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 23, "result": false}'
okt 23 23:51:01 Desktop-Ubuntu mopidy[9684]: DEBUG    2022-10-23 23:51:01,494 [9684:HttpServer] mopidy.http.handlers
okt 23 23:51:01 Desktop-Ubuntu mopidy[9684]:   Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_repeat","params":{},"jsonrpc":"2.0","id":23}'
okt 23 23:51:01 Desktop-Ubuntu mopidy[9684]: DEBUG    2022-10-23 23:51:01,494 [9684:HttpServer] mopidy.http.handlers
okt 23 23:51:01 Desktop-Ubuntu mopidy[9684]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 22, "result": false}'
okt 23 23:51:01 Desktop-Ubuntu mopidy[9684]: DEBUG    2022-10-23 23:51:01,493 [9684:HttpServer] mopidy.http.handlers
okt 23 23:51:01 Desktop-Ubuntu mopidy[9684]:   Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_random","params":{},"jsonrpc":"2.0","id":22}'
okt 23 23:51:01 Desktop-Ubuntu mopidy[9684]: DEBUG    2022-10-23 23:51:01,492 [9684:HttpServer] mopidy.http.handlers
okt 23 23:51:01 Desktop-Ubuntu mopidy[9684]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 21, "result": false}'
okt 23 23:51:01 Desktop-Ubuntu mopidy[9684]: DEBUG    2022-10-23 23:51:01,492 [9684:HttpServer] mopidy.http.handlers
okt 23 23:51:01 Desktop-Ubuntu mopidy[9684]:   Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_consume","params":{},"jsonrpc":"2.0","id":21}'
okt 23 23:51:01 Desktop-Ubuntu mopidy[9684]: DEBUG    2022-10-23 23:51:01,491 [9684:HttpServer] mopidy.http.handlers
okt 23 23:51:01 Desktop-Ubuntu mopidy[9684]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 20, "result": false}'
okt 23 23:51:01 Desktop-Ubuntu mopidy[9684]: DEBUG    2022-10-23 23:51:01,491 [9684:HttpServer] mopidy.http.handlers
okt 23 23:51:01 Desktop-Ubuntu mopidy[9684]:   Received WebSocket message from 127.0.0.1: '{"method":"core.mixer.get_mute","params":{},"jsonrpc":"2.0","id":20}'
okt 23 23:51:01 Desktop-Ubuntu mopidy[9684]: DEBUG    2022-10-23 23:51:01,490 [9684:HttpServer] mopidy.http.handlers
okt 23 23:51:01 Desktop-Ubuntu mopidy[9684]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 19, "result": 100}'
okt 23 23:51:01 Desktop-Ubuntu mopidy[9684]: DEBUG    2022-10-23 23:51:01,490 [9684:HttpServer] mopidy.http.handlers
okt 23 23:51:01 Desktop-Ubuntu mopidy[9684]:   Received WebSocket message from 127.0.0.1: '{"method":"core.mixer.get_volume","params":{},"jsonrpc":"2.0","id":19}'
okt 23 23:51:01 Desktop-Ubuntu mopidy[9684]: DEBUG    2022-10-23 23:51:01,489 [9684:HttpServer] mopidy.http.handlers
okt 23 23:51:01 Desktop-Ubuntu mopidy[9684]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 18, "result": "stopped"}'
okt 23 23:51:01 Desktop-Ubuntu mopidy[9684]: DEBUG    2022-10-23 23:51:01,488 [9684:HttpServer] mopidy.http.handlers
okt 23 23:51:01 Desktop-Ubuntu mopidy[9684]:   Received WebSocket message from 127.0.0.1: '{"method":"core.playback.get_state","params":{},"jsonrpc":"2.0","id":18}'
okt 23 23:51:01 Desktop-Ubuntu mopidy[9684]: DEBUG    2022-10-23 23:51:01,488 [9684:HttpServer] mopidy.http.handlers
okt 23 23:51:01 Desktop-Ubuntu mopidy[9684]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 17, "result": null}'
okt 23 23:51:01 Desktop-Ubuntu mopidy[9684]: DEBUG    2022-10-23 23:51:01,487 [9684:HttpServer] mopidy.http.handlers
okt 23 23:51:01 Desktop-Ubuntu mopidy[9684]:   Received WebSocket message from 127.0.0.1: '{"method":"core.playback.get_current_tl_track","params":{},"jsonrpc":"2.0","id":17}'
okt 23 23:51:01 Desktop-Ubuntu mopidy[9684]: DEBUG    2022-10-23 23:51:01,487 [9684:HttpServer] mopidy.http.handlers
okt 23 23:51:01 Desktop-Ubuntu mopidy[9684]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 16, "result": {"core.get_uri_schemes": {"description": "Get list of URI schemes we can handle", "params": []}, "core.get_version": {"description": "Get version of the Mopidy core API", "params": []}, "core.history.get_history": {"description": "Get the track history.\\n\\nThe timestamps are milliseconds since epoch.\\n\\n:returns: the track history\\n:rtype: list of (timestamp, :class:`mopidy.models.Ref`) tuples", "params": []}, "core.history.get_length": {"description": "Get the number of tracks in the history.\\n\\n:returns: the history length\\n:rtype: int", "params": []}, "core.library.browse": {"description": "Browse directories and tracks at the given ``uri``.\\n\\n``uri`` is a string which represents some directory belonging to a\\nbackend. To get the intial root directories for backends pass\\n:class:`None` as the URI.\\n\\nReturns a list of :class:`mopidy.models.Ref` objects for the\\ndirectories and tracks at the given ``uri``.\\n\\nThe :class:`~mopidy.models.Ref` objects representing tracks keep the\\ntrack\'s original URI. A matching pair of objects can look like this::\\n\\n    Track(uri=\'dummy:/foo.mp3\', name=\'foo\', artists=..., album=...)\\n    Ref.track(uri=\'dummy:/foo.mp3\', name=\'foo\')\\n\\nThe :class:`~mopidy.models.Ref` objects representing directories have\\nbackend specific URIs. These are opaque values, so no one but the\\nbackend that created them should try and derive any meaning from them.\\nThe only valid exception to this is checking the scheme, as it is used\\nto route browse requests to the correct backend.\\n\\nFor example, the dummy library\'s ``/bar`` directory could be returned\\nlike this::\\n\\n    Ref.directory(uri=\'dummy:directory:/bar\', name=\'bar\')\\n\\n:param string uri: URI to browse\\n:rtype: list of :class:`mopidy.models.Ref`\\n\\n.. versionadded:: 0.18", "params": [{"name": "uri"}]}, "core.library.get_distinct": {"description": "List distinct values for a given field from the library.\\n\\nThis has mainly been added to support the list commands the MPD\\nprotocol supports in a more sane fashion. Other frontends are not\\nrecommended to use this method.\\n\\n:param string field: Any one of ``uri``, ``track_name``, ``album``,\\n    ``artist``, ``albumartist``, ``composer``, ``performer``,\\n    ``track_no``, ``genre``, ``date``, ``comment``, ``disc_no``,\\n    ``musicbrainz_albumid``, ``musicbrainz_artistid``, or\\n    ``musicbrainz_trackid``.\\n:param dict query: Query to use for limiting results, see\\n    :meth:`search` for details about the query format.\\n:rtype: set of values corresponding to the requested field type.\\n\\n.. versionadded:: 1.0", "params": [{"name": "field"}, {"name": "query", "default": null}]}, "core.library.get_images": {"description": "Lookup the images for the given URIs\\n\\nBackends can use this to return image URIs for any URI they know about\\nbe it tracks, albums, playlists. The lookup result is a dictionary\\nmapping the provided URIs to lists of images.\\n\\nUnknown URIs or URIs the corresponding backend couldn\'t find anything\\nfor will simply return an empty list for that URI.\\n\\n:param uris: list of URIs to find images for\\n:type uris: list of string\\n:rtype: {uri: tuple of :class:`mopidy.models.Image`}\\n\\n.. versionadded:: 1.0", "params": [{"name": "uris"}]}, "core.library.lookup": {"description": "Lookup the given URIs.\\n\\nIf the URI expands to multiple tracks, the returned list will contain\\nthem all.\\n\\n:param uris: track URIs\\n:type uris: list of string\\n:rtype: {uri: list of :class:`mopidy.models.Track`}", "params": [{"name": "uris"}]}, "core.library.refresh": {"description": "Refresh library. Limit to URI and below if an URI is given.\\n\\n:param uri: directory or track URI\\n:type uri: string", "params": [{"name": "uri", "default": null}]}, "core.library.search": {"description": "Search the library for tracks where ``field`` contains ``values``.\\n\\n``field`` can be one of ``uri``, ``track_name``, ``album``, ``artist``,\\n``albumartist``, ``composer``, ``performer``, ``track_no``, ``genre``,\\n``date``, ``comment``, ``disc_no``, ``musicbrainz_albumid``,\\n``musicbrainz_artistid``, ``musicbrainz_trackid`` or ``any``.\\n\\nIf ``uris`` is given, the search is limited to results from within the\\nURI roots. For example passing ``uris=[\'file:\']`` will limit the search\\nto the local backend.\\n\\nExamples::\\n\\n    # Returns results matching \'a\' in any backend\\n    search({\'any\': [\'a\']})\\n\\n    # Returns results matching artist \'xyz\' in any backend\\n    search({\'artist\': [\'xyz\']})\\n\\n    # Returns results matching \'a\' and \'b\' and artist \'xyz\' in any\\n    # backend\\n    search({\'any\': [\'a\', \'b\'], \'artist\': [\'xyz\']})\\n\\n    # Returns results matching \'a\' if within the given URI roots\\n    # \\"file:///media/music\\" and \\"spotify:\\"\\n    search({\'any\': [\'a\']}, uris=[\'file:///media/music\', \'spotify:\'])\\n\\n    # Returns results matching artist \'xyz\' and \'abc\' in any backend\\n    search({\'artist\': [\'xyz\', \'abc\']})\\n\\n:param query: one or more queries to search for\\n:type query: dict\\n:param uris: zero or more URI roots to limit the search to\\n:type uris: list of string or :class:`None`\\n:param exact: if the search should use exact matching\\n:type exact: :class:`bool`\\n:rtype: list of :class:`mopidy.models.SearchResult`\\n\\n.. versionadded:: 1.0\\n    The ``exact`` keyword argument.", "params": [{"name": "query"}, {"name": "uris", "default": null}, {"name": "exact", "default": false}]}, "core.mixer.get_mute": {"description": "Get mute state.\\n\\n:class:`True` if muted, :class:`False` unmuted, :class:`None` if\\nunknown.", "params": []}, "core.mixer.get_volume": {"description": "Get the volume.\\n\\nInteger in range [0..100] or :class:`None` if unknown.\\n\\nThe volume scale is linear.", "params": []}, "core.mixer.set_mute": {"description": "Set mute state.\\n\\n:class:`True` to mute, :class:`False` to unmute.\\n\\nReturns :class:`True` if call is successful, otherwise :class:`False`.", "params": [{"name": "mute"}]}, "core.mixer.set_volume": {"description": "Set the volume.\\n\\nThe volume is defined as an integer in range [0..100].\\n\\nThe volume scale is linear.\\n\\nReturns :class:`True` if call is successful, otherwise :class:`False`.", "params": [{"name": "volume"}]}, "core.playback.get_current_tl_track": {"description": "Get the currently playing or selected track.\\n\\nReturns a :class:`mopidy.models.TlTrack` or :class:`None`.", "params": []}, "core.playback.get_current_tlid": {"description": "Get the currently playing or selected TLID.\\n\\nExtracted from :meth:`get_current_tl_track` for convenience.\\n\\nReturns a :class:`int` or :class:`None`.\\n\\n.. versionadded:: 1.1", "params": []}, "core.playback.get_current_track": {"description": "Get the currently playing or selected track.\\n\\nExtracted from :meth:`get_current_tl_track` for convenience.\\n\\nReturns a :class:`mopidy.models.Track` or :class:`None`.", "params": []}, "core.playback.get_state": {"description": "Get The playback state.", "params": []}, "core.playback.get_stream_title": {"description": "Get the current stream title or :class:`None`.", "params": []}, "core.playback.get_time_position": {"description": "Get time position in milliseconds.", "params": []}, "core.playback.next": {"description": "Change to the next track.\\n\\nThe current playback state will be kept. If it was playing, playing\\nwill continue. If it was paused, it will still be paused, etc.", "params": []}, "core.playback.pause": {"description": "Pause playback.", "params": []}, "core.playback.play": {"description": "Play the given track, or if the given tl_track and tlid is\\n:class:`None`, play the currently active track.\\n\\nNote that the track **must** already be in the tracklist.\\n\\n.. deprecated:: 3.0\\n    The ``tl_track`` argument. Use ``tlid`` instead.\\n\\n:param tl_track: track to play\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:param tlid: TLID of the track to play\\n:type tlid: :class:`int` or :class:`None`", "params": [{"name": "tl_track", "default": null}, {"name": "tlid", "default": null}]}, "core.playback.previous": {"description": "Change to the previous track.\\n\\nThe current playback state will be kept. If it was playing, playing\\nwill continue. If it was paused, it will still be paused, etc.", "params": []}, "core.playback.resume": {"description": "If paused, resume playing the current track.", "params": []}, "core.playback.seek": {"description": "Seeks to time position given in milliseconds.\\n\\n:param time_position: time position in milliseconds\\n:type time_position: int\\n:rtype: :class:`True` if successful, else :class:`False`", "params": [{"name": "time_position"}]}, "core.playback.set_state": {"description": "Set the playback state.\\n\\nMust be :attr:`PLAYING`, :attr:`PAUSED`, or :attr:`STOPPED`.\\n\\nPossible states and transitions:\\n\\n.. digraph:: state_transitions\\n\\n    \\"STOPPED\\" -> \\"PLAYING\\" [ label=\\"play\\" ]\\n    \\"STOPPED\\" -> \\"PAUSED\\" [ label=\\"pause\\" ]\\n    \\"PLAYING\\" -> \\"STOPPED\\" [ label=\\"stop\\" ]\\n    \\"PLAYING\\" -> \\"PAUSED\\" [ label=\\"pause\\" ]\\n    \\"PLAYING\\" -> \\"PLAYING\\" [ label=\\"play\\" ]\\n    \\"PAUSED\\" -> \\"PLAYING\\" [ label=\\"resume\\" ]\\n    \\"PAUSED\\" -> \\"STOPPED\\" [ label=\\"stop\\" ]", "params": [{"name": "new_state"}]}, "core.playback.stop": {"description": "Stop playing.", "params": []}, "core.playlists.as_list": {"description": "Get a list of the currently available playlists.\\n\\nReturns a list of :class:`~mopidy.models.Ref` objects referring to the\\nplaylists. In other words, no information about the playlists\' content\\nis given.\\n\\n:rtype: list of :class:`mopidy.models.Ref`\\n\\n.. versionadded:: 1.0", "params": []}, "core.playlists.create": {"description": "Create a new playlist.\\n\\nIf ``uri_scheme`` matches an URI scheme handled by a current backend,\\nthat backend is asked to create the playlist. If ``uri_scheme`` is\\n:class:`None` or doesn\'t match a current backend, the first backend is\\nasked to create the playlist.\\n\\nAll new playlists must be created by calling this method, and **not**\\nby creating new instances of :class:`mopidy.models.Playlist`.\\n\\n:param name: name of the new playlist\\n:type name: string\\n:param uri_scheme: use the backend matching the URI scheme\\n:type uri_scheme: string\\n:rtype: :class:`mopidy.models.Playlist` or :class:`None`", "params": [{"name": "name"}, {"name": "uri_scheme", "default": null}]}, "core.playlists.delete": {"description": "Delete playlist identified by the URI.\\n\\nIf the URI doesn\'t match the URI schemes handled by the current\\nbackends, nothing happens.\\n\\nReturns :class:`True` if deleted, :class:`False` otherwise.\\n\\n:param uri: URI of the playlist to delete\\n:type uri: string\\n:rtype: :class:`bool`\\n\\n.. versionchanged:: 2.2\\n    Return type defined.", "params": [{"name": "uri"}]}, "core.playlists.get_items": {"description": "Get the items in a playlist specified by ``uri``.\\n\\nReturns a list of :class:`~mopidy.models.Ref` objects referring to the\\nplaylist\'s items.\\n\\nIf a playlist with the given ``uri`` doesn\'t exist, it returns\\n:class:`None`.\\n\\n:rtype: list of :class:`mopidy.models.Ref`, or :class:`None`\\n\\n.. versionadded:: 1.0", "params": [{"name": "uri"}]}, "core.playlists.get_uri_schemes": {"description": "Get the list of URI schemes that support playlists.\\n\\n:rtype: list of string\\n\\n.. versionadded:: 2.0", "params": []}, "core.playlists.lookup": {"description": "Lookup playlist with given URI in both the set of playlists and in any\\nother playlist sources. Returns :class:`None` if not found.\\n\\n:param uri: playlist URI\\n:type uri: string\\n:rtype: :class:`mopidy.models.Playlist` or :class:`None`", "params": [{"name": "uri"}]}, "core.playlists.refresh": {"description": "Refresh the playlists in :attr:`playlists`.\\n\\nIf ``uri_scheme`` is :class:`None`, all backends are asked to refresh.\\nIf ``uri_scheme`` is an URI scheme handled by a backend, only that\\nbackend is asked to refresh. If ``uri_scheme`` doesn\'t match any\\ncurrent backend, nothing happens.\\n\\n:param uri_scheme: limit to the backend matching the URI scheme\\n:type uri_scheme: string", "params": [{"name": "uri_scheme", "default": null}]}, "core.playlists.save": {"description": "Save the playlist.\\n\\nFor a playlist to be saveable, it must have the ``uri`` attribute set.\\nYou must not set the ``uri`` atribute yourself, but use playlist\\nobjects returned by :meth:`create` or retrieved from :attr:`playlists`,\\nwhich will always give you saveable playlists.\\n\\nThe method returns the saved playlist. The return playlist may differ\\nfrom the saved playlist. E.g. if the playlist name was changed, the\\nreturned playlist may have a different URI. The caller of this method\\nmust throw away the playlist sent to this method, and use the\\nreturned playlist instead.\\n\\nIf the playlist\'s URI isn\'t set or doesn\'t match the URI scheme of a\\ncurrent backend, nothing is done and :class:`None` is returned.\\n\\n:param playlist: the playlist\\n:type playlist: :class:`mopidy.models.Playlist`\\n:rtype: :class:`mopidy.models.Playlist` or :class:`None`", "params": [{"name": "playlist"}]}, "core.tracklist.add": {"description": "Add tracks to the tracklist.\\n\\nIf ``uris`` is given instead of ``tracks``, the URIs are\\nlooked up in the library and the resulting tracks are added to the\\ntracklist.\\n\\nIf ``at_position`` is given, the tracks are inserted at the given\\nposition in the tracklist. If ``at_position`` is not given, the tracks\\nare appended to the end of the tracklist.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.\\n\\n:param tracks: tracks to add\\n:type tracks: list of :class:`mopidy.models.Track` or :class:`None`\\n:param at_position: position in tracklist to add tracks\\n:type at_position: int or :class:`None`\\n:param uris: list of URIs for tracks to add\\n:type uris: list of string or :class:`None`\\n:rtype: list of :class:`mopidy.models.TlTrack`\\n\\n.. versionadded:: 1.0\\n    The ``uris`` argument.\\n\\n.. deprecated:: 1.0\\n    The ``tracks`` argument. Use ``uris``.", "params": [{"name": "tracks", "default": null}, {"name": "at_position", "default": null}, {"name": "uris", "default": null}]}, "core.tracklist.clear": {"description": "Clear the tracklist.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.", "params": []}, "core.tracklist.eot_track": {"description": "The track that will be played after the given track.\\n\\nNot necessarily the same track as :meth:`next_track`.\\n\\n.. deprecated:: 3.0\\n    Use :meth:`get_eot_tlid` instead.\\n\\n:param tl_track: the reference track\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:rtype: :class:`mopidy.models.TlTrack` or :class:`None`", "params": [{"name": "tl_track"}]}, "core.tracklist.filter": {"description": "Filter the tracklist by the given criteria.\\n\\nEach rule in the criteria consists of a model field and a list of\\nvalues to compare it against. If the model field matches any of the\\nvalues, it may be returned.\\n\\nOnly tracks that match all the given criteria are returned.\\n\\nExamples::\\n\\n    # Returns tracks with TLIDs 1, 2, 3, or 4 (tracklist ID)\\n    filter({\'tlid\': [1, 2, 3, 4]})\\n\\n    # Returns track with URIs \'xyz\' or \'abc\'\\n    filter({\'uri\': [\'xyz\', \'abc\']})\\n\\n    # Returns track with a matching TLIDs (1, 3 or 6) and a\\n    # matching URI (\'xyz\' or \'abc\')\\n    filter({\'tlid\': [1, 3, 6], \'uri\': [\'xyz\', \'abc\']})\\n\\n:param criteria: one or more rules to match by\\n:type criteria: dict, of (string, list) pairs\\n:rtype: list of :class:`mopidy.models.TlTrack`", "params": [{"name": "criteria"}]}, "core.tracklist.get_consume": {"description": "Get consume mode.\\n\\n:class:`True`\\n    Tracks are removed from the tracklist when they have been played.\\n:class:`False`\\n    Tracks are not removed from the tracklist.", "params": []}, "core.tracklist.get_eot_tlid": {"description": "The TLID of the track that will be played after the current track.\\n\\nNot necessarily the same TLID as returned by :meth:`get_next_tlid`.\\n\\n:rtype: :class:`int` or :class:`None`\\n\\n.. versionadded:: 1.1", "params": []}, "core.tracklist.get_length": {"description": "Get length of the tracklist.", "params": []}, "core.tracklist.get_next_tlid": {"description": "The tlid of the track that will be played if calling\\n:meth:`mopidy.core.PlaybackController.next()`.\\n\\nFor normal playback this is the next track in the tracklist. If repeat\\nis enabled the next track can loop around the tracklist. When random is\\nenabled this should be a random track, all tracks should be played once\\nbefore the tracklist repeats.\\n\\n:rtype: :class:`int` or :class:`None`\\n\\n.. versionadded:: 1.1", "params": []}, "core.tracklist.get_previous_tlid": {"description": "Returns the TLID of the track that will be played if calling\\n:meth:`mopidy.core.PlaybackController.previous()`.\\n\\nFor normal playback this is the previous track in the tracklist. If\\nrandom and/or consume is enabled it should return the current track\\ninstead.\\n\\n:rtype: :class:`int` or :class:`None`\\n\\n.. versionadded:: 1.1", "params": []}, "core.tracklist.get_random": {"description": "Get random mode.\\n\\n:class:`True`\\n    Tracks are selected at random from the tracklist.\\n:class:`False`\\n    Tracks are played in the order of the tracklist.", "params": []}, "core.tracklist.get_repeat": {"description": "Get repeat mode.\\n\\n:class:`True`\\n    The tracklist is played repeatedly.\\n:class:`False`\\n    The tracklist is played once.", "params": []}, "core.tracklist.get_single": {"description": "Get single mode.\\n\\n:class:`True`\\n    Playback is stopped after current song, unless in ``repeat`` mode.\\n:class:`False`\\n    Playback continues after current song.", "params": []}, "core.tracklist.get_tl_tracks": {"description": "Get tracklist as list of :class:`mopidy.models.TlTrack`.", "params": []}, "core.tracklist.get_tracks": {"description": "Get tracklist as list of :class:`mopidy.models.Track`.", "params": []}, "core.tracklist.get_version": {"description": "Get the tracklist version.\\n\\nInteger which is increased every time the tracklist is changed. Is not\\nreset before Mopidy is restarted.", "params": []}, "core.tracklist.index": {"description": "The position of the given track in the tracklist.\\n\\nIf neither *tl_track* or *tlid* is given we return the index of\\nthe currently playing track.\\n\\n:param tl_track: the track to find the index of\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:param tlid: TLID of the track to find the index of\\n:type tlid: :class:`int` or :class:`None`\\n:rtype: :class:`int` or :class:`None`\\n\\n.. versionadded:: 1.1\\n    The *tlid* parameter", "params": [{"name": "tl_track", "default": null}, {"name": "tlid", "default": null}]}, "core.tracklist.move": {"description": "Move the tracks in the slice ``[start:end]`` to ``to_position``.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.\\n\\n:param start: position of first track to move\\n:type start: int\\n:param end: position after last track to move\\n:type end: int\\n:param to_position: new position for the tracks\\n:type to_position: int", "params": [{"name": "start"}, {"name": "end"}, {"name": "to_position"}]}, "core.tracklist.next_track": {"description": "The track that will be played if calling\\n:meth:`mopidy.core.PlaybackController.next()`.\\n\\nFor normal playback this is the next track in the tracklist. If repeat\\nis enabled the next track can loop around the tracklist. When random is\\nenabled this should be a random track, all tracks should be played once\\nbefore the tracklist repeats.\\n\\n.. deprecated:: 3.0\\n    Use :meth:`get_next_tlid` instead.\\n\\n:param tl_track: the reference track\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:rtype: :class:`mopidy.models.TlTrack` or :class:`None`", "params": [{"name": "tl_track"}]}, "core.tracklist.previous_track": {"description": "Returns the track that will be played if calling\\n:meth:`mopidy.core.PlaybackController.previous()`.\\n\\nFor normal playback this is the previous track in the tracklist. If\\nrandom and/or consume is enabled it should return the current track\\ninstead.\\n\\n.. deprecated:: 3.0\\n    Use :meth:`get_previous_tlid` instead.\\n\\n:param tl_track: the reference track\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:rtype: :class:`mopidy.models.TlTrack` or :class:`None`", "params": [{"name": "tl_track"}]}, "core.tracklist.remove": {"description": "Remove the matching tracks from the tracklist.\\n\\nUses :meth:`filter()` to lookup the tracks to remove.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.\\n\\n:param criteria: one or more rules to match by\\n:type criteria: dict, of (string, list) pairs\\n:rtype: list of :class:`mopidy.models.TlTrack` that were removed", "params": [{"name": "criteria"}]}, "core.tracklist.set_consume": {"description": "Set consume mode.\\n\\n:class:`True`\\n    Tracks are removed from the tracklist when they have been played.\\n:class:`False`\\n    Tracks are not removed from the tracklist.", "params": [{"name": "value"}]}, "core.tracklist.set_random": {"description": "Set random mode.\\n\\n:class:`True`\\n    Tracks are selected at random from the tracklist.\\n:class:`False`\\n    Tracks are played in the order of the tracklist.", "params": [{"name": "value"}]}, "core.tracklist.set_repeat": {"description": "Set repeat mode.\\n\\nTo repeat a single track, set both ``repeat`` and ``single``.\\n\\n:class:`True`\\n    The tracklist is played repeatedly.\\n:class:`False`\\n    The tracklist is played once.", "params": [{"name": "value"}]}, "core.tracklist.set_single": {"description": "Set single mode.\\n\\n:class:`True`\\n    Playback is stopped after current song, unless in ``repeat`` mode.\\n:class:`False`\\n    Playback continues after current song.", "params": [{"name": "value"}]}, "core.tracklist.shuffle": {"description": "Shuffles the entire tracklist. If ``start`` and ``end`` is given only\\nshuffles the slice ``[start:end]``.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.\\n\\n:param start: position of first track to shuffle\\n:type start: int or :class:`None`\\n:param end: position after last track to shuffle\\n:type end: int or :class:`None`", "params": [{"name": "start", "default": null}, {"name": "end", "default": null}]}, "core.tracklist.slice": {"description": "Returns a slice of the tracklist, limited by the given start and end\\npositions.\\n\\n:param start: position of first track to include in slice\\n:type start: int\\n:param end: position after last track to include in slice\\n:type end: int\\n:rtype: :class:`mopidy.models.TlTrack`", "params": [{"name": "start"}, {"name": "end"}]}}}'
okt 23 23:51:01 Desktop-Ubuntu mopidy[9684]: DEBUG    2022-10-23 23:51:01,477 [9684:HttpServer] mopidy.http.handlers
okt 23 23:51:01 Desktop-Ubuntu mopidy[9684]:   Received WebSocket message from 127.0.0.1: '{"method":"core.describe","jsonrpc":"2.0","id":16}'
okt 23 23:51:01 Desktop-Ubuntu mopidy[9684]: DEBUG    2022-10-23 23:51:01,473 [9684:HttpServer] mopidy.http.handlers
okt 23 23:51:01 Desktop-Ubuntu mopidy[9684]:   New WebSocket connection from 127.0.0.1
okt 23 23:51:01 Desktop-Ubuntu mopidy[9684]: DEBUG    2022-10-23 23:51:01,471 [9684:HttpServer] mopidy.http.handlers
okt 23 23:51:01 Desktop-Ubuntu mopidy[9684]:   101 GET /mopidy/ws/ (127.0.0.1) 19.12ms
okt 23 23:51:01 Desktop-Ubuntu mopidy[9684]: INFO     2022-10-23 23:51:01,471 [9684:HttpServer] tornado.access
okt 23 23:51:01 Desktop-Ubuntu mopidy[9684]:   Zeroconf service 'Mopidy HTTP server on Desktop-Ubuntu' (_mopidy-http._tcp at []:6680): Published
okt 23 23:51:01 Desktop-Ubuntu mopidy[9684]: DEBUG    2022-10-23 23:51:01,189 [9684:HttpFrontend-11 (_actor_loop)] mopidy.zeroconf
okt 23 23:51:01 Desktop-Ubuntu mopidy[9684]:   Zeroconf service 'Mopidy HTTP server on Desktop-Ubuntu' (_http._tcp at []:6680): Published
okt 23 23:51:01 Desktop-Ubuntu mopidy[9684]: DEBUG    2022-10-23 23:51:01,185 [9684:HttpFrontend-11 (_actor_loop)] mopidy.zeroconf
okt 23 23:51:01 Desktop-Ubuntu mopidy[9684]:     '/': <class 'tornado.web.RedirectHandler'>
okt 23 23:51:01 Desktop-Ubuntu mopidy[9684]:     '/mopidy/': <class 'mopidy.http.handlers.ClientListHandler'>
okt 23 23:51:01 Desktop-Ubuntu mopidy[9684]:     '/mopidy/(.+)': <class 'mopidy.http.handlers.StaticFileHandler'>
okt 23 23:51:01 Desktop-Ubuntu mopidy[9684]:     '/mopidy/rpc': <class 'mopidy.http.handlers.JsonRpcHandler'>
okt 23 23:51:01 Desktop-Ubuntu mopidy[9684]:     '/mopidy/ws/?': <class 'mopidy.http.handlers.WebSocketHandler'>
okt 23 23:51:01 Desktop-Ubuntu mopidy[9684]:     '/mopidy': <class 'mopidy.http.handlers.AddSlashHandler'>
okt 23 23:51:01 Desktop-Ubuntu mopidy[9684]:     '/iris/(.*)': <class 'mopidy_iris.handlers.ReactRouterHandler'>
okt 23 23:51:01 Desktop-Ubuntu mopidy[9684]:     '/iris/((.*)(?:css|js|json|map)$)': <class 'tornado.web.StaticFileHandler'>
okt 23 23:51:01 Desktop-Ubuntu mopidy[9684]:     '/iris/assets/(.*)': <class 'tornado.web.StaticFileHandler'>
okt 23 23:51:01 Desktop-Ubuntu mopidy[9684]:     '/iris/ws/?': <class 'mopidy_iris.handlers.WebsocketHandler'>
okt 23 23:51:01 Desktop-Ubuntu mopidy[9684]:     '/iris/http/([^/]*)': <class 'mopidy_iris.handlers.HttpHandler'>
okt 23 23:51:01 Desktop-Ubuntu mopidy[9684]:     '/iris': <class 'mopidy.http.handlers.AddSlashHandler'>
okt 23 23:51:01 Desktop-Ubuntu mopidy[9684]:     '/youtube/(.*\\.(?:webm|m4a|mp3|ogg))': <class 'mopidy_youtube.web.AudioHandler'>
okt 23 23:51:01 Desktop-Ubuntu mopidy[9684]:     '/youtube/(.*\\.jpg)': <class 'mopidy_youtube.web.ImageHandler'>
okt 23 23:51:01 Desktop-Ubuntu mopidy[9684]:     '/youtube/(index.html|image.html)?': <class 'mopidy_youtube.web.IndexHandler'>
okt 23 23:51:01 Desktop-Ubuntu mopidy[9684]:     '/youtube': <class 'mopidy.http.handlers.AddSlashHandler'>
okt 23 23:51:01 Desktop-Ubuntu mopidy[9684]:   HTTP routes from extensions:
okt 23 23:51:01 Desktop-Ubuntu mopidy[9684]: DEBUG    2022-10-23 23:51:01,181 [9684:HttpServer] mopidy.http.actor
okt 23 23:51:01 Desktop-Ubuntu mopidy[9684]:   Default webclient is mopidy
okt 23 23:51:01 Desktop-Ubuntu mopidy[9684]: DEBUG    2022-10-23 23:51:01,181 [9684:HttpServer] mopidy.http.actor
okt 23 23:51:01 Desktop-Ubuntu mopidy[9684]:   Loaded HTTP extension: mopidy
okt 23 23:51:01 Desktop-Ubuntu mopidy[9684]: DEBUG    2022-10-23 23:51:01,181 [9684:HttpServer] mopidy.http.actor
okt 23 23:51:01 Desktop-Ubuntu mopidy[9684]:   Loaded HTTP extension: iris
okt 23 23:51:01 Desktop-Ubuntu mopidy[9684]: DEBUG    2022-10-23 23:51:01,181 [9684:HttpServer] mopidy.http.actor
okt 23 23:51:01 Desktop-Ubuntu mopidy[9684]:   Loaded HTTP extension: youtube
okt 23 23:51:01 Desktop-Ubuntu mopidy[9684]: DEBUG    2022-10-23 23:51:01,180 [9684:HttpServer] mopidy.http.actor
okt 23 23:51:01 Desktop-Ubuntu mopidy[9684]:   Starting GLib mainloop
okt 23 23:51:01 Desktop-Ubuntu mopidy[9684]: INFO     2022-10-23 23:51:01,175 [9684:MainThread] mopidy.commands
okt 23 23:51:01 Desktop-Ubuntu mopidy[9684]:   Using selector: EpollSelector
okt 23 23:51:01 Desktop-Ubuntu mopidy[9684]: DEBUG    2022-10-23 23:51:01,174 [9684:HttpServer] asyncio
okt 23 23:51:01 Desktop-Ubuntu mopidy[9684]:   HttpFrontend took 1ms
okt 23 23:51:01 Desktop-Ubuntu mopidy[9684]: TRACE    2022-10-23 23:51:01,174 [9684:MainThread] mopidy.internal.timer
okt 23 23:51:01 Desktop-Ubuntu mopidy[9684]:   HTTP server running at [::ffff:127.0.0.1]:6680
okt 23 23:51:01 Desktop-Ubuntu mopidy[9684]: INFO     2022-10-23 23:51:01,174 [9684:HttpFrontend-11 (_actor_loop)] mopidy.http.actor
okt 23 23:51:01 Desktop-Ubuntu mopidy[9684]:   Starting HttpFrontend (urn:uuid:85ee44e7-4a90-4569-94d7-9d25b2874dfb)
okt 23 23:51:01 Desktop-Ubuntu mopidy[9684]: DEBUG    2022-10-23 23:51:01,173 [9684:MainThread] pykka
okt 23 23:51:01 Desktop-Ubuntu mopidy[9684]:   Registered HttpFrontend (urn:uuid:85ee44e7-4a90-4569-94d7-9d25b2874dfb)
okt 23 23:51:01 Desktop-Ubuntu mopidy[9684]: DEBUG    2022-10-23 23:51:01,173 [9684:MainThread] pykka
okt 23 23:51:01 Desktop-Ubuntu mopidy[9684]:   Starting HTTP server
okt 23 23:51:01 Desktop-Ubuntu mopidy[9684]: DEBUG    2022-10-23 23:51:01,173 [9684:MainThread] mopidy.http.actor
okt 23 23:51:01 Desktop-Ubuntu mopidy[9684]:   IrisFrontend took 0ms
okt 23 23:51:01 Desktop-Ubuntu mopidy[9684]: TRACE    2022-10-23 23:51:01,172 [9684:MainThread] mopidy.internal.timer
okt 23 23:51:01 Desktop-Ubuntu mopidy[9684]:   Starting Iris 3.64.1
okt 23 23:51:01 Desktop-Ubuntu mopidy[9684]: INFO     2022-10-23 23:51:01,172 [9684:IrisFrontend-9 (_actor_loop)] mopidy_iris.core
okt 23 23:51:01 Desktop-Ubuntu mopidy[9684]:   Starting IrisFrontend (urn:uuid:6a185e66-3e82-4ed3-9870-cb955a1805bc)
okt 23 23:51:01 Desktop-Ubuntu mopidy[9684]: DEBUG    2022-10-23 23:51:01,172 [9684:MainThread] pykka
okt 23 23:51:01 Desktop-Ubuntu mopidy[9684]:   Registered IrisFrontend (urn:uuid:6a185e66-3e82-4ed3-9870-cb955a1805bc)
okt 23 23:51:01 Desktop-Ubuntu mopidy[9684]: DEBUG    2022-10-23 23:51:01,172 [9684:MainThread] pykka
okt 23 23:51:01 Desktop-Ubuntu mopidy[9684]:   YouTubeCoreListener took 0ms
okt 23 23:51:01 Desktop-Ubuntu mopidy[9684]: TRACE    2022-10-23 23:51:01,172 [9684:MainThread] mopidy.internal.timer
okt 23 23:51:01 Desktop-Ubuntu mopidy[9684]:   Starting YouTubeCoreListener (urn:uuid:d7ab6b58-3a1d-4656-b281-6e7c8f54ca5b)
okt 23 23:51:01 Desktop-Ubuntu mopidy[9684]: DEBUG    2022-10-23 23:51:01,172 [9684:MainThread] pykka
okt 23 23:51:01 Desktop-Ubuntu mopidy[9684]:   Registered YouTubeCoreListener (urn:uuid:d7ab6b58-3a1d-4656-b281-6e7c8f54ca5b)
okt 23 23:51:01 Desktop-Ubuntu mopidy[9684]: DEBUG    2022-10-23 23:51:01,172 [9684:MainThread] pykka
okt 23 23:51:01 Desktop-Ubuntu mopidy[9684]:   YouTubeAutoplayer took 0ms
okt 23 23:51:01 Desktop-Ubuntu mopidy[9684]: TRACE    2022-10-23 23:51:01,171 [9684:MainThread] mopidy.internal.timer
okt 23 23:51:01 Desktop-Ubuntu mopidy[9684]:   Starting YouTubeAutoplayer (urn:uuid:229fefb7-a97c-4feb-9e0e-428f96c24786)
okt 23 23:51:01 Desktop-Ubuntu mopidy[9684]: DEBUG    2022-10-23 23:51:01,171 [9684:MainThread] pykka
okt 23 23:51:01 Desktop-Ubuntu mopidy[9684]:   Registered YouTubeAutoplayer (urn:uuid:229fefb7-a97c-4feb-9e0e-428f96c24786)
okt 23 23:51:01 Desktop-Ubuntu mopidy[9684]: DEBUG    2022-10-23 23:51:01,171 [9684:MainThread] pykka
okt 23 23:51:01 Desktop-Ubuntu mopidy[9684]:   Starting Mopidy frontends: YouTubeAutoplayer, YouTubeCoreListener, IrisFrontend, HttpFrontend
okt 23 23:51:01 Desktop-Ubuntu mopidy[9684]: INFO     2022-10-23 23:51:01,171 [9684:MainThread] mopidy.commands
okt 23 23:51:01 Desktop-Ubuntu mopidy[9684]:   Starting Core (urn:uuid:b8e0361f-b864-4673-92f8-93b25c5a024e)
okt 23 23:51:01 Desktop-Ubuntu mopidy[9684]: DEBUG    2022-10-23 23:51:01,167 [9684:MainThread] pykka
okt 23 23:51:01 Desktop-Ubuntu mopidy[9684]:   Registered Core (urn:uuid:b8e0361f-b864-4673-92f8-93b25c5a024e)
okt 23 23:51:01 Desktop-Ubuntu mopidy[9684]: DEBUG    2022-10-23 23:51:01,167 [9684:MainThread] pykka
okt 23 23:51:01 Desktop-Ubuntu mopidy[9684]:   Starting Mopidy core
okt 23 23:51:01 Desktop-Ubuntu mopidy[9684]: INFO     2022-10-23 23:51:01,164 [9684:MainThread] mopidy.commands
okt 23 23:51:01 Desktop-Ubuntu mopidy[9684]:   StreamBackend took 6ms
okt 23 23:51:01 Desktop-Ubuntu mopidy[9684]: TRACE    2022-10-23 23:51:01,163 [9684:MainThread] mopidy.internal.timer
okt 23 23:51:01 Desktop-Ubuntu mopidy[9684]:   Starting StreamBackend (urn:uuid:a1ccc842-f58b-4aef-b7b9-09c1e991d9c3)
okt 23 23:51:01 Desktop-Ubuntu mopidy[9684]: DEBUG    2022-10-23 23:51:01,161 [9684:MainThread] pykka
okt 23 23:51:01 Desktop-Ubuntu mopidy[9684]:   Registered StreamBackend (urn:uuid:a1ccc842-f58b-4aef-b7b9-09c1e991d9c3)
okt 23 23:51:01 Desktop-Ubuntu mopidy[9684]: DEBUG    2022-10-23 23:51:01,161 [9684:MainThread] pykka
okt 23 23:51:01 Desktop-Ubuntu mopidy[9684]:   Audio output set to "pulsesink server=127.0.0.1"
okt 23 23:51:01 Desktop-Ubuntu mopidy[9684]: INFO     2022-10-23 23:51:01,157 [9684:Audio-2 (_actor_loop)] mopidy.audio.actor
okt 23 23:51:01 Desktop-Ubuntu mopidy[9684]:   M3UBackend took 1ms
okt 23 23:51:01 Desktop-Ubuntu mopidy[9684]: TRACE    2022-10-23 23:51:01,157 [9684:MainThread] mopidy.internal.timer
okt 23 23:51:01 Desktop-Ubuntu mopidy[9684]:   Starting M3UBackend (urn:uuid:5e4fbd82-5f56-4107-822d-bdadd06c2251)
okt 23 23:51:01 Desktop-Ubuntu mopidy[9684]: DEBUG    2022-10-23 23:51:01,156 [9684:MainThread] pykka
okt 23 23:51:01 Desktop-Ubuntu mopidy[9684]:   Registered M3UBackend (urn:uuid:5e4fbd82-5f56-4107-822d-bdadd06c2251)
okt 23 23:51:01 Desktop-Ubuntu mopidy[9684]: DEBUG    2022-10-23 23:51:01,156 [9684:MainThread] pykka
okt 23 23:51:01 Desktop-Ubuntu mopidy[9684]:   FileBackend took 3ms
okt 23 23:51:01 Desktop-Ubuntu mopidy[9684]: TRACE    2022-10-23 23:51:01,155 [9684:MainThread] mopidy.internal.timer
okt 23 23:51:01 Desktop-Ubuntu mopidy[9684]:   Starting FileBackend (urn:uuid:c8c49c08-aa5e-473b-a358-b20e65658530)
okt 23 23:51:01 Desktop-Ubuntu mopidy[9684]: DEBUG    2022-10-23 23:51:01,152 [9684:MainThread] pykka
okt 23 23:51:01 Desktop-Ubuntu mopidy[9684]:   Registered FileBackend (urn:uuid:c8c49c08-aa5e-473b-a358-b20e65658530)
okt 23 23:51:01 Desktop-Ubuntu mopidy[9684]: DEBUG    2022-10-23 23:51:01,152 [9684:MainThread] pykka
okt 23 23:51:01 Desktop-Ubuntu mopidy[9684]:   Failed expanding path ($XDG_MUSIC_DIR) from file/media_dirs config value.
okt 23 23:51:01 Desktop-Ubuntu mopidy[9684]: DEBUG    2022-10-23 23:51:01,152 [9684:MainThread] mopidy.file.library
okt 23 23:51:01 Desktop-Ubuntu mopidy[9684]: ModuleNotFoundError: No module named 'ytmusicapi'
okt 23 23:51:01 Desktop-Ubuntu mopidy[9684]:     from ytmusicapi import YTMusic
okt 23 23:51:01 Desktop-Ubuntu mopidy[9684]:   File "/usr/local/lib/python3.10/dist-packages/mopidy_youtube/apis/youtube_music.py", line 7, in <module>
okt 23 23:51:01 Desktop-Ubuntu mopidy[9684]:     from mopidy_youtube.apis import youtube_music
okt 23 23:51:01 Desktop-Ubuntu mopidy[9684]:   File "/usr/local/lib/python3.10/dist-packages/mopidy_youtube/backend.py", line 84, in __init__
okt 23 23:51:01 Desktop-Ubuntu mopidy[9684]:     obj = cls(*args, **kwargs)
okt 23 23:51:01 Desktop-Ubuntu mopidy[9684]:   File "/usr/lib/python3/dist-packages/pykka/_actor.py", line 91, in start
okt 23 23:51:01 Desktop-Ubuntu mopidy[9684]:     backend = backend_class.start(
okt 23 23:51:01 Desktop-Ubuntu mopidy[9684]:   File "/usr/lib/python3/dist-packages/mopidy/commands.py", line 412, in start_backends
okt 23 23:51:01 Desktop-Ubuntu mopidy[9684]:     yield
okt 23 23:51:01 Desktop-Ubuntu mopidy[9684]:   File "/usr/lib/python3/dist-packages/mopidy/commands.py", line 248, in _actor_error_handling
okt 23 23:51:01 Desktop-Ubuntu mopidy[9684]: Traceback (most recent call last):
okt 23 23:51:01 Desktop-Ubuntu mopidy[9684]:   Got un-handled exception from YouTubeBackend
okt 23 23:51:01 Desktop-Ubuntu mopidy[9684]: ERROR    2022-10-23 23:51:01,150 [9684:MainThread] mopidy.commands
okt 23 23:51:01 Desktop-Ubuntu mopidy[9684]:   Starting Mopidy backends: YouTubeBackend, FileBackend, M3UBackend, StreamBackend
okt 23 23:51:01 Desktop-Ubuntu mopidy[9684]: INFO     2022-10-23 23:51:01,149 [9684:MainThread] mopidy.commands
okt 23 23:51:01 Desktop-Ubuntu mopidy[9684]:   Starting Audio (urn:uuid:8ad4e198-8e96-41d1-965b-c65492d8c787)
okt 23 23:51:01 Desktop-Ubuntu mopidy[9684]: DEBUG    2022-10-23 23:51:01,148 [9684:MainThread] pykka
okt 23 23:51:01 Desktop-Ubuntu mopidy[9684]:   Registered Audio (urn:uuid:8ad4e198-8e96-41d1-965b-c65492d8c787)
okt 23 23:51:01 Desktop-Ubuntu mopidy[9684]: DEBUG    2022-10-23 23:51:01,148 [9684:MainThread] pykka
okt 23 23:51:01 Desktop-Ubuntu mopidy[9684]:   Starting Mopidy audio
okt 23 23:51:01 Desktop-Ubuntu mopidy[9684]: INFO     2022-10-23 23:51:01,148 [9684:MainThread] mopidy.commands
okt 23 23:51:01 Desktop-Ubuntu mopidy[9684]:   Mixer volume left unchanged
okt 23 23:51:01 Desktop-Ubuntu mopidy[9684]: DEBUG    2022-10-23 23:51:01,147 [9684:MainThread] mopidy.commands
okt 23 23:51:01 Desktop-Ubuntu mopidy[9684]:   Starting SoftwareMixer (urn:uuid:8b032216-13ba-419a-a0c8-1c645ed69df8)
okt 23 23:51:01 Desktop-Ubuntu mopidy[9684]: DEBUG    2022-10-23 23:51:01,146 [9684:MainThread] pykka
okt 23 23:51:01 Desktop-Ubuntu mopidy[9684]:   Registered SoftwareMixer (urn:uuid:8b032216-13ba-419a-a0c8-1c645ed69df8)
okt 23 23:51:01 Desktop-Ubuntu mopidy[9684]: DEBUG    2022-10-23 23:51:01,146 [9684:MainThread] pykka
okt 23 23:51:01 Desktop-Ubuntu mopidy[9684]:   Starting Mopidy mixer: SoftwareMixer
okt 23 23:51:01 Desktop-Ubuntu mopidy[9684]: INFO     2022-10-23 23:51:01,146 [9684:MainThread] mopidy.commands
okt 23 23:51:01 Desktop-Ubuntu mopidy[9684]:   Available Mopidy mixers: SoftwareMixer
okt 23 23:51:01 Desktop-Ubuntu mopidy[9684]: DEBUG    2022-10-23 23:51:01,146 [9684:MainThread] mopidy.commands
okt 23 23:51:01 Desktop-Ubuntu mopidy[9684]:   Please fix the extension configuration errors or disable the extensions to silence these messages.
okt 23 23:51:01 Desktop-Ubuntu mopidy[9684]: WARNING  2022-10-23 23:51:01,068 [9684:MainThread] mopidy.__main__
okt 23 23:51:01 Desktop-Ubuntu mopidy[9684]:     local/media_dir must be set.
okt 23 23:51:01 Desktop-Ubuntu mopidy[9684]: WARNING  2022-10-23 23:51:01,068 [9684:MainThread] mopidy.__main__
okt 23 23:51:01 Desktop-Ubuntu mopidy[9684]:   Found local configuration errors. The extension has been automatically disabled:
okt 23 23:51:01 Desktop-Ubuntu mopidy[9684]: WARNING  2022-10-23 23:51:01,068 [9684:MainThread] mopidy.__main__
okt 23 23:51:01 Desktop-Ubuntu mopidy[9684]:   Disabled extensions: soundcloud, local
okt 23 23:51:01 Desktop-Ubuntu mopidy[9684]: INFO     2022-10-23 23:51:01,067 [9684:MainThread] mopidy.__main__
okt 23 23:51:01 Desktop-Ubuntu mopidy[9684]:   Enabled extensions: youtube, stream, iris, softwaremixer, file, m3u, http
okt 23 23:51:01 Desktop-Ubuntu mopidy[9684]: INFO     2022-10-23 23:51:01,067 [9684:MainThread] mopidy.__main__
okt 23 23:51:01 Desktop-Ubuntu mopidy[9684]:   Validating extension: stream
okt 23 23:51:01 Desktop-Ubuntu mopidy[9684]: DEBUG    2022-10-23 23:51:01,067 [9684:MainThread] mopidy.ext
okt 23 23:51:01 Desktop-Ubuntu mopidy[9684]:   Validating extension: softwaremixer
okt 23 23:51:01 Desktop-Ubuntu mopidy[9684]: DEBUG    2022-10-23 23:51:01,067 [9684:MainThread] mopidy.ext
okt 23 23:51:01 Desktop-Ubuntu mopidy[9684]:   Validating extension: m3u
okt 23 23:51:01 Desktop-Ubuntu mopidy[9684]: DEBUG    2022-10-23 23:51:01,067 [9684:MainThread] mopidy.ext
okt 23 23:51:01 Desktop-Ubuntu mopidy[9684]:   Validating extension: http
okt 23 23:51:01 Desktop-Ubuntu mopidy[9684]: DEBUG    2022-10-23 23:51:01,013 [9684:MainThread] mopidy.ext
okt 23 23:51:01 Desktop-Ubuntu mopidy[9684]:   Validating extension: file
okt 23 23:51:01 Desktop-Ubuntu mopidy[9684]: DEBUG    2022-10-23 23:51:01,013 [9684:MainThread] mopidy.ext
okt 23 23:51:00 Desktop-Ubuntu mopidy[9684]:   Validating extension: iris
okt 23 23:51:00 Desktop-Ubuntu mopidy[9684]: DEBUG    2022-10-23 23:51:00,997 [9684:MainThread] mopidy.ext
okt 23 23:51:00 Desktop-Ubuntu mopidy[9684]:   Validating extension: soundcloud
okt 23 23:51:00 Desktop-Ubuntu mopidy[9684]: DEBUG    2022-10-23 23:51:00,971 [9684:MainThread] mopidy.ext
okt 23 23:51:00 Desktop-Ubuntu mopidy[9684]:   Validating extension: local
okt 23 23:51:00 Desktop-Ubuntu mopidy[9684]: DEBUG    2022-10-23 23:51:00,949 [9684:MainThread] mopidy.ext
okt 23 23:51:00 Desktop-Ubuntu mopidy[9684]:   Validating extension: youtube
okt 23 23:51:00 Desktop-Ubuntu mopidy[9684]: DEBUG    2022-10-23 23:51:00,897 [9684:MainThread] mopidy.ext
okt 23 23:51:00 Desktop-Ubuntu mopidy[9684]:   Ignoring config section 'jukebox' because no matching extension was found
okt 23 23:51:00 Desktop-Ubuntu mopidy[9684]: WARNING  2022-10-23 23:51:00,896 [9684:MainThread] mopidy.config
okt 23 23:51:00 Desktop-Ubuntu mopidy[9684]:   Ignoring config section 'ytmusic' because no matching extension was found
okt 23 23:51:00 Desktop-Ubuntu mopidy[9684]: WARNING  2022-10-23 23:51:00,896 [9684:MainThread] mopidy.config
okt 23 23:51:00 Desktop-Ubuntu mopidy[9684]:   Loading config from command line options
okt 23 23:51:00 Desktop-Ubuntu mopidy[9684]: INFO     2022-10-23 23:51:00,892 [9684:MainThread] mopidy.config
okt 23 23:51:00 Desktop-Ubuntu mopidy[9684]:   Loading config from file:///etc/mopidy/mopidy.conf
okt 23 23:51:00 Desktop-Ubuntu mopidy[9684]: INFO     2022-10-23 23:51:00,892 [9684:MainThread] mopidy.config
okt 23 23:51:00 Desktop-Ubuntu mopidy[9684]:   Loading config from file:///usr/share/mopidy/conf.d/mopidy.conf
okt 23 23:51:00 Desktop-Ubuntu mopidy[9684]: INFO     2022-10-23 23:51:00,891 [9684:MainThread] mopidy.config
okt 23 23:51:00 Desktop-Ubuntu mopidy[9684]:   Loading config from builtin defaults
okt 23 23:51:00 Desktop-Ubuntu mopidy[9684]: INFO     2022-10-23 23:51:00,890 [9684:MainThread] mopidy.config
okt 23 23:51:00 Desktop-Ubuntu mopidy[9684]:   Fetching passwords from your keyring failed. Any passwords stored in the keyring will not be available. (org.freedesktop.DBus.Error.NotSupported: Unable to autolaunch a dbus-daemon without a $DISPLAY for X11)
okt 23 23:51:00 Desktop-Ubuntu mopidy[9684]: DEBUG    2022-10-23 23:51:00,890 [9684:MainThread] mopidy.config.keyring
okt 23 23:51:00 Desktop-Ubuntu mopidy[9684]:   Discovered extensions: youtube, local, soundcloud, iris, file, http, m3u, softwaremixer, stream
okt 23 23:51:00 Desktop-Ubuntu mopidy[9684]: DEBUG    2022-10-23 23:51:00,888 [9684:MainThread] mopidy.ext
okt 23 23:51:00 Desktop-Ubuntu mopidy[9684]:   Loaded extension: Mopidy-Stream 3.3.0
okt 23 23:51:00 Desktop-Ubuntu mopidy[9684]: DEBUG    2022-10-23 23:51:00,885 [9684:MainThread] mopidy.ext
okt 23 23:51:00 Desktop-Ubuntu mopidy[9684]:   Loading entry point: stream = mopidy.stream:Extension
okt 23 23:51:00 Desktop-Ubuntu mopidy[9684]: DEBUG    2022-10-23 23:51:00,884 [9684:MainThread] mopidy.ext
okt 23 23:51:00 Desktop-Ubuntu mopidy[9684]:   Loaded extension: Mopidy-SoftwareMixer 3.3.0
okt 23 23:51:00 Desktop-Ubuntu mopidy[9684]: DEBUG    2022-10-23 23:51:00,884 [9684:MainThread] mopidy.ext
okt 23 23:51:00 Desktop-Ubuntu mopidy[9684]:   Loading entry point: softwaremixer = mopidy.softwaremixer:Extension
okt 23 23:51:00 Desktop-Ubuntu mopidy[9684]: DEBUG    2022-10-23 23:51:00,884 [9684:MainThread] mopidy.ext
okt 23 23:51:00 Desktop-Ubuntu mopidy[9684]:   Loaded extension: Mopidy-M3U 3.3.0
okt 23 23:51:00 Desktop-Ubuntu mopidy[9684]: DEBUG    2022-10-23 23:51:00,884 [9684:MainThread] mopidy.ext
okt 23 23:51:00 Desktop-Ubuntu mopidy[9684]:   Loading entry point: m3u = mopidy.m3u:Extension
okt 23 23:51:00 Desktop-Ubuntu mopidy[9684]: DEBUG    2022-10-23 23:51:00,883 [9684:MainThread] mopidy.ext
okt 23 23:51:00 Desktop-Ubuntu mopidy[9684]:   Loaded extension: Mopidy-HTTP 3.3.0
okt 23 23:51:00 Desktop-Ubuntu mopidy[9684]: DEBUG    2022-10-23 23:51:00,883 [9684:MainThread] mopidy.ext
okt 23 23:51:00 Desktop-Ubuntu mopidy[9684]:   Loading entry point: http = mopidy.http:Extension
okt 23 23:51:00 Desktop-Ubuntu mopidy[9684]: DEBUG    2022-10-23 23:51:00,883 [9684:MainThread] mopidy.ext
okt 23 23:51:00 Desktop-Ubuntu mopidy[9684]:   Loaded extension: Mopidy-File 3.3.0
okt 23 23:51:00 Desktop-Ubuntu mopidy[9684]: DEBUG    2022-10-23 23:51:00,883 [9684:MainThread] mopidy.ext
okt 23 23:51:00 Desktop-Ubuntu mopidy[9684]:   Loading entry point: file = mopidy.file:Extension
okt 23 23:51:00 Desktop-Ubuntu mopidy[9684]: DEBUG    2022-10-23 23:51:00,883 [9684:MainThread] mopidy.ext
okt 23 23:51:00 Desktop-Ubuntu mopidy[9684]:   Loaded extension: Mopidy-Iris 3.64.1
okt 23 23:51:00 Desktop-Ubuntu mopidy[9684]: DEBUG    2022-10-23 23:51:00,880 [9684:MainThread] mopidy.ext
okt 23 23:51:00 Desktop-Ubuntu mopidy[9684]:   Loading entry point: iris = mopidy_iris:Extension
okt 23 23:51:00 Desktop-Ubuntu mopidy[9684]: DEBUG    2022-10-23 23:51:00,880 [9684:MainThread] mopidy.ext
okt 23 23:51:00 Desktop-Ubuntu mopidy[9684]:   Loaded extension: Mopidy-SoundCloud 3.0.1
okt 23 23:51:00 Desktop-Ubuntu mopidy[9684]: DEBUG    2022-10-23 23:51:00,879 [9684:MainThread] mopidy.ext
okt 23 23:51:00 Desktop-Ubuntu mopidy[9684]:   Loading entry point: soundcloud = mopidy_soundcloud:Extension
okt 23 23:51:00 Desktop-Ubuntu mopidy[9684]: DEBUG    2022-10-23 23:51:00,878 [9684:MainThread] mopidy.ext
okt 23 23:51:00 Desktop-Ubuntu mopidy[9684]:   Loaded extension: Mopidy-Local 3.2.1
okt 23 23:51:00 Desktop-Ubuntu mopidy[9684]: DEBUG    2022-10-23 23:51:00,878 [9684:MainThread] mopidy.ext
okt 23 23:51:00 Desktop-Ubuntu mopidy[9684]:   Loading entry point: local = mopidy_local:Extension
okt 23 23:51:00 Desktop-Ubuntu mopidy[9684]: DEBUG    2022-10-23 23:51:00,867 [9684:MainThread] mopidy.ext
okt 23 23:51:00 Desktop-Ubuntu mopidy[9684]:   Loaded extension: Mopidy-YouTube 3.6.1
okt 23 23:51:00 Desktop-Ubuntu mopidy[9684]: DEBUG    2022-10-23 23:51:00,867 [9684:MainThread] mopidy.ext
okt 23 23:51:00 Desktop-Ubuntu mopidy[9684]:   Loading entry point: youtube = mopidy_youtube:Extension
okt 23 23:51:00 Desktop-Ubuntu mopidy[9684]: DEBUG    2022-10-23 23:51:00,866 [9684:MainThread] mopidy.ext
okt 23 23:51:00 Desktop-Ubuntu mopidy[9684]:   Starting Mopidy 3.3.0
okt 23 23:51:00 Desktop-Ubuntu mopidy[9684]: INFO     2022-10-23 23:51:00,863 [9684:MainThread] mopidy.__main__
okt 23 23:51:00 Desktop-Ubuntu systemd[1]: Started Mopidy music server.
okt 23 23:51:00 Desktop-Ubuntu systemd[1]: Starting Mopidy music server...
okt 23 23:51:00 Desktop-Ubuntu systemd[1]: Stopped Mopidy music server.
okt 23 23:51:00 Desktop-Ubuntu systemd[1]: mopidy.service: Deactivated successfully.
okt 23 23:51:00 Desktop-Ubuntu systemd[1]: Stopping Mopidy music server...
okt 23 23:51:00 Desktop-Ubuntu mopidy[9482]:   All actors stopped.
okt 23 23:51:00 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:51:00,395 [9482:MainThread] mopidy.internal.process
okt 23 23:51:00 Desktop-Ubuntu mopidy[9482]:   Stopped SoftwareMixer (urn:uuid:cde3a7de-7938-4455-b6dd-f4730cb1b124)
okt 23 23:51:00 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:51:00,395 [9482:SoftwareMixer-1 (_actor_loop)] pykka
okt 23 23:51:00 Desktop-Ubuntu mopidy[9482]:   Unregistered SoftwareMixer (urn:uuid:cde3a7de-7938-4455-b6dd-f4730cb1b124)
okt 23 23:51:00 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:51:00,395 [9482:SoftwareMixer-1 (_actor_loop)] pykka
okt 23 23:51:00 Desktop-Ubuntu mopidy[9482]:   Stopping 1 instance(s) of SoftwareMixer
okt 23 23:51:00 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:51:00,395 [9482:MainThread] mopidy.internal.process
okt 23 23:51:00 Desktop-Ubuntu mopidy[9482]:   Stopping Mopidy mixer
okt 23 23:51:00 Desktop-Ubuntu mopidy[9482]: INFO     2022-10-23 23:51:00,394 [9482:MainThread] mopidy.commands
okt 23 23:51:00 Desktop-Ubuntu mopidy[9482]:   Stopped Audio (urn:uuid:9781bcd5-6bf0-480a-a4ee-55828fd521d9)
okt 23 23:51:00 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:51:00,394 [9482:Audio-2 (_actor_loop)] pykka
okt 23 23:51:00 Desktop-Ubuntu mopidy[9482]:   Unregistered Audio (urn:uuid:9781bcd5-6bf0-480a-a4ee-55828fd521d9)
okt 23 23:51:00 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:51:00,394 [9482:Audio-2 (_actor_loop)] pykka
okt 23 23:51:00 Desktop-Ubuntu mopidy[9482]:   Stopping 1 instance(s) of Audio
okt 23 23:51:00 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:51:00,394 [9482:MainThread] mopidy.internal.process
okt 23 23:51:00 Desktop-Ubuntu mopidy[9482]:   Stopping Mopidy audio
okt 23 23:51:00 Desktop-Ubuntu mopidy[9482]: INFO     2022-10-23 23:51:00,394 [9482:MainThread] mopidy.commands
okt 23 23:51:00 Desktop-Ubuntu mopidy[9482]:   Stopped StreamBackend (urn:uuid:a122a858-b52d-4d93-9acb-3e1232916859)
okt 23 23:51:00 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:51:00,394 [9482:StreamBackend-5 (_actor_loop)] pykka
okt 23 23:51:00 Desktop-Ubuntu mopidy[9482]:   Unregistered StreamBackend (urn:uuid:a122a858-b52d-4d93-9acb-3e1232916859)
okt 23 23:51:00 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:51:00,393 [9482:StreamBackend-5 (_actor_loop)] pykka
okt 23 23:51:00 Desktop-Ubuntu mopidy[9482]:   Stopping 1 instance(s) of StreamBackend
okt 23 23:51:00 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:51:00,393 [9482:MainThread] mopidy.internal.process
okt 23 23:51:00 Desktop-Ubuntu mopidy[9482]:   Stopped M3UBackend (urn:uuid:494e73d1-39e9-430f-ac57-7a7afda37243)
okt 23 23:51:00 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:51:00,393 [9482:M3UBackend-4 (_actor_loop)] pykka
okt 23 23:51:00 Desktop-Ubuntu mopidy[9482]:   Unregistered M3UBackend (urn:uuid:494e73d1-39e9-430f-ac57-7a7afda37243)
okt 23 23:51:00 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:51:00,393 [9482:M3UBackend-4 (_actor_loop)] pykka
okt 23 23:51:00 Desktop-Ubuntu mopidy[9482]:   Stopping 1 instance(s) of M3UBackend
okt 23 23:51:00 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:51:00,393 [9482:MainThread] mopidy.internal.process
okt 23 23:51:00 Desktop-Ubuntu mopidy[9482]:   Stopped FileBackend (urn:uuid:607e9852-d205-4fdd-ae4a-e1f8a44e9584)
okt 23 23:51:00 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:51:00,393 [9482:FileBackend-3 (_actor_loop)] pykka
okt 23 23:51:00 Desktop-Ubuntu mopidy[9482]:   Unregistered FileBackend (urn:uuid:607e9852-d205-4fdd-ae4a-e1f8a44e9584)
okt 23 23:51:00 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:51:00,393 [9482:FileBackend-3 (_actor_loop)] pykka
okt 23 23:51:00 Desktop-Ubuntu mopidy[9482]:   Stopping 1 instance(s) of FileBackend
okt 23 23:51:00 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:51:00,392 [9482:MainThread] mopidy.internal.process
okt 23 23:51:00 Desktop-Ubuntu mopidy[9482]:   Stopping 0 instance(s) of YouTubeBackend
okt 23 23:51:00 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:51:00,392 [9482:MainThread] mopidy.internal.process
okt 23 23:51:00 Desktop-Ubuntu mopidy[9482]:   Stopping Mopidy backends
okt 23 23:51:00 Desktop-Ubuntu mopidy[9482]: INFO     2022-10-23 23:51:00,392 [9482:MainThread] mopidy.commands
okt 23 23:51:00 Desktop-Ubuntu mopidy[9482]:   Stopped Core (urn:uuid:8560c7e3-5796-4baf-97be-8cf7d75b58a3)
okt 23 23:51:00 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:51:00,392 [9482:Core-6 (_actor_loop)] pykka
okt 23 23:51:00 Desktop-Ubuntu mopidy[9482]:   Unregistered Core (urn:uuid:8560c7e3-5796-4baf-97be-8cf7d75b58a3)
okt 23 23:51:00 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:51:00,392 [9482:Core-6 (_actor_loop)] pykka
okt 23 23:51:00 Desktop-Ubuntu mopidy[9482]:   Stopping 1 instance(s) of Core
okt 23 23:51:00 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:51:00,392 [9482:MainThread] mopidy.internal.process
okt 23 23:51:00 Desktop-Ubuntu mopidy[9482]:   Stopping Mopidy core
okt 23 23:51:00 Desktop-Ubuntu mopidy[9482]: INFO     2022-10-23 23:51:00,392 [9482:MainThread] mopidy.commands
okt 23 23:51:00 Desktop-Ubuntu mopidy[9482]:   Stopped HTTP server
okt 23 23:51:00 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:51:00,392 [9482:HttpServer] mopidy.http.actor
okt 23 23:51:00 Desktop-Ubuntu mopidy[9482]:   Stopping HTTP server
okt 23 23:51:00 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:51:00,391 [9482:HttpFrontend-11 (_actor_loop)] mopidy.http.actor
okt 23 23:51:00 Desktop-Ubuntu mopidy[9482]:   Zeroconf service 'Mopidy HTTP server on Desktop-Ubuntu' (_mopidy-http._tcp at []:6680): Unpublished
okt 23 23:51:00 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:51:00,391 [9482:HttpFrontend-11 (_actor_loop)] mopidy.zeroconf
okt 23 23:51:00 Desktop-Ubuntu mopidy[9482]:   Zeroconf service 'Mopidy HTTP server on Desktop-Ubuntu' (_http._tcp at []:6680): Unpublished
okt 23 23:51:00 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:51:00,391 [9482:HttpFrontend-11 (_actor_loop)] mopidy.zeroconf
okt 23 23:51:00 Desktop-Ubuntu mopidy[9482]:   Stopped HttpFrontend (urn:uuid:ee32a42f-b5dc-4ae2-9212-27f7e71b49bc)
okt 23 23:51:00 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:51:00,390 [9482:HttpFrontend-11 (_actor_loop)] pykka
okt 23 23:51:00 Desktop-Ubuntu mopidy[9482]:   Unregistered HttpFrontend (urn:uuid:ee32a42f-b5dc-4ae2-9212-27f7e71b49bc)
okt 23 23:51:00 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:51:00,390 [9482:HttpFrontend-11 (_actor_loop)] pykka
okt 23 23:51:00 Desktop-Ubuntu mopidy[9482]:   Stopping 1 instance(s) of HttpFrontend
okt 23 23:51:00 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:51:00,390 [9482:MainThread] mopidy.internal.process
okt 23 23:51:00 Desktop-Ubuntu mopidy[9482]:   Stopping Iris
okt 23 23:51:00 Desktop-Ubuntu mopidy[9482]: INFO     2022-10-23 23:51:00,390 [9482:IrisFrontend-9 (_actor_loop)] mopidy_iris.core
okt 23 23:51:00 Desktop-Ubuntu mopidy[9482]:   Stopped IrisFrontend (urn:uuid:6872f8e7-0451-483f-8efc-701a693bd1f0)
okt 23 23:51:00 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:51:00,390 [9482:IrisFrontend-9 (_actor_loop)] pykka
okt 23 23:51:00 Desktop-Ubuntu mopidy[9482]:   Unregistered IrisFrontend (urn:uuid:6872f8e7-0451-483f-8efc-701a693bd1f0)
okt 23 23:51:00 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:51:00,389 [9482:IrisFrontend-9 (_actor_loop)] pykka
okt 23 23:51:00 Desktop-Ubuntu mopidy[9482]:   Stopping 1 instance(s) of IrisFrontend
okt 23 23:51:00 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:51:00,389 [9482:MainThread] mopidy.internal.process
okt 23 23:51:00 Desktop-Ubuntu mopidy[9482]:   Stopped YouTubeCoreListener (urn:uuid:20ce17d9-5f5e-4ae2-b1ae-0ba25b71d7c5)
okt 23 23:51:00 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:51:00,389 [9482:YouTubeCoreListener-8 (_actor_loop)] pykka
okt 23 23:51:00 Desktop-Ubuntu mopidy[9482]:   Unregistered YouTubeCoreListener (urn:uuid:20ce17d9-5f5e-4ae2-b1ae-0ba25b71d7c5)
okt 23 23:51:00 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:51:00,389 [9482:YouTubeCoreListener-8 (_actor_loop)] pykka
okt 23 23:51:00 Desktop-Ubuntu mopidy[9482]:   Stopping 1 instance(s) of YouTubeCoreListener
okt 23 23:51:00 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:51:00,389 [9482:MainThread] mopidy.internal.process
okt 23 23:51:00 Desktop-Ubuntu mopidy[9482]:   Stopped YouTubeAutoplayer (urn:uuid:a94663ac-3567-4f2f-bc1b-5aeb91989d6e)
okt 23 23:51:00 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:51:00,389 [9482:YouTubeAutoplayer-7 (_actor_loop)] pykka
okt 23 23:51:00 Desktop-Ubuntu mopidy[9482]:   Unregistered YouTubeAutoplayer (urn:uuid:a94663ac-3567-4f2f-bc1b-5aeb91989d6e)
okt 23 23:51:00 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:51:00,388 [9482:YouTubeAutoplayer-7 (_actor_loop)] pykka
okt 23 23:51:00 Desktop-Ubuntu mopidy[9482]:   Stopping 1 instance(s) of YouTubeAutoplayer
okt 23 23:51:00 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:51:00,388 [9482:MainThread] mopidy.internal.process
okt 23 23:51:00 Desktop-Ubuntu mopidy[9482]:   Stopping Mopidy frontends
okt 23 23:51:00 Desktop-Ubuntu mopidy[9482]: INFO     2022-10-23 23:51:00,388 [9482:MainThread] mopidy.commands
okt 23 23:51:00 Desktop-Ubuntu mopidy[9482]:   GLib mainloop got SIGTERM. Exiting...
okt 23 23:51:00 Desktop-Ubuntu mopidy[9482]: INFO     2022-10-23 23:51:00,388 [9482:MainThread] mopidy.commands
okt 23 23:49:20 Desktop-Ubuntu mopidy[9482]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 15, "result": [{"__model__": "Ref", "uri": "file:///var/lib/mopidy", "name": "Files", "type": "directory"}]}'
okt 23 23:49:20 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:49:20,961 [9482:HttpServer] mopidy.http.handlers
okt 23 23:49:20 Desktop-Ubuntu mopidy[9482]:   Received WebSocket message from 127.0.0.1: '{"method":"core.library.browse","params":{"uri":null},"jsonrpc":"2.0","id":15}'
okt 23 23:49:20 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:49:20,960 [9482:HttpServer] mopidy.http.handlers
okt 23 23:49:19 Desktop-Ubuntu mopidy[9482]:   304 GET /iris/library/browse/Files/null (127.0.0.1) 0.75ms
okt 23 23:49:19 Desktop-Ubuntu mopidy[9482]: INFO     2022-10-23 23:49:19,189 [9482:HttpServer] tornado.access
okt 23 23:49:19 Desktop-Ubuntu mopidy[9482]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 14, "result": [{"__model__": "Ref", "uri": "file:///var/lib/mopidy/http", "name": "http", "type": "directory"}, {"__model__": "Ref", "uri": "file:///var/lib/mopidy/iris", "name": "iris", "type": "directory"}, {"__model__": "Ref", "uri": "file:///var/lib/mopidy/m3u", "name": "m3u", "type": "directory"}]}'
okt 23 23:49:19 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:49:19,075 [9482:HttpServer] mopidy.http.handlers
okt 23 23:49:19 Desktop-Ubuntu mopidy[9482]:   Browsing files at: file:///var/lib/mopidy
okt 23 23:49:19 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:49:19,073 [9482:FileBackend-3 (_actor_loop)] mopidy.file.library
okt 23 23:49:19 Desktop-Ubuntu mopidy[9482]:   Received WebSocket message from 127.0.0.1: '{"method":"core.library.browse","params":{"uri":"file:///var/lib/mopidy"},"jsonrpc":"2.0","id":14}'
okt 23 23:49:19 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:49:19,072 [9482:HttpServer] mopidy.http.handlers
okt 23 23:49:19 Desktop-Ubuntu mopidy[9482]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 13, "result": {"file:///var/lib/mopidy": [{"__model__": "Track", "uri": "file:///var/lib/mopidy", "name": "mopidy"}]}}'
okt 23 23:49:19 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:49:19,000 [9482:HttpServer] mopidy.http.handlers
okt 23 23:49:18 Desktop-Ubuntu mopidy[9482]:   Failed looking up file:///var/lib/mopidy: gst-resource-error-quark: "/var/lib/mopidy" is a directory. (5)
okt 23 23:49:18 Desktop-Ubuntu mopidy[9482]: WARNING  2022-10-23 23:49:18,999 [9482:FileBackend-3 (_actor_loop)] mopidy.file.library
okt 23 23:49:18 Desktop-Ubuntu mopidy[9482]:   element filesrc0: GstMessageError, gerror=(GError)NULL, debug=(string)"../plugins/elements/gstf...
okt 23 23:49:18 Desktop-Ubuntu mopidy[9482]: TRACE    2022-10-23 23:49:18,998 [9482:FileBackend-3 (_actor_loop)] mopidy.audio.scan
okt 23 23:49:18 Desktop-Ubuntu mopidy[9482]:   Looking up file URI: file:///var/lib/mopidy
okt 23 23:49:18 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:49:18,995 [9482:FileBackend-3 (_actor_loop)] mopidy.file.library
okt 23 23:49:18 Desktop-Ubuntu mopidy[9482]:   Received WebSocket message from 127.0.0.1: '{"method":"core.library.lookup","params":{"uris":["file:///var/lib/mopidy"]},"jsonrpc":"2.0","id":13}'
okt 23 23:49:18 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:49:18,995 [9482:HttpServer] mopidy.http.handlers
okt 23 23:49:18 Desktop-Ubuntu mopidy[9482]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 12, "result": [{"__model__": "Ref", "uri": "file:///var/lib/mopidy", "name": "Files", "type": "directory"}]}'
okt 23 23:49:18 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:49:18,348 [9482:HttpServer] mopidy.http.handlers
okt 23 23:49:18 Desktop-Ubuntu mopidy[9482]:   Received WebSocket message from 127.0.0.1: '{"method":"core.library.browse","params":{"uri":null},"jsonrpc":"2.0","id":12}'
okt 23 23:49:18 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:49:18,347 [9482:HttpServer] mopidy.http.handlers
okt 23 23:49:17 Desktop-Ubuntu mopidy[9482]:   {'id': 166656175721363, 'jsonrpc': '2.0', 'method': 'get_version', 'result': {'version': {'current': '3.64.1', 'latest': '3.64.1', 'is_root': False, 'upgrade_available': False}}, 'recipient': '0Y2XRT4PWPOC'}
okt 23 23:49:17 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:49:17,352 [9482:HttpServer] mopidy_iris.core
okt 23 23:49:17 Desktop-Ubuntu mopidy[9482]:   Iris websocket message received: {"jsonrpc":"2.0","id":166656175721363,"method":"get_version"}
okt 23 23:49:17 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:49:17,213 [9482:HttpServer] mopidy_iris.handlers
okt 23 23:49:16 Desktop-Ubuntu mopidy[9482]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 11, "result": null}'
okt 23 23:49:16 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:49:16,787 [9482:HttpServer] mopidy.http.handlers
okt 23 23:49:16 Desktop-Ubuntu mopidy[9482]:   Received WebSocket message from 127.0.0.1: '{"method":"core.playback.get_stream_title","params":{},"jsonrpc":"2.0","id":11}'
okt 23 23:49:16 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:49:16,787 [9482:HttpServer] mopidy.http.handlers
okt 23 23:49:16 Desktop-Ubuntu mopidy[9482]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 10, "result": ["file", "http", "https", "m3u", "rtsp"]}'
okt 23 23:49:16 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:49:16,786 [9482:HttpServer] mopidy.http.handlers
okt 23 23:49:16 Desktop-Ubuntu mopidy[9482]:   Received WebSocket message from 127.0.0.1: '{"method":"core.get_uri_schemes","params":{},"jsonrpc":"2.0","id":10}'
okt 23 23:49:16 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:49:16,786 [9482:HttpServer] mopidy.http.handlers
okt 23 23:49:16 Desktop-Ubuntu mopidy[9482]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 9, "result": 0}'
okt 23 23:49:16 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:49:16,786 [9482:HttpServer] mopidy.http.handlers
okt 23 23:49:16 Desktop-Ubuntu mopidy[9482]:   Received WebSocket message from 127.0.0.1: '{"method":"core.playback.get_time_position","params":{},"jsonrpc":"2.0","id":9}'
okt 23 23:49:16 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:49:16,785 [9482:HttpServer] mopidy.http.handlers
okt 23 23:49:16 Desktop-Ubuntu mopidy[9482]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 8, "result": []}'
okt 23 23:49:16 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:49:16,785 [9482:HttpServer] mopidy.http.handlers
okt 23 23:49:16 Desktop-Ubuntu mopidy[9482]:   Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_tl_tracks","params":{},"jsonrpc":"2.0","id":8}'
okt 23 23:49:16 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:49:16,785 [9482:HttpServer] mopidy.http.handlers
okt 23 23:49:16 Desktop-Ubuntu mopidy[9482]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 7, "result": false}'
okt 23 23:49:16 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:49:16,784 [9482:HttpServer] mopidy.http.handlers
okt 23 23:49:16 Desktop-Ubuntu mopidy[9482]:   Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_repeat","params":{},"jsonrpc":"2.0","id":7}'
okt 23 23:49:16 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:49:16,784 [9482:HttpServer] mopidy.http.handlers
okt 23 23:49:16 Desktop-Ubuntu mopidy[9482]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 6, "result": false}'
okt 23 23:49:16 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:49:16,784 [9482:HttpServer] mopidy.http.handlers
okt 23 23:49:16 Desktop-Ubuntu mopidy[9482]:   Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_random","params":{},"jsonrpc":"2.0","id":6}'
okt 23 23:49:16 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:49:16,784 [9482:HttpServer] mopidy.http.handlers
okt 23 23:49:16 Desktop-Ubuntu mopidy[9482]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 5, "result": false}'
okt 23 23:49:16 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:49:16,783 [9482:HttpServer] mopidy.http.handlers
okt 23 23:49:16 Desktop-Ubuntu mopidy[9482]:   Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_consume","params":{},"jsonrpc":"2.0","id":5}'
okt 23 23:49:16 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:49:16,783 [9482:HttpServer] mopidy.http.handlers
okt 23 23:49:16 Desktop-Ubuntu mopidy[9482]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 4, "result": false}'
okt 23 23:49:16 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:49:16,783 [9482:HttpServer] mopidy.http.handlers
okt 23 23:49:16 Desktop-Ubuntu mopidy[9482]:   Received WebSocket message from 127.0.0.1: '{"method":"core.mixer.get_mute","params":{},"jsonrpc":"2.0","id":4}'
okt 23 23:49:16 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:49:16,782 [9482:HttpServer] mopidy.http.handlers
okt 23 23:49:16 Desktop-Ubuntu mopidy[9482]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 3, "result": 100}'
okt 23 23:49:16 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:49:16,782 [9482:HttpServer] mopidy.http.handlers
okt 23 23:49:16 Desktop-Ubuntu mopidy[9482]:   Received WebSocket message from 127.0.0.1: '{"method":"core.mixer.get_volume","params":{},"jsonrpc":"2.0","id":3}'
okt 23 23:49:16 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:49:16,782 [9482:HttpServer] mopidy.http.handlers
okt 23 23:49:16 Desktop-Ubuntu mopidy[9482]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 2, "result": "stopped"}'
okt 23 23:49:16 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:49:16,781 [9482:HttpServer] mopidy.http.handlers
okt 23 23:49:16 Desktop-Ubuntu mopidy[9482]:   Received WebSocket message from 127.0.0.1: '{"method":"core.playback.get_state","params":{},"jsonrpc":"2.0","id":2}'
okt 23 23:49:16 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:49:16,781 [9482:HttpServer] mopidy.http.handlers
okt 23 23:49:16 Desktop-Ubuntu mopidy[9482]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 1, "result": null}'
okt 23 23:49:16 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:49:16,781 [9482:HttpServer] mopidy.http.handlers
okt 23 23:49:16 Desktop-Ubuntu mopidy[9482]:   Received WebSocket message from 127.0.0.1: '{"method":"core.playback.get_current_tl_track","params":{},"jsonrpc":"2.0","id":1}'
okt 23 23:49:16 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:49:16,780 [9482:HttpServer] mopidy.http.handlers
okt 23 23:49:16 Desktop-Ubuntu mopidy[9482]:   {'id': 166656175671213, 'jsonrpc': '2.0', 'method': 'get_queue_metadata', 'result': {'queue_metadata': {}}, 'recipient': '0Y2XRT4PWPOC'}
okt 23 23:49:16 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:49:16,715 [9482:HttpServer] mopidy_iris.core
okt 23 23:49:16 Desktop-Ubuntu mopidy[9482]:   Iris websocket message received: {"jsonrpc":"2.0","id":166656175671213,"method":"get_queue_metadata"}
okt 23 23:49:16 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:49:16,714 [9482:HttpServer] mopidy_iris.handlers
okt 23 23:49:16 Desktop-Ubuntu mopidy[9482]:   {'id': 166656175671135, 'jsonrpc': '2.0', 'method': 'get_pinned', 'result': {'pinned': []}, 'recipient': '0Y2XRT4PWPOC'}
okt 23 23:49:16 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:49:16,714 [9482:HttpServer] mopidy_iris.core
okt 23 23:49:16 Desktop-Ubuntu mopidy[9482]:   Iris websocket message received: {"jsonrpc":"2.0","id":166656175671135,"method":"get_pinned"}
okt 23 23:49:16 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:49:16,714 [9482:HttpServer] mopidy_iris.handlers
okt 23 23:49:16 Desktop-Ubuntu mopidy[9482]:   {'id': 166656175671099, 'jsonrpc': '2.0', 'method': 'get_commands', 'result': {'commands': {}}, 'recipient': '0Y2XRT4PWPOC'}
okt 23 23:49:16 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:49:16,714 [9482:HttpServer] mopidy_iris.core
okt 23 23:49:16 Desktop-Ubuntu mopidy[9482]:   Iris websocket message received: {"jsonrpc":"2.0","id":166656175671099,"method":"get_commands"}
okt 23 23:49:16 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:49:16,714 [9482:HttpServer] mopidy_iris.handlers
okt 23 23:49:16 Desktop-Ubuntu mopidy[9482]:   {'id': 166656175671070, 'jsonrpc': '2.0', 'method': 'get_radio', 'result': {'radio': {'enabled': 0, 'seed_artists': [], 'seed_genres': [], 'seed_tracks': [], 'results': []}}, 'recipient': '0Y2XRT4PWPOC'}
okt 23 23:49:16 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:49:16,713 [9482:HttpServer] mopidy_iris.core
okt 23 23:49:16 Desktop-Ubuntu mopidy[9482]:   Iris websocket message received: {"jsonrpc":"2.0","id":166656175671070,"method":"get_radio"}
okt 23 23:49:16 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:49:16,713 [9482:HttpServer] mopidy_iris.handlers
okt 23 23:49:16 Desktop-Ubuntu mopidy[9482]:   {'id': 166656175670995, 'jsonrpc': '2.0', 'method': 'get_shared_config', 'result': {'shared_config': {}}, 'recipient': '0Y2XRT4PWPOC'}
okt 23 23:49:16 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:49:16,713 [9482:HttpServer] mopidy_iris.core
okt 23 23:49:16 Desktop-Ubuntu mopidy[9482]:   Iris websocket message received: {"jsonrpc":"2.0","id":166656175670995,"method":"get_shared_config"}
okt 23 23:49:16 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:49:16,713 [9482:HttpServer] mopidy_iris.handlers
okt 23 23:49:16 Desktop-Ubuntu mopidy[9482]:   {'id': 166656175670855, 'jsonrpc': '2.0', 'method': 'get_config', 'result': {'config': {'is_root': False, 'spotify_username': False, 'country': 'NZ', 'locale': 'en_NZ', 'snapcast_enabled': True, 'snapcast_host': 'localhost', 'snapcast_port': '1780', 'snapcast_ssl': False, 'snapcast_stream': 'Default', 'spotify_authorization_url': 'https://jamesbarnsley.co.nz/iris/auth_spotify.php', 'lastfm_authorization_url': 'https://jamesbarnsley.co.nz/iris/auth_lastfm.php', 'genius_authorization_url': 'https://jamesbarnsley.co.nz/iris/auth_genius.php', 'shared_config': {}}}, 'recipient': '0Y2XRT4PWPOC'}
okt 23 23:49:16 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:49:16,713 [9482:HttpServer] mopidy_iris.core
okt 23 23:49:16 Desktop-Ubuntu mopidy[9482]:   Iris websocket message received: {"jsonrpc":"2.0","id":166656175670855,"method":"get_config"}
okt 23 23:49:16 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:49:16,712 [9482:HttpServer] mopidy_iris.handlers
okt 23 23:49:16 Desktop-Ubuntu mopidy[9482]:   {'id': 166656175670744, 'jsonrpc': '2.0', 'method': 'update_connection', 'result': {'connection': {'connection_id': '0Y2XRT4PWPOC', 'ip': '127.0.0.1', 'created': '2022-10-23 23:49:16', 'username': 166656148284185, 'client_id': 166656148284193}}, 'recipient': '0Y2XRT4PWPOC'}
okt 23 23:49:16 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:49:16,712 [9482:HttpServer] mopidy_iris.core
okt 23 23:49:16 Desktop-Ubuntu mopidy[9482]:   {'method': 'connection_changed', 'params': {'connection': {'connection_id': '0Y2XRT4PWPOC', 'ip': '127.0.0.1', 'created': '2022-10-23 23:49:16', 'username': 166656148284185, 'client_id': 166656148284193}}}
okt 23 23:49:16 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:49:16,712 [9482:HttpServer] mopidy_iris.core
okt 23 23:49:16 Desktop-Ubuntu mopidy[9482]:   Iris websocket message received: {"jsonrpc":"2.0","id":166656175670744,"method":"update_connection","params":{"username":166656148284185,"client_id":166656148284193}}
okt 23 23:49:16 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:49:16,712 [9482:HttpServer] mopidy_iris.handlers
okt 23 23:49:16 Desktop-Ubuntu mopidy[9482]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 0, "result": {"core.get_uri_schemes": {"description": "Get list of URI schemes we can handle", "params": []}, "core.get_version": {"description": "Get version of the Mopidy core API", "params": []}, "core.history.get_history": {"description": "Get the track history.\\n\\nThe timestamps are milliseconds since epoch.\\n\\n:returns: the track history\\n:rtype: list of (timestamp, :class:`mopidy.models.Ref`) tuples", "params": []}, "core.history.get_length": {"description": "Get the number of tracks in the history.\\n\\n:returns: the history length\\n:rtype: int", "params": []}, "core.library.browse": {"description": "Browse directories and tracks at the given ``uri``.\\n\\n``uri`` is a string which represents some directory belonging to a\\nbackend. To get the intial root directories for backends pass\\n:class:`None` as the URI.\\n\\nReturns a list of :class:`mopidy.models.Ref` objects for the\\ndirectories and tracks at the given ``uri``.\\n\\nThe :class:`~mopidy.models.Ref` objects representing tracks keep the\\ntrack\'s original URI. A matching pair of objects can look like this::\\n\\n    Track(uri=\'dummy:/foo.mp3\', name=\'foo\', artists=..., album=...)\\n    Ref.track(uri=\'dummy:/foo.mp3\', name=\'foo\')\\n\\nThe :class:`~mopidy.models.Ref` objects representing directories have\\nbackend specific URIs. These are opaque values, so no one but the\\nbackend that created them should try and derive any meaning from them.\\nThe only valid exception to this is checking the scheme, as it is used\\nto route browse requests to the correct backend.\\n\\nFor example, the dummy library\'s ``/bar`` directory could be returned\\nlike this::\\n\\n    Ref.directory(uri=\'dummy:directory:/bar\', name=\'bar\')\\n\\n:param string uri: URI to browse\\n:rtype: list of :class:`mopidy.models.Ref`\\n\\n.. versionadded:: 0.18", "params": [{"name": "uri"}]}, "core.library.get_distinct": {"description": "List distinct values for a given field from the library.\\n\\nThis has mainly been added to support the list commands the MPD\\nprotocol supports in a more sane fashion. Other frontends are not\\nrecommended to use this method.\\n\\n:param string field: Any one of ``uri``, ``track_name``, ``album``,\\n    ``artist``, ``albumartist``, ``composer``, ``performer``,\\n    ``track_no``, ``genre``, ``date``, ``comment``, ``disc_no``,\\n    ``musicbrainz_albumid``, ``musicbrainz_artistid``, or\\n    ``musicbrainz_trackid``.\\n:param dict query: Query to use for limiting results, see\\n    :meth:`search` for details about the query format.\\n:rtype: set of values corresponding to the requested field type.\\n\\n.. versionadded:: 1.0", "params": [{"name": "field"}, {"name": "query", "default": null}]}, "core.library.get_images": {"description": "Lookup the images for the given URIs\\n\\nBackends can use this to return image URIs for any URI they know about\\nbe it tracks, albums, playlists. The lookup result is a dictionary\\nmapping the provided URIs to lists of images.\\n\\nUnknown URIs or URIs the corresponding backend couldn\'t find anything\\nfor will simply return an empty list for that URI.\\n\\n:param uris: list of URIs to find images for\\n:type uris: list of string\\n:rtype: {uri: tuple of :class:`mopidy.models.Image`}\\n\\n.. versionadded:: 1.0", "params": [{"name": "uris"}]}, "core.library.lookup": {"description": "Lookup the given URIs.\\n\\nIf the URI expands to multiple tracks, the returned list will contain\\nthem all.\\n\\n:param uris: track URIs\\n:type uris: list of string\\n:rtype: {uri: list of :class:`mopidy.models.Track`}", "params": [{"name": "uris"}]}, "core.library.refresh": {"description": "Refresh library. Limit to URI and below if an URI is given.\\n\\n:param uri: directory or track URI\\n:type uri: string", "params": [{"name": "uri", "default": null}]}, "core.library.search": {"description": "Search the library for tracks where ``field`` contains ``values``.\\n\\n``field`` can be one of ``uri``, ``track_name``, ``album``, ``artist``,\\n``albumartist``, ``composer``, ``performer``, ``track_no``, ``genre``,\\n``date``, ``comment``, ``disc_no``, ``musicbrainz_albumid``,\\n``musicbrainz_artistid``, ``musicbrainz_trackid`` or ``any``.\\n\\nIf ``uris`` is given, the search is limited to results from within the\\nURI roots. For example passing ``uris=[\'file:\']`` will limit the search\\nto the local backend.\\n\\nExamples::\\n\\n    # Returns results matching \'a\' in any backend\\n    search({\'any\': [\'a\']})\\n\\n    # Returns results matching artist \'xyz\' in any backend\\n    search({\'artist\': [\'xyz\']})\\n\\n    # Returns results matching \'a\' and \'b\' and artist \'xyz\' in any\\n    # backend\\n    search({\'any\': [\'a\', \'b\'], \'artist\': [\'xyz\']})\\n\\n    # Returns results matching \'a\' if within the given URI roots\\n    # \\"file:///media/music\\" and \\"spotify:\\"\\n    search({\'any\': [\'a\']}, uris=[\'file:///media/music\', \'spotify:\'])\\n\\n    # Returns results matching artist \'xyz\' and \'abc\' in any backend\\n    search({\'artist\': [\'xyz\', \'abc\']})\\n\\n:param query: one or more queries to search for\\n:type query: dict\\n:param uris: zero or more URI roots to limit the search to\\n:type uris: list of string or :class:`None`\\n:param exact: if the search should use exact matching\\n:type exact: :class:`bool`\\n:rtype: list of :class:`mopidy.models.SearchResult`\\n\\n.. versionadded:: 1.0\\n    The ``exact`` keyword argument.", "params": [{"name": "query"}, {"name": "uris", "default": null}, {"name": "exact", "default": false}]}, "core.mixer.get_mute": {"description": "Get mute state.\\n\\n:class:`True` if muted, :class:`False` unmuted, :class:`None` if\\nunknown.", "params": []}, "core.mixer.get_volume": {"description": "Get the volume.\\n\\nInteger in range [0..100] or :class:`None` if unknown.\\n\\nThe volume scale is linear.", "params": []}, "core.mixer.set_mute": {"description": "Set mute state.\\n\\n:class:`True` to mute, :class:`False` to unmute.\\n\\nReturns :class:`True` if call is successful, otherwise :class:`False`.", "params": [{"name": "mute"}]}, "core.mixer.set_volume": {"description": "Set the volume.\\n\\nThe volume is defined as an integer in range [0..100].\\n\\nThe volume scale is linear.\\n\\nReturns :class:`True` if call is successful, otherwise :class:`False`.", "params": [{"name": "volume"}]}, "core.playback.get_current_tl_track": {"description": "Get the currently playing or selected track.\\n\\nReturns a :class:`mopidy.models.TlTrack` or :class:`None`.", "params": []}, "core.playback.get_current_tlid": {"description": "Get the currently playing or selected TLID.\\n\\nExtracted from :meth:`get_current_tl_track` for convenience.\\n\\nReturns a :class:`int` or :class:`None`.\\n\\n.. versionadded:: 1.1", "params": []}, "core.playback.get_current_track": {"description": "Get the currently playing or selected track.\\n\\nExtracted from :meth:`get_current_tl_track` for convenience.\\n\\nReturns a :class:`mopidy.models.Track` or :class:`None`.", "params": []}, "core.playback.get_state": {"description": "Get The playback state.", "params": []}, "core.playback.get_stream_title": {"description": "Get the current stream title or :class:`None`.", "params": []}, "core.playback.get_time_position": {"description": "Get time position in milliseconds.", "params": []}, "core.playback.next": {"description": "Change to the next track.\\n\\nThe current playback state will be kept. If it was playing, playing\\nwill continue. If it was paused, it will still be paused, etc.", "params": []}, "core.playback.pause": {"description": "Pause playback.", "params": []}, "core.playback.play": {"description": "Play the given track, or if the given tl_track and tlid is\\n:class:`None`, play the currently active track.\\n\\nNote that the track **must** already be in the tracklist.\\n\\n.. deprecated:: 3.0\\n    The ``tl_track`` argument. Use ``tlid`` instead.\\n\\n:param tl_track: track to play\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:param tlid: TLID of the track to play\\n:type tlid: :class:`int` or :class:`None`", "params": [{"name": "tl_track", "default": null}, {"name": "tlid", "default": null}]}, "core.playback.previous": {"description": "Change to the previous track.\\n\\nThe current playback state will be kept. If it was playing, playing\\nwill continue. If it was paused, it will still be paused, etc.", "params": []}, "core.playback.resume": {"description": "If paused, resume playing the current track.", "params": []}, "core.playback.seek": {"description": "Seeks to time position given in milliseconds.\\n\\n:param time_position: time position in milliseconds\\n:type time_position: int\\n:rtype: :class:`True` if successful, else :class:`False`", "params": [{"name": "time_position"}]}, "core.playback.set_state": {"description": "Set the playback state.\\n\\nMust be :attr:`PLAYING`, :attr:`PAUSED`, or :attr:`STOPPED`.\\n\\nPossible states and transitions:\\n\\n.. digraph:: state_transitions\\n\\n    \\"STOPPED\\" -> \\"PLAYING\\" [ label=\\"play\\" ]\\n    \\"STOPPED\\" -> \\"PAUSED\\" [ label=\\"pause\\" ]\\n    \\"PLAYING\\" -> \\"STOPPED\\" [ label=\\"stop\\" ]\\n    \\"PLAYING\\" -> \\"PAUSED\\" [ label=\\"pause\\" ]\\n    \\"PLAYING\\" -> \\"PLAYING\\" [ label=\\"play\\" ]\\n    \\"PAUSED\\" -> \\"PLAYING\\" [ label=\\"resume\\" ]\\n    \\"PAUSED\\" -> \\"STOPPED\\" [ label=\\"stop\\" ]", "params": [{"name": "new_state"}]}, "core.playback.stop": {"description": "Stop playing.", "params": []}, "core.playlists.as_list": {"description": "Get a list of the currently available playlists.\\n\\nReturns a list of :class:`~mopidy.models.Ref` objects referring to the\\nplaylists. In other words, no information about the playlists\' content\\nis given.\\n\\n:rtype: list of :class:`mopidy.models.Ref`\\n\\n.. versionadded:: 1.0", "params": []}, "core.playlists.create": {"description": "Create a new playlist.\\n\\nIf ``uri_scheme`` matches an URI scheme handled by a current backend,\\nthat backend is asked to create the playlist. If ``uri_scheme`` is\\n:class:`None` or doesn\'t match a current backend, the first backend is\\nasked to create the playlist.\\n\\nAll new playlists must be created by calling this method, and **not**\\nby creating new instances of :class:`mopidy.models.Playlist`.\\n\\n:param name: name of the new playlist\\n:type name: string\\n:param uri_scheme: use the backend matching the URI scheme\\n:type uri_scheme: string\\n:rtype: :class:`mopidy.models.Playlist` or :class:`None`", "params": [{"name": "name"}, {"name": "uri_scheme", "default": null}]}, "core.playlists.delete": {"description": "Delete playlist identified by the URI.\\n\\nIf the URI doesn\'t match the URI schemes handled by the current\\nbackends, nothing happens.\\n\\nReturns :class:`True` if deleted, :class:`False` otherwise.\\n\\n:param uri: URI of the playlist to delete\\n:type uri: string\\n:rtype: :class:`bool`\\n\\n.. versionchanged:: 2.2\\n    Return type defined.", "params": [{"name": "uri"}]}, "core.playlists.get_items": {"description": "Get the items in a playlist specified by ``uri``.\\n\\nReturns a list of :class:`~mopidy.models.Ref` objects referring to the\\nplaylist\'s items.\\n\\nIf a playlist with the given ``uri`` doesn\'t exist, it returns\\n:class:`None`.\\n\\n:rtype: list of :class:`mopidy.models.Ref`, or :class:`None`\\n\\n.. versionadded:: 1.0", "params": [{"name": "uri"}]}, "core.playlists.get_uri_schemes": {"description": "Get the list of URI schemes that support playlists.\\n\\n:rtype: list of string\\n\\n.. versionadded:: 2.0", "params": []}, "core.playlists.lookup": {"description": "Lookup playlist with given URI in both the set of playlists and in any\\nother playlist sources. Returns :class:`None` if not found.\\n\\n:param uri: playlist URI\\n:type uri: string\\n:rtype: :class:`mopidy.models.Playlist` or :class:`None`", "params": [{"name": "uri"}]}, "core.playlists.refresh": {"description": "Refresh the playlists in :attr:`playlists`.\\n\\nIf ``uri_scheme`` is :class:`None`, all backends are asked to refresh.\\nIf ``uri_scheme`` is an URI scheme handled by a backend, only that\\nbackend is asked to refresh. If ``uri_scheme`` doesn\'t match any\\ncurrent backend, nothing happens.\\n\\n:param uri_scheme: limit to the backend matching the URI scheme\\n:type uri_scheme: string", "params": [{"name": "uri_scheme", "default": null}]}, "core.playlists.save": {"description": "Save the playlist.\\n\\nFor a playlist to be saveable, it must have the ``uri`` attribute set.\\nYou must not set the ``uri`` atribute yourself, but use playlist\\nobjects returned by :meth:`create` or retrieved from :attr:`playlists`,\\nwhich will always give you saveable playlists.\\n\\nThe method returns the saved playlist. The return playlist may differ\\nfrom the saved playlist. E.g. if the playlist name was changed, the\\nreturned playlist may have a different URI. The caller of this method\\nmust throw away the playlist sent to this method, and use the\\nreturned playlist instead.\\n\\nIf the playlist\'s URI isn\'t set or doesn\'t match the URI scheme of a\\ncurrent backend, nothing is done and :class:`None` is returned.\\n\\n:param playlist: the playlist\\n:type playlist: :class:`mopidy.models.Playlist`\\n:rtype: :class:`mopidy.models.Playlist` or :class:`None`", "params": [{"name": "playlist"}]}, "core.tracklist.add": {"description": "Add tracks to the tracklist.\\n\\nIf ``uris`` is given instead of ``tracks``, the URIs are\\nlooked up in the library and the resulting tracks are added to the\\ntracklist.\\n\\nIf ``at_position`` is given, the tracks are inserted at the given\\nposition in the tracklist. If ``at_position`` is not given, the tracks\\nare appended to the end of the tracklist.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.\\n\\n:param tracks: tracks to add\\n:type tracks: list of :class:`mopidy.models.Track` or :class:`None`\\n:param at_position: position in tracklist to add tracks\\n:type at_position: int or :class:`None`\\n:param uris: list of URIs for tracks to add\\n:type uris: list of string or :class:`None`\\n:rtype: list of :class:`mopidy.models.TlTrack`\\n\\n.. versionadded:: 1.0\\n    The ``uris`` argument.\\n\\n.. deprecated:: 1.0\\n    The ``tracks`` argument. Use ``uris``.", "params": [{"name": "tracks", "default": null}, {"name": "at_position", "default": null}, {"name": "uris", "default": null}]}, "core.tracklist.clear": {"description": "Clear the tracklist.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.", "params": []}, "core.tracklist.eot_track": {"description": "The track that will be played after the given track.\\n\\nNot necessarily the same track as :meth:`next_track`.\\n\\n.. deprecated:: 3.0\\n    Use :meth:`get_eot_tlid` instead.\\n\\n:param tl_track: the reference track\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:rtype: :class:`mopidy.models.TlTrack` or :class:`None`", "params": [{"name": "tl_track"}]}, "core.tracklist.filter": {"description": "Filter the tracklist by the given criteria.\\n\\nEach rule in the criteria consists of a model field and a list of\\nvalues to compare it against. If the model field matches any of the\\nvalues, it may be returned.\\n\\nOnly tracks that match all the given criteria are returned.\\n\\nExamples::\\n\\n    # Returns tracks with TLIDs 1, 2, 3, or 4 (tracklist ID)\\n    filter({\'tlid\': [1, 2, 3, 4]})\\n\\n    # Returns track with URIs \'xyz\' or \'abc\'\\n    filter({\'uri\': [\'xyz\', \'abc\']})\\n\\n    # Returns track with a matching TLIDs (1, 3 or 6) and a\\n    # matching URI (\'xyz\' or \'abc\')\\n    filter({\'tlid\': [1, 3, 6], \'uri\': [\'xyz\', \'abc\']})\\n\\n:param criteria: one or more rules to match by\\n:type criteria: dict, of (string, list) pairs\\n:rtype: list of :class:`mopidy.models.TlTrack`", "params": [{"name": "criteria"}]}, "core.tracklist.get_consume": {"description": "Get consume mode.\\n\\n:class:`True`\\n    Tracks are removed from the tracklist when they have been played.\\n:class:`False`\\n    Tracks are not removed from the tracklist.", "params": []}, "core.tracklist.get_eot_tlid": {"description": "The TLID of the track that will be played after the current track.\\n\\nNot necessarily the same TLID as returned by :meth:`get_next_tlid`.\\n\\n:rtype: :class:`int` or :class:`None`\\n\\n.. versionadded:: 1.1", "params": []}, "core.tracklist.get_length": {"description": "Get length of the tracklist.", "params": []}, "core.tracklist.get_next_tlid": {"description": "The tlid of the track that will be played if calling\\n:meth:`mopidy.core.PlaybackController.next()`.\\n\\nFor normal playback this is the next track in the tracklist. If repeat\\nis enabled the next track can loop around the tracklist. When random is\\nenabled this should be a random track, all tracks should be played once\\nbefore the tracklist repeats.\\n\\n:rtype: :class:`int` or :class:`None`\\n\\n.. versionadded:: 1.1", "params": []}, "core.tracklist.get_previous_tlid": {"description": "Returns the TLID of the track that will be played if calling\\n:meth:`mopidy.core.PlaybackController.previous()`.\\n\\nFor normal playback this is the previous track in the tracklist. If\\nrandom and/or consume is enabled it should return the current track\\ninstead.\\n\\n:rtype: :class:`int` or :class:`None`\\n\\n.. versionadded:: 1.1", "params": []}, "core.tracklist.get_random": {"description": "Get random mode.\\n\\n:class:`True`\\n    Tracks are selected at random from the tracklist.\\n:class:`False`\\n    Tracks are played in the order of the tracklist.", "params": []}, "core.tracklist.get_repeat": {"description": "Get repeat mode.\\n\\n:class:`True`\\n    The tracklist is played repeatedly.\\n:class:`False`\\n    The tracklist is played once.", "params": []}, "core.tracklist.get_single": {"description": "Get single mode.\\n\\n:class:`True`\\n    Playback is stopped after current song, unless in ``repeat`` mode.\\n:class:`False`\\n    Playback continues after current song.", "params": []}, "core.tracklist.get_tl_tracks": {"description": "Get tracklist as list of :class:`mopidy.models.TlTrack`.", "params": []}, "core.tracklist.get_tracks": {"description": "Get tracklist as list of :class:`mopidy.models.Track`.", "params": []}, "core.tracklist.get_version": {"description": "Get the tracklist version.\\n\\nInteger which is increased every time the tracklist is changed. Is not\\nreset before Mopidy is restarted.", "params": []}, "core.tracklist.index": {"description": "The position of the given track in the tracklist.\\n\\nIf neither *tl_track* or *tlid* is given we return the index of\\nthe currently playing track.\\n\\n:param tl_track: the track to find the index of\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:param tlid: TLID of the track to find the index of\\n:type tlid: :class:`int` or :class:`None`\\n:rtype: :class:`int` or :class:`None`\\n\\n.. versionadded:: 1.1\\n    The *tlid* parameter", "params": [{"name": "tl_track", "default": null}, {"name": "tlid", "default": null}]}, "core.tracklist.move": {"description": "Move the tracks in the slice ``[start:end]`` to ``to_position``.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.\\n\\n:param start: position of first track to move\\n:type start: int\\n:param end: position after last track to move\\n:type end: int\\n:param to_position: new position for the tracks\\n:type to_position: int", "params": [{"name": "start"}, {"name": "end"}, {"name": "to_position"}]}, "core.tracklist.next_track": {"description": "The track that will be played if calling\\n:meth:`mopidy.core.PlaybackController.next()`.\\n\\nFor normal playback this is the next track in the tracklist. If repeat\\nis enabled the next track can loop around the tracklist. When random is\\nenabled this should be a random track, all tracks should be played once\\nbefore the tracklist repeats.\\n\\n.. deprecated:: 3.0\\n    Use :meth:`get_next_tlid` instead.\\n\\n:param tl_track: the reference track\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:rtype: :class:`mopidy.models.TlTrack` or :class:`None`", "params": [{"name": "tl_track"}]}, "core.tracklist.previous_track": {"description": "Returns the track that will be played if calling\\n:meth:`mopidy.core.PlaybackController.previous()`.\\n\\nFor normal playback this is the previous track in the tracklist. If\\nrandom and/or consume is enabled it should return the current track\\ninstead.\\n\\n.. deprecated:: 3.0\\n    Use :meth:`get_previous_tlid` instead.\\n\\n:param tl_track: the reference track\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:rtype: :class:`mopidy.models.TlTrack` or :class:`None`", "params": [{"name": "tl_track"}]}, "core.tracklist.remove": {"description": "Remove the matching tracks from the tracklist.\\n\\nUses :meth:`filter()` to lookup the tracks to remove.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.\\n\\n:param criteria: one or more rules to match by\\n:type criteria: dict, of (string, list) pairs\\n:rtype: list of :class:`mopidy.models.TlTrack` that were removed", "params": [{"name": "criteria"}]}, "core.tracklist.set_consume": {"description": "Set consume mode.\\n\\n:class:`True`\\n    Tracks are removed from the tracklist when they have been played.\\n:class:`False`\\n    Tracks are not removed from the tracklist.", "params": [{"name": "value"}]}, "core.tracklist.set_random": {"description": "Set random mode.\\n\\n:class:`True`\\n    Tracks are selected at random from the tracklist.\\n:class:`False`\\n    Tracks are played in the order of the tracklist.", "params": [{"name": "value"}]}, "core.tracklist.set_repeat": {"description": "Set repeat mode.\\n\\nTo repeat a single track, set both ``repeat`` and ``single``.\\n\\n:class:`True`\\n    The tracklist is played repeatedly.\\n:class:`False`\\n    The tracklist is played once.", "params": [{"name": "value"}]}, "core.tracklist.set_single": {"description": "Set single mode.\\n\\n:class:`True`\\n    Playback is stopped after current song, unless in ``repeat`` mode.\\n:class:`False`\\n    Playback continues after current song.", "params": [{"name": "value"}]}, "core.tracklist.shuffle": {"description": "Shuffles the entire tracklist. If ``start`` and ``end`` is given only\\nshuffles the slice ``[start:end]``.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.\\n\\n:param start: position of first track to shuffle\\n:type start: int or :class:`None`\\n:param end: position after last track to shuffle\\n:type end: int or :class:`None`", "params": [{"name": "start", "default": null}, {"name": "end", "default": null}]}, "core.tracklist.slice": {"description": "Returns a slice of the tracklist, limited by the given start and end\\npositions.\\n\\n:param start: position of first track to include in slice\\n:type start: int\\n:param end: position after last track to include in slice\\n:type end: int\\n:rtype: :class:`mopidy.models.TlTrack`", "params": [{"name": "start"}, {"name": "end"}]}}}'
okt 23 23:49:16 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:49:16,711 [9482:HttpServer] mopidy.http.handlers
okt 23 23:49:16 Desktop-Ubuntu mopidy[9482]:   Received WebSocket message from 127.0.0.1: '{"method":"core.describe","jsonrpc":"2.0","id":0}'
okt 23 23:49:16 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:49:16,707 [9482:HttpServer] mopidy.http.handlers
okt 23 23:49:16 Desktop-Ubuntu mopidy[9482]:   {'method': 'connection_added', 'params': {'connection': {'connection_id': '0Y2XRT4PWPOC', 'ip': '127.0.0.1', 'created': '2022-10-23 23:49:16'}}}
okt 23 23:49:16 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:49:16,662 [9482:HttpServer] mopidy_iris.core
okt 23 23:49:16 Desktop-Ubuntu mopidy[9482]:   <mopidy_iris.handlers.WebsocketHandler object at 0x7f8ed84c3430>
okt 23 23:49:16 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:49:16,662 [9482:HttpServer] mopidy_iris.core
okt 23 23:49:16 Desktop-Ubuntu mopidy[9482]:   Connection added
okt 23 23:49:16 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:49:16,662 [9482:HttpServer] mopidy_iris.core
okt 23 23:49:16 Desktop-Ubuntu mopidy[9482]:   101 GET /iris/ws/ (127.0.0.1) 0.39ms
okt 23 23:49:16 Desktop-Ubuntu mopidy[9482]: INFO     2022-10-23 23:49:16,662 [9482:HttpServer] tornado.access
okt 23 23:49:16 Desktop-Ubuntu mopidy[9482]:   New WebSocket connection from 127.0.0.1
okt 23 23:49:16 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:49:16,649 [9482:HttpServer] mopidy.http.handlers
okt 23 23:49:16 Desktop-Ubuntu mopidy[9482]:   101 GET /mopidy/ws/ (127.0.0.1) 0.59ms
okt 23 23:49:16 Desktop-Ubuntu mopidy[9482]: INFO     2022-10-23 23:49:16,649 [9482:HttpServer] tornado.access
okt 23 23:49:16 Desktop-Ubuntu mopidy[9482]:   304 GET /iris/library/null (127.0.0.1) 0.67ms
okt 23 23:49:16 Desktop-Ubuntu mopidy[9482]: INFO     2022-10-23 23:49:16,364 [9482:HttpServer] tornado.access
okt 23 23:49:16 Desktop-Ubuntu mopidy[9482]:   200 GET /iris/assets/favicon.png (127.0.0.1) 0.76ms
okt 23 23:49:16 Desktop-Ubuntu mopidy[9482]: INFO     2022-10-23 23:49:16,335 [9482:HttpServer] tornado.access
okt 23 23:49:15 Desktop-Ubuntu mopidy[9482]:   200 GET /iris/app.min.js?v=1666559547 (127.0.0.1) 3.12ms
okt 23 23:49:15 Desktop-Ubuntu mopidy[9482]: INFO     2022-10-23 23:49:15,985 [9482:HttpServer] tornado.access
okt 23 23:49:15 Desktop-Ubuntu mopidy[9482]:   200 GET /iris/app.min.css?v=1666559547 (127.0.0.1) 2.04ms
okt 23 23:49:15 Desktop-Ubuntu mopidy[9482]: INFO     2022-10-23 23:49:15,981 [9482:HttpServer] tornado.access
okt 23 23:49:15 Desktop-Ubuntu mopidy[9482]:   200 GET /iris/assets/app-icon.svg (127.0.0.1) 0.74ms
okt 23 23:49:15 Desktop-Ubuntu mopidy[9482]: INFO     2022-10-23 23:49:15,923 [9482:HttpServer] tornado.access
okt 23 23:49:15 Desktop-Ubuntu mopidy[9482]:   {'method': 'connection_removed', 'params': {'connection': {'connection_id': 'FN1GY2HRO994', 'ip': '127.0.0.1', 'created': '2022-10-23 23:49:08', 'username': 166656148284185, 'client_id': 166656148284193}}}
okt 23 23:49:15 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:49:15,869 [9482:HttpServer] mopidy_iris.core
okt 23 23:49:15 Desktop-Ubuntu mopidy[9482]:   Closed WebSocket connection from 127.0.0.1
okt 23 23:49:15 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:49:15,869 [9482:HttpServer] mopidy.http.handlers
okt 23 23:49:15 Desktop-Ubuntu mopidy[9482]:   200 GET /iris/library/browse (127.0.0.1) 0.66ms
okt 23 23:49:15 Desktop-Ubuntu mopidy[9482]: INFO     2022-10-23 23:49:15,857 [9482:HttpServer] tornado.access
okt 23 23:49:12 Desktop-Ubuntu mopidy[9482]:   304 GET /iris/assets/backgrounds/browse-folders.jpg (127.0.0.1) 0.81ms
okt 23 23:49:12 Desktop-Ubuntu mopidy[9482]: INFO     2022-10-23 23:49:12,863 [9482:HttpServer] tornado.access
okt 23 23:49:12 Desktop-Ubuntu mopidy[9482]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 12, "result": [{"__model__": "Ref", "uri": "file:///var/lib/mopidy", "name": "Files", "type": "directory"}]}'
okt 23 23:49:12 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:49:12,785 [9482:HttpServer] mopidy.http.handlers
okt 23 23:49:12 Desktop-Ubuntu mopidy[9482]:   Received WebSocket message from 127.0.0.1: '{"method":"core.library.browse","params":{"uri":null},"jsonrpc":"2.0","id":12}'
okt 23 23:49:12 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:49:12,782 [9482:HttpServer] mopidy.http.handlers
okt 23 23:49:09 Desktop-Ubuntu mopidy[9482]:   {'id': 166656174937925, 'jsonrpc': '2.0', 'method': 'get_version', 'result': {'version': {'current': '3.64.1', 'latest': '3.64.1', 'is_root': False, 'upgrade_available': False}}, 'recipient': 'FN1GY2HRO994'}
okt 23 23:49:09 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:49:09,538 [9482:HttpServer] mopidy_iris.core
okt 23 23:49:09 Desktop-Ubuntu mopidy[9482]:   Iris websocket message received: {"jsonrpc":"2.0","id":166656174937925,"method":"get_version"}
okt 23 23:49:09 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:49:09,380 [9482:HttpServer] mopidy_iris.handlers
okt 23 23:49:09 Desktop-Ubuntu mopidy[9482]:   304 GET /iris/assets/favicon_paused.png (127.0.0.1) 0.67ms
okt 23 23:49:09 Desktop-Ubuntu mopidy[9482]: INFO     2022-10-23 23:49:09,117 [9482:HttpServer] tornado.access
okt 23 23:49:08 Desktop-Ubuntu mopidy[9482]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 11, "result": null}'
okt 23 23:49:08 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:49:08,976 [9482:HttpServer] mopidy.http.handlers
okt 23 23:49:08 Desktop-Ubuntu mopidy[9482]:   Received WebSocket message from 127.0.0.1: '{"method":"core.playback.get_stream_title","params":{},"jsonrpc":"2.0","id":11}'
okt 23 23:49:08 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:49:08,976 [9482:HttpServer] mopidy.http.handlers
okt 23 23:49:08 Desktop-Ubuntu mopidy[9482]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 10, "result": ["file", "http", "https", "m3u", "rtsp"]}'
okt 23 23:49:08 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:49:08,975 [9482:HttpServer] mopidy.http.handlers
okt 23 23:49:08 Desktop-Ubuntu mopidy[9482]:   Received WebSocket message from 127.0.0.1: '{"method":"core.get_uri_schemes","params":{},"jsonrpc":"2.0","id":10}'
okt 23 23:49:08 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:49:08,974 [9482:HttpServer] mopidy.http.handlers
okt 23 23:49:08 Desktop-Ubuntu mopidy[9482]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 9, "result": 0}'
okt 23 23:49:08 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:49:08,973 [9482:HttpServer] mopidy.http.handlers
okt 23 23:49:08 Desktop-Ubuntu mopidy[9482]:   Received WebSocket message from 127.0.0.1: '{"method":"core.playback.get_time_position","params":{},"jsonrpc":"2.0","id":9}'
okt 23 23:49:08 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:49:08,973 [9482:HttpServer] mopidy.http.handlers
okt 23 23:49:08 Desktop-Ubuntu mopidy[9482]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 8, "result": []}'
okt 23 23:49:08 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:49:08,972 [9482:HttpServer] mopidy.http.handlers
okt 23 23:49:08 Desktop-Ubuntu mopidy[9482]:   Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_tl_tracks","params":{},"jsonrpc":"2.0","id":8}'
okt 23 23:49:08 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:49:08,971 [9482:HttpServer] mopidy.http.handlers
okt 23 23:49:08 Desktop-Ubuntu mopidy[9482]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 7, "result": false}'
okt 23 23:49:08 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:49:08,970 [9482:HttpServer] mopidy.http.handlers
okt 23 23:49:08 Desktop-Ubuntu mopidy[9482]:   Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_repeat","params":{},"jsonrpc":"2.0","id":7}'
okt 23 23:49:08 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:49:08,970 [9482:HttpServer] mopidy.http.handlers
okt 23 23:49:08 Desktop-Ubuntu mopidy[9482]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 6, "result": false}'
okt 23 23:49:08 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:49:08,966 [9482:HttpServer] mopidy.http.handlers
okt 23 23:49:08 Desktop-Ubuntu mopidy[9482]:   Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_random","params":{},"jsonrpc":"2.0","id":6}'
okt 23 23:49:08 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:49:08,966 [9482:HttpServer] mopidy.http.handlers
okt 23 23:49:08 Desktop-Ubuntu mopidy[9482]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 5, "result": false}'
okt 23 23:49:08 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:49:08,965 [9482:HttpServer] mopidy.http.handlers
okt 23 23:49:08 Desktop-Ubuntu mopidy[9482]:   Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_consume","params":{},"jsonrpc":"2.0","id":5}'
okt 23 23:49:08 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:49:08,965 [9482:HttpServer] mopidy.http.handlers
okt 23 23:49:08 Desktop-Ubuntu mopidy[9482]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 4, "result": false}'
okt 23 23:49:08 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:49:08,964 [9482:HttpServer] mopidy.http.handlers
okt 23 23:49:08 Desktop-Ubuntu mopidy[9482]:   Received WebSocket message from 127.0.0.1: '{"method":"core.mixer.get_mute","params":{},"jsonrpc":"2.0","id":4}'
okt 23 23:49:08 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:49:08,963 [9482:HttpServer] mopidy.http.handlers
okt 23 23:49:08 Desktop-Ubuntu mopidy[9482]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 3, "result": 100}'
okt 23 23:49:08 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:49:08,959 [9482:HttpServer] mopidy.http.handlers
okt 23 23:49:08 Desktop-Ubuntu mopidy[9482]:   Received WebSocket message from 127.0.0.1: '{"method":"core.mixer.get_volume","params":{},"jsonrpc":"2.0","id":3}'
okt 23 23:49:08 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:49:08,958 [9482:HttpServer] mopidy.http.handlers
okt 23 23:49:08 Desktop-Ubuntu mopidy[9482]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 2, "result": "stopped"}'
okt 23 23:49:08 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:49:08,957 [9482:HttpServer] mopidy.http.handlers
okt 23 23:49:08 Desktop-Ubuntu mopidy[9482]:   Received WebSocket message from 127.0.0.1: '{"method":"core.playback.get_state","params":{},"jsonrpc":"2.0","id":2}'
okt 23 23:49:08 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:49:08,957 [9482:HttpServer] mopidy.http.handlers
okt 23 23:49:08 Desktop-Ubuntu mopidy[9482]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 1, "result": null}'
okt 23 23:49:08 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:49:08,956 [9482:HttpServer] mopidy.http.handlers
okt 23 23:49:08 Desktop-Ubuntu mopidy[9482]:   Received WebSocket message from 127.0.0.1: '{"method":"core.playback.get_current_tl_track","params":{},"jsonrpc":"2.0","id":1}'
okt 23 23:49:08 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:49:08,955 [9482:HttpServer] mopidy.http.handlers
okt 23 23:49:08 Desktop-Ubuntu mopidy[9482]:   {'id': 166656174887769, 'jsonrpc': '2.0', 'method': 'get_queue_metadata', 'result': {'queue_metadata': {}}, 'recipient': 'FN1GY2HRO994'}
okt 23 23:49:08 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:49:08,878 [9482:HttpServer] mopidy_iris.core
okt 23 23:49:08 Desktop-Ubuntu mopidy[9482]:   Iris websocket message received: {"jsonrpc":"2.0","id":166656174887769,"method":"get_queue_metadata"}
okt 23 23:49:08 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:49:08,878 [9482:HttpServer] mopidy_iris.handlers
okt 23 23:49:08 Desktop-Ubuntu mopidy[9482]:   {'id': 166656174887525, 'jsonrpc': '2.0', 'method': 'get_pinned', 'result': {'pinned': []}, 'recipient': 'FN1GY2HRO994'}
okt 23 23:49:08 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:49:08,876 [9482:HttpServer] mopidy_iris.core
okt 23 23:49:08 Desktop-Ubuntu mopidy[9482]:   Iris websocket message received: {"jsonrpc":"2.0","id":166656174887525,"method":"get_pinned"}
okt 23 23:49:08 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:49:08,875 [9482:HttpServer] mopidy_iris.handlers
okt 23 23:49:08 Desktop-Ubuntu mopidy[9482]:   {'id': 166656174887225, 'jsonrpc': '2.0', 'method': 'get_commands', 'result': {'commands': {}}, 'recipient': 'FN1GY2HRO994'}
okt 23 23:49:08 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:49:08,873 [9482:HttpServer] mopidy_iris.core
okt 23 23:49:08 Desktop-Ubuntu mopidy[9482]:   Iris websocket message received: {"jsonrpc":"2.0","id":166656174887225,"method":"get_commands"}
okt 23 23:49:08 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:49:08,873 [9482:HttpServer] mopidy_iris.handlers
okt 23 23:49:08 Desktop-Ubuntu mopidy[9482]:   {'id': 16665617488705, 'jsonrpc': '2.0', 'method': 'get_radio', 'result': {'radio': {'enabled': 0, 'seed_artists': [], 'seed_genres': [], 'seed_tracks': [], 'results': []}}, 'recipient': 'FN1GY2HRO994'}
okt 23 23:49:08 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:49:08,872 [9482:HttpServer] mopidy_iris.core
okt 23 23:49:08 Desktop-Ubuntu mopidy[9482]:   Iris websocket message received: {"jsonrpc":"2.0","id":16665617488705,"method":"get_radio"}
okt 23 23:49:08 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:49:08,871 [9482:HttpServer] mopidy_iris.handlers
okt 23 23:49:08 Desktop-Ubuntu mopidy[9482]:   {'id': 166656174886879, 'jsonrpc': '2.0', 'method': 'get_shared_config', 'result': {'shared_config': {}}, 'recipient': 'FN1GY2HRO994'}
okt 23 23:49:08 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:49:08,871 [9482:HttpServer] mopidy_iris.core
okt 23 23:49:08 Desktop-Ubuntu mopidy[9482]:   Iris websocket message received: {"jsonrpc":"2.0","id":166656174886879,"method":"get_shared_config"}
okt 23 23:49:08 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:49:08,870 [9482:HttpServer] mopidy_iris.handlers
okt 23 23:49:08 Desktop-Ubuntu mopidy[9482]:   {'id': 166656174886689, 'jsonrpc': '2.0', 'method': 'get_config', 'result': {'config': {'is_root': False, 'spotify_username': False, 'country': 'NZ', 'locale': 'en_NZ', 'snapcast_enabled': True, 'snapcast_host': 'localhost', 'snapcast_port': '1780', 'snapcast_ssl': False, 'snapcast_stream': 'Default', 'spotify_authorization_url': 'https://jamesbarnsley.co.nz/iris/auth_spotify.php', 'lastfm_authorization_url': 'https://jamesbarnsley.co.nz/iris/auth_lastfm.php', 'genius_authorization_url': 'https://jamesbarnsley.co.nz/iris/auth_genius.php', 'shared_config': {}}}, 'recipient': 'FN1GY2HRO994'}
okt 23 23:49:08 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:49:08,868 [9482:HttpServer] mopidy_iris.core
okt 23 23:49:08 Desktop-Ubuntu mopidy[9482]:   Iris websocket message received: {"jsonrpc":"2.0","id":166656174886689,"method":"get_config"}
okt 23 23:49:08 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:49:08,868 [9482:HttpServer] mopidy_iris.handlers
okt 23 23:49:08 Desktop-Ubuntu mopidy[9482]:   {'id': 166656174886389, 'jsonrpc': '2.0', 'method': 'update_connection', 'result': {'connection': {'connection_id': 'FN1GY2HRO994', 'ip': '127.0.0.1', 'created': '2022-10-23 23:49:08', 'username': 166656148284185, 'client_id': 166656148284193}}, 'recipient': 'FN1GY2HRO994'}
okt 23 23:49:08 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:49:08,865 [9482:HttpServer] mopidy_iris.core
okt 23 23:49:08 Desktop-Ubuntu mopidy[9482]:   {'method': 'connection_changed', 'params': {'connection': {'connection_id': 'FN1GY2HRO994', 'ip': '127.0.0.1', 'created': '2022-10-23 23:49:08', 'username': 166656148284185, 'client_id': 166656148284193}}}
okt 23 23:49:08 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:49:08,864 [9482:HttpServer] mopidy_iris.core
okt 23 23:49:08 Desktop-Ubuntu mopidy[9482]:   Iris websocket message received: {"jsonrpc":"2.0","id":166656174886389,"method":"update_connection","params":{"username":166656148284185,"client_id":166656148284193}}
okt 23 23:49:08 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:49:08,864 [9482:HttpServer] mopidy_iris.handlers
okt 23 23:49:08 Desktop-Ubuntu mopidy[9482]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 0, "result": {"core.get_uri_schemes": {"description": "Get list of URI schemes we can handle", "params": []}, "core.get_version": {"description": "Get version of the Mopidy core API", "params": []}, "core.history.get_history": {"description": "Get the track history.\\n\\nThe timestamps are milliseconds since epoch.\\n\\n:returns: the track history\\n:rtype: list of (timestamp, :class:`mopidy.models.Ref`) tuples", "params": []}, "core.history.get_length": {"description": "Get the number of tracks in the history.\\n\\n:returns: the history length\\n:rtype: int", "params": []}, "core.library.browse": {"description": "Browse directories and tracks at the given ``uri``.\\n\\n``uri`` is a string which represents some directory belonging to a\\nbackend. To get the intial root directories for backends pass\\n:class:`None` as the URI.\\n\\nReturns a list of :class:`mopidy.models.Ref` objects for the\\ndirectories and tracks at the given ``uri``.\\n\\nThe :class:`~mopidy.models.Ref` objects representing tracks keep the\\ntrack\'s original URI. A matching pair of objects can look like this::\\n\\n    Track(uri=\'dummy:/foo.mp3\', name=\'foo\', artists=..., album=...)\\n    Ref.track(uri=\'dummy:/foo.mp3\', name=\'foo\')\\n\\nThe :class:`~mopidy.models.Ref` objects representing directories have\\nbackend specific URIs. These are opaque values, so no one but the\\nbackend that created them should try and derive any meaning from them.\\nThe only valid exception to this is checking the scheme, as it is used\\nto route browse requests to the correct backend.\\n\\nFor example, the dummy library\'s ``/bar`` directory could be returned\\nlike this::\\n\\n    Ref.directory(uri=\'dummy:directory:/bar\', name=\'bar\')\\n\\n:param string uri: URI to browse\\n:rtype: list of :class:`mopidy.models.Ref`\\n\\n.. versionadded:: 0.18", "params": [{"name": "uri"}]}, "core.library.get_distinct": {"description": "List distinct values for a given field from the library.\\n\\nThis has mainly been added to support the list commands the MPD\\nprotocol supports in a more sane fashion. Other frontends are not\\nrecommended to use this method.\\n\\n:param string field: Any one of ``uri``, ``track_name``, ``album``,\\n    ``artist``, ``albumartist``, ``composer``, ``performer``,\\n    ``track_no``, ``genre``, ``date``, ``comment``, ``disc_no``,\\n    ``musicbrainz_albumid``, ``musicbrainz_artistid``, or\\n    ``musicbrainz_trackid``.\\n:param dict query: Query to use for limiting results, see\\n    :meth:`search` for details about the query format.\\n:rtype: set of values corresponding to the requested field type.\\n\\n.. versionadded:: 1.0", "params": [{"name": "field"}, {"name": "query", "default": null}]}, "core.library.get_images": {"description": "Lookup the images for the given URIs\\n\\nBackends can use this to return image URIs for any URI they know about\\nbe it tracks, albums, playlists. The lookup result is a dictionary\\nmapping the provided URIs to lists of images.\\n\\nUnknown URIs or URIs the corresponding backend couldn\'t find anything\\nfor will simply return an empty list for that URI.\\n\\n:param uris: list of URIs to find images for\\n:type uris: list of string\\n:rtype: {uri: tuple of :class:`mopidy.models.Image`}\\n\\n.. versionadded:: 1.0", "params": [{"name": "uris"}]}, "core.library.lookup": {"description": "Lookup the given URIs.\\n\\nIf the URI expands to multiple tracks, the returned list will contain\\nthem all.\\n\\n:param uris: track URIs\\n:type uris: list of string\\n:rtype: {uri: list of :class:`mopidy.models.Track`}", "params": [{"name": "uris"}]}, "core.library.refresh": {"description": "Refresh library. Limit to URI and below if an URI is given.\\n\\n:param uri: directory or track URI\\n:type uri: string", "params": [{"name": "uri", "default": null}]}, "core.library.search": {"description": "Search the library for tracks where ``field`` contains ``values``.\\n\\n``field`` can be one of ``uri``, ``track_name``, ``album``, ``artist``,\\n``albumartist``, ``composer``, ``performer``, ``track_no``, ``genre``,\\n``date``, ``comment``, ``disc_no``, ``musicbrainz_albumid``,\\n``musicbrainz_artistid``, ``musicbrainz_trackid`` or ``any``.\\n\\nIf ``uris`` is given, the search is limited to results from within the\\nURI roots. For example passing ``uris=[\'file:\']`` will limit the search\\nto the local backend.\\n\\nExamples::\\n\\n    # Returns results matching \'a\' in any backend\\n    search({\'any\': [\'a\']})\\n\\n    # Returns results matching artist \'xyz\' in any backend\\n    search({\'artist\': [\'xyz\']})\\n\\n    # Returns results matching \'a\' and \'b\' and artist \'xyz\' in any\\n    # backend\\n    search({\'any\': [\'a\', \'b\'], \'artist\': [\'xyz\']})\\n\\n    # Returns results matching \'a\' if within the given URI roots\\n    # \\"file:///media/music\\" and \\"spotify:\\"\\n    search({\'any\': [\'a\']}, uris=[\'file:///media/music\', \'spotify:\'])\\n\\n    # Returns results matching artist \'xyz\' and \'abc\' in any backend\\n    search({\'artist\': [\'xyz\', \'abc\']})\\n\\n:param query: one or more queries to search for\\n:type query: dict\\n:param uris: zero or more URI roots to limit the search to\\n:type uris: list of string or :class:`None`\\n:param exact: if the search should use exact matching\\n:type exact: :class:`bool`\\n:rtype: list of :class:`mopidy.models.SearchResult`\\n\\n.. versionadded:: 1.0\\n    The ``exact`` keyword argument.", "params": [{"name": "query"}, {"name": "uris", "default": null}, {"name": "exact", "default": false}]}, "core.mixer.get_mute": {"description": "Get mute state.\\n\\n:class:`True` if muted, :class:`False` unmuted, :class:`None` if\\nunknown.", "params": []}, "core.mixer.get_volume": {"description": "Get the volume.\\n\\nInteger in range [0..100] or :class:`None` if unknown.\\n\\nThe volume scale is linear.", "params": []}, "core.mixer.set_mute": {"description": "Set mute state.\\n\\n:class:`True` to mute, :class:`False` to unmute.\\n\\nReturns :class:`True` if call is successful, otherwise :class:`False`.", "params": [{"name": "mute"}]}, "core.mixer.set_volume": {"description": "Set the volume.\\n\\nThe volume is defined as an integer in range [0..100].\\n\\nThe volume scale is linear.\\n\\nReturns :class:`True` if call is successful, otherwise :class:`False`.", "params": [{"name": "volume"}]}, "core.playback.get_current_tl_track": {"description": "Get the currently playing or selected track.\\n\\nReturns a :class:`mopidy.models.TlTrack` or :class:`None`.", "params": []}, "core.playback.get_current_tlid": {"description": "Get the currently playing or selected TLID.\\n\\nExtracted from :meth:`get_current_tl_track` for convenience.\\n\\nReturns a :class:`int` or :class:`None`.\\n\\n.. versionadded:: 1.1", "params": []}, "core.playback.get_current_track": {"description": "Get the currently playing or selected track.\\n\\nExtracted from :meth:`get_current_tl_track` for convenience.\\n\\nReturns a :class:`mopidy.models.Track` or :class:`None`.", "params": []}, "core.playback.get_state": {"description": "Get The playback state.", "params": []}, "core.playback.get_stream_title": {"description": "Get the current stream title or :class:`None`.", "params": []}, "core.playback.get_time_position": {"description": "Get time position in milliseconds.", "params": []}, "core.playback.next": {"description": "Change to the next track.\\n\\nThe current playback state will be kept. If it was playing, playing\\nwill continue. If it was paused, it will still be paused, etc.", "params": []}, "core.playback.pause": {"description": "Pause playback.", "params": []}, "core.playback.play": {"description": "Play the given track, or if the given tl_track and tlid is\\n:class:`None`, play the currently active track.\\n\\nNote that the track **must** already be in the tracklist.\\n\\n.. deprecated:: 3.0\\n    The ``tl_track`` argument. Use ``tlid`` instead.\\n\\n:param tl_track: track to play\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:param tlid: TLID of the track to play\\n:type tlid: :class:`int` or :class:`None`", "params": [{"name": "tl_track", "default": null}, {"name": "tlid", "default": null}]}, "core.playback.previous": {"description": "Change to the previous track.\\n\\nThe current playback state will be kept. If it was playing, playing\\nwill continue. If it was paused, it will still be paused, etc.", "params": []}, "core.playback.resume": {"description": "If paused, resume playing the current track.", "params": []}, "core.playback.seek": {"description": "Seeks to time position given in milliseconds.\\n\\n:param time_position: time position in milliseconds\\n:type time_position: int\\n:rtype: :class:`True` if successful, else :class:`False`", "params": [{"name": "time_position"}]}, "core.playback.set_state": {"description": "Set the playback state.\\n\\nMust be :attr:`PLAYING`, :attr:`PAUSED`, or :attr:`STOPPED`.\\n\\nPossible states and transitions:\\n\\n.. digraph:: state_transitions\\n\\n    \\"STOPPED\\" -> \\"PLAYING\\" [ label=\\"play\\" ]\\n    \\"STOPPED\\" -> \\"PAUSED\\" [ label=\\"pause\\" ]\\n    \\"PLAYING\\" -> \\"STOPPED\\" [ label=\\"stop\\" ]\\n    \\"PLAYING\\" -> \\"PAUSED\\" [ label=\\"pause\\" ]\\n    \\"PLAYING\\" -> \\"PLAYING\\" [ label=\\"play\\" ]\\n    \\"PAUSED\\" -> \\"PLAYING\\" [ label=\\"resume\\" ]\\n    \\"PAUSED\\" -> \\"STOPPED\\" [ label=\\"stop\\" ]", "params": [{"name": "new_state"}]}, "core.playback.stop": {"description": "Stop playing.", "params": []}, "core.playlists.as_list": {"description": "Get a list of the currently available playlists.\\n\\nReturns a list of :class:`~mopidy.models.Ref` objects referring to the\\nplaylists. In other words, no information about the playlists\' content\\nis given.\\n\\n:rtype: list of :class:`mopidy.models.Ref`\\n\\n.. versionadded:: 1.0", "params": []}, "core.playlists.create": {"description": "Create a new playlist.\\n\\nIf ``uri_scheme`` matches an URI scheme handled by a current backend,\\nthat backend is asked to create the playlist. If ``uri_scheme`` is\\n:class:`None` or doesn\'t match a current backend, the first backend is\\nasked to create the playlist.\\n\\nAll new playlists must be created by calling this method, and **not**\\nby creating new instances of :class:`mopidy.models.Playlist`.\\n\\n:param name: name of the new playlist\\n:type name: string\\n:param uri_scheme: use the backend matching the URI scheme\\n:type uri_scheme: string\\n:rtype: :class:`mopidy.models.Playlist` or :class:`None`", "params": [{"name": "name"}, {"name": "uri_scheme", "default": null}]}, "core.playlists.delete": {"description": "Delete playlist identified by the URI.\\n\\nIf the URI doesn\'t match the URI schemes handled by the current\\nbackends, nothing happens.\\n\\nReturns :class:`True` if deleted, :class:`False` otherwise.\\n\\n:param uri: URI of the playlist to delete\\n:type uri: string\\n:rtype: :class:`bool`\\n\\n.. versionchanged:: 2.2\\n    Return type defined.", "params": [{"name": "uri"}]}, "core.playlists.get_items": {"description": "Get the items in a playlist specified by ``uri``.\\n\\nReturns a list of :class:`~mopidy.models.Ref` objects referring to the\\nplaylist\'s items.\\n\\nIf a playlist with the given ``uri`` doesn\'t exist, it returns\\n:class:`None`.\\n\\n:rtype: list of :class:`mopidy.models.Ref`, or :class:`None`\\n\\n.. versionadded:: 1.0", "params": [{"name": "uri"}]}, "core.playlists.get_uri_schemes": {"description": "Get the list of URI schemes that support playlists.\\n\\n:rtype: list of string\\n\\n.. versionadded:: 2.0", "params": []}, "core.playlists.lookup": {"description": "Lookup playlist with given URI in both the set of playlists and in any\\nother playlist sources. Returns :class:`None` if not found.\\n\\n:param uri: playlist URI\\n:type uri: string\\n:rtype: :class:`mopidy.models.Playlist` or :class:`None`", "params": [{"name": "uri"}]}, "core.playlists.refresh": {"description": "Refresh the playlists in :attr:`playlists`.\\n\\nIf ``uri_scheme`` is :class:`None`, all backends are asked to refresh.\\nIf ``uri_scheme`` is an URI scheme handled by a backend, only that\\nbackend is asked to refresh. If ``uri_scheme`` doesn\'t match any\\ncurrent backend, nothing happens.\\n\\n:param uri_scheme: limit to the backend matching the URI scheme\\n:type uri_scheme: string", "params": [{"name": "uri_scheme", "default": null}]}, "core.playlists.save": {"description": "Save the playlist.\\n\\nFor a playlist to be saveable, it must have the ``uri`` attribute set.\\nYou must not set the ``uri`` atribute yourself, but use playlist\\nobjects returned by :meth:`create` or retrieved from :attr:`playlists`,\\nwhich will always give you saveable playlists.\\n\\nThe method returns the saved playlist. The return playlist may differ\\nfrom the saved playlist. E.g. if the playlist name was changed, the\\nreturned playlist may have a different URI. The caller of this method\\nmust throw away the playlist sent to this method, and use the\\nreturned playlist instead.\\n\\nIf the playlist\'s URI isn\'t set or doesn\'t match the URI scheme of a\\ncurrent backend, nothing is done and :class:`None` is returned.\\n\\n:param playlist: the playlist\\n:type playlist: :class:`mopidy.models.Playlist`\\n:rtype: :class:`mopidy.models.Playlist` or :class:`None`", "params": [{"name": "playlist"}]}, "core.tracklist.add": {"description": "Add tracks to the tracklist.\\n\\nIf ``uris`` is given instead of ``tracks``, the URIs are\\nlooked up in the library and the resulting tracks are added to the\\ntracklist.\\n\\nIf ``at_position`` is given, the tracks are inserted at the given\\nposition in the tracklist. If ``at_position`` is not given, the tracks\\nare appended to the end of the tracklist.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.\\n\\n:param tracks: tracks to add\\n:type tracks: list of :class:`mopidy.models.Track` or :class:`None`\\n:param at_position: position in tracklist to add tracks\\n:type at_position: int or :class:`None`\\n:param uris: list of URIs for tracks to add\\n:type uris: list of string or :class:`None`\\n:rtype: list of :class:`mopidy.models.TlTrack`\\n\\n.. versionadded:: 1.0\\n    The ``uris`` argument.\\n\\n.. deprecated:: 1.0\\n    The ``tracks`` argument. Use ``uris``.", "params": [{"name": "tracks", "default": null}, {"name": "at_position", "default": null}, {"name": "uris", "default": null}]}, "core.tracklist.clear": {"description": "Clear the tracklist.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.", "params": []}, "core.tracklist.eot_track": {"description": "The track that will be played after the given track.\\n\\nNot necessarily the same track as :meth:`next_track`.\\n\\n.. deprecated:: 3.0\\n    Use :meth:`get_eot_tlid` instead.\\n\\n:param tl_track: the reference track\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:rtype: :class:`mopidy.models.TlTrack` or :class:`None`", "params": [{"name": "tl_track"}]}, "core.tracklist.filter": {"description": "Filter the tracklist by the given criteria.\\n\\nEach rule in the criteria consists of a model field and a list of\\nvalues to compare it against. If the model field matches any of the\\nvalues, it may be returned.\\n\\nOnly tracks that match all the given criteria are returned.\\n\\nExamples::\\n\\n    # Returns tracks with TLIDs 1, 2, 3, or 4 (tracklist ID)\\n    filter({\'tlid\': [1, 2, 3, 4]})\\n\\n    # Returns track with URIs \'xyz\' or \'abc\'\\n    filter({\'uri\': [\'xyz\', \'abc\']})\\n\\n    # Returns track with a matching TLIDs (1, 3 or 6) and a\\n    # matching URI (\'xyz\' or \'abc\')\\n    filter({\'tlid\': [1, 3, 6], \'uri\': [\'xyz\', \'abc\']})\\n\\n:param criteria: one or more rules to match by\\n:type criteria: dict, of (string, list) pairs\\n:rtype: list of :class:`mopidy.models.TlTrack`", "params": [{"name": "criteria"}]}, "core.tracklist.get_consume": {"description": "Get consume mode.\\n\\n:class:`True`\\n    Tracks are removed from the tracklist when they have been played.\\n:class:`False`\\n    Tracks are not removed from the tracklist.", "params": []}, "core.tracklist.get_eot_tlid": {"description": "The TLID of the track that will be played after the current track.\\n\\nNot necessarily the same TLID as returned by :meth:`get_next_tlid`.\\n\\n:rtype: :class:`int` or :class:`None`\\n\\n.. versionadded:: 1.1", "params": []}, "core.tracklist.get_length": {"description": "Get length of the tracklist.", "params": []}, "core.tracklist.get_next_tlid": {"description": "The tlid of the track that will be played if calling\\n:meth:`mopidy.core.PlaybackController.next()`.\\n\\nFor normal playback this is the next track in the tracklist. If repeat\\nis enabled the next track can loop around the tracklist. When random is\\nenabled this should be a random track, all tracks should be played once\\nbefore the tracklist repeats.\\n\\n:rtype: :class:`int` or :class:`None`\\n\\n.. versionadded:: 1.1", "params": []}, "core.tracklist.get_previous_tlid": {"description": "Returns the TLID of the track that will be played if calling\\n:meth:`mopidy.core.PlaybackController.previous()`.\\n\\nFor normal playback this is the previous track in the tracklist. If\\nrandom and/or consume is enabled it should return the current track\\ninstead.\\n\\n:rtype: :class:`int` or :class:`None`\\n\\n.. versionadded:: 1.1", "params": []}, "core.tracklist.get_random": {"description": "Get random mode.\\n\\n:class:`True`\\n    Tracks are selected at random from the tracklist.\\n:class:`False`\\n    Tracks are played in the order of the tracklist.", "params": []}, "core.tracklist.get_repeat": {"description": "Get repeat mode.\\n\\n:class:`True`\\n    The tracklist is played repeatedly.\\n:class:`False`\\n    The tracklist is played once.", "params": []}, "core.tracklist.get_single": {"description": "Get single mode.\\n\\n:class:`True`\\n    Playback is stopped after current song, unless in ``repeat`` mode.\\n:class:`False`\\n    Playback continues after current song.", "params": []}, "core.tracklist.get_tl_tracks": {"description": "Get tracklist as list of :class:`mopidy.models.TlTrack`.", "params": []}, "core.tracklist.get_tracks": {"description": "Get tracklist as list of :class:`mopidy.models.Track`.", "params": []}, "core.tracklist.get_version": {"description": "Get the tracklist version.\\n\\nInteger which is increased every time the tracklist is changed. Is not\\nreset before Mopidy is restarted.", "params": []}, "core.tracklist.index": {"description": "The position of the given track in the tracklist.\\n\\nIf neither *tl_track* or *tlid* is given we return the index of\\nthe currently playing track.\\n\\n:param tl_track: the track to find the index of\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:param tlid: TLID of the track to find the index of\\n:type tlid: :class:`int` or :class:`None`\\n:rtype: :class:`int` or :class:`None`\\n\\n.. versionadded:: 1.1\\n    The *tlid* parameter", "params": [{"name": "tl_track", "default": null}, {"name": "tlid", "default": null}]}, "core.tracklist.move": {"description": "Move the tracks in the slice ``[start:end]`` to ``to_position``.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.\\n\\n:param start: position of first track to move\\n:type start: int\\n:param end: position after last track to move\\n:type end: int\\n:param to_position: new position for the tracks\\n:type to_position: int", "params": [{"name": "start"}, {"name": "end"}, {"name": "to_position"}]}, "core.tracklist.next_track": {"description": "The track that will be played if calling\\n:meth:`mopidy.core.PlaybackController.next()`.\\n\\nFor normal playback this is the next track in the tracklist. If repeat\\nis enabled the next track can loop around the tracklist. When random is\\nenabled this should be a random track, all tracks should be played once\\nbefore the tracklist repeats.\\n\\n.. deprecated:: 3.0\\n    Use :meth:`get_next_tlid` instead.\\n\\n:param tl_track: the reference track\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:rtype: :class:`mopidy.models.TlTrack` or :class:`None`", "params": [{"name": "tl_track"}]}, "core.tracklist.previous_track": {"description": "Returns the track that will be played if calling\\n:meth:`mopidy.core.PlaybackController.previous()`.\\n\\nFor normal playback this is the previous track in the tracklist. If\\nrandom and/or consume is enabled it should return the current track\\ninstead.\\n\\n.. deprecated:: 3.0\\n    Use :meth:`get_previous_tlid` instead.\\n\\n:param tl_track: the reference track\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:rtype: :class:`mopidy.models.TlTrack` or :class:`None`", "params": [{"name": "tl_track"}]}, "core.tracklist.remove": {"description": "Remove the matching tracks from the tracklist.\\n\\nUses :meth:`filter()` to lookup the tracks to remove.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.\\n\\n:param criteria: one or more rules to match by\\n:type criteria: dict, of (string, list) pairs\\n:rtype: list of :class:`mopidy.models.TlTrack` that were removed", "params": [{"name": "criteria"}]}, "core.tracklist.set_consume": {"description": "Set consume mode.\\n\\n:class:`True`\\n    Tracks are removed from the tracklist when they have been played.\\n:class:`False`\\n    Tracks are not removed from the tracklist.", "params": [{"name": "value"}]}, "core.tracklist.set_random": {"description": "Set random mode.\\n\\n:class:`True`\\n    Tracks are selected at random from the tracklist.\\n:class:`False`\\n    Tracks are played in the order of the tracklist.", "params": [{"name": "value"}]}, "core.tracklist.set_repeat": {"description": "Set repeat mode.\\n\\nTo repeat a single track, set both ``repeat`` and ``single``.\\n\\n:class:`True`\\n    The tracklist is played repeatedly.\\n:class:`False`\\n    The tracklist is played once.", "params": [{"name": "value"}]}, "core.tracklist.set_single": {"description": "Set single mode.\\n\\n:class:`True`\\n    Playback is stopped after current song, unless in ``repeat`` mode.\\n:class:`False`\\n    Playback continues after current song.", "params": [{"name": "value"}]}, "core.tracklist.shuffle": {"description": "Shuffles the entire tracklist. If ``start`` and ``end`` is given only\\nshuffles the slice ``[start:end]``.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.\\n\\n:param start: position of first track to shuffle\\n:type start: int or :class:`None`\\n:param end: position after last track to shuffle\\n:type end: int or :class:`None`", "params": [{"name": "start", "default": null}, {"name": "end", "default": null}]}, "core.tracklist.slice": {"description": "Returns a slice of the tracklist, limited by the given start and end\\npositions.\\n\\n:param start: position of first track to include in slice\\n:type start: int\\n:param end: position after last track to include in slice\\n:type end: int\\n:rtype: :class:`mopidy.models.TlTrack`", "params": [{"name": "start"}, {"name": "end"}]}}}'
okt 23 23:49:08 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:49:08,863 [9482:HttpServer] mopidy.http.handlers
okt 23 23:49:08 Desktop-Ubuntu mopidy[9482]:   Received WebSocket message from 127.0.0.1: '{"method":"core.describe","jsonrpc":"2.0","id":0}'
okt 23 23:49:08 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:49:08,859 [9482:HttpServer] mopidy.http.handlers
okt 23 23:49:08 Desktop-Ubuntu mopidy[9482]:   {'method': 'connection_added', 'params': {'connection': {'connection_id': 'FN1GY2HRO994', 'ip': '127.0.0.1', 'created': '2022-10-23 23:49:08'}}}
okt 23 23:49:08 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:49:08,808 [9482:HttpServer] mopidy_iris.core
okt 23 23:49:08 Desktop-Ubuntu mopidy[9482]:   <mopidy_iris.handlers.WebsocketHandler object at 0x7f8ed84c3700>
okt 23 23:49:08 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:49:08,808 [9482:HttpServer] mopidy_iris.core
okt 23 23:49:08 Desktop-Ubuntu mopidy[9482]:   Connection added
okt 23 23:49:08 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:49:08,808 [9482:HttpServer] mopidy_iris.core
okt 23 23:49:08 Desktop-Ubuntu mopidy[9482]:   101 GET /iris/ws/ (127.0.0.1) 0.44ms
okt 23 23:49:08 Desktop-Ubuntu mopidy[9482]: INFO     2022-10-23 23:49:08,808 [9482:HttpServer] tornado.access
okt 23 23:49:08 Desktop-Ubuntu mopidy[9482]:   New WebSocket connection from 127.0.0.1
okt 23 23:49:08 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:49:08,797 [9482:HttpServer] mopidy.http.handlers
okt 23 23:49:08 Desktop-Ubuntu mopidy[9482]:   101 GET /mopidy/ws/ (127.0.0.1) 0.59ms
okt 23 23:49:08 Desktop-Ubuntu mopidy[9482]: INFO     2022-10-23 23:49:08,796 [9482:HttpServer] tornado.access
okt 23 23:49:08 Desktop-Ubuntu mopidy[9482]:   304 GET /iris/assets/app-icon_192.png (127.0.0.1) 0.68ms
okt 23 23:49:08 Desktop-Ubuntu mopidy[9482]: INFO     2022-10-23 23:49:08,704 [9482:HttpServer] tornado.access
okt 23 23:49:08 Desktop-Ubuntu mopidy[9482]:   304 GET /iris/null (127.0.0.1) 0.57ms
okt 23 23:49:08 Desktop-Ubuntu mopidy[9482]: INFO     2022-10-23 23:49:08,469 [9482:HttpServer] tornado.access
okt 23 23:49:08 Desktop-Ubuntu mopidy[9482]:   304 GET /iris/manifest.json (127.0.0.1) 0.75ms
okt 23 23:49:08 Desktop-Ubuntu mopidy[9482]: INFO     2022-10-23 23:49:08,432 [9482:HttpServer] tornado.access
okt 23 23:49:08 Desktop-Ubuntu mopidy[9482]:   200 GET /iris/assets/favicon.png (127.0.0.1) 0.80ms
okt 23 23:49:08 Desktop-Ubuntu mopidy[9482]: INFO     2022-10-23 23:49:08,424 [9482:HttpServer] tornado.access
okt 23 23:49:07 Desktop-Ubuntu mopidy[9482]:   200 GET /iris/app.min.js?v=1666559547 (127.0.0.1) 11.81ms
okt 23 23:49:07 Desktop-Ubuntu mopidy[9482]: INFO     2022-10-23 23:49:07,805 [9482:HttpServer] tornado.access
okt 23 23:49:07 Desktop-Ubuntu mopidy[9482]:   200 GET /iris/app.min.css?v=1666559547 (127.0.0.1) 5.51ms
okt 23 23:49:07 Desktop-Ubuntu mopidy[9482]: INFO     2022-10-23 23:49:07,793 [9482:HttpServer] tornado.access
okt 23 23:49:07 Desktop-Ubuntu mopidy[9482]:   200 GET /iris/assets/app-icon.svg (127.0.0.1) 0.73ms
okt 23 23:49:07 Desktop-Ubuntu mopidy[9482]: INFO     2022-10-23 23:49:07,636 [9482:HttpServer] tornado.access
okt 23 23:49:07 Desktop-Ubuntu mopidy[9482]:   {'method': 'connection_removed', 'params': {'connection': {'connection_id': 'YKCJ4KAC6WUN', 'ip': '127.0.0.1', 'created': '2022-10-23 23:49:07', 'username': 166656148284185, 'client_id': 166656148284193}}}
okt 23 23:49:07 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:49:07,594 [9482:HttpServer] mopidy_iris.core
okt 23 23:49:07 Desktop-Ubuntu mopidy[9482]:   Closed WebSocket connection from 127.0.0.1
okt 23 23:49:07 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:49:07,591 [9482:HttpServer] mopidy.http.handlers
okt 23 23:49:07 Desktop-Ubuntu mopidy[9482]:   200 GET /iris/search (127.0.0.1) 5.51ms
okt 23 23:49:07 Desktop-Ubuntu mopidy[9482]: INFO     2022-10-23 23:49:07,568 [9482:HttpServer] tornado.access
okt 23 23:49:07 Desktop-Ubuntu mopidy[9482]:   {'id': 166656174711988, 'jsonrpc': '2.0', 'method': 'get_queue_metadata', 'result': {'queue_metadata': {}}, 'recipient': 'YKCJ4KAC6WUN'}
okt 23 23:49:07 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:49:07,119 [9482:HttpServer] mopidy_iris.core
okt 23 23:49:07 Desktop-Ubuntu mopidy[9482]:   Iris websocket message received: {"jsonrpc":"2.0","id":166656174711988,"method":"get_queue_metadata"}
okt 23 23:49:07 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:49:07,119 [9482:HttpServer] mopidy_iris.handlers
okt 23 23:49:07 Desktop-Ubuntu mopidy[9482]:   {'id': 166656174711721, 'jsonrpc': '2.0', 'method': 'get_pinned', 'result': {'pinned': []}, 'recipient': 'YKCJ4KAC6WUN'}
okt 23 23:49:07 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:49:07,118 [9482:HttpServer] mopidy_iris.core
okt 23 23:49:07 Desktop-Ubuntu mopidy[9482]:   Iris websocket message received: {"jsonrpc":"2.0","id":166656174711721,"method":"get_pinned"}
okt 23 23:49:07 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:49:07,117 [9482:HttpServer] mopidy_iris.handlers
okt 23 23:49:07 Desktop-Ubuntu mopidy[9482]:   {'id': 166656174711581, 'jsonrpc': '2.0', 'method': 'get_commands', 'result': {'commands': {}}, 'recipient': 'YKCJ4KAC6WUN'}
okt 23 23:49:07 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:49:07,116 [9482:HttpServer] mopidy_iris.core
okt 23 23:49:07 Desktop-Ubuntu mopidy[9482]:   Iris websocket message received: {"jsonrpc":"2.0","id":166656174711581,"method":"get_commands"}
okt 23 23:49:07 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:49:07,116 [9482:HttpServer] mopidy_iris.handlers
okt 23 23:49:07 Desktop-Ubuntu mopidy[9482]:   {'id': 166656174711433, 'jsonrpc': '2.0', 'method': 'get_radio', 'result': {'radio': {'enabled': 0, 'seed_artists': [], 'seed_genres': [], 'seed_tracks': [], 'results': []}}, 'recipient': 'YKCJ4KAC6WUN'}
okt 23 23:49:07 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:49:07,114 [9482:HttpServer] mopidy_iris.core
okt 23 23:49:07 Desktop-Ubuntu mopidy[9482]:   Iris websocket message received: {"jsonrpc":"2.0","id":166656174711433,"method":"get_radio"}
okt 23 23:49:07 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:49:07,114 [9482:HttpServer] mopidy_iris.handlers
okt 23 23:49:07 Desktop-Ubuntu mopidy[9482]:   {'id': 166656174711290, 'jsonrpc': '2.0', 'method': 'get_shared_config', 'result': {'shared_config': {}}, 'recipient': 'YKCJ4KAC6WUN'}
okt 23 23:49:07 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:49:07,113 [9482:HttpServer] mopidy_iris.core
okt 23 23:49:07 Desktop-Ubuntu mopidy[9482]:   Iris websocket message received: {"jsonrpc":"2.0","id":166656174711290,"method":"get_shared_config"}
okt 23 23:49:07 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:49:07,112 [9482:HttpServer] mopidy_iris.handlers
okt 23 23:49:07 Desktop-Ubuntu mopidy[9482]:   {'id': 166656174711092, 'jsonrpc': '2.0', 'method': 'get_config', 'result': {'config': {'is_root': False, 'spotify_username': False, 'country': 'NZ', 'locale': 'en_NZ', 'snapcast_enabled': True, 'snapcast_host': 'localhost', 'snapcast_port': '1780', 'snapcast_ssl': False, 'snapcast_stream': 'Default', 'spotify_authorization_url': 'https://jamesbarnsley.co.nz/iris/auth_spotify.php', 'lastfm_authorization_url': 'https://jamesbarnsley.co.nz/iris/auth_lastfm.php', 'genius_authorization_url': 'https://jamesbarnsley.co.nz/iris/auth_genius.php', 'shared_config': {}}}, 'recipient': 'YKCJ4KAC6WUN'}
okt 23 23:49:07 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:49:07,111 [9482:HttpServer] mopidy_iris.core
okt 23 23:49:07 Desktop-Ubuntu mopidy[9482]:   Iris websocket message received: {"jsonrpc":"2.0","id":166656174711092,"method":"get_config"}
okt 23 23:49:07 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:49:07,111 [9482:HttpServer] mopidy_iris.handlers
okt 23 23:49:07 Desktop-Ubuntu mopidy[9482]:   {'id': 166656174710871, 'jsonrpc': '2.0', 'method': 'update_connection', 'result': {'connection': {'connection_id': 'YKCJ4KAC6WUN', 'ip': '127.0.0.1', 'created': '2022-10-23 23:49:07', 'username': 166656148284185, 'client_id': 166656148284193}}, 'recipient': 'YKCJ4KAC6WUN'}
okt 23 23:49:07 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:49:07,109 [9482:HttpServer] mopidy_iris.core
okt 23 23:49:07 Desktop-Ubuntu mopidy[9482]:   {'method': 'connection_changed', 'params': {'connection': {'connection_id': 'YKCJ4KAC6WUN', 'ip': '127.0.0.1', 'created': '2022-10-23 23:49:07', 'username': 166656148284185, 'client_id': 166656148284193}}}
okt 23 23:49:07 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:49:07,109 [9482:HttpServer] mopidy_iris.core
okt 23 23:49:07 Desktop-Ubuntu mopidy[9482]:   Iris websocket message received: {"jsonrpc":"2.0","id":166656174710871,"method":"update_connection","params":{"username":166656148284185,"client_id":166656148284193}}
okt 23 23:49:07 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:49:07,109 [9482:HttpServer] mopidy_iris.handlers
okt 23 23:49:07 Desktop-Ubuntu mopidy[9482]:   {'method': 'connection_added', 'params': {'connection': {'connection_id': 'YKCJ4KAC6WUN', 'ip': '127.0.0.1', 'created': '2022-10-23 23:49:07'}}}
okt 23 23:49:07 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:49:07,105 [9482:HttpServer] mopidy_iris.core
okt 23 23:49:07 Desktop-Ubuntu mopidy[9482]:   <mopidy_iris.handlers.WebsocketHandler object at 0x7f8edc2440a0>
okt 23 23:49:07 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:49:07,105 [9482:HttpServer] mopidy_iris.core
okt 23 23:49:07 Desktop-Ubuntu mopidy[9482]:   Connection added
okt 23 23:49:07 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:49:07,105 [9482:HttpServer] mopidy_iris.core
okt 23 23:49:07 Desktop-Ubuntu mopidy[9482]:   101 GET /iris/ws/ (127.0.0.1) 0.52ms
okt 23 23:49:07 Desktop-Ubuntu mopidy[9482]: INFO     2022-10-23 23:49:07,104 [9482:HttpServer] tornado.access
okt 23 23:49:03 Desktop-Ubuntu mopidy[9482]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 32, "result": null}'
okt 23 23:49:03 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:49:03,116 [9482:HttpServer] mopidy.http.handlers
okt 23 23:49:03 Desktop-Ubuntu mopidy[9482]:   Received WebSocket message from 127.0.0.1: '{"method":"core.playback.get_stream_title","params":{},"jsonrpc":"2.0","id":32}'
okt 23 23:49:03 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:49:03,115 [9482:HttpServer] mopidy.http.handlers
okt 23 23:49:03 Desktop-Ubuntu mopidy[9482]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 31, "result": ["file", "http", "https", "m3u", "rtsp"]}'
okt 23 23:49:03 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:49:03,113 [9482:HttpServer] mopidy.http.handlers
okt 23 23:49:03 Desktop-Ubuntu mopidy[9482]:   Received WebSocket message from 127.0.0.1: '{"method":"core.get_uri_schemes","params":{},"jsonrpc":"2.0","id":31}'
okt 23 23:49:03 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:49:03,112 [9482:HttpServer] mopidy.http.handlers
okt 23 23:49:03 Desktop-Ubuntu mopidy[9482]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 30, "result": 0}'
okt 23 23:49:03 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:49:03,110 [9482:HttpServer] mopidy.http.handlers
okt 23 23:49:03 Desktop-Ubuntu mopidy[9482]:   Received WebSocket message from 127.0.0.1: '{"method":"core.playback.get_time_position","params":{},"jsonrpc":"2.0","id":30}'
okt 23 23:49:03 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:49:03,109 [9482:HttpServer] mopidy.http.handlers
okt 23 23:49:03 Desktop-Ubuntu mopidy[9482]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 29, "result": []}'
okt 23 23:49:03 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:49:03,106 [9482:HttpServer] mopidy.http.handlers
okt 23 23:49:03 Desktop-Ubuntu mopidy[9482]:   Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_tl_tracks","params":{},"jsonrpc":"2.0","id":29}'
okt 23 23:49:03 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:49:03,106 [9482:HttpServer] mopidy.http.handlers
okt 23 23:49:03 Desktop-Ubuntu mopidy[9482]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 28, "result": false}'
okt 23 23:49:03 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:49:03,104 [9482:HttpServer] mopidy.http.handlers
okt 23 23:49:03 Desktop-Ubuntu mopidy[9482]:   Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_repeat","params":{},"jsonrpc":"2.0","id":28}'
okt 23 23:49:03 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:49:03,104 [9482:HttpServer] mopidy.http.handlers
okt 23 23:49:03 Desktop-Ubuntu mopidy[9482]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 27, "result": false}'
okt 23 23:49:03 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:49:03,100 [9482:HttpServer] mopidy.http.handlers
okt 23 23:49:03 Desktop-Ubuntu mopidy[9482]:   Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_random","params":{},"jsonrpc":"2.0","id":27}'
okt 23 23:49:03 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:49:03,099 [9482:HttpServer] mopidy.http.handlers
okt 23 23:49:03 Desktop-Ubuntu mopidy[9482]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 26, "result": false}'
okt 23 23:49:03 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:49:03,096 [9482:HttpServer] mopidy.http.handlers
okt 23 23:49:03 Desktop-Ubuntu mopidy[9482]:   Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_consume","params":{},"jsonrpc":"2.0","id":26}'
okt 23 23:49:03 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:49:03,096 [9482:HttpServer] mopidy.http.handlers
okt 23 23:49:03 Desktop-Ubuntu mopidy[9482]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 25, "result": false}'
okt 23 23:49:03 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:49:03,093 [9482:HttpServer] mopidy.http.handlers
okt 23 23:49:03 Desktop-Ubuntu mopidy[9482]:   Received WebSocket message from 127.0.0.1: '{"method":"core.mixer.get_mute","params":{},"jsonrpc":"2.0","id":25}'
okt 23 23:49:03 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:49:03,092 [9482:HttpServer] mopidy.http.handlers
okt 23 23:49:03 Desktop-Ubuntu mopidy[9482]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 24, "result": 100}'
okt 23 23:49:03 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:49:03,090 [9482:HttpServer] mopidy.http.handlers
okt 23 23:49:03 Desktop-Ubuntu mopidy[9482]:   Received WebSocket message from 127.0.0.1: '{"method":"core.mixer.get_volume","params":{},"jsonrpc":"2.0","id":24}'
okt 23 23:49:03 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:49:03,089 [9482:HttpServer] mopidy.http.handlers
okt 23 23:49:03 Desktop-Ubuntu mopidy[9482]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 23, "result": "stopped"}'
okt 23 23:49:03 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:49:03,086 [9482:HttpServer] mopidy.http.handlers
okt 23 23:49:03 Desktop-Ubuntu mopidy[9482]:   Received WebSocket message from 127.0.0.1: '{"method":"core.playback.get_state","params":{},"jsonrpc":"2.0","id":23}'
okt 23 23:49:03 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:49:03,086 [9482:HttpServer] mopidy.http.handlers
okt 23 23:49:03 Desktop-Ubuntu mopidy[9482]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 22, "result": null}'
okt 23 23:49:03 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:49:03,083 [9482:HttpServer] mopidy.http.handlers
okt 23 23:49:03 Desktop-Ubuntu mopidy[9482]:   Received WebSocket message from 127.0.0.1: '{"method":"core.playback.get_current_tl_track","params":{},"jsonrpc":"2.0","id":22}'
okt 23 23:49:03 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:49:03,082 [9482:HttpServer] mopidy.http.handlers
okt 23 23:49:03 Desktop-Ubuntu mopidy[9482]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 21, "result": {"core.get_uri_schemes": {"description": "Get list of URI schemes we can handle", "params": []}, "core.get_version": {"description": "Get version of the Mopidy core API", "params": []}, "core.history.get_history": {"description": "Get the track history.\\n\\nThe timestamps are milliseconds since epoch.\\n\\n:returns: the track history\\n:rtype: list of (timestamp, :class:`mopidy.models.Ref`) tuples", "params": []}, "core.history.get_length": {"description": "Get the number of tracks in the history.\\n\\n:returns: the history length\\n:rtype: int", "params": []}, "core.library.browse": {"description": "Browse directories and tracks at the given ``uri``.\\n\\n``uri`` is a string which represents some directory belonging to a\\nbackend. To get the intial root directories for backends pass\\n:class:`None` as the URI.\\n\\nReturns a list of :class:`mopidy.models.Ref` objects for the\\ndirectories and tracks at the given ``uri``.\\n\\nThe :class:`~mopidy.models.Ref` objects representing tracks keep the\\ntrack\'s original URI. A matching pair of objects can look like this::\\n\\n    Track(uri=\'dummy:/foo.mp3\', name=\'foo\', artists=..., album=...)\\n    Ref.track(uri=\'dummy:/foo.mp3\', name=\'foo\')\\n\\nThe :class:`~mopidy.models.Ref` objects representing directories have\\nbackend specific URIs. These are opaque values, so no one but the\\nbackend that created them should try and derive any meaning from them.\\nThe only valid exception to this is checking the scheme, as it is used\\nto route browse requests to the correct backend.\\n\\nFor example, the dummy library\'s ``/bar`` directory could be returned\\nlike this::\\n\\n    Ref.directory(uri=\'dummy:directory:/bar\', name=\'bar\')\\n\\n:param string uri: URI to browse\\n:rtype: list of :class:`mopidy.models.Ref`\\n\\n.. versionadded:: 0.18", "params": [{"name": "uri"}]}, "core.library.get_distinct": {"description": "List distinct values for a given field from the library.\\n\\nThis has mainly been added to support the list commands the MPD\\nprotocol supports in a more sane fashion. Other frontends are not\\nrecommended to use this method.\\n\\n:param string field: Any one of ``uri``, ``track_name``, ``album``,\\n    ``artist``, ``albumartist``, ``composer``, ``performer``,\\n    ``track_no``, ``genre``, ``date``, ``comment``, ``disc_no``,\\n    ``musicbrainz_albumid``, ``musicbrainz_artistid``, or\\n    ``musicbrainz_trackid``.\\n:param dict query: Query to use for limiting results, see\\n    :meth:`search` for details about the query format.\\n:rtype: set of values corresponding to the requested field type.\\n\\n.. versionadded:: 1.0", "params": [{"name": "field"}, {"name": "query", "default": null}]}, "core.library.get_images": {"description": "Lookup the images for the given URIs\\n\\nBackends can use this to return image URIs for any URI they know about\\nbe it tracks, albums, playlists. The lookup result is a dictionary\\nmapping the provided URIs to lists of images.\\n\\nUnknown URIs or URIs the corresponding backend couldn\'t find anything\\nfor will simply return an empty list for that URI.\\n\\n:param uris: list of URIs to find images for\\n:type uris: list of string\\n:rtype: {uri: tuple of :class:`mopidy.models.Image`}\\n\\n.. versionadded:: 1.0", "params": [{"name": "uris"}]}, "core.library.lookup": {"description": "Lookup the given URIs.\\n\\nIf the URI expands to multiple tracks, the returned list will contain\\nthem all.\\n\\n:param uris: track URIs\\n:type uris: list of string\\n:rtype: {uri: list of :class:`mopidy.models.Track`}", "params": [{"name": "uris"}]}, "core.library.refresh": {"description": "Refresh library. Limit to URI and below if an URI is given.\\n\\n:param uri: directory or track URI\\n:type uri: string", "params": [{"name": "uri", "default": null}]}, "core.library.search": {"description": "Search the library for tracks where ``field`` contains ``values``.\\n\\n``field`` can be one of ``uri``, ``track_name``, ``album``, ``artist``,\\n``albumartist``, ``composer``, ``performer``, ``track_no``, ``genre``,\\n``date``, ``comment``, ``disc_no``, ``musicbrainz_albumid``,\\n``musicbrainz_artistid``, ``musicbrainz_trackid`` or ``any``.\\n\\nIf ``uris`` is given, the search is limited to results from within the\\nURI roots. For example passing ``uris=[\'file:\']`` will limit the search\\nto the local backend.\\n\\nExamples::\\n\\n    # Returns results matching \'a\' in any backend\\n    search({\'any\': [\'a\']})\\n\\n    # Returns results matching artist \'xyz\' in any backend\\n    search({\'artist\': [\'xyz\']})\\n\\n    # Returns results matching \'a\' and \'b\' and artist \'xyz\' in any\\n    # backend\\n    search({\'any\': [\'a\', \'b\'], \'artist\': [\'xyz\']})\\n\\n    # Returns results matching \'a\' if within the given URI roots\\n    # \\"file:///media/music\\" and \\"spotify:\\"\\n    search({\'any\': [\'a\']}, uris=[\'file:///media/music\', \'spotify:\'])\\n\\n    # Returns results matching artist \'xyz\' and \'abc\' in any backend\\n    search({\'artist\': [\'xyz\', \'abc\']})\\n\\n:param query: one or more queries to search for\\n:type query: dict\\n:param uris: zero or more URI roots to limit the search to\\n:type uris: list of string or :class:`None`\\n:param exact: if the search should use exact matching\\n:type exact: :class:`bool`\\n:rtype: list of :class:`mopidy.models.SearchResult`\\n\\n.. versionadded:: 1.0\\n    The ``exact`` keyword argument.", "params": [{"name": "query"}, {"name": "uris", "default": null}, {"name": "exact", "default": false}]}, "core.mixer.get_mute": {"description": "Get mute state.\\n\\n:class:`True` if muted, :class:`False` unmuted, :class:`None` if\\nunknown.", "params": []}, "core.mixer.get_volume": {"description": "Get the volume.\\n\\nInteger in range [0..100] or :class:`None` if unknown.\\n\\nThe volume scale is linear.", "params": []}, "core.mixer.set_mute": {"description": "Set mute state.\\n\\n:class:`True` to mute, :class:`False` to unmute.\\n\\nReturns :class:`True` if call is successful, otherwise :class:`False`.", "params": [{"name": "mute"}]}, "core.mixer.set_volume": {"description": "Set the volume.\\n\\nThe volume is defined as an integer in range [0..100].\\n\\nThe volume scale is linear.\\n\\nReturns :class:`True` if call is successful, otherwise :class:`False`.", "params": [{"name": "volume"}]}, "core.playback.get_current_tl_track": {"description": "Get the currently playing or selected track.\\n\\nReturns a :class:`mopidy.models.TlTrack` or :class:`None`.", "params": []}, "core.playback.get_current_tlid": {"description": "Get the currently playing or selected TLID.\\n\\nExtracted from :meth:`get_current_tl_track` for convenience.\\n\\nReturns a :class:`int` or :class:`None`.\\n\\n.. versionadded:: 1.1", "params": []}, "core.playback.get_current_track": {"description": "Get the currently playing or selected track.\\n\\nExtracted from :meth:`get_current_tl_track` for convenience.\\n\\nReturns a :class:`mopidy.models.Track` or :class:`None`.", "params": []}, "core.playback.get_state": {"description": "Get The playback state.", "params": []}, "core.playback.get_stream_title": {"description": "Get the current stream title or :class:`None`.", "params": []}, "core.playback.get_time_position": {"description": "Get time position in milliseconds.", "params": []}, "core.playback.next": {"description": "Change to the next track.\\n\\nThe current playback state will be kept. If it was playing, playing\\nwill continue. If it was paused, it will still be paused, etc.", "params": []}, "core.playback.pause": {"description": "Pause playback.", "params": []}, "core.playback.play": {"description": "Play the given track, or if the given tl_track and tlid is\\n:class:`None`, play the currently active track.\\n\\nNote that the track **must** already be in the tracklist.\\n\\n.. deprecated:: 3.0\\n    The ``tl_track`` argument. Use ``tlid`` instead.\\n\\n:param tl_track: track to play\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:param tlid: TLID of the track to play\\n:type tlid: :class:`int` or :class:`None`", "params": [{"name": "tl_track", "default": null}, {"name": "tlid", "default": null}]}, "core.playback.previous": {"description": "Change to the previous track.\\n\\nThe current playback state will be kept. If it was playing, playing\\nwill continue. If it was paused, it will still be paused, etc.", "params": []}, "core.playback.resume": {"description": "If paused, resume playing the current track.", "params": []}, "core.playback.seek": {"description": "Seeks to time position given in milliseconds.\\n\\n:param time_position: time position in milliseconds\\n:type time_position: int\\n:rtype: :class:`True` if successful, else :class:`False`", "params": [{"name": "time_position"}]}, "core.playback.set_state": {"description": "Set the playback state.\\n\\nMust be :attr:`PLAYING`, :attr:`PAUSED`, or :attr:`STOPPED`.\\n\\nPossible states and transitions:\\n\\n.. digraph:: state_transitions\\n\\n    \\"STOPPED\\" -> \\"PLAYING\\" [ label=\\"play\\" ]\\n    \\"STOPPED\\" -> \\"PAUSED\\" [ label=\\"pause\\" ]\\n    \\"PLAYING\\" -> \\"STOPPED\\" [ label=\\"stop\\" ]\\n    \\"PLAYING\\" -> \\"PAUSED\\" [ label=\\"pause\\" ]\\n    \\"PLAYING\\" -> \\"PLAYING\\" [ label=\\"play\\" ]\\n    \\"PAUSED\\" -> \\"PLAYING\\" [ label=\\"resume\\" ]\\n    \\"PAUSED\\" -> \\"STOPPED\\" [ label=\\"stop\\" ]", "params": [{"name": "new_state"}]}, "core.playback.stop": {"description": "Stop playing.", "params": []}, "core.playlists.as_list": {"description": "Get a list of the currently available playlists.\\n\\nReturns a list of :class:`~mopidy.models.Ref` objects referring to the\\nplaylists. In other words, no information about the playlists\' content\\nis given.\\n\\n:rtype: list of :class:`mopidy.models.Ref`\\n\\n.. versionadded:: 1.0", "params": []}, "core.playlists.create": {"description": "Create a new playlist.\\n\\nIf ``uri_scheme`` matches an URI scheme handled by a current backend,\\nthat backend is asked to create the playlist. If ``uri_scheme`` is\\n:class:`None` or doesn\'t match a current backend, the first backend is\\nasked to create the playlist.\\n\\nAll new playlists must be created by calling this method, and **not**\\nby creating new instances of :class:`mopidy.models.Playlist`.\\n\\n:param name: name of the new playlist\\n:type name: string\\n:param uri_scheme: use the backend matching the URI scheme\\n:type uri_scheme: string\\n:rtype: :class:`mopidy.models.Playlist` or :class:`None`", "params": [{"name": "name"}, {"name": "uri_scheme", "default": null}]}, "core.playlists.delete": {"description": "Delete playlist identified by the URI.\\n\\nIf the URI doesn\'t match the URI schemes handled by the current\\nbackends, nothing happens.\\n\\nReturns :class:`True` if deleted, :class:`False` otherwise.\\n\\n:param uri: URI of the playlist to delete\\n:type uri: string\\n:rtype: :class:`bool`\\n\\n.. versionchanged:: 2.2\\n    Return type defined.", "params": [{"name": "uri"}]}, "core.playlists.get_items": {"description": "Get the items in a playlist specified by ``uri``.\\n\\nReturns a list of :class:`~mopidy.models.Ref` objects referring to the\\nplaylist\'s items.\\n\\nIf a playlist with the given ``uri`` doesn\'t exist, it returns\\n:class:`None`.\\n\\n:rtype: list of :class:`mopidy.models.Ref`, or :class:`None`\\n\\n.. versionadded:: 1.0", "params": [{"name": "uri"}]}, "core.playlists.get_uri_schemes": {"description": "Get the list of URI schemes that support playlists.\\n\\n:rtype: list of string\\n\\n.. versionadded:: 2.0", "params": []}, "core.playlists.lookup": {"description": "Lookup playlist with given URI in both the set of playlists and in any\\nother playlist sources. Returns :class:`None` if not found.\\n\\n:param uri: playlist URI\\n:type uri: string\\n:rtype: :class:`mopidy.models.Playlist` or :class:`None`", "params": [{"name": "uri"}]}, "core.playlists.refresh": {"description": "Refresh the playlists in :attr:`playlists`.\\n\\nIf ``uri_scheme`` is :class:`None`, all backends are asked to refresh.\\nIf ``uri_scheme`` is an URI scheme handled by a backend, only that\\nbackend is asked to refresh. If ``uri_scheme`` doesn\'t match any\\ncurrent backend, nothing happens.\\n\\n:param uri_scheme: limit to the backend matching the URI scheme\\n:type uri_scheme: string", "params": [{"name": "uri_scheme", "default": null}]}, "core.playlists.save": {"description": "Save the playlist.\\n\\nFor a playlist to be saveable, it must have the ``uri`` attribute set.\\nYou must not set the ``uri`` atribute yourself, but use playlist\\nobjects returned by :meth:`create` or retrieved from :attr:`playlists`,\\nwhich will always give you saveable playlists.\\n\\nThe method returns the saved playlist. The return playlist may differ\\nfrom the saved playlist. E.g. if the playlist name was changed, the\\nreturned playlist may have a different URI. The caller of this method\\nmust throw away the playlist sent to this method, and use the\\nreturned playlist instead.\\n\\nIf the playlist\'s URI isn\'t set or doesn\'t match the URI scheme of a\\ncurrent backend, nothing is done and :class:`None` is returned.\\n\\n:param playlist: the playlist\\n:type playlist: :class:`mopidy.models.Playlist`\\n:rtype: :class:`mopidy.models.Playlist` or :class:`None`", "params": [{"name": "playlist"}]}, "core.tracklist.add": {"description": "Add tracks to the tracklist.\\n\\nIf ``uris`` is given instead of ``tracks``, the URIs are\\nlooked up in the library and the resulting tracks are added to the\\ntracklist.\\n\\nIf ``at_position`` is given, the tracks are inserted at the given\\nposition in the tracklist. If ``at_position`` is not given, the tracks\\nare appended to the end of the tracklist.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.\\n\\n:param tracks: tracks to add\\n:type tracks: list of :class:`mopidy.models.Track` or :class:`None`\\n:param at_position: position in tracklist to add tracks\\n:type at_position: int or :class:`None`\\n:param uris: list of URIs for tracks to add\\n:type uris: list of string or :class:`None`\\n:rtype: list of :class:`mopidy.models.TlTrack`\\n\\n.. versionadded:: 1.0\\n    The ``uris`` argument.\\n\\n.. deprecated:: 1.0\\n    The ``tracks`` argument. Use ``uris``.", "params": [{"name": "tracks", "default": null}, {"name": "at_position", "default": null}, {"name": "uris", "default": null}]}, "core.tracklist.clear": {"description": "Clear the tracklist.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.", "params": []}, "core.tracklist.eot_track": {"description": "The track that will be played after the given track.\\n\\nNot necessarily the same track as :meth:`next_track`.\\n\\n.. deprecated:: 3.0\\n    Use :meth:`get_eot_tlid` instead.\\n\\n:param tl_track: the reference track\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:rtype: :class:`mopidy.models.TlTrack` or :class:`None`", "params": [{"name": "tl_track"}]}, "core.tracklist.filter": {"description": "Filter the tracklist by the given criteria.\\n\\nEach rule in the criteria consists of a model field and a list of\\nvalues to compare it against. If the model field matches any of the\\nvalues, it may be returned.\\n\\nOnly tracks that match all the given criteria are returned.\\n\\nExamples::\\n\\n    # Returns tracks with TLIDs 1, 2, 3, or 4 (tracklist ID)\\n    filter({\'tlid\': [1, 2, 3, 4]})\\n\\n    # Returns track with URIs \'xyz\' or \'abc\'\\n    filter({\'uri\': [\'xyz\', \'abc\']})\\n\\n    # Returns track with a matching TLIDs (1, 3 or 6) and a\\n    # matching URI (\'xyz\' or \'abc\')\\n    filter({\'tlid\': [1, 3, 6], \'uri\': [\'xyz\', \'abc\']})\\n\\n:param criteria: one or more rules to match by\\n:type criteria: dict, of (string, list) pairs\\n:rtype: list of :class:`mopidy.models.TlTrack`", "params": [{"name": "criteria"}]}, "core.tracklist.get_consume": {"description": "Get consume mode.\\n\\n:class:`True`\\n    Tracks are removed from the tracklist when they have been played.\\n:class:`False`\\n    Tracks are not removed from the tracklist.", "params": []}, "core.tracklist.get_eot_tlid": {"description": "The TLID of the track that will be played after the current track.\\n\\nNot necessarily the same TLID as returned by :meth:`get_next_tlid`.\\n\\n:rtype: :class:`int` or :class:`None`\\n\\n.. versionadded:: 1.1", "params": []}, "core.tracklist.get_length": {"description": "Get length of the tracklist.", "params": []}, "core.tracklist.get_next_tlid": {"description": "The tlid of the track that will be played if calling\\n:meth:`mopidy.core.PlaybackController.next()`.\\n\\nFor normal playback this is the next track in the tracklist. If repeat\\nis enabled the next track can loop around the tracklist. When random is\\nenabled this should be a random track, all tracks should be played once\\nbefore the tracklist repeats.\\n\\n:rtype: :class:`int` or :class:`None`\\n\\n.. versionadded:: 1.1", "params": []}, "core.tracklist.get_previous_tlid": {"description": "Returns the TLID of the track that will be played if calling\\n:meth:`mopidy.core.PlaybackController.previous()`.\\n\\nFor normal playback this is the previous track in the tracklist. If\\nrandom and/or consume is enabled it should return the current track\\ninstead.\\n\\n:rtype: :class:`int` or :class:`None`\\n\\n.. versionadded:: 1.1", "params": []}, "core.tracklist.get_random": {"description": "Get random mode.\\n\\n:class:`True`\\n    Tracks are selected at random from the tracklist.\\n:class:`False`\\n    Tracks are played in the order of the tracklist.", "params": []}, "core.tracklist.get_repeat": {"description": "Get repeat mode.\\n\\n:class:`True`\\n    The tracklist is played repeatedly.\\n:class:`False`\\n    The tracklist is played once.", "params": []}, "core.tracklist.get_single": {"description": "Get single mode.\\n\\n:class:`True`\\n    Playback is stopped after current song, unless in ``repeat`` mode.\\n:class:`False`\\n    Playback continues after current song.", "params": []}, "core.tracklist.get_tl_tracks": {"description": "Get tracklist as list of :class:`mopidy.models.TlTrack`.", "params": []}, "core.tracklist.get_tracks": {"description": "Get tracklist as list of :class:`mopidy.models.Track`.", "params": []}, "core.tracklist.get_version": {"description": "Get the tracklist version.\\n\\nInteger which is increased every time the tracklist is changed. Is not\\nreset before Mopidy is restarted.", "params": []}, "core.tracklist.index": {"description": "The position of the given track in the tracklist.\\n\\nIf neither *tl_track* or *tlid* is given we return the index of\\nthe currently playing track.\\n\\n:param tl_track: the track to find the index of\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:param tlid: TLID of the track to find the index of\\n:type tlid: :class:`int` or :class:`None`\\n:rtype: :class:`int` or :class:`None`\\n\\n.. versionadded:: 1.1\\n    The *tlid* parameter", "params": [{"name": "tl_track", "default": null}, {"name": "tlid", "default": null}]}, "core.tracklist.move": {"description": "Move the tracks in the slice ``[start:end]`` to ``to_position``.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.\\n\\n:param start: position of first track to move\\n:type start: int\\n:param end: position after last track to move\\n:type end: int\\n:param to_position: new position for the tracks\\n:type to_position: int", "params": [{"name": "start"}, {"name": "end"}, {"name": "to_position"}]}, "core.tracklist.next_track": {"description": "The track that will be played if calling\\n:meth:`mopidy.core.PlaybackController.next()`.\\n\\nFor normal playback this is the next track in the tracklist. If repeat\\nis enabled the next track can loop around the tracklist. When random is\\nenabled this should be a random track, all tracks should be played once\\nbefore the tracklist repeats.\\n\\n.. deprecated:: 3.0\\n    Use :meth:`get_next_tlid` instead.\\n\\n:param tl_track: the reference track\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:rtype: :class:`mopidy.models.TlTrack` or :class:`None`", "params": [{"name": "tl_track"}]}, "core.tracklist.previous_track": {"description": "Returns the track that will be played if calling\\n:meth:`mopidy.core.PlaybackController.previous()`.\\n\\nFor normal playback this is the previous track in the tracklist. If\\nrandom and/or consume is enabled it should return the current track\\ninstead.\\n\\n.. deprecated:: 3.0\\n    Use :meth:`get_previous_tlid` instead.\\n\\n:param tl_track: the reference track\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:rtype: :class:`mopidy.models.TlTrack` or :class:`None`", "params": [{"name": "tl_track"}]}, "core.tracklist.remove": {"description": "Remove the matching tracks from the tracklist.\\n\\nUses :meth:`filter()` to lookup the tracks to remove.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.\\n\\n:param criteria: one or more rules to match by\\n:type criteria: dict, of (string, list) pairs\\n:rtype: list of :class:`mopidy.models.TlTrack` that were removed", "params": [{"name": "criteria"}]}, "core.tracklist.set_consume": {"description": "Set consume mode.\\n\\n:class:`True`\\n    Tracks are removed from the tracklist when they have been played.\\n:class:`False`\\n    Tracks are not removed from the tracklist.", "params": [{"name": "value"}]}, "core.tracklist.set_random": {"description": "Set random mode.\\n\\n:class:`True`\\n    Tracks are selected at random from the tracklist.\\n:class:`False`\\n    Tracks are played in the order of the tracklist.", "params": [{"name": "value"}]}, "core.tracklist.set_repeat": {"description": "Set repeat mode.\\n\\nTo repeat a single track, set both ``repeat`` and ``single``.\\n\\n:class:`True`\\n    The tracklist is played repeatedly.\\n:class:`False`\\n    The tracklist is played once.", "params": [{"name": "value"}]}, "core.tracklist.set_single": {"description": "Set single mode.\\n\\n:class:`True`\\n    Playback is stopped after current song, unless in ``repeat`` mode.\\n:class:`False`\\n    Playback continues after current song.", "params": [{"name": "value"}]}, "core.tracklist.shuffle": {"description": "Shuffles the entire tracklist. If ``start`` and ``end`` is given only\\nshuffles the slice ``[start:end]``.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.\\n\\n:param start: position of first track to shuffle\\n:type start: int or :class:`None`\\n:param end: position after last track to shuffle\\n:type end: int or :class:`None`", "params": [{"name": "start", "default": null}, {"name": "end", "default": null}]}, "core.tracklist.slice": {"description": "Returns a slice of the tracklist, limited by the given start and end\\npositions.\\n\\n:param start: position of first track to include in slice\\n:type start: int\\n:param end: position after last track to include in slice\\n:type end: int\\n:rtype: :class:`mopidy.models.TlTrack`", "params": [{"name": "start"}, {"name": "end"}]}}}'
okt 23 23:49:03 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:49:03,067 [9482:HttpServer] mopidy.http.handlers
okt 23 23:49:03 Desktop-Ubuntu mopidy[9482]:   Received WebSocket message from 127.0.0.1: '{"method":"core.describe","jsonrpc":"2.0","id":21}'
okt 23 23:49:03 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:49:03,063 [9482:HttpServer] mopidy.http.handlers
okt 23 23:49:03 Desktop-Ubuntu mopidy[9482]:   New WebSocket connection from 127.0.0.1
okt 23 23:49:03 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:49:03,061 [9482:HttpServer] mopidy.http.handlers
okt 23 23:49:03 Desktop-Ubuntu mopidy[9482]:   101 GET /mopidy/ws/ (127.0.0.1) 19.02ms
okt 23 23:49:03 Desktop-Ubuntu mopidy[9482]: INFO     2022-10-23 23:49:03,061 [9482:HttpServer] tornado.access
okt 23 23:49:02 Desktop-Ubuntu mopidy[9482]:   Zeroconf service 'Mopidy HTTP server on Desktop-Ubuntu' (_mopidy-http._tcp at []:6680): Published
okt 23 23:49:02 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:49:02,747 [9482:HttpFrontend-11 (_actor_loop)] mopidy.zeroconf
okt 23 23:49:02 Desktop-Ubuntu mopidy[9482]:   Zeroconf service 'Mopidy HTTP server on Desktop-Ubuntu' (_http._tcp at []:6680): Published
okt 23 23:49:02 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:49:02,743 [9482:HttpFrontend-11 (_actor_loop)] mopidy.zeroconf
okt 23 23:49:02 Desktop-Ubuntu mopidy[9482]:     '/': <class 'tornado.web.RedirectHandler'>
okt 23 23:49:02 Desktop-Ubuntu mopidy[9482]:     '/mopidy/': <class 'mopidy.http.handlers.ClientListHandler'>
okt 23 23:49:02 Desktop-Ubuntu mopidy[9482]:     '/mopidy/(.+)': <class 'mopidy.http.handlers.StaticFileHandler'>
okt 23 23:49:02 Desktop-Ubuntu mopidy[9482]:     '/mopidy/rpc': <class 'mopidy.http.handlers.JsonRpcHandler'>
okt 23 23:49:02 Desktop-Ubuntu mopidy[9482]:     '/mopidy/ws/?': <class 'mopidy.http.handlers.WebSocketHandler'>
okt 23 23:49:02 Desktop-Ubuntu mopidy[9482]:     '/mopidy': <class 'mopidy.http.handlers.AddSlashHandler'>
okt 23 23:49:02 Desktop-Ubuntu mopidy[9482]:     '/iris/(.*)': <class 'mopidy_iris.handlers.ReactRouterHandler'>
okt 23 23:49:02 Desktop-Ubuntu mopidy[9482]:     '/iris/((.*)(?:css|js|json|map)$)': <class 'tornado.web.StaticFileHandler'>
okt 23 23:49:02 Desktop-Ubuntu mopidy[9482]:     '/iris/assets/(.*)': <class 'tornado.web.StaticFileHandler'>
okt 23 23:49:02 Desktop-Ubuntu mopidy[9482]:     '/iris/ws/?': <class 'mopidy_iris.handlers.WebsocketHandler'>
okt 23 23:49:02 Desktop-Ubuntu mopidy[9482]:     '/iris/http/([^/]*)': <class 'mopidy_iris.handlers.HttpHandler'>
okt 23 23:49:02 Desktop-Ubuntu mopidy[9482]:     '/iris': <class 'mopidy.http.handlers.AddSlashHandler'>
okt 23 23:49:02 Desktop-Ubuntu mopidy[9482]:     '/youtube/(.*\\.(?:webm|m4a|mp3|ogg))': <class 'mopidy_youtube.web.AudioHandler'>
okt 23 23:49:02 Desktop-Ubuntu mopidy[9482]:     '/youtube/(.*\\.jpg)': <class 'mopidy_youtube.web.ImageHandler'>
okt 23 23:49:02 Desktop-Ubuntu mopidy[9482]:     '/youtube/(index.html|image.html)?': <class 'mopidy_youtube.web.IndexHandler'>
okt 23 23:49:02 Desktop-Ubuntu mopidy[9482]:     '/youtube': <class 'mopidy.http.handlers.AddSlashHandler'>
okt 23 23:49:02 Desktop-Ubuntu mopidy[9482]:   HTTP routes from extensions:
okt 23 23:49:02 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:49:02,737 [9482:HttpServer] mopidy.http.actor
okt 23 23:49:02 Desktop-Ubuntu mopidy[9482]:   Default webclient is mopidy
okt 23 23:49:02 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:49:02,737 [9482:HttpServer] mopidy.http.actor
okt 23 23:49:02 Desktop-Ubuntu mopidy[9482]:   Loaded HTTP extension: mopidy
okt 23 23:49:02 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:49:02,737 [9482:HttpServer] mopidy.http.actor
okt 23 23:49:02 Desktop-Ubuntu mopidy[9482]:   Loaded HTTP extension: iris
okt 23 23:49:02 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:49:02,737 [9482:HttpServer] mopidy.http.actor
okt 23 23:49:02 Desktop-Ubuntu mopidy[9482]:   Loaded HTTP extension: youtube
okt 23 23:49:02 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:49:02,737 [9482:HttpServer] mopidy.http.actor
okt 23 23:49:02 Desktop-Ubuntu mopidy[9482]:   Starting GLib mainloop
okt 23 23:49:02 Desktop-Ubuntu mopidy[9482]: INFO     2022-10-23 23:49:02,733 [9482:MainThread] mopidy.commands
okt 23 23:49:02 Desktop-Ubuntu mopidy[9482]:   Using selector: EpollSelector
okt 23 23:49:02 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:49:02,733 [9482:HttpServer] asyncio
okt 23 23:49:02 Desktop-Ubuntu mopidy[9482]:   HttpFrontend took 1ms
okt 23 23:49:02 Desktop-Ubuntu mopidy[9482]: TRACE    2022-10-23 23:49:02,733 [9482:MainThread] mopidy.internal.timer
okt 23 23:49:02 Desktop-Ubuntu mopidy[9482]:   HTTP server running at [::ffff:127.0.0.1]:6680
okt 23 23:49:02 Desktop-Ubuntu mopidy[9482]: INFO     2022-10-23 23:49:02,733 [9482:HttpFrontend-11 (_actor_loop)] mopidy.http.actor
okt 23 23:49:02 Desktop-Ubuntu mopidy[9482]:   Starting HttpFrontend (urn:uuid:ee32a42f-b5dc-4ae2-9212-27f7e71b49bc)
okt 23 23:49:02 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:49:02,732 [9482:MainThread] pykka
okt 23 23:49:02 Desktop-Ubuntu mopidy[9482]:   Registered HttpFrontend (urn:uuid:ee32a42f-b5dc-4ae2-9212-27f7e71b49bc)
okt 23 23:49:02 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:49:02,732 [9482:MainThread] pykka
okt 23 23:49:02 Desktop-Ubuntu mopidy[9482]:   Starting HTTP server
okt 23 23:49:02 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:49:02,731 [9482:MainThread] mopidy.http.actor
okt 23 23:49:02 Desktop-Ubuntu mopidy[9482]:   IrisFrontend took 0ms
okt 23 23:49:02 Desktop-Ubuntu mopidy[9482]: TRACE    2022-10-23 23:49:02,731 [9482:MainThread] mopidy.internal.timer
okt 23 23:49:02 Desktop-Ubuntu mopidy[9482]:   Starting Iris 3.64.1
okt 23 23:49:02 Desktop-Ubuntu mopidy[9482]: INFO     2022-10-23 23:49:02,731 [9482:IrisFrontend-9 (_actor_loop)] mopidy_iris.core
okt 23 23:49:02 Desktop-Ubuntu mopidy[9482]:   Starting IrisFrontend (urn:uuid:6872f8e7-0451-483f-8efc-701a693bd1f0)
okt 23 23:49:02 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:49:02,731 [9482:MainThread] pykka
okt 23 23:49:02 Desktop-Ubuntu mopidy[9482]:   Registered IrisFrontend (urn:uuid:6872f8e7-0451-483f-8efc-701a693bd1f0)
okt 23 23:49:02 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:49:02,730 [9482:MainThread] pykka
okt 23 23:49:02 Desktop-Ubuntu mopidy[9482]:   YouTubeCoreListener took 0ms
okt 23 23:49:02 Desktop-Ubuntu mopidy[9482]: TRACE    2022-10-23 23:49:02,730 [9482:MainThread] mopidy.internal.timer
okt 23 23:49:02 Desktop-Ubuntu mopidy[9482]:   Starting YouTubeCoreListener (urn:uuid:20ce17d9-5f5e-4ae2-b1ae-0ba25b71d7c5)
okt 23 23:49:02 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:49:02,730 [9482:MainThread] pykka
okt 23 23:49:02 Desktop-Ubuntu mopidy[9482]:   Registered YouTubeCoreListener (urn:uuid:20ce17d9-5f5e-4ae2-b1ae-0ba25b71d7c5)
okt 23 23:49:02 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:49:02,730 [9482:MainThread] pykka
okt 23 23:49:02 Desktop-Ubuntu mopidy[9482]:   YouTubeAutoplayer took 0ms
okt 23 23:49:02 Desktop-Ubuntu mopidy[9482]: TRACE    2022-10-23 23:49:02,730 [9482:MainThread] mopidy.internal.timer
okt 23 23:49:02 Desktop-Ubuntu mopidy[9482]:   Starting YouTubeAutoplayer (urn:uuid:a94663ac-3567-4f2f-bc1b-5aeb91989d6e)
okt 23 23:49:02 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:49:02,730 [9482:MainThread] pykka
okt 23 23:49:02 Desktop-Ubuntu mopidy[9482]:   Registered YouTubeAutoplayer (urn:uuid:a94663ac-3567-4f2f-bc1b-5aeb91989d6e)
okt 23 23:49:02 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:49:02,730 [9482:MainThread] pykka
okt 23 23:49:02 Desktop-Ubuntu mopidy[9482]:   Starting Mopidy frontends: YouTubeAutoplayer, YouTubeCoreListener, IrisFrontend, HttpFrontend
okt 23 23:49:02 Desktop-Ubuntu mopidy[9482]: INFO     2022-10-23 23:49:02,729 [9482:MainThread] mopidy.commands
okt 23 23:49:02 Desktop-Ubuntu mopidy[9482]:   Starting Core (urn:uuid:8560c7e3-5796-4baf-97be-8cf7d75b58a3)
okt 23 23:49:02 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:49:02,726 [9482:MainThread] pykka
okt 23 23:49:02 Desktop-Ubuntu mopidy[9482]:   Registered Core (urn:uuid:8560c7e3-5796-4baf-97be-8cf7d75b58a3)
okt 23 23:49:02 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:49:02,726 [9482:MainThread] pykka
okt 23 23:49:02 Desktop-Ubuntu mopidy[9482]:   Starting Mopidy core
okt 23 23:49:02 Desktop-Ubuntu mopidy[9482]: INFO     2022-10-23 23:49:02,722 [9482:MainThread] mopidy.commands
okt 23 23:49:02 Desktop-Ubuntu mopidy[9482]:   StreamBackend took 5ms
okt 23 23:49:02 Desktop-Ubuntu mopidy[9482]: TRACE    2022-10-23 23:49:02,721 [9482:MainThread] mopidy.internal.timer
okt 23 23:49:02 Desktop-Ubuntu mopidy[9482]:   Starting StreamBackend (urn:uuid:a122a858-b52d-4d93-9acb-3e1232916859)
okt 23 23:49:02 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:49:02,718 [9482:MainThread] pykka
okt 23 23:49:02 Desktop-Ubuntu mopidy[9482]:   Registered StreamBackend (urn:uuid:a122a858-b52d-4d93-9acb-3e1232916859)
okt 23 23:49:02 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:49:02,718 [9482:MainThread] pykka
okt 23 23:49:02 Desktop-Ubuntu mopidy[9482]:   Audio output set to "pulsesink server=127.0.0.1"
okt 23 23:49:02 Desktop-Ubuntu mopidy[9482]: INFO     2022-10-23 23:49:02,717 [9482:Audio-2 (_actor_loop)] mopidy.audio.actor
okt 23 23:49:02 Desktop-Ubuntu mopidy[9482]:   M3UBackend took 2ms
okt 23 23:49:02 Desktop-Ubuntu mopidy[9482]: TRACE    2022-10-23 23:49:02,716 [9482:MainThread] mopidy.internal.timer
okt 23 23:49:02 Desktop-Ubuntu mopidy[9482]:   Starting M3UBackend (urn:uuid:494e73d1-39e9-430f-ac57-7a7afda37243)
okt 23 23:49:02 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:49:02,714 [9482:MainThread] pykka
okt 23 23:49:02 Desktop-Ubuntu mopidy[9482]:   Registered M3UBackend (urn:uuid:494e73d1-39e9-430f-ac57-7a7afda37243)
okt 23 23:49:02 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:49:02,714 [9482:MainThread] pykka
okt 23 23:49:02 Desktop-Ubuntu mopidy[9482]:   FileBackend took 3ms
okt 23 23:49:02 Desktop-Ubuntu mopidy[9482]: TRACE    2022-10-23 23:49:02,713 [9482:MainThread] mopidy.internal.timer
okt 23 23:49:02 Desktop-Ubuntu mopidy[9482]:   Starting FileBackend (urn:uuid:607e9852-d205-4fdd-ae4a-e1f8a44e9584)
okt 23 23:49:02 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:49:02,710 [9482:MainThread] pykka
okt 23 23:49:02 Desktop-Ubuntu mopidy[9482]:   Registered FileBackend (urn:uuid:607e9852-d205-4fdd-ae4a-e1f8a44e9584)
okt 23 23:49:02 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:49:02,710 [9482:MainThread] pykka
okt 23 23:49:02 Desktop-Ubuntu mopidy[9482]:   Failed expanding path ($XDG_MUSIC_DIR) from file/media_dirs config value.
okt 23 23:49:02 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:49:02,710 [9482:MainThread] mopidy.file.library
okt 23 23:49:02 Desktop-Ubuntu mopidy[9482]: ModuleNotFoundError: No module named 'ytmusicapi'
okt 23 23:49:02 Desktop-Ubuntu mopidy[9482]:     from ytmusicapi import YTMusic
okt 23 23:49:02 Desktop-Ubuntu mopidy[9482]:   File "/usr/local/lib/python3.10/dist-packages/mopidy_youtube/apis/youtube_music.py", line 7, in <module>
okt 23 23:49:02 Desktop-Ubuntu mopidy[9482]:     from mopidy_youtube.apis import youtube_music
okt 23 23:49:02 Desktop-Ubuntu mopidy[9482]:   File "/usr/local/lib/python3.10/dist-packages/mopidy_youtube/backend.py", line 84, in __init__
okt 23 23:49:02 Desktop-Ubuntu mopidy[9482]:     obj = cls(*args, **kwargs)
okt 23 23:49:02 Desktop-Ubuntu mopidy[9482]:   File "/usr/lib/python3/dist-packages/pykka/_actor.py", line 91, in start
okt 23 23:49:02 Desktop-Ubuntu mopidy[9482]:     backend = backend_class.start(
okt 23 23:49:02 Desktop-Ubuntu mopidy[9482]:   File "/usr/lib/python3/dist-packages/mopidy/commands.py", line 412, in start_backends
okt 23 23:49:02 Desktop-Ubuntu mopidy[9482]:     yield
okt 23 23:49:02 Desktop-Ubuntu mopidy[9482]:   File "/usr/lib/python3/dist-packages/mopidy/commands.py", line 248, in _actor_error_handling
okt 23 23:49:02 Desktop-Ubuntu mopidy[9482]: Traceback (most recent call last):
okt 23 23:49:02 Desktop-Ubuntu mopidy[9482]:   Got un-handled exception from YouTubeBackend
okt 23 23:49:02 Desktop-Ubuntu mopidy[9482]: ERROR    2022-10-23 23:49:02,708 [9482:MainThread] mopidy.commands
okt 23 23:49:02 Desktop-Ubuntu mopidy[9482]:   Starting Mopidy backends: YouTubeBackend, FileBackend, M3UBackend, StreamBackend
okt 23 23:49:02 Desktop-Ubuntu mopidy[9482]: INFO     2022-10-23 23:49:02,707 [9482:MainThread] mopidy.commands
okt 23 23:49:02 Desktop-Ubuntu mopidy[9482]:   Starting Audio (urn:uuid:9781bcd5-6bf0-480a-a4ee-55828fd521d9)
okt 23 23:49:02 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:49:02,706 [9482:MainThread] pykka
okt 23 23:49:02 Desktop-Ubuntu mopidy[9482]:   Registered Audio (urn:uuid:9781bcd5-6bf0-480a-a4ee-55828fd521d9)
okt 23 23:49:02 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:49:02,706 [9482:MainThread] pykka
okt 23 23:49:02 Desktop-Ubuntu mopidy[9482]:   Starting Mopidy audio
okt 23 23:49:02 Desktop-Ubuntu mopidy[9482]: INFO     2022-10-23 23:49:02,706 [9482:MainThread] mopidy.commands
okt 23 23:49:02 Desktop-Ubuntu mopidy[9482]:   Mixer volume left unchanged
okt 23 23:49:02 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:49:02,706 [9482:MainThread] mopidy.commands
okt 23 23:49:02 Desktop-Ubuntu mopidy[9482]:   Starting SoftwareMixer (urn:uuid:cde3a7de-7938-4455-b6dd-f4730cb1b124)
okt 23 23:49:02 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:49:02,705 [9482:MainThread] pykka
okt 23 23:49:02 Desktop-Ubuntu mopidy[9482]:   Registered SoftwareMixer (urn:uuid:cde3a7de-7938-4455-b6dd-f4730cb1b124)
okt 23 23:49:02 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:49:02,705 [9482:MainThread] pykka
okt 23 23:49:02 Desktop-Ubuntu mopidy[9482]:   Starting Mopidy mixer: SoftwareMixer
okt 23 23:49:02 Desktop-Ubuntu mopidy[9482]: INFO     2022-10-23 23:49:02,705 [9482:MainThread] mopidy.commands
okt 23 23:49:02 Desktop-Ubuntu mopidy[9482]:   Available Mopidy mixers: SoftwareMixer
okt 23 23:49:02 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:49:02,704 [9482:MainThread] mopidy.commands
okt 23 23:49:02 Desktop-Ubuntu mopidy[9482]:   Please fix the extension configuration errors or disable the extensions to silence these messages.
okt 23 23:49:02 Desktop-Ubuntu mopidy[9482]: WARNING  2022-10-23 23:49:02,626 [9482:MainThread] mopidy.__main__
okt 23 23:49:02 Desktop-Ubuntu mopidy[9482]:     local/media_dir must be set.
okt 23 23:49:02 Desktop-Ubuntu mopidy[9482]: WARNING  2022-10-23 23:49:02,626 [9482:MainThread] mopidy.__main__
okt 23 23:49:02 Desktop-Ubuntu mopidy[9482]:   Found local configuration errors. The extension has been automatically disabled:
okt 23 23:49:02 Desktop-Ubuntu mopidy[9482]: WARNING  2022-10-23 23:49:02,626 [9482:MainThread] mopidy.__main__
okt 23 23:49:02 Desktop-Ubuntu mopidy[9482]:   Disabled extensions: soundcloud, local
okt 23 23:49:02 Desktop-Ubuntu mopidy[9482]: INFO     2022-10-23 23:49:02,626 [9482:MainThread] mopidy.__main__
okt 23 23:49:02 Desktop-Ubuntu mopidy[9482]:   Enabled extensions: youtube, stream, softwaremixer, iris, http, m3u, file
okt 23 23:49:02 Desktop-Ubuntu mopidy[9482]: INFO     2022-10-23 23:49:02,626 [9482:MainThread] mopidy.__main__
okt 23 23:49:02 Desktop-Ubuntu mopidy[9482]:   Validating extension: stream
okt 23 23:49:02 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:49:02,626 [9482:MainThread] mopidy.ext
okt 23 23:49:02 Desktop-Ubuntu mopidy[9482]:   Validating extension: softwaremixer
okt 23 23:49:02 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:49:02,626 [9482:MainThread] mopidy.ext
okt 23 23:49:02 Desktop-Ubuntu mopidy[9482]:   Validating extension: m3u
okt 23 23:49:02 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:49:02,626 [9482:MainThread] mopidy.ext
okt 23 23:49:02 Desktop-Ubuntu mopidy[9482]:   Validating extension: http
okt 23 23:49:02 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:49:02,572 [9482:MainThread] mopidy.ext
okt 23 23:49:02 Desktop-Ubuntu mopidy[9482]:   Validating extension: file
okt 23 23:49:02 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:49:02,572 [9482:MainThread] mopidy.ext
okt 23 23:49:02 Desktop-Ubuntu mopidy[9482]:   Validating extension: iris
okt 23 23:49:02 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:49:02,556 [9482:MainThread] mopidy.ext
okt 23 23:49:02 Desktop-Ubuntu mopidy[9482]:   Validating extension: soundcloud
okt 23 23:49:02 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:49:02,530 [9482:MainThread] mopidy.ext
okt 23 23:49:02 Desktop-Ubuntu mopidy[9482]:   Validating extension: local
okt 23 23:49:02 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:49:02,509 [9482:MainThread] mopidy.ext
okt 23 23:49:02 Desktop-Ubuntu mopidy[9482]:   Validating extension: youtube
okt 23 23:49:02 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:49:02,458 [9482:MainThread] mopidy.ext
okt 23 23:49:02 Desktop-Ubuntu mopidy[9482]:   Ignoring config section 'ytmusic' because no matching extension was found
okt 23 23:49:02 Desktop-Ubuntu mopidy[9482]: WARNING  2022-10-23 23:49:02,456 [9482:MainThread] mopidy.config
okt 23 23:49:02 Desktop-Ubuntu mopidy[9482]:   Ignoring config section 'jukebox' because no matching extension was found
okt 23 23:49:02 Desktop-Ubuntu mopidy[9482]: WARNING  2022-10-23 23:49:02,456 [9482:MainThread] mopidy.config
okt 23 23:49:02 Desktop-Ubuntu mopidy[9482]:   Loading config from command line options
okt 23 23:49:02 Desktop-Ubuntu mopidy[9482]: INFO     2022-10-23 23:49:02,453 [9482:MainThread] mopidy.config
okt 23 23:49:02 Desktop-Ubuntu mopidy[9482]:   Loading config from file:///etc/mopidy/mopidy.conf
okt 23 23:49:02 Desktop-Ubuntu mopidy[9482]: INFO     2022-10-23 23:49:02,452 [9482:MainThread] mopidy.config
okt 23 23:49:02 Desktop-Ubuntu mopidy[9482]:   Loading config from file:///usr/share/mopidy/conf.d/mopidy.conf
okt 23 23:49:02 Desktop-Ubuntu mopidy[9482]: INFO     2022-10-23 23:49:02,452 [9482:MainThread] mopidy.config
okt 23 23:49:02 Desktop-Ubuntu mopidy[9482]:   Loading config from builtin defaults
okt 23 23:49:02 Desktop-Ubuntu mopidy[9482]: INFO     2022-10-23 23:49:02,450 [9482:MainThread] mopidy.config
okt 23 23:49:02 Desktop-Ubuntu mopidy[9482]:   Fetching passwords from your keyring failed. Any passwords stored in the keyring will not be available. (org.freedesktop.DBus.Error.NotSupported: Unable to autolaunch a dbus-daemon without a $DISPLAY for X11)
okt 23 23:49:02 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:49:02,450 [9482:MainThread] mopidy.config.keyring
okt 23 23:49:02 Desktop-Ubuntu mopidy[9482]:   Discovered extensions: youtube, local, soundcloud, iris, file, http, m3u, softwaremixer, stream
okt 23 23:49:02 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:49:02,449 [9482:MainThread] mopidy.ext
okt 23 23:49:02 Desktop-Ubuntu mopidy[9482]:   Loaded extension: Mopidy-Stream 3.3.0
okt 23 23:49:02 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:49:02,445 [9482:MainThread] mopidy.ext
okt 23 23:49:02 Desktop-Ubuntu mopidy[9482]:   Loading entry point: stream = mopidy.stream:Extension
okt 23 23:49:02 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:49:02,445 [9482:MainThread] mopidy.ext
okt 23 23:49:02 Desktop-Ubuntu mopidy[9482]:   Loaded extension: Mopidy-SoftwareMixer 3.3.0
okt 23 23:49:02 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:49:02,445 [9482:MainThread] mopidy.ext
okt 23 23:49:02 Desktop-Ubuntu mopidy[9482]:   Loading entry point: softwaremixer = mopidy.softwaremixer:Extension
okt 23 23:49:02 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:49:02,444 [9482:MainThread] mopidy.ext
okt 23 23:49:02 Desktop-Ubuntu mopidy[9482]:   Loaded extension: Mopidy-M3U 3.3.0
okt 23 23:49:02 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:49:02,444 [9482:MainThread] mopidy.ext
okt 23 23:49:02 Desktop-Ubuntu mopidy[9482]:   Loading entry point: m3u = mopidy.m3u:Extension
okt 23 23:49:02 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:49:02,444 [9482:MainThread] mopidy.ext
okt 23 23:49:02 Desktop-Ubuntu mopidy[9482]:   Loaded extension: Mopidy-HTTP 3.3.0
okt 23 23:49:02 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:49:02,444 [9482:MainThread] mopidy.ext
okt 23 23:49:02 Desktop-Ubuntu mopidy[9482]:   Loading entry point: http = mopidy.http:Extension
okt 23 23:49:02 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:49:02,444 [9482:MainThread] mopidy.ext
okt 23 23:49:02 Desktop-Ubuntu mopidy[9482]:   Loaded extension: Mopidy-File 3.3.0
okt 23 23:49:02 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:49:02,444 [9482:MainThread] mopidy.ext
okt 23 23:49:02 Desktop-Ubuntu mopidy[9482]:   Loading entry point: file = mopidy.file:Extension
okt 23 23:49:02 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:49:02,443 [9482:MainThread] mopidy.ext
okt 23 23:49:02 Desktop-Ubuntu mopidy[9482]:   Loaded extension: Mopidy-Iris 3.64.1
okt 23 23:49:02 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:49:02,441 [9482:MainThread] mopidy.ext
okt 23 23:49:02 Desktop-Ubuntu mopidy[9482]:   Loading entry point: iris = mopidy_iris:Extension
okt 23 23:49:02 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:49:02,441 [9482:MainThread] mopidy.ext
okt 23 23:49:02 Desktop-Ubuntu mopidy[9482]:   Loaded extension: Mopidy-SoundCloud 3.0.1
okt 23 23:49:02 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:49:02,440 [9482:MainThread] mopidy.ext
okt 23 23:49:02 Desktop-Ubuntu mopidy[9482]:   Loading entry point: soundcloud = mopidy_soundcloud:Extension
okt 23 23:49:02 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:49:02,439 [9482:MainThread] mopidy.ext
okt 23 23:49:02 Desktop-Ubuntu mopidy[9482]:   Loaded extension: Mopidy-Local 3.2.1
okt 23 23:49:02 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:49:02,439 [9482:MainThread] mopidy.ext
okt 23 23:49:02 Desktop-Ubuntu mopidy[9482]:   Loading entry point: local = mopidy_local:Extension
okt 23 23:49:02 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:49:02,427 [9482:MainThread] mopidy.ext
okt 23 23:49:02 Desktop-Ubuntu mopidy[9482]:   Loaded extension: Mopidy-YouTube 3.6.1
okt 23 23:49:02 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:49:02,427 [9482:MainThread] mopidy.ext
okt 23 23:49:02 Desktop-Ubuntu mopidy[9482]:   Loading entry point: youtube = mopidy_youtube:Extension
okt 23 23:49:02 Desktop-Ubuntu mopidy[9482]: DEBUG    2022-10-23 23:49:02,426 [9482:MainThread] mopidy.ext
okt 23 23:49:02 Desktop-Ubuntu mopidy[9482]:   Starting Mopidy 3.3.0
okt 23 23:49:02 Desktop-Ubuntu mopidy[9482]: INFO     2022-10-23 23:49:02,424 [9482:MainThread] mopidy.__main__
okt 23 23:49:02 Desktop-Ubuntu systemd[1]: Started Mopidy music server.
okt 23 23:49:02 Desktop-Ubuntu systemd[1]: Starting Mopidy music server...
okt 23 23:49:02 Desktop-Ubuntu systemd[1]: mopidy.service: Consumed 1.040s CPU time.
okt 23 23:49:02 Desktop-Ubuntu systemd[1]: Stopped Mopidy music server.
okt 23 23:49:02 Desktop-Ubuntu systemd[1]: mopidy.service: Deactivated successfully.
okt 23 23:49:02 Desktop-Ubuntu mopidy[9178]:   All actors stopped.
okt 23 23:49:02 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:49:01,982 [9178:MainThread] mopidy.internal.process
okt 23 23:49:02 Desktop-Ubuntu mopidy[9178]:   Stopped SoftwareMixer (urn:uuid:f1ad60a5-9b70-41d5-bf75-d8a1347c3d8c)
okt 23 23:49:02 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:49:01,982 [9178:SoftwareMixer-1 (_actor_loop)] pykka
okt 23 23:49:02 Desktop-Ubuntu mopidy[9178]:   Unregistered SoftwareMixer (urn:uuid:f1ad60a5-9b70-41d5-bf75-d8a1347c3d8c)
okt 23 23:49:02 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:49:01,982 [9178:SoftwareMixer-1 (_actor_loop)] pykka
okt 23 23:49:02 Desktop-Ubuntu mopidy[9178]:   Stopping 1 instance(s) of SoftwareMixer
okt 23 23:49:02 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:49:01,982 [9178:MainThread] mopidy.internal.process
okt 23 23:49:02 Desktop-Ubuntu mopidy[9178]:   Stopping Mopidy mixer
okt 23 23:49:02 Desktop-Ubuntu mopidy[9178]: INFO     2022-10-23 23:49:01,982 [9178:MainThread] mopidy.commands
okt 23 23:49:02 Desktop-Ubuntu mopidy[9178]:   Stopped Audio (urn:uuid:d8d36efa-9d38-450d-8d77-40b14cf07af5)
okt 23 23:49:02 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:49:01,981 [9178:Audio-2 (_actor_loop)] pykka
okt 23 23:49:02 Desktop-Ubuntu mopidy[9178]:   Unregistered Audio (urn:uuid:d8d36efa-9d38-450d-8d77-40b14cf07af5)
okt 23 23:49:02 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:49:01,981 [9178:Audio-2 (_actor_loop)] pykka
okt 23 23:49:02 Desktop-Ubuntu mopidy[9178]:   Stopping 1 instance(s) of Audio
okt 23 23:49:02 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:49:01,981 [9178:MainThread] mopidy.internal.process
okt 23 23:49:02 Desktop-Ubuntu mopidy[9178]:   Stopping Mopidy audio
okt 23 23:49:02 Desktop-Ubuntu mopidy[9178]: INFO     2022-10-23 23:49:01,981 [9178:MainThread] mopidy.commands
okt 23 23:49:02 Desktop-Ubuntu mopidy[9178]:   Stopped StreamBackend (urn:uuid:2de17ed3-a7ac-4aea-adaf-8c0967f5c37f)
okt 23 23:49:02 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:49:01,981 [9178:StreamBackend-5 (_actor_loop)] pykka
okt 23 23:49:02 Desktop-Ubuntu mopidy[9178]:   Unregistered StreamBackend (urn:uuid:2de17ed3-a7ac-4aea-adaf-8c0967f5c37f)
okt 23 23:49:02 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:49:01,980 [9178:StreamBackend-5 (_actor_loop)] pykka
okt 23 23:49:02 Desktop-Ubuntu mopidy[9178]:   Stopping 1 instance(s) of StreamBackend
okt 23 23:49:02 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:49:01,980 [9178:MainThread] mopidy.internal.process
okt 23 23:49:02 Desktop-Ubuntu mopidy[9178]:   Stopped M3UBackend (urn:uuid:5af39cf2-ee0f-46df-9c35-8dd30ed9bad4)
okt 23 23:49:02 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:49:01,980 [9178:M3UBackend-4 (_actor_loop)] pykka
okt 23 23:49:02 Desktop-Ubuntu mopidy[9178]:   Unregistered M3UBackend (urn:uuid:5af39cf2-ee0f-46df-9c35-8dd30ed9bad4)
okt 23 23:49:02 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:49:01,980 [9178:M3UBackend-4 (_actor_loop)] pykka
okt 23 23:49:02 Desktop-Ubuntu mopidy[9178]:   Stopping 1 instance(s) of M3UBackend
okt 23 23:49:02 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:49:01,980 [9178:MainThread] mopidy.internal.process
okt 23 23:49:02 Desktop-Ubuntu mopidy[9178]:   Stopped FileBackend (urn:uuid:06eb422b-5dc4-4a32-8258-5bbda5ae378e)
okt 23 23:49:02 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:49:01,980 [9178:FileBackend-3 (_actor_loop)] pykka
okt 23 23:49:02 Desktop-Ubuntu mopidy[9178]:   Unregistered FileBackend (urn:uuid:06eb422b-5dc4-4a32-8258-5bbda5ae378e)
okt 23 23:49:02 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:49:01,979 [9178:FileBackend-3 (_actor_loop)] pykka
okt 23 23:49:02 Desktop-Ubuntu mopidy[9178]:   Stopping 1 instance(s) of FileBackend
okt 23 23:49:02 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:49:01,979 [9178:MainThread] mopidy.internal.process
okt 23 23:49:02 Desktop-Ubuntu mopidy[9178]:   Stopping 0 instance(s) of YouTubeBackend
okt 23 23:49:02 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:49:01,979 [9178:MainThread] mopidy.internal.process
okt 23 23:49:02 Desktop-Ubuntu mopidy[9178]:   Stopping Mopidy backends
okt 23 23:49:02 Desktop-Ubuntu mopidy[9178]: INFO     2022-10-23 23:49:01,979 [9178:MainThread] mopidy.commands
okt 23 23:49:02 Desktop-Ubuntu mopidy[9178]:   Stopped Core (urn:uuid:7a57d87f-d707-45e4-8031-ebd323d77323)
okt 23 23:49:02 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:49:01,979 [9178:Core-6 (_actor_loop)] pykka
okt 23 23:49:02 Desktop-Ubuntu mopidy[9178]:   Unregistered Core (urn:uuid:7a57d87f-d707-45e4-8031-ebd323d77323)
okt 23 23:49:02 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:49:01,979 [9178:Core-6 (_actor_loop)] pykka
okt 23 23:49:02 Desktop-Ubuntu mopidy[9178]:   Stopping 1 instance(s) of Core
okt 23 23:49:02 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:49:01,979 [9178:MainThread] mopidy.internal.process
okt 23 23:49:02 Desktop-Ubuntu mopidy[9178]:   Stopped HTTP server
okt 23 23:49:02 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:49:01,978 [9178:HttpServer] mopidy.http.actor
okt 23 23:49:01 Desktop-Ubuntu mopidy[9178]:   Stopping Mopidy core
okt 23 23:49:01 Desktop-Ubuntu mopidy[9178]: INFO     2022-10-23 23:49:01,978 [9178:MainThread] mopidy.commands
okt 23 23:49:01 Desktop-Ubuntu mopidy[9178]:   Stopping HTTP server
okt 23 23:49:01 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:49:01,978 [9178:HttpFrontend-11 (_actor_loop)] mopidy.http.actor
okt 23 23:49:01 Desktop-Ubuntu mopidy[9178]:   Zeroconf service 'Mopidy HTTP server on Desktop-Ubuntu' (_mopidy-http._tcp at []:6680): Unpublished
okt 23 23:49:01 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:49:01,978 [9178:HttpFrontend-11 (_actor_loop)] mopidy.zeroconf
okt 23 23:49:01 Desktop-Ubuntu mopidy[9178]:   Zeroconf service 'Mopidy HTTP server on Desktop-Ubuntu' (_http._tcp at []:6680): Unpublished
okt 23 23:49:01 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:49:01,977 [9178:HttpFrontend-11 (_actor_loop)] mopidy.zeroconf
okt 23 23:49:01 Desktop-Ubuntu mopidy[9178]:   Stopped HttpFrontend (urn:uuid:09cfe25b-c670-4369-9b95-f871635d3561)
okt 23 23:49:01 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:49:01,976 [9178:HttpFrontend-11 (_actor_loop)] pykka
okt 23 23:49:01 Desktop-Ubuntu mopidy[9178]:   Unregistered HttpFrontend (urn:uuid:09cfe25b-c670-4369-9b95-f871635d3561)
okt 23 23:49:01 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:49:01,976 [9178:HttpFrontend-11 (_actor_loop)] pykka
okt 23 23:49:01 Desktop-Ubuntu mopidy[9178]:   Stopping 1 instance(s) of HttpFrontend
okt 23 23:49:01 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:49:01,976 [9178:MainThread] mopidy.internal.process
okt 23 23:49:01 Desktop-Ubuntu mopidy[9178]:   Stopping Iris
okt 23 23:49:01 Desktop-Ubuntu mopidy[9178]: INFO     2022-10-23 23:49:01,976 [9178:IrisFrontend-9 (_actor_loop)] mopidy_iris.core
okt 23 23:49:01 Desktop-Ubuntu mopidy[9178]:   Stopped IrisFrontend (urn:uuid:d0736066-af5e-4287-86c3-620765a2d66b)
okt 23 23:49:01 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:49:01,976 [9178:IrisFrontend-9 (_actor_loop)] pykka
okt 23 23:49:01 Desktop-Ubuntu mopidy[9178]:   Unregistered IrisFrontend (urn:uuid:d0736066-af5e-4287-86c3-620765a2d66b)
okt 23 23:49:01 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:49:01,975 [9178:IrisFrontend-9 (_actor_loop)] pykka
okt 23 23:49:01 Desktop-Ubuntu mopidy[9178]:   Stopping 1 instance(s) of IrisFrontend
okt 23 23:49:01 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:49:01,975 [9178:MainThread] mopidy.internal.process
okt 23 23:49:01 Desktop-Ubuntu mopidy[9178]:   Stopped YouTubeCoreListener (urn:uuid:4ba69abb-10c5-4ba1-9984-db743b350233)
okt 23 23:49:01 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:49:01,975 [9178:YouTubeCoreListener-8 (_actor_loop)] pykka
okt 23 23:49:01 Desktop-Ubuntu mopidy[9178]:   Unregistered YouTubeCoreListener (urn:uuid:4ba69abb-10c5-4ba1-9984-db743b350233)
okt 23 23:49:01 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:49:01,975 [9178:YouTubeCoreListener-8 (_actor_loop)] pykka
okt 23 23:49:01 Desktop-Ubuntu mopidy[9178]:   Stopping 1 instance(s) of YouTubeCoreListener
okt 23 23:49:01 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:49:01,975 [9178:MainThread] mopidy.internal.process
okt 23 23:49:01 Desktop-Ubuntu systemd[1]: Stopping Mopidy music server...
okt 23 23:49:01 Desktop-Ubuntu mopidy[9178]:   Stopped YouTubeAutoplayer (urn:uuid:bd035aed-bc2e-416f-936f-d37ceab5f6e0)
okt 23 23:49:01 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:49:01,975 [9178:YouTubeAutoplayer-7 (_actor_loop)] pykka
okt 23 23:49:01 Desktop-Ubuntu mopidy[9178]:   Unregistered YouTubeAutoplayer (urn:uuid:bd035aed-bc2e-416f-936f-d37ceab5f6e0)
okt 23 23:49:01 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:49:01,975 [9178:YouTubeAutoplayer-7 (_actor_loop)] pykka
okt 23 23:49:01 Desktop-Ubuntu mopidy[9178]:   Stopping 1 instance(s) of YouTubeAutoplayer
okt 23 23:49:01 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:49:01,974 [9178:MainThread] mopidy.internal.process
okt 23 23:49:01 Desktop-Ubuntu mopidy[9178]:   Stopping Mopidy frontends
okt 23 23:49:01 Desktop-Ubuntu mopidy[9178]: INFO     2022-10-23 23:49:01,974 [9178:MainThread] mopidy.commands
okt 23 23:49:01 Desktop-Ubuntu mopidy[9178]:   GLib mainloop got SIGTERM. Exiting...
okt 23 23:49:01 Desktop-Ubuntu mopidy[9178]: INFO     2022-10-23 23:49:01,974 [9178:MainThread] mopidy.commands
okt 23 23:47:02 Desktop-Ubuntu mopidy[9178]:   {'id': 16665616223898, 'jsonrpc': '2.0', 'method': 'get_connections', 'result': {'connections': [{'connection_id': 'A0PJ170MKR5J', 'ip': '127.0.0.1', 'created': '2022-10-23 23:46:37', 'username': 166656148284185, 'client_id': 166656148284193}]}, 'recipient': 'A0PJ170MKR5J'}
okt 23 23:47:02 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:47:02,390 [9178:HttpServer] mopidy_iris.core
okt 23 23:47:02 Desktop-Ubuntu mopidy[9178]:   Iris websocket message received: {"jsonrpc":"2.0","id":16665616223898,"method":"get_connections"}
okt 23 23:47:02 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:47:02,390 [9178:HttpServer] mopidy_iris.handlers
okt 23 23:47:00 Desktop-Ubuntu mopidy[9178]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 20, "result": [{"__model__": "Ref", "uri": "file:///var/lib/mopidy", "name": "Files", "type": "directory"}]}'
okt 23 23:47:00 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:47:00,121 [9178:HttpServer] mopidy.http.handlers
okt 23 23:47:00 Desktop-Ubuntu mopidy[9178]:   Received WebSocket message from 127.0.0.1: '{"method":"core.library.browse","params":{"uri":null},"jsonrpc":"2.0","id":20}'
okt 23 23:47:00 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:47:00,120 [9178:HttpServer] mopidy.http.handlers
okt 23 23:46:59 Desktop-Ubuntu mopidy[9178]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 19, "result": [{"__model__": "Ref", "uri": "file:///var/lib/mopidy/http", "name": "http", "type": "directory"}, {"__model__": "Ref", "uri": "file:///var/lib/mopidy/iris", "name": "iris", "type": "directory"}, {"__model__": "Ref", "uri": "file:///var/lib/mopidy/m3u", "name": "m3u", "type": "directory"}]}'
okt 23 23:46:59 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:46:59,264 [9178:HttpServer] mopidy.http.handlers
okt 23 23:46:59 Desktop-Ubuntu mopidy[9178]:   Browsing files at: file:///var/lib/mopidy
okt 23 23:46:59 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:46:59,262 [9178:FileBackend-3 (_actor_loop)] mopidy.file.library
okt 23 23:46:59 Desktop-Ubuntu mopidy[9178]:   Received WebSocket message from 127.0.0.1: '{"method":"core.library.browse","params":{"uri":"file:///var/lib/mopidy"},"jsonrpc":"2.0","id":19}'
okt 23 23:46:59 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:46:59,261 [9178:HttpServer] mopidy.http.handlers
okt 23 23:46:59 Desktop-Ubuntu mopidy[9178]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 18, "result": {"file:///var/lib/mopidy": [{"__model__": "Track", "uri": "file:///var/lib/mopidy", "name": "mopidy"}]}}'
okt 23 23:46:59 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:46:59,207 [9178:HttpServer] mopidy.http.handlers
okt 23 23:46:59 Desktop-Ubuntu mopidy[9178]:   Failed looking up file:///var/lib/mopidy: gst-resource-error-quark: "/var/lib/mopidy" is a directory. (5)
okt 23 23:46:59 Desktop-Ubuntu mopidy[9178]: WARNING  2022-10-23 23:46:59,206 [9178:FileBackend-3 (_actor_loop)] mopidy.file.library
okt 23 23:46:59 Desktop-Ubuntu mopidy[9178]:   element filesrc15: GstMessageError, gerror=(GError)NULL, debug=(string)"../plugins/elements/gstf...
okt 23 23:46:59 Desktop-Ubuntu mopidy[9178]: TRACE    2022-10-23 23:46:59,206 [9178:FileBackend-3 (_actor_loop)] mopidy.audio.scan
okt 23 23:46:59 Desktop-Ubuntu mopidy[9178]:   Looking up file URI: file:///var/lib/mopidy
okt 23 23:46:59 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:46:59,205 [9178:FileBackend-3 (_actor_loop)] mopidy.file.library
okt 23 23:46:59 Desktop-Ubuntu mopidy[9178]:   Received WebSocket message from 127.0.0.1: '{"method":"core.library.lookup","params":{"uris":["file:///var/lib/mopidy"]},"jsonrpc":"2.0","id":18}'
okt 23 23:46:59 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:46:59,204 [9178:HttpServer] mopidy.http.handlers
okt 23 23:46:57 Desktop-Ubuntu mopidy[9178]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 17, "result": []}'
okt 23 23:46:57 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:46:57,023 [9178:HttpServer] mopidy.http.handlers
okt 23 23:46:57 Desktop-Ubuntu mopidy[9178]:   Browsing files at: file:///var/lib/mopidy/iris
okt 23 23:46:57 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:46:57,023 [9178:FileBackend-3 (_actor_loop)] mopidy.file.library
okt 23 23:46:57 Desktop-Ubuntu mopidy[9178]:   Received WebSocket message from 127.0.0.1: '{"method":"core.library.browse","params":{"uri":"file:///var/lib/mopidy/iris"},"jsonrpc":"2.0","id":17}'
okt 23 23:46:57 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:46:57,022 [9178:HttpServer] mopidy.http.handlers
okt 23 23:46:56 Desktop-Ubuntu mopidy[9178]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 16, "result": {"file:///var/lib/mopidy/iris": [{"__model__": "Track", "uri": "file:///var/lib/mopidy/iris", "name": "iris"}]}}'
okt 23 23:46:56 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:46:56,970 [9178:HttpServer] mopidy.http.handlers
okt 23 23:46:56 Desktop-Ubuntu mopidy[9178]:   Failed looking up file:///var/lib/mopidy/iris: gst-resource-error-quark: "/var/lib/mopidy/iris" is a directory. (5)
okt 23 23:46:56 Desktop-Ubuntu mopidy[9178]: WARNING  2022-10-23 23:46:56,969 [9178:FileBackend-3 (_actor_loop)] mopidy.file.library
okt 23 23:46:56 Desktop-Ubuntu mopidy[9178]:   element filesrc14: GstMessageError, gerror=(GError)NULL, debug=(string)"../plugins/elements/gstf...
okt 23 23:46:56 Desktop-Ubuntu mopidy[9178]: TRACE    2022-10-23 23:46:56,969 [9178:FileBackend-3 (_actor_loop)] mopidy.audio.scan
okt 23 23:46:56 Desktop-Ubuntu mopidy[9178]:   Looking up file URI: file:///var/lib/mopidy/iris
okt 23 23:46:56 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:46:56,968 [9178:FileBackend-3 (_actor_loop)] mopidy.file.library
okt 23 23:46:56 Desktop-Ubuntu mopidy[9178]:   Received WebSocket message from 127.0.0.1: '{"method":"core.library.lookup","params":{"uris":["file:///var/lib/mopidy/iris"]},"jsonrpc":"2.0","id":16}'
okt 23 23:46:56 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:46:56,967 [9178:HttpServer] mopidy.http.handlers
okt 23 23:46:49 Desktop-Ubuntu mopidy[9178]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 15, "result": [{"__model__": "Ref", "uri": "file:///var/lib/mopidy/http", "name": "http", "type": "directory"}, {"__model__": "Ref", "uri": "file:///var/lib/mopidy/iris", "name": "iris", "type": "directory"}, {"__model__": "Ref", "uri": "file:///var/lib/mopidy/m3u", "name": "m3u", "type": "directory"}]}'
okt 23 23:46:49 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:46:49,296 [9178:HttpServer] mopidy.http.handlers
okt 23 23:46:49 Desktop-Ubuntu mopidy[9178]:   Browsing files at: file:///var/lib/mopidy
okt 23 23:46:49 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:46:49,294 [9178:FileBackend-3 (_actor_loop)] mopidy.file.library
okt 23 23:46:49 Desktop-Ubuntu mopidy[9178]:   Received WebSocket message from 127.0.0.1: '{"method":"core.library.browse","params":{"uri":"file:///var/lib/mopidy"},"jsonrpc":"2.0","id":15}'
okt 23 23:46:49 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:46:49,293 [9178:HttpServer] mopidy.http.handlers
okt 23 23:46:49 Desktop-Ubuntu mopidy[9178]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 14, "result": {"file:///var/lib/mopidy": [{"__model__": "Track", "uri": "file:///var/lib/mopidy", "name": "mopidy"}]}}'
okt 23 23:46:49 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:46:49,233 [9178:HttpServer] mopidy.http.handlers
okt 23 23:46:49 Desktop-Ubuntu mopidy[9178]:   Failed looking up file:///var/lib/mopidy: gst-resource-error-quark: "/var/lib/mopidy" is a directory. (5)
okt 23 23:46:49 Desktop-Ubuntu mopidy[9178]: WARNING  2022-10-23 23:46:49,232 [9178:FileBackend-3 (_actor_loop)] mopidy.file.library
okt 23 23:46:49 Desktop-Ubuntu mopidy[9178]:   element filesrc13: GstMessageError, gerror=(GError)NULL, debug=(string)"../plugins/elements/gstf...
okt 23 23:46:49 Desktop-Ubuntu mopidy[9178]: TRACE    2022-10-23 23:46:49,231 [9178:FileBackend-3 (_actor_loop)] mopidy.audio.scan
okt 23 23:46:49 Desktop-Ubuntu mopidy[9178]:   Looking up file URI: file:///var/lib/mopidy
okt 23 23:46:49 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:46:49,230 [9178:FileBackend-3 (_actor_loop)] mopidy.file.library
okt 23 23:46:49 Desktop-Ubuntu mopidy[9178]:   Received WebSocket message from 127.0.0.1: '{"method":"core.library.lookup","params":{"uris":["file:///var/lib/mopidy"]},"jsonrpc":"2.0","id":14}'
okt 23 23:46:49 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:46:49,230 [9178:HttpServer] mopidy.http.handlers
okt 23 23:46:46 Desktop-Ubuntu mopidy[9178]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 13, "result": [{"__model__": "Ref", "uri": "file:///var/lib/mopidy", "name": "Files", "type": "directory"}]}'
okt 23 23:46:46 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:46:46,952 [9178:HttpServer] mopidy.http.handlers
okt 23 23:46:46 Desktop-Ubuntu mopidy[9178]:   Received WebSocket message from 127.0.0.1: '{"method":"core.library.browse","params":{"uri":null},"jsonrpc":"2.0","id":13}'
okt 23 23:46:46 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:46:46,951 [9178:HttpServer] mopidy.http.handlers
okt 23 23:46:41 Desktop-Ubuntu mopidy[9178]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 12, "result": []}'
okt 23 23:46:41 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:46:41,000 [9178:HttpServer] mopidy.http.handlers
okt 23 23:46:41 Desktop-Ubuntu mopidy[9178]:   Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.add","params":{"uris":["jukebox:track:Jukebox/1.plate"],"at_position":0},"jsonrpc":"2.0","id":12}'
okt 23 23:46:41 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:46:40,999 [9178:HttpServer] mopidy.http.handlers
okt 23 23:46:38 Desktop-Ubuntu mopidy[9178]:   304 GET /iris/service-worker.js (127.0.0.1) 0.64ms
okt 23 23:46:38 Desktop-Ubuntu mopidy[9178]: INFO     2022-10-23 23:46:38,876 [9178:HttpServer] tornado.access
okt 23 23:46:38 Desktop-Ubuntu mopidy[9178]:   {'id': 166656159756817, 'jsonrpc': '2.0', 'method': 'get_version', 'result': {'version': {'current': '3.64.1', 'latest': '3.64.1', 'is_root': False, 'upgrade_available': False}}, 'recipient': 'A0PJ170MKR5J'}
okt 23 23:46:38 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:46:38,405 [9178:HttpServer] mopidy_iris.core
okt 23 23:46:37 Desktop-Ubuntu mopidy[9178]:   Iris websocket message received: {"jsonrpc":"2.0","id":166656159756817,"method":"get_version"}
okt 23 23:46:37 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:46:37,569 [9178:HttpServer] mopidy_iris.handlers
okt 23 23:46:37 Desktop-Ubuntu mopidy[9178]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 11, "result": null}'
okt 23 23:46:37 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:46:37,137 [9178:HttpServer] mopidy.http.handlers
okt 23 23:46:37 Desktop-Ubuntu mopidy[9178]:   Received WebSocket message from 127.0.0.1: '{"method":"core.playback.get_stream_title","params":{},"jsonrpc":"2.0","id":11}'
okt 23 23:46:37 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:46:37,137 [9178:HttpServer] mopidy.http.handlers
okt 23 23:46:37 Desktop-Ubuntu mopidy[9178]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 10, "result": ["file", "http", "https", "m3u", "rtsp"]}'
okt 23 23:46:37 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:46:37,136 [9178:HttpServer] mopidy.http.handlers
okt 23 23:46:37 Desktop-Ubuntu mopidy[9178]:   Received WebSocket message from 127.0.0.1: '{"method":"core.get_uri_schemes","params":{},"jsonrpc":"2.0","id":10}'
okt 23 23:46:37 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:46:37,136 [9178:HttpServer] mopidy.http.handlers
okt 23 23:46:37 Desktop-Ubuntu mopidy[9178]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 9, "result": 0}'
okt 23 23:46:37 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:46:37,136 [9178:HttpServer] mopidy.http.handlers
okt 23 23:46:37 Desktop-Ubuntu mopidy[9178]:   Received WebSocket message from 127.0.0.1: '{"method":"core.playback.get_time_position","params":{},"jsonrpc":"2.0","id":9}'
okt 23 23:46:37 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:46:37,135 [9178:HttpServer] mopidy.http.handlers
okt 23 23:46:37 Desktop-Ubuntu mopidy[9178]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 8, "result": []}'
okt 23 23:46:37 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:46:37,135 [9178:HttpServer] mopidy.http.handlers
okt 23 23:46:37 Desktop-Ubuntu mopidy[9178]:   Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_tl_tracks","params":{},"jsonrpc":"2.0","id":8}'
okt 23 23:46:37 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:46:37,135 [9178:HttpServer] mopidy.http.handlers
okt 23 23:46:37 Desktop-Ubuntu mopidy[9178]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 7, "result": false}'
okt 23 23:46:37 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:46:37,135 [9178:HttpServer] mopidy.http.handlers
okt 23 23:46:37 Desktop-Ubuntu mopidy[9178]:   Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_repeat","params":{},"jsonrpc":"2.0","id":7}'
okt 23 23:46:37 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:46:37,134 [9178:HttpServer] mopidy.http.handlers
okt 23 23:46:37 Desktop-Ubuntu mopidy[9178]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 6, "result": false}'
okt 23 23:46:37 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:46:37,134 [9178:HttpServer] mopidy.http.handlers
okt 23 23:46:37 Desktop-Ubuntu mopidy[9178]:   Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_random","params":{},"jsonrpc":"2.0","id":6}'
okt 23 23:46:37 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:46:37,134 [9178:HttpServer] mopidy.http.handlers
okt 23 23:46:37 Desktop-Ubuntu mopidy[9178]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 5, "result": false}'
okt 23 23:46:37 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:46:37,134 [9178:HttpServer] mopidy.http.handlers
okt 23 23:46:37 Desktop-Ubuntu mopidy[9178]:   Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_consume","params":{},"jsonrpc":"2.0","id":5}'
okt 23 23:46:37 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:46:37,133 [9178:HttpServer] mopidy.http.handlers
okt 23 23:46:37 Desktop-Ubuntu mopidy[9178]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 4, "result": false}'
okt 23 23:46:37 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:46:37,133 [9178:HttpServer] mopidy.http.handlers
okt 23 23:46:37 Desktop-Ubuntu mopidy[9178]:   Received WebSocket message from 127.0.0.1: '{"method":"core.mixer.get_mute","params":{},"jsonrpc":"2.0","id":4}'
okt 23 23:46:37 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:46:37,133 [9178:HttpServer] mopidy.http.handlers
okt 23 23:46:37 Desktop-Ubuntu mopidy[9178]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 3, "result": 100}'
okt 23 23:46:37 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:46:37,132 [9178:HttpServer] mopidy.http.handlers
okt 23 23:46:37 Desktop-Ubuntu mopidy[9178]:   Received WebSocket message from 127.0.0.1: '{"method":"core.mixer.get_volume","params":{},"jsonrpc":"2.0","id":3}'
okt 23 23:46:37 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:46:37,132 [9178:HttpServer] mopidy.http.handlers
okt 23 23:46:37 Desktop-Ubuntu mopidy[9178]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 2, "result": "stopped"}'
okt 23 23:46:37 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:46:37,132 [9178:HttpServer] mopidy.http.handlers
okt 23 23:46:37 Desktop-Ubuntu mopidy[9178]:   Received WebSocket message from 127.0.0.1: '{"method":"core.playback.get_state","params":{},"jsonrpc":"2.0","id":2}'
okt 23 23:46:37 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:46:37,131 [9178:HttpServer] mopidy.http.handlers
okt 23 23:46:37 Desktop-Ubuntu mopidy[9178]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 1, "result": null}'
okt 23 23:46:37 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:46:37,131 [9178:HttpServer] mopidy.http.handlers
okt 23 23:46:37 Desktop-Ubuntu mopidy[9178]:   Received WebSocket message from 127.0.0.1: '{"method":"core.playback.get_current_tl_track","params":{},"jsonrpc":"2.0","id":1}'
okt 23 23:46:37 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:46:37,130 [9178:HttpServer] mopidy.http.handlers
okt 23 23:46:37 Desktop-Ubuntu mopidy[9178]:   {'id': 16665615970679, 'jsonrpc': '2.0', 'method': 'get_queue_metadata', 'result': {'queue_metadata': {}}, 'recipient': 'A0PJ170MKR5J'}
okt 23 23:46:37 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:46:37,067 [9178:HttpServer] mopidy_iris.core
okt 23 23:46:37 Desktop-Ubuntu mopidy[9178]:   Iris websocket message received: {"jsonrpc":"2.0","id":16665615970679,"method":"get_queue_metadata"}
okt 23 23:46:37 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:46:37,067 [9178:HttpServer] mopidy_iris.handlers
okt 23 23:46:37 Desktop-Ubuntu mopidy[9178]:   {'id': 166656159706571, 'jsonrpc': '2.0', 'method': 'get_pinned', 'result': {'pinned': []}, 'recipient': 'A0PJ170MKR5J'}
okt 23 23:46:37 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:46:37,065 [9178:HttpServer] mopidy_iris.core
okt 23 23:46:37 Desktop-Ubuntu mopidy[9178]:   Iris websocket message received: {"jsonrpc":"2.0","id":166656159706571,"method":"get_pinned"}
okt 23 23:46:37 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:46:37,065 [9178:HttpServer] mopidy_iris.handlers
okt 23 23:46:37 Desktop-Ubuntu mopidy[9178]:   {'id': 166656159706245, 'jsonrpc': '2.0', 'method': 'get_commands', 'result': {'commands': {}}, 'recipient': 'A0PJ170MKR5J'}
okt 23 23:46:37 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:46:37,063 [9178:HttpServer] mopidy_iris.core
okt 23 23:46:37 Desktop-Ubuntu mopidy[9178]:   Iris websocket message received: {"jsonrpc":"2.0","id":166656159706245,"method":"get_commands"}
okt 23 23:46:37 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:46:37,063 [9178:HttpServer] mopidy_iris.handlers
okt 23 23:46:37 Desktop-Ubuntu mopidy[9178]:   {'id': 166656159706138, 'jsonrpc': '2.0', 'method': 'get_radio', 'result': {'radio': {'enabled': 0, 'seed_artists': [], 'seed_genres': [], 'seed_tracks': [], 'results': []}}, 'recipient': 'A0PJ170MKR5J'}
okt 23 23:46:37 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:46:37,061 [9178:HttpServer] mopidy_iris.core
okt 23 23:46:37 Desktop-Ubuntu mopidy[9178]:   Iris websocket message received: {"jsonrpc":"2.0","id":166656159706138,"method":"get_radio"}
okt 23 23:46:37 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:46:37,061 [9178:HttpServer] mopidy_iris.handlers
okt 23 23:46:37 Desktop-Ubuntu mopidy[9178]:   {'id': 166656159705918, 'jsonrpc': '2.0', 'method': 'get_shared_config', 'result': {'shared_config': {}}, 'recipient': 'A0PJ170MKR5J'}
okt 23 23:46:37 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:46:37,060 [9178:HttpServer] mopidy_iris.core
okt 23 23:46:37 Desktop-Ubuntu mopidy[9178]:   Iris websocket message received: {"jsonrpc":"2.0","id":166656159705918,"method":"get_shared_config"}
okt 23 23:46:37 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:46:37,060 [9178:HttpServer] mopidy_iris.handlers
okt 23 23:46:37 Desktop-Ubuntu mopidy[9178]:   {'id': 166656159705849, 'jsonrpc': '2.0', 'method': 'get_config', 'result': {'config': {'is_root': False, 'spotify_username': False, 'country': 'NZ', 'locale': 'en_NZ', 'snapcast_enabled': True, 'snapcast_host': 'localhost', 'snapcast_port': '1780', 'snapcast_ssl': False, 'snapcast_stream': 'Default', 'spotify_authorization_url': 'https://jamesbarnsley.co.nz/iris/auth_spotify.php', 'lastfm_authorization_url': 'https://jamesbarnsley.co.nz/iris/auth_lastfm.php', 'genius_authorization_url': 'https://jamesbarnsley.co.nz/iris/auth_genius.php', 'shared_config': {}}}, 'recipient': 'A0PJ170MKR5J'}
okt 23 23:46:37 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:46:37,058 [9178:HttpServer] mopidy_iris.core
okt 23 23:46:37 Desktop-Ubuntu mopidy[9178]:   Iris websocket message received: {"jsonrpc":"2.0","id":166656159705849,"method":"get_config"}
okt 23 23:46:37 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:46:37,058 [9178:HttpServer] mopidy_iris.handlers
okt 23 23:46:37 Desktop-Ubuntu mopidy[9178]:   {'id': 166656159705611, 'jsonrpc': '2.0', 'method': 'update_connection', 'result': {'connection': {'connection_id': 'A0PJ170MKR5J', 'ip': '127.0.0.1', 'created': '2022-10-23 23:46:37', 'username': 166656148284185, 'client_id': 166656148284193}}, 'recipient': 'A0PJ170MKR5J'}
okt 23 23:46:37 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:46:37,056 [9178:HttpServer] mopidy_iris.core
okt 23 23:46:37 Desktop-Ubuntu mopidy[9178]:   {'method': 'connection_changed', 'params': {'connection': {'connection_id': 'A0PJ170MKR5J', 'ip': '127.0.0.1', 'created': '2022-10-23 23:46:37', 'username': 166656148284185, 'client_id': 166656148284193}}}
okt 23 23:46:37 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:46:37,056 [9178:HttpServer] mopidy_iris.core
okt 23 23:46:37 Desktop-Ubuntu mopidy[9178]:   Iris websocket message received: {"jsonrpc":"2.0","id":166656159705611,"method":"update_connection","params":{"username":166656148284185,"client_id":166656148284193}}
okt 23 23:46:37 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:46:37,056 [9178:HttpServer] mopidy_iris.handlers
okt 23 23:46:37 Desktop-Ubuntu mopidy[9178]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 0, "result": {"core.get_uri_schemes": {"description": "Get list of URI schemes we can handle", "params": []}, "core.get_version": {"description": "Get version of the Mopidy core API", "params": []}, "core.history.get_history": {"description": "Get the track history.\\n\\nThe timestamps are milliseconds since epoch.\\n\\n:returns: the track history\\n:rtype: list of (timestamp, :class:`mopidy.models.Ref`) tuples", "params": []}, "core.history.get_length": {"description": "Get the number of tracks in the history.\\n\\n:returns: the history length\\n:rtype: int", "params": []}, "core.library.browse": {"description": "Browse directories and tracks at the given ``uri``.\\n\\n``uri`` is a string which represents some directory belonging to a\\nbackend. To get the intial root directories for backends pass\\n:class:`None` as the URI.\\n\\nReturns a list of :class:`mopidy.models.Ref` objects for the\\ndirectories and tracks at the given ``uri``.\\n\\nThe :class:`~mopidy.models.Ref` objects representing tracks keep the\\ntrack\'s original URI. A matching pair of objects can look like this::\\n\\n    Track(uri=\'dummy:/foo.mp3\', name=\'foo\', artists=..., album=...)\\n    Ref.track(uri=\'dummy:/foo.mp3\', name=\'foo\')\\n\\nThe :class:`~mopidy.models.Ref` objects representing directories have\\nbackend specific URIs. These are opaque values, so no one but the\\nbackend that created them should try and derive any meaning from them.\\nThe only valid exception to this is checking the scheme, as it is used\\nto route browse requests to the correct backend.\\n\\nFor example, the dummy library\'s ``/bar`` directory could be returned\\nlike this::\\n\\n    Ref.directory(uri=\'dummy:directory:/bar\', name=\'bar\')\\n\\n:param string uri: URI to browse\\n:rtype: list of :class:`mopidy.models.Ref`\\n\\n.. versionadded:: 0.18", "params": [{"name": "uri"}]}, "core.library.get_distinct": {"description": "List distinct values for a given field from the library.\\n\\nThis has mainly been added to support the list commands the MPD\\nprotocol supports in a more sane fashion. Other frontends are not\\nrecommended to use this method.\\n\\n:param string field: Any one of ``uri``, ``track_name``, ``album``,\\n    ``artist``, ``albumartist``, ``composer``, ``performer``,\\n    ``track_no``, ``genre``, ``date``, ``comment``, ``disc_no``,\\n    ``musicbrainz_albumid``, ``musicbrainz_artistid``, or\\n    ``musicbrainz_trackid``.\\n:param dict query: Query to use for limiting results, see\\n    :meth:`search` for details about the query format.\\n:rtype: set of values corresponding to the requested field type.\\n\\n.. versionadded:: 1.0", "params": [{"name": "field"}, {"name": "query", "default": null}]}, "core.library.get_images": {"description": "Lookup the images for the given URIs\\n\\nBackends can use this to return image URIs for any URI they know about\\nbe it tracks, albums, playlists. The lookup result is a dictionary\\nmapping the provided URIs to lists of images.\\n\\nUnknown URIs or URIs the corresponding backend couldn\'t find anything\\nfor will simply return an empty list for that URI.\\n\\n:param uris: list of URIs to find images for\\n:type uris: list of string\\n:rtype: {uri: tuple of :class:`mopidy.models.Image`}\\n\\n.. versionadded:: 1.0", "params": [{"name": "uris"}]}, "core.library.lookup": {"description": "Lookup the given URIs.\\n\\nIf the URI expands to multiple tracks, the returned list will contain\\nthem all.\\n\\n:param uris: track URIs\\n:type uris: list of string\\n:rtype: {uri: list of :class:`mopidy.models.Track`}", "params": [{"name": "uris"}]}, "core.library.refresh": {"description": "Refresh library. Limit to URI and below if an URI is given.\\n\\n:param uri: directory or track URI\\n:type uri: string", "params": [{"name": "uri", "default": null}]}, "core.library.search": {"description": "Search the library for tracks where ``field`` contains ``values``.\\n\\n``field`` can be one of ``uri``, ``track_name``, ``album``, ``artist``,\\n``albumartist``, ``composer``, ``performer``, ``track_no``, ``genre``,\\n``date``, ``comment``, ``disc_no``, ``musicbrainz_albumid``,\\n``musicbrainz_artistid``, ``musicbrainz_trackid`` or ``any``.\\n\\nIf ``uris`` is given, the search is limited to results from within the\\nURI roots. For example passing ``uris=[\'file:\']`` will limit the search\\nto the local backend.\\n\\nExamples::\\n\\n    # Returns results matching \'a\' in any backend\\n    search({\'any\': [\'a\']})\\n\\n    # Returns results matching artist \'xyz\' in any backend\\n    search({\'artist\': [\'xyz\']})\\n\\n    # Returns results matching \'a\' and \'b\' and artist \'xyz\' in any\\n    # backend\\n    search({\'any\': [\'a\', \'b\'], \'artist\': [\'xyz\']})\\n\\n    # Returns results matching \'a\' if within the given URI roots\\n    # \\"file:///media/music\\" and \\"spotify:\\"\\n    search({\'any\': [\'a\']}, uris=[\'file:///media/music\', \'spotify:\'])\\n\\n    # Returns results matching artist \'xyz\' and \'abc\' in any backend\\n    search({\'artist\': [\'xyz\', \'abc\']})\\n\\n:param query: one or more queries to search for\\n:type query: dict\\n:param uris: zero or more URI roots to limit the search to\\n:type uris: list of string or :class:`None`\\n:param exact: if the search should use exact matching\\n:type exact: :class:`bool`\\n:rtype: list of :class:`mopidy.models.SearchResult`\\n\\n.. versionadded:: 1.0\\n    The ``exact`` keyword argument.", "params": [{"name": "query"}, {"name": "uris", "default": null}, {"name": "exact", "default": false}]}, "core.mixer.get_mute": {"description": "Get mute state.\\n\\n:class:`True` if muted, :class:`False` unmuted, :class:`None` if\\nunknown.", "params": []}, "core.mixer.get_volume": {"description": "Get the volume.\\n\\nInteger in range [0..100] or :class:`None` if unknown.\\n\\nThe volume scale is linear.", "params": []}, "core.mixer.set_mute": {"description": "Set mute state.\\n\\n:class:`True` to mute, :class:`False` to unmute.\\n\\nReturns :class:`True` if call is successful, otherwise :class:`False`.", "params": [{"name": "mute"}]}, "core.mixer.set_volume": {"description": "Set the volume.\\n\\nThe volume is defined as an integer in range [0..100].\\n\\nThe volume scale is linear.\\n\\nReturns :class:`True` if call is successful, otherwise :class:`False`.", "params": [{"name": "volume"}]}, "core.playback.get_current_tl_track": {"description": "Get the currently playing or selected track.\\n\\nReturns a :class:`mopidy.models.TlTrack` or :class:`None`.", "params": []}, "core.playback.get_current_tlid": {"description": "Get the currently playing or selected TLID.\\n\\nExtracted from :meth:`get_current_tl_track` for convenience.\\n\\nReturns a :class:`int` or :class:`None`.\\n\\n.. versionadded:: 1.1", "params": []}, "core.playback.get_current_track": {"description": "Get the currently playing or selected track.\\n\\nExtracted from :meth:`get_current_tl_track` for convenience.\\n\\nReturns a :class:`mopidy.models.Track` or :class:`None`.", "params": []}, "core.playback.get_state": {"description": "Get The playback state.", "params": []}, "core.playback.get_stream_title": {"description": "Get the current stream title or :class:`None`.", "params": []}, "core.playback.get_time_position": {"description": "Get time position in milliseconds.", "params": []}, "core.playback.next": {"description": "Change to the next track.\\n\\nThe current playback state will be kept. If it was playing, playing\\nwill continue. If it was paused, it will still be paused, etc.", "params": []}, "core.playback.pause": {"description": "Pause playback.", "params": []}, "core.playback.play": {"description": "Play the given track, or if the given tl_track and tlid is\\n:class:`None`, play the currently active track.\\n\\nNote that the track **must** already be in the tracklist.\\n\\n.. deprecated:: 3.0\\n    The ``tl_track`` argument. Use ``tlid`` instead.\\n\\n:param tl_track: track to play\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:param tlid: TLID of the track to play\\n:type tlid: :class:`int` or :class:`None`", "params": [{"name": "tl_track", "default": null}, {"name": "tlid", "default": null}]}, "core.playback.previous": {"description": "Change to the previous track.\\n\\nThe current playback state will be kept. If it was playing, playing\\nwill continue. If it was paused, it will still be paused, etc.", "params": []}, "core.playback.resume": {"description": "If paused, resume playing the current track.", "params": []}, "core.playback.seek": {"description": "Seeks to time position given in milliseconds.\\n\\n:param time_position: time position in milliseconds\\n:type time_position: int\\n:rtype: :class:`True` if successful, else :class:`False`", "params": [{"name": "time_position"}]}, "core.playback.set_state": {"description": "Set the playback state.\\n\\nMust be :attr:`PLAYING`, :attr:`PAUSED`, or :attr:`STOPPED`.\\n\\nPossible states and transitions:\\n\\n.. digraph:: state_transitions\\n\\n    \\"STOPPED\\" -> \\"PLAYING\\" [ label=\\"play\\" ]\\n    \\"STOPPED\\" -> \\"PAUSED\\" [ label=\\"pause\\" ]\\n    \\"PLAYING\\" -> \\"STOPPED\\" [ label=\\"stop\\" ]\\n    \\"PLAYING\\" -> \\"PAUSED\\" [ label=\\"pause\\" ]\\n    \\"PLAYING\\" -> \\"PLAYING\\" [ label=\\"play\\" ]\\n    \\"PAUSED\\" -> \\"PLAYING\\" [ label=\\"resume\\" ]\\n    \\"PAUSED\\" -> \\"STOPPED\\" [ label=\\"stop\\" ]", "params": [{"name": "new_state"}]}, "core.playback.stop": {"description": "Stop playing.", "params": []}, "core.playlists.as_list": {"description": "Get a list of the currently available playlists.\\n\\nReturns a list of :class:`~mopidy.models.Ref` objects referring to the\\nplaylists. In other words, no information about the playlists\' content\\nis given.\\n\\n:rtype: list of :class:`mopidy.models.Ref`\\n\\n.. versionadded:: 1.0", "params": []}, "core.playlists.create": {"description": "Create a new playlist.\\n\\nIf ``uri_scheme`` matches an URI scheme handled by a current backend,\\nthat backend is asked to create the playlist. If ``uri_scheme`` is\\n:class:`None` or doesn\'t match a current backend, the first backend is\\nasked to create the playlist.\\n\\nAll new playlists must be created by calling this method, and **not**\\nby creating new instances of :class:`mopidy.models.Playlist`.\\n\\n:param name: name of the new playlist\\n:type name: string\\n:param uri_scheme: use the backend matching the URI scheme\\n:type uri_scheme: string\\n:rtype: :class:`mopidy.models.Playlist` or :class:`None`", "params": [{"name": "name"}, {"name": "uri_scheme", "default": null}]}, "core.playlists.delete": {"description": "Delete playlist identified by the URI.\\n\\nIf the URI doesn\'t match the URI schemes handled by the current\\nbackends, nothing happens.\\n\\nReturns :class:`True` if deleted, :class:`False` otherwise.\\n\\n:param uri: URI of the playlist to delete\\n:type uri: string\\n:rtype: :class:`bool`\\n\\n.. versionchanged:: 2.2\\n    Return type defined.", "params": [{"name": "uri"}]}, "core.playlists.get_items": {"description": "Get the items in a playlist specified by ``uri``.\\n\\nReturns a list of :class:`~mopidy.models.Ref` objects referring to the\\nplaylist\'s items.\\n\\nIf a playlist with the given ``uri`` doesn\'t exist, it returns\\n:class:`None`.\\n\\n:rtype: list of :class:`mopidy.models.Ref`, or :class:`None`\\n\\n.. versionadded:: 1.0", "params": [{"name": "uri"}]}, "core.playlists.get_uri_schemes": {"description": "Get the list of URI schemes that support playlists.\\n\\n:rtype: list of string\\n\\n.. versionadded:: 2.0", "params": []}, "core.playlists.lookup": {"description": "Lookup playlist with given URI in both the set of playlists and in any\\nother playlist sources. Returns :class:`None` if not found.\\n\\n:param uri: playlist URI\\n:type uri: string\\n:rtype: :class:`mopidy.models.Playlist` or :class:`None`", "params": [{"name": "uri"}]}, "core.playlists.refresh": {"description": "Refresh the playlists in :attr:`playlists`.\\n\\nIf ``uri_scheme`` is :class:`None`, all backends are asked to refresh.\\nIf ``uri_scheme`` is an URI scheme handled by a backend, only that\\nbackend is asked to refresh. If ``uri_scheme`` doesn\'t match any\\ncurrent backend, nothing happens.\\n\\n:param uri_scheme: limit to the backend matching the URI scheme\\n:type uri_scheme: string", "params": [{"name": "uri_scheme", "default": null}]}, "core.playlists.save": {"description": "Save the playlist.\\n\\nFor a playlist to be saveable, it must have the ``uri`` attribute set.\\nYou must not set the ``uri`` atribute yourself, but use playlist\\nobjects returned by :meth:`create` or retrieved from :attr:`playlists`,\\nwhich will always give you saveable playlists.\\n\\nThe method returns the saved playlist. The return playlist may differ\\nfrom the saved playlist. E.g. if the playlist name was changed, the\\nreturned playlist may have a different URI. The caller of this method\\nmust throw away the playlist sent to this method, and use the\\nreturned playlist instead.\\n\\nIf the playlist\'s URI isn\'t set or doesn\'t match the URI scheme of a\\ncurrent backend, nothing is done and :class:`None` is returned.\\n\\n:param playlist: the playlist\\n:type playlist: :class:`mopidy.models.Playlist`\\n:rtype: :class:`mopidy.models.Playlist` or :class:`None`", "params": [{"name": "playlist"}]}, "core.tracklist.add": {"description": "Add tracks to the tracklist.\\n\\nIf ``uris`` is given instead of ``tracks``, the URIs are\\nlooked up in the library and the resulting tracks are added to the\\ntracklist.\\n\\nIf ``at_position`` is given, the tracks are inserted at the given\\nposition in the tracklist. If ``at_position`` is not given, the tracks\\nare appended to the end of the tracklist.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.\\n\\n:param tracks: tracks to add\\n:type tracks: list of :class:`mopidy.models.Track` or :class:`None`\\n:param at_position: position in tracklist to add tracks\\n:type at_position: int or :class:`None`\\n:param uris: list of URIs for tracks to add\\n:type uris: list of string or :class:`None`\\n:rtype: list of :class:`mopidy.models.TlTrack`\\n\\n.. versionadded:: 1.0\\n    The ``uris`` argument.\\n\\n.. deprecated:: 1.0\\n    The ``tracks`` argument. Use ``uris``.", "params": [{"name": "tracks", "default": null}, {"name": "at_position", "default": null}, {"name": "uris", "default": null}]}, "core.tracklist.clear": {"description": "Clear the tracklist.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.", "params": []}, "core.tracklist.eot_track": {"description": "The track that will be played after the given track.\\n\\nNot necessarily the same track as :meth:`next_track`.\\n\\n.. deprecated:: 3.0\\n    Use :meth:`get_eot_tlid` instead.\\n\\n:param tl_track: the reference track\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:rtype: :class:`mopidy.models.TlTrack` or :class:`None`", "params": [{"name": "tl_track"}]}, "core.tracklist.filter": {"description": "Filter the tracklist by the given criteria.\\n\\nEach rule in the criteria consists of a model field and a list of\\nvalues to compare it against. If the model field matches any of the\\nvalues, it may be returned.\\n\\nOnly tracks that match all the given criteria are returned.\\n\\nExamples::\\n\\n    # Returns tracks with TLIDs 1, 2, 3, or 4 (tracklist ID)\\n    filter({\'tlid\': [1, 2, 3, 4]})\\n\\n    # Returns track with URIs \'xyz\' or \'abc\'\\n    filter({\'uri\': [\'xyz\', \'abc\']})\\n\\n    # Returns track with a matching TLIDs (1, 3 or 6) and a\\n    # matching URI (\'xyz\' or \'abc\')\\n    filter({\'tlid\': [1, 3, 6], \'uri\': [\'xyz\', \'abc\']})\\n\\n:param criteria: one or more rules to match by\\n:type criteria: dict, of (string, list) pairs\\n:rtype: list of :class:`mopidy.models.TlTrack`", "params": [{"name": "criteria"}]}, "core.tracklist.get_consume": {"description": "Get consume mode.\\n\\n:class:`True`\\n    Tracks are removed from the tracklist when they have been played.\\n:class:`False`\\n    Tracks are not removed from the tracklist.", "params": []}, "core.tracklist.get_eot_tlid": {"description": "The TLID of the track that will be played after the current track.\\n\\nNot necessarily the same TLID as returned by :meth:`get_next_tlid`.\\n\\n:rtype: :class:`int` or :class:`None`\\n\\n.. versionadded:: 1.1", "params": []}, "core.tracklist.get_length": {"description": "Get length of the tracklist.", "params": []}, "core.tracklist.get_next_tlid": {"description": "The tlid of the track that will be played if calling\\n:meth:`mopidy.core.PlaybackController.next()`.\\n\\nFor normal playback this is the next track in the tracklist. If repeat\\nis enabled the next track can loop around the tracklist. When random is\\nenabled this should be a random track, all tracks should be played once\\nbefore the tracklist repeats.\\n\\n:rtype: :class:`int` or :class:`None`\\n\\n.. versionadded:: 1.1", "params": []}, "core.tracklist.get_previous_tlid": {"description": "Returns the TLID of the track that will be played if calling\\n:meth:`mopidy.core.PlaybackController.previous()`.\\n\\nFor normal playback this is the previous track in the tracklist. If\\nrandom and/or consume is enabled it should return the current track\\ninstead.\\n\\n:rtype: :class:`int` or :class:`None`\\n\\n.. versionadded:: 1.1", "params": []}, "core.tracklist.get_random": {"description": "Get random mode.\\n\\n:class:`True`\\n    Tracks are selected at random from the tracklist.\\n:class:`False`\\n    Tracks are played in the order of the tracklist.", "params": []}, "core.tracklist.get_repeat": {"description": "Get repeat mode.\\n\\n:class:`True`\\n    The tracklist is played repeatedly.\\n:class:`False`\\n    The tracklist is played once.", "params": []}, "core.tracklist.get_single": {"description": "Get single mode.\\n\\n:class:`True`\\n    Playback is stopped after current song, unless in ``repeat`` mode.\\n:class:`False`\\n    Playback continues after current song.", "params": []}, "core.tracklist.get_tl_tracks": {"description": "Get tracklist as list of :class:`mopidy.models.TlTrack`.", "params": []}, "core.tracklist.get_tracks": {"description": "Get tracklist as list of :class:`mopidy.models.Track`.", "params": []}, "core.tracklist.get_version": {"description": "Get the tracklist version.\\n\\nInteger which is increased every time the tracklist is changed. Is not\\nreset before Mopidy is restarted.", "params": []}, "core.tracklist.index": {"description": "The position of the given track in the tracklist.\\n\\nIf neither *tl_track* or *tlid* is given we return the index of\\nthe currently playing track.\\n\\n:param tl_track: the track to find the index of\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:param tlid: TLID of the track to find the index of\\n:type tlid: :class:`int` or :class:`None`\\n:rtype: :class:`int` or :class:`None`\\n\\n.. versionadded:: 1.1\\n    The *tlid* parameter", "params": [{"name": "tl_track", "default": null}, {"name": "tlid", "default": null}]}, "core.tracklist.move": {"description": "Move the tracks in the slice ``[start:end]`` to ``to_position``.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.\\n\\n:param start: position of first track to move\\n:type start: int\\n:param end: position after last track to move\\n:type end: int\\n:param to_position: new position for the tracks\\n:type to_position: int", "params": [{"name": "start"}, {"name": "end"}, {"name": "to_position"}]}, "core.tracklist.next_track": {"description": "The track that will be played if calling\\n:meth:`mopidy.core.PlaybackController.next()`.\\n\\nFor normal playback this is the next track in the tracklist. If repeat\\nis enabled the next track can loop around the tracklist. When random is\\nenabled this should be a random track, all tracks should be played once\\nbefore the tracklist repeats.\\n\\n.. deprecated:: 3.0\\n    Use :meth:`get_next_tlid` instead.\\n\\n:param tl_track: the reference track\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:rtype: :class:`mopidy.models.TlTrack` or :class:`None`", "params": [{"name": "tl_track"}]}, "core.tracklist.previous_track": {"description": "Returns the track that will be played if calling\\n:meth:`mopidy.core.PlaybackController.previous()`.\\n\\nFor normal playback this is the previous track in the tracklist. If\\nrandom and/or consume is enabled it should return the current track\\ninstead.\\n\\n.. deprecated:: 3.0\\n    Use :meth:`get_previous_tlid` instead.\\n\\n:param tl_track: the reference track\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:rtype: :class:`mopidy.models.TlTrack` or :class:`None`", "params": [{"name": "tl_track"}]}, "core.tracklist.remove": {"description": "Remove the matching tracks from the tracklist.\\n\\nUses :meth:`filter()` to lookup the tracks to remove.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.\\n\\n:param criteria: one or more rules to match by\\n:type criteria: dict, of (string, list) pairs\\n:rtype: list of :class:`mopidy.models.TlTrack` that were removed", "params": [{"name": "criteria"}]}, "core.tracklist.set_consume": {"description": "Set consume mode.\\n\\n:class:`True`\\n    Tracks are removed from the tracklist when they have been played.\\n:class:`False`\\n    Tracks are not removed from the tracklist.", "params": [{"name": "value"}]}, "core.tracklist.set_random": {"description": "Set random mode.\\n\\n:class:`True`\\n    Tracks are selected at random from the tracklist.\\n:class:`False`\\n    Tracks are played in the order of the tracklist.", "params": [{"name": "value"}]}, "core.tracklist.set_repeat": {"description": "Set repeat mode.\\n\\nTo repeat a single track, set both ``repeat`` and ``single``.\\n\\n:class:`True`\\n    The tracklist is played repeatedly.\\n:class:`False`\\n    The tracklist is played once.", "params": [{"name": "value"}]}, "core.tracklist.set_single": {"description": "Set single mode.\\n\\n:class:`True`\\n    Playback is stopped after current song, unless in ``repeat`` mode.\\n:class:`False`\\n    Playback continues after current song.", "params": [{"name": "value"}]}, "core.tracklist.shuffle": {"description": "Shuffles the entire tracklist. If ``start`` and ``end`` is given only\\nshuffles the slice ``[start:end]``.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.\\n\\n:param start: position of first track to shuffle\\n:type start: int or :class:`None`\\n:param end: position after last track to shuffle\\n:type end: int or :class:`None`", "params": [{"name": "start", "default": null}, {"name": "end", "default": null}]}, "core.tracklist.slice": {"description": "Returns a slice of the tracklist, limited by the given start and end\\npositions.\\n\\n:param start: position of first track to include in slice\\n:type start: int\\n:param end: position after last track to include in slice\\n:type end: int\\n:rtype: :class:`mopidy.models.TlTrack`", "params": [{"name": "start"}, {"name": "end"}]}}}'
okt 23 23:46:37 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:46:37,051 [9178:HttpServer] mopidy.http.handlers
okt 23 23:46:37 Desktop-Ubuntu mopidy[9178]:   Received WebSocket message from 127.0.0.1: '{"method":"core.describe","jsonrpc":"2.0","id":0}'
okt 23 23:46:37 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:46:37,047 [9178:HttpServer] mopidy.http.handlers
okt 23 23:46:37 Desktop-Ubuntu mopidy[9178]:   {'method': 'connection_added', 'params': {'connection': {'connection_id': 'A0PJ170MKR5J', 'ip': '127.0.0.1', 'created': '2022-10-23 23:46:37'}}}
okt 23 23:46:37 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:46:37,031 [9178:HttpServer] mopidy_iris.core
okt 23 23:46:37 Desktop-Ubuntu mopidy[9178]:   <mopidy_iris.handlers.WebsocketHandler object at 0x7fbcd84f7d90>
okt 23 23:46:37 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:46:37,031 [9178:HttpServer] mopidy_iris.core
okt 23 23:46:37 Desktop-Ubuntu mopidy[9178]:   Connection added
okt 23 23:46:37 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:46:37,031 [9178:HttpServer] mopidy_iris.core
okt 23 23:46:37 Desktop-Ubuntu mopidy[9178]:   101 GET /iris/ws/ (127.0.0.1) 0.44ms
okt 23 23:46:37 Desktop-Ubuntu mopidy[9178]: INFO     2022-10-23 23:46:37,031 [9178:HttpServer] tornado.access
okt 23 23:46:37 Desktop-Ubuntu mopidy[9178]:   New WebSocket connection from 127.0.0.1
okt 23 23:46:37 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:46:37,020 [9178:HttpServer] mopidy.http.handlers
okt 23 23:46:37 Desktop-Ubuntu mopidy[9178]:   101 GET /mopidy/ws/ (127.0.0.1) 0.60ms
okt 23 23:46:37 Desktop-Ubuntu mopidy[9178]: INFO     2022-10-23 23:46:37,020 [9178:HttpServer] tornado.access
okt 23 23:46:20 Desktop-Ubuntu mopidy[9178]:   200 GET /youtube/?url=https%3A%2F%2Fwww.youtube.com%2Fwatch%3Fv%3DZz-DJr1Qs54%26list%3DRDMMZz-DJr1Qs54%26start_radio%3D1%26ab_channel%3DTheCranberriesVEVO (127.0.0.1) 1.01ms
okt 23 23:46:20 Desktop-Ubuntu mopidy[9178]: INFO     2022-10-23 23:46:20,823 [9178:HttpServer] tornado.access
okt 23 23:45:50 Desktop-Ubuntu mopidy[9178]:   304 GET /mopidy/mopidy.css (127.0.0.1) 0.58ms
okt 23 23:45:50 Desktop-Ubuntu mopidy[9178]: INFO     2022-10-23 23:45:50,201 [9178:HttpServer] tornado.access
okt 23 23:45:50 Desktop-Ubuntu mopidy[9178]:   200 GET /youtube/ (127.0.0.1) 23.00ms
okt 23 23:45:50 Desktop-Ubuntu mopidy[9178]: INFO     2022-10-23 23:45:50,154 [9178:HttpServer] tornado.access
okt 23 23:45:48 Desktop-Ubuntu mopidy[9178]:   404 GET /favicon.ico (127.0.0.1) 0.49ms
okt 23 23:45:48 Desktop-Ubuntu mopidy[9178]: WARNING  2022-10-23 23:45:48,792 [9178:HttpServer] tornado.access
okt 23 23:45:48 Desktop-Ubuntu mopidy[9178]:   304 GET /mopidy/mopidy.css (127.0.0.1) 0.67ms
okt 23 23:45:48 Desktop-Ubuntu mopidy[9178]: INFO     2022-10-23 23:45:48,460 [9178:HttpServer] tornado.access
okt 23 23:45:48 Desktop-Ubuntu mopidy[9178]:   Closed WebSocket connection from 127.0.0.1
okt 23 23:45:48 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:45:48,403 [9178:HttpServer] mopidy.http.handlers
okt 23 23:45:48 Desktop-Ubuntu mopidy[9178]:   {'method': 'connection_removed', 'params': {'connection': {'connection_id': 'CHAKTIOTE1A2', 'ip': '127.0.0.1', 'created': '2022-10-23 23:45:13', 'username': 166656148284185, 'client_id': 166656148284193}}}
okt 23 23:45:48 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:45:48,403 [9178:HttpServer] mopidy_iris.core
okt 23 23:45:48 Desktop-Ubuntu mopidy[9178]:   200 GET /mopidy/ (127.0.0.1) 1.96ms
okt 23 23:45:48 Desktop-Ubuntu mopidy[9178]: INFO     2022-10-23 23:45:48,382 [9178:HttpServer] tornado.access
okt 23 23:45:48 Desktop-Ubuntu mopidy[9178]:   302 GET / (127.0.0.1) 0.43ms
okt 23 23:45:48 Desktop-Ubuntu mopidy[9178]: INFO     2022-10-23 23:45:48,375 [9178:HttpServer] tornado.access
okt 23 23:45:27 Desktop-Ubuntu mopidy[9178]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 21, "result": []}'
okt 23 23:45:27 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:45:27,970 [9178:HttpServer] mopidy.http.handlers
okt 23 23:45:27 Desktop-Ubuntu mopidy[9178]:   Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.add","params":{"uris":["jukebox:track:Jukebox/1.plate"],"at_position":0},"jsonrpc":"2.0","id":21}'
okt 23 23:45:27 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:45:27,969 [9178:HttpServer] mopidy.http.handlers
okt 23 23:45:26 Desktop-Ubuntu mopidy[9178]:   304 GET /iris/playlist/bTN1OkV4YW1wbGUlMjBQbGF5bGlzdC5tM3U4/null (127.0.0.1) 0.58ms
okt 23 23:45:26 Desktop-Ubuntu mopidy[9178]: INFO     2022-10-23 23:45:26,424 [9178:HttpServer] tornado.access
okt 23 23:45:25 Desktop-Ubuntu mopidy[9178]:   200 GET /iris/library/null (127.0.0.1) 0.69ms
okt 23 23:45:25 Desktop-Ubuntu mopidy[9178]: INFO     2022-10-23 23:45:25,319 [9178:HttpServer] tornado.access
okt 23 23:45:20 Desktop-Ubuntu mopidy[9178]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 20, "result": {"file:///var/lib/mopidy/http/cookie_secret": [{"__model__": "Track", "uri": "file:///var/lib/mopidy/http/cookie_secret", "name": "cookie_secret"}]}}'
okt 23 23:45:20 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:45:20,838 [9178:HttpServer] mopidy.http.handlers
okt 23 23:45:20 Desktop-Ubuntu mopidy[9178]:   Failed looking up file:///var/lib/mopidy/http/cookie_secret: gst-stream-error-quark: Could not determine type of stream. (4)
okt 23 23:45:20 Desktop-Ubuntu mopidy[9178]: WARNING  2022-10-23 23:45:20,838 [9178:FileBackend-3 (_actor_loop)] mopidy.file.library
okt 23 23:45:20 Desktop-Ubuntu mopidy[9178]:   element typefind: GstMessageError, gerror=(GError)NULL, debug=(string)"../plugins/elements/gstt...
okt 23 23:45:20 Desktop-Ubuntu mopidy[9178]: TRACE    2022-10-23 23:45:20,837 [9178:FileBackend-3 (_actor_loop)] mopidy.audio.scan
okt 23 23:45:20 Desktop-Ubuntu mopidy[9178]:   Looking up file URI: file:///var/lib/mopidy/http/cookie_secret
okt 23 23:45:20 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:45:20,835 [9178:FileBackend-3 (_actor_loop)] mopidy.file.library
okt 23 23:45:20 Desktop-Ubuntu mopidy[9178]:   Received WebSocket message from 127.0.0.1: '{"method":"core.library.lookup","params":{"uris":["file:///var/lib/mopidy/http/cookie_secret"]},"jsonrpc":"2.0","id":20}'
okt 23 23:45:20 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:45:20,835 [9178:HttpServer] mopidy.http.handlers
okt 23 23:45:20 Desktop-Ubuntu mopidy[9178]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 19, "result": [{"__model__": "Ref", "uri": "file:///var/lib/mopidy/http/cookie_secret", "name": "cookie_secret", "type": "track"}]}'
okt 23 23:45:20 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:45:20,738 [9178:HttpServer] mopidy.http.handlers
okt 23 23:45:20 Desktop-Ubuntu mopidy[9178]:   Browsing files at: file:///var/lib/mopidy/http
okt 23 23:45:20 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:45:20,737 [9178:FileBackend-3 (_actor_loop)] mopidy.file.library
okt 23 23:45:20 Desktop-Ubuntu mopidy[9178]:   Received WebSocket message from 127.0.0.1: '{"method":"core.library.browse","params":{"uri":"file:///var/lib/mopidy/http"},"jsonrpc":"2.0","id":19}'
okt 23 23:45:20 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:45:20,736 [9178:HttpServer] mopidy.http.handlers
okt 23 23:45:20 Desktop-Ubuntu mopidy[9178]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 18, "result": {"file:///var/lib/mopidy/http": [{"__model__": "Track", "uri": "file:///var/lib/mopidy/http", "name": "http"}]}}'
okt 23 23:45:20 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:45:20,681 [9178:HttpServer] mopidy.http.handlers
okt 23 23:45:20 Desktop-Ubuntu mopidy[9178]:   Failed looking up file:///var/lib/mopidy/http: gst-resource-error-quark: "/var/lib/mopidy/http" is a directory. (5)
okt 23 23:45:20 Desktop-Ubuntu mopidy[9178]: WARNING  2022-10-23 23:45:20,680 [9178:FileBackend-3 (_actor_loop)] mopidy.file.library
okt 23 23:45:20 Desktop-Ubuntu mopidy[9178]:   element filesrc11: GstMessageError, gerror=(GError)NULL, debug=(string)"../plugins/elements/gstf...
okt 23 23:45:20 Desktop-Ubuntu mopidy[9178]: TRACE    2022-10-23 23:45:20,680 [9178:FileBackend-3 (_actor_loop)] mopidy.audio.scan
okt 23 23:45:20 Desktop-Ubuntu mopidy[9178]:   Looking up file URI: file:///var/lib/mopidy/http
okt 23 23:45:20 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:45:20,679 [9178:FileBackend-3 (_actor_loop)] mopidy.file.library
okt 23 23:45:20 Desktop-Ubuntu mopidy[9178]:   Received WebSocket message from 127.0.0.1: '{"method":"core.library.lookup","params":{"uris":["file:///var/lib/mopidy/http"]},"jsonrpc":"2.0","id":18}'
okt 23 23:45:20 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:45:20,678 [9178:HttpServer] mopidy.http.handlers
okt 23 23:45:20 Desktop-Ubuntu mopidy[9178]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 17, "result": [{"__model__": "Ref", "uri": "file:///var/lib/mopidy/http", "name": "http", "type": "directory"}, {"__model__": "Ref", "uri": "file:///var/lib/mopidy/iris", "name": "iris", "type": "directory"}, {"__model__": "Ref", "uri": "file:///var/lib/mopidy/m3u", "name": "m3u", "type": "directory"}]}'
okt 23 23:45:20 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:45:20,049 [9178:HttpServer] mopidy.http.handlers
okt 23 23:45:20 Desktop-Ubuntu mopidy[9178]:   Browsing files at: file:///var/lib/mopidy
okt 23 23:45:20 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:45:20,047 [9178:FileBackend-3 (_actor_loop)] mopidy.file.library
okt 23 23:45:20 Desktop-Ubuntu mopidy[9178]:   Received WebSocket message from 127.0.0.1: '{"method":"core.library.browse","params":{"uri":"file:///var/lib/mopidy"},"jsonrpc":"2.0","id":17}'
okt 23 23:45:20 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:45:20,046 [9178:HttpServer] mopidy.http.handlers
okt 23 23:45:19 Desktop-Ubuntu mopidy[9178]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 16, "result": {"file:///var/lib/mopidy": [{"__model__": "Track", "uri": "file:///var/lib/mopidy", "name": "mopidy"}]}}'
okt 23 23:45:19 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:45:19,984 [9178:HttpServer] mopidy.http.handlers
okt 23 23:45:19 Desktop-Ubuntu mopidy[9178]:   Failed looking up file:///var/lib/mopidy: gst-resource-error-quark: "/var/lib/mopidy" is a directory. (5)
okt 23 23:45:19 Desktop-Ubuntu mopidy[9178]: WARNING  2022-10-23 23:45:19,983 [9178:FileBackend-3 (_actor_loop)] mopidy.file.library
okt 23 23:45:19 Desktop-Ubuntu mopidy[9178]:   element filesrc10: GstMessageError, gerror=(GError)NULL, debug=(string)"../plugins/elements/gstf...
okt 23 23:45:19 Desktop-Ubuntu mopidy[9178]: TRACE    2022-10-23 23:45:19,983 [9178:FileBackend-3 (_actor_loop)] mopidy.audio.scan
okt 23 23:45:19 Desktop-Ubuntu mopidy[9178]:   Looking up file URI: file:///var/lib/mopidy
okt 23 23:45:19 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:45:19,982 [9178:FileBackend-3 (_actor_loop)] mopidy.file.library
okt 23 23:45:19 Desktop-Ubuntu mopidy[9178]:   Received WebSocket message from 127.0.0.1: '{"method":"core.library.lookup","params":{"uris":["file:///var/lib/mopidy"]},"jsonrpc":"2.0","id":16}'
okt 23 23:45:19 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:45:19,981 [9178:HttpServer] mopidy.http.handlers
okt 23 23:45:18 Desktop-Ubuntu mopidy[9178]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 15, "result": []}'
okt 23 23:45:18 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:45:18,153 [9178:HttpServer] mopidy.http.handlers
okt 23 23:45:18 Desktop-Ubuntu mopidy[9178]:   Browsing files at: file:///var/lib/mopidy/iris
okt 23 23:45:18 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:45:18,153 [9178:FileBackend-3 (_actor_loop)] mopidy.file.library
okt 23 23:45:18 Desktop-Ubuntu mopidy[9178]:   Received WebSocket message from 127.0.0.1: '{"method":"core.library.browse","params":{"uri":"file:///var/lib/mopidy/iris"},"jsonrpc":"2.0","id":15}'
okt 23 23:45:18 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:45:18,152 [9178:HttpServer] mopidy.http.handlers
okt 23 23:45:18 Desktop-Ubuntu mopidy[9178]:   304 GET /iris/assets/silence.mp3 (127.0.0.1) 0.81ms
okt 23 23:45:18 Desktop-Ubuntu mopidy[9178]: INFO     2022-10-23 23:45:18,148 [9178:HttpServer] tornado.access
okt 23 23:45:18 Desktop-Ubuntu mopidy[9178]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 14, "result": {"file:///var/lib/mopidy/iris": [{"__model__": "Track", "uri": "file:///var/lib/mopidy/iris", "name": "iris"}]}}'
okt 23 23:45:18 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:45:18,073 [9178:HttpServer] mopidy.http.handlers
okt 23 23:45:18 Desktop-Ubuntu mopidy[9178]:   Failed looking up file:///var/lib/mopidy/iris: gst-resource-error-quark: "/var/lib/mopidy/iris" is a directory. (5)
okt 23 23:45:18 Desktop-Ubuntu mopidy[9178]: WARNING  2022-10-23 23:45:18,072 [9178:FileBackend-3 (_actor_loop)] mopidy.file.library
okt 23 23:45:18 Desktop-Ubuntu mopidy[9178]:   element filesrc9: GstMessageError, gerror=(GError)NULL, debug=(string)"../plugins/elements/gstf...
okt 23 23:45:18 Desktop-Ubuntu mopidy[9178]: TRACE    2022-10-23 23:45:18,071 [9178:FileBackend-3 (_actor_loop)] mopidy.audio.scan
okt 23 23:45:18 Desktop-Ubuntu mopidy[9178]:   Looking up file URI: file:///var/lib/mopidy/iris
okt 23 23:45:18 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:45:18,070 [9178:FileBackend-3 (_actor_loop)] mopidy.file.library
okt 23 23:45:18 Desktop-Ubuntu mopidy[9178]:   Received WebSocket message from 127.0.0.1: '{"method":"core.library.lookup","params":{"uris":["file:///var/lib/mopidy/iris"]},"jsonrpc":"2.0","id":14}'
okt 23 23:45:18 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:45:18,070 [9178:HttpServer] mopidy.http.handlers
okt 23 23:45:15 Desktop-Ubuntu mopidy[9178]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 13, "result": [{"__model__": "Ref", "uri": "file:///var/lib/mopidy/http", "name": "http", "type": "directory"}, {"__model__": "Ref", "uri": "file:///var/lib/mopidy/iris", "name": "iris", "type": "directory"}, {"__model__": "Ref", "uri": "file:///var/lib/mopidy/m3u", "name": "m3u", "type": "directory"}]}'
okt 23 23:45:15 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:45:15,016 [9178:HttpServer] mopidy.http.handlers
okt 23 23:45:15 Desktop-Ubuntu mopidy[9178]:   Browsing files at: file:///var/lib/mopidy
okt 23 23:45:15 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:45:15,014 [9178:FileBackend-3 (_actor_loop)] mopidy.file.library
okt 23 23:45:15 Desktop-Ubuntu mopidy[9178]:   Received WebSocket message from 127.0.0.1: '{"method":"core.library.browse","params":{"uri":"file:///var/lib/mopidy"},"jsonrpc":"2.0","id":13}'
okt 23 23:45:15 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:45:15,014 [9178:HttpServer] mopidy.http.handlers
okt 23 23:45:15 Desktop-Ubuntu mopidy[9178]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 12, "result": {"file:///var/lib/mopidy": [{"__model__": "Track", "uri": "file:///var/lib/mopidy", "name": "mopidy"}]}}'
okt 23 23:45:15 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:45:15,008 [9178:HttpServer] mopidy.http.handlers
okt 23 23:45:15 Desktop-Ubuntu mopidy[9178]:   Failed looking up file:///var/lib/mopidy: gst-resource-error-quark: "/var/lib/mopidy" is a directory. (5)
okt 23 23:45:15 Desktop-Ubuntu mopidy[9178]: WARNING  2022-10-23 23:45:15,007 [9178:FileBackend-3 (_actor_loop)] mopidy.file.library
okt 23 23:45:15 Desktop-Ubuntu mopidy[9178]:   element filesrc8: GstMessageError, gerror=(GError)NULL, debug=(string)"../plugins/elements/gstf...
okt 23 23:45:15 Desktop-Ubuntu mopidy[9178]: TRACE    2022-10-23 23:45:15,007 [9178:FileBackend-3 (_actor_loop)] mopidy.audio.scan
okt 23 23:45:15 Desktop-Ubuntu mopidy[9178]:   Looking up file URI: file:///var/lib/mopidy
okt 23 23:45:15 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:45:15,006 [9178:FileBackend-3 (_actor_loop)] mopidy.file.library
okt 23 23:45:15 Desktop-Ubuntu mopidy[9178]:   Received WebSocket message from 127.0.0.1: '{"method":"core.library.lookup","params":{"uris":["file:///var/lib/mopidy"]},"jsonrpc":"2.0","id":12}'
okt 23 23:45:15 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:45:15,005 [9178:HttpServer] mopidy.http.handlers
okt 23 23:45:14 Desktop-Ubuntu mopidy[9178]:   {'id': 16665615139004, 'jsonrpc': '2.0', 'method': 'get_version', 'result': {'version': {'current': '3.64.1', 'latest': '3.64.1', 'is_root': False, 'upgrade_available': False}}, 'recipient': 'CHAKTIOTE1A2'}
okt 23 23:45:14 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:45:14,037 [9178:HttpServer] mopidy_iris.core
okt 23 23:45:13 Desktop-Ubuntu mopidy[9178]:   Iris websocket message received: {"jsonrpc":"2.0","id":16665615139004,"method":"get_version"}
okt 23 23:45:13 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:45:13,900 [9178:HttpServer] mopidy_iris.handlers
okt 23 23:45:13 Desktop-Ubuntu mopidy[9178]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 11, "result": null}'
okt 23 23:45:13 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:45:13,473 [9178:HttpServer] mopidy.http.handlers
okt 23 23:45:13 Desktop-Ubuntu mopidy[9178]:   Received WebSocket message from 127.0.0.1: '{"method":"core.playback.get_stream_title","params":{},"jsonrpc":"2.0","id":11}'
okt 23 23:45:13 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:45:13,472 [9178:HttpServer] mopidy.http.handlers
okt 23 23:45:13 Desktop-Ubuntu mopidy[9178]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 10, "result": ["file", "http", "https", "m3u", "rtsp"]}'
okt 23 23:45:13 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:45:13,472 [9178:HttpServer] mopidy.http.handlers
okt 23 23:45:13 Desktop-Ubuntu mopidy[9178]:   Received WebSocket message from 127.0.0.1: '{"method":"core.get_uri_schemes","params":{},"jsonrpc":"2.0","id":10}'
okt 23 23:45:13 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:45:13,471 [9178:HttpServer] mopidy.http.handlers
okt 23 23:45:13 Desktop-Ubuntu mopidy[9178]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 9, "result": 0}'
okt 23 23:45:13 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:45:13,471 [9178:HttpServer] mopidy.http.handlers
okt 23 23:45:13 Desktop-Ubuntu mopidy[9178]:   Received WebSocket message from 127.0.0.1: '{"method":"core.playback.get_time_position","params":{},"jsonrpc":"2.0","id":9}'
okt 23 23:45:13 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:45:13,471 [9178:HttpServer] mopidy.http.handlers
okt 23 23:45:13 Desktop-Ubuntu mopidy[9178]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 8, "result": []}'
okt 23 23:45:13 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:45:13,470 [9178:HttpServer] mopidy.http.handlers
okt 23 23:45:13 Desktop-Ubuntu mopidy[9178]:   Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_tl_tracks","params":{},"jsonrpc":"2.0","id":8}'
okt 23 23:45:13 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:45:13,470 [9178:HttpServer] mopidy.http.handlers
okt 23 23:45:13 Desktop-Ubuntu mopidy[9178]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 7, "result": false}'
okt 23 23:45:13 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:45:13,470 [9178:HttpServer] mopidy.http.handlers
okt 23 23:45:13 Desktop-Ubuntu mopidy[9178]:   Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_repeat","params":{},"jsonrpc":"2.0","id":7}'
okt 23 23:45:13 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:45:13,469 [9178:HttpServer] mopidy.http.handlers
okt 23 23:45:13 Desktop-Ubuntu mopidy[9178]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 6, "result": false}'
okt 23 23:45:13 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:45:13,469 [9178:HttpServer] mopidy.http.handlers
okt 23 23:45:13 Desktop-Ubuntu mopidy[9178]:   Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_random","params":{},"jsonrpc":"2.0","id":6}'
okt 23 23:45:13 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:45:13,469 [9178:HttpServer] mopidy.http.handlers
okt 23 23:45:13 Desktop-Ubuntu mopidy[9178]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 5, "result": false}'
okt 23 23:45:13 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:45:13,468 [9178:HttpServer] mopidy.http.handlers
okt 23 23:45:13 Desktop-Ubuntu mopidy[9178]:   Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_consume","params":{},"jsonrpc":"2.0","id":5}'
okt 23 23:45:13 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:45:13,468 [9178:HttpServer] mopidy.http.handlers
okt 23 23:45:13 Desktop-Ubuntu mopidy[9178]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 4, "result": false}'
okt 23 23:45:13 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:45:13,468 [9178:HttpServer] mopidy.http.handlers
okt 23 23:45:13 Desktop-Ubuntu mopidy[9178]:   Received WebSocket message from 127.0.0.1: '{"method":"core.mixer.get_mute","params":{},"jsonrpc":"2.0","id":4}'
okt 23 23:45:13 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:45:13,467 [9178:HttpServer] mopidy.http.handlers
okt 23 23:45:13 Desktop-Ubuntu mopidy[9178]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 3, "result": 100}'
okt 23 23:45:13 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:45:13,467 [9178:HttpServer] mopidy.http.handlers
okt 23 23:45:13 Desktop-Ubuntu mopidy[9178]:   Received WebSocket message from 127.0.0.1: '{"method":"core.mixer.get_volume","params":{},"jsonrpc":"2.0","id":3}'
okt 23 23:45:13 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:45:13,466 [9178:HttpServer] mopidy.http.handlers
okt 23 23:45:13 Desktop-Ubuntu mopidy[9178]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 2, "result": "stopped"}'
okt 23 23:45:13 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:45:13,466 [9178:HttpServer] mopidy.http.handlers
okt 23 23:45:13 Desktop-Ubuntu mopidy[9178]:   Received WebSocket message from 127.0.0.1: '{"method":"core.playback.get_state","params":{},"jsonrpc":"2.0","id":2}'
okt 23 23:45:13 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:45:13,466 [9178:HttpServer] mopidy.http.handlers
okt 23 23:45:13 Desktop-Ubuntu mopidy[9178]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 1, "result": null}'
okt 23 23:45:13 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:45:13,465 [9178:HttpServer] mopidy.http.handlers
okt 23 23:45:13 Desktop-Ubuntu mopidy[9178]:   Received WebSocket message from 127.0.0.1: '{"method":"core.playback.get_current_tl_track","params":{},"jsonrpc":"2.0","id":1}'
okt 23 23:45:13 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:45:13,465 [9178:HttpServer] mopidy.http.handlers
okt 23 23:45:13 Desktop-Ubuntu mopidy[9178]:   {'id': 166656151339924, 'jsonrpc': '2.0', 'method': 'get_queue_metadata', 'result': {'queue_metadata': {}}, 'recipient': 'CHAKTIOTE1A2'}
okt 23 23:45:13 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:45:13,399 [9178:HttpServer] mopidy_iris.core
okt 23 23:45:13 Desktop-Ubuntu mopidy[9178]:   Iris websocket message received: {"jsonrpc":"2.0","id":166656151339924,"method":"get_queue_metadata"}
okt 23 23:45:13 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:45:13,399 [9178:HttpServer] mopidy_iris.handlers
okt 23 23:45:13 Desktop-Ubuntu mopidy[9178]:   {'id': 16665615133975, 'jsonrpc': '2.0', 'method': 'get_pinned', 'result': {'pinned': []}, 'recipient': 'CHAKTIOTE1A2'}
okt 23 23:45:13 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:45:13,398 [9178:HttpServer] mopidy_iris.core
okt 23 23:45:13 Desktop-Ubuntu mopidy[9178]:   Iris websocket message received: {"jsonrpc":"2.0","id":16665615133975,"method":"get_pinned"}
okt 23 23:45:13 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:45:13,398 [9178:HttpServer] mopidy_iris.handlers
okt 23 23:45:13 Desktop-Ubuntu mopidy[9178]:   {'id': 166656151339667, 'jsonrpc': '2.0', 'method': 'get_commands', 'result': {'commands': {}}, 'recipient': 'CHAKTIOTE1A2'}
okt 23 23:45:13 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:45:13,397 [9178:HttpServer] mopidy_iris.core
okt 23 23:45:13 Desktop-Ubuntu mopidy[9178]:   Iris websocket message received: {"jsonrpc":"2.0","id":166656151339667,"method":"get_commands"}
okt 23 23:45:13 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:45:13,397 [9178:HttpServer] mopidy_iris.handlers
okt 23 23:45:13 Desktop-Ubuntu mopidy[9178]:   {'id': 166656151339599, 'jsonrpc': '2.0', 'method': 'get_radio', 'result': {'radio': {'enabled': 0, 'seed_artists': [], 'seed_genres': [], 'seed_tracks': [], 'results': []}}, 'recipient': 'CHAKTIOTE1A2'}
okt 23 23:45:13 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:45:13,397 [9178:HttpServer] mopidy_iris.core
okt 23 23:45:13 Desktop-Ubuntu mopidy[9178]:   Iris websocket message received: {"jsonrpc":"2.0","id":166656151339599,"method":"get_radio"}
okt 23 23:45:13 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:45:13,397 [9178:HttpServer] mopidy_iris.handlers
okt 23 23:45:13 Desktop-Ubuntu mopidy[9178]:   {'id': 166656151339431, 'jsonrpc': '2.0', 'method': 'get_shared_config', 'result': {'shared_config': {}}, 'recipient': 'CHAKTIOTE1A2'}
okt 23 23:45:13 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:45:13,397 [9178:HttpServer] mopidy_iris.core
okt 23 23:45:13 Desktop-Ubuntu mopidy[9178]:   Iris websocket message received: {"jsonrpc":"2.0","id":166656151339431,"method":"get_shared_config"}
okt 23 23:45:13 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:45:13,396 [9178:HttpServer] mopidy_iris.handlers
okt 23 23:45:13 Desktop-Ubuntu mopidy[9178]:   {'id': 166656151339379, 'jsonrpc': '2.0', 'method': 'get_config', 'result': {'config': {'is_root': False, 'spotify_username': False, 'country': 'NZ', 'locale': 'en_NZ', 'snapcast_enabled': True, 'snapcast_host': 'localhost', 'snapcast_port': '1780', 'snapcast_ssl': False, 'snapcast_stream': 'Default', 'spotify_authorization_url': 'https://jamesbarnsley.co.nz/iris/auth_spotify.php', 'lastfm_authorization_url': 'https://jamesbarnsley.co.nz/iris/auth_lastfm.php', 'genius_authorization_url': 'https://jamesbarnsley.co.nz/iris/auth_genius.php', 'shared_config': {}}}, 'recipient': 'CHAKTIOTE1A2'}
okt 23 23:45:13 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:45:13,396 [9178:HttpServer] mopidy_iris.core
okt 23 23:45:13 Desktop-Ubuntu mopidy[9178]:   Iris websocket message received: {"jsonrpc":"2.0","id":166656151339379,"method":"get_config"}
okt 23 23:45:13 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:45:13,396 [9178:HttpServer] mopidy_iris.handlers
okt 23 23:45:13 Desktop-Ubuntu mopidy[9178]:   {'id': 166656151339259, 'jsonrpc': '2.0', 'method': 'update_connection', 'result': {'connection': {'connection_id': 'CHAKTIOTE1A2', 'ip': '127.0.0.1', 'created': '2022-10-23 23:45:13', 'username': 166656148284185, 'client_id': 166656148284193}}, 'recipient': 'CHAKTIOTE1A2'}
okt 23 23:45:13 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:45:13,396 [9178:HttpServer] mopidy_iris.core
okt 23 23:45:13 Desktop-Ubuntu mopidy[9178]:   {'method': 'connection_changed', 'params': {'connection': {'connection_id': 'CHAKTIOTE1A2', 'ip': '127.0.0.1', 'created': '2022-10-23 23:45:13', 'username': 166656148284185, 'client_id': 166656148284193}}}
okt 23 23:45:13 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:45:13,395 [9178:HttpServer] mopidy_iris.core
okt 23 23:45:13 Desktop-Ubuntu mopidy[9178]:   Iris websocket message received: {"jsonrpc":"2.0","id":166656151339259,"method":"update_connection","params":{"username":166656148284185,"client_id":166656148284193}}
okt 23 23:45:13 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:45:13,395 [9178:HttpServer] mopidy_iris.handlers
okt 23 23:45:13 Desktop-Ubuntu mopidy[9178]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 0, "result": {"core.get_uri_schemes": {"description": "Get list of URI schemes we can handle", "params": []}, "core.get_version": {"description": "Get version of the Mopidy core API", "params": []}, "core.history.get_history": {"description": "Get the track history.\\n\\nThe timestamps are milliseconds since epoch.\\n\\n:returns: the track history\\n:rtype: list of (timestamp, :class:`mopidy.models.Ref`) tuples", "params": []}, "core.history.get_length": {"description": "Get the number of tracks in the history.\\n\\n:returns: the history length\\n:rtype: int", "params": []}, "core.library.browse": {"description": "Browse directories and tracks at the given ``uri``.\\n\\n``uri`` is a string which represents some directory belonging to a\\nbackend. To get the intial root directories for backends pass\\n:class:`None` as the URI.\\n\\nReturns a list of :class:`mopidy.models.Ref` objects for the\\ndirectories and tracks at the given ``uri``.\\n\\nThe :class:`~mopidy.models.Ref` objects representing tracks keep the\\ntrack\'s original URI. A matching pair of objects can look like this::\\n\\n    Track(uri=\'dummy:/foo.mp3\', name=\'foo\', artists=..., album=...)\\n    Ref.track(uri=\'dummy:/foo.mp3\', name=\'foo\')\\n\\nThe :class:`~mopidy.models.Ref` objects representing directories have\\nbackend specific URIs. These are opaque values, so no one but the\\nbackend that created them should try and derive any meaning from them.\\nThe only valid exception to this is checking the scheme, as it is used\\nto route browse requests to the correct backend.\\n\\nFor example, the dummy library\'s ``/bar`` directory could be returned\\nlike this::\\n\\n    Ref.directory(uri=\'dummy:directory:/bar\', name=\'bar\')\\n\\n:param string uri: URI to browse\\n:rtype: list of :class:`mopidy.models.Ref`\\n\\n.. versionadded:: 0.18", "params": [{"name": "uri"}]}, "core.library.get_distinct": {"description": "List distinct values for a given field from the library.\\n\\nThis has mainly been added to support the list commands the MPD\\nprotocol supports in a more sane fashion. Other frontends are not\\nrecommended to use this method.\\n\\n:param string field: Any one of ``uri``, ``track_name``, ``album``,\\n    ``artist``, ``albumartist``, ``composer``, ``performer``,\\n    ``track_no``, ``genre``, ``date``, ``comment``, ``disc_no``,\\n    ``musicbrainz_albumid``, ``musicbrainz_artistid``, or\\n    ``musicbrainz_trackid``.\\n:param dict query: Query to use for limiting results, see\\n    :meth:`search` for details about the query format.\\n:rtype: set of values corresponding to the requested field type.\\n\\n.. versionadded:: 1.0", "params": [{"name": "field"}, {"name": "query", "default": null}]}, "core.library.get_images": {"description": "Lookup the images for the given URIs\\n\\nBackends can use this to return image URIs for any URI they know about\\nbe it tracks, albums, playlists. The lookup result is a dictionary\\nmapping the provided URIs to lists of images.\\n\\nUnknown URIs or URIs the corresponding backend couldn\'t find anything\\nfor will simply return an empty list for that URI.\\n\\n:param uris: list of URIs to find images for\\n:type uris: list of string\\n:rtype: {uri: tuple of :class:`mopidy.models.Image`}\\n\\n.. versionadded:: 1.0", "params": [{"name": "uris"}]}, "core.library.lookup": {"description": "Lookup the given URIs.\\n\\nIf the URI expands to multiple tracks, the returned list will contain\\nthem all.\\n\\n:param uris: track URIs\\n:type uris: list of string\\n:rtype: {uri: list of :class:`mopidy.models.Track`}", "params": [{"name": "uris"}]}, "core.library.refresh": {"description": "Refresh library. Limit to URI and below if an URI is given.\\n\\n:param uri: directory or track URI\\n:type uri: string", "params": [{"name": "uri", "default": null}]}, "core.library.search": {"description": "Search the library for tracks where ``field`` contains ``values``.\\n\\n``field`` can be one of ``uri``, ``track_name``, ``album``, ``artist``,\\n``albumartist``, ``composer``, ``performer``, ``track_no``, ``genre``,\\n``date``, ``comment``, ``disc_no``, ``musicbrainz_albumid``,\\n``musicbrainz_artistid``, ``musicbrainz_trackid`` or ``any``.\\n\\nIf ``uris`` is given, the search is limited to results from within the\\nURI roots. For example passing ``uris=[\'file:\']`` will limit the search\\nto the local backend.\\n\\nExamples::\\n\\n    # Returns results matching \'a\' in any backend\\n    search({\'any\': [\'a\']})\\n\\n    # Returns results matching artist \'xyz\' in any backend\\n    search({\'artist\': [\'xyz\']})\\n\\n    # Returns results matching \'a\' and \'b\' and artist \'xyz\' in any\\n    # backend\\n    search({\'any\': [\'a\', \'b\'], \'artist\': [\'xyz\']})\\n\\n    # Returns results matching \'a\' if within the given URI roots\\n    # \\"file:///media/music\\" and \\"spotify:\\"\\n    search({\'any\': [\'a\']}, uris=[\'file:///media/music\', \'spotify:\'])\\n\\n    # Returns results matching artist \'xyz\' and \'abc\' in any backend\\n    search({\'artist\': [\'xyz\', \'abc\']})\\n\\n:param query: one or more queries to search for\\n:type query: dict\\n:param uris: zero or more URI roots to limit the search to\\n:type uris: list of string or :class:`None`\\n:param exact: if the search should use exact matching\\n:type exact: :class:`bool`\\n:rtype: list of :class:`mopidy.models.SearchResult`\\n\\n.. versionadded:: 1.0\\n    The ``exact`` keyword argument.", "params": [{"name": "query"}, {"name": "uris", "default": null}, {"name": "exact", "default": false}]}, "core.mixer.get_mute": {"description": "Get mute state.\\n\\n:class:`True` if muted, :class:`False` unmuted, :class:`None` if\\nunknown.", "params": []}, "core.mixer.get_volume": {"description": "Get the volume.\\n\\nInteger in range [0..100] or :class:`None` if unknown.\\n\\nThe volume scale is linear.", "params": []}, "core.mixer.set_mute": {"description": "Set mute state.\\n\\n:class:`True` to mute, :class:`False` to unmute.\\n\\nReturns :class:`True` if call is successful, otherwise :class:`False`.", "params": [{"name": "mute"}]}, "core.mixer.set_volume": {"description": "Set the volume.\\n\\nThe volume is defined as an integer in range [0..100].\\n\\nThe volume scale is linear.\\n\\nReturns :class:`True` if call is successful, otherwise :class:`False`.", "params": [{"name": "volume"}]}, "core.playback.get_current_tl_track": {"description": "Get the currently playing or selected track.\\n\\nReturns a :class:`mopidy.models.TlTrack` or :class:`None`.", "params": []}, "core.playback.get_current_tlid": {"description": "Get the currently playing or selected TLID.\\n\\nExtracted from :meth:`get_current_tl_track` for convenience.\\n\\nReturns a :class:`int` or :class:`None`.\\n\\n.. versionadded:: 1.1", "params": []}, "core.playback.get_current_track": {"description": "Get the currently playing or selected track.\\n\\nExtracted from :meth:`get_current_tl_track` for convenience.\\n\\nReturns a :class:`mopidy.models.Track` or :class:`None`.", "params": []}, "core.playback.get_state": {"description": "Get The playback state.", "params": []}, "core.playback.get_stream_title": {"description": "Get the current stream title or :class:`None`.", "params": []}, "core.playback.get_time_position": {"description": "Get time position in milliseconds.", "params": []}, "core.playback.next": {"description": "Change to the next track.\\n\\nThe current playback state will be kept. If it was playing, playing\\nwill continue. If it was paused, it will still be paused, etc.", "params": []}, "core.playback.pause": {"description": "Pause playback.", "params": []}, "core.playback.play": {"description": "Play the given track, or if the given tl_track and tlid is\\n:class:`None`, play the currently active track.\\n\\nNote that the track **must** already be in the tracklist.\\n\\n.. deprecated:: 3.0\\n    The ``tl_track`` argument. Use ``tlid`` instead.\\n\\n:param tl_track: track to play\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:param tlid: TLID of the track to play\\n:type tlid: :class:`int` or :class:`None`", "params": [{"name": "tl_track", "default": null}, {"name": "tlid", "default": null}]}, "core.playback.previous": {"description": "Change to the previous track.\\n\\nThe current playback state will be kept. If it was playing, playing\\nwill continue. If it was paused, it will still be paused, etc.", "params": []}, "core.playback.resume": {"description": "If paused, resume playing the current track.", "params": []}, "core.playback.seek": {"description": "Seeks to time position given in milliseconds.\\n\\n:param time_position: time position in milliseconds\\n:type time_position: int\\n:rtype: :class:`True` if successful, else :class:`False`", "params": [{"name": "time_position"}]}, "core.playback.set_state": {"description": "Set the playback state.\\n\\nMust be :attr:`PLAYING`, :attr:`PAUSED`, or :attr:`STOPPED`.\\n\\nPossible states and transitions:\\n\\n.. digraph:: state_transitions\\n\\n    \\"STOPPED\\" -> \\"PLAYING\\" [ label=\\"play\\" ]\\n    \\"STOPPED\\" -> \\"PAUSED\\" [ label=\\"pause\\" ]\\n    \\"PLAYING\\" -> \\"STOPPED\\" [ label=\\"stop\\" ]\\n    \\"PLAYING\\" -> \\"PAUSED\\" [ label=\\"pause\\" ]\\n    \\"PLAYING\\" -> \\"PLAYING\\" [ label=\\"play\\" ]\\n    \\"PAUSED\\" -> \\"PLAYING\\" [ label=\\"resume\\" ]\\n    \\"PAUSED\\" -> \\"STOPPED\\" [ label=\\"stop\\" ]", "params": [{"name": "new_state"}]}, "core.playback.stop": {"description": "Stop playing.", "params": []}, "core.playlists.as_list": {"description": "Get a list of the currently available playlists.\\n\\nReturns a list of :class:`~mopidy.models.Ref` objects referring to the\\nplaylists. In other words, no information about the playlists\' content\\nis given.\\n\\n:rtype: list of :class:`mopidy.models.Ref`\\n\\n.. versionadded:: 1.0", "params": []}, "core.playlists.create": {"description": "Create a new playlist.\\n\\nIf ``uri_scheme`` matches an URI scheme handled by a current backend,\\nthat backend is asked to create the playlist. If ``uri_scheme`` is\\n:class:`None` or doesn\'t match a current backend, the first backend is\\nasked to create the playlist.\\n\\nAll new playlists must be created by calling this method, and **not**\\nby creating new instances of :class:`mopidy.models.Playlist`.\\n\\n:param name: name of the new playlist\\n:type name: string\\n:param uri_scheme: use the backend matching the URI scheme\\n:type uri_scheme: string\\n:rtype: :class:`mopidy.models.Playlist` or :class:`None`", "params": [{"name": "name"}, {"name": "uri_scheme", "default": null}]}, "core.playlists.delete": {"description": "Delete playlist identified by the URI.\\n\\nIf the URI doesn\'t match the URI schemes handled by the current\\nbackends, nothing happens.\\n\\nReturns :class:`True` if deleted, :class:`False` otherwise.\\n\\n:param uri: URI of the playlist to delete\\n:type uri: string\\n:rtype: :class:`bool`\\n\\n.. versionchanged:: 2.2\\n    Return type defined.", "params": [{"name": "uri"}]}, "core.playlists.get_items": {"description": "Get the items in a playlist specified by ``uri``.\\n\\nReturns a list of :class:`~mopidy.models.Ref` objects referring to the\\nplaylist\'s items.\\n\\nIf a playlist with the given ``uri`` doesn\'t exist, it returns\\n:class:`None`.\\n\\n:rtype: list of :class:`mopidy.models.Ref`, or :class:`None`\\n\\n.. versionadded:: 1.0", "params": [{"name": "uri"}]}, "core.playlists.get_uri_schemes": {"description": "Get the list of URI schemes that support playlists.\\n\\n:rtype: list of string\\n\\n.. versionadded:: 2.0", "params": []}, "core.playlists.lookup": {"description": "Lookup playlist with given URI in both the set of playlists and in any\\nother playlist sources. Returns :class:`None` if not found.\\n\\n:param uri: playlist URI\\n:type uri: string\\n:rtype: :class:`mopidy.models.Playlist` or :class:`None`", "params": [{"name": "uri"}]}, "core.playlists.refresh": {"description": "Refresh the playlists in :attr:`playlists`.\\n\\nIf ``uri_scheme`` is :class:`None`, all backends are asked to refresh.\\nIf ``uri_scheme`` is an URI scheme handled by a backend, only that\\nbackend is asked to refresh. If ``uri_scheme`` doesn\'t match any\\ncurrent backend, nothing happens.\\n\\n:param uri_scheme: limit to the backend matching the URI scheme\\n:type uri_scheme: string", "params": [{"name": "uri_scheme", "default": null}]}, "core.playlists.save": {"description": "Save the playlist.\\n\\nFor a playlist to be saveable, it must have the ``uri`` attribute set.\\nYou must not set the ``uri`` atribute yourself, but use playlist\\nobjects returned by :meth:`create` or retrieved from :attr:`playlists`,\\nwhich will always give you saveable playlists.\\n\\nThe method returns the saved playlist. The return playlist may differ\\nfrom the saved playlist. E.g. if the playlist name was changed, the\\nreturned playlist may have a different URI. The caller of this method\\nmust throw away the playlist sent to this method, and use the\\nreturned playlist instead.\\n\\nIf the playlist\'s URI isn\'t set or doesn\'t match the URI scheme of a\\ncurrent backend, nothing is done and :class:`None` is returned.\\n\\n:param playlist: the playlist\\n:type playlist: :class:`mopidy.models.Playlist`\\n:rtype: :class:`mopidy.models.Playlist` or :class:`None`", "params": [{"name": "playlist"}]}, "core.tracklist.add": {"description": "Add tracks to the tracklist.\\n\\nIf ``uris`` is given instead of ``tracks``, the URIs are\\nlooked up in the library and the resulting tracks are added to the\\ntracklist.\\n\\nIf ``at_position`` is given, the tracks are inserted at the given\\nposition in the tracklist. If ``at_position`` is not given, the tracks\\nare appended to the end of the tracklist.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.\\n\\n:param tracks: tracks to add\\n:type tracks: list of :class:`mopidy.models.Track` or :class:`None`\\n:param at_position: position in tracklist to add tracks\\n:type at_position: int or :class:`None`\\n:param uris: list of URIs for tracks to add\\n:type uris: list of string or :class:`None`\\n:rtype: list of :class:`mopidy.models.TlTrack`\\n\\n.. versionadded:: 1.0\\n    The ``uris`` argument.\\n\\n.. deprecated:: 1.0\\n    The ``tracks`` argument. Use ``uris``.", "params": [{"name": "tracks", "default": null}, {"name": "at_position", "default": null}, {"name": "uris", "default": null}]}, "core.tracklist.clear": {"description": "Clear the tracklist.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.", "params": []}, "core.tracklist.eot_track": {"description": "The track that will be played after the given track.\\n\\nNot necessarily the same track as :meth:`next_track`.\\n\\n.. deprecated:: 3.0\\n    Use :meth:`get_eot_tlid` instead.\\n\\n:param tl_track: the reference track\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:rtype: :class:`mopidy.models.TlTrack` or :class:`None`", "params": [{"name": "tl_track"}]}, "core.tracklist.filter": {"description": "Filter the tracklist by the given criteria.\\n\\nEach rule in the criteria consists of a model field and a list of\\nvalues to compare it against. If the model field matches any of the\\nvalues, it may be returned.\\n\\nOnly tracks that match all the given criteria are returned.\\n\\nExamples::\\n\\n    # Returns tracks with TLIDs 1, 2, 3, or 4 (tracklist ID)\\n    filter({\'tlid\': [1, 2, 3, 4]})\\n\\n    # Returns track with URIs \'xyz\' or \'abc\'\\n    filter({\'uri\': [\'xyz\', \'abc\']})\\n\\n    # Returns track with a matching TLIDs (1, 3 or 6) and a\\n    # matching URI (\'xyz\' or \'abc\')\\n    filter({\'tlid\': [1, 3, 6], \'uri\': [\'xyz\', \'abc\']})\\n\\n:param criteria: one or more rules to match by\\n:type criteria: dict, of (string, list) pairs\\n:rtype: list of :class:`mopidy.models.TlTrack`", "params": [{"name": "criteria"}]}, "core.tracklist.get_consume": {"description": "Get consume mode.\\n\\n:class:`True`\\n    Tracks are removed from the tracklist when they have been played.\\n:class:`False`\\n    Tracks are not removed from the tracklist.", "params": []}, "core.tracklist.get_eot_tlid": {"description": "The TLID of the track that will be played after the current track.\\n\\nNot necessarily the same TLID as returned by :meth:`get_next_tlid`.\\n\\n:rtype: :class:`int` or :class:`None`\\n\\n.. versionadded:: 1.1", "params": []}, "core.tracklist.get_length": {"description": "Get length of the tracklist.", "params": []}, "core.tracklist.get_next_tlid": {"description": "The tlid of the track that will be played if calling\\n:meth:`mopidy.core.PlaybackController.next()`.\\n\\nFor normal playback this is the next track in the tracklist. If repeat\\nis enabled the next track can loop around the tracklist. When random is\\nenabled this should be a random track, all tracks should be played once\\nbefore the tracklist repeats.\\n\\n:rtype: :class:`int` or :class:`None`\\n\\n.. versionadded:: 1.1", "params": []}, "core.tracklist.get_previous_tlid": {"description": "Returns the TLID of the track that will be played if calling\\n:meth:`mopidy.core.PlaybackController.previous()`.\\n\\nFor normal playback this is the previous track in the tracklist. If\\nrandom and/or consume is enabled it should return the current track\\ninstead.\\n\\n:rtype: :class:`int` or :class:`None`\\n\\n.. versionadded:: 1.1", "params": []}, "core.tracklist.get_random": {"description": "Get random mode.\\n\\n:class:`True`\\n    Tracks are selected at random from the tracklist.\\n:class:`False`\\n    Tracks are played in the order of the tracklist.", "params": []}, "core.tracklist.get_repeat": {"description": "Get repeat mode.\\n\\n:class:`True`\\n    The tracklist is played repeatedly.\\n:class:`False`\\n    The tracklist is played once.", "params": []}, "core.tracklist.get_single": {"description": "Get single mode.\\n\\n:class:`True`\\n    Playback is stopped after current song, unless in ``repeat`` mode.\\n:class:`False`\\n    Playback continues after current song.", "params": []}, "core.tracklist.get_tl_tracks": {"description": "Get tracklist as list of :class:`mopidy.models.TlTrack`.", "params": []}, "core.tracklist.get_tracks": {"description": "Get tracklist as list of :class:`mopidy.models.Track`.", "params": []}, "core.tracklist.get_version": {"description": "Get the tracklist version.\\n\\nInteger which is increased every time the tracklist is changed. Is not\\nreset before Mopidy is restarted.", "params": []}, "core.tracklist.index": {"description": "The position of the given track in the tracklist.\\n\\nIf neither *tl_track* or *tlid* is given we return the index of\\nthe currently playing track.\\n\\n:param tl_track: the track to find the index of\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:param tlid: TLID of the track to find the index of\\n:type tlid: :class:`int` or :class:`None`\\n:rtype: :class:`int` or :class:`None`\\n\\n.. versionadded:: 1.1\\n    The *tlid* parameter", "params": [{"name": "tl_track", "default": null}, {"name": "tlid", "default": null}]}, "core.tracklist.move": {"description": "Move the tracks in the slice ``[start:end]`` to ``to_position``.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.\\n\\n:param start: position of first track to move\\n:type start: int\\n:param end: position after last track to move\\n:type end: int\\n:param to_position: new position for the tracks\\n:type to_position: int", "params": [{"name": "start"}, {"name": "end"}, {"name": "to_position"}]}, "core.tracklist.next_track": {"description": "The track that will be played if calling\\n:meth:`mopidy.core.PlaybackController.next()`.\\n\\nFor normal playback this is the next track in the tracklist. If repeat\\nis enabled the next track can loop around the tracklist. When random is\\nenabled this should be a random track, all tracks should be played once\\nbefore the tracklist repeats.\\n\\n.. deprecated:: 3.0\\n    Use :meth:`get_next_tlid` instead.\\n\\n:param tl_track: the reference track\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:rtype: :class:`mopidy.models.TlTrack` or :class:`None`", "params": [{"name": "tl_track"}]}, "core.tracklist.previous_track": {"description": "Returns the track that will be played if calling\\n:meth:`mopidy.core.PlaybackController.previous()`.\\n\\nFor normal playback this is the previous track in the tracklist. If\\nrandom and/or consume is enabled it should return the current track\\ninstead.\\n\\n.. deprecated:: 3.0\\n    Use :meth:`get_previous_tlid` instead.\\n\\n:param tl_track: the reference track\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:rtype: :class:`mopidy.models.TlTrack` or :class:`None`", "params": [{"name": "tl_track"}]}, "core.tracklist.remove": {"description": "Remove the matching tracks from the tracklist.\\n\\nUses :meth:`filter()` to lookup the tracks to remove.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.\\n\\n:param criteria: one or more rules to match by\\n:type criteria: dict, of (string, list) pairs\\n:rtype: list of :class:`mopidy.models.TlTrack` that were removed", "params": [{"name": "criteria"}]}, "core.tracklist.set_consume": {"description": "Set consume mode.\\n\\n:class:`True`\\n    Tracks are removed from the tracklist when they have been played.\\n:class:`False`\\n    Tracks are not removed from the tracklist.", "params": [{"name": "value"}]}, "core.tracklist.set_random": {"description": "Set random mode.\\n\\n:class:`True`\\n    Tracks are selected at random from the tracklist.\\n:class:`False`\\n    Tracks are played in the order of the tracklist.", "params": [{"name": "value"}]}, "core.tracklist.set_repeat": {"description": "Set repeat mode.\\n\\nTo repeat a single track, set both ``repeat`` and ``single``.\\n\\n:class:`True`\\n    The tracklist is played repeatedly.\\n:class:`False`\\n    The tracklist is played once.", "params": [{"name": "value"}]}, "core.tracklist.set_single": {"description": "Set single mode.\\n\\n:class:`True`\\n    Playback is stopped after current song, unless in ``repeat`` mode.\\n:class:`False`\\n    Playback continues after current song.", "params": [{"name": "value"}]}, "core.tracklist.shuffle": {"description": "Shuffles the entire tracklist. If ``start`` and ``end`` is given only\\nshuffles the slice ``[start:end]``.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.\\n\\n:param start: position of first track to shuffle\\n:type start: int or :class:`None`\\n:param end: position after last track to shuffle\\n:type end: int or :class:`None`", "params": [{"name": "start", "default": null}, {"name": "end", "default": null}]}, "core.tracklist.slice": {"description": "Returns a slice of the tracklist, limited by the given start and end\\npositions.\\n\\n:param start: position of first track to include in slice\\n:type start: int\\n:param end: position after last track to include in slice\\n:type end: int\\n:rtype: :class:`mopidy.models.TlTrack`", "params": [{"name": "start"}, {"name": "end"}]}}}'
okt 23 23:45:13 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:45:13,395 [9178:HttpServer] mopidy.http.handlers
okt 23 23:45:13 Desktop-Ubuntu mopidy[9178]:   Received WebSocket message from 127.0.0.1: '{"method":"core.describe","jsonrpc":"2.0","id":0}'
okt 23 23:45:13 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:45:13,391 [9178:HttpServer] mopidy.http.handlers
okt 23 23:45:13 Desktop-Ubuntu mopidy[9178]:   {'method': 'connection_added', 'params': {'connection': {'connection_id': 'CHAKTIOTE1A2', 'ip': '127.0.0.1', 'created': '2022-10-23 23:45:13'}}}
okt 23 23:45:13 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:45:13,345 [9178:HttpServer] mopidy_iris.core
okt 23 23:45:13 Desktop-Ubuntu mopidy[9178]:   <mopidy_iris.handlers.WebsocketHandler object at 0x7fbcd85b1ba0>
okt 23 23:45:13 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:45:13,345 [9178:HttpServer] mopidy_iris.core
okt 23 23:45:13 Desktop-Ubuntu mopidy[9178]:   Connection added
okt 23 23:45:13 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:45:13,345 [9178:HttpServer] mopidy_iris.core
okt 23 23:45:13 Desktop-Ubuntu mopidy[9178]:   101 GET /iris/ws/ (127.0.0.1) 0.51ms
okt 23 23:45:13 Desktop-Ubuntu mopidy[9178]: INFO     2022-10-23 23:45:13,344 [9178:HttpServer] tornado.access
okt 23 23:45:13 Desktop-Ubuntu mopidy[9178]:   New WebSocket connection from 127.0.0.1
okt 23 23:45:13 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:45:13,332 [9178:HttpServer] mopidy.http.handlers
okt 23 23:45:13 Desktop-Ubuntu mopidy[9178]:   101 GET /mopidy/ws/ (127.0.0.1) 0.64ms
okt 23 23:45:13 Desktop-Ubuntu mopidy[9178]: INFO     2022-10-23 23:45:13,332 [9178:HttpServer] tornado.access
okt 23 23:45:13 Desktop-Ubuntu mopidy[9178]:   200 GET /iris/assets/favicon.png (127.0.0.1) 0.63ms
okt 23 23:45:13 Desktop-Ubuntu mopidy[9178]: INFO     2022-10-23 23:45:13,249 [9178:HttpServer] tornado.access
okt 23 23:45:13 Desktop-Ubuntu mopidy[9178]:   200 GET /iris/library/browse/Files/null (127.0.0.1) 0.68ms
okt 23 23:45:13 Desktop-Ubuntu mopidy[9178]: INFO     2022-10-23 23:45:13,045 [9178:HttpServer] tornado.access
okt 23 23:45:12 Desktop-Ubuntu mopidy[9178]:   200 GET /iris/app.min.js?v=1666559547 (127.0.0.1) 3.25ms
okt 23 23:45:12 Desktop-Ubuntu mopidy[9178]: INFO     2022-10-23 23:45:12,360 [9178:HttpServer] tornado.access
okt 23 23:45:12 Desktop-Ubuntu mopidy[9178]:   200 GET /iris/app.min.css?v=1666559547 (127.0.0.1) 2.09ms
okt 23 23:45:12 Desktop-Ubuntu mopidy[9178]: INFO     2022-10-23 23:45:12,356 [9178:HttpServer] tornado.access
okt 23 23:45:12 Desktop-Ubuntu mopidy[9178]:   200 GET /iris/assets/app-icon.svg (127.0.0.1) 0.65ms
okt 23 23:45:12 Desktop-Ubuntu mopidy[9178]: INFO     2022-10-23 23:45:12,193 [9178:HttpServer] tornado.access
okt 23 23:45:12 Desktop-Ubuntu mopidy[9178]:   Closed WebSocket connection from 127.0.0.1
okt 23 23:45:12 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:45:12,154 [9178:HttpServer] mopidy.http.handlers
okt 23 23:45:12 Desktop-Ubuntu mopidy[9178]:   {'method': 'connection_removed', 'params': {'connection': {'connection_id': '6RPQ96ENW9K1', 'ip': '127.0.0.1', 'created': '2022-10-23 23:44:43', 'username': 166656148284185, 'client_id': 166656148284193}}}
okt 23 23:45:12 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:45:12,153 [9178:HttpServer] mopidy_iris.core
okt 23 23:45:12 Desktop-Ubuntu mopidy[9178]:   200 GET /iris/library/browse/Files/ZmlsZTovLy92YXIvbGliL21vcGlkeQ== (127.0.0.1) 0.68ms
okt 23 23:45:12 Desktop-Ubuntu mopidy[9178]: INFO     2022-10-23 23:45:12,140 [9178:HttpServer] tornado.access
okt 23 23:45:10 Desktop-Ubuntu mopidy[9178]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 27, "result": [{"__model__": "Ref", "uri": "file:///var/lib/mopidy/http", "name": "http", "type": "directory"}, {"__model__": "Ref", "uri": "file:///var/lib/mopidy/iris", "name": "iris", "type": "directory"}, {"__model__": "Ref", "uri": "file:///var/lib/mopidy/m3u", "name": "m3u", "type": "directory"}]}'
okt 23 23:45:10 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:45:10,419 [9178:HttpServer] mopidy.http.handlers
okt 23 23:45:10 Desktop-Ubuntu mopidy[9178]:   Browsing files at: file:///var/lib/mopidy
okt 23 23:45:10 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:45:10,417 [9178:FileBackend-3 (_actor_loop)] mopidy.file.library
okt 23 23:45:10 Desktop-Ubuntu mopidy[9178]:   Received WebSocket message from 127.0.0.1: '{"method":"core.library.browse","params":{"uri":"file:///var/lib/mopidy"},"jsonrpc":"2.0","id":27}'
okt 23 23:45:10 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:45:10,416 [9178:HttpServer] mopidy.http.handlers
okt 23 23:45:10 Desktop-Ubuntu mopidy[9178]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 26, "result": {"file:///var/lib/mopidy": [{"__model__": "Track", "uri": "file:///var/lib/mopidy", "name": "mopidy"}]}}'
okt 23 23:45:10 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:45:10,357 [9178:HttpServer] mopidy.http.handlers
okt 23 23:45:10 Desktop-Ubuntu mopidy[9178]:   Failed looking up file:///var/lib/mopidy: gst-resource-error-quark: "/var/lib/mopidy" is a directory. (5)
okt 23 23:45:10 Desktop-Ubuntu mopidy[9178]: WARNING  2022-10-23 23:45:10,357 [9178:FileBackend-3 (_actor_loop)] mopidy.file.library
okt 23 23:45:10 Desktop-Ubuntu mopidy[9178]:   element filesrc7: GstMessageError, gerror=(GError)NULL, debug=(string)"../plugins/elements/gstf...
okt 23 23:45:10 Desktop-Ubuntu mopidy[9178]: TRACE    2022-10-23 23:45:10,357 [9178:FileBackend-3 (_actor_loop)] mopidy.audio.scan
okt 23 23:45:10 Desktop-Ubuntu mopidy[9178]:   Looking up file URI: file:///var/lib/mopidy
okt 23 23:45:10 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:45:10,355 [9178:FileBackend-3 (_actor_loop)] mopidy.file.library
okt 23 23:45:10 Desktop-Ubuntu mopidy[9178]:   Received WebSocket message from 127.0.0.1: '{"method":"core.library.lookup","params":{"uris":["file:///var/lib/mopidy"]},"jsonrpc":"2.0","id":26}'
okt 23 23:45:10 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:45:10,355 [9178:HttpServer] mopidy.http.handlers
okt 23 23:45:08 Desktop-Ubuntu mopidy[9178]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 25, "result": []}'
okt 23 23:45:08 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:45:08,958 [9178:HttpServer] mopidy.http.handlers
okt 23 23:45:08 Desktop-Ubuntu mopidy[9178]:   Browsing files at: file:///var/lib/mopidy/m3u
okt 23 23:45:08 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:45:08,945 [9178:FileBackend-3 (_actor_loop)] mopidy.file.library
okt 23 23:45:08 Desktop-Ubuntu mopidy[9178]:   Received WebSocket message from 127.0.0.1: '{"method":"core.library.browse","params":{"uri":"file:///var/lib/mopidy/m3u"},"jsonrpc":"2.0","id":25}'
okt 23 23:45:08 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:45:08,944 [9178:HttpServer] mopidy.http.handlers
okt 23 23:45:08 Desktop-Ubuntu mopidy[9178]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 24, "result": {"file:///var/lib/mopidy/m3u": [{"__model__": "Track", "uri": "file:///var/lib/mopidy/m3u", "name": "m3u"}]}}'
okt 23 23:45:08 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:45:08,881 [9178:HttpServer] mopidy.http.handlers
okt 23 23:45:08 Desktop-Ubuntu mopidy[9178]:   Failed looking up file:///var/lib/mopidy/m3u: gst-resource-error-quark: "/var/lib/mopidy/m3u" is a directory. (5)
okt 23 23:45:08 Desktop-Ubuntu mopidy[9178]: WARNING  2022-10-23 23:45:08,880 [9178:FileBackend-3 (_actor_loop)] mopidy.file.library
okt 23 23:45:08 Desktop-Ubuntu mopidy[9178]:   element filesrc6: GstMessageError, gerror=(GError)NULL, debug=(string)"../plugins/elements/gstf...
okt 23 23:45:08 Desktop-Ubuntu mopidy[9178]: TRACE    2022-10-23 23:45:08,880 [9178:FileBackend-3 (_actor_loop)] mopidy.audio.scan
okt 23 23:45:08 Desktop-Ubuntu mopidy[9178]:   Looking up file URI: file:///var/lib/mopidy/m3u
okt 23 23:45:08 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:45:08,878 [9178:FileBackend-3 (_actor_loop)] mopidy.file.library
okt 23 23:45:08 Desktop-Ubuntu mopidy[9178]:   Received WebSocket message from 127.0.0.1: '{"method":"core.library.lookup","params":{"uris":["file:///var/lib/mopidy/m3u"]},"jsonrpc":"2.0","id":24}'
okt 23 23:45:08 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:45:08,878 [9178:HttpServer] mopidy.http.handlers
okt 23 23:45:08 Desktop-Ubuntu mopidy[9178]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 23, "result": [{"__model__": "Ref", "uri": "file:///var/lib/mopidy/http", "name": "http", "type": "directory"}, {"__model__": "Ref", "uri": "file:///var/lib/mopidy/iris", "name": "iris", "type": "directory"}, {"__model__": "Ref", "uri": "file:///var/lib/mopidy/m3u", "name": "m3u", "type": "directory"}]}'
okt 23 23:45:08 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:45:08,133 [9178:HttpServer] mopidy.http.handlers
okt 23 23:45:08 Desktop-Ubuntu mopidy[9178]:   Browsing files at: file:///var/lib/mopidy
okt 23 23:45:08 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:45:08,131 [9178:FileBackend-3 (_actor_loop)] mopidy.file.library
okt 23 23:45:08 Desktop-Ubuntu mopidy[9178]:   Received WebSocket message from 127.0.0.1: '{"method":"core.library.browse","params":{"uri":"file:///var/lib/mopidy"},"jsonrpc":"2.0","id":23}'
okt 23 23:45:08 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:45:08,130 [9178:HttpServer] mopidy.http.handlers
okt 23 23:45:08 Desktop-Ubuntu mopidy[9178]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 22, "result": {"file:///var/lib/mopidy": [{"__model__": "Track", "uri": "file:///var/lib/mopidy", "name": "mopidy"}]}}'
okt 23 23:45:08 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:45:08,071 [9178:HttpServer] mopidy.http.handlers
okt 23 23:45:08 Desktop-Ubuntu mopidy[9178]:   Failed looking up file:///var/lib/mopidy: gst-resource-error-quark: "/var/lib/mopidy" is a directory. (5)
okt 23 23:45:08 Desktop-Ubuntu mopidy[9178]: WARNING  2022-10-23 23:45:08,071 [9178:FileBackend-3 (_actor_loop)] mopidy.file.library
okt 23 23:45:08 Desktop-Ubuntu mopidy[9178]:   element filesrc5: GstMessageError, gerror=(GError)NULL, debug=(string)"../plugins/elements/gstf...
okt 23 23:45:08 Desktop-Ubuntu mopidy[9178]: TRACE    2022-10-23 23:45:08,070 [9178:FileBackend-3 (_actor_loop)] mopidy.audio.scan
okt 23 23:45:08 Desktop-Ubuntu mopidy[9178]:   Looking up file URI: file:///var/lib/mopidy
okt 23 23:45:08 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:45:08,069 [9178:FileBackend-3 (_actor_loop)] mopidy.file.library
okt 23 23:45:08 Desktop-Ubuntu mopidy[9178]:   Received WebSocket message from 127.0.0.1: '{"method":"core.library.lookup","params":{"uris":["file:///var/lib/mopidy"]},"jsonrpc":"2.0","id":22}'
okt 23 23:45:08 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:45:08,069 [9178:HttpServer] mopidy.http.handlers
okt 23 23:45:06 Desktop-Ubuntu mopidy[9178]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 21, "result": []}'
okt 23 23:45:06 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:45:06,702 [9178:HttpServer] mopidy.http.handlers
okt 23 23:45:06 Desktop-Ubuntu mopidy[9178]:   Browsing files at: file:///var/lib/mopidy/iris
okt 23 23:45:06 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:45:06,701 [9178:FileBackend-3 (_actor_loop)] mopidy.file.library
okt 23 23:45:06 Desktop-Ubuntu mopidy[9178]:   Received WebSocket message from 127.0.0.1: '{"method":"core.library.browse","params":{"uri":"file:///var/lib/mopidy/iris"},"jsonrpc":"2.0","id":21}'
okt 23 23:45:06 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:45:06,701 [9178:HttpServer] mopidy.http.handlers
okt 23 23:45:06 Desktop-Ubuntu mopidy[9178]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 20, "result": {"file:///var/lib/mopidy/iris": [{"__model__": "Track", "uri": "file:///var/lib/mopidy/iris", "name": "iris"}]}}'
okt 23 23:45:06 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:45:06,650 [9178:HttpServer] mopidy.http.handlers
okt 23 23:45:06 Desktop-Ubuntu mopidy[9178]:   Failed looking up file:///var/lib/mopidy/iris: gst-resource-error-quark: "/var/lib/mopidy/iris" is a directory. (5)
okt 23 23:45:06 Desktop-Ubuntu mopidy[9178]: WARNING  2022-10-23 23:45:06,649 [9178:FileBackend-3 (_actor_loop)] mopidy.file.library
okt 23 23:45:06 Desktop-Ubuntu mopidy[9178]:   element filesrc4: GstMessageError, gerror=(GError)NULL, debug=(string)"../plugins/elements/gstf...
okt 23 23:45:06 Desktop-Ubuntu mopidy[9178]: TRACE    2022-10-23 23:45:06,649 [9178:FileBackend-3 (_actor_loop)] mopidy.audio.scan
okt 23 23:45:06 Desktop-Ubuntu mopidy[9178]:   Looking up file URI: file:///var/lib/mopidy/iris
okt 23 23:45:06 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:45:06,648 [9178:FileBackend-3 (_actor_loop)] mopidy.file.library
okt 23 23:45:06 Desktop-Ubuntu mopidy[9178]:   Received WebSocket message from 127.0.0.1: '{"method":"core.library.lookup","params":{"uris":["file:///var/lib/mopidy/iris"]},"jsonrpc":"2.0","id":20}'
okt 23 23:45:06 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:45:06,647 [9178:HttpServer] mopidy.http.handlers
okt 23 23:45:05 Desktop-Ubuntu mopidy[9178]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 19, "result": [{"__model__": "Ref", "uri": "file:///var/lib/mopidy/http", "name": "http", "type": "directory"}, {"__model__": "Ref", "uri": "file:///var/lib/mopidy/iris", "name": "iris", "type": "directory"}, {"__model__": "Ref", "uri": "file:///var/lib/mopidy/m3u", "name": "m3u", "type": "directory"}]}'
okt 23 23:45:05 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:45:05,842 [9178:HttpServer] mopidy.http.handlers
okt 23 23:45:05 Desktop-Ubuntu mopidy[9178]:   Browsing files at: file:///var/lib/mopidy
okt 23 23:45:05 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:45:05,840 [9178:FileBackend-3 (_actor_loop)] mopidy.file.library
okt 23 23:45:05 Desktop-Ubuntu mopidy[9178]:   Received WebSocket message from 127.0.0.1: '{"method":"core.library.browse","params":{"uri":"file:///var/lib/mopidy"},"jsonrpc":"2.0","id":19}'
okt 23 23:45:05 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:45:05,839 [9178:HttpServer] mopidy.http.handlers
okt 23 23:45:05 Desktop-Ubuntu mopidy[9178]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 18, "result": {"file:///var/lib/mopidy": [{"__model__": "Track", "uri": "file:///var/lib/mopidy", "name": "mopidy"}]}}'
okt 23 23:45:05 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:45:05,777 [9178:HttpServer] mopidy.http.handlers
okt 23 23:45:05 Desktop-Ubuntu mopidy[9178]:   Failed looking up file:///var/lib/mopidy: gst-resource-error-quark: "/var/lib/mopidy" is a directory. (5)
okt 23 23:45:05 Desktop-Ubuntu mopidy[9178]: WARNING  2022-10-23 23:45:05,776 [9178:FileBackend-3 (_actor_loop)] mopidy.file.library
okt 23 23:45:05 Desktop-Ubuntu mopidy[9178]:   element filesrc3: GstMessageError, gerror=(GError)NULL, debug=(string)"../plugins/elements/gstf...
okt 23 23:45:05 Desktop-Ubuntu mopidy[9178]: TRACE    2022-10-23 23:45:05,776 [9178:FileBackend-3 (_actor_loop)] mopidy.audio.scan
okt 23 23:45:05 Desktop-Ubuntu mopidy[9178]:   Looking up file URI: file:///var/lib/mopidy
okt 23 23:45:05 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:45:05,775 [9178:FileBackend-3 (_actor_loop)] mopidy.file.library
okt 23 23:45:05 Desktop-Ubuntu mopidy[9178]:   Received WebSocket message from 127.0.0.1: '{"method":"core.library.lookup","params":{"uris":["file:///var/lib/mopidy"]},"jsonrpc":"2.0","id":18}'
okt 23 23:45:05 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:45:05,774 [9178:HttpServer] mopidy.http.handlers
okt 23 23:45:04 Desktop-Ubuntu mopidy[9178]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 17, "result": {"file:///var/lib/mopidy/http/cookie_secret": [{"__model__": "Track", "uri": "file:///var/lib/mopidy/http/cookie_secret", "name": "cookie_secret"}]}}'
okt 23 23:45:04 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:45:04,524 [9178:HttpServer] mopidy.http.handlers
okt 23 23:45:04 Desktop-Ubuntu mopidy[9178]:   Failed looking up file:///var/lib/mopidy/http/cookie_secret: gst-stream-error-quark: Could not determine type of stream. (4)
okt 23 23:45:04 Desktop-Ubuntu mopidy[9178]: WARNING  2022-10-23 23:45:04,524 [9178:FileBackend-3 (_actor_loop)] mopidy.file.library
okt 23 23:45:04 Desktop-Ubuntu mopidy[9178]:   element typefind: GstMessageError, gerror=(GError)NULL, debug=(string)"../plugins/elements/gstt...
okt 23 23:45:04 Desktop-Ubuntu mopidy[9178]: TRACE    2022-10-23 23:45:04,523 [9178:FileBackend-3 (_actor_loop)] mopidy.audio.scan
okt 23 23:45:04 Desktop-Ubuntu mopidy[9178]:   Looking up file URI: file:///var/lib/mopidy/http/cookie_secret
okt 23 23:45:04 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:45:04,500 [9178:FileBackend-3 (_actor_loop)] mopidy.file.library
okt 23 23:45:04 Desktop-Ubuntu mopidy[9178]:   Received WebSocket message from 127.0.0.1: '{"method":"core.library.lookup","params":{"uris":["file:///var/lib/mopidy/http/cookie_secret"]},"jsonrpc":"2.0","id":17}'
okt 23 23:45:04 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:45:04,500 [9178:HttpServer] mopidy.http.handlers
okt 23 23:45:04 Desktop-Ubuntu mopidy[9178]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 16, "result": [{"__model__": "Ref", "uri": "file:///var/lib/mopidy/http/cookie_secret", "name": "cookie_secret", "type": "track"}]}'
okt 23 23:45:04 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:45:04,399 [9178:HttpServer] mopidy.http.handlers
okt 23 23:45:04 Desktop-Ubuntu mopidy[9178]:   Browsing files at: file:///var/lib/mopidy/http
okt 23 23:45:04 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:45:04,398 [9178:FileBackend-3 (_actor_loop)] mopidy.file.library
okt 23 23:45:04 Desktop-Ubuntu mopidy[9178]:   Received WebSocket message from 127.0.0.1: '{"method":"core.library.browse","params":{"uri":"file:///var/lib/mopidy/http"},"jsonrpc":"2.0","id":16}'
okt 23 23:45:04 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:45:04,397 [9178:HttpServer] mopidy.http.handlers
okt 23 23:45:04 Desktop-Ubuntu mopidy[9178]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 15, "result": {"file:///var/lib/mopidy/http": [{"__model__": "Track", "uri": "file:///var/lib/mopidy/http", "name": "http"}]}}'
okt 23 23:45:04 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:45:04,341 [9178:HttpServer] mopidy.http.handlers
okt 23 23:45:04 Desktop-Ubuntu mopidy[9178]:   Failed looking up file:///var/lib/mopidy/http: gst-resource-error-quark: "/var/lib/mopidy/http" is a directory. (5)
okt 23 23:45:04 Desktop-Ubuntu mopidy[9178]: WARNING  2022-10-23 23:45:04,340 [9178:FileBackend-3 (_actor_loop)] mopidy.file.library
okt 23 23:45:04 Desktop-Ubuntu mopidy[9178]:   element filesrc1: GstMessageError, gerror=(GError)NULL, debug=(string)"../plugins/elements/gstf...
okt 23 23:45:04 Desktop-Ubuntu mopidy[9178]: TRACE    2022-10-23 23:45:04,339 [9178:FileBackend-3 (_actor_loop)] mopidy.audio.scan
okt 23 23:45:04 Desktop-Ubuntu mopidy[9178]:   Looking up file URI: file:///var/lib/mopidy/http
okt 23 23:45:04 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:45:04,338 [9178:FileBackend-3 (_actor_loop)] mopidy.file.library
okt 23 23:45:04 Desktop-Ubuntu mopidy[9178]:   Received WebSocket message from 127.0.0.1: '{"method":"core.library.lookup","params":{"uris":["file:///var/lib/mopidy/http"]},"jsonrpc":"2.0","id":15}'
okt 23 23:45:04 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:45:04,337 [9178:HttpServer] mopidy.http.handlers
okt 23 23:45:03 Desktop-Ubuntu mopidy[9178]:   200 GET /iris/library/browse/Files/null (127.0.0.1) 0.77ms
okt 23 23:45:03 Desktop-Ubuntu mopidy[9178]: INFO     2022-10-23 23:45:03,367 [9178:HttpServer] tornado.access
okt 23 23:45:03 Desktop-Ubuntu mopidy[9178]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 14, "result": [{"__model__": "Ref", "uri": "file:///var/lib/mopidy/http", "name": "http", "type": "directory"}, {"__model__": "Ref", "uri": "file:///var/lib/mopidy/iris", "name": "iris", "type": "directory"}, {"__model__": "Ref", "uri": "file:///var/lib/mopidy/m3u", "name": "m3u", "type": "directory"}]}'
okt 23 23:45:03 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:45:03,253 [9178:HttpServer] mopidy.http.handlers
okt 23 23:45:03 Desktop-Ubuntu mopidy[9178]:   Browsing files at: file:///var/lib/mopidy
okt 23 23:45:03 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:45:03,250 [9178:FileBackend-3 (_actor_loop)] mopidy.file.library
okt 23 23:45:03 Desktop-Ubuntu mopidy[9178]:   Received WebSocket message from 127.0.0.1: '{"method":"core.library.browse","params":{"uri":"file:///var/lib/mopidy"},"jsonrpc":"2.0","id":14}'
okt 23 23:45:03 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:45:03,249 [9178:HttpServer] mopidy.http.handlers
okt 23 23:45:03 Desktop-Ubuntu mopidy[9178]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 13, "result": {"file:///var/lib/mopidy": [{"__model__": "Track", "uri": "file:///var/lib/mopidy", "name": "mopidy"}]}}'
okt 23 23:45:03 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:45:03,177 [9178:HttpServer] mopidy.http.handlers
okt 23 23:45:03 Desktop-Ubuntu mopidy[9178]:   Failed looking up file:///var/lib/mopidy: gst-resource-error-quark: "/var/lib/mopidy" is a directory. (5)
okt 23 23:45:03 Desktop-Ubuntu mopidy[9178]: WARNING  2022-10-23 23:45:03,176 [9178:FileBackend-3 (_actor_loop)] mopidy.file.library
okt 23 23:45:03 Desktop-Ubuntu mopidy[9178]:   element filesrc0: GstMessageError, gerror=(GError)NULL, debug=(string)"../plugins/elements/gstf...
okt 23 23:45:03 Desktop-Ubuntu mopidy[9178]: TRACE    2022-10-23 23:45:03,176 [9178:FileBackend-3 (_actor_loop)] mopidy.audio.scan
okt 23 23:45:03 Desktop-Ubuntu mopidy[9178]:   Looking up file URI: file:///var/lib/mopidy
okt 23 23:45:03 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:45:03,173 [9178:FileBackend-3 (_actor_loop)] mopidy.file.library
okt 23 23:45:03 Desktop-Ubuntu mopidy[9178]:   Received WebSocket message from 127.0.0.1: '{"method":"core.library.lookup","params":{"uris":["file:///var/lib/mopidy"]},"jsonrpc":"2.0","id":13}'
okt 23 23:45:03 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:45:03,172 [9178:HttpServer] mopidy.http.handlers
okt 23 23:45:02 Desktop-Ubuntu mopidy[9178]:   304 GET /iris/assets/backgrounds/browse-folders.jpg (127.0.0.1) 0.81ms
okt 23 23:45:02 Desktop-Ubuntu mopidy[9178]: INFO     2022-10-23 23:45:02,439 [9178:HttpServer] tornado.access
okt 23 23:45:02 Desktop-Ubuntu mopidy[9178]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 12, "result": [{"__model__": "Ref", "uri": "file:///var/lib/mopidy", "name": "Files", "type": "directory"}]}'
okt 23 23:45:02 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:45:02,342 [9178:HttpServer] mopidy.http.handlers
okt 23 23:45:02 Desktop-Ubuntu mopidy[9178]:   Received WebSocket message from 127.0.0.1: '{"method":"core.library.browse","params":{"uri":null},"jsonrpc":"2.0","id":12}'
okt 23 23:45:02 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:45:02,339 [9178:HttpServer] mopidy.http.handlers
okt 23 23:44:44 Desktop-Ubuntu mopidy[9178]:   {'id': 166656148429312, 'jsonrpc': '2.0', 'method': 'get_version', 'result': {'version': {'current': '3.64.1', 'latest': '3.64.1', 'is_root': False, 'upgrade_available': False}}, 'recipient': '6RPQ96ENW9K1'}
okt 23 23:44:44 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:44:44,424 [9178:HttpServer] mopidy_iris.core
okt 23 23:44:44 Desktop-Ubuntu mopidy[9178]:   Iris websocket message received: {"jsonrpc":"2.0","id":166656148429312,"method":"get_version"}
okt 23 23:44:44 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:44:44,295 [9178:HttpServer] mopidy_iris.handlers
okt 23 23:44:44 Desktop-Ubuntu mopidy[9178]:   304 GET /iris/assets/favicon_paused.png (127.0.0.1) 0.69ms
okt 23 23:44:44 Desktop-Ubuntu mopidy[9178]: INFO     2022-10-23 23:44:44,275 [9178:HttpServer] tornado.access
okt 23 23:44:43 Desktop-Ubuntu mopidy[9178]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 11, "result": null}'
okt 23 23:44:43 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:44:43,963 [9178:HttpServer] mopidy.http.handlers
okt 23 23:44:43 Desktop-Ubuntu mopidy[9178]:   Received WebSocket message from 127.0.0.1: '{"method":"core.playback.get_stream_title","params":{},"jsonrpc":"2.0","id":11}'
okt 23 23:44:43 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:44:43,963 [9178:HttpServer] mopidy.http.handlers
okt 23 23:44:43 Desktop-Ubuntu mopidy[9178]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 10, "result": ["file", "http", "https", "m3u", "rtsp"]}'
okt 23 23:44:43 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:44:43,960 [9178:HttpServer] mopidy.http.handlers
okt 23 23:44:43 Desktop-Ubuntu mopidy[9178]:   Received WebSocket message from 127.0.0.1: '{"method":"core.get_uri_schemes","params":{},"jsonrpc":"2.0","id":10}'
okt 23 23:44:43 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:44:43,960 [9178:HttpServer] mopidy.http.handlers
okt 23 23:44:43 Desktop-Ubuntu mopidy[9178]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 9, "result": 0}'
okt 23 23:44:43 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:44:43,957 [9178:HttpServer] mopidy.http.handlers
okt 23 23:44:43 Desktop-Ubuntu mopidy[9178]:   Received WebSocket message from 127.0.0.1: '{"method":"core.playback.get_time_position","params":{},"jsonrpc":"2.0","id":9}'
okt 23 23:44:43 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:44:43,956 [9178:HttpServer] mopidy.http.handlers
okt 23 23:44:43 Desktop-Ubuntu mopidy[9178]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 8, "result": []}'
okt 23 23:44:43 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:44:43,952 [9178:HttpServer] mopidy.http.handlers
okt 23 23:44:43 Desktop-Ubuntu mopidy[9178]:   Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_tl_tracks","params":{},"jsonrpc":"2.0","id":8}'
okt 23 23:44:43 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:44:43,951 [9178:HttpServer] mopidy.http.handlers
okt 23 23:44:43 Desktop-Ubuntu mopidy[9178]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 7, "result": false}'
okt 23 23:44:43 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:44:43,948 [9178:HttpServer] mopidy.http.handlers
okt 23 23:44:43 Desktop-Ubuntu mopidy[9178]:   Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_repeat","params":{},"jsonrpc":"2.0","id":7}'
okt 23 23:44:43 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:44:43,948 [9178:HttpServer] mopidy.http.handlers
okt 23 23:44:43 Desktop-Ubuntu mopidy[9178]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 6, "result": false}'
okt 23 23:44:43 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:44:43,945 [9178:HttpServer] mopidy.http.handlers
okt 23 23:44:43 Desktop-Ubuntu mopidy[9178]:   Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_random","params":{},"jsonrpc":"2.0","id":6}'
okt 23 23:44:43 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:44:43,944 [9178:HttpServer] mopidy.http.handlers
okt 23 23:44:43 Desktop-Ubuntu mopidy[9178]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 5, "result": false}'
okt 23 23:44:43 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:44:43,941 [9178:HttpServer] mopidy.http.handlers
okt 23 23:44:43 Desktop-Ubuntu mopidy[9178]:   Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_consume","params":{},"jsonrpc":"2.0","id":5}'
okt 23 23:44:43 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:44:43,941 [9178:HttpServer] mopidy.http.handlers
okt 23 23:44:43 Desktop-Ubuntu mopidy[9178]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 4, "result": false}'
okt 23 23:44:43 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:44:43,938 [9178:HttpServer] mopidy.http.handlers
okt 23 23:44:43 Desktop-Ubuntu mopidy[9178]:   Received WebSocket message from 127.0.0.1: '{"method":"core.mixer.get_mute","params":{},"jsonrpc":"2.0","id":4}'
okt 23 23:44:43 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:44:43,937 [9178:HttpServer] mopidy.http.handlers
okt 23 23:44:43 Desktop-Ubuntu mopidy[9178]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 3, "result": 100}'
okt 23 23:44:43 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:44:43,935 [9178:HttpServer] mopidy.http.handlers
okt 23 23:44:43 Desktop-Ubuntu mopidy[9178]:   Received WebSocket message from 127.0.0.1: '{"method":"core.mixer.get_volume","params":{},"jsonrpc":"2.0","id":3}'
okt 23 23:44:43 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:44:43,934 [9178:HttpServer] mopidy.http.handlers
okt 23 23:44:43 Desktop-Ubuntu mopidy[9178]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 2, "result": "stopped"}'
okt 23 23:44:43 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:44:43,931 [9178:HttpServer] mopidy.http.handlers
okt 23 23:44:43 Desktop-Ubuntu mopidy[9178]:   Received WebSocket message from 127.0.0.1: '{"method":"core.playback.get_state","params":{},"jsonrpc":"2.0","id":2}'
okt 23 23:44:43 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:44:43,931 [9178:HttpServer] mopidy.http.handlers
okt 23 23:44:43 Desktop-Ubuntu mopidy[9178]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 1, "result": null}'
okt 23 23:44:43 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:44:43,928 [9178:HttpServer] mopidy.http.handlers
okt 23 23:44:43 Desktop-Ubuntu mopidy[9178]:   Received WebSocket message from 127.0.0.1: '{"method":"core.playback.get_current_tl_track","params":{},"jsonrpc":"2.0","id":1}'
okt 23 23:44:43 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:44:43,927 [9178:HttpServer] mopidy.http.handlers
okt 23 23:44:43 Desktop-Ubuntu mopidy[9178]:   {'id': 166656148379660, 'jsonrpc': '2.0', 'method': 'get_connections', 'result': {'connections': [{'connection_id': '6RPQ96ENW9K1', 'ip': '127.0.0.1', 'created': '2022-10-23 23:44:43', 'username': 166656148284185, 'client_id': 166656148284193}]}, 'recipient': '6RPQ96ENW9K1'}
okt 23 23:44:43 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:44:43,797 [9178:HttpServer] mopidy_iris.core
okt 23 23:44:43 Desktop-Ubuntu mopidy[9178]:   Iris websocket message received: {"jsonrpc":"2.0","id":166656148379660,"method":"get_connections"}
okt 23 23:44:43 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:44:43,797 [9178:HttpServer] mopidy_iris.handlers
okt 23 23:44:43 Desktop-Ubuntu mopidy[9178]:   {'id': 166656148378878, 'jsonrpc': '2.0', 'method': 'get_queue_metadata', 'result': {'queue_metadata': {}}, 'recipient': '6RPQ96ENW9K1'}
okt 23 23:44:43 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:44:43,789 [9178:HttpServer] mopidy_iris.core
okt 23 23:44:43 Desktop-Ubuntu mopidy[9178]:   Iris websocket message received: {"jsonrpc":"2.0","id":166656148378878,"method":"get_queue_metadata"}
okt 23 23:44:43 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:44:43,789 [9178:HttpServer] mopidy_iris.handlers
okt 23 23:44:43 Desktop-Ubuntu mopidy[9178]:   {'id': 166656148378466, 'jsonrpc': '2.0', 'method': 'get_pinned', 'result': {'pinned': []}, 'recipient': '6RPQ96ENW9K1'}
okt 23 23:44:43 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:44:43,785 [9178:HttpServer] mopidy_iris.core
okt 23 23:44:43 Desktop-Ubuntu mopidy[9178]:   Iris websocket message received: {"jsonrpc":"2.0","id":166656148378466,"method":"get_pinned"}
okt 23 23:44:43 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:44:43,785 [9178:HttpServer] mopidy_iris.handlers
okt 23 23:44:43 Desktop-Ubuntu mopidy[9178]:   {'id': 166656148377939, 'jsonrpc': '2.0', 'method': 'get_commands', 'result': {'commands': {}}, 'recipient': '6RPQ96ENW9K1'}
okt 23 23:44:43 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:44:43,780 [9178:HttpServer] mopidy_iris.core
okt 23 23:44:43 Desktop-Ubuntu mopidy[9178]:   Iris websocket message received: {"jsonrpc":"2.0","id":166656148377939,"method":"get_commands"}
okt 23 23:44:43 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:44:43,780 [9178:HttpServer] mopidy_iris.handlers
okt 23 23:44:43 Desktop-Ubuntu mopidy[9178]:   {'id': 166656148377450, 'jsonrpc': '2.0', 'method': 'get_radio', 'result': {'radio': {'enabled': 0, 'seed_artists': [], 'seed_genres': [], 'seed_tracks': [], 'results': []}}, 'recipient': '6RPQ96ENW9K1'}
okt 23 23:44:43 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:44:43,775 [9178:HttpServer] mopidy_iris.core
okt 23 23:44:43 Desktop-Ubuntu mopidy[9178]:   Iris websocket message received: {"jsonrpc":"2.0","id":166656148377450,"method":"get_radio"}
okt 23 23:44:43 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:44:43,775 [9178:HttpServer] mopidy_iris.handlers
okt 23 23:44:43 Desktop-Ubuntu mopidy[9178]:   {'id': 166656148376921, 'jsonrpc': '2.0', 'method': 'get_shared_config', 'result': {'shared_config': {}}, 'recipient': '6RPQ96ENW9K1'}
okt 23 23:44:43 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:44:43,770 [9178:HttpServer] mopidy_iris.core
okt 23 23:44:43 Desktop-Ubuntu mopidy[9178]:   Iris websocket message received: {"jsonrpc":"2.0","id":166656148376921,"method":"get_shared_config"}
okt 23 23:44:43 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:44:43,770 [9178:HttpServer] mopidy_iris.handlers
okt 23 23:44:43 Desktop-Ubuntu mopidy[9178]:   {'id': 166656148376490, 'jsonrpc': '2.0', 'method': 'get_config', 'result': {'config': {'is_root': False, 'spotify_username': False, 'country': 'NZ', 'locale': 'en_NZ', 'snapcast_enabled': True, 'snapcast_host': 'localhost', 'snapcast_port': '1780', 'snapcast_ssl': False, 'snapcast_stream': 'Default', 'spotify_authorization_url': 'https://jamesbarnsley.co.nz/iris/auth_spotify.php', 'lastfm_authorization_url': 'https://jamesbarnsley.co.nz/iris/auth_lastfm.php', 'genius_authorization_url': 'https://jamesbarnsley.co.nz/iris/auth_genius.php', 'shared_config': {}}}, 'recipient': '6RPQ96ENW9K1'}
okt 23 23:44:43 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:44:43,765 [9178:HttpServer] mopidy_iris.core
okt 23 23:44:43 Desktop-Ubuntu mopidy[9178]:   Iris websocket message received: {"jsonrpc":"2.0","id":166656148376490,"method":"get_config"}
okt 23 23:44:43 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:44:43,765 [9178:HttpServer] mopidy_iris.handlers
okt 23 23:44:43 Desktop-Ubuntu mopidy[9178]:   {'id': 166656148375932, 'jsonrpc': '2.0', 'method': 'update_connection', 'result': {'connection': {'connection_id': '6RPQ96ENW9K1', 'ip': '127.0.0.1', 'created': '2022-10-23 23:44:43', 'username': 166656148284185, 'client_id': 166656148284193}}, 'recipient': '6RPQ96ENW9K1'}
okt 23 23:44:43 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:44:43,762 [9178:HttpServer] mopidy_iris.core
okt 23 23:44:43 Desktop-Ubuntu mopidy[9178]:   {'method': 'connection_changed', 'params': {'connection': {'connection_id': '6RPQ96ENW9K1', 'ip': '127.0.0.1', 'created': '2022-10-23 23:44:43', 'username': 166656148284185, 'client_id': 166656148284193}}}
okt 23 23:44:43 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:44:43,762 [9178:HttpServer] mopidy_iris.core
okt 23 23:44:43 Desktop-Ubuntu mopidy[9178]:   Iris websocket message received: {"jsonrpc":"2.0","id":166656148375932,"method":"update_connection","params":{"username":166656148284185,"client_id":166656148284193}}
okt 23 23:44:43 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:44:43,762 [9178:HttpServer] mopidy_iris.handlers
okt 23 23:44:43 Desktop-Ubuntu mopidy[9178]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 0, "result": {"core.get_uri_schemes": {"description": "Get list of URI schemes we can handle", "params": []}, "core.get_version": {"description": "Get version of the Mopidy core API", "params": []}, "core.history.get_history": {"description": "Get the track history.\\n\\nThe timestamps are milliseconds since epoch.\\n\\n:returns: the track history\\n:rtype: list of (timestamp, :class:`mopidy.models.Ref`) tuples", "params": []}, "core.history.get_length": {"description": "Get the number of tracks in the history.\\n\\n:returns: the history length\\n:rtype: int", "params": []}, "core.library.browse": {"description": "Browse directories and tracks at the given ``uri``.\\n\\n``uri`` is a string which represents some directory belonging to a\\nbackend. To get the intial root directories for backends pass\\n:class:`None` as the URI.\\n\\nReturns a list of :class:`mopidy.models.Ref` objects for the\\ndirectories and tracks at the given ``uri``.\\n\\nThe :class:`~mopidy.models.Ref` objects representing tracks keep the\\ntrack\'s original URI. A matching pair of objects can look like this::\\n\\n    Track(uri=\'dummy:/foo.mp3\', name=\'foo\', artists=..., album=...)\\n    Ref.track(uri=\'dummy:/foo.mp3\', name=\'foo\')\\n\\nThe :class:`~mopidy.models.Ref` objects representing directories have\\nbackend specific URIs. These are opaque values, so no one but the\\nbackend that created them should try and derive any meaning from them.\\nThe only valid exception to this is checking the scheme, as it is used\\nto route browse requests to the correct backend.\\n\\nFor example, the dummy library\'s ``/bar`` directory could be returned\\nlike this::\\n\\n    Ref.directory(uri=\'dummy:directory:/bar\', name=\'bar\')\\n\\n:param string uri: URI to browse\\n:rtype: list of :class:`mopidy.models.Ref`\\n\\n.. versionadded:: 0.18", "params": [{"name": "uri"}]}, "core.library.get_distinct": {"description": "List distinct values for a given field from the library.\\n\\nThis has mainly been added to support the list commands the MPD\\nprotocol supports in a more sane fashion. Other frontends are not\\nrecommended to use this method.\\n\\n:param string field: Any one of ``uri``, ``track_name``, ``album``,\\n    ``artist``, ``albumartist``, ``composer``, ``performer``,\\n    ``track_no``, ``genre``, ``date``, ``comment``, ``disc_no``,\\n    ``musicbrainz_albumid``, ``musicbrainz_artistid``, or\\n    ``musicbrainz_trackid``.\\n:param dict query: Query to use for limiting results, see\\n    :meth:`search` for details about the query format.\\n:rtype: set of values corresponding to the requested field type.\\n\\n.. versionadded:: 1.0", "params": [{"name": "field"}, {"name": "query", "default": null}]}, "core.library.get_images": {"description": "Lookup the images for the given URIs\\n\\nBackends can use this to return image URIs for any URI they know about\\nbe it tracks, albums, playlists. The lookup result is a dictionary\\nmapping the provided URIs to lists of images.\\n\\nUnknown URIs or URIs the corresponding backend couldn\'t find anything\\nfor will simply return an empty list for that URI.\\n\\n:param uris: list of URIs to find images for\\n:type uris: list of string\\n:rtype: {uri: tuple of :class:`mopidy.models.Image`}\\n\\n.. versionadded:: 1.0", "params": [{"name": "uris"}]}, "core.library.lookup": {"description": "Lookup the given URIs.\\n\\nIf the URI expands to multiple tracks, the returned list will contain\\nthem all.\\n\\n:param uris: track URIs\\n:type uris: list of string\\n:rtype: {uri: list of :class:`mopidy.models.Track`}", "params": [{"name": "uris"}]}, "core.library.refresh": {"description": "Refresh library. Limit to URI and below if an URI is given.\\n\\n:param uri: directory or track URI\\n:type uri: string", "params": [{"name": "uri", "default": null}]}, "core.library.search": {"description": "Search the library for tracks where ``field`` contains ``values``.\\n\\n``field`` can be one of ``uri``, ``track_name``, ``album``, ``artist``,\\n``albumartist``, ``composer``, ``performer``, ``track_no``, ``genre``,\\n``date``, ``comment``, ``disc_no``, ``musicbrainz_albumid``,\\n``musicbrainz_artistid``, ``musicbrainz_trackid`` or ``any``.\\n\\nIf ``uris`` is given, the search is limited to results from within the\\nURI roots. For example passing ``uris=[\'file:\']`` will limit the search\\nto the local backend.\\n\\nExamples::\\n\\n    # Returns results matching \'a\' in any backend\\n    search({\'any\': [\'a\']})\\n\\n    # Returns results matching artist \'xyz\' in any backend\\n    search({\'artist\': [\'xyz\']})\\n\\n    # Returns results matching \'a\' and \'b\' and artist \'xyz\' in any\\n    # backend\\n    search({\'any\': [\'a\', \'b\'], \'artist\': [\'xyz\']})\\n\\n    # Returns results matching \'a\' if within the given URI roots\\n    # \\"file:///media/music\\" and \\"spotify:\\"\\n    search({\'any\': [\'a\']}, uris=[\'file:///media/music\', \'spotify:\'])\\n\\n    # Returns results matching artist \'xyz\' and \'abc\' in any backend\\n    search({\'artist\': [\'xyz\', \'abc\']})\\n\\n:param query: one or more queries to search for\\n:type query: dict\\n:param uris: zero or more URI roots to limit the search to\\n:type uris: list of string or :class:`None`\\n:param exact: if the search should use exact matching\\n:type exact: :class:`bool`\\n:rtype: list of :class:`mopidy.models.SearchResult`\\n\\n.. versionadded:: 1.0\\n    The ``exact`` keyword argument.", "params": [{"name": "query"}, {"name": "uris", "default": null}, {"name": "exact", "default": false}]}, "core.mixer.get_mute": {"description": "Get mute state.\\n\\n:class:`True` if muted, :class:`False` unmuted, :class:`None` if\\nunknown.", "params": []}, "core.mixer.get_volume": {"description": "Get the volume.\\n\\nInteger in range [0..100] or :class:`None` if unknown.\\n\\nThe volume scale is linear.", "params": []}, "core.mixer.set_mute": {"description": "Set mute state.\\n\\n:class:`True` to mute, :class:`False` to unmute.\\n\\nReturns :class:`True` if call is successful, otherwise :class:`False`.", "params": [{"name": "mute"}]}, "core.mixer.set_volume": {"description": "Set the volume.\\n\\nThe volume is defined as an integer in range [0..100].\\n\\nThe volume scale is linear.\\n\\nReturns :class:`True` if call is successful, otherwise :class:`False`.", "params": [{"name": "volume"}]}, "core.playback.get_current_tl_track": {"description": "Get the currently playing or selected track.\\n\\nReturns a :class:`mopidy.models.TlTrack` or :class:`None`.", "params": []}, "core.playback.get_current_tlid": {"description": "Get the currently playing or selected TLID.\\n\\nExtracted from :meth:`get_current_tl_track` for convenience.\\n\\nReturns a :class:`int` or :class:`None`.\\n\\n.. versionadded:: 1.1", "params": []}, "core.playback.get_current_track": {"description": "Get the currently playing or selected track.\\n\\nExtracted from :meth:`get_current_tl_track` for convenience.\\n\\nReturns a :class:`mopidy.models.Track` or :class:`None`.", "params": []}, "core.playback.get_state": {"description": "Get The playback state.", "params": []}, "core.playback.get_stream_title": {"description": "Get the current stream title or :class:`None`.", "params": []}, "core.playback.get_time_position": {"description": "Get time position in milliseconds.", "params": []}, "core.playback.next": {"description": "Change to the next track.\\n\\nThe current playback state will be kept. If it was playing, playing\\nwill continue. If it was paused, it will still be paused, etc.", "params": []}, "core.playback.pause": {"description": "Pause playback.", "params": []}, "core.playback.play": {"description": "Play the given track, or if the given tl_track and tlid is\\n:class:`None`, play the currently active track.\\n\\nNote that the track **must** already be in the tracklist.\\n\\n.. deprecated:: 3.0\\n    The ``tl_track`` argument. Use ``tlid`` instead.\\n\\n:param tl_track: track to play\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:param tlid: TLID of the track to play\\n:type tlid: :class:`int` or :class:`None`", "params": [{"name": "tl_track", "default": null}, {"name": "tlid", "default": null}]}, "core.playback.previous": {"description": "Change to the previous track.\\n\\nThe current playback state will be kept. If it was playing, playing\\nwill continue. If it was paused, it will still be paused, etc.", "params": []}, "core.playback.resume": {"description": "If paused, resume playing the current track.", "params": []}, "core.playback.seek": {"description": "Seeks to time position given in milliseconds.\\n\\n:param time_position: time position in milliseconds\\n:type time_position: int\\n:rtype: :class:`True` if successful, else :class:`False`", "params": [{"name": "time_position"}]}, "core.playback.set_state": {"description": "Set the playback state.\\n\\nMust be :attr:`PLAYING`, :attr:`PAUSED`, or :attr:`STOPPED`.\\n\\nPossible states and transitions:\\n\\n.. digraph:: state_transitions\\n\\n    \\"STOPPED\\" -> \\"PLAYING\\" [ label=\\"play\\" ]\\n    \\"STOPPED\\" -> \\"PAUSED\\" [ label=\\"pause\\" ]\\n    \\"PLAYING\\" -> \\"STOPPED\\" [ label=\\"stop\\" ]\\n    \\"PLAYING\\" -> \\"PAUSED\\" [ label=\\"pause\\" ]\\n    \\"PLAYING\\" -> \\"PLAYING\\" [ label=\\"play\\" ]\\n    \\"PAUSED\\" -> \\"PLAYING\\" [ label=\\"resume\\" ]\\n    \\"PAUSED\\" -> \\"STOPPED\\" [ label=\\"stop\\" ]", "params": [{"name": "new_state"}]}, "core.playback.stop": {"description": "Stop playing.", "params": []}, "core.playlists.as_list": {"description": "Get a list of the currently available playlists.\\n\\nReturns a list of :class:`~mopidy.models.Ref` objects referring to the\\nplaylists. In other words, no information about the playlists\' content\\nis given.\\n\\n:rtype: list of :class:`mopidy.models.Ref`\\n\\n.. versionadded:: 1.0", "params": []}, "core.playlists.create": {"description": "Create a new playlist.\\n\\nIf ``uri_scheme`` matches an URI scheme handled by a current backend,\\nthat backend is asked to create the playlist. If ``uri_scheme`` is\\n:class:`None` or doesn\'t match a current backend, the first backend is\\nasked to create the playlist.\\n\\nAll new playlists must be created by calling this method, and **not**\\nby creating new instances of :class:`mopidy.models.Playlist`.\\n\\n:param name: name of the new playlist\\n:type name: string\\n:param uri_scheme: use the backend matching the URI scheme\\n:type uri_scheme: string\\n:rtype: :class:`mopidy.models.Playlist` or :class:`None`", "params": [{"name": "name"}, {"name": "uri_scheme", "default": null}]}, "core.playlists.delete": {"description": "Delete playlist identified by the URI.\\n\\nIf the URI doesn\'t match the URI schemes handled by the current\\nbackends, nothing happens.\\n\\nReturns :class:`True` if deleted, :class:`False` otherwise.\\n\\n:param uri: URI of the playlist to delete\\n:type uri: string\\n:rtype: :class:`bool`\\n\\n.. versionchanged:: 2.2\\n    Return type defined.", "params": [{"name": "uri"}]}, "core.playlists.get_items": {"description": "Get the items in a playlist specified by ``uri``.\\n\\nReturns a list of :class:`~mopidy.models.Ref` objects referring to the\\nplaylist\'s items.\\n\\nIf a playlist with the given ``uri`` doesn\'t exist, it returns\\n:class:`None`.\\n\\n:rtype: list of :class:`mopidy.models.Ref`, or :class:`None`\\n\\n.. versionadded:: 1.0", "params": [{"name": "uri"}]}, "core.playlists.get_uri_schemes": {"description": "Get the list of URI schemes that support playlists.\\n\\n:rtype: list of string\\n\\n.. versionadded:: 2.0", "params": []}, "core.playlists.lookup": {"description": "Lookup playlist with given URI in both the set of playlists and in any\\nother playlist sources. Returns :class:`None` if not found.\\n\\n:param uri: playlist URI\\n:type uri: string\\n:rtype: :class:`mopidy.models.Playlist` or :class:`None`", "params": [{"name": "uri"}]}, "core.playlists.refresh": {"description": "Refresh the playlists in :attr:`playlists`.\\n\\nIf ``uri_scheme`` is :class:`None`, all backends are asked to refresh.\\nIf ``uri_scheme`` is an URI scheme handled by a backend, only that\\nbackend is asked to refresh. If ``uri_scheme`` doesn\'t match any\\ncurrent backend, nothing happens.\\n\\n:param uri_scheme: limit to the backend matching the URI scheme\\n:type uri_scheme: string", "params": [{"name": "uri_scheme", "default": null}]}, "core.playlists.save": {"description": "Save the playlist.\\n\\nFor a playlist to be saveable, it must have the ``uri`` attribute set.\\nYou must not set the ``uri`` atribute yourself, but use playlist\\nobjects returned by :meth:`create` or retrieved from :attr:`playlists`,\\nwhich will always give you saveable playlists.\\n\\nThe method returns the saved playlist. The return playlist may differ\\nfrom the saved playlist. E.g. if the playlist name was changed, the\\nreturned playlist may have a different URI. The caller of this method\\nmust throw away the playlist sent to this method, and use the\\nreturned playlist instead.\\n\\nIf the playlist\'s URI isn\'t set or doesn\'t match the URI scheme of a\\ncurrent backend, nothing is done and :class:`None` is returned.\\n\\n:param playlist: the playlist\\n:type playlist: :class:`mopidy.models.Playlist`\\n:rtype: :class:`mopidy.models.Playlist` or :class:`None`", "params": [{"name": "playlist"}]}, "core.tracklist.add": {"description": "Add tracks to the tracklist.\\n\\nIf ``uris`` is given instead of ``tracks``, the URIs are\\nlooked up in the library and the resulting tracks are added to the\\ntracklist.\\n\\nIf ``at_position`` is given, the tracks are inserted at the given\\nposition in the tracklist. If ``at_position`` is not given, the tracks\\nare appended to the end of the tracklist.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.\\n\\n:param tracks: tracks to add\\n:type tracks: list of :class:`mopidy.models.Track` or :class:`None`\\n:param at_position: position in tracklist to add tracks\\n:type at_position: int or :class:`None`\\n:param uris: list of URIs for tracks to add\\n:type uris: list of string or :class:`None`\\n:rtype: list of :class:`mopidy.models.TlTrack`\\n\\n.. versionadded:: 1.0\\n    The ``uris`` argument.\\n\\n.. deprecated:: 1.0\\n    The ``tracks`` argument. Use ``uris``.", "params": [{"name": "tracks", "default": null}, {"name": "at_position", "default": null}, {"name": "uris", "default": null}]}, "core.tracklist.clear": {"description": "Clear the tracklist.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.", "params": []}, "core.tracklist.eot_track": {"description": "The track that will be played after the given track.\\n\\nNot necessarily the same track as :meth:`next_track`.\\n\\n.. deprecated:: 3.0\\n    Use :meth:`get_eot_tlid` instead.\\n\\n:param tl_track: the reference track\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:rtype: :class:`mopidy.models.TlTrack` or :class:`None`", "params": [{"name": "tl_track"}]}, "core.tracklist.filter": {"description": "Filter the tracklist by the given criteria.\\n\\nEach rule in the criteria consists of a model field and a list of\\nvalues to compare it against. If the model field matches any of the\\nvalues, it may be returned.\\n\\nOnly tracks that match all the given criteria are returned.\\n\\nExamples::\\n\\n    # Returns tracks with TLIDs 1, 2, 3, or 4 (tracklist ID)\\n    filter({\'tlid\': [1, 2, 3, 4]})\\n\\n    # Returns track with URIs \'xyz\' or \'abc\'\\n    filter({\'uri\': [\'xyz\', \'abc\']})\\n\\n    # Returns track with a matching TLIDs (1, 3 or 6) and a\\n    # matching URI (\'xyz\' or \'abc\')\\n    filter({\'tlid\': [1, 3, 6], \'uri\': [\'xyz\', \'abc\']})\\n\\n:param criteria: one or more rules to match by\\n:type criteria: dict, of (string, list) pairs\\n:rtype: list of :class:`mopidy.models.TlTrack`", "params": [{"name": "criteria"}]}, "core.tracklist.get_consume": {"description": "Get consume mode.\\n\\n:class:`True`\\n    Tracks are removed from the tracklist when they have been played.\\n:class:`False`\\n    Tracks are not removed from the tracklist.", "params": []}, "core.tracklist.get_eot_tlid": {"description": "The TLID of the track that will be played after the current track.\\n\\nNot necessarily the same TLID as returned by :meth:`get_next_tlid`.\\n\\n:rtype: :class:`int` or :class:`None`\\n\\n.. versionadded:: 1.1", "params": []}, "core.tracklist.get_length": {"description": "Get length of the tracklist.", "params": []}, "core.tracklist.get_next_tlid": {"description": "The tlid of the track that will be played if calling\\n:meth:`mopidy.core.PlaybackController.next()`.\\n\\nFor normal playback this is the next track in the tracklist. If repeat\\nis enabled the next track can loop around the tracklist. When random is\\nenabled this should be a random track, all tracks should be played once\\nbefore the tracklist repeats.\\n\\n:rtype: :class:`int` or :class:`None`\\n\\n.. versionadded:: 1.1", "params": []}, "core.tracklist.get_previous_tlid": {"description": "Returns the TLID of the track that will be played if calling\\n:meth:`mopidy.core.PlaybackController.previous()`.\\n\\nFor normal playback this is the previous track in the tracklist. If\\nrandom and/or consume is enabled it should return the current track\\ninstead.\\n\\n:rtype: :class:`int` or :class:`None`\\n\\n.. versionadded:: 1.1", "params": []}, "core.tracklist.get_random": {"description": "Get random mode.\\n\\n:class:`True`\\n    Tracks are selected at random from the tracklist.\\n:class:`False`\\n    Tracks are played in the order of the tracklist.", "params": []}, "core.tracklist.get_repeat": {"description": "Get repeat mode.\\n\\n:class:`True`\\n    The tracklist is played repeatedly.\\n:class:`False`\\n    The tracklist is played once.", "params": []}, "core.tracklist.get_single": {"description": "Get single mode.\\n\\n:class:`True`\\n    Playback is stopped after current song, unless in ``repeat`` mode.\\n:class:`False`\\n    Playback continues after current song.", "params": []}, "core.tracklist.get_tl_tracks": {"description": "Get tracklist as list of :class:`mopidy.models.TlTrack`.", "params": []}, "core.tracklist.get_tracks": {"description": "Get tracklist as list of :class:`mopidy.models.Track`.", "params": []}, "core.tracklist.get_version": {"description": "Get the tracklist version.\\n\\nInteger which is increased every time the tracklist is changed. Is not\\nreset before Mopidy is restarted.", "params": []}, "core.tracklist.index": {"description": "The position of the given track in the tracklist.\\n\\nIf neither *tl_track* or *tlid* is given we return the index of\\nthe currently playing track.\\n\\n:param tl_track: the track to find the index of\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:param tlid: TLID of the track to find the index of\\n:type tlid: :class:`int` or :class:`None`\\n:rtype: :class:`int` or :class:`None`\\n\\n.. versionadded:: 1.1\\n    The *tlid* parameter", "params": [{"name": "tl_track", "default": null}, {"name": "tlid", "default": null}]}, "core.tracklist.move": {"description": "Move the tracks in the slice ``[start:end]`` to ``to_position``.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.\\n\\n:param start: position of first track to move\\n:type start: int\\n:param end: position after last track to move\\n:type end: int\\n:param to_position: new position for the tracks\\n:type to_position: int", "params": [{"name": "start"}, {"name": "end"}, {"name": "to_position"}]}, "core.tracklist.next_track": {"description": "The track that will be played if calling\\n:meth:`mopidy.core.PlaybackController.next()`.\\n\\nFor normal playback this is the next track in the tracklist. If repeat\\nis enabled the next track can loop around the tracklist. When random is\\nenabled this should be a random track, all tracks should be played once\\nbefore the tracklist repeats.\\n\\n.. deprecated:: 3.0\\n    Use :meth:`get_next_tlid` instead.\\n\\n:param tl_track: the reference track\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:rtype: :class:`mopidy.models.TlTrack` or :class:`None`", "params": [{"name": "tl_track"}]}, "core.tracklist.previous_track": {"description": "Returns the track that will be played if calling\\n:meth:`mopidy.core.PlaybackController.previous()`.\\n\\nFor normal playback this is the previous track in the tracklist. If\\nrandom and/or consume is enabled it should return the current track\\ninstead.\\n\\n.. deprecated:: 3.0\\n    Use :meth:`get_previous_tlid` instead.\\n\\n:param tl_track: the reference track\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:rtype: :class:`mopidy.models.TlTrack` or :class:`None`", "params": [{"name": "tl_track"}]}, "core.tracklist.remove": {"description": "Remove the matching tracks from the tracklist.\\n\\nUses :meth:`filter()` to lookup the tracks to remove.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.\\n\\n:param criteria: one or more rules to match by\\n:type criteria: dict, of (string, list) pairs\\n:rtype: list of :class:`mopidy.models.TlTrack` that were removed", "params": [{"name": "criteria"}]}, "core.tracklist.set_consume": {"description": "Set consume mode.\\n\\n:class:`True`\\n    Tracks are removed from the tracklist when they have been played.\\n:class:`False`\\n    Tracks are not removed from the tracklist.", "params": [{"name": "value"}]}, "core.tracklist.set_random": {"description": "Set random mode.\\n\\n:class:`True`\\n    Tracks are selected at random from the tracklist.\\n:class:`False`\\n    Tracks are played in the order of the tracklist.", "params": [{"name": "value"}]}, "core.tracklist.set_repeat": {"description": "Set repeat mode.\\n\\nTo repeat a single track, set both ``repeat`` and ``single``.\\n\\n:class:`True`\\n    The tracklist is played repeatedly.\\n:class:`False`\\n    The tracklist is played once.", "params": [{"name": "value"}]}, "core.tracklist.set_single": {"description": "Set single mode.\\n\\n:class:`True`\\n    Playback is stopped after current song, unless in ``repeat`` mode.\\n:class:`False`\\n    Playback continues after current song.", "params": [{"name": "value"}]}, "core.tracklist.shuffle": {"description": "Shuffles the entire tracklist. If ``start`` and ``end`` is given only\\nshuffles the slice ``[start:end]``.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.\\n\\n:param start: position of first track to shuffle\\n:type start: int or :class:`None`\\n:param end: position after last track to shuffle\\n:type end: int or :class:`None`", "params": [{"name": "start", "default": null}, {"name": "end", "default": null}]}, "core.tracklist.slice": {"description": "Returns a slice of the tracklist, limited by the given start and end\\npositions.\\n\\n:param start: position of first track to include in slice\\n:type start: int\\n:param end: position after last track to include in slice\\n:type end: int\\n:rtype: :class:`mopidy.models.TlTrack`", "params": [{"name": "start"}, {"name": "end"}]}}}'
okt 23 23:44:43 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:44:43,761 [9178:HttpServer] mopidy.http.handlers
okt 23 23:44:43 Desktop-Ubuntu mopidy[9178]:   Received WebSocket message from 127.0.0.1: '{"method":"core.describe","jsonrpc":"2.0","id":0}'
okt 23 23:44:43 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:44:43,757 [9178:HttpServer] mopidy.http.handlers
okt 23 23:44:43 Desktop-Ubuntu mopidy[9178]:   {'method': 'connection_added', 'params': {'connection': {'connection_id': '6RPQ96ENW9K1', 'ip': '127.0.0.1', 'created': '2022-10-23 23:44:43'}}}
okt 23 23:44:43 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:44:43,689 [9178:HttpServer] mopidy_iris.core
okt 23 23:44:43 Desktop-Ubuntu mopidy[9178]:   <mopidy_iris.handlers.WebsocketHandler object at 0x7fbcd85b1ab0>
okt 23 23:44:43 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:44:43,689 [9178:HttpServer] mopidy_iris.core
okt 23 23:44:43 Desktop-Ubuntu mopidy[9178]:   Connection added
okt 23 23:44:43 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:44:43,689 [9178:HttpServer] mopidy_iris.core
okt 23 23:44:43 Desktop-Ubuntu mopidy[9178]:   101 GET /iris/ws/ (127.0.0.1) 0.48ms
okt 23 23:44:43 Desktop-Ubuntu mopidy[9178]: INFO     2022-10-23 23:44:43,688 [9178:HttpServer] tornado.access
okt 23 23:44:43 Desktop-Ubuntu mopidy[9178]:   New WebSocket connection from 127.0.0.1
okt 23 23:44:43 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:44:43,676 [9178:HttpServer] mopidy.http.handlers
okt 23 23:44:43 Desktop-Ubuntu mopidy[9178]:   101 GET /mopidy/ws/ (127.0.0.1) 0.59ms
okt 23 23:44:43 Desktop-Ubuntu mopidy[9178]: INFO     2022-10-23 23:44:43,676 [9178:HttpServer] tornado.access
okt 23 23:44:43 Desktop-Ubuntu mopidy[9178]:   304 GET /iris/assets/app-icon_192.png (127.0.0.1) 0.68ms
okt 23 23:44:43 Desktop-Ubuntu mopidy[9178]: INFO     2022-10-23 23:44:43,470 [9178:HttpServer] tornado.access
okt 23 23:44:43 Desktop-Ubuntu mopidy[9178]:   304 GET /iris/manifest.json (127.0.0.1) 0.66ms
okt 23 23:44:43 Desktop-Ubuntu mopidy[9178]: INFO     2022-10-23 23:44:43,435 [9178:HttpServer] tornado.access
okt 23 23:44:43 Desktop-Ubuntu mopidy[9178]:   200 GET /iris/settings/servers/null (127.0.0.1) 0.74ms
okt 23 23:44:43 Desktop-Ubuntu mopidy[9178]: INFO     2022-10-23 23:44:43,386 [9178:HttpServer] tornado.access
okt 23 23:44:43 Desktop-Ubuntu mopidy[9178]:   304 GET /iris/assets/icons/genius.svg (127.0.0.1) 0.89ms
okt 23 23:44:43 Desktop-Ubuntu mopidy[9178]: INFO     2022-10-23 23:44:43,334 [9178:HttpServer] tornado.access
okt 23 23:44:43 Desktop-Ubuntu mopidy[9178]:   200 GET /iris/assets/favicon.png (127.0.0.1) 0.71ms
okt 23 23:44:43 Desktop-Ubuntu mopidy[9178]: INFO     2022-10-23 23:44:43,281 [9178:HttpServer] tornado.access
okt 23 23:44:42 Desktop-Ubuntu mopidy[9178]:   200 GET /iris/app.min.js?v=1666559547 (127.0.0.1) 14.53ms
okt 23 23:44:42 Desktop-Ubuntu mopidy[9178]: INFO     2022-10-23 23:44:42,533 [9178:HttpServer] tornado.access
okt 23 23:44:42 Desktop-Ubuntu mopidy[9178]:   200 GET /iris/app.min.css?v=1666559547 (127.0.0.1) 5.03ms
okt 23 23:44:42 Desktop-Ubuntu mopidy[9178]: INFO     2022-10-23 23:44:42,518 [9178:HttpServer] tornado.access
okt 23 23:44:42 Desktop-Ubuntu mopidy[9178]:   200 GET /iris/assets/app-icon.svg (127.0.0.1) 0.72ms
okt 23 23:44:42 Desktop-Ubuntu mopidy[9178]: INFO     2022-10-23 23:44:42,349 [9178:HttpServer] tornado.access
okt 23 23:44:42 Desktop-Ubuntu mopidy[9178]:   Closed WebSocket connection from 127.0.0.1
okt 23 23:44:42 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:44:42,307 [9178:HttpServer] mopidy.http.handlers
okt 23 23:44:42 Desktop-Ubuntu mopidy[9178]:   {'method': 'connection_removed', 'params': {'connection': {'connection_id': 'J3B4GWXGLIE9', 'ip': '127.0.0.1', 'created': '2022-10-23 23:44:21'}}}
okt 23 23:44:42 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:44:42,306 [9178:HttpServer] mopidy_iris.core
okt 23 23:44:42 Desktop-Ubuntu mopidy[9178]:   200 GET /iris/settings/servers/default (127.0.0.1) 5.59ms
okt 23 23:44:42 Desktop-Ubuntu mopidy[9178]: INFO     2022-10-23 23:44:42,291 [9178:HttpServer] tornado.access
okt 23 23:44:22 Desktop-Ubuntu mopidy[9178]:   {'id': 166656146225237, 'jsonrpc': '2.0', 'method': 'get_version', 'result': {'version': {'current': '3.64.1', 'latest': '3.64.1', 'is_root': False, 'upgrade_available': False}}, 'recipient': 'J3B4GWXGLIE9'}
okt 23 23:44:22 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:44:22,389 [9178:HttpServer] mopidy_iris.core
okt 23 23:44:22 Desktop-Ubuntu mopidy[9178]:   Iris websocket message received: {"jsonrpc":"2.0","id":166656146225237,"method":"get_version"}
okt 23 23:44:22 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:44:22,253 [9178:HttpServer] mopidy_iris.handlers
okt 23 23:44:21 Desktop-Ubuntu mopidy[9178]:   {'id': 16665614617557, 'jsonrpc': '2.0', 'method': 'get_connections', 'result': {'connections': [{'connection_id': 'J3B4GWXGLIE9', 'ip': '127.0.0.1', 'created': '2022-10-23 23:44:21'}]}, 'recipient': 'J3B4GWXGLIE9'}
okt 23 23:44:21 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:44:21,755 [9178:HttpServer] mopidy_iris.core
okt 23 23:44:21 Desktop-Ubuntu mopidy[9178]:   Iris websocket message received: {"jsonrpc":"2.0","id":16665614617557,"method":"get_connections"}
okt 23 23:44:21 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:44:21,755 [9178:HttpServer] mopidy_iris.handlers
okt 23 23:44:21 Desktop-Ubuntu mopidy[9178]:   {'id': 166656146174967, 'jsonrpc': '2.0', 'method': 'get_queue_metadata', 'result': {'queue_metadata': {}}, 'recipient': 'J3B4GWXGLIE9'}
okt 23 23:44:21 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:44:21,750 [9178:HttpServer] mopidy_iris.core
okt 23 23:44:21 Desktop-Ubuntu mopidy[9178]:   Iris websocket message received: {"jsonrpc":"2.0","id":166656146174967,"method":"get_queue_metadata"}
okt 23 23:44:21 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:44:21,750 [9178:HttpServer] mopidy_iris.handlers
okt 23 23:44:21 Desktop-Ubuntu mopidy[9178]:   {'id': 166656146174675, 'jsonrpc': '2.0', 'method': 'get_pinned', 'result': {'pinned': []}, 'recipient': 'J3B4GWXGLIE9'}
okt 23 23:44:21 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:44:21,747 [9178:HttpServer] mopidy_iris.core
okt 23 23:44:21 Desktop-Ubuntu mopidy[9178]:   Iris websocket message received: {"jsonrpc":"2.0","id":166656146174675,"method":"get_pinned"}
okt 23 23:44:21 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:44:21,747 [9178:HttpServer] mopidy_iris.handlers
okt 23 23:44:21 Desktop-Ubuntu mopidy[9178]:   {'id': 166656146174415, 'jsonrpc': '2.0', 'method': 'get_commands', 'result': {'commands': {}}, 'recipient': 'J3B4GWXGLIE9'}
okt 23 23:44:21 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:44:21,744 [9178:HttpServer] mopidy_iris.core
okt 23 23:44:21 Desktop-Ubuntu mopidy[9178]:   Iris websocket message received: {"jsonrpc":"2.0","id":166656146174415,"method":"get_commands"}
okt 23 23:44:21 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:44:21,744 [9178:HttpServer] mopidy_iris.handlers
okt 23 23:44:21 Desktop-Ubuntu mopidy[9178]:   {'id': 166656146174114, 'jsonrpc': '2.0', 'method': 'get_radio', 'result': {'radio': {'enabled': 0, 'seed_artists': [], 'seed_genres': [], 'seed_tracks': [], 'results': []}}, 'recipient': 'J3B4GWXGLIE9'}
okt 23 23:44:21 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:44:21,742 [9178:HttpServer] mopidy_iris.core
okt 23 23:44:21 Desktop-Ubuntu mopidy[9178]:   Iris websocket message received: {"jsonrpc":"2.0","id":166656146174114,"method":"get_radio"}
okt 23 23:44:21 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:44:21,742 [9178:HttpServer] mopidy_iris.handlers
okt 23 23:44:21 Desktop-Ubuntu mopidy[9178]:   {'id': 166656146173961, 'jsonrpc': '2.0', 'method': 'get_shared_config', 'result': {'shared_config': {}}, 'recipient': 'J3B4GWXGLIE9'}
okt 23 23:44:21 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:44:21,739 [9178:HttpServer] mopidy_iris.core
okt 23 23:44:21 Desktop-Ubuntu mopidy[9178]:   Iris websocket message received: {"jsonrpc":"2.0","id":166656146173961,"method":"get_shared_config"}
okt 23 23:44:21 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:44:21,739 [9178:HttpServer] mopidy_iris.handlers
okt 23 23:44:21 Desktop-Ubuntu mopidy[9178]:   {'id': 166656146173654, 'jsonrpc': '2.0', 'method': 'get_config', 'result': {'config': {'is_root': False, 'spotify_username': False, 'country': 'NZ', 'locale': 'en_NZ', 'snapcast_enabled': True, 'snapcast_host': 'localhost', 'snapcast_port': '1780', 'snapcast_ssl': False, 'snapcast_stream': 'Default', 'spotify_authorization_url': 'https://jamesbarnsley.co.nz/iris/auth_spotify.php', 'lastfm_authorization_url': 'https://jamesbarnsley.co.nz/iris/auth_lastfm.php', 'genius_authorization_url': 'https://jamesbarnsley.co.nz/iris/auth_genius.php', 'shared_config': {}}}, 'recipient': 'J3B4GWXGLIE9'}
okt 23 23:44:21 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:44:21,737 [9178:HttpServer] mopidy_iris.core
okt 23 23:44:21 Desktop-Ubuntu mopidy[9178]:   Iris websocket message received: {"jsonrpc":"2.0","id":166656146173654,"method":"get_config"}
okt 23 23:44:21 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:44:21,736 [9178:HttpServer] mopidy_iris.handlers
okt 23 23:44:21 Desktop-Ubuntu mopidy[9178]:   'username'
okt 23 23:44:21 Desktop-Ubuntu mopidy[9178]: ERROR    2022-10-23 23:44:21,733 [9178:HttpServer] mopidy_iris.handlers
okt 23 23:44:21 Desktop-Ubuntu mopidy[9178]:   Iris websocket message received: {"jsonrpc":"2.0","id":166656146173331,"method":"update_connection","params":{}}
okt 23 23:44:21 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:44:21,733 [9178:HttpServer] mopidy_iris.handlers
okt 23 23:44:21 Desktop-Ubuntu mopidy[9178]:   {'method': 'connection_added', 'params': {'connection': {'connection_id': 'J3B4GWXGLIE9', 'ip': '127.0.0.1', 'created': '2022-10-23 23:44:21'}}}
okt 23 23:44:21 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:44:21,694 [9178:HttpServer] mopidy_iris.core
okt 23 23:44:21 Desktop-Ubuntu mopidy[9178]:   <mopidy_iris.handlers.WebsocketHandler object at 0x7fbcd84d7d00>
okt 23 23:44:21 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:44:21,694 [9178:HttpServer] mopidy_iris.core
okt 23 23:44:21 Desktop-Ubuntu mopidy[9178]:   Connection added
okt 23 23:44:21 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:44:21,694 [9178:HttpServer] mopidy_iris.core
okt 23 23:44:21 Desktop-Ubuntu mopidy[9178]:   101 GET /iris/ws/ (127.0.0.1) 0.59ms
okt 23 23:44:21 Desktop-Ubuntu mopidy[9178]: INFO     2022-10-23 23:44:21,694 [9178:HttpServer] tornado.access
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 35, "result": null}'
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:44:19,820 [9178:HttpServer] mopidy.http.handlers
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]:   Received WebSocket message from 127.0.0.1: '{"method":"core.playback.get_stream_title","params":{},"jsonrpc":"2.0","id":35}'
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:44:19,820 [9178:HttpServer] mopidy.http.handlers
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 34, "result": ["file", "http", "https", "m3u", "rtsp"]}'
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:44:19,818 [9178:HttpServer] mopidy.http.handlers
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]:   Received WebSocket message from 127.0.0.1: '{"method":"core.get_uri_schemes","params":{},"jsonrpc":"2.0","id":34}'
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:44:19,817 [9178:HttpServer] mopidy.http.handlers
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 33, "result": 0}'
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:44:19,815 [9178:HttpServer] mopidy.http.handlers
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]:   Received WebSocket message from 127.0.0.1: '{"method":"core.playback.get_time_position","params":{},"jsonrpc":"2.0","id":33}'
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:44:19,814 [9178:HttpServer] mopidy.http.handlers
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 32, "result": []}'
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:44:19,812 [9178:HttpServer] mopidy.http.handlers
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]:   Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_tl_tracks","params":{},"jsonrpc":"2.0","id":32}'
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:44:19,812 [9178:HttpServer] mopidy.http.handlers
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 31, "result": false}'
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:44:19,810 [9178:HttpServer] mopidy.http.handlers
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]:   Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_repeat","params":{},"jsonrpc":"2.0","id":31}'
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:44:19,809 [9178:HttpServer] mopidy.http.handlers
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 30, "result": false}'
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:44:19,808 [9178:HttpServer] mopidy.http.handlers
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]:   Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_random","params":{},"jsonrpc":"2.0","id":30}'
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:44:19,807 [9178:HttpServer] mopidy.http.handlers
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 29, "result": false}'
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:44:19,804 [9178:HttpServer] mopidy.http.handlers
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]:   Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_consume","params":{},"jsonrpc":"2.0","id":29}'
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:44:19,804 [9178:HttpServer] mopidy.http.handlers
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 28, "result": false}'
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:44:19,802 [9178:HttpServer] mopidy.http.handlers
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]:   Received WebSocket message from 127.0.0.1: '{"method":"core.mixer.get_mute","params":{},"jsonrpc":"2.0","id":28}'
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:44:19,801 [9178:HttpServer] mopidy.http.handlers
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 27, "result": 100}'
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:44:19,800 [9178:HttpServer] mopidy.http.handlers
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]:   Received WebSocket message from 127.0.0.1: '{"method":"core.mixer.get_volume","params":{},"jsonrpc":"2.0","id":27}'
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:44:19,799 [9178:HttpServer] mopidy.http.handlers
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 26, "result": "stopped"}'
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:44:19,797 [9178:HttpServer] mopidy.http.handlers
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]:   Received WebSocket message from 127.0.0.1: '{"method":"core.playback.get_state","params":{},"jsonrpc":"2.0","id":26}'
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:44:19,796 [9178:HttpServer] mopidy.http.handlers
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 25, "result": null}'
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:44:19,794 [9178:HttpServer] mopidy.http.handlers
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]:   Received WebSocket message from 127.0.0.1: '{"method":"core.playback.get_current_tl_track","params":{},"jsonrpc":"2.0","id":25}'
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:44:19,794 [9178:HttpServer] mopidy.http.handlers
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 24, "result": {"core.get_uri_schemes": {"description": "Get list of URI schemes we can handle", "params": []}, "core.get_version": {"description": "Get version of the Mopidy core API", "params": []}, "core.history.get_history": {"description": "Get the track history.\\n\\nThe timestamps are milliseconds since epoch.\\n\\n:returns: the track history\\n:rtype: list of (timestamp, :class:`mopidy.models.Ref`) tuples", "params": []}, "core.history.get_length": {"description": "Get the number of tracks in the history.\\n\\n:returns: the history length\\n:rtype: int", "params": []}, "core.library.browse": {"description": "Browse directories and tracks at the given ``uri``.\\n\\n``uri`` is a string which represents some directory belonging to a\\nbackend. To get the intial root directories for backends pass\\n:class:`None` as the URI.\\n\\nReturns a list of :class:`mopidy.models.Ref` objects for the\\ndirectories and tracks at the given ``uri``.\\n\\nThe :class:`~mopidy.models.Ref` objects representing tracks keep the\\ntrack\'s original URI. A matching pair of objects can look like this::\\n\\n    Track(uri=\'dummy:/foo.mp3\', name=\'foo\', artists=..., album=...)\\n    Ref.track(uri=\'dummy:/foo.mp3\', name=\'foo\')\\n\\nThe :class:`~mopidy.models.Ref` objects representing directories have\\nbackend specific URIs. These are opaque values, so no one but the\\nbackend that created them should try and derive any meaning from them.\\nThe only valid exception to this is checking the scheme, as it is used\\nto route browse requests to the correct backend.\\n\\nFor example, the dummy library\'s ``/bar`` directory could be returned\\nlike this::\\n\\n    Ref.directory(uri=\'dummy:directory:/bar\', name=\'bar\')\\n\\n:param string uri: URI to browse\\n:rtype: list of :class:`mopidy.models.Ref`\\n\\n.. versionadded:: 0.18", "params": [{"name": "uri"}]}, "core.library.get_distinct": {"description": "List distinct values for a given field from the library.\\n\\nThis has mainly been added to support the list commands the MPD\\nprotocol supports in a more sane fashion. Other frontends are not\\nrecommended to use this method.\\n\\n:param string field: Any one of ``uri``, ``track_name``, ``album``,\\n    ``artist``, ``albumartist``, ``composer``, ``performer``,\\n    ``track_no``, ``genre``, ``date``, ``comment``, ``disc_no``,\\n    ``musicbrainz_albumid``, ``musicbrainz_artistid``, or\\n    ``musicbrainz_trackid``.\\n:param dict query: Query to use for limiting results, see\\n    :meth:`search` for details about the query format.\\n:rtype: set of values corresponding to the requested field type.\\n\\n.. versionadded:: 1.0", "params": [{"name": "field"}, {"name": "query", "default": null}]}, "core.library.get_images": {"description": "Lookup the images for the given URIs\\n\\nBackends can use this to return image URIs for any URI they know about\\nbe it tracks, albums, playlists. The lookup result is a dictionary\\nmapping the provided URIs to lists of images.\\n\\nUnknown URIs or URIs the corresponding backend couldn\'t find anything\\nfor will simply return an empty list for that URI.\\n\\n:param uris: list of URIs to find images for\\n:type uris: list of string\\n:rtype: {uri: tuple of :class:`mopidy.models.Image`}\\n\\n.. versionadded:: 1.0", "params": [{"name": "uris"}]}, "core.library.lookup": {"description": "Lookup the given URIs.\\n\\nIf the URI expands to multiple tracks, the returned list will contain\\nthem all.\\n\\n:param uris: track URIs\\n:type uris: list of string\\n:rtype: {uri: list of :class:`mopidy.models.Track`}", "params": [{"name": "uris"}]}, "core.library.refresh": {"description": "Refresh library. Limit to URI and below if an URI is given.\\n\\n:param uri: directory or track URI\\n:type uri: string", "params": [{"name": "uri", "default": null}]}, "core.library.search": {"description": "Search the library for tracks where ``field`` contains ``values``.\\n\\n``field`` can be one of ``uri``, ``track_name``, ``album``, ``artist``,\\n``albumartist``, ``composer``, ``performer``, ``track_no``, ``genre``,\\n``date``, ``comment``, ``disc_no``, ``musicbrainz_albumid``,\\n``musicbrainz_artistid``, ``musicbrainz_trackid`` or ``any``.\\n\\nIf ``uris`` is given, the search is limited to results from within the\\nURI roots. For example passing ``uris=[\'file:\']`` will limit the search\\nto the local backend.\\n\\nExamples::\\n\\n    # Returns results matching \'a\' in any backend\\n    search({\'any\': [\'a\']})\\n\\n    # Returns results matching artist \'xyz\' in any backend\\n    search({\'artist\': [\'xyz\']})\\n\\n    # Returns results matching \'a\' and \'b\' and artist \'xyz\' in any\\n    # backend\\n    search({\'any\': [\'a\', \'b\'], \'artist\': [\'xyz\']})\\n\\n    # Returns results matching \'a\' if within the given URI roots\\n    # \\"file:///media/music\\" and \\"spotify:\\"\\n    search({\'any\': [\'a\']}, uris=[\'file:///media/music\', \'spotify:\'])\\n\\n    # Returns results matching artist \'xyz\' and \'abc\' in any backend\\n    search({\'artist\': [\'xyz\', \'abc\']})\\n\\n:param query: one or more queries to search for\\n:type query: dict\\n:param uris: zero or more URI roots to limit the search to\\n:type uris: list of string or :class:`None`\\n:param exact: if the search should use exact matching\\n:type exact: :class:`bool`\\n:rtype: list of :class:`mopidy.models.SearchResult`\\n\\n.. versionadded:: 1.0\\n    The ``exact`` keyword argument.", "params": [{"name": "query"}, {"name": "uris", "default": null}, {"name": "exact", "default": false}]}, "core.mixer.get_mute": {"description": "Get mute state.\\n\\n:class:`True` if muted, :class:`False` unmuted, :class:`None` if\\nunknown.", "params": []}, "core.mixer.get_volume": {"description": "Get the volume.\\n\\nInteger in range [0..100] or :class:`None` if unknown.\\n\\nThe volume scale is linear.", "params": []}, "core.mixer.set_mute": {"description": "Set mute state.\\n\\n:class:`True` to mute, :class:`False` to unmute.\\n\\nReturns :class:`True` if call is successful, otherwise :class:`False`.", "params": [{"name": "mute"}]}, "core.mixer.set_volume": {"description": "Set the volume.\\n\\nThe volume is defined as an integer in range [0..100].\\n\\nThe volume scale is linear.\\n\\nReturns :class:`True` if call is successful, otherwise :class:`False`.", "params": [{"name": "volume"}]}, "core.playback.get_current_tl_track": {"description": "Get the currently playing or selected track.\\n\\nReturns a :class:`mopidy.models.TlTrack` or :class:`None`.", "params": []}, "core.playback.get_current_tlid": {"description": "Get the currently playing or selected TLID.\\n\\nExtracted from :meth:`get_current_tl_track` for convenience.\\n\\nReturns a :class:`int` or :class:`None`.\\n\\n.. versionadded:: 1.1", "params": []}, "core.playback.get_current_track": {"description": "Get the currently playing or selected track.\\n\\nExtracted from :meth:`get_current_tl_track` for convenience.\\n\\nReturns a :class:`mopidy.models.Track` or :class:`None`.", "params": []}, "core.playback.get_state": {"description": "Get The playback state.", "params": []}, "core.playback.get_stream_title": {"description": "Get the current stream title or :class:`None`.", "params": []}, "core.playback.get_time_position": {"description": "Get time position in milliseconds.", "params": []}, "core.playback.next": {"description": "Change to the next track.\\n\\nThe current playback state will be kept. If it was playing, playing\\nwill continue. If it was paused, it will still be paused, etc.", "params": []}, "core.playback.pause": {"description": "Pause playback.", "params": []}, "core.playback.play": {"description": "Play the given track, or if the given tl_track and tlid is\\n:class:`None`, play the currently active track.\\n\\nNote that the track **must** already be in the tracklist.\\n\\n.. deprecated:: 3.0\\n    The ``tl_track`` argument. Use ``tlid`` instead.\\n\\n:param tl_track: track to play\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:param tlid: TLID of the track to play\\n:type tlid: :class:`int` or :class:`None`", "params": [{"name": "tl_track", "default": null}, {"name": "tlid", "default": null}]}, "core.playback.previous": {"description": "Change to the previous track.\\n\\nThe current playback state will be kept. If it was playing, playing\\nwill continue. If it was paused, it will still be paused, etc.", "params": []}, "core.playback.resume": {"description": "If paused, resume playing the current track.", "params": []}, "core.playback.seek": {"description": "Seeks to time position given in milliseconds.\\n\\n:param time_position: time position in milliseconds\\n:type time_position: int\\n:rtype: :class:`True` if successful, else :class:`False`", "params": [{"name": "time_position"}]}, "core.playback.set_state": {"description": "Set the playback state.\\n\\nMust be :attr:`PLAYING`, :attr:`PAUSED`, or :attr:`STOPPED`.\\n\\nPossible states and transitions:\\n\\n.. digraph:: state_transitions\\n\\n    \\"STOPPED\\" -> \\"PLAYING\\" [ label=\\"play\\" ]\\n    \\"STOPPED\\" -> \\"PAUSED\\" [ label=\\"pause\\" ]\\n    \\"PLAYING\\" -> \\"STOPPED\\" [ label=\\"stop\\" ]\\n    \\"PLAYING\\" -> \\"PAUSED\\" [ label=\\"pause\\" ]\\n    \\"PLAYING\\" -> \\"PLAYING\\" [ label=\\"play\\" ]\\n    \\"PAUSED\\" -> \\"PLAYING\\" [ label=\\"resume\\" ]\\n    \\"PAUSED\\" -> \\"STOPPED\\" [ label=\\"stop\\" ]", "params": [{"name": "new_state"}]}, "core.playback.stop": {"description": "Stop playing.", "params": []}, "core.playlists.as_list": {"description": "Get a list of the currently available playlists.\\n\\nReturns a list of :class:`~mopidy.models.Ref` objects referring to the\\nplaylists. In other words, no information about the playlists\' content\\nis given.\\n\\n:rtype: list of :class:`mopidy.models.Ref`\\n\\n.. versionadded:: 1.0", "params": []}, "core.playlists.create": {"description": "Create a new playlist.\\n\\nIf ``uri_scheme`` matches an URI scheme handled by a current backend,\\nthat backend is asked to create the playlist. If ``uri_scheme`` is\\n:class:`None` or doesn\'t match a current backend, the first backend is\\nasked to create the playlist.\\n\\nAll new playlists must be created by calling this method, and **not**\\nby creating new instances of :class:`mopidy.models.Playlist`.\\n\\n:param name: name of the new playlist\\n:type name: string\\n:param uri_scheme: use the backend matching the URI scheme\\n:type uri_scheme: string\\n:rtype: :class:`mopidy.models.Playlist` or :class:`None`", "params": [{"name": "name"}, {"name": "uri_scheme", "default": null}]}, "core.playlists.delete": {"description": "Delete playlist identified by the URI.\\n\\nIf the URI doesn\'t match the URI schemes handled by the current\\nbackends, nothing happens.\\n\\nReturns :class:`True` if deleted, :class:`False` otherwise.\\n\\n:param uri: URI of the playlist to delete\\n:type uri: string\\n:rtype: :class:`bool`\\n\\n.. versionchanged:: 2.2\\n    Return type defined.", "params": [{"name": "uri"}]}, "core.playlists.get_items": {"description": "Get the items in a playlist specified by ``uri``.\\n\\nReturns a list of :class:`~mopidy.models.Ref` objects referring to the\\nplaylist\'s items.\\n\\nIf a playlist with the given ``uri`` doesn\'t exist, it returns\\n:class:`None`.\\n\\n:rtype: list of :class:`mopidy.models.Ref`, or :class:`None`\\n\\n.. versionadded:: 1.0", "params": [{"name": "uri"}]}, "core.playlists.get_uri_schemes": {"description": "Get the list of URI schemes that support playlists.\\n\\n:rtype: list of string\\n\\n.. versionadded:: 2.0", "params": []}, "core.playlists.lookup": {"description": "Lookup playlist with given URI in both the set of playlists and in any\\nother playlist sources. Returns :class:`None` if not found.\\n\\n:param uri: playlist URI\\n:type uri: string\\n:rtype: :class:`mopidy.models.Playlist` or :class:`None`", "params": [{"name": "uri"}]}, "core.playlists.refresh": {"description": "Refresh the playlists in :attr:`playlists`.\\n\\nIf ``uri_scheme`` is :class:`None`, all backends are asked to refresh.\\nIf ``uri_scheme`` is an URI scheme handled by a backend, only that\\nbackend is asked to refresh. If ``uri_scheme`` doesn\'t match any\\ncurrent backend, nothing happens.\\n\\n:param uri_scheme: limit to the backend matching the URI scheme\\n:type uri_scheme: string", "params": [{"name": "uri_scheme", "default": null}]}, "core.playlists.save": {"description": "Save the playlist.\\n\\nFor a playlist to be saveable, it must have the ``uri`` attribute set.\\nYou must not set the ``uri`` atribute yourself, but use playlist\\nobjects returned by :meth:`create` or retrieved from :attr:`playlists`,\\nwhich will always give you saveable playlists.\\n\\nThe method returns the saved playlist. The return playlist may differ\\nfrom the saved playlist. E.g. if the playlist name was changed, the\\nreturned playlist may have a different URI. The caller of this method\\nmust throw away the playlist sent to this method, and use the\\nreturned playlist instead.\\n\\nIf the playlist\'s URI isn\'t set or doesn\'t match the URI scheme of a\\ncurrent backend, nothing is done and :class:`None` is returned.\\n\\n:param playlist: the playlist\\n:type playlist: :class:`mopidy.models.Playlist`\\n:rtype: :class:`mopidy.models.Playlist` or :class:`None`", "params": [{"name": "playlist"}]}, "core.tracklist.add": {"description": "Add tracks to the tracklist.\\n\\nIf ``uris`` is given instead of ``tracks``, the URIs are\\nlooked up in the library and the resulting tracks are added to the\\ntracklist.\\n\\nIf ``at_position`` is given, the tracks are inserted at the given\\nposition in the tracklist. If ``at_position`` is not given, the tracks\\nare appended to the end of the tracklist.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.\\n\\n:param tracks: tracks to add\\n:type tracks: list of :class:`mopidy.models.Track` or :class:`None`\\n:param at_position: position in tracklist to add tracks\\n:type at_position: int or :class:`None`\\n:param uris: list of URIs for tracks to add\\n:type uris: list of string or :class:`None`\\n:rtype: list of :class:`mopidy.models.TlTrack`\\n\\n.. versionadded:: 1.0\\n    The ``uris`` argument.\\n\\n.. deprecated:: 1.0\\n    The ``tracks`` argument. Use ``uris``.", "params": [{"name": "tracks", "default": null}, {"name": "at_position", "default": null}, {"name": "uris", "default": null}]}, "core.tracklist.clear": {"description": "Clear the tracklist.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.", "params": []}, "core.tracklist.eot_track": {"description": "The track that will be played after the given track.\\n\\nNot necessarily the same track as :meth:`next_track`.\\n\\n.. deprecated:: 3.0\\n    Use :meth:`get_eot_tlid` instead.\\n\\n:param tl_track: the reference track\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:rtype: :class:`mopidy.models.TlTrack` or :class:`None`", "params": [{"name": "tl_track"}]}, "core.tracklist.filter": {"description": "Filter the tracklist by the given criteria.\\n\\nEach rule in the criteria consists of a model field and a list of\\nvalues to compare it against. If the model field matches any of the\\nvalues, it may be returned.\\n\\nOnly tracks that match all the given criteria are returned.\\n\\nExamples::\\n\\n    # Returns tracks with TLIDs 1, 2, 3, or 4 (tracklist ID)\\n    filter({\'tlid\': [1, 2, 3, 4]})\\n\\n    # Returns track with URIs \'xyz\' or \'abc\'\\n    filter({\'uri\': [\'xyz\', \'abc\']})\\n\\n    # Returns track with a matching TLIDs (1, 3 or 6) and a\\n    # matching URI (\'xyz\' or \'abc\')\\n    filter({\'tlid\': [1, 3, 6], \'uri\': [\'xyz\', \'abc\']})\\n\\n:param criteria: one or more rules to match by\\n:type criteria: dict, of (string, list) pairs\\n:rtype: list of :class:`mopidy.models.TlTrack`", "params": [{"name": "criteria"}]}, "core.tracklist.get_consume": {"description": "Get consume mode.\\n\\n:class:`True`\\n    Tracks are removed from the tracklist when they have been played.\\n:class:`False`\\n    Tracks are not removed from the tracklist.", "params": []}, "core.tracklist.get_eot_tlid": {"description": "The TLID of the track that will be played after the current track.\\n\\nNot necessarily the same TLID as returned by :meth:`get_next_tlid`.\\n\\n:rtype: :class:`int` or :class:`None`\\n\\n.. versionadded:: 1.1", "params": []}, "core.tracklist.get_length": {"description": "Get length of the tracklist.", "params": []}, "core.tracklist.get_next_tlid": {"description": "The tlid of the track that will be played if calling\\n:meth:`mopidy.core.PlaybackController.next()`.\\n\\nFor normal playback this is the next track in the tracklist. If repeat\\nis enabled the next track can loop around the tracklist. When random is\\nenabled this should be a random track, all tracks should be played once\\nbefore the tracklist repeats.\\n\\n:rtype: :class:`int` or :class:`None`\\n\\n.. versionadded:: 1.1", "params": []}, "core.tracklist.get_previous_tlid": {"description": "Returns the TLID of the track that will be played if calling\\n:meth:`mopidy.core.PlaybackController.previous()`.\\n\\nFor normal playback this is the previous track in the tracklist. If\\nrandom and/or consume is enabled it should return the current track\\ninstead.\\n\\n:rtype: :class:`int` or :class:`None`\\n\\n.. versionadded:: 1.1", "params": []}, "core.tracklist.get_random": {"description": "Get random mode.\\n\\n:class:`True`\\n    Tracks are selected at random from the tracklist.\\n:class:`False`\\n    Tracks are played in the order of the tracklist.", "params": []}, "core.tracklist.get_repeat": {"description": "Get repeat mode.\\n\\n:class:`True`\\n    The tracklist is played repeatedly.\\n:class:`False`\\n    The tracklist is played once.", "params": []}, "core.tracklist.get_single": {"description": "Get single mode.\\n\\n:class:`True`\\n    Playback is stopped after current song, unless in ``repeat`` mode.\\n:class:`False`\\n    Playback continues after current song.", "params": []}, "core.tracklist.get_tl_tracks": {"description": "Get tracklist as list of :class:`mopidy.models.TlTrack`.", "params": []}, "core.tracklist.get_tracks": {"description": "Get tracklist as list of :class:`mopidy.models.Track`.", "params": []}, "core.tracklist.get_version": {"description": "Get the tracklist version.\\n\\nInteger which is increased every time the tracklist is changed. Is not\\nreset before Mopidy is restarted.", "params": []}, "core.tracklist.index": {"description": "The position of the given track in the tracklist.\\n\\nIf neither *tl_track* or *tlid* is given we return the index of\\nthe currently playing track.\\n\\n:param tl_track: the track to find the index of\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:param tlid: TLID of the track to find the index of\\n:type tlid: :class:`int` or :class:`None`\\n:rtype: :class:`int` or :class:`None`\\n\\n.. versionadded:: 1.1\\n    The *tlid* parameter", "params": [{"name": "tl_track", "default": null}, {"name": "tlid", "default": null}]}, "core.tracklist.move": {"description": "Move the tracks in the slice ``[start:end]`` to ``to_position``.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.\\n\\n:param start: position of first track to move\\n:type start: int\\n:param end: position after last track to move\\n:type end: int\\n:param to_position: new position for the tracks\\n:type to_position: int", "params": [{"name": "start"}, {"name": "end"}, {"name": "to_position"}]}, "core.tracklist.next_track": {"description": "The track that will be played if calling\\n:meth:`mopidy.core.PlaybackController.next()`.\\n\\nFor normal playback this is the next track in the tracklist. If repeat\\nis enabled the next track can loop around the tracklist. When random is\\nenabled this should be a random track, all tracks should be played once\\nbefore the tracklist repeats.\\n\\n.. deprecated:: 3.0\\n    Use :meth:`get_next_tlid` instead.\\n\\n:param tl_track: the reference track\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:rtype: :class:`mopidy.models.TlTrack` or :class:`None`", "params": [{"name": "tl_track"}]}, "core.tracklist.previous_track": {"description": "Returns the track that will be played if calling\\n:meth:`mopidy.core.PlaybackController.previous()`.\\n\\nFor normal playback this is the previous track in the tracklist. If\\nrandom and/or consume is enabled it should return the current track\\ninstead.\\n\\n.. deprecated:: 3.0\\n    Use :meth:`get_previous_tlid` instead.\\n\\n:param tl_track: the reference track\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:rtype: :class:`mopidy.models.TlTrack` or :class:`None`", "params": [{"name": "tl_track"}]}, "core.tracklist.remove": {"description": "Remove the matching tracks from the tracklist.\\n\\nUses :meth:`filter()` to lookup the tracks to remove.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.\\n\\n:param criteria: one or more rules to match by\\n:type criteria: dict, of (string, list) pairs\\n:rtype: list of :class:`mopidy.models.TlTrack` that were removed", "params": [{"name": "criteria"}]}, "core.tracklist.set_consume": {"description": "Set consume mode.\\n\\n:class:`True`\\n    Tracks are removed from the tracklist when they have been played.\\n:class:`False`\\n    Tracks are not removed from the tracklist.", "params": [{"name": "value"}]}, "core.tracklist.set_random": {"description": "Set random mode.\\n\\n:class:`True`\\n    Tracks are selected at random from the tracklist.\\n:class:`False`\\n    Tracks are played in the order of the tracklist.", "params": [{"name": "value"}]}, "core.tracklist.set_repeat": {"description": "Set repeat mode.\\n\\nTo repeat a single track, set both ``repeat`` and ``single``.\\n\\n:class:`True`\\n    The tracklist is played repeatedly.\\n:class:`False`\\n    The tracklist is played once.", "params": [{"name": "value"}]}, "core.tracklist.set_single": {"description": "Set single mode.\\n\\n:class:`True`\\n    Playback is stopped after current song, unless in ``repeat`` mode.\\n:class:`False`\\n    Playback continues after current song.", "params": [{"name": "value"}]}, "core.tracklist.shuffle": {"description": "Shuffles the entire tracklist. If ``start`` and ``end`` is given only\\nshuffles the slice ``[start:end]``.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.\\n\\n:param start: position of first track to shuffle\\n:type start: int or :class:`None`\\n:param end: position after last track to shuffle\\n:type end: int or :class:`None`", "params": [{"name": "start", "default": null}, {"name": "end", "default": null}]}, "core.tracklist.slice": {"description": "Returns a slice of the tracklist, limited by the given start and end\\npositions.\\n\\n:param start: position of first track to include in slice\\n:type start: int\\n:param end: position after last track to include in slice\\n:type end: int\\n:rtype: :class:`mopidy.models.TlTrack`", "params": [{"name": "start"}, {"name": "end"}]}}}'
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:44:19,782 [9178:HttpServer] mopidy.http.handlers
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]:   Received WebSocket message from 127.0.0.1: '{"method":"core.describe","jsonrpc":"2.0","id":24}'
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:44:19,778 [9178:HttpServer] mopidy.http.handlers
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]:   New WebSocket connection from 127.0.0.1
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:44:19,776 [9178:HttpServer] mopidy.http.handlers
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]:   101 GET /mopidy/ws/ (127.0.0.1) 19.27ms
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]: INFO     2022-10-23 23:44:19,776 [9178:HttpServer] tornado.access
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]:   Zeroconf service 'Mopidy HTTP server on Desktop-Ubuntu' (_mopidy-http._tcp at []:6680): Published
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:44:19,474 [9178:HttpFrontend-11 (_actor_loop)] mopidy.zeroconf
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]:   Zeroconf service 'Mopidy HTTP server on Desktop-Ubuntu' (_http._tcp at []:6680): Published
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:44:19,472 [9178:HttpFrontend-11 (_actor_loop)] mopidy.zeroconf
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]:     '/': <class 'tornado.web.RedirectHandler'>
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]:     '/mopidy/': <class 'mopidy.http.handlers.ClientListHandler'>
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]:     '/mopidy/(.+)': <class 'mopidy.http.handlers.StaticFileHandler'>
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]:     '/mopidy/rpc': <class 'mopidy.http.handlers.JsonRpcHandler'>
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]:     '/mopidy/ws/?': <class 'mopidy.http.handlers.WebSocketHandler'>
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]:     '/mopidy': <class 'mopidy.http.handlers.AddSlashHandler'>
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]:     '/iris/(.*)': <class 'mopidy_iris.handlers.ReactRouterHandler'>
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]:     '/iris/((.*)(?:css|js|json|map)$)': <class 'tornado.web.StaticFileHandler'>
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]:     '/iris/assets/(.*)': <class 'tornado.web.StaticFileHandler'>
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]:     '/iris/ws/?': <class 'mopidy_iris.handlers.WebsocketHandler'>
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]:     '/iris/http/([^/]*)': <class 'mopidy_iris.handlers.HttpHandler'>
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]:     '/iris': <class 'mopidy.http.handlers.AddSlashHandler'>
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]:     '/youtube/(.*\\.(?:webm|m4a|mp3|ogg))': <class 'mopidy_youtube.web.AudioHandler'>
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]:     '/youtube/(.*\\.jpg)': <class 'mopidy_youtube.web.ImageHandler'>
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]:     '/youtube/(index.html|image.html)?': <class 'mopidy_youtube.web.IndexHandler'>
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]:     '/youtube': <class 'mopidy.http.handlers.AddSlashHandler'>
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]:   HTTP routes from extensions:
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:44:19,465 [9178:HttpServer] mopidy.http.actor
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]:   Default webclient is mopidy
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:44:19,464 [9178:HttpServer] mopidy.http.actor
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]:   Loaded HTTP extension: mopidy
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:44:19,464 [9178:HttpServer] mopidy.http.actor
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]:   Loaded HTTP extension: iris
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:44:19,464 [9178:HttpServer] mopidy.http.actor
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]:   Loaded HTTP extension: youtube
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:44:19,463 [9178:HttpServer] mopidy.http.actor
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]:   Using selector: EpollSelector
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:44:19,461 [9178:HttpServer] asyncio
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]:   Starting GLib mainloop
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]: INFO     2022-10-23 23:44:19,461 [9178:MainThread] mopidy.commands
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]:   HttpFrontend took 1ms
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]: TRACE    2022-10-23 23:44:19,461 [9178:MainThread] mopidy.internal.timer
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]:   HTTP server running at [::ffff:127.0.0.1]:6680
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]: INFO     2022-10-23 23:44:19,460 [9178:HttpFrontend-11 (_actor_loop)] mopidy.http.actor
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]:   Starting HttpFrontend (urn:uuid:09cfe25b-c670-4369-9b95-f871635d3561)
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:44:19,460 [9178:MainThread] pykka
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]:   Registered HttpFrontend (urn:uuid:09cfe25b-c670-4369-9b95-f871635d3561)
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:44:19,460 [9178:MainThread] pykka
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]:   Starting HTTP server
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:44:19,460 [9178:MainThread] mopidy.http.actor
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]:   IrisFrontend took 1ms
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]: TRACE    2022-10-23 23:44:19,459 [9178:MainThread] mopidy.internal.timer
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]:   Starting Iris 3.64.1
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]: INFO     2022-10-23 23:44:19,459 [9178:IrisFrontend-9 (_actor_loop)] mopidy_iris.core
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]:   Starting IrisFrontend (urn:uuid:d0736066-af5e-4287-86c3-620765a2d66b)
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:44:19,459 [9178:MainThread] pykka
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]:   Registered IrisFrontend (urn:uuid:d0736066-af5e-4287-86c3-620765a2d66b)
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:44:19,459 [9178:MainThread] pykka
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]:   YouTubeCoreListener took 0ms
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]: TRACE    2022-10-23 23:44:19,457 [9178:MainThread] mopidy.internal.timer
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]:   Starting YouTubeCoreListener (urn:uuid:4ba69abb-10c5-4ba1-9984-db743b350233)
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:44:19,457 [9178:MainThread] pykka
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]:   Registered YouTubeCoreListener (urn:uuid:4ba69abb-10c5-4ba1-9984-db743b350233)
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:44:19,457 [9178:MainThread] pykka
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]:   YouTubeAutoplayer took 0ms
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]: TRACE    2022-10-23 23:44:19,457 [9178:MainThread] mopidy.internal.timer
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]:   Starting YouTubeAutoplayer (urn:uuid:bd035aed-bc2e-416f-936f-d37ceab5f6e0)
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:44:19,457 [9178:MainThread] pykka
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]:   Registered YouTubeAutoplayer (urn:uuid:bd035aed-bc2e-416f-936f-d37ceab5f6e0)
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:44:19,457 [9178:MainThread] pykka
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]:   Starting Mopidy frontends: YouTubeAutoplayer, YouTubeCoreListener, IrisFrontend, HttpFrontend
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]: INFO     2022-10-23 23:44:19,457 [9178:MainThread] mopidy.commands
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]:   Starting Core (urn:uuid:7a57d87f-d707-45e4-8031-ebd323d77323)
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:44:19,453 [9178:MainThread] pykka
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]:   Registered Core (urn:uuid:7a57d87f-d707-45e4-8031-ebd323d77323)
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:44:19,453 [9178:MainThread] pykka
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]:   Starting Mopidy core
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]: INFO     2022-10-23 23:44:19,450 [9178:MainThread] mopidy.commands
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]:   StreamBackend took 5ms
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]: TRACE    2022-10-23 23:44:19,450 [9178:MainThread] mopidy.internal.timer
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]:   Starting StreamBackend (urn:uuid:2de17ed3-a7ac-4aea-adaf-8c0967f5c37f)
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:44:19,448 [9178:MainThread] pykka
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]:   Registered StreamBackend (urn:uuid:2de17ed3-a7ac-4aea-adaf-8c0967f5c37f)
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:44:19,448 [9178:MainThread] pykka
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]:   M3UBackend took 2ms
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]: TRACE    2022-10-23 23:44:19,445 [9178:MainThread] mopidy.internal.timer
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]:   Audio output set to "pulsesink server=127.0.0.1"
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]: INFO     2022-10-23 23:44:19,443 [9178:Audio-2 (_actor_loop)] mopidy.audio.actor
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]:   Starting M3UBackend (urn:uuid:5af39cf2-ee0f-46df-9c35-8dd30ed9bad4)
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:44:19,442 [9178:MainThread] pykka
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]:   Registered M3UBackend (urn:uuid:5af39cf2-ee0f-46df-9c35-8dd30ed9bad4)
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:44:19,442 [9178:MainThread] pykka
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]:   FileBackend took 3ms
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]: TRACE    2022-10-23 23:44:19,442 [9178:MainThread] mopidy.internal.timer
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]:   Starting FileBackend (urn:uuid:06eb422b-5dc4-4a32-8258-5bbda5ae378e)
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:44:19,438 [9178:MainThread] pykka
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]:   Registered FileBackend (urn:uuid:06eb422b-5dc4-4a32-8258-5bbda5ae378e)
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:44:19,438 [9178:MainThread] pykka
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]:   Failed expanding path ($XDG_MUSIC_DIR) from file/media_dirs config value.
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:44:19,438 [9178:MainThread] mopidy.file.library
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]: ModuleNotFoundError: No module named 'ytmusicapi'
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]:     from ytmusicapi import YTMusic
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]:   File "/usr/local/lib/python3.10/dist-packages/mopidy_youtube/apis/youtube_music.py", line 7, in <module>
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]:     from mopidy_youtube.apis import youtube_music
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]:   File "/usr/local/lib/python3.10/dist-packages/mopidy_youtube/backend.py", line 84, in __init__
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]:     obj = cls(*args, **kwargs)
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]:   File "/usr/lib/python3/dist-packages/pykka/_actor.py", line 91, in start
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]:     backend = backend_class.start(
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]:   File "/usr/lib/python3/dist-packages/mopidy/commands.py", line 412, in start_backends
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]:     yield
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]:   File "/usr/lib/python3/dist-packages/mopidy/commands.py", line 248, in _actor_error_handling
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]: Traceback (most recent call last):
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]:   Got un-handled exception from YouTubeBackend
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]: ERROR    2022-10-23 23:44:19,436 [9178:MainThread] mopidy.commands
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]:   Starting Mopidy backends: YouTubeBackend, FileBackend, M3UBackend, StreamBackend
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]: INFO     2022-10-23 23:44:19,435 [9178:MainThread] mopidy.commands
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]:   Starting Audio (urn:uuid:d8d36efa-9d38-450d-8d77-40b14cf07af5)
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:44:19,434 [9178:MainThread] pykka
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]:   Registered Audio (urn:uuid:d8d36efa-9d38-450d-8d77-40b14cf07af5)
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:44:19,434 [9178:MainThread] pykka
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]:   Starting Mopidy audio
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]: INFO     2022-10-23 23:44:19,433 [9178:MainThread] mopidy.commands
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]:   Mixer volume left unchanged
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:44:19,433 [9178:MainThread] mopidy.commands
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]:   Starting SoftwareMixer (urn:uuid:f1ad60a5-9b70-41d5-bf75-d8a1347c3d8c)
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:44:19,432 [9178:MainThread] pykka
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]:   Registered SoftwareMixer (urn:uuid:f1ad60a5-9b70-41d5-bf75-d8a1347c3d8c)
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:44:19,432 [9178:MainThread] pykka
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]:   Starting Mopidy mixer: SoftwareMixer
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]: INFO     2022-10-23 23:44:19,432 [9178:MainThread] mopidy.commands
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]:   Available Mopidy mixers: SoftwareMixer
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:44:19,432 [9178:MainThread] mopidy.commands
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]:   Disabled extensions: soundcloud
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]: INFO     2022-10-23 23:44:19,351 [9178:MainThread] mopidy.__main__
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]:   Enabled extensions: file, stream, m3u, iris, youtube, softwaremixer, http
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]: INFO     2022-10-23 23:44:19,351 [9178:MainThread] mopidy.__main__
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]:   Validating extension: stream
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:44:19,350 [9178:MainThread] mopidy.ext
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]:   Validating extension: softwaremixer
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:44:19,350 [9178:MainThread] mopidy.ext
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]:   Validating extension: m3u
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:44:19,350 [9178:MainThread] mopidy.ext
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]:   Validating extension: http
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:44:19,285 [9178:MainThread] mopidy.ext
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]:   Validating extension: file
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:44:19,285 [9178:MainThread] mopidy.ext
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]:   Validating extension: iris
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:44:19,276 [9178:MainThread] mopidy.ext
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]:   Validating extension: soundcloud
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:44:19,250 [9178:MainThread] mopidy.ext
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]:   Validating extension: youtube
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:44:19,198 [9178:MainThread] mopidy.ext
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]:   Ignoring config section 'jukebox' because no matching extension was found
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]: WARNING  2022-10-23 23:44:19,197 [9178:MainThread] mopidy.config
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]:   Ignoring config section 'local' because no matching extension was found
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]: WARNING  2022-10-23 23:44:19,197 [9178:MainThread] mopidy.config
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]:   Ignoring config section 'ytmusic' because no matching extension was found
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]: WARNING  2022-10-23 23:44:19,197 [9178:MainThread] mopidy.config
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]:   Loading config from command line options
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]: INFO     2022-10-23 23:44:19,194 [9178:MainThread] mopidy.config
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]:   Loading config from file:///etc/mopidy/mopidy.conf
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]: INFO     2022-10-23 23:44:19,193 [9178:MainThread] mopidy.config
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]:   Loading config from file:///usr/share/mopidy/conf.d/mopidy.conf
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]: INFO     2022-10-23 23:44:19,192 [9178:MainThread] mopidy.config
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]:   Loading config from builtin defaults
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]: INFO     2022-10-23 23:44:19,191 [9178:MainThread] mopidy.config
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]:   Fetching passwords from your keyring failed. Any passwords stored in the keyring will not be available. (org.freedesktop.DBus.Error.NotSupported: Unable to autolaunch a dbus-daemon without a $DISPLAY for X11)
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:44:19,191 [9178:MainThread] mopidy.config.keyring
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]:   Discovered extensions: youtube, soundcloud, iris, file, http, m3u, softwaremixer, stream
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:44:19,189 [9178:MainThread] mopidy.ext
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]:   Loaded extension: Mopidy-Stream 3.3.0
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:44:19,186 [9178:MainThread] mopidy.ext
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]:   Loading entry point: stream = mopidy.stream:Extension
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:44:19,185 [9178:MainThread] mopidy.ext
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]:   Loaded extension: Mopidy-SoftwareMixer 3.3.0
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:44:19,185 [9178:MainThread] mopidy.ext
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]:   Loading entry point: softwaremixer = mopidy.softwaremixer:Extension
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:44:19,185 [9178:MainThread] mopidy.ext
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]:   Loaded extension: Mopidy-M3U 3.3.0
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:44:19,185 [9178:MainThread] mopidy.ext
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]:   Loading entry point: m3u = mopidy.m3u:Extension
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:44:19,185 [9178:MainThread] mopidy.ext
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]:   Loaded extension: Mopidy-HTTP 3.3.0
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:44:19,185 [9178:MainThread] mopidy.ext
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]:   Loading entry point: http = mopidy.http:Extension
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:44:19,184 [9178:MainThread] mopidy.ext
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]:   Loaded extension: Mopidy-File 3.3.0
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:44:19,184 [9178:MainThread] mopidy.ext
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]:   Loading entry point: file = mopidy.file:Extension
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:44:19,184 [9178:MainThread] mopidy.ext
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]:   Loaded extension: Mopidy-Iris 3.64.1
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:44:19,182 [9178:MainThread] mopidy.ext
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]:   Loading entry point: iris = mopidy_iris:Extension
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:44:19,181 [9178:MainThread] mopidy.ext
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]:   Loaded extension: Mopidy-SoundCloud 3.0.1
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:44:19,180 [9178:MainThread] mopidy.ext
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]:   Loading entry point: soundcloud = mopidy_soundcloud:Extension
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:44:19,179 [9178:MainThread] mopidy.ext
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]:   Loaded extension: Mopidy-YouTube 3.6.1
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:44:19,179 [9178:MainThread] mopidy.ext
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]:   Loading entry point: youtube = mopidy_youtube:Extension
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]: DEBUG    2022-10-23 23:44:19,178 [9178:MainThread] mopidy.ext
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]:   Starting Mopidy 3.3.0
okt 23 23:44:19 Desktop-Ubuntu mopidy[9178]: INFO     2022-10-23 23:44:19,176 [9178:MainThread] mopidy.__main__
okt 23 23:44:18 Desktop-Ubuntu systemd[1]: Started Mopidy music server.
okt 23 23:44:18 Desktop-Ubuntu systemd[1]: Starting Mopidy music server...
okt 23 23:44:18 Desktop-Ubuntu systemd[1]: mopidy.service: Consumed 1.231s CPU time.
okt 23 23:44:18 Desktop-Ubuntu systemd[1]: Stopped Mopidy music server.
okt 23 23:44:18 Desktop-Ubuntu systemd[1]: mopidy.service: Deactivated successfully.
okt 23 23:44:18 Desktop-Ubuntu mopidy[8864]:   All actors stopped.
okt 23 23:44:18 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:44:18,707 [8864:MainThread] mopidy.internal.process
okt 23 23:44:18 Desktop-Ubuntu mopidy[8864]:   Stopped SoftwareMixer (urn:uuid:9e084a76-66a6-43a9-ada5-9e98f1d454a1)
okt 23 23:44:18 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:44:18,707 [8864:SoftwareMixer-1 (_actor_loop)] pykka
okt 23 23:44:18 Desktop-Ubuntu mopidy[8864]:   Unregistered SoftwareMixer (urn:uuid:9e084a76-66a6-43a9-ada5-9e98f1d454a1)
okt 23 23:44:18 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:44:18,707 [8864:SoftwareMixer-1 (_actor_loop)] pykka
okt 23 23:44:18 Desktop-Ubuntu mopidy[8864]:   Stopping 1 instance(s) of SoftwareMixer
okt 23 23:44:18 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:44:18,706 [8864:MainThread] mopidy.internal.process
okt 23 23:44:18 Desktop-Ubuntu mopidy[8864]:   Stopping Mopidy mixer
okt 23 23:44:18 Desktop-Ubuntu mopidy[8864]: INFO     2022-10-23 23:44:18,706 [8864:MainThread] mopidy.commands
okt 23 23:44:18 Desktop-Ubuntu mopidy[8864]:   Stopped Audio (urn:uuid:2e8ee409-4ac2-4fda-b24d-e479c9b72d1e)
okt 23 23:44:18 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:44:18,706 [8864:Audio-2 (_actor_loop)] pykka
okt 23 23:44:18 Desktop-Ubuntu mopidy[8864]:   Unregistered Audio (urn:uuid:2e8ee409-4ac2-4fda-b24d-e479c9b72d1e)
okt 23 23:44:18 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:44:18,706 [8864:Audio-2 (_actor_loop)] pykka
okt 23 23:44:18 Desktop-Ubuntu mopidy[8864]:   Stopping 1 instance(s) of Audio
okt 23 23:44:18 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:44:18,706 [8864:MainThread] mopidy.internal.process
okt 23 23:44:18 Desktop-Ubuntu mopidy[8864]:   Stopping Mopidy audio
okt 23 23:44:18 Desktop-Ubuntu mopidy[8864]: INFO     2022-10-23 23:44:18,706 [8864:MainThread] mopidy.commands
okt 23 23:44:18 Desktop-Ubuntu mopidy[8864]:   Stopped StreamBackend (urn:uuid:d5bb2e7b-6a19-4dfd-b7ce-37d7acd343be)
okt 23 23:44:18 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:44:18,705 [8864:StreamBackend-5 (_actor_loop)] pykka
okt 23 23:44:18 Desktop-Ubuntu mopidy[8864]:   Unregistered StreamBackend (urn:uuid:d5bb2e7b-6a19-4dfd-b7ce-37d7acd343be)
okt 23 23:44:18 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:44:18,705 [8864:StreamBackend-5 (_actor_loop)] pykka
okt 23 23:44:18 Desktop-Ubuntu mopidy[8864]:   Stopping 1 instance(s) of StreamBackend
okt 23 23:44:18 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:44:18,705 [8864:MainThread] mopidy.internal.process
okt 23 23:44:18 Desktop-Ubuntu mopidy[8864]:   Stopped M3UBackend (urn:uuid:920aed54-625d-4061-95ee-916cbe07ced5)
okt 23 23:44:18 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:44:18,705 [8864:M3UBackend-4 (_actor_loop)] pykka
okt 23 23:44:18 Desktop-Ubuntu mopidy[8864]:   Unregistered M3UBackend (urn:uuid:920aed54-625d-4061-95ee-916cbe07ced5)
okt 23 23:44:18 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:44:18,705 [8864:M3UBackend-4 (_actor_loop)] pykka
okt 23 23:44:18 Desktop-Ubuntu mopidy[8864]:   Stopping 1 instance(s) of M3UBackend
okt 23 23:44:18 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:44:18,705 [8864:MainThread] mopidy.internal.process
okt 23 23:44:18 Desktop-Ubuntu mopidy[8864]:   Stopped FileBackend (urn:uuid:e6ced9d6-c3c7-4eb5-9546-080680f49866)
okt 23 23:44:18 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:44:18,705 [8864:FileBackend-3 (_actor_loop)] pykka
okt 23 23:44:18 Desktop-Ubuntu mopidy[8864]:   Unregistered FileBackend (urn:uuid:e6ced9d6-c3c7-4eb5-9546-080680f49866)
okt 23 23:44:18 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:44:18,705 [8864:FileBackend-3 (_actor_loop)] pykka
okt 23 23:44:18 Desktop-Ubuntu mopidy[8864]:   Stopping 1 instance(s) of FileBackend
okt 23 23:44:18 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:44:18,704 [8864:MainThread] mopidy.internal.process
okt 23 23:44:18 Desktop-Ubuntu mopidy[8864]:   Stopping 0 instance(s) of YouTubeBackend
okt 23 23:44:18 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:44:18,704 [8864:MainThread] mopidy.internal.process
okt 23 23:44:18 Desktop-Ubuntu mopidy[8864]:   Stopping Mopidy backends
okt 23 23:44:18 Desktop-Ubuntu mopidy[8864]: INFO     2022-10-23 23:44:18,704 [8864:MainThread] mopidy.commands
okt 23 23:44:18 Desktop-Ubuntu mopidy[8864]:   Stopped Core (urn:uuid:8935220c-ea92-4e12-a314-b370a3bd7b19)
okt 23 23:44:18 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:44:18,704 [8864:Core-6 (_actor_loop)] pykka
okt 23 23:44:18 Desktop-Ubuntu mopidy[8864]:   Unregistered Core (urn:uuid:8935220c-ea92-4e12-a314-b370a3bd7b19)
okt 23 23:44:18 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:44:18,704 [8864:Core-6 (_actor_loop)] pykka
okt 23 23:44:18 Desktop-Ubuntu mopidy[8864]:   Stopping 1 instance(s) of Core
okt 23 23:44:18 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:44:18,704 [8864:MainThread] mopidy.internal.process
okt 23 23:44:18 Desktop-Ubuntu mopidy[8864]:   Stopped HTTP server
okt 23 23:44:18 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:44:18,703 [8864:HttpServer] mopidy.http.actor
okt 23 23:44:18 Desktop-Ubuntu mopidy[8864]:   Stopping Mopidy core
okt 23 23:44:18 Desktop-Ubuntu mopidy[8864]: INFO     2022-10-23 23:44:18,703 [8864:MainThread] mopidy.commands
okt 23 23:44:18 Desktop-Ubuntu mopidy[8864]:   Stopping HTTP server
okt 23 23:44:18 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:44:18,703 [8864:HttpFrontend-11 (_actor_loop)] mopidy.http.actor
okt 23 23:44:18 Desktop-Ubuntu mopidy[8864]:   Zeroconf service 'Mopidy HTTP server on Desktop-Ubuntu' (_mopidy-http._tcp at []:6680): Unpublished
okt 23 23:44:18 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:44:18,703 [8864:HttpFrontend-11 (_actor_loop)] mopidy.zeroconf
okt 23 23:44:18 Desktop-Ubuntu mopidy[8864]:   Zeroconf service 'Mopidy HTTP server on Desktop-Ubuntu' (_http._tcp at []:6680): Unpublished
okt 23 23:44:18 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:44:18,702 [8864:HttpFrontend-11 (_actor_loop)] mopidy.zeroconf
okt 23 23:44:18 Desktop-Ubuntu mopidy[8864]:   Stopped HttpFrontend (urn:uuid:e7e398f5-952a-49a8-a2ec-316b66a1eecb)
okt 23 23:44:18 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:44:18,702 [8864:HttpFrontend-11 (_actor_loop)] pykka
okt 23 23:44:18 Desktop-Ubuntu mopidy[8864]:   Unregistered HttpFrontend (urn:uuid:e7e398f5-952a-49a8-a2ec-316b66a1eecb)
okt 23 23:44:18 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:44:18,702 [8864:HttpFrontend-11 (_actor_loop)] pykka
okt 23 23:44:18 Desktop-Ubuntu mopidy[8864]:   Stopping 1 instance(s) of HttpFrontend
okt 23 23:44:18 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:44:18,702 [8864:MainThread] mopidy.internal.process
okt 23 23:44:18 Desktop-Ubuntu mopidy[8864]:   Stopping Iris
okt 23 23:44:18 Desktop-Ubuntu mopidy[8864]: INFO     2022-10-23 23:44:18,701 [8864:IrisFrontend-9 (_actor_loop)] mopidy_iris.core
okt 23 23:44:18 Desktop-Ubuntu mopidy[8864]:   Stopped IrisFrontend (urn:uuid:8a977c23-f8a6-4e66-81e2-5e3375f1a399)
okt 23 23:44:18 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:44:18,701 [8864:IrisFrontend-9 (_actor_loop)] pykka
okt 23 23:44:18 Desktop-Ubuntu mopidy[8864]:   Unregistered IrisFrontend (urn:uuid:8a977c23-f8a6-4e66-81e2-5e3375f1a399)
okt 23 23:44:18 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:44:18,701 [8864:IrisFrontend-9 (_actor_loop)] pykka
okt 23 23:44:18 Desktop-Ubuntu mopidy[8864]:   Stopping 1 instance(s) of IrisFrontend
okt 23 23:44:18 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:44:18,701 [8864:MainThread] mopidy.internal.process
okt 23 23:44:18 Desktop-Ubuntu mopidy[8864]:   Stopped YouTubeCoreListener (urn:uuid:a8fe7b28-1d50-466a-92f4-91020b0b31c0)
okt 23 23:44:18 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:44:18,701 [8864:YouTubeCoreListener-8 (_actor_loop)] pykka
okt 23 23:44:18 Desktop-Ubuntu mopidy[8864]:   Unregistered YouTubeCoreListener (urn:uuid:a8fe7b28-1d50-466a-92f4-91020b0b31c0)
okt 23 23:44:18 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:44:18,701 [8864:YouTubeCoreListener-8 (_actor_loop)] pykka
okt 23 23:44:18 Desktop-Ubuntu mopidy[8864]:   Stopping 1 instance(s) of YouTubeCoreListener
okt 23 23:44:18 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:44:18,701 [8864:MainThread] mopidy.internal.process
okt 23 23:44:18 Desktop-Ubuntu mopidy[8864]:   Stopped YouTubeAutoplayer (urn:uuid:f880c3cc-7d8a-4070-b095-2f3752a7b812)
okt 23 23:44:18 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:44:18,701 [8864:YouTubeAutoplayer-7 (_actor_loop)] pykka
okt 23 23:44:18 Desktop-Ubuntu mopidy[8864]:   Unregistered YouTubeAutoplayer (urn:uuid:f880c3cc-7d8a-4070-b095-2f3752a7b812)
okt 23 23:44:18 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:44:18,700 [8864:YouTubeAutoplayer-7 (_actor_loop)] pykka
okt 23 23:44:18 Desktop-Ubuntu mopidy[8864]:   Stopping 1 instance(s) of YouTubeAutoplayer
okt 23 23:44:18 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:44:18,700 [8864:MainThread] mopidy.internal.process
okt 23 23:44:18 Desktop-Ubuntu mopidy[8864]:   Stopping Mopidy frontends
okt 23 23:44:18 Desktop-Ubuntu mopidy[8864]: INFO     2022-10-23 23:44:18,700 [8864:MainThread] mopidy.commands
okt 23 23:44:18 Desktop-Ubuntu mopidy[8864]:   GLib mainloop got SIGTERM. Exiting...
okt 23 23:44:18 Desktop-Ubuntu mopidy[8864]: INFO     2022-10-23 23:44:18,700 [8864:MainThread] mopidy.commands
okt 23 23:44:18 Desktop-Ubuntu systemd[1]: Stopping Mopidy music server...
okt 23 23:44:16 Desktop-Ubuntu mopidy[8864]: tornado.websocket.WebSocketClosedError
okt 23 23:44:16 Desktop-Ubuntu mopidy[8864]:     raise WebSocketClosedError()
okt 23 23:44:16 Desktop-Ubuntu mopidy[8864]:   File "/usr/lib/python3/dist-packages/tornado/websocket.py", line 337, in write_message
okt 23 23:44:16 Desktop-Ubuntu mopidy[8864]:     connection["connection"].write_message(json_encode(message))
okt 23 23:44:16 Desktop-Ubuntu mopidy[8864]:   File "/home/gerard/App/Iris/mopidy_iris/core.py", line 236, in broadcast
okt 23 23:44:16 Desktop-Ubuntu mopidy[8864]:     self.broadcast(
okt 23 23:44:16 Desktop-Ubuntu mopidy[8864]:   File "/home/gerard/App/Iris/mopidy_iris/core.py", line 282, in add_connection
okt 23 23:44:16 Desktop-Ubuntu mopidy[8864]:     iris.add_connection(connection=self, client=client)
okt 23 23:44:16 Desktop-Ubuntu mopidy[8864]:   File "/home/gerard/App/Iris/mopidy_iris/handlers.py", line 48, in open
okt 23 23:44:16 Desktop-Ubuntu mopidy[8864]:     open_result = handler.open(*handler.open_args, **handler.open_kwargs)
okt 23 23:44:16 Desktop-Ubuntu mopidy[8864]:   File "/usr/lib/python3/dist-packages/tornado/websocket.py", line 954, in _accept_connection
okt 23 23:44:16 Desktop-Ubuntu mopidy[8864]: Traceback (most recent call last):
okt 23 23:44:16 Desktop-Ubuntu mopidy[8864]: HTTPServerRequest(protocol='http', host='localhost:6680', method='GET', uri='/iris/ws/', version='HTTP/1.1', remote_ip='127.0.0.1')
okt 23 23:44:16 Desktop-Ubuntu mopidy[8864]:   Uncaught exception GET /iris/ws/ (127.0.0.1)
okt 23 23:44:16 Desktop-Ubuntu mopidy[8864]: ERROR    2022-10-23 23:44:16,558 [8864:HttpServer] tornado.application
okt 23 23:44:16 Desktop-Ubuntu mopidy[8864]:   {'method': 'connection_added', 'params': {'connection': {'connection_id': 'VNJ00XTYQCLE', 'ip': '127.0.0.1', 'created': '2022-10-23 23:44:16'}}}
okt 23 23:44:16 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:44:16,558 [8864:HttpServer] mopidy_iris.core
okt 23 23:44:16 Desktop-Ubuntu mopidy[8864]:   <mopidy_iris.handlers.WebsocketHandler object at 0x7f9578096980>
okt 23 23:44:16 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:44:16,557 [8864:HttpServer] mopidy_iris.core
okt 23 23:44:16 Desktop-Ubuntu mopidy[8864]:   Connection added
okt 23 23:44:16 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:44:16,557 [8864:HttpServer] mopidy_iris.core
okt 23 23:44:16 Desktop-Ubuntu mopidy[8864]:   101 GET /iris/ws/ (127.0.0.1) 0.50ms
okt 23 23:44:16 Desktop-Ubuntu mopidy[8864]: INFO     2022-10-23 23:44:16,557 [8864:HttpServer] tornado.access
okt 23 23:44:11 Desktop-Ubuntu mopidy[8864]: tornado.websocket.WebSocketClosedError
okt 23 23:44:11 Desktop-Ubuntu mopidy[8864]:     raise WebSocketClosedError()
okt 23 23:44:11 Desktop-Ubuntu mopidy[8864]:   File "/usr/lib/python3/dist-packages/tornado/websocket.py", line 337, in write_message
okt 23 23:44:11 Desktop-Ubuntu mopidy[8864]:     connection["connection"].write_message(json_encode(message))
okt 23 23:44:11 Desktop-Ubuntu mopidy[8864]:   File "/home/gerard/App/Iris/mopidy_iris/core.py", line 236, in broadcast
okt 23 23:44:11 Desktop-Ubuntu mopidy[8864]:     self.broadcast(
okt 23 23:44:11 Desktop-Ubuntu mopidy[8864]:   File "/home/gerard/App/Iris/mopidy_iris/core.py", line 282, in add_connection
okt 23 23:44:11 Desktop-Ubuntu mopidy[8864]:     iris.add_connection(connection=self, client=client)
okt 23 23:44:11 Desktop-Ubuntu mopidy[8864]:   File "/home/gerard/App/Iris/mopidy_iris/handlers.py", line 48, in open
okt 23 23:44:11 Desktop-Ubuntu mopidy[8864]:     open_result = handler.open(*handler.open_args, **handler.open_kwargs)
okt 23 23:44:11 Desktop-Ubuntu mopidy[8864]:   File "/usr/lib/python3/dist-packages/tornado/websocket.py", line 954, in _accept_connection
okt 23 23:44:11 Desktop-Ubuntu mopidy[8864]: Traceback (most recent call last):
okt 23 23:44:11 Desktop-Ubuntu mopidy[8864]: HTTPServerRequest(protocol='http', host='localhost:6680', method='GET', uri='/iris/ws/', version='HTTP/1.1', remote_ip='127.0.0.1')
okt 23 23:44:11 Desktop-Ubuntu mopidy[8864]:   Uncaught exception GET /iris/ws/ (127.0.0.1)
okt 23 23:44:11 Desktop-Ubuntu mopidy[8864]: ERROR    2022-10-23 23:44:11,444 [8864:HttpServer] tornado.application
okt 23 23:44:11 Desktop-Ubuntu mopidy[8864]:   {'method': 'connection_added', 'params': {'connection': {'connection_id': '1WAOX0IUMQL1', 'ip': '127.0.0.1', 'created': '2022-10-23 23:44:11'}}}
okt 23 23:44:11 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:44:11,444 [8864:HttpServer] mopidy_iris.core
okt 23 23:44:11 Desktop-Ubuntu mopidy[8864]:   <mopidy_iris.handlers.WebsocketHandler object at 0x7f9578096620>
okt 23 23:44:11 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:44:11,444 [8864:HttpServer] mopidy_iris.core
okt 23 23:44:11 Desktop-Ubuntu mopidy[8864]:   Connection added
okt 23 23:44:11 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:44:11,443 [8864:HttpServer] mopidy_iris.core
okt 23 23:44:11 Desktop-Ubuntu mopidy[8864]:   101 GET /iris/ws/ (127.0.0.1) 0.47ms
okt 23 23:44:11 Desktop-Ubuntu mopidy[8864]: INFO     2022-10-23 23:44:11,443 [8864:HttpServer] tornado.access
okt 23 23:44:06 Desktop-Ubuntu mopidy[8864]: tornado.websocket.WebSocketClosedError
okt 23 23:44:06 Desktop-Ubuntu mopidy[8864]:     raise WebSocketClosedError()
okt 23 23:44:06 Desktop-Ubuntu mopidy[8864]:   File "/usr/lib/python3/dist-packages/tornado/websocket.py", line 337, in write_message
okt 23 23:44:06 Desktop-Ubuntu mopidy[8864]:     connection["connection"].write_message(json_encode(message))
okt 23 23:44:06 Desktop-Ubuntu mopidy[8864]:   File "/home/gerard/App/Iris/mopidy_iris/core.py", line 236, in broadcast
okt 23 23:44:06 Desktop-Ubuntu mopidy[8864]:     self.broadcast(
okt 23 23:44:06 Desktop-Ubuntu mopidy[8864]:   File "/home/gerard/App/Iris/mopidy_iris/core.py", line 282, in add_connection
okt 23 23:44:06 Desktop-Ubuntu mopidy[8864]:     iris.add_connection(connection=self, client=client)
okt 23 23:44:06 Desktop-Ubuntu mopidy[8864]:   File "/home/gerard/App/Iris/mopidy_iris/handlers.py", line 48, in open
okt 23 23:44:06 Desktop-Ubuntu mopidy[8864]:     open_result = handler.open(*handler.open_args, **handler.open_kwargs)
okt 23 23:44:06 Desktop-Ubuntu mopidy[8864]:   File "/usr/lib/python3/dist-packages/tornado/websocket.py", line 954, in _accept_connection
okt 23 23:44:06 Desktop-Ubuntu mopidy[8864]: Traceback (most recent call last):
okt 23 23:44:06 Desktop-Ubuntu mopidy[8864]: HTTPServerRequest(protocol='http', host='localhost:6680', method='GET', uri='/iris/ws/', version='HTTP/1.1', remote_ip='127.0.0.1')
okt 23 23:44:06 Desktop-Ubuntu mopidy[8864]:   Uncaught exception GET /iris/ws/ (127.0.0.1)
okt 23 23:44:06 Desktop-Ubuntu mopidy[8864]: ERROR    2022-10-23 23:44:06,310 [8864:HttpServer] tornado.application
okt 23 23:44:06 Desktop-Ubuntu mopidy[8864]:   {'method': 'connection_added', 'params': {'connection': {'connection_id': 'BR5NMLE6Z7DK', 'ip': '127.0.0.1', 'created': '2022-10-23 23:44:06'}}}
okt 23 23:44:06 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:44:06,310 [8864:HttpServer] mopidy_iris.core
okt 23 23:44:06 Desktop-Ubuntu mopidy[8864]:   <mopidy_iris.handlers.WebsocketHandler object at 0x7f9578096380>
okt 23 23:44:06 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:44:06,310 [8864:HttpServer] mopidy_iris.core
okt 23 23:44:06 Desktop-Ubuntu mopidy[8864]:   Connection added
okt 23 23:44:06 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:44:06,310 [8864:HttpServer] mopidy_iris.core
okt 23 23:44:06 Desktop-Ubuntu mopidy[8864]:   101 GET /iris/ws/ (127.0.0.1) 0.51ms
okt 23 23:44:06 Desktop-Ubuntu mopidy[8864]: INFO     2022-10-23 23:44:06,310 [8864:HttpServer] tornado.access
okt 23 23:44:01 Desktop-Ubuntu mopidy[8864]: tornado.websocket.WebSocketClosedError
okt 23 23:44:01 Desktop-Ubuntu mopidy[8864]:     raise WebSocketClosedError()
okt 23 23:44:01 Desktop-Ubuntu mopidy[8864]:   File "/usr/lib/python3/dist-packages/tornado/websocket.py", line 337, in write_message
okt 23 23:44:01 Desktop-Ubuntu mopidy[8864]:     connection["connection"].write_message(json_encode(message))
okt 23 23:44:01 Desktop-Ubuntu mopidy[8864]:   File "/home/gerard/App/Iris/mopidy_iris/core.py", line 236, in broadcast
okt 23 23:44:01 Desktop-Ubuntu mopidy[8864]:     self.broadcast(
okt 23 23:44:01 Desktop-Ubuntu mopidy[8864]:   File "/home/gerard/App/Iris/mopidy_iris/core.py", line 282, in add_connection
okt 23 23:44:01 Desktop-Ubuntu mopidy[8864]:     iris.add_connection(connection=self, client=client)
okt 23 23:44:01 Desktop-Ubuntu mopidy[8864]:   File "/home/gerard/App/Iris/mopidy_iris/handlers.py", line 48, in open
okt 23 23:44:01 Desktop-Ubuntu mopidy[8864]:     open_result = handler.open(*handler.open_args, **handler.open_kwargs)
okt 23 23:44:01 Desktop-Ubuntu mopidy[8864]:   File "/usr/lib/python3/dist-packages/tornado/websocket.py", line 954, in _accept_connection
okt 23 23:44:01 Desktop-Ubuntu mopidy[8864]: Traceback (most recent call last):
okt 23 23:44:01 Desktop-Ubuntu mopidy[8864]: HTTPServerRequest(protocol='http', host='localhost:6680', method='GET', uri='/iris/ws/', version='HTTP/1.1', remote_ip='127.0.0.1')
okt 23 23:44:01 Desktop-Ubuntu mopidy[8864]:   Uncaught exception GET /iris/ws/ (127.0.0.1)
okt 23 23:44:01 Desktop-Ubuntu mopidy[8864]: ERROR    2022-10-23 23:44:01,188 [8864:HttpServer] tornado.application
okt 23 23:44:01 Desktop-Ubuntu mopidy[8864]:   {'method': 'connection_added', 'params': {'connection': {'connection_id': 'MXRL1AF7F3FJ', 'ip': '127.0.0.1', 'created': '2022-10-23 23:44:01'}}}
okt 23 23:44:01 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:44:01,187 [8864:HttpServer] mopidy_iris.core
okt 23 23:44:01 Desktop-Ubuntu mopidy[8864]:   <mopidy_iris.handlers.WebsocketHandler object at 0x7f9578096080>
okt 23 23:44:01 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:44:01,187 [8864:HttpServer] mopidy_iris.core
okt 23 23:44:01 Desktop-Ubuntu mopidy[8864]:   Connection added
okt 23 23:44:01 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:44:01,187 [8864:HttpServer] mopidy_iris.core
okt 23 23:44:01 Desktop-Ubuntu mopidy[8864]:   101 GET /iris/ws/ (127.0.0.1) 0.52ms
okt 23 23:44:01 Desktop-Ubuntu mopidy[8864]: INFO     2022-10-23 23:44:01,187 [8864:HttpServer] tornado.access
okt 23 23:43:56 Desktop-Ubuntu mopidy[8864]: tornado.websocket.WebSocketClosedError
okt 23 23:43:56 Desktop-Ubuntu mopidy[8864]:     raise WebSocketClosedError()
okt 23 23:43:56 Desktop-Ubuntu mopidy[8864]:   File "/usr/lib/python3/dist-packages/tornado/websocket.py", line 337, in write_message
okt 23 23:43:56 Desktop-Ubuntu mopidy[8864]:     connection["connection"].write_message(json_encode(message))
okt 23 23:43:56 Desktop-Ubuntu mopidy[8864]:   File "/home/gerard/App/Iris/mopidy_iris/core.py", line 236, in broadcast
okt 23 23:43:56 Desktop-Ubuntu mopidy[8864]:     self.broadcast(
okt 23 23:43:56 Desktop-Ubuntu mopidy[8864]:   File "/home/gerard/App/Iris/mopidy_iris/core.py", line 282, in add_connection
okt 23 23:43:56 Desktop-Ubuntu mopidy[8864]:     iris.add_connection(connection=self, client=client)
okt 23 23:43:56 Desktop-Ubuntu mopidy[8864]:   File "/home/gerard/App/Iris/mopidy_iris/handlers.py", line 48, in open
okt 23 23:43:56 Desktop-Ubuntu mopidy[8864]:     open_result = handler.open(*handler.open_args, **handler.open_kwargs)
okt 23 23:43:56 Desktop-Ubuntu mopidy[8864]:   File "/usr/lib/python3/dist-packages/tornado/websocket.py", line 954, in _accept_connection
okt 23 23:43:56 Desktop-Ubuntu mopidy[8864]: Traceback (most recent call last):
okt 23 23:43:56 Desktop-Ubuntu mopidy[8864]: HTTPServerRequest(protocol='http', host='localhost:6680', method='GET', uri='/iris/ws/', version='HTTP/1.1', remote_ip='127.0.0.1')
okt 23 23:43:56 Desktop-Ubuntu mopidy[8864]:   Uncaught exception GET /iris/ws/ (127.0.0.1)
okt 23 23:43:56 Desktop-Ubuntu mopidy[8864]: ERROR    2022-10-23 23:43:56,048 [8864:HttpServer] tornado.application
okt 23 23:43:56 Desktop-Ubuntu mopidy[8864]:   {'method': 'connection_added', 'params': {'connection': {'connection_id': 'S996BTYD1QQH', 'ip': '127.0.0.1', 'created': '2022-10-23 23:43:56'}}}
okt 23 23:43:56 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:43:56,048 [8864:HttpServer] mopidy_iris.core
okt 23 23:43:56 Desktop-Ubuntu mopidy[8864]:   <mopidy_iris.handlers.WebsocketHandler object at 0x7f9578095d20>
okt 23 23:43:56 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:43:56,048 [8864:HttpServer] mopidy_iris.core
okt 23 23:43:56 Desktop-Ubuntu mopidy[8864]:   Connection added
okt 23 23:43:56 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:43:56,048 [8864:HttpServer] mopidy_iris.core
okt 23 23:43:56 Desktop-Ubuntu mopidy[8864]:   101 GET /iris/ws/ (127.0.0.1) 0.44ms
okt 23 23:43:56 Desktop-Ubuntu mopidy[8864]: INFO     2022-10-23 23:43:56,047 [8864:HttpServer] tornado.access
okt 23 23:43:50 Desktop-Ubuntu mopidy[8864]: tornado.websocket.WebSocketClosedError
okt 23 23:43:50 Desktop-Ubuntu mopidy[8864]:     raise WebSocketClosedError()
okt 23 23:43:50 Desktop-Ubuntu mopidy[8864]:   File "/usr/lib/python3/dist-packages/tornado/websocket.py", line 337, in write_message
okt 23 23:43:50 Desktop-Ubuntu mopidy[8864]:     connection["connection"].write_message(json_encode(message))
okt 23 23:43:50 Desktop-Ubuntu mopidy[8864]:   File "/home/gerard/App/Iris/mopidy_iris/core.py", line 236, in broadcast
okt 23 23:43:50 Desktop-Ubuntu mopidy[8864]:     self.broadcast(
okt 23 23:43:50 Desktop-Ubuntu mopidy[8864]:   File "/home/gerard/App/Iris/mopidy_iris/core.py", line 282, in add_connection
okt 23 23:43:50 Desktop-Ubuntu mopidy[8864]:     iris.add_connection(connection=self, client=client)
okt 23 23:43:50 Desktop-Ubuntu mopidy[8864]:   File "/home/gerard/App/Iris/mopidy_iris/handlers.py", line 48, in open
okt 23 23:43:50 Desktop-Ubuntu mopidy[8864]:     open_result = handler.open(*handler.open_args, **handler.open_kwargs)
okt 23 23:43:50 Desktop-Ubuntu mopidy[8864]:   File "/usr/lib/python3/dist-packages/tornado/websocket.py", line 954, in _accept_connection
okt 23 23:43:50 Desktop-Ubuntu mopidy[8864]: Traceback (most recent call last):
okt 23 23:43:50 Desktop-Ubuntu mopidy[8864]: HTTPServerRequest(protocol='http', host='localhost:6680', method='GET', uri='/iris/ws/', version='HTTP/1.1', remote_ip='127.0.0.1')
okt 23 23:43:50 Desktop-Ubuntu mopidy[8864]:   Uncaught exception GET /iris/ws/ (127.0.0.1)
okt 23 23:43:50 Desktop-Ubuntu mopidy[8864]: ERROR    2022-10-23 23:43:50,936 [8864:HttpServer] tornado.application
okt 23 23:43:50 Desktop-Ubuntu mopidy[8864]:   {'method': 'connection_added', 'params': {'connection': {'connection_id': 'EQFOL1SS4E3Y', 'ip': '127.0.0.1', 'created': '2022-10-23 23:43:50'}}}
okt 23 23:43:50 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:43:50,936 [8864:HttpServer] mopidy_iris.core
okt 23 23:43:50 Desktop-Ubuntu mopidy[8864]:   <mopidy_iris.handlers.WebsocketHandler object at 0x7f9578095a80>
okt 23 23:43:50 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:43:50,936 [8864:HttpServer] mopidy_iris.core
okt 23 23:43:50 Desktop-Ubuntu mopidy[8864]:   Connection added
okt 23 23:43:50 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:43:50,936 [8864:HttpServer] mopidy_iris.core
okt 23 23:43:50 Desktop-Ubuntu mopidy[8864]:   101 GET /iris/ws/ (127.0.0.1) 0.51ms
okt 23 23:43:50 Desktop-Ubuntu mopidy[8864]: INFO     2022-10-23 23:43:50,935 [8864:HttpServer] tornado.access
okt 23 23:43:45 Desktop-Ubuntu mopidy[8864]: tornado.websocket.WebSocketClosedError
okt 23 23:43:45 Desktop-Ubuntu mopidy[8864]:     raise WebSocketClosedError()
okt 23 23:43:45 Desktop-Ubuntu mopidy[8864]:   File "/usr/lib/python3/dist-packages/tornado/websocket.py", line 337, in write_message
okt 23 23:43:45 Desktop-Ubuntu mopidy[8864]:     connection["connection"].write_message(json_encode(message))
okt 23 23:43:45 Desktop-Ubuntu mopidy[8864]:   File "/home/gerard/App/Iris/mopidy_iris/core.py", line 236, in broadcast
okt 23 23:43:45 Desktop-Ubuntu mopidy[8864]:     self.broadcast(
okt 23 23:43:45 Desktop-Ubuntu mopidy[8864]:   File "/home/gerard/App/Iris/mopidy_iris/core.py", line 282, in add_connection
okt 23 23:43:45 Desktop-Ubuntu mopidy[8864]:     iris.add_connection(connection=self, client=client)
okt 23 23:43:45 Desktop-Ubuntu mopidy[8864]:   File "/home/gerard/App/Iris/mopidy_iris/handlers.py", line 48, in open
okt 23 23:43:45 Desktop-Ubuntu mopidy[8864]:     open_result = handler.open(*handler.open_args, **handler.open_kwargs)
okt 23 23:43:45 Desktop-Ubuntu mopidy[8864]:   File "/usr/lib/python3/dist-packages/tornado/websocket.py", line 954, in _accept_connection
okt 23 23:43:45 Desktop-Ubuntu mopidy[8864]: Traceback (most recent call last):
okt 23 23:43:45 Desktop-Ubuntu mopidy[8864]: HTTPServerRequest(protocol='http', host='localhost:6680', method='GET', uri='/iris/ws/', version='HTTP/1.1', remote_ip='127.0.0.1')
okt 23 23:43:45 Desktop-Ubuntu mopidy[8864]:   Uncaught exception GET /iris/ws/ (127.0.0.1)
okt 23 23:43:45 Desktop-Ubuntu mopidy[8864]: ERROR    2022-10-23 23:43:45,781 [8864:HttpServer] tornado.application
okt 23 23:43:45 Desktop-Ubuntu mopidy[8864]:   {'method': 'connection_added', 'params': {'connection': {'connection_id': 'L0L1PL9BF0JK', 'ip': '127.0.0.1', 'created': '2022-10-23 23:43:45'}}}
okt 23 23:43:45 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:43:45,781 [8864:HttpServer] mopidy_iris.core
okt 23 23:43:45 Desktop-Ubuntu mopidy[8864]:   <mopidy_iris.handlers.WebsocketHandler object at 0x7f9578095780>
okt 23 23:43:45 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:43:45,781 [8864:HttpServer] mopidy_iris.core
okt 23 23:43:45 Desktop-Ubuntu mopidy[8864]:   Connection added
okt 23 23:43:45 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:43:45,781 [8864:HttpServer] mopidy_iris.core
okt 23 23:43:45 Desktop-Ubuntu mopidy[8864]:   101 GET /iris/ws/ (127.0.0.1) 0.61ms
okt 23 23:43:45 Desktop-Ubuntu mopidy[8864]: INFO     2022-10-23 23:43:45,780 [8864:HttpServer] tornado.access
okt 23 23:43:40 Desktop-Ubuntu mopidy[8864]: tornado.websocket.WebSocketClosedError
okt 23 23:43:40 Desktop-Ubuntu mopidy[8864]:     raise WebSocketClosedError()
okt 23 23:43:40 Desktop-Ubuntu mopidy[8864]:   File "/usr/lib/python3/dist-packages/tornado/websocket.py", line 337, in write_message
okt 23 23:43:40 Desktop-Ubuntu mopidy[8864]:     connection["connection"].write_message(json_encode(message))
okt 23 23:43:40 Desktop-Ubuntu mopidy[8864]:   File "/home/gerard/App/Iris/mopidy_iris/core.py", line 236, in broadcast
okt 23 23:43:40 Desktop-Ubuntu mopidy[8864]:     self.broadcast(
okt 23 23:43:40 Desktop-Ubuntu mopidy[8864]:   File "/home/gerard/App/Iris/mopidy_iris/core.py", line 282, in add_connection
okt 23 23:43:40 Desktop-Ubuntu mopidy[8864]:     iris.add_connection(connection=self, client=client)
okt 23 23:43:40 Desktop-Ubuntu mopidy[8864]:   File "/home/gerard/App/Iris/mopidy_iris/handlers.py", line 48, in open
okt 23 23:43:40 Desktop-Ubuntu mopidy[8864]:     open_result = handler.open(*handler.open_args, **handler.open_kwargs)
okt 23 23:43:40 Desktop-Ubuntu mopidy[8864]:   File "/usr/lib/python3/dist-packages/tornado/websocket.py", line 954, in _accept_connection
okt 23 23:43:40 Desktop-Ubuntu mopidy[8864]: Traceback (most recent call last):
okt 23 23:43:40 Desktop-Ubuntu mopidy[8864]: HTTPServerRequest(protocol='http', host='localhost:6680', method='GET', uri='/iris/ws/', version='HTTP/1.1', remote_ip='127.0.0.1')
okt 23 23:43:40 Desktop-Ubuntu mopidy[8864]:   Uncaught exception GET /iris/ws/ (127.0.0.1)
okt 23 23:43:40 Desktop-Ubuntu mopidy[8864]: ERROR    2022-10-23 23:43:40,669 [8864:HttpServer] tornado.application
okt 23 23:43:40 Desktop-Ubuntu mopidy[8864]:   {'method': 'connection_added', 'params': {'connection': {'connection_id': '7734JPO66BRP', 'ip': '127.0.0.1', 'created': '2022-10-23 23:43:40'}}}
okt 23 23:43:40 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:43:40,669 [8864:HttpServer] mopidy_iris.core
okt 23 23:43:40 Desktop-Ubuntu mopidy[8864]:   <mopidy_iris.handlers.WebsocketHandler object at 0x7f9578095480>
okt 23 23:43:40 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:43:40,669 [8864:HttpServer] mopidy_iris.core
okt 23 23:43:40 Desktop-Ubuntu mopidy[8864]:   Connection added
okt 23 23:43:40 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:43:40,669 [8864:HttpServer] mopidy_iris.core
okt 23 23:43:40 Desktop-Ubuntu mopidy[8864]:   101 GET /iris/ws/ (127.0.0.1) 0.51ms
okt 23 23:43:40 Desktop-Ubuntu mopidy[8864]: INFO     2022-10-23 23:43:40,669 [8864:HttpServer] tornado.access
okt 23 23:43:35 Desktop-Ubuntu mopidy[8864]: tornado.websocket.WebSocketClosedError
okt 23 23:43:35 Desktop-Ubuntu mopidy[8864]:     raise WebSocketClosedError()
okt 23 23:43:35 Desktop-Ubuntu mopidy[8864]:   File "/usr/lib/python3/dist-packages/tornado/websocket.py", line 337, in write_message
okt 23 23:43:35 Desktop-Ubuntu mopidy[8864]:     connection["connection"].write_message(json_encode(message))
okt 23 23:43:35 Desktop-Ubuntu mopidy[8864]:   File "/home/gerard/App/Iris/mopidy_iris/core.py", line 236, in broadcast
okt 23 23:43:35 Desktop-Ubuntu mopidy[8864]:     self.broadcast(
okt 23 23:43:35 Desktop-Ubuntu mopidy[8864]:   File "/home/gerard/App/Iris/mopidy_iris/core.py", line 282, in add_connection
okt 23 23:43:35 Desktop-Ubuntu mopidy[8864]:     iris.add_connection(connection=self, client=client)
okt 23 23:43:35 Desktop-Ubuntu mopidy[8864]:   File "/home/gerard/App/Iris/mopidy_iris/handlers.py", line 48, in open
okt 23 23:43:35 Desktop-Ubuntu mopidy[8864]:     open_result = handler.open(*handler.open_args, **handler.open_kwargs)
okt 23 23:43:35 Desktop-Ubuntu mopidy[8864]:   File "/usr/lib/python3/dist-packages/tornado/websocket.py", line 954, in _accept_connection
okt 23 23:43:35 Desktop-Ubuntu mopidy[8864]: Traceback (most recent call last):
okt 23 23:43:35 Desktop-Ubuntu mopidy[8864]: HTTPServerRequest(protocol='http', host='localhost:6680', method='GET', uri='/iris/ws/', version='HTTP/1.1', remote_ip='127.0.0.1')
okt 23 23:43:35 Desktop-Ubuntu mopidy[8864]:   Uncaught exception GET /iris/ws/ (127.0.0.1)
okt 23 23:43:35 Desktop-Ubuntu mopidy[8864]: ERROR    2022-10-23 23:43:35,551 [8864:HttpServer] tornado.application
okt 23 23:43:35 Desktop-Ubuntu mopidy[8864]:   {'method': 'connection_added', 'params': {'connection': {'connection_id': 'U52GAUY2RXQQ', 'ip': '127.0.0.1', 'created': '2022-10-23 23:43:35'}}}
okt 23 23:43:35 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:43:35,551 [8864:HttpServer] mopidy_iris.core
okt 23 23:43:35 Desktop-Ubuntu mopidy[8864]:   <mopidy_iris.handlers.WebsocketHandler object at 0x7f9578095270>
okt 23 23:43:35 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:43:35,551 [8864:HttpServer] mopidy_iris.core
okt 23 23:43:35 Desktop-Ubuntu mopidy[8864]:   Connection added
okt 23 23:43:35 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:43:35,551 [8864:HttpServer] mopidy_iris.core
okt 23 23:43:35 Desktop-Ubuntu mopidy[8864]:   101 GET /iris/ws/ (127.0.0.1) 0.50ms
okt 23 23:43:35 Desktop-Ubuntu mopidy[8864]: INFO     2022-10-23 23:43:35,551 [8864:HttpServer] tornado.access
okt 23 23:43:30 Desktop-Ubuntu mopidy[8864]: tornado.websocket.WebSocketClosedError
okt 23 23:43:30 Desktop-Ubuntu mopidy[8864]:     raise WebSocketClosedError()
okt 23 23:43:30 Desktop-Ubuntu mopidy[8864]:   File "/usr/lib/python3/dist-packages/tornado/websocket.py", line 337, in write_message
okt 23 23:43:30 Desktop-Ubuntu mopidy[8864]:     connection["connection"].write_message(json_encode(message))
okt 23 23:43:30 Desktop-Ubuntu mopidy[8864]:   File "/home/gerard/App/Iris/mopidy_iris/core.py", line 236, in broadcast
okt 23 23:43:30 Desktop-Ubuntu mopidy[8864]:     self.broadcast(
okt 23 23:43:30 Desktop-Ubuntu mopidy[8864]:   File "/home/gerard/App/Iris/mopidy_iris/core.py", line 282, in add_connection
okt 23 23:43:30 Desktop-Ubuntu mopidy[8864]:     iris.add_connection(connection=self, client=client)
okt 23 23:43:30 Desktop-Ubuntu mopidy[8864]:   File "/home/gerard/App/Iris/mopidy_iris/handlers.py", line 48, in open
okt 23 23:43:30 Desktop-Ubuntu mopidy[8864]:     open_result = handler.open(*handler.open_args, **handler.open_kwargs)
okt 23 23:43:30 Desktop-Ubuntu mopidy[8864]:   File "/usr/lib/python3/dist-packages/tornado/websocket.py", line 954, in _accept_connection
okt 23 23:43:30 Desktop-Ubuntu mopidy[8864]: Traceback (most recent call last):
okt 23 23:43:30 Desktop-Ubuntu mopidy[8864]: HTTPServerRequest(protocol='http', host='localhost:6680', method='GET', uri='/iris/ws/', version='HTTP/1.1', remote_ip='127.0.0.1')
okt 23 23:43:30 Desktop-Ubuntu mopidy[8864]:   Uncaught exception GET /iris/ws/ (127.0.0.1)
okt 23 23:43:30 Desktop-Ubuntu mopidy[8864]: ERROR    2022-10-23 23:43:30,403 [8864:HttpServer] tornado.application
okt 23 23:43:30 Desktop-Ubuntu mopidy[8864]:   {'method': 'connection_added', 'params': {'connection': {'connection_id': 'I3237UHHG05Y', 'ip': '127.0.0.1', 'created': '2022-10-23 23:43:30'}}}
okt 23 23:43:30 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:43:30,403 [8864:HttpServer] mopidy_iris.core
okt 23 23:43:30 Desktop-Ubuntu mopidy[8864]:   <mopidy_iris.handlers.WebsocketHandler object at 0x7f9578094e50>
okt 23 23:43:30 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:43:30,403 [8864:HttpServer] mopidy_iris.core
okt 23 23:43:30 Desktop-Ubuntu mopidy[8864]:   Connection added
okt 23 23:43:30 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:43:30,403 [8864:HttpServer] mopidy_iris.core
okt 23 23:43:30 Desktop-Ubuntu mopidy[8864]:   101 GET /iris/ws/ (127.0.0.1) 0.51ms
okt 23 23:43:30 Desktop-Ubuntu mopidy[8864]: INFO     2022-10-23 23:43:30,403 [8864:HttpServer] tornado.access
okt 23 23:43:25 Desktop-Ubuntu mopidy[8864]: tornado.websocket.WebSocketClosedError
okt 23 23:43:25 Desktop-Ubuntu mopidy[8864]:     raise WebSocketClosedError()
okt 23 23:43:25 Desktop-Ubuntu mopidy[8864]:   File "/usr/lib/python3/dist-packages/tornado/websocket.py", line 337, in write_message
okt 23 23:43:25 Desktop-Ubuntu mopidy[8864]:     connection["connection"].write_message(json_encode(message))
okt 23 23:43:25 Desktop-Ubuntu mopidy[8864]:   File "/home/gerard/App/Iris/mopidy_iris/core.py", line 236, in broadcast
okt 23 23:43:25 Desktop-Ubuntu mopidy[8864]:     self.broadcast(
okt 23 23:43:25 Desktop-Ubuntu mopidy[8864]:   File "/home/gerard/App/Iris/mopidy_iris/core.py", line 282, in add_connection
okt 23 23:43:25 Desktop-Ubuntu mopidy[8864]:     iris.add_connection(connection=self, client=client)
okt 23 23:43:25 Desktop-Ubuntu mopidy[8864]:   File "/home/gerard/App/Iris/mopidy_iris/handlers.py", line 48, in open
okt 23 23:43:25 Desktop-Ubuntu mopidy[8864]:     open_result = handler.open(*handler.open_args, **handler.open_kwargs)
okt 23 23:43:25 Desktop-Ubuntu mopidy[8864]:   File "/usr/lib/python3/dist-packages/tornado/websocket.py", line 954, in _accept_connection
okt 23 23:43:25 Desktop-Ubuntu mopidy[8864]: Traceback (most recent call last):
okt 23 23:43:25 Desktop-Ubuntu mopidy[8864]: HTTPServerRequest(protocol='http', host='localhost:6680', method='GET', uri='/iris/ws/', version='HTTP/1.1', remote_ip='127.0.0.1')
okt 23 23:43:25 Desktop-Ubuntu mopidy[8864]:   Uncaught exception GET /iris/ws/ (127.0.0.1)
okt 23 23:43:25 Desktop-Ubuntu mopidy[8864]: ERROR    2022-10-23 23:43:25,282 [8864:HttpServer] tornado.application
okt 23 23:43:25 Desktop-Ubuntu mopidy[8864]:   {'method': 'connection_added', 'params': {'connection': {'connection_id': '6CE73IIUC1GS', 'ip': '127.0.0.1', 'created': '2022-10-23 23:43:25'}}}
okt 23 23:43:25 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:43:25,282 [8864:HttpServer] mopidy_iris.core
okt 23 23:43:25 Desktop-Ubuntu mopidy[8864]:   <mopidy_iris.handlers.WebsocketHandler object at 0x7f9578094b50>
okt 23 23:43:25 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:43:25,282 [8864:HttpServer] mopidy_iris.core
okt 23 23:43:25 Desktop-Ubuntu mopidy[8864]:   Connection added
okt 23 23:43:25 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:43:25,281 [8864:HttpServer] mopidy_iris.core
okt 23 23:43:25 Desktop-Ubuntu mopidy[8864]:   101 GET /iris/ws/ (127.0.0.1) 0.50ms
okt 23 23:43:25 Desktop-Ubuntu mopidy[8864]: INFO     2022-10-23 23:43:25,281 [8864:HttpServer] tornado.access
okt 23 23:43:20 Desktop-Ubuntu mopidy[8864]: tornado.websocket.WebSocketClosedError
okt 23 23:43:20 Desktop-Ubuntu mopidy[8864]:     raise WebSocketClosedError()
okt 23 23:43:20 Desktop-Ubuntu mopidy[8864]:   File "/usr/lib/python3/dist-packages/tornado/websocket.py", line 337, in write_message
okt 23 23:43:20 Desktop-Ubuntu mopidy[8864]:     connection["connection"].write_message(json_encode(message))
okt 23 23:43:20 Desktop-Ubuntu mopidy[8864]:   File "/home/gerard/App/Iris/mopidy_iris/core.py", line 236, in broadcast
okt 23 23:43:20 Desktop-Ubuntu mopidy[8864]:     self.broadcast(
okt 23 23:43:20 Desktop-Ubuntu mopidy[8864]:   File "/home/gerard/App/Iris/mopidy_iris/core.py", line 282, in add_connection
okt 23 23:43:20 Desktop-Ubuntu mopidy[8864]:     iris.add_connection(connection=self, client=client)
okt 23 23:43:20 Desktop-Ubuntu mopidy[8864]:   File "/home/gerard/App/Iris/mopidy_iris/handlers.py", line 48, in open
okt 23 23:43:20 Desktop-Ubuntu mopidy[8864]:     open_result = handler.open(*handler.open_args, **handler.open_kwargs)
okt 23 23:43:20 Desktop-Ubuntu mopidy[8864]:   File "/usr/lib/python3/dist-packages/tornado/websocket.py", line 954, in _accept_connection
okt 23 23:43:20 Desktop-Ubuntu mopidy[8864]: Traceback (most recent call last):
okt 23 23:43:20 Desktop-Ubuntu mopidy[8864]: HTTPServerRequest(protocol='http', host='localhost:6680', method='GET', uri='/iris/ws/', version='HTTP/1.1', remote_ip='127.0.0.1')
okt 23 23:43:20 Desktop-Ubuntu mopidy[8864]:   Uncaught exception GET /iris/ws/ (127.0.0.1)
okt 23 23:43:20 Desktop-Ubuntu mopidy[8864]: ERROR    2022-10-23 23:43:20,131 [8864:HttpServer] tornado.application
okt 23 23:43:20 Desktop-Ubuntu mopidy[8864]:   {'method': 'connection_added', 'params': {'connection': {'connection_id': '4JFELXG5VOHK', 'ip': '127.0.0.1', 'created': '2022-10-23 23:43:20'}}}
okt 23 23:43:20 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:43:20,130 [8864:HttpServer] mopidy_iris.core
okt 23 23:43:20 Desktop-Ubuntu mopidy[8864]:   <mopidy_iris.handlers.WebsocketHandler object at 0x7f9578094850>
okt 23 23:43:20 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:43:20,130 [8864:HttpServer] mopidy_iris.core
okt 23 23:43:20 Desktop-Ubuntu mopidy[8864]:   Connection added
okt 23 23:43:20 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:43:20,130 [8864:HttpServer] mopidy_iris.core
okt 23 23:43:20 Desktop-Ubuntu mopidy[8864]:   101 GET /iris/ws/ (127.0.0.1) 0.52ms
okt 23 23:43:20 Desktop-Ubuntu mopidy[8864]: INFO     2022-10-23 23:43:20,130 [8864:HttpServer] tornado.access
okt 23 23:43:15 Desktop-Ubuntu mopidy[8864]: tornado.websocket.WebSocketClosedError
okt 23 23:43:15 Desktop-Ubuntu mopidy[8864]:     raise WebSocketClosedError()
okt 23 23:43:15 Desktop-Ubuntu mopidy[8864]:   File "/usr/lib/python3/dist-packages/tornado/websocket.py", line 337, in write_message
okt 23 23:43:15 Desktop-Ubuntu mopidy[8864]:     connection["connection"].write_message(json_encode(message))
okt 23 23:43:15 Desktop-Ubuntu mopidy[8864]:   File "/home/gerard/App/Iris/mopidy_iris/core.py", line 236, in broadcast
okt 23 23:43:15 Desktop-Ubuntu mopidy[8864]:     self.broadcast(
okt 23 23:43:15 Desktop-Ubuntu mopidy[8864]:   File "/home/gerard/App/Iris/mopidy_iris/core.py", line 282, in add_connection
okt 23 23:43:15 Desktop-Ubuntu mopidy[8864]:     iris.add_connection(connection=self, client=client)
okt 23 23:43:15 Desktop-Ubuntu mopidy[8864]:   File "/home/gerard/App/Iris/mopidy_iris/handlers.py", line 48, in open
okt 23 23:43:15 Desktop-Ubuntu mopidy[8864]:     open_result = handler.open(*handler.open_args, **handler.open_kwargs)
okt 23 23:43:15 Desktop-Ubuntu mopidy[8864]:   File "/usr/lib/python3/dist-packages/tornado/websocket.py", line 954, in _accept_connection
okt 23 23:43:15 Desktop-Ubuntu mopidy[8864]: Traceback (most recent call last):
okt 23 23:43:15 Desktop-Ubuntu mopidy[8864]: HTTPServerRequest(protocol='http', host='localhost:6680', method='GET', uri='/iris/ws/', version='HTTP/1.1', remote_ip='127.0.0.1')
okt 23 23:43:15 Desktop-Ubuntu mopidy[8864]:   Uncaught exception GET /iris/ws/ (127.0.0.1)
okt 23 23:43:15 Desktop-Ubuntu mopidy[8864]: ERROR    2022-10-23 23:43:15,016 [8864:HttpServer] tornado.application
okt 23 23:43:15 Desktop-Ubuntu mopidy[8864]:   {'method': 'connection_added', 'params': {'connection': {'connection_id': 'H833U4JINM7G', 'ip': '127.0.0.1', 'created': '2022-10-23 23:43:15'}}}
okt 23 23:43:15 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:43:15,016 [8864:HttpServer] mopidy_iris.core
okt 23 23:43:15 Desktop-Ubuntu mopidy[8864]:   <mopidy_iris.handlers.WebsocketHandler object at 0x7f9578094550>
okt 23 23:43:15 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:43:15,016 [8864:HttpServer] mopidy_iris.core
okt 23 23:43:15 Desktop-Ubuntu mopidy[8864]:   Connection added
okt 23 23:43:15 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:43:15,015 [8864:HttpServer] mopidy_iris.core
okt 23 23:43:15 Desktop-Ubuntu mopidy[8864]:   101 GET /iris/ws/ (127.0.0.1) 0.51ms
okt 23 23:43:15 Desktop-Ubuntu mopidy[8864]: INFO     2022-10-23 23:43:15,015 [8864:HttpServer] tornado.access
okt 23 23:43:09 Desktop-Ubuntu mopidy[8864]: tornado.websocket.WebSocketClosedError
okt 23 23:43:09 Desktop-Ubuntu mopidy[8864]:     raise WebSocketClosedError()
okt 23 23:43:09 Desktop-Ubuntu mopidy[8864]:   File "/usr/lib/python3/dist-packages/tornado/websocket.py", line 337, in write_message
okt 23 23:43:09 Desktop-Ubuntu mopidy[8864]:     connection["connection"].write_message(json_encode(message))
okt 23 23:43:09 Desktop-Ubuntu mopidy[8864]:   File "/home/gerard/App/Iris/mopidy_iris/core.py", line 236, in broadcast
okt 23 23:43:09 Desktop-Ubuntu mopidy[8864]:     self.broadcast(
okt 23 23:43:09 Desktop-Ubuntu mopidy[8864]:   File "/home/gerard/App/Iris/mopidy_iris/core.py", line 282, in add_connection
okt 23 23:43:09 Desktop-Ubuntu mopidy[8864]:     iris.add_connection(connection=self, client=client)
okt 23 23:43:09 Desktop-Ubuntu mopidy[8864]:   File "/home/gerard/App/Iris/mopidy_iris/handlers.py", line 48, in open
okt 23 23:43:09 Desktop-Ubuntu mopidy[8864]:     open_result = handler.open(*handler.open_args, **handler.open_kwargs)
okt 23 23:43:09 Desktop-Ubuntu mopidy[8864]:   File "/usr/lib/python3/dist-packages/tornado/websocket.py", line 954, in _accept_connection
okt 23 23:43:09 Desktop-Ubuntu mopidy[8864]: Traceback (most recent call last):
okt 23 23:43:09 Desktop-Ubuntu mopidy[8864]: HTTPServerRequest(protocol='http', host='localhost:6680', method='GET', uri='/iris/ws/', version='HTTP/1.1', remote_ip='127.0.0.1')
okt 23 23:43:09 Desktop-Ubuntu mopidy[8864]:   Uncaught exception GET /iris/ws/ (127.0.0.1)
okt 23 23:43:09 Desktop-Ubuntu mopidy[8864]: ERROR    2022-10-23 23:43:09,904 [8864:HttpServer] tornado.application
okt 23 23:43:09 Desktop-Ubuntu mopidy[8864]:   {'method': 'connection_added', 'params': {'connection': {'connection_id': '0MR0UTCA606E', 'ip': '127.0.0.1', 'created': '2022-10-23 23:43:09'}}}
okt 23 23:43:09 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:43:09,904 [8864:HttpServer] mopidy_iris.core
okt 23 23:43:09 Desktop-Ubuntu mopidy[8864]:   <mopidy_iris.handlers.WebsocketHandler object at 0x7f9578094250>
okt 23 23:43:09 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:43:09,904 [8864:HttpServer] mopidy_iris.core
okt 23 23:43:09 Desktop-Ubuntu mopidy[8864]:   Connection added
okt 23 23:43:09 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:43:09,904 [8864:HttpServer] mopidy_iris.core
okt 23 23:43:09 Desktop-Ubuntu mopidy[8864]:   101 GET /iris/ws/ (127.0.0.1) 0.50ms
okt 23 23:43:09 Desktop-Ubuntu mopidy[8864]: INFO     2022-10-23 23:43:09,904 [8864:HttpServer] tornado.access
okt 23 23:43:04 Desktop-Ubuntu mopidy[8864]: tornado.websocket.WebSocketClosedError
okt 23 23:43:04 Desktop-Ubuntu mopidy[8864]:     raise WebSocketClosedError()
okt 23 23:43:04 Desktop-Ubuntu mopidy[8864]:   File "/usr/lib/python3/dist-packages/tornado/websocket.py", line 337, in write_message
okt 23 23:43:04 Desktop-Ubuntu mopidy[8864]:     connection["connection"].write_message(json_encode(message))
okt 23 23:43:04 Desktop-Ubuntu mopidy[8864]:   File "/home/gerard/App/Iris/mopidy_iris/core.py", line 236, in broadcast
okt 23 23:43:04 Desktop-Ubuntu mopidy[8864]:     self.broadcast(
okt 23 23:43:04 Desktop-Ubuntu mopidy[8864]:   File "/home/gerard/App/Iris/mopidy_iris/core.py", line 282, in add_connection
okt 23 23:43:04 Desktop-Ubuntu mopidy[8864]:     iris.add_connection(connection=self, client=client)
okt 23 23:43:04 Desktop-Ubuntu mopidy[8864]:   File "/home/gerard/App/Iris/mopidy_iris/handlers.py", line 48, in open
okt 23 23:43:04 Desktop-Ubuntu mopidy[8864]:     open_result = handler.open(*handler.open_args, **handler.open_kwargs)
okt 23 23:43:04 Desktop-Ubuntu mopidy[8864]:   File "/usr/lib/python3/dist-packages/tornado/websocket.py", line 954, in _accept_connection
okt 23 23:43:04 Desktop-Ubuntu mopidy[8864]: Traceback (most recent call last):
okt 23 23:43:04 Desktop-Ubuntu mopidy[8864]: HTTPServerRequest(protocol='http', host='localhost:6680', method='GET', uri='/iris/ws/', version='HTTP/1.1', remote_ip='127.0.0.1')
okt 23 23:43:04 Desktop-Ubuntu mopidy[8864]:   Uncaught exception GET /iris/ws/ (127.0.0.1)
okt 23 23:43:04 Desktop-Ubuntu mopidy[8864]: ERROR    2022-10-23 23:43:04,790 [8864:HttpServer] tornado.application
okt 23 23:43:04 Desktop-Ubuntu mopidy[8864]:   {'method': 'connection_added', 'params': {'connection': {'connection_id': 'YAB6F3XQZ8XK', 'ip': '127.0.0.1', 'created': '2022-10-23 23:43:04'}}}
okt 23 23:43:04 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:43:04,790 [8864:HttpServer] mopidy_iris.core
okt 23 23:43:04 Desktop-Ubuntu mopidy[8864]:   <mopidy_iris.handlers.WebsocketHandler object at 0x7f9578067f10>
okt 23 23:43:04 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:43:04,789 [8864:HttpServer] mopidy_iris.core
okt 23 23:43:04 Desktop-Ubuntu mopidy[8864]:   Connection added
okt 23 23:43:04 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:43:04,789 [8864:HttpServer] mopidy_iris.core
okt 23 23:43:04 Desktop-Ubuntu mopidy[8864]:   101 GET /iris/ws/ (127.0.0.1) 0.51ms
okt 23 23:43:04 Desktop-Ubuntu mopidy[8864]: INFO     2022-10-23 23:43:04,789 [8864:HttpServer] tornado.access
okt 23 23:42:59 Desktop-Ubuntu mopidy[8864]: tornado.websocket.WebSocketClosedError
okt 23 23:42:59 Desktop-Ubuntu mopidy[8864]:     raise WebSocketClosedError()
okt 23 23:42:59 Desktop-Ubuntu mopidy[8864]:   File "/usr/lib/python3/dist-packages/tornado/websocket.py", line 337, in write_message
okt 23 23:42:59 Desktop-Ubuntu mopidy[8864]:     connection["connection"].write_message(json_encode(message))
okt 23 23:42:59 Desktop-Ubuntu mopidy[8864]:   File "/home/gerard/App/Iris/mopidy_iris/core.py", line 236, in broadcast
okt 23 23:42:59 Desktop-Ubuntu mopidy[8864]:     self.broadcast(
okt 23 23:42:59 Desktop-Ubuntu mopidy[8864]:   File "/home/gerard/App/Iris/mopidy_iris/core.py", line 282, in add_connection
okt 23 23:42:59 Desktop-Ubuntu mopidy[8864]:     iris.add_connection(connection=self, client=client)
okt 23 23:42:59 Desktop-Ubuntu mopidy[8864]:   File "/home/gerard/App/Iris/mopidy_iris/handlers.py", line 48, in open
okt 23 23:42:59 Desktop-Ubuntu mopidy[8864]:     open_result = handler.open(*handler.open_args, **handler.open_kwargs)
okt 23 23:42:59 Desktop-Ubuntu mopidy[8864]:   File "/usr/lib/python3/dist-packages/tornado/websocket.py", line 954, in _accept_connection
okt 23 23:42:59 Desktop-Ubuntu mopidy[8864]: Traceback (most recent call last):
okt 23 23:42:59 Desktop-Ubuntu mopidy[8864]: HTTPServerRequest(protocol='http', host='localhost:6680', method='GET', uri='/iris/ws/', version='HTTP/1.1', remote_ip='127.0.0.1')
okt 23 23:42:59 Desktop-Ubuntu mopidy[8864]:   Uncaught exception GET /iris/ws/ (127.0.0.1)
okt 23 23:42:59 Desktop-Ubuntu mopidy[8864]: ERROR    2022-10-23 23:42:59,639 [8864:HttpServer] tornado.application
okt 23 23:42:59 Desktop-Ubuntu mopidy[8864]:   {'method': 'connection_added', 'params': {'connection': {'connection_id': 'CFI1I8M1FMRN', 'ip': '127.0.0.1', 'created': '2022-10-23 23:42:59'}}}
okt 23 23:42:59 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:42:59,639 [8864:HttpServer] mopidy_iris.core
okt 23 23:42:59 Desktop-Ubuntu mopidy[8864]:   <mopidy_iris.handlers.WebsocketHandler object at 0x7f9578067d00>
okt 23 23:42:59 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:42:59,639 [8864:HttpServer] mopidy_iris.core
okt 23 23:42:59 Desktop-Ubuntu mopidy[8864]:   Connection added
okt 23 23:42:59 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:42:59,639 [8864:HttpServer] mopidy_iris.core
okt 23 23:42:59 Desktop-Ubuntu mopidy[8864]:   101 GET /iris/ws/ (127.0.0.1) 0.51ms
okt 23 23:42:59 Desktop-Ubuntu mopidy[8864]: INFO     2022-10-23 23:42:59,639 [8864:HttpServer] tornado.access
okt 23 23:42:54 Desktop-Ubuntu mopidy[8864]: tornado.websocket.WebSocketClosedError
okt 23 23:42:54 Desktop-Ubuntu mopidy[8864]:     raise WebSocketClosedError()
okt 23 23:42:54 Desktop-Ubuntu mopidy[8864]:   File "/usr/lib/python3/dist-packages/tornado/websocket.py", line 337, in write_message
okt 23 23:42:54 Desktop-Ubuntu mopidy[8864]:     connection["connection"].write_message(json_encode(message))
okt 23 23:42:54 Desktop-Ubuntu mopidy[8864]:   File "/home/gerard/App/Iris/mopidy_iris/core.py", line 236, in broadcast
okt 23 23:42:54 Desktop-Ubuntu mopidy[8864]:     self.broadcast(
okt 23 23:42:54 Desktop-Ubuntu mopidy[8864]:   File "/home/gerard/App/Iris/mopidy_iris/core.py", line 282, in add_connection
okt 23 23:42:54 Desktop-Ubuntu mopidy[8864]:     iris.add_connection(connection=self, client=client)
okt 23 23:42:54 Desktop-Ubuntu mopidy[8864]:   File "/home/gerard/App/Iris/mopidy_iris/handlers.py", line 48, in open
okt 23 23:42:54 Desktop-Ubuntu mopidy[8864]:     open_result = handler.open(*handler.open_args, **handler.open_kwargs)
okt 23 23:42:54 Desktop-Ubuntu mopidy[8864]:   File "/usr/lib/python3/dist-packages/tornado/websocket.py", line 954, in _accept_connection
okt 23 23:42:54 Desktop-Ubuntu mopidy[8864]: Traceback (most recent call last):
okt 23 23:42:54 Desktop-Ubuntu mopidy[8864]: HTTPServerRequest(protocol='http', host='localhost:6680', method='GET', uri='/iris/ws/', version='HTTP/1.1', remote_ip='127.0.0.1')
okt 23 23:42:54 Desktop-Ubuntu mopidy[8864]:   Uncaught exception GET /iris/ws/ (127.0.0.1)
okt 23 23:42:54 Desktop-Ubuntu mopidy[8864]: ERROR    2022-10-23 23:42:54,517 [8864:HttpServer] tornado.application
okt 23 23:42:54 Desktop-Ubuntu mopidy[8864]:   {'method': 'connection_added', 'params': {'connection': {'connection_id': 'ZX8BTZYZK8GU', 'ip': '127.0.0.1', 'created': '2022-10-23 23:42:54'}}}
okt 23 23:42:54 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:42:54,517 [8864:HttpServer] mopidy_iris.core
okt 23 23:42:54 Desktop-Ubuntu mopidy[8864]:   <mopidy_iris.handlers.WebsocketHandler object at 0x7f95780678e0>
okt 23 23:42:54 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:42:54,516 [8864:HttpServer] mopidy_iris.core
okt 23 23:42:54 Desktop-Ubuntu mopidy[8864]:   Connection added
okt 23 23:42:54 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:42:54,516 [8864:HttpServer] mopidy_iris.core
okt 23 23:42:54 Desktop-Ubuntu mopidy[8864]:   101 GET /iris/ws/ (127.0.0.1) 0.63ms
okt 23 23:42:54 Desktop-Ubuntu mopidy[8864]: INFO     2022-10-23 23:42:54,516 [8864:HttpServer] tornado.access
okt 23 23:42:49 Desktop-Ubuntu mopidy[8864]: tornado.websocket.WebSocketClosedError
okt 23 23:42:49 Desktop-Ubuntu mopidy[8864]:     raise WebSocketClosedError()
okt 23 23:42:49 Desktop-Ubuntu mopidy[8864]:   File "/usr/lib/python3/dist-packages/tornado/websocket.py", line 337, in write_message
okt 23 23:42:49 Desktop-Ubuntu mopidy[8864]:     connection["connection"].write_message(json_encode(message))
okt 23 23:42:49 Desktop-Ubuntu mopidy[8864]:   File "/home/gerard/App/Iris/mopidy_iris/core.py", line 236, in broadcast
okt 23 23:42:49 Desktop-Ubuntu mopidy[8864]:     self.broadcast(
okt 23 23:42:49 Desktop-Ubuntu mopidy[8864]:   File "/home/gerard/App/Iris/mopidy_iris/core.py", line 282, in add_connection
okt 23 23:42:49 Desktop-Ubuntu mopidy[8864]:     iris.add_connection(connection=self, client=client)
okt 23 23:42:49 Desktop-Ubuntu mopidy[8864]:   File "/home/gerard/App/Iris/mopidy_iris/handlers.py", line 48, in open
okt 23 23:42:49 Desktop-Ubuntu mopidy[8864]:     open_result = handler.open(*handler.open_args, **handler.open_kwargs)
okt 23 23:42:49 Desktop-Ubuntu mopidy[8864]:   File "/usr/lib/python3/dist-packages/tornado/websocket.py", line 954, in _accept_connection
okt 23 23:42:49 Desktop-Ubuntu mopidy[8864]: Traceback (most recent call last):
okt 23 23:42:49 Desktop-Ubuntu mopidy[8864]: HTTPServerRequest(protocol='http', host='localhost:6680', method='GET', uri='/iris/ws/', version='HTTP/1.1', remote_ip='127.0.0.1')
okt 23 23:42:49 Desktop-Ubuntu mopidy[8864]:   Uncaught exception GET /iris/ws/ (127.0.0.1)
okt 23 23:42:49 Desktop-Ubuntu mopidy[8864]: ERROR    2022-10-23 23:42:49,402 [8864:HttpServer] tornado.application
okt 23 23:42:49 Desktop-Ubuntu mopidy[8864]:   {'method': 'connection_added', 'params': {'connection': {'connection_id': '14K5G83809VJ', 'ip': '127.0.0.1', 'created': '2022-10-23 23:42:49'}}}
okt 23 23:42:49 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:42:49,402 [8864:HttpServer] mopidy_iris.core
okt 23 23:42:49 Desktop-Ubuntu mopidy[8864]:   <mopidy_iris.handlers.WebsocketHandler object at 0x7f95780675e0>
okt 23 23:42:49 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:42:49,402 [8864:HttpServer] mopidy_iris.core
okt 23 23:42:49 Desktop-Ubuntu mopidy[8864]:   Connection added
okt 23 23:42:49 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:42:49,402 [8864:HttpServer] mopidy_iris.core
okt 23 23:42:49 Desktop-Ubuntu mopidy[8864]:   101 GET /iris/ws/ (127.0.0.1) 0.51ms
okt 23 23:42:49 Desktop-Ubuntu mopidy[8864]: INFO     2022-10-23 23:42:49,402 [8864:HttpServer] tornado.access
okt 23 23:42:44 Desktop-Ubuntu mopidy[8864]: tornado.websocket.WebSocketClosedError
okt 23 23:42:44 Desktop-Ubuntu mopidy[8864]:     raise WebSocketClosedError()
okt 23 23:42:44 Desktop-Ubuntu mopidy[8864]:   File "/usr/lib/python3/dist-packages/tornado/websocket.py", line 337, in write_message
okt 23 23:42:44 Desktop-Ubuntu mopidy[8864]:     connection["connection"].write_message(json_encode(message))
okt 23 23:42:44 Desktop-Ubuntu mopidy[8864]:   File "/home/gerard/App/Iris/mopidy_iris/core.py", line 236, in broadcast
okt 23 23:42:44 Desktop-Ubuntu mopidy[8864]:     self.broadcast(
okt 23 23:42:44 Desktop-Ubuntu mopidy[8864]:   File "/home/gerard/App/Iris/mopidy_iris/core.py", line 282, in add_connection
okt 23 23:42:44 Desktop-Ubuntu mopidy[8864]:     iris.add_connection(connection=self, client=client)
okt 23 23:42:44 Desktop-Ubuntu mopidy[8864]:   File "/home/gerard/App/Iris/mopidy_iris/handlers.py", line 48, in open
okt 23 23:42:44 Desktop-Ubuntu mopidy[8864]:     open_result = handler.open(*handler.open_args, **handler.open_kwargs)
okt 23 23:42:44 Desktop-Ubuntu mopidy[8864]:   File "/usr/lib/python3/dist-packages/tornado/websocket.py", line 954, in _accept_connection
okt 23 23:42:44 Desktop-Ubuntu mopidy[8864]: Traceback (most recent call last):
okt 23 23:42:44 Desktop-Ubuntu mopidy[8864]: HTTPServerRequest(protocol='http', host='localhost:6680', method='GET', uri='/iris/ws/', version='HTTP/1.1', remote_ip='127.0.0.1')
okt 23 23:42:44 Desktop-Ubuntu mopidy[8864]:   Uncaught exception GET /iris/ws/ (127.0.0.1)
okt 23 23:42:44 Desktop-Ubuntu mopidy[8864]: ERROR    2022-10-23 23:42:44,252 [8864:HttpServer] tornado.application
okt 23 23:42:44 Desktop-Ubuntu mopidy[8864]:   {'method': 'connection_added', 'params': {'connection': {'connection_id': 'QALSFX2YVX0P', 'ip': '127.0.0.1', 'created': '2022-10-23 23:42:44'}}}
okt 23 23:42:44 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:42:44,252 [8864:HttpServer] mopidy_iris.core
okt 23 23:42:44 Desktop-Ubuntu mopidy[8864]:   <mopidy_iris.handlers.WebsocketHandler object at 0x7f9578067280>
okt 23 23:42:44 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:42:44,252 [8864:HttpServer] mopidy_iris.core
okt 23 23:42:44 Desktop-Ubuntu mopidy[8864]:   Connection added
okt 23 23:42:44 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:42:44,252 [8864:HttpServer] mopidy_iris.core
okt 23 23:42:44 Desktop-Ubuntu mopidy[8864]:   101 GET /iris/ws/ (127.0.0.1) 0.47ms
okt 23 23:42:44 Desktop-Ubuntu mopidy[8864]: INFO     2022-10-23 23:42:44,252 [8864:HttpServer] tornado.access
okt 23 23:42:39 Desktop-Ubuntu mopidy[8864]: tornado.websocket.WebSocketClosedError
okt 23 23:42:39 Desktop-Ubuntu mopidy[8864]:     raise WebSocketClosedError()
okt 23 23:42:39 Desktop-Ubuntu mopidy[8864]:   File "/usr/lib/python3/dist-packages/tornado/websocket.py", line 337, in write_message
okt 23 23:42:39 Desktop-Ubuntu mopidy[8864]:     connection["connection"].write_message(json_encode(message))
okt 23 23:42:39 Desktop-Ubuntu mopidy[8864]:   File "/home/gerard/App/Iris/mopidy_iris/core.py", line 236, in broadcast
okt 23 23:42:39 Desktop-Ubuntu mopidy[8864]:     self.broadcast(
okt 23 23:42:39 Desktop-Ubuntu mopidy[8864]:   File "/home/gerard/App/Iris/mopidy_iris/core.py", line 282, in add_connection
okt 23 23:42:39 Desktop-Ubuntu mopidy[8864]:     iris.add_connection(connection=self, client=client)
okt 23 23:42:39 Desktop-Ubuntu mopidy[8864]:   File "/home/gerard/App/Iris/mopidy_iris/handlers.py", line 48, in open
okt 23 23:42:39 Desktop-Ubuntu mopidy[8864]:     open_result = handler.open(*handler.open_args, **handler.open_kwargs)
okt 23 23:42:39 Desktop-Ubuntu mopidy[8864]:   File "/usr/lib/python3/dist-packages/tornado/websocket.py", line 954, in _accept_connection
okt 23 23:42:39 Desktop-Ubuntu mopidy[8864]: Traceback (most recent call last):
okt 23 23:42:39 Desktop-Ubuntu mopidy[8864]: HTTPServerRequest(protocol='http', host='localhost:6680', method='GET', uri='/iris/ws/', version='HTTP/1.1', remote_ip='127.0.0.1')
okt 23 23:42:39 Desktop-Ubuntu mopidy[8864]:   Uncaught exception GET /iris/ws/ (127.0.0.1)
okt 23 23:42:39 Desktop-Ubuntu mopidy[8864]: ERROR    2022-10-23 23:42:39,136 [8864:HttpServer] tornado.application
okt 23 23:42:39 Desktop-Ubuntu mopidy[8864]:   {'method': 'connection_added', 'params': {'connection': {'connection_id': '7ET47CG3ZFUP', 'ip': '127.0.0.1', 'created': '2022-10-23 23:42:39'}}}
okt 23 23:42:39 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:42:39,136 [8864:HttpServer] mopidy_iris.core
okt 23 23:42:39 Desktop-Ubuntu mopidy[8864]:   <mopidy_iris.handlers.WebsocketHandler object at 0x7f9578066fe0>
okt 23 23:42:39 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:42:39,135 [8864:HttpServer] mopidy_iris.core
okt 23 23:42:39 Desktop-Ubuntu mopidy[8864]:   Connection added
okt 23 23:42:39 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:42:39,135 [8864:HttpServer] mopidy_iris.core
okt 23 23:42:39 Desktop-Ubuntu mopidy[8864]:   101 GET /iris/ws/ (127.0.0.1) 0.51ms
okt 23 23:42:39 Desktop-Ubuntu mopidy[8864]: INFO     2022-10-23 23:42:39,135 [8864:HttpServer] tornado.access
okt 23 23:42:34 Desktop-Ubuntu mopidy[8864]: tornado.websocket.WebSocketClosedError
okt 23 23:42:34 Desktop-Ubuntu mopidy[8864]:     raise WebSocketClosedError()
okt 23 23:42:34 Desktop-Ubuntu mopidy[8864]:   File "/usr/lib/python3/dist-packages/tornado/websocket.py", line 337, in write_message
okt 23 23:42:34 Desktop-Ubuntu mopidy[8864]:     connection["connection"].write_message(json_encode(message))
okt 23 23:42:34 Desktop-Ubuntu mopidy[8864]:   File "/home/gerard/App/Iris/mopidy_iris/core.py", line 236, in broadcast
okt 23 23:42:34 Desktop-Ubuntu mopidy[8864]:     self.broadcast(
okt 23 23:42:34 Desktop-Ubuntu mopidy[8864]:   File "/home/gerard/App/Iris/mopidy_iris/core.py", line 282, in add_connection
okt 23 23:42:34 Desktop-Ubuntu mopidy[8864]:     iris.add_connection(connection=self, client=client)
okt 23 23:42:34 Desktop-Ubuntu mopidy[8864]:   File "/home/gerard/App/Iris/mopidy_iris/handlers.py", line 48, in open
okt 23 23:42:34 Desktop-Ubuntu mopidy[8864]:     open_result = handler.open(*handler.open_args, **handler.open_kwargs)
okt 23 23:42:34 Desktop-Ubuntu mopidy[8864]:   File "/usr/lib/python3/dist-packages/tornado/websocket.py", line 954, in _accept_connection
okt 23 23:42:34 Desktop-Ubuntu mopidy[8864]: Traceback (most recent call last):
okt 23 23:42:34 Desktop-Ubuntu mopidy[8864]: HTTPServerRequest(protocol='http', host='localhost:6680', method='GET', uri='/iris/ws/', version='HTTP/1.1', remote_ip='127.0.0.1')
okt 23 23:42:34 Desktop-Ubuntu mopidy[8864]:   Uncaught exception GET /iris/ws/ (127.0.0.1)
okt 23 23:42:34 Desktop-Ubuntu mopidy[8864]: ERROR    2022-10-23 23:42:34,021 [8864:HttpServer] tornado.application
okt 23 23:42:34 Desktop-Ubuntu mopidy[8864]:   {'method': 'connection_added', 'params': {'connection': {'connection_id': '2K9CBLJ1NLJ5', 'ip': '127.0.0.1', 'created': '2022-10-23 23:42:34'}}}
okt 23 23:42:34 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:42:34,021 [8864:HttpServer] mopidy_iris.core
okt 23 23:42:34 Desktop-Ubuntu mopidy[8864]:   <mopidy_iris.handlers.WebsocketHandler object at 0x7f9578066ce0>
okt 23 23:42:34 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:42:34,021 [8864:HttpServer] mopidy_iris.core
okt 23 23:42:34 Desktop-Ubuntu mopidy[8864]:   Connection added
okt 23 23:42:34 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:42:34,021 [8864:HttpServer] mopidy_iris.core
okt 23 23:42:34 Desktop-Ubuntu mopidy[8864]:   101 GET /iris/ws/ (127.0.0.1) 0.56ms
okt 23 23:42:34 Desktop-Ubuntu mopidy[8864]: INFO     2022-10-23 23:42:34,021 [8864:HttpServer] tornado.access
okt 23 23:42:28 Desktop-Ubuntu mopidy[8864]: tornado.websocket.WebSocketClosedError
okt 23 23:42:28 Desktop-Ubuntu mopidy[8864]:     raise WebSocketClosedError()
okt 23 23:42:28 Desktop-Ubuntu mopidy[8864]:   File "/usr/lib/python3/dist-packages/tornado/websocket.py", line 337, in write_message
okt 23 23:42:28 Desktop-Ubuntu mopidy[8864]:     connection["connection"].write_message(json_encode(message))
okt 23 23:42:28 Desktop-Ubuntu mopidy[8864]:   File "/home/gerard/App/Iris/mopidy_iris/core.py", line 236, in broadcast
okt 23 23:42:28 Desktop-Ubuntu mopidy[8864]:     self.broadcast(
okt 23 23:42:28 Desktop-Ubuntu mopidy[8864]:   File "/home/gerard/App/Iris/mopidy_iris/core.py", line 282, in add_connection
okt 23 23:42:28 Desktop-Ubuntu mopidy[8864]:     iris.add_connection(connection=self, client=client)
okt 23 23:42:28 Desktop-Ubuntu mopidy[8864]:   File "/home/gerard/App/Iris/mopidy_iris/handlers.py", line 48, in open
okt 23 23:42:28 Desktop-Ubuntu mopidy[8864]:     open_result = handler.open(*handler.open_args, **handler.open_kwargs)
okt 23 23:42:28 Desktop-Ubuntu mopidy[8864]:   File "/usr/lib/python3/dist-packages/tornado/websocket.py", line 954, in _accept_connection
okt 23 23:42:28 Desktop-Ubuntu mopidy[8864]: Traceback (most recent call last):
okt 23 23:42:28 Desktop-Ubuntu mopidy[8864]: HTTPServerRequest(protocol='http', host='localhost:6680', method='GET', uri='/iris/ws/', version='HTTP/1.1', remote_ip='127.0.0.1')
okt 23 23:42:28 Desktop-Ubuntu mopidy[8864]:   Uncaught exception GET /iris/ws/ (127.0.0.1)
okt 23 23:42:28 Desktop-Ubuntu mopidy[8864]: ERROR    2022-10-23 23:42:28,873 [8864:HttpServer] tornado.application
okt 23 23:42:28 Desktop-Ubuntu mopidy[8864]:   {'method': 'connection_added', 'params': {'connection': {'connection_id': '7RI9M5CG9I9A', 'ip': '127.0.0.1', 'created': '2022-10-23 23:42:28'}}}
okt 23 23:42:28 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:42:28,873 [8864:HttpServer] mopidy_iris.core
okt 23 23:42:28 Desktop-Ubuntu mopidy[8864]:   <mopidy_iris.handlers.WebsocketHandler object at 0x7f95780669e0>
okt 23 23:42:28 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:42:28,873 [8864:HttpServer] mopidy_iris.core
okt 23 23:42:28 Desktop-Ubuntu mopidy[8864]:   Connection added
okt 23 23:42:28 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:42:28,873 [8864:HttpServer] mopidy_iris.core
okt 23 23:42:28 Desktop-Ubuntu mopidy[8864]:   101 GET /iris/ws/ (127.0.0.1) 0.51ms
okt 23 23:42:28 Desktop-Ubuntu mopidy[8864]: INFO     2022-10-23 23:42:28,873 [8864:HttpServer] tornado.access
okt 23 23:42:23 Desktop-Ubuntu mopidy[8864]: tornado.websocket.WebSocketClosedError
okt 23 23:42:23 Desktop-Ubuntu mopidy[8864]:     raise WebSocketClosedError()
okt 23 23:42:23 Desktop-Ubuntu mopidy[8864]:   File "/usr/lib/python3/dist-packages/tornado/websocket.py", line 337, in write_message
okt 23 23:42:23 Desktop-Ubuntu mopidy[8864]:     connection["connection"].write_message(json_encode(message))
okt 23 23:42:23 Desktop-Ubuntu mopidy[8864]:   File "/home/gerard/App/Iris/mopidy_iris/core.py", line 236, in broadcast
okt 23 23:42:23 Desktop-Ubuntu mopidy[8864]:     self.broadcast(
okt 23 23:42:23 Desktop-Ubuntu mopidy[8864]:   File "/home/gerard/App/Iris/mopidy_iris/core.py", line 282, in add_connection
okt 23 23:42:23 Desktop-Ubuntu mopidy[8864]:     iris.add_connection(connection=self, client=client)
okt 23 23:42:23 Desktop-Ubuntu mopidy[8864]:   File "/home/gerard/App/Iris/mopidy_iris/handlers.py", line 48, in open
okt 23 23:42:23 Desktop-Ubuntu mopidy[8864]:     open_result = handler.open(*handler.open_args, **handler.open_kwargs)
okt 23 23:42:23 Desktop-Ubuntu mopidy[8864]:   File "/usr/lib/python3/dist-packages/tornado/websocket.py", line 954, in _accept_connection
okt 23 23:42:23 Desktop-Ubuntu mopidy[8864]: Traceback (most recent call last):
okt 23 23:42:23 Desktop-Ubuntu mopidy[8864]: HTTPServerRequest(protocol='http', host='localhost:6680', method='GET', uri='/iris/ws/', version='HTTP/1.1', remote_ip='127.0.0.1')
okt 23 23:42:23 Desktop-Ubuntu mopidy[8864]:   Uncaught exception GET /iris/ws/ (127.0.0.1)
okt 23 23:42:23 Desktop-Ubuntu mopidy[8864]: ERROR    2022-10-23 23:42:23,746 [8864:HttpServer] tornado.application
okt 23 23:42:23 Desktop-Ubuntu mopidy[8864]:   {'method': 'connection_added', 'params': {'connection': {'connection_id': 'L5ETO1GFOOT9', 'ip': '127.0.0.1', 'created': '2022-10-23 23:42:23'}}}
okt 23 23:42:23 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:42:23,746 [8864:HttpServer] mopidy_iris.core
okt 23 23:42:23 Desktop-Ubuntu mopidy[8864]:   <mopidy_iris.handlers.WebsocketHandler object at 0x7f95780666e0>
okt 23 23:42:23 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:42:23,746 [8864:HttpServer] mopidy_iris.core
okt 23 23:42:23 Desktop-Ubuntu mopidy[8864]:   Connection added
okt 23 23:42:23 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:42:23,746 [8864:HttpServer] mopidy_iris.core
okt 23 23:42:23 Desktop-Ubuntu mopidy[8864]:   101 GET /iris/ws/ (127.0.0.1) 0.50ms
okt 23 23:42:23 Desktop-Ubuntu mopidy[8864]: INFO     2022-10-23 23:42:23,746 [8864:HttpServer] tornado.access
okt 23 23:42:18 Desktop-Ubuntu mopidy[8864]: tornado.websocket.WebSocketClosedError
okt 23 23:42:18 Desktop-Ubuntu mopidy[8864]:     raise WebSocketClosedError()
okt 23 23:42:18 Desktop-Ubuntu mopidy[8864]:   File "/usr/lib/python3/dist-packages/tornado/websocket.py", line 337, in write_message
okt 23 23:42:18 Desktop-Ubuntu mopidy[8864]:     connection["connection"].write_message(json_encode(message))
okt 23 23:42:18 Desktop-Ubuntu mopidy[8864]:   File "/home/gerard/App/Iris/mopidy_iris/core.py", line 236, in broadcast
okt 23 23:42:18 Desktop-Ubuntu mopidy[8864]:     self.broadcast(
okt 23 23:42:18 Desktop-Ubuntu mopidy[8864]:   File "/home/gerard/App/Iris/mopidy_iris/core.py", line 282, in add_connection
okt 23 23:42:18 Desktop-Ubuntu mopidy[8864]:     iris.add_connection(connection=self, client=client)
okt 23 23:42:18 Desktop-Ubuntu mopidy[8864]:   File "/home/gerard/App/Iris/mopidy_iris/handlers.py", line 48, in open
okt 23 23:42:18 Desktop-Ubuntu mopidy[8864]:     open_result = handler.open(*handler.open_args, **handler.open_kwargs)
okt 23 23:42:18 Desktop-Ubuntu mopidy[8864]:   File "/usr/lib/python3/dist-packages/tornado/websocket.py", line 954, in _accept_connection
okt 23 23:42:18 Desktop-Ubuntu mopidy[8864]: Traceback (most recent call last):
okt 23 23:42:18 Desktop-Ubuntu mopidy[8864]: HTTPServerRequest(protocol='http', host='localhost:6680', method='GET', uri='/iris/ws/', version='HTTP/1.1', remote_ip='127.0.0.1')
okt 23 23:42:18 Desktop-Ubuntu mopidy[8864]:   Uncaught exception GET /iris/ws/ (127.0.0.1)
okt 23 23:42:18 Desktop-Ubuntu mopidy[8864]: ERROR    2022-10-23 23:42:18,633 [8864:HttpServer] tornado.application
okt 23 23:42:18 Desktop-Ubuntu mopidy[8864]:   {'method': 'connection_added', 'params': {'connection': {'connection_id': 'ZJ0OEYO7QACM', 'ip': '127.0.0.1', 'created': '2022-10-23 23:42:18'}}}
okt 23 23:42:18 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:42:18,632 [8864:HttpServer] mopidy_iris.core
okt 23 23:42:18 Desktop-Ubuntu mopidy[8864]:   <mopidy_iris.handlers.WebsocketHandler object at 0x7f95780663e0>
okt 23 23:42:18 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:42:18,632 [8864:HttpServer] mopidy_iris.core
okt 23 23:42:18 Desktop-Ubuntu mopidy[8864]:   Connection added
okt 23 23:42:18 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:42:18,632 [8864:HttpServer] mopidy_iris.core
okt 23 23:42:18 Desktop-Ubuntu mopidy[8864]:   101 GET /iris/ws/ (127.0.0.1) 0.51ms
okt 23 23:42:18 Desktop-Ubuntu mopidy[8864]: INFO     2022-10-23 23:42:18,632 [8864:HttpServer] tornado.access
okt 23 23:42:13 Desktop-Ubuntu mopidy[8864]: tornado.websocket.WebSocketClosedError
okt 23 23:42:13 Desktop-Ubuntu mopidy[8864]:     raise WebSocketClosedError()
okt 23 23:42:13 Desktop-Ubuntu mopidy[8864]:   File "/usr/lib/python3/dist-packages/tornado/websocket.py", line 337, in write_message
okt 23 23:42:13 Desktop-Ubuntu mopidy[8864]:     connection["connection"].write_message(json_encode(message))
okt 23 23:42:13 Desktop-Ubuntu mopidy[8864]:   File "/home/gerard/App/Iris/mopidy_iris/core.py", line 236, in broadcast
okt 23 23:42:13 Desktop-Ubuntu mopidy[8864]:     self.broadcast(
okt 23 23:42:13 Desktop-Ubuntu mopidy[8864]:   File "/home/gerard/App/Iris/mopidy_iris/core.py", line 282, in add_connection
okt 23 23:42:13 Desktop-Ubuntu mopidy[8864]:     iris.add_connection(connection=self, client=client)
okt 23 23:42:13 Desktop-Ubuntu mopidy[8864]:   File "/home/gerard/App/Iris/mopidy_iris/handlers.py", line 48, in open
okt 23 23:42:13 Desktop-Ubuntu mopidy[8864]:     open_result = handler.open(*handler.open_args, **handler.open_kwargs)
okt 23 23:42:13 Desktop-Ubuntu mopidy[8864]:   File "/usr/lib/python3/dist-packages/tornado/websocket.py", line 954, in _accept_connection
okt 23 23:42:13 Desktop-Ubuntu mopidy[8864]: Traceback (most recent call last):
okt 23 23:42:13 Desktop-Ubuntu mopidy[8864]: HTTPServerRequest(protocol='http', host='localhost:6680', method='GET', uri='/iris/ws/', version='HTTP/1.1', remote_ip='127.0.0.1')
okt 23 23:42:13 Desktop-Ubuntu mopidy[8864]:   Uncaught exception GET /iris/ws/ (127.0.0.1)
okt 23 23:42:13 Desktop-Ubuntu mopidy[8864]: ERROR    2022-10-23 23:42:13,488 [8864:HttpServer] tornado.application
okt 23 23:42:13 Desktop-Ubuntu mopidy[8864]:   {'method': 'connection_added', 'params': {'connection': {'connection_id': 'FIDPC924RUHF', 'ip': '127.0.0.1', 'created': '2022-10-23 23:42:13'}}}
okt 23 23:42:13 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:42:13,487 [8864:HttpServer] mopidy_iris.core
okt 23 23:42:13 Desktop-Ubuntu mopidy[8864]:   <mopidy_iris.handlers.WebsocketHandler object at 0x7f9578065f90>
okt 23 23:42:13 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:42:13,487 [8864:HttpServer] mopidy_iris.core
okt 23 23:42:13 Desktop-Ubuntu mopidy[8864]:   Connection added
okt 23 23:42:13 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:42:13,487 [8864:HttpServer] mopidy_iris.core
okt 23 23:42:13 Desktop-Ubuntu mopidy[8864]:   101 GET /iris/ws/ (127.0.0.1) 0.51ms
okt 23 23:42:13 Desktop-Ubuntu mopidy[8864]: INFO     2022-10-23 23:42:13,487 [8864:HttpServer] tornado.access
okt 23 23:42:08 Desktop-Ubuntu mopidy[8864]: tornado.websocket.WebSocketClosedError
okt 23 23:42:08 Desktop-Ubuntu mopidy[8864]:     raise WebSocketClosedError()
okt 23 23:42:08 Desktop-Ubuntu mopidy[8864]:   File "/usr/lib/python3/dist-packages/tornado/websocket.py", line 337, in write_message
okt 23 23:42:08 Desktop-Ubuntu mopidy[8864]:     connection["connection"].write_message(json_encode(message))
okt 23 23:42:08 Desktop-Ubuntu mopidy[8864]:   File "/home/gerard/App/Iris/mopidy_iris/core.py", line 236, in broadcast
okt 23 23:42:08 Desktop-Ubuntu mopidy[8864]:     self.broadcast(
okt 23 23:42:08 Desktop-Ubuntu mopidy[8864]:   File "/home/gerard/App/Iris/mopidy_iris/core.py", line 282, in add_connection
okt 23 23:42:08 Desktop-Ubuntu mopidy[8864]:     iris.add_connection(connection=self, client=client)
okt 23 23:42:08 Desktop-Ubuntu mopidy[8864]:   File "/home/gerard/App/Iris/mopidy_iris/handlers.py", line 48, in open
okt 23 23:42:08 Desktop-Ubuntu mopidy[8864]:     open_result = handler.open(*handler.open_args, **handler.open_kwargs)
okt 23 23:42:08 Desktop-Ubuntu mopidy[8864]:   File "/usr/lib/python3/dist-packages/tornado/websocket.py", line 954, in _accept_connection
okt 23 23:42:08 Desktop-Ubuntu mopidy[8864]: Traceback (most recent call last):
okt 23 23:42:08 Desktop-Ubuntu mopidy[8864]: HTTPServerRequest(protocol='http', host='localhost:6680', method='GET', uri='/iris/ws/', version='HTTP/1.1', remote_ip='127.0.0.1')
okt 23 23:42:08 Desktop-Ubuntu mopidy[8864]:   Uncaught exception GET /iris/ws/ (127.0.0.1)
okt 23 23:42:08 Desktop-Ubuntu mopidy[8864]: ERROR    2022-10-23 23:42:08,360 [8864:HttpServer] tornado.application
okt 23 23:42:08 Desktop-Ubuntu mopidy[8864]:   {'method': 'connection_added', 'params': {'connection': {'connection_id': 'TBOV1ZQO266W', 'ip': '127.0.0.1', 'created': '2022-10-23 23:42:08'}}}
okt 23 23:42:08 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:42:08,360 [8864:HttpServer] mopidy_iris.core
okt 23 23:42:08 Desktop-Ubuntu mopidy[8864]:   <mopidy_iris.handlers.WebsocketHandler object at 0x7f9578065de0>
okt 23 23:42:08 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:42:08,360 [8864:HttpServer] mopidy_iris.core
okt 23 23:42:08 Desktop-Ubuntu mopidy[8864]:   Connection added
okt 23 23:42:08 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:42:08,360 [8864:HttpServer] mopidy_iris.core
okt 23 23:42:08 Desktop-Ubuntu mopidy[8864]:   101 GET /iris/ws/ (127.0.0.1) 0.50ms
okt 23 23:42:08 Desktop-Ubuntu mopidy[8864]: INFO     2022-10-23 23:42:08,359 [8864:HttpServer] tornado.access
okt 23 23:42:03 Desktop-Ubuntu mopidy[8864]: tornado.websocket.WebSocketClosedError
okt 23 23:42:03 Desktop-Ubuntu mopidy[8864]:     raise WebSocketClosedError()
okt 23 23:42:03 Desktop-Ubuntu mopidy[8864]:   File "/usr/lib/python3/dist-packages/tornado/websocket.py", line 337, in write_message
okt 23 23:42:03 Desktop-Ubuntu mopidy[8864]:     connection["connection"].write_message(json_encode(message))
okt 23 23:42:03 Desktop-Ubuntu mopidy[8864]:   File "/home/gerard/App/Iris/mopidy_iris/core.py", line 236, in broadcast
okt 23 23:42:03 Desktop-Ubuntu mopidy[8864]:     self.broadcast(
okt 23 23:42:03 Desktop-Ubuntu mopidy[8864]:   File "/home/gerard/App/Iris/mopidy_iris/core.py", line 282, in add_connection
okt 23 23:42:03 Desktop-Ubuntu mopidy[8864]:     iris.add_connection(connection=self, client=client)
okt 23 23:42:03 Desktop-Ubuntu mopidy[8864]:   File "/home/gerard/App/Iris/mopidy_iris/handlers.py", line 48, in open
okt 23 23:42:03 Desktop-Ubuntu mopidy[8864]:     open_result = handler.open(*handler.open_args, **handler.open_kwargs)
okt 23 23:42:03 Desktop-Ubuntu mopidy[8864]:   File "/usr/lib/python3/dist-packages/tornado/websocket.py", line 954, in _accept_connection
okt 23 23:42:03 Desktop-Ubuntu mopidy[8864]: Traceback (most recent call last):
okt 23 23:42:03 Desktop-Ubuntu mopidy[8864]: HTTPServerRequest(protocol='http', host='localhost:6680', method='GET', uri='/iris/ws/', version='HTTP/1.1', remote_ip='127.0.0.1')
okt 23 23:42:03 Desktop-Ubuntu mopidy[8864]:   Uncaught exception GET /iris/ws/ (127.0.0.1)
okt 23 23:42:03 Desktop-Ubuntu mopidy[8864]: ERROR    2022-10-23 23:42:03,243 [8864:HttpServer] tornado.application
okt 23 23:42:03 Desktop-Ubuntu mopidy[8864]:   {'method': 'connection_added', 'params': {'connection': {'connection_id': 'M8ABVR9NJPN7', 'ip': '127.0.0.1', 'created': '2022-10-23 23:42:03'}}}
okt 23 23:42:03 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:42:03,243 [8864:HttpServer] mopidy_iris.core
okt 23 23:42:03 Desktop-Ubuntu mopidy[8864]:   <mopidy_iris.handlers.WebsocketHandler object at 0x7f9579665720>
okt 23 23:42:03 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:42:03,243 [8864:HttpServer] mopidy_iris.core
okt 23 23:42:03 Desktop-Ubuntu mopidy[8864]:   Connection added
okt 23 23:42:03 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:42:03,243 [8864:HttpServer] mopidy_iris.core
okt 23 23:42:03 Desktop-Ubuntu mopidy[8864]:   101 GET /iris/ws/ (127.0.0.1) 0.51ms
okt 23 23:42:03 Desktop-Ubuntu mopidy[8864]: INFO     2022-10-23 23:42:03,243 [8864:HttpServer] tornado.access
okt 23 23:41:58 Desktop-Ubuntu mopidy[8864]: tornado.websocket.WebSocketClosedError
okt 23 23:41:58 Desktop-Ubuntu mopidy[8864]:     raise WebSocketClosedError()
okt 23 23:41:58 Desktop-Ubuntu mopidy[8864]:   File "/usr/lib/python3/dist-packages/tornado/websocket.py", line 337, in write_message
okt 23 23:41:58 Desktop-Ubuntu mopidy[8864]:     connection["connection"].write_message(json_encode(message))
okt 23 23:41:58 Desktop-Ubuntu mopidy[8864]:   File "/home/gerard/App/Iris/mopidy_iris/core.py", line 236, in broadcast
okt 23 23:41:58 Desktop-Ubuntu mopidy[8864]:     self.broadcast(
okt 23 23:41:58 Desktop-Ubuntu mopidy[8864]:   File "/home/gerard/App/Iris/mopidy_iris/core.py", line 282, in add_connection
okt 23 23:41:58 Desktop-Ubuntu mopidy[8864]:     iris.add_connection(connection=self, client=client)
okt 23 23:41:58 Desktop-Ubuntu mopidy[8864]:   File "/home/gerard/App/Iris/mopidy_iris/handlers.py", line 48, in open
okt 23 23:41:58 Desktop-Ubuntu mopidy[8864]:     open_result = handler.open(*handler.open_args, **handler.open_kwargs)
okt 23 23:41:58 Desktop-Ubuntu mopidy[8864]:   File "/usr/lib/python3/dist-packages/tornado/websocket.py", line 954, in _accept_connection
okt 23 23:41:58 Desktop-Ubuntu mopidy[8864]: Traceback (most recent call last):
okt 23 23:41:58 Desktop-Ubuntu mopidy[8864]: HTTPServerRequest(protocol='http', host='localhost:6680', method='GET', uri='/iris/ws/', version='HTTP/1.1', remote_ip='127.0.0.1')
okt 23 23:41:58 Desktop-Ubuntu mopidy[8864]:   Uncaught exception GET /iris/ws/ (127.0.0.1)
okt 23 23:41:58 Desktop-Ubuntu mopidy[8864]: ERROR    2022-10-23 23:41:58,099 [8864:HttpServer] tornado.application
okt 23 23:41:58 Desktop-Ubuntu mopidy[8864]:   {'method': 'connection_added', 'params': {'connection': {'connection_id': 'L29AWK2LKF8S', 'ip': '127.0.0.1', 'created': '2022-10-23 23:41:58'}}}
okt 23 23:41:58 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:41:58,099 [8864:HttpServer] mopidy_iris.core
okt 23 23:41:58 Desktop-Ubuntu mopidy[8864]:   <mopidy_iris.handlers.WebsocketHandler object at 0x7f95796c81f0>
okt 23 23:41:58 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:41:58,099 [8864:HttpServer] mopidy_iris.core
okt 23 23:41:58 Desktop-Ubuntu mopidy[8864]:   Connection added
okt 23 23:41:58 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:41:58,099 [8864:HttpServer] mopidy_iris.core
okt 23 23:41:58 Desktop-Ubuntu mopidy[8864]:   101 GET /iris/ws/ (127.0.0.1) 0.52ms
okt 23 23:41:58 Desktop-Ubuntu mopidy[8864]: INFO     2022-10-23 23:41:58,098 [8864:HttpServer] tornado.access
okt 23 23:41:52 Desktop-Ubuntu mopidy[8864]: tornado.websocket.WebSocketClosedError
okt 23 23:41:52 Desktop-Ubuntu mopidy[8864]:     raise WebSocketClosedError()
okt 23 23:41:52 Desktop-Ubuntu mopidy[8864]:   File "/usr/lib/python3/dist-packages/tornado/websocket.py", line 337, in write_message
okt 23 23:41:52 Desktop-Ubuntu mopidy[8864]:     connection["connection"].write_message(json_encode(message))
okt 23 23:41:52 Desktop-Ubuntu mopidy[8864]:   File "/home/gerard/App/Iris/mopidy_iris/core.py", line 236, in broadcast
okt 23 23:41:52 Desktop-Ubuntu mopidy[8864]:     self.broadcast(
okt 23 23:41:52 Desktop-Ubuntu mopidy[8864]:   File "/home/gerard/App/Iris/mopidy_iris/core.py", line 282, in add_connection
okt 23 23:41:52 Desktop-Ubuntu mopidy[8864]:     iris.add_connection(connection=self, client=client)
okt 23 23:41:52 Desktop-Ubuntu mopidy[8864]:   File "/home/gerard/App/Iris/mopidy_iris/handlers.py", line 48, in open
okt 23 23:41:52 Desktop-Ubuntu mopidy[8864]:     open_result = handler.open(*handler.open_args, **handler.open_kwargs)
okt 23 23:41:52 Desktop-Ubuntu mopidy[8864]:   File "/usr/lib/python3/dist-packages/tornado/websocket.py", line 954, in _accept_connection
okt 23 23:41:52 Desktop-Ubuntu mopidy[8864]: Traceback (most recent call last):
okt 23 23:41:52 Desktop-Ubuntu mopidy[8864]: HTTPServerRequest(protocol='http', host='localhost:6680', method='GET', uri='/iris/ws/', version='HTTP/1.1', remote_ip='127.0.0.1')
okt 23 23:41:52 Desktop-Ubuntu mopidy[8864]:   Uncaught exception GET /iris/ws/ (127.0.0.1)
okt 23 23:41:52 Desktop-Ubuntu mopidy[8864]: ERROR    2022-10-23 23:41:52,969 [8864:HttpServer] tornado.application
okt 23 23:41:52 Desktop-Ubuntu mopidy[8864]:   {'method': 'connection_added', 'params': {'connection': {'connection_id': 'XYR7SN7R3LVY', 'ip': '127.0.0.1', 'created': '2022-10-23 23:41:52'}}}
okt 23 23:41:52 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:41:52,968 [8864:HttpServer] mopidy_iris.core
okt 23 23:41:52 Desktop-Ubuntu mopidy[8864]:   <mopidy_iris.handlers.WebsocketHandler object at 0x7f9578065d20>
okt 23 23:41:52 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:41:52,968 [8864:HttpServer] mopidy_iris.core
okt 23 23:41:52 Desktop-Ubuntu mopidy[8864]:   Connection added
okt 23 23:41:52 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:41:52,968 [8864:HttpServer] mopidy_iris.core
okt 23 23:41:52 Desktop-Ubuntu mopidy[8864]:   101 GET /iris/ws/ (127.0.0.1) 0.51ms
okt 23 23:41:52 Desktop-Ubuntu mopidy[8864]: INFO     2022-10-23 23:41:52,967 [8864:HttpServer] tornado.access
okt 23 23:41:47 Desktop-Ubuntu mopidy[8864]: tornado.websocket.WebSocketClosedError
okt 23 23:41:47 Desktop-Ubuntu mopidy[8864]:     raise WebSocketClosedError()
okt 23 23:41:47 Desktop-Ubuntu mopidy[8864]:   File "/usr/lib/python3/dist-packages/tornado/websocket.py", line 337, in write_message
okt 23 23:41:47 Desktop-Ubuntu mopidy[8864]:     connection["connection"].write_message(json_encode(message))
okt 23 23:41:47 Desktop-Ubuntu mopidy[8864]:   File "/home/gerard/App/Iris/mopidy_iris/core.py", line 236, in broadcast
okt 23 23:41:47 Desktop-Ubuntu mopidy[8864]:     self.broadcast(
okt 23 23:41:47 Desktop-Ubuntu mopidy[8864]:   File "/home/gerard/App/Iris/mopidy_iris/core.py", line 282, in add_connection
okt 23 23:41:47 Desktop-Ubuntu mopidy[8864]:     iris.add_connection(connection=self, client=client)
okt 23 23:41:47 Desktop-Ubuntu mopidy[8864]:   File "/home/gerard/App/Iris/mopidy_iris/handlers.py", line 48, in open
okt 23 23:41:47 Desktop-Ubuntu mopidy[8864]:     open_result = handler.open(*handler.open_args, **handler.open_kwargs)
okt 23 23:41:47 Desktop-Ubuntu mopidy[8864]:   File "/usr/lib/python3/dist-packages/tornado/websocket.py", line 954, in _accept_connection
okt 23 23:41:47 Desktop-Ubuntu mopidy[8864]: Traceback (most recent call last):
okt 23 23:41:47 Desktop-Ubuntu mopidy[8864]: HTTPServerRequest(protocol='http', host='localhost:6680', method='GET', uri='/iris/ws/', version='HTTP/1.1', remote_ip='127.0.0.1')
okt 23 23:41:47 Desktop-Ubuntu mopidy[8864]:   Uncaught exception GET /iris/ws/ (127.0.0.1)
okt 23 23:41:47 Desktop-Ubuntu mopidy[8864]: ERROR    2022-10-23 23:41:47,851 [8864:HttpServer] tornado.application
okt 23 23:41:47 Desktop-Ubuntu mopidy[8864]:   {'method': 'connection_added', 'params': {'connection': {'connection_id': '5DDEQU4ZIRCC', 'ip': '127.0.0.1', 'created': '2022-10-23 23:41:47'}}}
okt 23 23:41:47 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:41:47,851 [8864:HttpServer] mopidy_iris.core
okt 23 23:41:47 Desktop-Ubuntu mopidy[8864]:   <mopidy_iris.handlers.WebsocketHandler object at 0x7f9578065a20>
okt 23 23:41:47 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:41:47,851 [8864:HttpServer] mopidy_iris.core
okt 23 23:41:47 Desktop-Ubuntu mopidy[8864]:   Connection added
okt 23 23:41:47 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:41:47,851 [8864:HttpServer] mopidy_iris.core
okt 23 23:41:47 Desktop-Ubuntu mopidy[8864]:   101 GET /iris/ws/ (127.0.0.1) 0.52ms
okt 23 23:41:47 Desktop-Ubuntu mopidy[8864]: INFO     2022-10-23 23:41:47,851 [8864:HttpServer] tornado.access
okt 23 23:41:42 Desktop-Ubuntu mopidy[8864]: tornado.websocket.WebSocketClosedError
okt 23 23:41:42 Desktop-Ubuntu mopidy[8864]:     raise WebSocketClosedError()
okt 23 23:41:42 Desktop-Ubuntu mopidy[8864]:   File "/usr/lib/python3/dist-packages/tornado/websocket.py", line 337, in write_message
okt 23 23:41:42 Desktop-Ubuntu mopidy[8864]:     connection["connection"].write_message(json_encode(message))
okt 23 23:41:42 Desktop-Ubuntu mopidy[8864]:   File "/home/gerard/App/Iris/mopidy_iris/core.py", line 236, in broadcast
okt 23 23:41:42 Desktop-Ubuntu mopidy[8864]:     self.broadcast(
okt 23 23:41:42 Desktop-Ubuntu mopidy[8864]:   File "/home/gerard/App/Iris/mopidy_iris/core.py", line 282, in add_connection
okt 23 23:41:42 Desktop-Ubuntu mopidy[8864]:     iris.add_connection(connection=self, client=client)
okt 23 23:41:42 Desktop-Ubuntu mopidy[8864]:   File "/home/gerard/App/Iris/mopidy_iris/handlers.py", line 48, in open
okt 23 23:41:42 Desktop-Ubuntu mopidy[8864]:     open_result = handler.open(*handler.open_args, **handler.open_kwargs)
okt 23 23:41:42 Desktop-Ubuntu mopidy[8864]:   File "/usr/lib/python3/dist-packages/tornado/websocket.py", line 954, in _accept_connection
okt 23 23:41:42 Desktop-Ubuntu mopidy[8864]: Traceback (most recent call last):
okt 23 23:41:42 Desktop-Ubuntu mopidy[8864]: HTTPServerRequest(protocol='http', host='localhost:6680', method='GET', uri='/iris/ws/', version='HTTP/1.1', remote_ip='127.0.0.1')
okt 23 23:41:42 Desktop-Ubuntu mopidy[8864]:   Uncaught exception GET /iris/ws/ (127.0.0.1)
okt 23 23:41:42 Desktop-Ubuntu mopidy[8864]: ERROR    2022-10-23 23:41:42,709 [8864:HttpServer] tornado.application
okt 23 23:41:42 Desktop-Ubuntu mopidy[8864]:   {'method': 'connection_added', 'params': {'connection': {'connection_id': 'OAJNPJPRNL7H', 'ip': '127.0.0.1', 'created': '2022-10-23 23:41:42'}}}
okt 23 23:41:42 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:41:42,709 [8864:HttpServer] mopidy_iris.core
okt 23 23:41:42 Desktop-Ubuntu mopidy[8864]:   <mopidy_iris.handlers.WebsocketHandler object at 0x7f9578065720>
okt 23 23:41:42 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:41:42,709 [8864:HttpServer] mopidy_iris.core
okt 23 23:41:42 Desktop-Ubuntu mopidy[8864]:   Connection added
okt 23 23:41:42 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:41:42,709 [8864:HttpServer] mopidy_iris.core
okt 23 23:41:42 Desktop-Ubuntu mopidy[8864]:   101 GET /iris/ws/ (127.0.0.1) 0.51ms
okt 23 23:41:42 Desktop-Ubuntu mopidy[8864]: INFO     2022-10-23 23:41:42,709 [8864:HttpServer] tornado.access
okt 23 23:41:37 Desktop-Ubuntu mopidy[8864]: tornado.websocket.WebSocketClosedError
okt 23 23:41:37 Desktop-Ubuntu mopidy[8864]:     raise WebSocketClosedError()
okt 23 23:41:37 Desktop-Ubuntu mopidy[8864]:   File "/usr/lib/python3/dist-packages/tornado/websocket.py", line 337, in write_message
okt 23 23:41:37 Desktop-Ubuntu mopidy[8864]:     connection["connection"].write_message(json_encode(message))
okt 23 23:41:37 Desktop-Ubuntu mopidy[8864]:   File "/home/gerard/App/Iris/mopidy_iris/core.py", line 236, in broadcast
okt 23 23:41:37 Desktop-Ubuntu mopidy[8864]:     self.broadcast(
okt 23 23:41:37 Desktop-Ubuntu mopidy[8864]:   File "/home/gerard/App/Iris/mopidy_iris/core.py", line 282, in add_connection
okt 23 23:41:37 Desktop-Ubuntu mopidy[8864]:     iris.add_connection(connection=self, client=client)
okt 23 23:41:37 Desktop-Ubuntu mopidy[8864]:   File "/home/gerard/App/Iris/mopidy_iris/handlers.py", line 48, in open
okt 23 23:41:37 Desktop-Ubuntu mopidy[8864]:     open_result = handler.open(*handler.open_args, **handler.open_kwargs)
okt 23 23:41:37 Desktop-Ubuntu mopidy[8864]:   File "/usr/lib/python3/dist-packages/tornado/websocket.py", line 954, in _accept_connection
okt 23 23:41:37 Desktop-Ubuntu mopidy[8864]: Traceback (most recent call last):
okt 23 23:41:37 Desktop-Ubuntu mopidy[8864]: HTTPServerRequest(protocol='http', host='localhost:6680', method='GET', uri='/iris/ws/', version='HTTP/1.1', remote_ip='127.0.0.1')
okt 23 23:41:37 Desktop-Ubuntu mopidy[8864]:   Uncaught exception GET /iris/ws/ (127.0.0.1)
okt 23 23:41:37 Desktop-Ubuntu mopidy[8864]: ERROR    2022-10-23 23:41:37,579 [8864:HttpServer] tornado.application
okt 23 23:41:37 Desktop-Ubuntu mopidy[8864]:   {'method': 'connection_added', 'params': {'connection': {'connection_id': 'PT6H9TEWJPZ2', 'ip': '127.0.0.1', 'created': '2022-10-23 23:41:37'}}}
okt 23 23:41:37 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:41:37,579 [8864:HttpServer] mopidy_iris.core
okt 23 23:41:37 Desktop-Ubuntu mopidy[8864]:   <mopidy_iris.handlers.WebsocketHandler object at 0x7f9578065420>
okt 23 23:41:37 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:41:37,579 [8864:HttpServer] mopidy_iris.core
okt 23 23:41:37 Desktop-Ubuntu mopidy[8864]:   Connection added
okt 23 23:41:37 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:41:37,579 [8864:HttpServer] mopidy_iris.core
okt 23 23:41:37 Desktop-Ubuntu mopidy[8864]:   101 GET /iris/ws/ (127.0.0.1) 0.51ms
okt 23 23:41:37 Desktop-Ubuntu mopidy[8864]: INFO     2022-10-23 23:41:37,579 [8864:HttpServer] tornado.access
okt 23 23:41:32 Desktop-Ubuntu mopidy[8864]: tornado.websocket.WebSocketClosedError
okt 23 23:41:32 Desktop-Ubuntu mopidy[8864]:     raise WebSocketClosedError()
okt 23 23:41:32 Desktop-Ubuntu mopidy[8864]:   File "/usr/lib/python3/dist-packages/tornado/websocket.py", line 337, in write_message
okt 23 23:41:32 Desktop-Ubuntu mopidy[8864]:     connection["connection"].write_message(json_encode(message))
okt 23 23:41:32 Desktop-Ubuntu mopidy[8864]:   File "/home/gerard/App/Iris/mopidy_iris/core.py", line 236, in broadcast
okt 23 23:41:32 Desktop-Ubuntu mopidy[8864]:     self.broadcast(
okt 23 23:41:32 Desktop-Ubuntu mopidy[8864]:   File "/home/gerard/App/Iris/mopidy_iris/core.py", line 282, in add_connection
okt 23 23:41:32 Desktop-Ubuntu mopidy[8864]:     iris.add_connection(connection=self, client=client)
okt 23 23:41:32 Desktop-Ubuntu mopidy[8864]:   File "/home/gerard/App/Iris/mopidy_iris/handlers.py", line 48, in open
okt 23 23:41:32 Desktop-Ubuntu mopidy[8864]:     open_result = handler.open(*handler.open_args, **handler.open_kwargs)
okt 23 23:41:32 Desktop-Ubuntu mopidy[8864]:   File "/usr/lib/python3/dist-packages/tornado/websocket.py", line 954, in _accept_connection
okt 23 23:41:32 Desktop-Ubuntu mopidy[8864]: Traceback (most recent call last):
okt 23 23:41:32 Desktop-Ubuntu mopidy[8864]: HTTPServerRequest(protocol='http', host='localhost:6680', method='GET', uri='/iris/ws/', version='HTTP/1.1', remote_ip='127.0.0.1')
okt 23 23:41:32 Desktop-Ubuntu mopidy[8864]:   Uncaught exception GET /iris/ws/ (127.0.0.1)
okt 23 23:41:32 Desktop-Ubuntu mopidy[8864]: ERROR    2022-10-23 23:41:32,445 [8864:HttpServer] tornado.application
okt 23 23:41:32 Desktop-Ubuntu mopidy[8864]:   {'method': 'connection_added', 'params': {'connection': {'connection_id': '2HRSLDIUBYET', 'ip': '127.0.0.1', 'created': '2022-10-23 23:41:32'}}}
okt 23 23:41:32 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:41:32,445 [8864:HttpServer] mopidy_iris.core
okt 23 23:41:32 Desktop-Ubuntu mopidy[8864]:   <mopidy_iris.handlers.WebsocketHandler object at 0x7f9578065120>
okt 23 23:41:32 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:41:32,445 [8864:HttpServer] mopidy_iris.core
okt 23 23:41:32 Desktop-Ubuntu mopidy[8864]:   Connection added
okt 23 23:41:32 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:41:32,445 [8864:HttpServer] mopidy_iris.core
okt 23 23:41:32 Desktop-Ubuntu mopidy[8864]:   101 GET /iris/ws/ (127.0.0.1) 0.50ms
okt 23 23:41:32 Desktop-Ubuntu mopidy[8864]: INFO     2022-10-23 23:41:32,444 [8864:HttpServer] tornado.access
okt 23 23:41:27 Desktop-Ubuntu mopidy[8864]: tornado.websocket.WebSocketClosedError
okt 23 23:41:27 Desktop-Ubuntu mopidy[8864]:     raise WebSocketClosedError()
okt 23 23:41:27 Desktop-Ubuntu mopidy[8864]:   File "/usr/lib/python3/dist-packages/tornado/websocket.py", line 337, in write_message
okt 23 23:41:27 Desktop-Ubuntu mopidy[8864]:     connection["connection"].write_message(json_encode(message))
okt 23 23:41:27 Desktop-Ubuntu mopidy[8864]:   File "/home/gerard/App/Iris/mopidy_iris/core.py", line 236, in broadcast
okt 23 23:41:27 Desktop-Ubuntu mopidy[8864]:     self.broadcast(
okt 23 23:41:27 Desktop-Ubuntu mopidy[8864]:   File "/home/gerard/App/Iris/mopidy_iris/core.py", line 282, in add_connection
okt 23 23:41:27 Desktop-Ubuntu mopidy[8864]:     iris.add_connection(connection=self, client=client)
okt 23 23:41:27 Desktop-Ubuntu mopidy[8864]:   File "/home/gerard/App/Iris/mopidy_iris/handlers.py", line 48, in open
okt 23 23:41:27 Desktop-Ubuntu mopidy[8864]:     open_result = handler.open(*handler.open_args, **handler.open_kwargs)
okt 23 23:41:27 Desktop-Ubuntu mopidy[8864]:   File "/usr/lib/python3/dist-packages/tornado/websocket.py", line 954, in _accept_connection
okt 23 23:41:27 Desktop-Ubuntu mopidy[8864]: Traceback (most recent call last):
okt 23 23:41:27 Desktop-Ubuntu mopidy[8864]: HTTPServerRequest(protocol='http', host='localhost:6680', method='GET', uri='/iris/ws/', version='HTTP/1.1', remote_ip='127.0.0.1')
okt 23 23:41:27 Desktop-Ubuntu mopidy[8864]:   Uncaught exception GET /iris/ws/ (127.0.0.1)
okt 23 23:41:27 Desktop-Ubuntu mopidy[8864]: ERROR    2022-10-23 23:41:27,328 [8864:HttpServer] tornado.application
okt 23 23:41:27 Desktop-Ubuntu mopidy[8864]:   {'method': 'connection_added', 'params': {'connection': {'connection_id': 'RFOH65O65T01', 'ip': '127.0.0.1', 'created': '2022-10-23 23:41:27'}}}
okt 23 23:41:27 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:41:27,328 [8864:HttpServer] mopidy_iris.core
okt 23 23:41:27 Desktop-Ubuntu mopidy[8864]:   <mopidy_iris.handlers.WebsocketHandler object at 0x7f9578064e20>
okt 23 23:41:27 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:41:27,328 [8864:HttpServer] mopidy_iris.core
okt 23 23:41:27 Desktop-Ubuntu mopidy[8864]:   Connection added
okt 23 23:41:27 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:41:27,328 [8864:HttpServer] mopidy_iris.core
okt 23 23:41:27 Desktop-Ubuntu mopidy[8864]:   101 GET /iris/ws/ (127.0.0.1) 0.51ms
okt 23 23:41:27 Desktop-Ubuntu mopidy[8864]: INFO     2022-10-23 23:41:27,327 [8864:HttpServer] tornado.access
okt 23 23:41:22 Desktop-Ubuntu mopidy[8864]: tornado.websocket.WebSocketClosedError
okt 23 23:41:22 Desktop-Ubuntu mopidy[8864]:     raise WebSocketClosedError()
okt 23 23:41:22 Desktop-Ubuntu mopidy[8864]:   File "/usr/lib/python3/dist-packages/tornado/websocket.py", line 337, in write_message
okt 23 23:41:22 Desktop-Ubuntu mopidy[8864]:     connection["connection"].write_message(json_encode(message))
okt 23 23:41:22 Desktop-Ubuntu mopidy[8864]:   File "/home/gerard/App/Iris/mopidy_iris/core.py", line 236, in broadcast
okt 23 23:41:22 Desktop-Ubuntu mopidy[8864]:     self.broadcast(
okt 23 23:41:22 Desktop-Ubuntu mopidy[8864]:   File "/home/gerard/App/Iris/mopidy_iris/core.py", line 282, in add_connection
okt 23 23:41:22 Desktop-Ubuntu mopidy[8864]:     iris.add_connection(connection=self, client=client)
okt 23 23:41:22 Desktop-Ubuntu mopidy[8864]:   File "/home/gerard/App/Iris/mopidy_iris/handlers.py", line 48, in open
okt 23 23:41:22 Desktop-Ubuntu mopidy[8864]:     open_result = handler.open(*handler.open_args, **handler.open_kwargs)
okt 23 23:41:22 Desktop-Ubuntu mopidy[8864]:   File "/usr/lib/python3/dist-packages/tornado/websocket.py", line 954, in _accept_connection
okt 23 23:41:22 Desktop-Ubuntu mopidy[8864]: Traceback (most recent call last):
okt 23 23:41:22 Desktop-Ubuntu mopidy[8864]: HTTPServerRequest(protocol='http', host='localhost:6680', method='GET', uri='/iris/ws/', version='HTTP/1.1', remote_ip='127.0.0.1')
okt 23 23:41:22 Desktop-Ubuntu mopidy[8864]:   Uncaught exception GET /iris/ws/ (127.0.0.1)
okt 23 23:41:22 Desktop-Ubuntu mopidy[8864]: ERROR    2022-10-23 23:41:22,211 [8864:HttpServer] tornado.application
okt 23 23:41:22 Desktop-Ubuntu mopidy[8864]:   {'method': 'connection_added', 'params': {'connection': {'connection_id': 'BH4FWH96SIXX', 'ip': '127.0.0.1', 'created': '2022-10-23 23:41:22'}}}
okt 23 23:41:22 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:41:22,211 [8864:HttpServer] mopidy_iris.core
okt 23 23:41:22 Desktop-Ubuntu mopidy[8864]:   <mopidy_iris.handlers.WebsocketHandler object at 0x7f9578064b20>
okt 23 23:41:22 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:41:22,211 [8864:HttpServer] mopidy_iris.core
okt 23 23:41:22 Desktop-Ubuntu mopidy[8864]:   Connection added
okt 23 23:41:22 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:41:22,211 [8864:HttpServer] mopidy_iris.core
okt 23 23:41:22 Desktop-Ubuntu mopidy[8864]:   101 GET /iris/ws/ (127.0.0.1) 0.50ms
okt 23 23:41:22 Desktop-Ubuntu mopidy[8864]: INFO     2022-10-23 23:41:22,211 [8864:HttpServer] tornado.access
okt 23 23:41:17 Desktop-Ubuntu mopidy[8864]: tornado.websocket.WebSocketClosedError
okt 23 23:41:17 Desktop-Ubuntu mopidy[8864]:     raise WebSocketClosedError()
okt 23 23:41:17 Desktop-Ubuntu mopidy[8864]:   File "/usr/lib/python3/dist-packages/tornado/websocket.py", line 337, in write_message
okt 23 23:41:17 Desktop-Ubuntu mopidy[8864]:     connection["connection"].write_message(json_encode(message))
okt 23 23:41:17 Desktop-Ubuntu mopidy[8864]:   File "/home/gerard/App/Iris/mopidy_iris/core.py", line 236, in broadcast
okt 23 23:41:17 Desktop-Ubuntu mopidy[8864]:     self.broadcast(
okt 23 23:41:17 Desktop-Ubuntu mopidy[8864]:   File "/home/gerard/App/Iris/mopidy_iris/core.py", line 282, in add_connection
okt 23 23:41:17 Desktop-Ubuntu mopidy[8864]:     iris.add_connection(connection=self, client=client)
okt 23 23:41:17 Desktop-Ubuntu mopidy[8864]:   File "/home/gerard/App/Iris/mopidy_iris/handlers.py", line 48, in open
okt 23 23:41:17 Desktop-Ubuntu mopidy[8864]:     open_result = handler.open(*handler.open_args, **handler.open_kwargs)
okt 23 23:41:17 Desktop-Ubuntu mopidy[8864]:   File "/usr/lib/python3/dist-packages/tornado/websocket.py", line 954, in _accept_connection
okt 23 23:41:17 Desktop-Ubuntu mopidy[8864]: Traceback (most recent call last):
okt 23 23:41:17 Desktop-Ubuntu mopidy[8864]: HTTPServerRequest(protocol='http', host='localhost:6680', method='GET', uri='/iris/ws/', version='HTTP/1.1', remote_ip='127.0.0.1')
okt 23 23:41:17 Desktop-Ubuntu mopidy[8864]:   Uncaught exception GET /iris/ws/ (127.0.0.1)
okt 23 23:41:17 Desktop-Ubuntu mopidy[8864]: ERROR    2022-10-23 23:41:17,072 [8864:HttpServer] tornado.application
okt 23 23:41:17 Desktop-Ubuntu mopidy[8864]:   {'method': 'connection_added', 'params': {'connection': {'connection_id': 'T3M0ZNSOLPA9', 'ip': '127.0.0.1', 'created': '2022-10-23 23:41:17'}}}
okt 23 23:41:17 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:41:17,072 [8864:HttpServer] mopidy_iris.core
okt 23 23:41:17 Desktop-Ubuntu mopidy[8864]:   <mopidy_iris.handlers.WebsocketHandler object at 0x7f9578064820>
okt 23 23:41:17 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:41:17,072 [8864:HttpServer] mopidy_iris.core
okt 23 23:41:17 Desktop-Ubuntu mopidy[8864]:   Connection added
okt 23 23:41:17 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:41:17,072 [8864:HttpServer] mopidy_iris.core
okt 23 23:41:17 Desktop-Ubuntu mopidy[8864]:   101 GET /iris/ws/ (127.0.0.1) 0.51ms
okt 23 23:41:17 Desktop-Ubuntu mopidy[8864]: INFO     2022-10-23 23:41:17,072 [8864:HttpServer] tornado.access
okt 23 23:41:11 Desktop-Ubuntu mopidy[8864]: tornado.websocket.WebSocketClosedError
okt 23 23:41:11 Desktop-Ubuntu mopidy[8864]:     raise WebSocketClosedError()
okt 23 23:41:11 Desktop-Ubuntu mopidy[8864]:   File "/usr/lib/python3/dist-packages/tornado/websocket.py", line 337, in write_message
okt 23 23:41:11 Desktop-Ubuntu mopidy[8864]:     connection["connection"].write_message(json_encode(message))
okt 23 23:41:11 Desktop-Ubuntu mopidy[8864]:   File "/home/gerard/App/Iris/mopidy_iris/core.py", line 236, in broadcast
okt 23 23:41:11 Desktop-Ubuntu mopidy[8864]:     self.broadcast(
okt 23 23:41:11 Desktop-Ubuntu mopidy[8864]:   File "/home/gerard/App/Iris/mopidy_iris/core.py", line 282, in add_connection
okt 23 23:41:11 Desktop-Ubuntu mopidy[8864]:     iris.add_connection(connection=self, client=client)
okt 23 23:41:11 Desktop-Ubuntu mopidy[8864]:   File "/home/gerard/App/Iris/mopidy_iris/handlers.py", line 48, in open
okt 23 23:41:11 Desktop-Ubuntu mopidy[8864]:     open_result = handler.open(*handler.open_args, **handler.open_kwargs)
okt 23 23:41:11 Desktop-Ubuntu mopidy[8864]:   File "/usr/lib/python3/dist-packages/tornado/websocket.py", line 954, in _accept_connection
okt 23 23:41:11 Desktop-Ubuntu mopidy[8864]: Traceback (most recent call last):
okt 23 23:41:11 Desktop-Ubuntu mopidy[8864]: HTTPServerRequest(protocol='http', host='localhost:6680', method='GET', uri='/iris/ws/', version='HTTP/1.1', remote_ip='127.0.0.1')
okt 23 23:41:11 Desktop-Ubuntu mopidy[8864]:   Uncaught exception GET /iris/ws/ (127.0.0.1)
okt 23 23:41:11 Desktop-Ubuntu mopidy[8864]: ERROR    2022-10-23 23:41:11,933 [8864:HttpServer] tornado.application
okt 23 23:41:11 Desktop-Ubuntu mopidy[8864]:   {'method': 'connection_added', 'params': {'connection': {'connection_id': '2LOOG3Y0UAU2', 'ip': '127.0.0.1', 'created': '2022-10-23 23:41:11'}}}
okt 23 23:41:11 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:41:11,933 [8864:HttpServer] mopidy_iris.core
okt 23 23:41:11 Desktop-Ubuntu mopidy[8864]:   <mopidy_iris.handlers.WebsocketHandler object at 0x7f9578064520>
okt 23 23:41:11 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:41:11,933 [8864:HttpServer] mopidy_iris.core
okt 23 23:41:11 Desktop-Ubuntu mopidy[8864]:   Connection added
okt 23 23:41:11 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:41:11,932 [8864:HttpServer] mopidy_iris.core
okt 23 23:41:11 Desktop-Ubuntu mopidy[8864]:   101 GET /iris/ws/ (127.0.0.1) 0.50ms
okt 23 23:41:11 Desktop-Ubuntu mopidy[8864]: INFO     2022-10-23 23:41:11,932 [8864:HttpServer] tornado.access
okt 23 23:41:06 Desktop-Ubuntu mopidy[8864]: tornado.websocket.WebSocketClosedError
okt 23 23:41:06 Desktop-Ubuntu mopidy[8864]:     raise WebSocketClosedError()
okt 23 23:41:06 Desktop-Ubuntu mopidy[8864]:   File "/usr/lib/python3/dist-packages/tornado/websocket.py", line 337, in write_message
okt 23 23:41:06 Desktop-Ubuntu mopidy[8864]:     connection["connection"].write_message(json_encode(message))
okt 23 23:41:06 Desktop-Ubuntu mopidy[8864]:   File "/home/gerard/App/Iris/mopidy_iris/core.py", line 236, in broadcast
okt 23 23:41:06 Desktop-Ubuntu mopidy[8864]:     self.broadcast(
okt 23 23:41:06 Desktop-Ubuntu mopidy[8864]:   File "/home/gerard/App/Iris/mopidy_iris/core.py", line 282, in add_connection
okt 23 23:41:06 Desktop-Ubuntu mopidy[8864]:     iris.add_connection(connection=self, client=client)
okt 23 23:41:06 Desktop-Ubuntu mopidy[8864]:   File "/home/gerard/App/Iris/mopidy_iris/handlers.py", line 48, in open
okt 23 23:41:06 Desktop-Ubuntu mopidy[8864]:     open_result = handler.open(*handler.open_args, **handler.open_kwargs)
okt 23 23:41:06 Desktop-Ubuntu mopidy[8864]:   File "/usr/lib/python3/dist-packages/tornado/websocket.py", line 954, in _accept_connection
okt 23 23:41:06 Desktop-Ubuntu mopidy[8864]: Traceback (most recent call last):
okt 23 23:41:06 Desktop-Ubuntu mopidy[8864]: HTTPServerRequest(protocol='http', host='localhost:6680', method='GET', uri='/iris/ws/', version='HTTP/1.1', remote_ip='127.0.0.1')
okt 23 23:41:06 Desktop-Ubuntu mopidy[8864]:   Uncaught exception GET /iris/ws/ (127.0.0.1)
okt 23 23:41:06 Desktop-Ubuntu mopidy[8864]: ERROR    2022-10-23 23:41:06,806 [8864:HttpServer] tornado.application
okt 23 23:41:06 Desktop-Ubuntu mopidy[8864]:   {'method': 'connection_added', 'params': {'connection': {'connection_id': 'ZC5WYFRA817C', 'ip': '127.0.0.1', 'created': '2022-10-23 23:41:06'}}}
okt 23 23:41:06 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:41:06,806 [8864:HttpServer] mopidy_iris.core
okt 23 23:41:06 Desktop-Ubuntu mopidy[8864]:   <mopidy_iris.handlers.WebsocketHandler object at 0x7f95780642b0>
okt 23 23:41:06 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:41:06,806 [8864:HttpServer] mopidy_iris.core
okt 23 23:41:06 Desktop-Ubuntu mopidy[8864]:   Connection added
okt 23 23:41:06 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:41:06,806 [8864:HttpServer] mopidy_iris.core
okt 23 23:41:06 Desktop-Ubuntu mopidy[8864]:   101 GET /iris/ws/ (127.0.0.1) 0.59ms
okt 23 23:41:06 Desktop-Ubuntu mopidy[8864]: INFO     2022-10-23 23:41:06,806 [8864:HttpServer] tornado.access
okt 23 23:41:01 Desktop-Ubuntu mopidy[8864]: tornado.websocket.WebSocketClosedError
okt 23 23:41:01 Desktop-Ubuntu mopidy[8864]:     raise WebSocketClosedError()
okt 23 23:41:01 Desktop-Ubuntu mopidy[8864]:   File "/usr/lib/python3/dist-packages/tornado/websocket.py", line 337, in write_message
okt 23 23:41:01 Desktop-Ubuntu mopidy[8864]:     connection["connection"].write_message(json_encode(message))
okt 23 23:41:01 Desktop-Ubuntu mopidy[8864]:   File "/home/gerard/App/Iris/mopidy_iris/core.py", line 236, in broadcast
okt 23 23:41:01 Desktop-Ubuntu mopidy[8864]:     self.broadcast(
okt 23 23:41:01 Desktop-Ubuntu mopidy[8864]:   File "/home/gerard/App/Iris/mopidy_iris/core.py", line 282, in add_connection
okt 23 23:41:01 Desktop-Ubuntu mopidy[8864]:     iris.add_connection(connection=self, client=client)
okt 23 23:41:01 Desktop-Ubuntu mopidy[8864]:   File "/home/gerard/App/Iris/mopidy_iris/handlers.py", line 48, in open
okt 23 23:41:01 Desktop-Ubuntu mopidy[8864]:     open_result = handler.open(*handler.open_args, **handler.open_kwargs)
okt 23 23:41:01 Desktop-Ubuntu mopidy[8864]:   File "/usr/lib/python3/dist-packages/tornado/websocket.py", line 954, in _accept_connection
okt 23 23:41:01 Desktop-Ubuntu mopidy[8864]: Traceback (most recent call last):
okt 23 23:41:01 Desktop-Ubuntu mopidy[8864]: HTTPServerRequest(protocol='http', host='localhost:6680', method='GET', uri='/iris/ws/', version='HTTP/1.1', remote_ip='127.0.0.1')
okt 23 23:41:01 Desktop-Ubuntu mopidy[8864]:   Uncaught exception GET /iris/ws/ (127.0.0.1)
okt 23 23:41:01 Desktop-Ubuntu mopidy[8864]: ERROR    2022-10-23 23:41:01,671 [8864:HttpServer] tornado.application
okt 23 23:41:01 Desktop-Ubuntu mopidy[8864]:   {'method': 'connection_added', 'params': {'connection': {'connection_id': '1GPRWOC2RZ60', 'ip': '127.0.0.1', 'created': '2022-10-23 23:41:01'}}}
okt 23 23:41:01 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:41:01,671 [8864:HttpServer] mopidy_iris.core
okt 23 23:41:01 Desktop-Ubuntu mopidy[8864]:   <mopidy_iris.handlers.WebsocketHandler object at 0x7f9578064070>
okt 23 23:41:01 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:41:01,671 [8864:HttpServer] mopidy_iris.core
okt 23 23:41:01 Desktop-Ubuntu mopidy[8864]:   Connection added
okt 23 23:41:01 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:41:01,671 [8864:HttpServer] mopidy_iris.core
okt 23 23:41:01 Desktop-Ubuntu mopidy[8864]:   101 GET /iris/ws/ (127.0.0.1) 0.84ms
okt 23 23:41:01 Desktop-Ubuntu mopidy[8864]: INFO     2022-10-23 23:41:01,670 [8864:HttpServer] tornado.access
okt 23 23:40:56 Desktop-Ubuntu mopidy[8864]: tornado.websocket.WebSocketClosedError
okt 23 23:40:56 Desktop-Ubuntu mopidy[8864]:     raise WebSocketClosedError()
okt 23 23:40:56 Desktop-Ubuntu mopidy[8864]:   File "/usr/lib/python3/dist-packages/tornado/websocket.py", line 337, in write_message
okt 23 23:40:56 Desktop-Ubuntu mopidy[8864]:     connection["connection"].write_message(json_encode(message))
okt 23 23:40:56 Desktop-Ubuntu mopidy[8864]:   File "/home/gerard/App/Iris/mopidy_iris/core.py", line 236, in broadcast
okt 23 23:40:56 Desktop-Ubuntu mopidy[8864]:     self.broadcast(
okt 23 23:40:56 Desktop-Ubuntu mopidy[8864]:   File "/home/gerard/App/Iris/mopidy_iris/core.py", line 282, in add_connection
okt 23 23:40:56 Desktop-Ubuntu mopidy[8864]:     iris.add_connection(connection=self, client=client)
okt 23 23:40:56 Desktop-Ubuntu mopidy[8864]:   File "/home/gerard/App/Iris/mopidy_iris/handlers.py", line 48, in open
okt 23 23:40:56 Desktop-Ubuntu mopidy[8864]:     open_result = handler.open(*handler.open_args, **handler.open_kwargs)
okt 23 23:40:56 Desktop-Ubuntu mopidy[8864]:   File "/usr/lib/python3/dist-packages/tornado/websocket.py", line 954, in _accept_connection
okt 23 23:40:56 Desktop-Ubuntu mopidy[8864]: Traceback (most recent call last):
okt 23 23:40:56 Desktop-Ubuntu mopidy[8864]: HTTPServerRequest(protocol='http', host='localhost:6680', method='GET', uri='/iris/ws/', version='HTTP/1.1', remote_ip='127.0.0.1')
okt 23 23:40:56 Desktop-Ubuntu mopidy[8864]:   Uncaught exception GET /iris/ws/ (127.0.0.1)
okt 23 23:40:56 Desktop-Ubuntu mopidy[8864]: ERROR    2022-10-23 23:40:56,553 [8864:HttpServer] tornado.application
okt 23 23:40:56 Desktop-Ubuntu mopidy[8864]:   {'method': 'connection_added', 'params': {'connection': {'connection_id': '0WVMM40WAO43', 'ip': '127.0.0.1', 'created': '2022-10-23 23:40:56'}}}
okt 23 23:40:56 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:40:56,553 [8864:HttpServer] mopidy_iris.core
okt 23 23:40:56 Desktop-Ubuntu mopidy[8864]:   <mopidy_iris.handlers.WebsocketHandler object at 0x7f9578210ac0>
okt 23 23:40:56 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:40:56,553 [8864:HttpServer] mopidy_iris.core
okt 23 23:40:56 Desktop-Ubuntu mopidy[8864]:   Connection added
okt 23 23:40:56 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:40:56,553 [8864:HttpServer] mopidy_iris.core
okt 23 23:40:56 Desktop-Ubuntu mopidy[8864]:   101 GET /iris/ws/ (127.0.0.1) 0.49ms
okt 23 23:40:56 Desktop-Ubuntu mopidy[8864]: INFO     2022-10-23 23:40:56,552 [8864:HttpServer] tornado.access
okt 23 23:40:51 Desktop-Ubuntu mopidy[8864]: tornado.websocket.WebSocketClosedError
okt 23 23:40:51 Desktop-Ubuntu mopidy[8864]:     raise WebSocketClosedError()
okt 23 23:40:51 Desktop-Ubuntu mopidy[8864]:   File "/usr/lib/python3/dist-packages/tornado/websocket.py", line 337, in write_message
okt 23 23:40:51 Desktop-Ubuntu mopidy[8864]:     connection["connection"].write_message(json_encode(message))
okt 23 23:40:51 Desktop-Ubuntu mopidy[8864]:   File "/home/gerard/App/Iris/mopidy_iris/core.py", line 236, in broadcast
okt 23 23:40:51 Desktop-Ubuntu mopidy[8864]:     self.broadcast(
okt 23 23:40:51 Desktop-Ubuntu mopidy[8864]:   File "/home/gerard/App/Iris/mopidy_iris/core.py", line 282, in add_connection
okt 23 23:40:51 Desktop-Ubuntu mopidy[8864]:     iris.add_connection(connection=self, client=client)
okt 23 23:40:51 Desktop-Ubuntu mopidy[8864]:   File "/home/gerard/App/Iris/mopidy_iris/handlers.py", line 48, in open
okt 23 23:40:51 Desktop-Ubuntu mopidy[8864]:     open_result = handler.open(*handler.open_args, **handler.open_kwargs)
okt 23 23:40:51 Desktop-Ubuntu mopidy[8864]:   File "/usr/lib/python3/dist-packages/tornado/websocket.py", line 954, in _accept_connection
okt 23 23:40:51 Desktop-Ubuntu mopidy[8864]: Traceback (most recent call last):
okt 23 23:40:51 Desktop-Ubuntu mopidy[8864]: HTTPServerRequest(protocol='http', host='localhost:6680', method='GET', uri='/iris/ws/', version='HTTP/1.1', remote_ip='127.0.0.1')
okt 23 23:40:51 Desktop-Ubuntu mopidy[8864]:   Uncaught exception GET /iris/ws/ (127.0.0.1)
okt 23 23:40:51 Desktop-Ubuntu mopidy[8864]: ERROR    2022-10-23 23:40:51,435 [8864:HttpServer] tornado.application
okt 23 23:40:51 Desktop-Ubuntu mopidy[8864]:   {'method': 'connection_added', 'params': {'connection': {'connection_id': 'RQ2YG8IZXCJR', 'ip': '127.0.0.1', 'created': '2022-10-23 23:40:51'}}}
okt 23 23:40:51 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:40:51,435 [8864:HttpServer] mopidy_iris.core
okt 23 23:40:51 Desktop-Ubuntu mopidy[8864]:   <mopidy_iris.handlers.WebsocketHandler object at 0x7f9578212a70>
okt 23 23:40:51 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:40:51,435 [8864:HttpServer] mopidy_iris.core
okt 23 23:40:51 Desktop-Ubuntu mopidy[8864]:   Connection added
okt 23 23:40:51 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:40:51,435 [8864:HttpServer] mopidy_iris.core
okt 23 23:40:51 Desktop-Ubuntu mopidy[8864]:   101 GET /iris/ws/ (127.0.0.1) 0.50ms
okt 23 23:40:51 Desktop-Ubuntu mopidy[8864]: INFO     2022-10-23 23:40:51,434 [8864:HttpServer] tornado.access
okt 23 23:40:46 Desktop-Ubuntu mopidy[8864]: tornado.websocket.WebSocketClosedError
okt 23 23:40:46 Desktop-Ubuntu mopidy[8864]:     raise WebSocketClosedError()
okt 23 23:40:46 Desktop-Ubuntu mopidy[8864]:   File "/usr/lib/python3/dist-packages/tornado/websocket.py", line 337, in write_message
okt 23 23:40:46 Desktop-Ubuntu mopidy[8864]:     connection["connection"].write_message(json_encode(message))
okt 23 23:40:46 Desktop-Ubuntu mopidy[8864]:   File "/home/gerard/App/Iris/mopidy_iris/core.py", line 236, in broadcast
okt 23 23:40:46 Desktop-Ubuntu mopidy[8864]:     self.broadcast(
okt 23 23:40:46 Desktop-Ubuntu mopidy[8864]:   File "/home/gerard/App/Iris/mopidy_iris/core.py", line 282, in add_connection
okt 23 23:40:46 Desktop-Ubuntu mopidy[8864]:     iris.add_connection(connection=self, client=client)
okt 23 23:40:46 Desktop-Ubuntu mopidy[8864]:   File "/home/gerard/App/Iris/mopidy_iris/handlers.py", line 48, in open
okt 23 23:40:46 Desktop-Ubuntu mopidy[8864]:     open_result = handler.open(*handler.open_args, **handler.open_kwargs)
okt 23 23:40:46 Desktop-Ubuntu mopidy[8864]:   File "/usr/lib/python3/dist-packages/tornado/websocket.py", line 954, in _accept_connection
okt 23 23:40:46 Desktop-Ubuntu mopidy[8864]: Traceback (most recent call last):
okt 23 23:40:46 Desktop-Ubuntu mopidy[8864]: HTTPServerRequest(protocol='http', host='localhost:6680', method='GET', uri='/iris/ws/', version='HTTP/1.1', remote_ip='127.0.0.1')
okt 23 23:40:46 Desktop-Ubuntu mopidy[8864]:   Uncaught exception GET /iris/ws/ (127.0.0.1)
okt 23 23:40:46 Desktop-Ubuntu mopidy[8864]: ERROR    2022-10-23 23:40:46,310 [8864:HttpServer] tornado.application
okt 23 23:40:46 Desktop-Ubuntu mopidy[8864]:   {'method': 'connection_added', 'params': {'connection': {'connection_id': '2NEF2BN0TOF3', 'ip': '127.0.0.1', 'created': '2022-10-23 23:40:46'}}}
okt 23 23:40:46 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:40:46,310 [8864:HttpServer] mopidy_iris.core
okt 23 23:40:46 Desktop-Ubuntu mopidy[8864]:   <mopidy_iris.handlers.WebsocketHandler object at 0x7f9578212f20>
okt 23 23:40:46 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:40:46,310 [8864:HttpServer] mopidy_iris.core
okt 23 23:40:46 Desktop-Ubuntu mopidy[8864]:   Connection added
okt 23 23:40:46 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:40:46,310 [8864:HttpServer] mopidy_iris.core
okt 23 23:40:46 Desktop-Ubuntu mopidy[8864]:   101 GET /iris/ws/ (127.0.0.1) 0.50ms
okt 23 23:40:46 Desktop-Ubuntu mopidy[8864]: INFO     2022-10-23 23:40:46,309 [8864:HttpServer] tornado.access
okt 23 23:40:41 Desktop-Ubuntu mopidy[8864]: tornado.websocket.WebSocketClosedError
okt 23 23:40:41 Desktop-Ubuntu mopidy[8864]:     raise WebSocketClosedError()
okt 23 23:40:41 Desktop-Ubuntu mopidy[8864]:   File "/usr/lib/python3/dist-packages/tornado/websocket.py", line 337, in write_message
okt 23 23:40:41 Desktop-Ubuntu mopidy[8864]:     connection["connection"].write_message(json_encode(message))
okt 23 23:40:41 Desktop-Ubuntu mopidy[8864]:   File "/home/gerard/App/Iris/mopidy_iris/core.py", line 236, in broadcast
okt 23 23:40:41 Desktop-Ubuntu mopidy[8864]:     self.broadcast(
okt 23 23:40:41 Desktop-Ubuntu mopidy[8864]:   File "/home/gerard/App/Iris/mopidy_iris/core.py", line 282, in add_connection
okt 23 23:40:41 Desktop-Ubuntu mopidy[8864]:     iris.add_connection(connection=self, client=client)
okt 23 23:40:41 Desktop-Ubuntu mopidy[8864]:   File "/home/gerard/App/Iris/mopidy_iris/handlers.py", line 48, in open
okt 23 23:40:41 Desktop-Ubuntu mopidy[8864]:     open_result = handler.open(*handler.open_args, **handler.open_kwargs)
okt 23 23:40:41 Desktop-Ubuntu mopidy[8864]:   File "/usr/lib/python3/dist-packages/tornado/websocket.py", line 954, in _accept_connection
okt 23 23:40:41 Desktop-Ubuntu mopidy[8864]: Traceback (most recent call last):
okt 23 23:40:41 Desktop-Ubuntu mopidy[8864]: HTTPServerRequest(protocol='http', host='localhost:6680', method='GET', uri='/iris/ws/', version='HTTP/1.1', remote_ip='127.0.0.1')
okt 23 23:40:41 Desktop-Ubuntu mopidy[8864]:   Uncaught exception GET /iris/ws/ (127.0.0.1)
okt 23 23:40:41 Desktop-Ubuntu mopidy[8864]: ERROR    2022-10-23 23:40:41,179 [8864:HttpServer] tornado.application
okt 23 23:40:41 Desktop-Ubuntu mopidy[8864]:   {'method': 'connection_added', 'params': {'connection': {'connection_id': '0UG8JTO3A9NE', 'ip': '127.0.0.1', 'created': '2022-10-23 23:40:41'}}}
okt 23 23:40:41 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:40:41,178 [8864:HttpServer] mopidy_iris.core
okt 23 23:40:41 Desktop-Ubuntu mopidy[8864]:   <mopidy_iris.handlers.WebsocketHandler object at 0x7f9578212770>
okt 23 23:40:41 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:40:41,178 [8864:HttpServer] mopidy_iris.core
okt 23 23:40:41 Desktop-Ubuntu mopidy[8864]:   Connection added
okt 23 23:40:41 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:40:41,178 [8864:HttpServer] mopidy_iris.core
okt 23 23:40:41 Desktop-Ubuntu mopidy[8864]:   101 GET /iris/ws/ (127.0.0.1) 0.51ms
okt 23 23:40:41 Desktop-Ubuntu mopidy[8864]: INFO     2022-10-23 23:40:41,178 [8864:HttpServer] tornado.access
okt 23 23:40:36 Desktop-Ubuntu mopidy[8864]: tornado.websocket.WebSocketClosedError
okt 23 23:40:36 Desktop-Ubuntu mopidy[8864]:     raise WebSocketClosedError()
okt 23 23:40:36 Desktop-Ubuntu mopidy[8864]:   File "/usr/lib/python3/dist-packages/tornado/websocket.py", line 337, in write_message
okt 23 23:40:36 Desktop-Ubuntu mopidy[8864]:     connection["connection"].write_message(json_encode(message))
okt 23 23:40:36 Desktop-Ubuntu mopidy[8864]:   File "/home/gerard/App/Iris/mopidy_iris/core.py", line 236, in broadcast
okt 23 23:40:36 Desktop-Ubuntu mopidy[8864]:     self.broadcast(
okt 23 23:40:36 Desktop-Ubuntu mopidy[8864]:   File "/home/gerard/App/Iris/mopidy_iris/core.py", line 282, in add_connection
okt 23 23:40:36 Desktop-Ubuntu mopidy[8864]:     iris.add_connection(connection=self, client=client)
okt 23 23:40:36 Desktop-Ubuntu mopidy[8864]:   File "/home/gerard/App/Iris/mopidy_iris/handlers.py", line 48, in open
okt 23 23:40:36 Desktop-Ubuntu mopidy[8864]:     open_result = handler.open(*handler.open_args, **handler.open_kwargs)
okt 23 23:40:36 Desktop-Ubuntu mopidy[8864]:   File "/usr/lib/python3/dist-packages/tornado/websocket.py", line 954, in _accept_connection
okt 23 23:40:36 Desktop-Ubuntu mopidy[8864]: Traceback (most recent call last):
okt 23 23:40:36 Desktop-Ubuntu mopidy[8864]: HTTPServerRequest(protocol='http', host='localhost:6680', method='GET', uri='/iris/ws/', version='HTTP/1.1', remote_ip='127.0.0.1')
okt 23 23:40:36 Desktop-Ubuntu mopidy[8864]:   Uncaught exception GET /iris/ws/ (127.0.0.1)
okt 23 23:40:36 Desktop-Ubuntu mopidy[8864]: ERROR    2022-10-23 23:40:36,049 [8864:HttpServer] tornado.application
okt 23 23:40:36 Desktop-Ubuntu mopidy[8864]:   {'method': 'connection_added', 'params': {'connection': {'connection_id': 'DLNK401VGA8U', 'ip': '127.0.0.1', 'created': '2022-10-23 23:40:36'}}}
okt 23 23:40:36 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:40:36,048 [8864:HttpServer] mopidy_iris.core
okt 23 23:40:36 Desktop-Ubuntu mopidy[8864]:   <mopidy_iris.handlers.WebsocketHandler object at 0x7f9578212080>
okt 23 23:40:36 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:40:36,048 [8864:HttpServer] mopidy_iris.core
okt 23 23:40:36 Desktop-Ubuntu mopidy[8864]:   Connection added
okt 23 23:40:36 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:40:36,048 [8864:HttpServer] mopidy_iris.core
okt 23 23:40:36 Desktop-Ubuntu mopidy[8864]:   101 GET /iris/ws/ (127.0.0.1) 0.50ms
okt 23 23:40:36 Desktop-Ubuntu mopidy[8864]: INFO     2022-10-23 23:40:36,048 [8864:HttpServer] tornado.access
okt 23 23:40:30 Desktop-Ubuntu mopidy[8864]: tornado.websocket.WebSocketClosedError
okt 23 23:40:30 Desktop-Ubuntu mopidy[8864]:     raise WebSocketClosedError()
okt 23 23:40:30 Desktop-Ubuntu mopidy[8864]:   File "/usr/lib/python3/dist-packages/tornado/websocket.py", line 337, in write_message
okt 23 23:40:30 Desktop-Ubuntu mopidy[8864]:     connection["connection"].write_message(json_encode(message))
okt 23 23:40:30 Desktop-Ubuntu mopidy[8864]:   File "/home/gerard/App/Iris/mopidy_iris/core.py", line 236, in broadcast
okt 23 23:40:30 Desktop-Ubuntu mopidy[8864]:     self.broadcast(
okt 23 23:40:30 Desktop-Ubuntu mopidy[8864]:   File "/home/gerard/App/Iris/mopidy_iris/core.py", line 282, in add_connection
okt 23 23:40:30 Desktop-Ubuntu mopidy[8864]:     iris.add_connection(connection=self, client=client)
okt 23 23:40:30 Desktop-Ubuntu mopidy[8864]:   File "/home/gerard/App/Iris/mopidy_iris/handlers.py", line 48, in open
okt 23 23:40:30 Desktop-Ubuntu mopidy[8864]:     open_result = handler.open(*handler.open_args, **handler.open_kwargs)
okt 23 23:40:30 Desktop-Ubuntu mopidy[8864]:   File "/usr/lib/python3/dist-packages/tornado/websocket.py", line 954, in _accept_connection
okt 23 23:40:30 Desktop-Ubuntu mopidy[8864]: Traceback (most recent call last):
okt 23 23:40:30 Desktop-Ubuntu mopidy[8864]: HTTPServerRequest(protocol='http', host='localhost:6680', method='GET', uri='/iris/ws/', version='HTTP/1.1', remote_ip='127.0.0.1')
okt 23 23:40:30 Desktop-Ubuntu mopidy[8864]:   Uncaught exception GET /iris/ws/ (127.0.0.1)
okt 23 23:40:30 Desktop-Ubuntu mopidy[8864]: ERROR    2022-10-23 23:40:30,911 [8864:HttpServer] tornado.application
okt 23 23:40:30 Desktop-Ubuntu mopidy[8864]:   {'method': 'connection_added', 'params': {'connection': {'connection_id': 'QINZPK2VJ96E', 'ip': '127.0.0.1', 'created': '2022-10-23 23:40:30'}}}
okt 23 23:40:30 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:40:30,911 [8864:HttpServer] mopidy_iris.core
okt 23 23:40:30 Desktop-Ubuntu mopidy[8864]:   <mopidy_iris.handlers.WebsocketHandler object at 0x7f9578212050>
okt 23 23:40:30 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:40:30,911 [8864:HttpServer] mopidy_iris.core
okt 23 23:40:30 Desktop-Ubuntu mopidy[8864]:   Connection added
okt 23 23:40:30 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:40:30,911 [8864:HttpServer] mopidy_iris.core
okt 23 23:40:30 Desktop-Ubuntu mopidy[8864]:   101 GET /iris/ws/ (127.0.0.1) 0.50ms
okt 23 23:40:30 Desktop-Ubuntu mopidy[8864]: INFO     2022-10-23 23:40:30,911 [8864:HttpServer] tornado.access
okt 23 23:40:25 Desktop-Ubuntu mopidy[8864]: tornado.websocket.WebSocketClosedError
okt 23 23:40:25 Desktop-Ubuntu mopidy[8864]:     raise WebSocketClosedError()
okt 23 23:40:25 Desktop-Ubuntu mopidy[8864]:   File "/usr/lib/python3/dist-packages/tornado/websocket.py", line 337, in write_message
okt 23 23:40:25 Desktop-Ubuntu mopidy[8864]:     connection["connection"].write_message(json_encode(message))
okt 23 23:40:25 Desktop-Ubuntu mopidy[8864]:   File "/home/gerard/App/Iris/mopidy_iris/core.py", line 236, in broadcast
okt 23 23:40:25 Desktop-Ubuntu mopidy[8864]:     self.broadcast(
okt 23 23:40:25 Desktop-Ubuntu mopidy[8864]:   File "/home/gerard/App/Iris/mopidy_iris/core.py", line 282, in add_connection
okt 23 23:40:25 Desktop-Ubuntu mopidy[8864]:     iris.add_connection(connection=self, client=client)
okt 23 23:40:25 Desktop-Ubuntu mopidy[8864]:   File "/home/gerard/App/Iris/mopidy_iris/handlers.py", line 48, in open
okt 23 23:40:25 Desktop-Ubuntu mopidy[8864]:     open_result = handler.open(*handler.open_args, **handler.open_kwargs)
okt 23 23:40:25 Desktop-Ubuntu mopidy[8864]:   File "/usr/lib/python3/dist-packages/tornado/websocket.py", line 954, in _accept_connection
okt 23 23:40:25 Desktop-Ubuntu mopidy[8864]: Traceback (most recent call last):
okt 23 23:40:25 Desktop-Ubuntu mopidy[8864]: HTTPServerRequest(protocol='http', host='localhost:6680', method='GET', uri='/iris/ws/', version='HTTP/1.1', remote_ip='127.0.0.1')
okt 23 23:40:25 Desktop-Ubuntu mopidy[8864]:   Uncaught exception GET /iris/ws/ (127.0.0.1)
okt 23 23:40:25 Desktop-Ubuntu mopidy[8864]: ERROR    2022-10-23 23:40:25,776 [8864:HttpServer] tornado.application
okt 23 23:40:25 Desktop-Ubuntu mopidy[8864]:   {'method': 'connection_added', 'params': {'connection': {'connection_id': 'KHX3O12Z0Y2T', 'ip': '127.0.0.1', 'created': '2022-10-23 23:40:25'}}}
okt 23 23:40:25 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:40:25,776 [8864:HttpServer] mopidy_iris.core
okt 23 23:40:25 Desktop-Ubuntu mopidy[8864]:   <mopidy_iris.handlers.WebsocketHandler object at 0x7f9578213850>
okt 23 23:40:25 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:40:25,776 [8864:HttpServer] mopidy_iris.core
okt 23 23:40:25 Desktop-Ubuntu mopidy[8864]:   Connection added
okt 23 23:40:25 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:40:25,775 [8864:HttpServer] mopidy_iris.core
okt 23 23:40:25 Desktop-Ubuntu mopidy[8864]:   101 GET /iris/ws/ (127.0.0.1) 0.51ms
okt 23 23:40:25 Desktop-Ubuntu mopidy[8864]: INFO     2022-10-23 23:40:25,775 [8864:HttpServer] tornado.access
okt 23 23:40:20 Desktop-Ubuntu mopidy[8864]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 23, "result": null}'
okt 23 23:40:20 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:40:20,844 [8864:HttpServer] mopidy.http.handlers
okt 23 23:40:20 Desktop-Ubuntu mopidy[8864]:   Received WebSocket message from 127.0.0.1: '{"method":"core.playback.get_stream_title","params":{},"jsonrpc":"2.0","id":23}'
okt 23 23:40:20 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:40:20,844 [8864:HttpServer] mopidy.http.handlers
okt 23 23:40:20 Desktop-Ubuntu mopidy[8864]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 22, "result": ["file", "http", "https", "m3u", "rtsp"]}'
okt 23 23:40:20 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:40:20,841 [8864:HttpServer] mopidy.http.handlers
okt 23 23:40:20 Desktop-Ubuntu mopidy[8864]:   Received WebSocket message from 127.0.0.1: '{"method":"core.get_uri_schemes","params":{},"jsonrpc":"2.0","id":22}'
okt 23 23:40:20 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:40:20,840 [8864:HttpServer] mopidy.http.handlers
okt 23 23:40:20 Desktop-Ubuntu mopidy[8864]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 21, "result": 0}'
okt 23 23:40:20 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:40:20,837 [8864:HttpServer] mopidy.http.handlers
okt 23 23:40:20 Desktop-Ubuntu mopidy[8864]:   Received WebSocket message from 127.0.0.1: '{"method":"core.playback.get_time_position","params":{},"jsonrpc":"2.0","id":21}'
okt 23 23:40:20 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:40:20,837 [8864:HttpServer] mopidy.http.handlers
okt 23 23:40:20 Desktop-Ubuntu mopidy[8864]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 20, "result": [{"__model__": "TlTrack", "tlid": 3, "track": {"__model__": "Track", "uri": "file:///home/gerard/Music/test.mp3", "name": "Symphony No. 40 in G Minor, K. 550 - I. Molto Allegro", "artists": [{"__model__": "Artist", "name": "Czech National Symphony Orchestra"}], "album": {"__model__": "Album", "name": "Musopen Kickstarter Project", "artists": [{"__model__": "Artist", "name": "Czech National Symphony Orchestra"}]}, "composers": [{"__model__": "Artist", "name": "Wolfgang Amadeus Mozart"}], "genre": "Classical", "length": 358848}}, {"__model__": "TlTrack", "tlid": 2, "track": {"__model__": "Track", "uri": "file:///home/gerard/Music/test.mp3", "name": "Symphony No. 40 in G Minor, K. 550 - I. Molto Allegro", "artists": [{"__model__": "Artist", "name": "Czech National Symphony Orchestra"}], "album": {"__model__": "Album", "name": "Musopen Kickstarter Project", "artists": [{"__model__": "Artist", "name": "Czech National Symphony Orchestra"}]}, "composers": [{"__model__": "Artist", "name": "Wolfgang Amadeus Mozart"}], "genre": "Classical", "length": 358848}}, {"__model__": "TlTrack", "tlid": 1, "track": {"__model__": "Track", "uri": "file:///home/gerard/Music/test.mp3", "name": "Symphony No. 40 in G Minor, K. 550 - I. Molto Allegro", "artists": [{"__model__": "Artist", "name": "Czech National Symphony Orchestra"}], "album": {"__model__": "Album", "name": "Musopen Kickstarter Project", "artists": [{"__model__": "Artist", "name": "Czech National Symphony Orchestra"}]}, "composers": [{"__model__": "Artist", "name": "Wolfgang Amadeus Mozart"}], "genre": "Classical", "length": 358848}}]}'
okt 23 23:40:20 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:40:20,834 [8864:HttpServer] mopidy.http.handlers
okt 23 23:40:20 Desktop-Ubuntu mopidy[8864]:   Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_tl_tracks","params":{},"jsonrpc":"2.0","id":20}'
okt 23 23:40:20 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:40:20,833 [8864:HttpServer] mopidy.http.handlers
okt 23 23:40:20 Desktop-Ubuntu mopidy[8864]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 19, "result": false}'
okt 23 23:40:20 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:40:20,830 [8864:HttpServer] mopidy.http.handlers
okt 23 23:40:20 Desktop-Ubuntu mopidy[8864]:   Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_repeat","params":{},"jsonrpc":"2.0","id":19}'
okt 23 23:40:20 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:40:20,830 [8864:HttpServer] mopidy.http.handlers
okt 23 23:40:20 Desktop-Ubuntu mopidy[8864]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 18, "result": false}'
okt 23 23:40:20 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:40:20,827 [8864:HttpServer] mopidy.http.handlers
okt 23 23:40:20 Desktop-Ubuntu mopidy[8864]:   Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_random","params":{},"jsonrpc":"2.0","id":18}'
okt 23 23:40:20 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:40:20,826 [8864:HttpServer] mopidy.http.handlers
okt 23 23:40:20 Desktop-Ubuntu mopidy[8864]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 17, "result": false}'
okt 23 23:40:20 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:40:20,823 [8864:HttpServer] mopidy.http.handlers
okt 23 23:40:20 Desktop-Ubuntu mopidy[8864]:   Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_consume","params":{},"jsonrpc":"2.0","id":17}'
okt 23 23:40:20 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:40:20,823 [8864:HttpServer] mopidy.http.handlers
okt 23 23:40:20 Desktop-Ubuntu mopidy[8864]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 16, "result": false}'
okt 23 23:40:20 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:40:20,820 [8864:HttpServer] mopidy.http.handlers
okt 23 23:40:20 Desktop-Ubuntu mopidy[8864]:   Received WebSocket message from 127.0.0.1: '{"method":"core.mixer.get_mute","params":{},"jsonrpc":"2.0","id":16}'
okt 23 23:40:20 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:40:20,819 [8864:HttpServer] mopidy.http.handlers
okt 23 23:40:20 Desktop-Ubuntu mopidy[8864]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 15, "result": 100}'
okt 23 23:40:20 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:40:20,817 [8864:HttpServer] mopidy.http.handlers
okt 23 23:40:20 Desktop-Ubuntu mopidy[8864]:   Received WebSocket message from 127.0.0.1: '{"method":"core.mixer.get_volume","params":{},"jsonrpc":"2.0","id":15}'
okt 23 23:40:20 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:40:20,816 [8864:HttpServer] mopidy.http.handlers
okt 23 23:40:20 Desktop-Ubuntu mopidy[8864]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 14, "result": "stopped"}'
okt 23 23:40:20 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:40:20,813 [8864:HttpServer] mopidy.http.handlers
okt 23 23:40:20 Desktop-Ubuntu mopidy[8864]:   Received WebSocket message from 127.0.0.1: '{"method":"core.playback.get_state","params":{},"jsonrpc":"2.0","id":14}'
okt 23 23:40:20 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:40:20,813 [8864:HttpServer] mopidy.http.handlers
okt 23 23:40:20 Desktop-Ubuntu mopidy[8864]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 13, "result": null}'
okt 23 23:40:20 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:40:20,811 [8864:HttpServer] mopidy.http.handlers
okt 23 23:40:20 Desktop-Ubuntu mopidy[8864]:   Received WebSocket message from 127.0.0.1: '{"method":"core.playback.get_current_tl_track","params":{},"jsonrpc":"2.0","id":13}'
okt 23 23:40:20 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:40:20,810 [8864:HttpServer] mopidy.http.handlers
okt 23 23:40:20 Desktop-Ubuntu mopidy[8864]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 12, "result": {"core.get_uri_schemes": {"description": "Get list of URI schemes we can handle", "params": []}, "core.get_version": {"description": "Get version of the Mopidy core API", "params": []}, "core.history.get_history": {"description": "Get the track history.\\n\\nThe timestamps are milliseconds since epoch.\\n\\n:returns: the track history\\n:rtype: list of (timestamp, :class:`mopidy.models.Ref`) tuples", "params": []}, "core.history.get_length": {"description": "Get the number of tracks in the history.\\n\\n:returns: the history length\\n:rtype: int", "params": []}, "core.library.browse": {"description": "Browse directories and tracks at the given ``uri``.\\n\\n``uri`` is a string which represents some directory belonging to a\\nbackend. To get the intial root directories for backends pass\\n:class:`None` as the URI.\\n\\nReturns a list of :class:`mopidy.models.Ref` objects for the\\ndirectories and tracks at the given ``uri``.\\n\\nThe :class:`~mopidy.models.Ref` objects representing tracks keep the\\ntrack\'s original URI. A matching pair of objects can look like this::\\n\\n    Track(uri=\'dummy:/foo.mp3\', name=\'foo\', artists=..., album=...)\\n    Ref.track(uri=\'dummy:/foo.mp3\', name=\'foo\')\\n\\nThe :class:`~mopidy.models.Ref` objects representing directories have\\nbackend specific URIs. These are opaque values, so no one but the\\nbackend that created them should try and derive any meaning from them.\\nThe only valid exception to this is checking the scheme, as it is used\\nto route browse requests to the correct backend.\\n\\nFor example, the dummy library\'s ``/bar`` directory could be returned\\nlike this::\\n\\n    Ref.directory(uri=\'dummy:directory:/bar\', name=\'bar\')\\n\\n:param string uri: URI to browse\\n:rtype: list of :class:`mopidy.models.Ref`\\n\\n.. versionadded:: 0.18", "params": [{"name": "uri"}]}, "core.library.get_distinct": {"description": "List distinct values for a given field from the library.\\n\\nThis has mainly been added to support the list commands the MPD\\nprotocol supports in a more sane fashion. Other frontends are not\\nrecommended to use this method.\\n\\n:param string field: Any one of ``uri``, ``track_name``, ``album``,\\n    ``artist``, ``albumartist``, ``composer``, ``performer``,\\n    ``track_no``, ``genre``, ``date``, ``comment``, ``disc_no``,\\n    ``musicbrainz_albumid``, ``musicbrainz_artistid``, or\\n    ``musicbrainz_trackid``.\\n:param dict query: Query to use for limiting results, see\\n    :meth:`search` for details about the query format.\\n:rtype: set of values corresponding to the requested field type.\\n\\n.. versionadded:: 1.0", "params": [{"name": "field"}, {"name": "query", "default": null}]}, "core.library.get_images": {"description": "Lookup the images for the given URIs\\n\\nBackends can use this to return image URIs for any URI they know about\\nbe it tracks, albums, playlists. The lookup result is a dictionary\\nmapping the provided URIs to lists of images.\\n\\nUnknown URIs or URIs the corresponding backend couldn\'t find anything\\nfor will simply return an empty list for that URI.\\n\\n:param uris: list of URIs to find images for\\n:type uris: list of string\\n:rtype: {uri: tuple of :class:`mopidy.models.Image`}\\n\\n.. versionadded:: 1.0", "params": [{"name": "uris"}]}, "core.library.lookup": {"description": "Lookup the given URIs.\\n\\nIf the URI expands to multiple tracks, the returned list will contain\\nthem all.\\n\\n:param uris: track URIs\\n:type uris: list of string\\n:rtype: {uri: list of :class:`mopidy.models.Track`}", "params": [{"name": "uris"}]}, "core.library.refresh": {"description": "Refresh library. Limit to URI and below if an URI is given.\\n\\n:param uri: directory or track URI\\n:type uri: string", "params": [{"name": "uri", "default": null}]}, "core.library.search": {"description": "Search the library for tracks where ``field`` contains ``values``.\\n\\n``field`` can be one of ``uri``, ``track_name``, ``album``, ``artist``,\\n``albumartist``, ``composer``, ``performer``, ``track_no``, ``genre``,\\n``date``, ``comment``, ``disc_no``, ``musicbrainz_albumid``,\\n``musicbrainz_artistid``, ``musicbrainz_trackid`` or ``any``.\\n\\nIf ``uris`` is given, the search is limited to results from within the\\nURI roots. For example passing ``uris=[\'file:\']`` will limit the search\\nto the local backend.\\n\\nExamples::\\n\\n    # Returns results matching \'a\' in any backend\\n    search({\'any\': [\'a\']})\\n\\n    # Returns results matching artist \'xyz\' in any backend\\n    search({\'artist\': [\'xyz\']})\\n\\n    # Returns results matching \'a\' and \'b\' and artist \'xyz\' in any\\n    # backend\\n    search({\'any\': [\'a\', \'b\'], \'artist\': [\'xyz\']})\\n\\n    # Returns results matching \'a\' if within the given URI roots\\n    # \\"file:///media/music\\" and \\"spotify:\\"\\n    search({\'any\': [\'a\']}, uris=[\'file:///media/music\', \'spotify:\'])\\n\\n    # Returns results matching artist \'xyz\' and \'abc\' in any backend\\n    search({\'artist\': [\'xyz\', \'abc\']})\\n\\n:param query: one or more queries to search for\\n:type query: dict\\n:param uris: zero or more URI roots to limit the search to\\n:type uris: list of string or :class:`None`\\n:param exact: if the search should use exact matching\\n:type exact: :class:`bool`\\n:rtype: list of :class:`mopidy.models.SearchResult`\\n\\n.. versionadded:: 1.0\\n    The ``exact`` keyword argument.", "params": [{"name": "query"}, {"name": "uris", "default": null}, {"name": "exact", "default": false}]}, "core.mixer.get_mute": {"description": "Get mute state.\\n\\n:class:`True` if muted, :class:`False` unmuted, :class:`None` if\\nunknown.", "params": []}, "core.mixer.get_volume": {"description": "Get the volume.\\n\\nInteger in range [0..100] or :class:`None` if unknown.\\n\\nThe volume scale is linear.", "params": []}, "core.mixer.set_mute": {"description": "Set mute state.\\n\\n:class:`True` to mute, :class:`False` to unmute.\\n\\nReturns :class:`True` if call is successful, otherwise :class:`False`.", "params": [{"name": "mute"}]}, "core.mixer.set_volume": {"description": "Set the volume.\\n\\nThe volume is defined as an integer in range [0..100].\\n\\nThe volume scale is linear.\\n\\nReturns :class:`True` if call is successful, otherwise :class:`False`.", "params": [{"name": "volume"}]}, "core.playback.get_current_tl_track": {"description": "Get the currently playing or selected track.\\n\\nReturns a :class:`mopidy.models.TlTrack` or :class:`None`.", "params": []}, "core.playback.get_current_tlid": {"description": "Get the currently playing or selected TLID.\\n\\nExtracted from :meth:`get_current_tl_track` for convenience.\\n\\nReturns a :class:`int` or :class:`None`.\\n\\n.. versionadded:: 1.1", "params": []}, "core.playback.get_current_track": {"description": "Get the currently playing or selected track.\\n\\nExtracted from :meth:`get_current_tl_track` for convenience.\\n\\nReturns a :class:`mopidy.models.Track` or :class:`None`.", "params": []}, "core.playback.get_state": {"description": "Get The playback state.", "params": []}, "core.playback.get_stream_title": {"description": "Get the current stream title or :class:`None`.", "params": []}, "core.playback.get_time_position": {"description": "Get time position in milliseconds.", "params": []}, "core.playback.next": {"description": "Change to the next track.\\n\\nThe current playback state will be kept. If it was playing, playing\\nwill continue. If it was paused, it will still be paused, etc.", "params": []}, "core.playback.pause": {"description": "Pause playback.", "params": []}, "core.playback.play": {"description": "Play the given track, or if the given tl_track and tlid is\\n:class:`None`, play the currently active track.\\n\\nNote that the track **must** already be in the tracklist.\\n\\n.. deprecated:: 3.0\\n    The ``tl_track`` argument. Use ``tlid`` instead.\\n\\n:param tl_track: track to play\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:param tlid: TLID of the track to play\\n:type tlid: :class:`int` or :class:`None`", "params": [{"name": "tl_track", "default": null}, {"name": "tlid", "default": null}]}, "core.playback.previous": {"description": "Change to the previous track.\\n\\nThe current playback state will be kept. If it was playing, playing\\nwill continue. If it was paused, it will still be paused, etc.", "params": []}, "core.playback.resume": {"description": "If paused, resume playing the current track.", "params": []}, "core.playback.seek": {"description": "Seeks to time position given in milliseconds.\\n\\n:param time_position: time position in milliseconds\\n:type time_position: int\\n:rtype: :class:`True` if successful, else :class:`False`", "params": [{"name": "time_position"}]}, "core.playback.set_state": {"description": "Set the playback state.\\n\\nMust be :attr:`PLAYING`, :attr:`PAUSED`, or :attr:`STOPPED`.\\n\\nPossible states and transitions:\\n\\n.. digraph:: state_transitions\\n\\n    \\"STOPPED\\" -> \\"PLAYING\\" [ label=\\"play\\" ]\\n    \\"STOPPED\\" -> \\"PAUSED\\" [ label=\\"pause\\" ]\\n    \\"PLAYING\\" -> \\"STOPPED\\" [ label=\\"stop\\" ]\\n    \\"PLAYING\\" -> \\"PAUSED\\" [ label=\\"pause\\" ]\\n    \\"PLAYING\\" -> \\"PLAYING\\" [ label=\\"play\\" ]\\n    \\"PAUSED\\" -> \\"PLAYING\\" [ label=\\"resume\\" ]\\n    \\"PAUSED\\" -> \\"STOPPED\\" [ label=\\"stop\\" ]", "params": [{"name": "new_state"}]}, "core.playback.stop": {"description": "Stop playing.", "params": []}, "core.playlists.as_list": {"description": "Get a list of the currently available playlists.\\n\\nReturns a list of :class:`~mopidy.models.Ref` objects referring to the\\nplaylists. In other words, no information about the playlists\' content\\nis given.\\n\\n:rtype: list of :class:`mopidy.models.Ref`\\n\\n.. versionadded:: 1.0", "params": []}, "core.playlists.create": {"description": "Create a new playlist.\\n\\nIf ``uri_scheme`` matches an URI scheme handled by a current backend,\\nthat backend is asked to create the playlist. If ``uri_scheme`` is\\n:class:`None` or doesn\'t match a current backend, the first backend is\\nasked to create the playlist.\\n\\nAll new playlists must be created by calling this method, and **not**\\nby creating new instances of :class:`mopidy.models.Playlist`.\\n\\n:param name: name of the new playlist\\n:type name: string\\n:param uri_scheme: use the backend matching the URI scheme\\n:type uri_scheme: string\\n:rtype: :class:`mopidy.models.Playlist` or :class:`None`", "params": [{"name": "name"}, {"name": "uri_scheme", "default": null}]}, "core.playlists.delete": {"description": "Delete playlist identified by the URI.\\n\\nIf the URI doesn\'t match the URI schemes handled by the current\\nbackends, nothing happens.\\n\\nReturns :class:`True` if deleted, :class:`False` otherwise.\\n\\n:param uri: URI of the playlist to delete\\n:type uri: string\\n:rtype: :class:`bool`\\n\\n.. versionchanged:: 2.2\\n    Return type defined.", "params": [{"name": "uri"}]}, "core.playlists.get_items": {"description": "Get the items in a playlist specified by ``uri``.\\n\\nReturns a list of :class:`~mopidy.models.Ref` objects referring to the\\nplaylist\'s items.\\n\\nIf a playlist with the given ``uri`` doesn\'t exist, it returns\\n:class:`None`.\\n\\n:rtype: list of :class:`mopidy.models.Ref`, or :class:`None`\\n\\n.. versionadded:: 1.0", "params": [{"name": "uri"}]}, "core.playlists.get_uri_schemes": {"description": "Get the list of URI schemes that support playlists.\\n\\n:rtype: list of string\\n\\n.. versionadded:: 2.0", "params": []}, "core.playlists.lookup": {"description": "Lookup playlist with given URI in both the set of playlists and in any\\nother playlist sources. Returns :class:`None` if not found.\\n\\n:param uri: playlist URI\\n:type uri: string\\n:rtype: :class:`mopidy.models.Playlist` or :class:`None`", "params": [{"name": "uri"}]}, "core.playlists.refresh": {"description": "Refresh the playlists in :attr:`playlists`.\\n\\nIf ``uri_scheme`` is :class:`None`, all backends are asked to refresh.\\nIf ``uri_scheme`` is an URI scheme handled by a backend, only that\\nbackend is asked to refresh. If ``uri_scheme`` doesn\'t match any\\ncurrent backend, nothing happens.\\n\\n:param uri_scheme: limit to the backend matching the URI scheme\\n:type uri_scheme: string", "params": [{"name": "uri_scheme", "default": null}]}, "core.playlists.save": {"description": "Save the playlist.\\n\\nFor a playlist to be saveable, it must have the ``uri`` attribute set.\\nYou must not set the ``uri`` atribute yourself, but use playlist\\nobjects returned by :meth:`create` or retrieved from :attr:`playlists`,\\nwhich will always give you saveable playlists.\\n\\nThe method returns the saved playlist. The return playlist may differ\\nfrom the saved playlist. E.g. if the playlist name was changed, the\\nreturned playlist may have a different URI. The caller of this method\\nmust throw away the playlist sent to this method, and use the\\nreturned playlist instead.\\n\\nIf the playlist\'s URI isn\'t set or doesn\'t match the URI scheme of a\\ncurrent backend, nothing is done and :class:`None` is returned.\\n\\n:param playlist: the playlist\\n:type playlist: :class:`mopidy.models.Playlist`\\n:rtype: :class:`mopidy.models.Playlist` or :class:`None`", "params": [{"name": "playlist"}]}, "core.tracklist.add": {"description": "Add tracks to the tracklist.\\n\\nIf ``uris`` is given instead of ``tracks``, the URIs are\\nlooked up in the library and the resulting tracks are added to the\\ntracklist.\\n\\nIf ``at_position`` is given, the tracks are inserted at the given\\nposition in the tracklist. If ``at_position`` is not given, the tracks\\nare appended to the end of the tracklist.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.\\n\\n:param tracks: tracks to add\\n:type tracks: list of :class:`mopidy.models.Track` or :class:`None`\\n:param at_position: position in tracklist to add tracks\\n:type at_position: int or :class:`None`\\n:param uris: list of URIs for tracks to add\\n:type uris: list of string or :class:`None`\\n:rtype: list of :class:`mopidy.models.TlTrack`\\n\\n.. versionadded:: 1.0\\n    The ``uris`` argument.\\n\\n.. deprecated:: 1.0\\n    The ``tracks`` argument. Use ``uris``.", "params": [{"name": "tracks", "default": null}, {"name": "at_position", "default": null}, {"name": "uris", "default": null}]}, "core.tracklist.clear": {"description": "Clear the tracklist.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.", "params": []}, "core.tracklist.eot_track": {"description": "The track that will be played after the given track.\\n\\nNot necessarily the same track as :meth:`next_track`.\\n\\n.. deprecated:: 3.0\\n    Use :meth:`get_eot_tlid` instead.\\n\\n:param tl_track: the reference track\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:rtype: :class:`mopidy.models.TlTrack` or :class:`None`", "params": [{"name": "tl_track"}]}, "core.tracklist.filter": {"description": "Filter the tracklist by the given criteria.\\n\\nEach rule in the criteria consists of a model field and a list of\\nvalues to compare it against. If the model field matches any of the\\nvalues, it may be returned.\\n\\nOnly tracks that match all the given criteria are returned.\\n\\nExamples::\\n\\n    # Returns tracks with TLIDs 1, 2, 3, or 4 (tracklist ID)\\n    filter({\'tlid\': [1, 2, 3, 4]})\\n\\n    # Returns track with URIs \'xyz\' or \'abc\'\\n    filter({\'uri\': [\'xyz\', \'abc\']})\\n\\n    # Returns track with a matching TLIDs (1, 3 or 6) and a\\n    # matching URI (\'xyz\' or \'abc\')\\n    filter({\'tlid\': [1, 3, 6], \'uri\': [\'xyz\', \'abc\']})\\n\\n:param criteria: one or more rules to match by\\n:type criteria: dict, of (string, list) pairs\\n:rtype: list of :class:`mopidy.models.TlTrack`", "params": [{"name": "criteria"}]}, "core.tracklist.get_consume": {"description": "Get consume mode.\\n\\n:class:`True`\\n    Tracks are removed from the tracklist when they have been played.\\n:class:`False`\\n    Tracks are not removed from the tracklist.", "params": []}, "core.tracklist.get_eot_tlid": {"description": "The TLID of the track that will be played after the current track.\\n\\nNot necessarily the same TLID as returned by :meth:`get_next_tlid`.\\n\\n:rtype: :class:`int` or :class:`None`\\n\\n.. versionadded:: 1.1", "params": []}, "core.tracklist.get_length": {"description": "Get length of the tracklist.", "params": []}, "core.tracklist.get_next_tlid": {"description": "The tlid of the track that will be played if calling\\n:meth:`mopidy.core.PlaybackController.next()`.\\n\\nFor normal playback this is the next track in the tracklist. If repeat\\nis enabled the next track can loop around the tracklist. When random is\\nenabled this should be a random track, all tracks should be played once\\nbefore the tracklist repeats.\\n\\n:rtype: :class:`int` or :class:`None`\\n\\n.. versionadded:: 1.1", "params": []}, "core.tracklist.get_previous_tlid": {"description": "Returns the TLID of the track that will be played if calling\\n:meth:`mopidy.core.PlaybackController.previous()`.\\n\\nFor normal playback this is the previous track in the tracklist. If\\nrandom and/or consume is enabled it should return the current track\\ninstead.\\n\\n:rtype: :class:`int` or :class:`None`\\n\\n.. versionadded:: 1.1", "params": []}, "core.tracklist.get_random": {"description": "Get random mode.\\n\\n:class:`True`\\n    Tracks are selected at random from the tracklist.\\n:class:`False`\\n    Tracks are played in the order of the tracklist.", "params": []}, "core.tracklist.get_repeat": {"description": "Get repeat mode.\\n\\n:class:`True`\\n    The tracklist is played repeatedly.\\n:class:`False`\\n    The tracklist is played once.", "params": []}, "core.tracklist.get_single": {"description": "Get single mode.\\n\\n:class:`True`\\n    Playback is stopped after current song, unless in ``repeat`` mode.\\n:class:`False`\\n    Playback continues after current song.", "params": []}, "core.tracklist.get_tl_tracks": {"description": "Get tracklist as list of :class:`mopidy.models.TlTrack`.", "params": []}, "core.tracklist.get_tracks": {"description": "Get tracklist as list of :class:`mopidy.models.Track`.", "params": []}, "core.tracklist.get_version": {"description": "Get the tracklist version.\\n\\nInteger which is increased every time the tracklist is changed. Is not\\nreset before Mopidy is restarted.", "params": []}, "core.tracklist.index": {"description": "The position of the given track in the tracklist.\\n\\nIf neither *tl_track* or *tlid* is given we return the index of\\nthe currently playing track.\\n\\n:param tl_track: the track to find the index of\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:param tlid: TLID of the track to find the index of\\n:type tlid: :class:`int` or :class:`None`\\n:rtype: :class:`int` or :class:`None`\\n\\n.. versionadded:: 1.1\\n    The *tlid* parameter", "params": [{"name": "tl_track", "default": null}, {"name": "tlid", "default": null}]}, "core.tracklist.move": {"description": "Move the tracks in the slice ``[start:end]`` to ``to_position``.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.\\n\\n:param start: position of first track to move\\n:type start: int\\n:param end: position after last track to move\\n:type end: int\\n:param to_position: new position for the tracks\\n:type to_position: int", "params": [{"name": "start"}, {"name": "end"}, {"name": "to_position"}]}, "core.tracklist.next_track": {"description": "The track that will be played if calling\\n:meth:`mopidy.core.PlaybackController.next()`.\\n\\nFor normal playback this is the next track in the tracklist. If repeat\\nis enabled the next track can loop around the tracklist. When random is\\nenabled this should be a random track, all tracks should be played once\\nbefore the tracklist repeats.\\n\\n.. deprecated:: 3.0\\n    Use :meth:`get_next_tlid` instead.\\n\\n:param tl_track: the reference track\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:rtype: :class:`mopidy.models.TlTrack` or :class:`None`", "params": [{"name": "tl_track"}]}, "core.tracklist.previous_track": {"description": "Returns the track that will be played if calling\\n:meth:`mopidy.core.PlaybackController.previous()`.\\n\\nFor normal playback this is the previous track in the tracklist. If\\nrandom and/or consume is enabled it should return the current track\\ninstead.\\n\\n.. deprecated:: 3.0\\n    Use :meth:`get_previous_tlid` instead.\\n\\n:param tl_track: the reference track\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:rtype: :class:`mopidy.models.TlTrack` or :class:`None`", "params": [{"name": "tl_track"}]}, "core.tracklist.remove": {"description": "Remove the matching tracks from the tracklist.\\n\\nUses :meth:`filter()` to lookup the tracks to remove.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.\\n\\n:param criteria: one or more rules to match by\\n:type criteria: dict, of (string, list) pairs\\n:rtype: list of :class:`mopidy.models.TlTrack` that were removed", "params": [{"name": "criteria"}]}, "core.tracklist.set_consume": {"description": "Set consume mode.\\n\\n:class:`True`\\n    Tracks are removed from the tracklist when they have been played.\\n:class:`False`\\n    Tracks are not removed from the tracklist.", "params": [{"name": "value"}]}, "core.tracklist.set_random": {"description": "Set random mode.\\n\\n:class:`True`\\n    Tracks are selected at random from the tracklist.\\n:class:`False`\\n    Tracks are played in the order of the tracklist.", "params": [{"name": "value"}]}, "core.tracklist.set_repeat": {"description": "Set repeat mode.\\n\\nTo repeat a single track, set both ``repeat`` and ``single``.\\n\\n:class:`True`\\n    The tracklist is played repeatedly.\\n:class:`False`\\n    The tracklist is played once.", "params": [{"name": "value"}]}, "core.tracklist.set_single": {"description": "Set single mode.\\n\\n:class:`True`\\n    Playback is stopped after current song, unless in ``repeat`` mode.\\n:class:`False`\\n    Playback continues after current song.", "params": [{"name": "value"}]}, "core.tracklist.shuffle": {"description": "Shuffles the entire tracklist. If ``start`` and ``end`` is given only\\nshuffles the slice ``[start:end]``.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.\\n\\n:param start: position of first track to shuffle\\n:type start: int or :class:`None`\\n:param end: position after last track to shuffle\\n:type end: int or :class:`None`", "params": [{"name": "start", "default": null}, {"name": "end", "default": null}]}, "core.tracklist.slice": {"description": "Returns a slice of the tracklist, limited by the given start and end\\npositions.\\n\\n:param start: position of first track to include in slice\\n:type start: int\\n:param end: position after last track to include in slice\\n:type end: int\\n:rtype: :class:`mopidy.models.TlTrack`", "params": [{"name": "start"}, {"name": "end"}]}}}'
okt 23 23:40:20 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:40:20,670 [8864:HttpServer] mopidy.http.handlers
okt 23 23:40:20 Desktop-Ubuntu mopidy[8864]:   Received WebSocket message from 127.0.0.1: '{"method":"core.describe","jsonrpc":"2.0","id":12}'
okt 23 23:40:20 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:40:20,666 [8864:HttpServer] mopidy.http.handlers
okt 23 23:40:20 Desktop-Ubuntu mopidy[8864]: tornado.websocket.WebSocketClosedError
okt 23 23:40:20 Desktop-Ubuntu mopidy[8864]:     raise WebSocketClosedError()
okt 23 23:40:20 Desktop-Ubuntu mopidy[8864]:   File "/usr/lib/python3/dist-packages/tornado/websocket.py", line 337, in write_message
okt 23 23:40:20 Desktop-Ubuntu mopidy[8864]:     connection["connection"].write_message(json_encode(message))
okt 23 23:40:20 Desktop-Ubuntu mopidy[8864]:   File "/home/gerard/App/Iris/mopidy_iris/core.py", line 236, in broadcast
okt 23 23:40:20 Desktop-Ubuntu mopidy[8864]:     self.broadcast(
okt 23 23:40:20 Desktop-Ubuntu mopidy[8864]:   File "/home/gerard/App/Iris/mopidy_iris/core.py", line 282, in add_connection
okt 23 23:40:20 Desktop-Ubuntu mopidy[8864]:     iris.add_connection(connection=self, client=client)
okt 23 23:40:20 Desktop-Ubuntu mopidy[8864]:   File "/home/gerard/App/Iris/mopidy_iris/handlers.py", line 48, in open
okt 23 23:40:20 Desktop-Ubuntu mopidy[8864]:     open_result = handler.open(*handler.open_args, **handler.open_kwargs)
okt 23 23:40:20 Desktop-Ubuntu mopidy[8864]:   File "/usr/lib/python3/dist-packages/tornado/websocket.py", line 954, in _accept_connection
okt 23 23:40:20 Desktop-Ubuntu mopidy[8864]: Traceback (most recent call last):
okt 23 23:40:20 Desktop-Ubuntu mopidy[8864]: HTTPServerRequest(protocol='http', host='localhost:6680', method='GET', uri='/iris/ws/', version='HTTP/1.1', remote_ip='127.0.0.1')
okt 23 23:40:20 Desktop-Ubuntu mopidy[8864]:   Uncaught exception GET /iris/ws/ (127.0.0.1)
okt 23 23:40:20 Desktop-Ubuntu mopidy[8864]: ERROR    2022-10-23 23:40:20,582 [8864:HttpServer] tornado.application
okt 23 23:40:20 Desktop-Ubuntu mopidy[8864]:   {'method': 'connection_added', 'params': {'connection': {'connection_id': 'MT338J7LOENU', 'ip': '127.0.0.1', 'created': '2022-10-23 23:40:20'}}}
okt 23 23:40:20 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:40:20,582 [8864:HttpServer] mopidy_iris.core
okt 23 23:40:20 Desktop-Ubuntu mopidy[8864]:   <mopidy_iris.handlers.WebsocketHandler object at 0x7f9578210250>
okt 23 23:40:20 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:40:20,582 [8864:HttpServer] mopidy_iris.core
okt 23 23:40:20 Desktop-Ubuntu mopidy[8864]:   Connection added
okt 23 23:40:20 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:40:20,582 [8864:HttpServer] mopidy_iris.core
okt 23 23:40:20 Desktop-Ubuntu mopidy[8864]:   101 GET /iris/ws/ (127.0.0.1) 0.53ms
okt 23 23:40:20 Desktop-Ubuntu mopidy[8864]: INFO     2022-10-23 23:40:20,582 [8864:HttpServer] tornado.access
okt 23 23:40:20 Desktop-Ubuntu mopidy[8864]:   New WebSocket connection from 127.0.0.1
okt 23 23:40:20 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:40:20,570 [8864:HttpServer] mopidy.http.handlers
okt 23 23:40:20 Desktop-Ubuntu mopidy[8864]:   101 GET /mopidy/ws/ (127.0.0.1) 0.58ms
okt 23 23:40:20 Desktop-Ubuntu mopidy[8864]: INFO     2022-10-23 23:40:20,570 [8864:HttpServer] tornado.access
okt 23 23:40:20 Desktop-Ubuntu mopidy[8864]:   Closed WebSocket connection from 127.0.0.1
okt 23 23:40:20 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:40:20,562 [8864:HttpServer] mopidy.http.handlers
okt 23 23:40:17 Desktop-Ubuntu mopidy[8864]:   304 GET /iris/assets/favicon_paused.png (127.0.0.1) 0.57ms
okt 23 23:40:17 Desktop-Ubuntu mopidy[8864]: INFO     2022-10-23 23:40:17,612 [8864:HttpServer] tornado.access
okt 23 23:40:17 Desktop-Ubuntu mopidy[8864]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 11, "result": null}'
okt 23 23:40:17 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:40:17,523 [8864:HttpServer] mopidy.http.handlers
okt 23 23:40:17 Desktop-Ubuntu mopidy[8864]:   Received WebSocket message from 127.0.0.1: '{"method":"core.playback.get_stream_title","params":{},"jsonrpc":"2.0","id":11}'
okt 23 23:40:17 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:40:17,523 [8864:HttpServer] mopidy.http.handlers
okt 23 23:40:17 Desktop-Ubuntu mopidy[8864]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 10, "result": ["file", "http", "https", "m3u", "rtsp"]}'
okt 23 23:40:17 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:40:17,520 [8864:HttpServer] mopidy.http.handlers
okt 23 23:40:17 Desktop-Ubuntu mopidy[8864]:   Received WebSocket message from 127.0.0.1: '{"method":"core.get_uri_schemes","params":{},"jsonrpc":"2.0","id":10}'
okt 23 23:40:17 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:40:17,519 [8864:HttpServer] mopidy.http.handlers
okt 23 23:40:17 Desktop-Ubuntu mopidy[8864]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 9, "result": 0}'
okt 23 23:40:17 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:40:17,516 [8864:HttpServer] mopidy.http.handlers
okt 23 23:40:17 Desktop-Ubuntu mopidy[8864]:   Received WebSocket message from 127.0.0.1: '{"method":"core.playback.get_time_position","params":{},"jsonrpc":"2.0","id":9}'
okt 23 23:40:17 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:40:17,516 [8864:HttpServer] mopidy.http.handlers
okt 23 23:40:17 Desktop-Ubuntu mopidy[8864]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 8, "result": [{"__model__": "TlTrack", "tlid": 3, "track": {"__model__": "Track", "uri": "file:///home/gerard/Music/test.mp3", "name": "Symphony No. 40 in G Minor, K. 550 - I. Molto Allegro", "artists": [{"__model__": "Artist", "name": "Czech National Symphony Orchestra"}], "album": {"__model__": "Album", "name": "Musopen Kickstarter Project", "artists": [{"__model__": "Artist", "name": "Czech National Symphony Orchestra"}]}, "composers": [{"__model__": "Artist", "name": "Wolfgang Amadeus Mozart"}], "genre": "Classical", "length": 358848}}, {"__model__": "TlTrack", "tlid": 2, "track": {"__model__": "Track", "uri": "file:///home/gerard/Music/test.mp3", "name": "Symphony No. 40 in G Minor, K. 550 - I. Molto Allegro", "artists": [{"__model__": "Artist", "name": "Czech National Symphony Orchestra"}], "album": {"__model__": "Album", "name": "Musopen Kickstarter Project", "artists": [{"__model__": "Artist", "name": "Czech National Symphony Orchestra"}]}, "composers": [{"__model__": "Artist", "name": "Wolfgang Amadeus Mozart"}], "genre": "Classical", "length": 358848}}, {"__model__": "TlTrack", "tlid": 1, "track": {"__model__": "Track", "uri": "file:///home/gerard/Music/test.mp3", "name": "Symphony No. 40 in G Minor, K. 550 - I. Molto Allegro", "artists": [{"__model__": "Artist", "name": "Czech National Symphony Orchestra"}], "album": {"__model__": "Album", "name": "Musopen Kickstarter Project", "artists": [{"__model__": "Artist", "name": "Czech National Symphony Orchestra"}]}, "composers": [{"__model__": "Artist", "name": "Wolfgang Amadeus Mozart"}], "genre": "Classical", "length": 358848}}]}'
okt 23 23:40:17 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:40:17,513 [8864:HttpServer] mopidy.http.handlers
okt 23 23:40:17 Desktop-Ubuntu mopidy[8864]:   Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_tl_tracks","params":{},"jsonrpc":"2.0","id":8}'
okt 23 23:40:17 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:40:17,513 [8864:HttpServer] mopidy.http.handlers
okt 23 23:40:17 Desktop-Ubuntu mopidy[8864]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 7, "result": false}'
okt 23 23:40:17 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:40:17,510 [8864:HttpServer] mopidy.http.handlers
okt 23 23:40:17 Desktop-Ubuntu mopidy[8864]:   Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_repeat","params":{},"jsonrpc":"2.0","id":7}'
okt 23 23:40:17 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:40:17,509 [8864:HttpServer] mopidy.http.handlers
okt 23 23:40:17 Desktop-Ubuntu mopidy[8864]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 6, "result": false}'
okt 23 23:40:17 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:40:17,506 [8864:HttpServer] mopidy.http.handlers
okt 23 23:40:17 Desktop-Ubuntu mopidy[8864]:   Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_random","params":{},"jsonrpc":"2.0","id":6}'
okt 23 23:40:17 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:40:17,506 [8864:HttpServer] mopidy.http.handlers
okt 23 23:40:17 Desktop-Ubuntu mopidy[8864]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 5, "result": false}'
okt 23 23:40:17 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:40:17,503 [8864:HttpServer] mopidy.http.handlers
okt 23 23:40:17 Desktop-Ubuntu mopidy[8864]:   Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_consume","params":{},"jsonrpc":"2.0","id":5}'
okt 23 23:40:17 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:40:17,503 [8864:HttpServer] mopidy.http.handlers
okt 23 23:40:17 Desktop-Ubuntu mopidy[8864]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 4, "result": false}'
okt 23 23:40:17 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:40:17,500 [8864:HttpServer] mopidy.http.handlers
okt 23 23:40:17 Desktop-Ubuntu mopidy[8864]:   Received WebSocket message from 127.0.0.1: '{"method":"core.mixer.get_mute","params":{},"jsonrpc":"2.0","id":4}'
okt 23 23:40:17 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:40:17,500 [8864:HttpServer] mopidy.http.handlers
okt 23 23:40:17 Desktop-Ubuntu mopidy[8864]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 3, "result": 100}'
okt 23 23:40:17 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:40:17,497 [8864:HttpServer] mopidy.http.handlers
okt 23 23:40:17 Desktop-Ubuntu mopidy[8864]:   Received WebSocket message from 127.0.0.1: '{"method":"core.mixer.get_volume","params":{},"jsonrpc":"2.0","id":3}'
okt 23 23:40:17 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:40:17,496 [8864:HttpServer] mopidy.http.handlers
okt 23 23:40:17 Desktop-Ubuntu mopidy[8864]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 2, "result": "stopped"}'
okt 23 23:40:17 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:40:17,494 [8864:HttpServer] mopidy.http.handlers
okt 23 23:40:17 Desktop-Ubuntu mopidy[8864]:   Received WebSocket message from 127.0.0.1: '{"method":"core.playback.get_state","params":{},"jsonrpc":"2.0","id":2}'
okt 23 23:40:17 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:40:17,493 [8864:HttpServer] mopidy.http.handlers
okt 23 23:40:17 Desktop-Ubuntu mopidy[8864]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 1, "result": null}'
okt 23 23:40:17 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:40:17,491 [8864:HttpServer] mopidy.http.handlers
okt 23 23:40:17 Desktop-Ubuntu mopidy[8864]:   Received WebSocket message from 127.0.0.1: '{"method":"core.playback.get_current_tl_track","params":{},"jsonrpc":"2.0","id":1}'
okt 23 23:40:17 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:40:17,490 [8864:HttpServer] mopidy.http.handlers
okt 23 23:40:17 Desktop-Ubuntu mopidy[8864]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 0, "result": {"core.get_uri_schemes": {"description": "Get list of URI schemes we can handle", "params": []}, "core.get_version": {"description": "Get version of the Mopidy core API", "params": []}, "core.history.get_history": {"description": "Get the track history.\\n\\nThe timestamps are milliseconds since epoch.\\n\\n:returns: the track history\\n:rtype: list of (timestamp, :class:`mopidy.models.Ref`) tuples", "params": []}, "core.history.get_length": {"description": "Get the number of tracks in the history.\\n\\n:returns: the history length\\n:rtype: int", "params": []}, "core.library.browse": {"description": "Browse directories and tracks at the given ``uri``.\\n\\n``uri`` is a string which represents some directory belonging to a\\nbackend. To get the intial root directories for backends pass\\n:class:`None` as the URI.\\n\\nReturns a list of :class:`mopidy.models.Ref` objects for the\\ndirectories and tracks at the given ``uri``.\\n\\nThe :class:`~mopidy.models.Ref` objects representing tracks keep the\\ntrack\'s original URI. A matching pair of objects can look like this::\\n\\n    Track(uri=\'dummy:/foo.mp3\', name=\'foo\', artists=..., album=...)\\n    Ref.track(uri=\'dummy:/foo.mp3\', name=\'foo\')\\n\\nThe :class:`~mopidy.models.Ref` objects representing directories have\\nbackend specific URIs. These are opaque values, so no one but the\\nbackend that created them should try and derive any meaning from them.\\nThe only valid exception to this is checking the scheme, as it is used\\nto route browse requests to the correct backend.\\n\\nFor example, the dummy library\'s ``/bar`` directory could be returned\\nlike this::\\n\\n    Ref.directory(uri=\'dummy:directory:/bar\', name=\'bar\')\\n\\n:param string uri: URI to browse\\n:rtype: list of :class:`mopidy.models.Ref`\\n\\n.. versionadded:: 0.18", "params": [{"name": "uri"}]}, "core.library.get_distinct": {"description": "List distinct values for a given field from the library.\\n\\nThis has mainly been added to support the list commands the MPD\\nprotocol supports in a more sane fashion. Other frontends are not\\nrecommended to use this method.\\n\\n:param string field: Any one of ``uri``, ``track_name``, ``album``,\\n    ``artist``, ``albumartist``, ``composer``, ``performer``,\\n    ``track_no``, ``genre``, ``date``, ``comment``, ``disc_no``,\\n    ``musicbrainz_albumid``, ``musicbrainz_artistid``, or\\n    ``musicbrainz_trackid``.\\n:param dict query: Query to use for limiting results, see\\n    :meth:`search` for details about the query format.\\n:rtype: set of values corresponding to the requested field type.\\n\\n.. versionadded:: 1.0", "params": [{"name": "field"}, {"name": "query", "default": null}]}, "core.library.get_images": {"description": "Lookup the images for the given URIs\\n\\nBackends can use this to return image URIs for any URI they know about\\nbe it tracks, albums, playlists. The lookup result is a dictionary\\nmapping the provided URIs to lists of images.\\n\\nUnknown URIs or URIs the corresponding backend couldn\'t find anything\\nfor will simply return an empty list for that URI.\\n\\n:param uris: list of URIs to find images for\\n:type uris: list of string\\n:rtype: {uri: tuple of :class:`mopidy.models.Image`}\\n\\n.. versionadded:: 1.0", "params": [{"name": "uris"}]}, "core.library.lookup": {"description": "Lookup the given URIs.\\n\\nIf the URI expands to multiple tracks, the returned list will contain\\nthem all.\\n\\n:param uris: track URIs\\n:type uris: list of string\\n:rtype: {uri: list of :class:`mopidy.models.Track`}", "params": [{"name": "uris"}]}, "core.library.refresh": {"description": "Refresh library. Limit to URI and below if an URI is given.\\n\\n:param uri: directory or track URI\\n:type uri: string", "params": [{"name": "uri", "default": null}]}, "core.library.search": {"description": "Search the library for tracks where ``field`` contains ``values``.\\n\\n``field`` can be one of ``uri``, ``track_name``, ``album``, ``artist``,\\n``albumartist``, ``composer``, ``performer``, ``track_no``, ``genre``,\\n``date``, ``comment``, ``disc_no``, ``musicbrainz_albumid``,\\n``musicbrainz_artistid``, ``musicbrainz_trackid`` or ``any``.\\n\\nIf ``uris`` is given, the search is limited to results from within the\\nURI roots. For example passing ``uris=[\'file:\']`` will limit the search\\nto the local backend.\\n\\nExamples::\\n\\n    # Returns results matching \'a\' in any backend\\n    search({\'any\': [\'a\']})\\n\\n    # Returns results matching artist \'xyz\' in any backend\\n    search({\'artist\': [\'xyz\']})\\n\\n    # Returns results matching \'a\' and \'b\' and artist \'xyz\' in any\\n    # backend\\n    search({\'any\': [\'a\', \'b\'], \'artist\': [\'xyz\']})\\n\\n    # Returns results matching \'a\' if within the given URI roots\\n    # \\"file:///media/music\\" and \\"spotify:\\"\\n    search({\'any\': [\'a\']}, uris=[\'file:///media/music\', \'spotify:\'])\\n\\n    # Returns results matching artist \'xyz\' and \'abc\' in any backend\\n    search({\'artist\': [\'xyz\', \'abc\']})\\n\\n:param query: one or more queries to search for\\n:type query: dict\\n:param uris: zero or more URI roots to limit the search to\\n:type uris: list of string or :class:`None`\\n:param exact: if the search should use exact matching\\n:type exact: :class:`bool`\\n:rtype: list of :class:`mopidy.models.SearchResult`\\n\\n.. versionadded:: 1.0\\n    The ``exact`` keyword argument.", "params": [{"name": "query"}, {"name": "uris", "default": null}, {"name": "exact", "default": false}]}, "core.mixer.get_mute": {"description": "Get mute state.\\n\\n:class:`True` if muted, :class:`False` unmuted, :class:`None` if\\nunknown.", "params": []}, "core.mixer.get_volume": {"description": "Get the volume.\\n\\nInteger in range [0..100] or :class:`None` if unknown.\\n\\nThe volume scale is linear.", "params": []}, "core.mixer.set_mute": {"description": "Set mute state.\\n\\n:class:`True` to mute, :class:`False` to unmute.\\n\\nReturns :class:`True` if call is successful, otherwise :class:`False`.", "params": [{"name": "mute"}]}, "core.mixer.set_volume": {"description": "Set the volume.\\n\\nThe volume is defined as an integer in range [0..100].\\n\\nThe volume scale is linear.\\n\\nReturns :class:`True` if call is successful, otherwise :class:`False`.", "params": [{"name": "volume"}]}, "core.playback.get_current_tl_track": {"description": "Get the currently playing or selected track.\\n\\nReturns a :class:`mopidy.models.TlTrack` or :class:`None`.", "params": []}, "core.playback.get_current_tlid": {"description": "Get the currently playing or selected TLID.\\n\\nExtracted from :meth:`get_current_tl_track` for convenience.\\n\\nReturns a :class:`int` or :class:`None`.\\n\\n.. versionadded:: 1.1", "params": []}, "core.playback.get_current_track": {"description": "Get the currently playing or selected track.\\n\\nExtracted from :meth:`get_current_tl_track` for convenience.\\n\\nReturns a :class:`mopidy.models.Track` or :class:`None`.", "params": []}, "core.playback.get_state": {"description": "Get The playback state.", "params": []}, "core.playback.get_stream_title": {"description": "Get the current stream title or :class:`None`.", "params": []}, "core.playback.get_time_position": {"description": "Get time position in milliseconds.", "params": []}, "core.playback.next": {"description": "Change to the next track.\\n\\nThe current playback state will be kept. If it was playing, playing\\nwill continue. If it was paused, it will still be paused, etc.", "params": []}, "core.playback.pause": {"description": "Pause playback.", "params": []}, "core.playback.play": {"description": "Play the given track, or if the given tl_track and tlid is\\n:class:`None`, play the currently active track.\\n\\nNote that the track **must** already be in the tracklist.\\n\\n.. deprecated:: 3.0\\n    The ``tl_track`` argument. Use ``tlid`` instead.\\n\\n:param tl_track: track to play\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:param tlid: TLID of the track to play\\n:type tlid: :class:`int` or :class:`None`", "params": [{"name": "tl_track", "default": null}, {"name": "tlid", "default": null}]}, "core.playback.previous": {"description": "Change to the previous track.\\n\\nThe current playback state will be kept. If it was playing, playing\\nwill continue. If it was paused, it will still be paused, etc.", "params": []}, "core.playback.resume": {"description": "If paused, resume playing the current track.", "params": []}, "core.playback.seek": {"description": "Seeks to time position given in milliseconds.\\n\\n:param time_position: time position in milliseconds\\n:type time_position: int\\n:rtype: :class:`True` if successful, else :class:`False`", "params": [{"name": "time_position"}]}, "core.playback.set_state": {"description": "Set the playback state.\\n\\nMust be :attr:`PLAYING`, :attr:`PAUSED`, or :attr:`STOPPED`.\\n\\nPossible states and transitions:\\n\\n.. digraph:: state_transitions\\n\\n    \\"STOPPED\\" -> \\"PLAYING\\" [ label=\\"play\\" ]\\n    \\"STOPPED\\" -> \\"PAUSED\\" [ label=\\"pause\\" ]\\n    \\"PLAYING\\" -> \\"STOPPED\\" [ label=\\"stop\\" ]\\n    \\"PLAYING\\" -> \\"PAUSED\\" [ label=\\"pause\\" ]\\n    \\"PLAYING\\" -> \\"PLAYING\\" [ label=\\"play\\" ]\\n    \\"PAUSED\\" -> \\"PLAYING\\" [ label=\\"resume\\" ]\\n    \\"PAUSED\\" -> \\"STOPPED\\" [ label=\\"stop\\" ]", "params": [{"name": "new_state"}]}, "core.playback.stop": {"description": "Stop playing.", "params": []}, "core.playlists.as_list": {"description": "Get a list of the currently available playlists.\\n\\nReturns a list of :class:`~mopidy.models.Ref` objects referring to the\\nplaylists. In other words, no information about the playlists\' content\\nis given.\\n\\n:rtype: list of :class:`mopidy.models.Ref`\\n\\n.. versionadded:: 1.0", "params": []}, "core.playlists.create": {"description": "Create a new playlist.\\n\\nIf ``uri_scheme`` matches an URI scheme handled by a current backend,\\nthat backend is asked to create the playlist. If ``uri_scheme`` is\\n:class:`None` or doesn\'t match a current backend, the first backend is\\nasked to create the playlist.\\n\\nAll new playlists must be created by calling this method, and **not**\\nby creating new instances of :class:`mopidy.models.Playlist`.\\n\\n:param name: name of the new playlist\\n:type name: string\\n:param uri_scheme: use the backend matching the URI scheme\\n:type uri_scheme: string\\n:rtype: :class:`mopidy.models.Playlist` or :class:`None`", "params": [{"name": "name"}, {"name": "uri_scheme", "default": null}]}, "core.playlists.delete": {"description": "Delete playlist identified by the URI.\\n\\nIf the URI doesn\'t match the URI schemes handled by the current\\nbackends, nothing happens.\\n\\nReturns :class:`True` if deleted, :class:`False` otherwise.\\n\\n:param uri: URI of the playlist to delete\\n:type uri: string\\n:rtype: :class:`bool`\\n\\n.. versionchanged:: 2.2\\n    Return type defined.", "params": [{"name": "uri"}]}, "core.playlists.get_items": {"description": "Get the items in a playlist specified by ``uri``.\\n\\nReturns a list of :class:`~mopidy.models.Ref` objects referring to the\\nplaylist\'s items.\\n\\nIf a playlist with the given ``uri`` doesn\'t exist, it returns\\n:class:`None`.\\n\\n:rtype: list of :class:`mopidy.models.Ref`, or :class:`None`\\n\\n.. versionadded:: 1.0", "params": [{"name": "uri"}]}, "core.playlists.get_uri_schemes": {"description": "Get the list of URI schemes that support playlists.\\n\\n:rtype: list of string\\n\\n.. versionadded:: 2.0", "params": []}, "core.playlists.lookup": {"description": "Lookup playlist with given URI in both the set of playlists and in any\\nother playlist sources. Returns :class:`None` if not found.\\n\\n:param uri: playlist URI\\n:type uri: string\\n:rtype: :class:`mopidy.models.Playlist` or :class:`None`", "params": [{"name": "uri"}]}, "core.playlists.refresh": {"description": "Refresh the playlists in :attr:`playlists`.\\n\\nIf ``uri_scheme`` is :class:`None`, all backends are asked to refresh.\\nIf ``uri_scheme`` is an URI scheme handled by a backend, only that\\nbackend is asked to refresh. If ``uri_scheme`` doesn\'t match any\\ncurrent backend, nothing happens.\\n\\n:param uri_scheme: limit to the backend matching the URI scheme\\n:type uri_scheme: string", "params": [{"name": "uri_scheme", "default": null}]}, "core.playlists.save": {"description": "Save the playlist.\\n\\nFor a playlist to be saveable, it must have the ``uri`` attribute set.\\nYou must not set the ``uri`` atribute yourself, but use playlist\\nobjects returned by :meth:`create` or retrieved from :attr:`playlists`,\\nwhich will always give you saveable playlists.\\n\\nThe method returns the saved playlist. The return playlist may differ\\nfrom the saved playlist. E.g. if the playlist name was changed, the\\nreturned playlist may have a different URI. The caller of this method\\nmust throw away the playlist sent to this method, and use the\\nreturned playlist instead.\\n\\nIf the playlist\'s URI isn\'t set or doesn\'t match the URI scheme of a\\ncurrent backend, nothing is done and :class:`None` is returned.\\n\\n:param playlist: the playlist\\n:type playlist: :class:`mopidy.models.Playlist`\\n:rtype: :class:`mopidy.models.Playlist` or :class:`None`", "params": [{"name": "playlist"}]}, "core.tracklist.add": {"description": "Add tracks to the tracklist.\\n\\nIf ``uris`` is given instead of ``tracks``, the URIs are\\nlooked up in the library and the resulting tracks are added to the\\ntracklist.\\n\\nIf ``at_position`` is given, the tracks are inserted at the given\\nposition in the tracklist. If ``at_position`` is not given, the tracks\\nare appended to the end of the tracklist.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.\\n\\n:param tracks: tracks to add\\n:type tracks: list of :class:`mopidy.models.Track` or :class:`None`\\n:param at_position: position in tracklist to add tracks\\n:type at_position: int or :class:`None`\\n:param uris: list of URIs for tracks to add\\n:type uris: list of string or :class:`None`\\n:rtype: list of :class:`mopidy.models.TlTrack`\\n\\n.. versionadded:: 1.0\\n    The ``uris`` argument.\\n\\n.. deprecated:: 1.0\\n    The ``tracks`` argument. Use ``uris``.", "params": [{"name": "tracks", "default": null}, {"name": "at_position", "default": null}, {"name": "uris", "default": null}]}, "core.tracklist.clear": {"description": "Clear the tracklist.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.", "params": []}, "core.tracklist.eot_track": {"description": "The track that will be played after the given track.\\n\\nNot necessarily the same track as :meth:`next_track`.\\n\\n.. deprecated:: 3.0\\n    Use :meth:`get_eot_tlid` instead.\\n\\n:param tl_track: the reference track\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:rtype: :class:`mopidy.models.TlTrack` or :class:`None`", "params": [{"name": "tl_track"}]}, "core.tracklist.filter": {"description": "Filter the tracklist by the given criteria.\\n\\nEach rule in the criteria consists of a model field and a list of\\nvalues to compare it against. If the model field matches any of the\\nvalues, it may be returned.\\n\\nOnly tracks that match all the given criteria are returned.\\n\\nExamples::\\n\\n    # Returns tracks with TLIDs 1, 2, 3, or 4 (tracklist ID)\\n    filter({\'tlid\': [1, 2, 3, 4]})\\n\\n    # Returns track with URIs \'xyz\' or \'abc\'\\n    filter({\'uri\': [\'xyz\', \'abc\']})\\n\\n    # Returns track with a matching TLIDs (1, 3 or 6) and a\\n    # matching URI (\'xyz\' or \'abc\')\\n    filter({\'tlid\': [1, 3, 6], \'uri\': [\'xyz\', \'abc\']})\\n\\n:param criteria: one or more rules to match by\\n:type criteria: dict, of (string, list) pairs\\n:rtype: list of :class:`mopidy.models.TlTrack`", "params": [{"name": "criteria"}]}, "core.tracklist.get_consume": {"description": "Get consume mode.\\n\\n:class:`True`\\n    Tracks are removed from the tracklist when they have been played.\\n:class:`False`\\n    Tracks are not removed from the tracklist.", "params": []}, "core.tracklist.get_eot_tlid": {"description": "The TLID of the track that will be played after the current track.\\n\\nNot necessarily the same TLID as returned by :meth:`get_next_tlid`.\\n\\n:rtype: :class:`int` or :class:`None`\\n\\n.. versionadded:: 1.1", "params": []}, "core.tracklist.get_length": {"description": "Get length of the tracklist.", "params": []}, "core.tracklist.get_next_tlid": {"description": "The tlid of the track that will be played if calling\\n:meth:`mopidy.core.PlaybackController.next()`.\\n\\nFor normal playback this is the next track in the tracklist. If repeat\\nis enabled the next track can loop around the tracklist. When random is\\nenabled this should be a random track, all tracks should be played once\\nbefore the tracklist repeats.\\n\\n:rtype: :class:`int` or :class:`None`\\n\\n.. versionadded:: 1.1", "params": []}, "core.tracklist.get_previous_tlid": {"description": "Returns the TLID of the track that will be played if calling\\n:meth:`mopidy.core.PlaybackController.previous()`.\\n\\nFor normal playback this is the previous track in the tracklist. If\\nrandom and/or consume is enabled it should return the current track\\ninstead.\\n\\n:rtype: :class:`int` or :class:`None`\\n\\n.. versionadded:: 1.1", "params": []}, "core.tracklist.get_random": {"description": "Get random mode.\\n\\n:class:`True`\\n    Tracks are selected at random from the tracklist.\\n:class:`False`\\n    Tracks are played in the order of the tracklist.", "params": []}, "core.tracklist.get_repeat": {"description": "Get repeat mode.\\n\\n:class:`True`\\n    The tracklist is played repeatedly.\\n:class:`False`\\n    The tracklist is played once.", "params": []}, "core.tracklist.get_single": {"description": "Get single mode.\\n\\n:class:`True`\\n    Playback is stopped after current song, unless in ``repeat`` mode.\\n:class:`False`\\n    Playback continues after current song.", "params": []}, "core.tracklist.get_tl_tracks": {"description": "Get tracklist as list of :class:`mopidy.models.TlTrack`.", "params": []}, "core.tracklist.get_tracks": {"description": "Get tracklist as list of :class:`mopidy.models.Track`.", "params": []}, "core.tracklist.get_version": {"description": "Get the tracklist version.\\n\\nInteger which is increased every time the tracklist is changed. Is not\\nreset before Mopidy is restarted.", "params": []}, "core.tracklist.index": {"description": "The position of the given track in the tracklist.\\n\\nIf neither *tl_track* or *tlid* is given we return the index of\\nthe currently playing track.\\n\\n:param tl_track: the track to find the index of\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:param tlid: TLID of the track to find the index of\\n:type tlid: :class:`int` or :class:`None`\\n:rtype: :class:`int` or :class:`None`\\n\\n.. versionadded:: 1.1\\n    The *tlid* parameter", "params": [{"name": "tl_track", "default": null}, {"name": "tlid", "default": null}]}, "core.tracklist.move": {"description": "Move the tracks in the slice ``[start:end]`` to ``to_position``.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.\\n\\n:param start: position of first track to move\\n:type start: int\\n:param end: position after last track to move\\n:type end: int\\n:param to_position: new position for the tracks\\n:type to_position: int", "params": [{"name": "start"}, {"name": "end"}, {"name": "to_position"}]}, "core.tracklist.next_track": {"description": "The track that will be played if calling\\n:meth:`mopidy.core.PlaybackController.next()`.\\n\\nFor normal playback this is the next track in the tracklist. If repeat\\nis enabled the next track can loop around the tracklist. When random is\\nenabled this should be a random track, all tracks should be played once\\nbefore the tracklist repeats.\\n\\n.. deprecated:: 3.0\\n    Use :meth:`get_next_tlid` instead.\\n\\n:param tl_track: the reference track\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:rtype: :class:`mopidy.models.TlTrack` or :class:`None`", "params": [{"name": "tl_track"}]}, "core.tracklist.previous_track": {"description": "Returns the track that will be played if calling\\n:meth:`mopidy.core.PlaybackController.previous()`.\\n\\nFor normal playback this is the previous track in the tracklist. If\\nrandom and/or consume is enabled it should return the current track\\ninstead.\\n\\n.. deprecated:: 3.0\\n    Use :meth:`get_previous_tlid` instead.\\n\\n:param tl_track: the reference track\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:rtype: :class:`mopidy.models.TlTrack` or :class:`None`", "params": [{"name": "tl_track"}]}, "core.tracklist.remove": {"description": "Remove the matching tracks from the tracklist.\\n\\nUses :meth:`filter()` to lookup the tracks to remove.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.\\n\\n:param criteria: one or more rules to match by\\n:type criteria: dict, of (string, list) pairs\\n:rtype: list of :class:`mopidy.models.TlTrack` that were removed", "params": [{"name": "criteria"}]}, "core.tracklist.set_consume": {"description": "Set consume mode.\\n\\n:class:`True`\\n    Tracks are removed from the tracklist when they have been played.\\n:class:`False`\\n    Tracks are not removed from the tracklist.", "params": [{"name": "value"}]}, "core.tracklist.set_random": {"description": "Set random mode.\\n\\n:class:`True`\\n    Tracks are selected at random from the tracklist.\\n:class:`False`\\n    Tracks are played in the order of the tracklist.", "params": [{"name": "value"}]}, "core.tracklist.set_repeat": {"description": "Set repeat mode.\\n\\nTo repeat a single track, set both ``repeat`` and ``single``.\\n\\n:class:`True`\\n    The tracklist is played repeatedly.\\n:class:`False`\\n    The tracklist is played once.", "params": [{"name": "value"}]}, "core.tracklist.set_single": {"description": "Set single mode.\\n\\n:class:`True`\\n    Playback is stopped after current song, unless in ``repeat`` mode.\\n:class:`False`\\n    Playback continues after current song.", "params": [{"name": "value"}]}, "core.tracklist.shuffle": {"description": "Shuffles the entire tracklist. If ``start`` and ``end`` is given only\\nshuffles the slice ``[start:end]``.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.\\n\\n:param start: position of first track to shuffle\\n:type start: int or :class:`None`\\n:param end: position after last track to shuffle\\n:type end: int or :class:`None`", "params": [{"name": "start", "default": null}, {"name": "end", "default": null}]}, "core.tracklist.slice": {"description": "Returns a slice of the tracklist, limited by the given start and end\\npositions.\\n\\n:param start: position of first track to include in slice\\n:type start: int\\n:param end: position after last track to include in slice\\n:type end: int\\n:rtype: :class:`mopidy.models.TlTrack`", "params": [{"name": "start"}, {"name": "end"}]}}}'
okt 23 23:40:17 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:40:17,407 [8864:HttpServer] mopidy.http.handlers
okt 23 23:40:17 Desktop-Ubuntu mopidy[8864]:   Received WebSocket message from 127.0.0.1: '{"method":"core.describe","jsonrpc":"2.0","id":0}'
okt 23 23:40:17 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:40:17,403 [8864:HttpServer] mopidy.http.handlers
okt 23 23:40:17 Desktop-Ubuntu mopidy[8864]:   304 GET /iris/assets/app-icon_192.png (127.0.0.1) 0.56ms
okt 23 23:40:17 Desktop-Ubuntu mopidy[8864]: INFO     2022-10-23 23:40:17,376 [8864:HttpServer] tornado.access
okt 23 23:40:17 Desktop-Ubuntu mopidy[8864]: tornado.websocket.WebSocketClosedError
okt 23 23:40:17 Desktop-Ubuntu mopidy[8864]:     raise WebSocketClosedError()
okt 23 23:40:17 Desktop-Ubuntu mopidy[8864]:   File "/usr/lib/python3/dist-packages/tornado/websocket.py", line 337, in write_message
okt 23 23:40:17 Desktop-Ubuntu mopidy[8864]:     connection["connection"].write_message(json_encode(message))
okt 23 23:40:17 Desktop-Ubuntu mopidy[8864]:   File "/home/gerard/App/Iris/mopidy_iris/core.py", line 236, in broadcast
okt 23 23:40:17 Desktop-Ubuntu mopidy[8864]:     self.broadcast(
okt 23 23:40:17 Desktop-Ubuntu mopidy[8864]:   File "/home/gerard/App/Iris/mopidy_iris/core.py", line 282, in add_connection
okt 23 23:40:17 Desktop-Ubuntu mopidy[8864]:     iris.add_connection(connection=self, client=client)
okt 23 23:40:17 Desktop-Ubuntu mopidy[8864]:   File "/home/gerard/App/Iris/mopidy_iris/handlers.py", line 48, in open
okt 23 23:40:17 Desktop-Ubuntu mopidy[8864]:     open_result = handler.open(*handler.open_args, **handler.open_kwargs)
okt 23 23:40:17 Desktop-Ubuntu mopidy[8864]:   File "/usr/lib/python3/dist-packages/tornado/websocket.py", line 954, in _accept_connection
okt 23 23:40:17 Desktop-Ubuntu mopidy[8864]: Traceback (most recent call last):
okt 23 23:40:17 Desktop-Ubuntu mopidy[8864]: HTTPServerRequest(protocol='http', host='localhost:6680', method='GET', uri='/iris/ws/', version='HTTP/1.1', remote_ip='127.0.0.1')
okt 23 23:40:17 Desktop-Ubuntu mopidy[8864]:   Uncaught exception GET /iris/ws/ (127.0.0.1)
okt 23 23:40:17 Desktop-Ubuntu mopidy[8864]: ERROR    2022-10-23 23:40:17,364 [8864:HttpServer] tornado.application
okt 23 23:40:17 Desktop-Ubuntu mopidy[8864]:   {'method': 'connection_added', 'params': {'connection': {'connection_id': '8V6X9PD0649I', 'ip': '127.0.0.1', 'created': '2022-10-23 23:40:17'}}}
okt 23 23:40:17 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:40:17,364 [8864:HttpServer] mopidy_iris.core
okt 23 23:40:17 Desktop-Ubuntu mopidy[8864]:   <mopidy_iris.handlers.WebsocketHandler object at 0x7f95782138b0>
okt 23 23:40:17 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:40:17,364 [8864:HttpServer] mopidy_iris.core
okt 23 23:40:17 Desktop-Ubuntu mopidy[8864]:   Connection added
okt 23 23:40:17 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:40:17,363 [8864:HttpServer] mopidy_iris.core
okt 23 23:40:17 Desktop-Ubuntu mopidy[8864]:   101 GET /iris/ws/ (127.0.0.1) 0.51ms
okt 23 23:40:17 Desktop-Ubuntu mopidy[8864]: INFO     2022-10-23 23:40:17,363 [8864:HttpServer] tornado.access
okt 23 23:40:17 Desktop-Ubuntu mopidy[8864]:   New WebSocket connection from 127.0.0.1
okt 23 23:40:17 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:40:17,351 [8864:HttpServer] mopidy.http.handlers
okt 23 23:40:17 Desktop-Ubuntu mopidy[8864]:   101 GET /mopidy/ws/ (127.0.0.1) 0.60ms
okt 23 23:40:17 Desktop-Ubuntu mopidy[8864]: INFO     2022-10-23 23:40:17,351 [8864:HttpServer] tornado.access
okt 23 23:40:17 Desktop-Ubuntu mopidy[8864]:   304 GET /iris/manifest.json (127.0.0.1) 0.59ms
okt 23 23:40:17 Desktop-Ubuntu mopidy[8864]: INFO     2022-10-23 23:40:17,243 [8864:HttpServer] tornado.access
okt 23 23:40:17 Desktop-Ubuntu mopidy[8864]:   304 GET /iris/assets/favicon.png (127.0.0.1) 0.61ms
okt 23 23:40:17 Desktop-Ubuntu mopidy[8864]: INFO     2022-10-23 23:40:17,112 [8864:HttpServer] tornado.access
okt 23 23:40:17 Desktop-Ubuntu mopidy[8864]:   304 GET /iris/assets/icons/genius.svg (127.0.0.1) 0.61ms
okt 23 23:40:17 Desktop-Ubuntu mopidy[8864]: INFO     2022-10-23 23:40:17,044 [8864:HttpServer] tornado.access
okt 23 23:40:17 Desktop-Ubuntu mopidy[8864]:   200 GET /iris/null (127.0.0.1) 0.71ms
okt 23 23:40:17 Desktop-Ubuntu mopidy[8864]: INFO     2022-10-23 23:40:17,039 [8864:HttpServer] tornado.access
okt 23 23:40:16 Desktop-Ubuntu mopidy[8864]:   200 GET /iris/app.min.js?v=1666559547 (127.0.0.1) 3.25ms
okt 23 23:40:16 Desktop-Ubuntu mopidy[8864]: INFO     2022-10-23 23:40:16,274 [8864:HttpServer] tornado.access
okt 23 23:40:16 Desktop-Ubuntu mopidy[8864]:   200 GET /iris/app.min.css?v=1666559547 (127.0.0.1) 1.75ms
okt 23 23:40:16 Desktop-Ubuntu mopidy[8864]: INFO     2022-10-23 23:40:16,270 [8864:HttpServer] tornado.access
okt 23 23:40:16 Desktop-Ubuntu mopidy[8864]:   200 GET /iris/assets/app-icon.svg (127.0.0.1) 0.46ms
okt 23 23:40:16 Desktop-Ubuntu mopidy[8864]: INFO     2022-10-23 23:40:16,103 [8864:HttpServer] tornado.access
okt 23 23:40:16 Desktop-Ubuntu mopidy[8864]:   200 GET /iris/assets/favicon_error.png (127.0.0.1) 0.67ms
okt 23 23:40:16 Desktop-Ubuntu mopidy[8864]: INFO     2022-10-23 23:40:16,102 [8864:HttpServer] tornado.access
okt 23 23:40:16 Desktop-Ubuntu mopidy[8864]:   Closed WebSocket connection from 127.0.0.1
okt 23 23:40:16 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:40:16,071 [8864:HttpServer] mopidy.http.handlers
okt 23 23:40:16 Desktop-Ubuntu mopidy[8864]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 0, "result": {"core.get_uri_schemes": {"description": "Get list of URI schemes we can handle", "params": []}, "core.get_version": {"description": "Get version of the Mopidy core API", "params": []}, "core.history.get_history": {"description": "Get the track history.\\n\\nThe timestamps are milliseconds since epoch.\\n\\n:returns: the track history\\n:rtype: list of (timestamp, :class:`mopidy.models.Ref`) tuples", "params": []}, "core.history.get_length": {"description": "Get the number of tracks in the history.\\n\\n:returns: the history length\\n:rtype: int", "params": []}, "core.library.browse": {"description": "Browse directories and tracks at the given ``uri``.\\n\\n``uri`` is a string which represents some directory belonging to a\\nbackend. To get the intial root directories for backends pass\\n:class:`None` as the URI.\\n\\nReturns a list of :class:`mopidy.models.Ref` objects for the\\ndirectories and tracks at the given ``uri``.\\n\\nThe :class:`~mopidy.models.Ref` objects representing tracks keep the\\ntrack\'s original URI. A matching pair of objects can look like this::\\n\\n    Track(uri=\'dummy:/foo.mp3\', name=\'foo\', artists=..., album=...)\\n    Ref.track(uri=\'dummy:/foo.mp3\', name=\'foo\')\\n\\nThe :class:`~mopidy.models.Ref` objects representing directories have\\nbackend specific URIs. These are opaque values, so no one but the\\nbackend that created them should try and derive any meaning from them.\\nThe only valid exception to this is checking the scheme, as it is used\\nto route browse requests to the correct backend.\\n\\nFor example, the dummy library\'s ``/bar`` directory could be returned\\nlike this::\\n\\n    Ref.directory(uri=\'dummy:directory:/bar\', name=\'bar\')\\n\\n:param string uri: URI to browse\\n:rtype: list of :class:`mopidy.models.Ref`\\n\\n.. versionadded:: 0.18", "params": [{"name": "uri"}]}, "core.library.get_distinct": {"description": "List distinct values for a given field from the library.\\n\\nThis has mainly been added to support the list commands the MPD\\nprotocol supports in a more sane fashion. Other frontends are not\\nrecommended to use this method.\\n\\n:param string field: Any one of ``uri``, ``track_name``, ``album``,\\n    ``artist``, ``albumartist``, ``composer``, ``performer``,\\n    ``track_no``, ``genre``, ``date``, ``comment``, ``disc_no``,\\n    ``musicbrainz_albumid``, ``musicbrainz_artistid``, or\\n    ``musicbrainz_trackid``.\\n:param dict query: Query to use for limiting results, see\\n    :meth:`search` for details about the query format.\\n:rtype: set of values corresponding to the requested field type.\\n\\n.. versionadded:: 1.0", "params": [{"name": "field"}, {"name": "query", "default": null}]}, "core.library.get_images": {"description": "Lookup the images for the given URIs\\n\\nBackends can use this to return image URIs for any URI they know about\\nbe it tracks, albums, playlists. The lookup result is a dictionary\\nmapping the provided URIs to lists of images.\\n\\nUnknown URIs or URIs the corresponding backend couldn\'t find anything\\nfor will simply return an empty list for that URI.\\n\\n:param uris: list of URIs to find images for\\n:type uris: list of string\\n:rtype: {uri: tuple of :class:`mopidy.models.Image`}\\n\\n.. versionadded:: 1.0", "params": [{"name": "uris"}]}, "core.library.lookup": {"description": "Lookup the given URIs.\\n\\nIf the URI expands to multiple tracks, the returned list will contain\\nthem all.\\n\\n:param uris: track URIs\\n:type uris: list of string\\n:rtype: {uri: list of :class:`mopidy.models.Track`}", "params": [{"name": "uris"}]}, "core.library.refresh": {"description": "Refresh library. Limit to URI and below if an URI is given.\\n\\n:param uri: directory or track URI\\n:type uri: string", "params": [{"name": "uri", "default": null}]}, "core.library.search": {"description": "Search the library for tracks where ``field`` contains ``values``.\\n\\n``field`` can be one of ``uri``, ``track_name``, ``album``, ``artist``,\\n``albumartist``, ``composer``, ``performer``, ``track_no``, ``genre``,\\n``date``, ``comment``, ``disc_no``, ``musicbrainz_albumid``,\\n``musicbrainz_artistid``, ``musicbrainz_trackid`` or ``any``.\\n\\nIf ``uris`` is given, the search is limited to results from within the\\nURI roots. For example passing ``uris=[\'file:\']`` will limit the search\\nto the local backend.\\n\\nExamples::\\n\\n    # Returns results matching \'a\' in any backend\\n    search({\'any\': [\'a\']})\\n\\n    # Returns results matching artist \'xyz\' in any backend\\n    search({\'artist\': [\'xyz\']})\\n\\n    # Returns results matching \'a\' and \'b\' and artist \'xyz\' in any\\n    # backend\\n    search({\'any\': [\'a\', \'b\'], \'artist\': [\'xyz\']})\\n\\n    # Returns results matching \'a\' if within the given URI roots\\n    # \\"file:///media/music\\" and \\"spotify:\\"\\n    search({\'any\': [\'a\']}, uris=[\'file:///media/music\', \'spotify:\'])\\n\\n    # Returns results matching artist \'xyz\' and \'abc\' in any backend\\n    search({\'artist\': [\'xyz\', \'abc\']})\\n\\n:param query: one or more queries to search for\\n:type query: dict\\n:param uris: zero or more URI roots to limit the search to\\n:type uris: list of string or :class:`None`\\n:param exact: if the search should use exact matching\\n:type exact: :class:`bool`\\n:rtype: list of :class:`mopidy.models.SearchResult`\\n\\n.. versionadded:: 1.0\\n    The ``exact`` keyword argument.", "params": [{"name": "query"}, {"name": "uris", "default": null}, {"name": "exact", "default": false}]}, "core.mixer.get_mute": {"description": "Get mute state.\\n\\n:class:`True` if muted, :class:`False` unmuted, :class:`None` if\\nunknown.", "params": []}, "core.mixer.get_volume": {"description": "Get the volume.\\n\\nInteger in range [0..100] or :class:`None` if unknown.\\n\\nThe volume scale is linear.", "params": []}, "core.mixer.set_mute": {"description": "Set mute state.\\n\\n:class:`True` to mute, :class:`False` to unmute.\\n\\nReturns :class:`True` if call is successful, otherwise :class:`False`.", "params": [{"name": "mute"}]}, "core.mixer.set_volume": {"description": "Set the volume.\\n\\nThe volume is defined as an integer in range [0..100].\\n\\nThe volume scale is linear.\\n\\nReturns :class:`True` if call is successful, otherwise :class:`False`.", "params": [{"name": "volume"}]}, "core.playback.get_current_tl_track": {"description": "Get the currently playing or selected track.\\n\\nReturns a :class:`mopidy.models.TlTrack` or :class:`None`.", "params": []}, "core.playback.get_current_tlid": {"description": "Get the currently playing or selected TLID.\\n\\nExtracted from :meth:`get_current_tl_track` for convenience.\\n\\nReturns a :class:`int` or :class:`None`.\\n\\n.. versionadded:: 1.1", "params": []}, "core.playback.get_current_track": {"description": "Get the currently playing or selected track.\\n\\nExtracted from :meth:`get_current_tl_track` for convenience.\\n\\nReturns a :class:`mopidy.models.Track` or :class:`None`.", "params": []}, "core.playback.get_state": {"description": "Get The playback state.", "params": []}, "core.playback.get_stream_title": {"description": "Get the current stream title or :class:`None`.", "params": []}, "core.playback.get_time_position": {"description": "Get time position in milliseconds.", "params": []}, "core.playback.next": {"description": "Change to the next track.\\n\\nThe current playback state will be kept. If it was playing, playing\\nwill continue. If it was paused, it will still be paused, etc.", "params": []}, "core.playback.pause": {"description": "Pause playback.", "params": []}, "core.playback.play": {"description": "Play the given track, or if the given tl_track and tlid is\\n:class:`None`, play the currently active track.\\n\\nNote that the track **must** already be in the tracklist.\\n\\n.. deprecated:: 3.0\\n    The ``tl_track`` argument. Use ``tlid`` instead.\\n\\n:param tl_track: track to play\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:param tlid: TLID of the track to play\\n:type tlid: :class:`int` or :class:`None`", "params": [{"name": "tl_track", "default": null}, {"name": "tlid", "default": null}]}, "core.playback.previous": {"description": "Change to the previous track.\\n\\nThe current playback state will be kept. If it was playing, playing\\nwill continue. If it was paused, it will still be paused, etc.", "params": []}, "core.playback.resume": {"description": "If paused, resume playing the current track.", "params": []}, "core.playback.seek": {"description": "Seeks to time position given in milliseconds.\\n\\n:param time_position: time position in milliseconds\\n:type time_position: int\\n:rtype: :class:`True` if successful, else :class:`False`", "params": [{"name": "time_position"}]}, "core.playback.set_state": {"description": "Set the playback state.\\n\\nMust be :attr:`PLAYING`, :attr:`PAUSED`, or :attr:`STOPPED`.\\n\\nPossible states and transitions:\\n\\n.. digraph:: state_transitions\\n\\n    \\"STOPPED\\" -> \\"PLAYING\\" [ label=\\"play\\" ]\\n    \\"STOPPED\\" -> \\"PAUSED\\" [ label=\\"pause\\" ]\\n    \\"PLAYING\\" -> \\"STOPPED\\" [ label=\\"stop\\" ]\\n    \\"PLAYING\\" -> \\"PAUSED\\" [ label=\\"pause\\" ]\\n    \\"PLAYING\\" -> \\"PLAYING\\" [ label=\\"play\\" ]\\n    \\"PAUSED\\" -> \\"PLAYING\\" [ label=\\"resume\\" ]\\n    \\"PAUSED\\" -> \\"STOPPED\\" [ label=\\"stop\\" ]", "params": [{"name": "new_state"}]}, "core.playback.stop": {"description": "Stop playing.", "params": []}, "core.playlists.as_list": {"description": "Get a list of the currently available playlists.\\n\\nReturns a list of :class:`~mopidy.models.Ref` objects referring to the\\nplaylists. In other words, no information about the playlists\' content\\nis given.\\n\\n:rtype: list of :class:`mopidy.models.Ref`\\n\\n.. versionadded:: 1.0", "params": []}, "core.playlists.create": {"description": "Create a new playlist.\\n\\nIf ``uri_scheme`` matches an URI scheme handled by a current backend,\\nthat backend is asked to create the playlist. If ``uri_scheme`` is\\n:class:`None` or doesn\'t match a current backend, the first backend is\\nasked to create the playlist.\\n\\nAll new playlists must be created by calling this method, and **not**\\nby creating new instances of :class:`mopidy.models.Playlist`.\\n\\n:param name: name of the new playlist\\n:type name: string\\n:param uri_scheme: use the backend matching the URI scheme\\n:type uri_scheme: string\\n:rtype: :class:`mopidy.models.Playlist` or :class:`None`", "params": [{"name": "name"}, {"name": "uri_scheme", "default": null}]}, "core.playlists.delete": {"description": "Delete playlist identified by the URI.\\n\\nIf the URI doesn\'t match the URI schemes handled by the current\\nbackends, nothing happens.\\n\\nReturns :class:`True` if deleted, :class:`False` otherwise.\\n\\n:param uri: URI of the playlist to delete\\n:type uri: string\\n:rtype: :class:`bool`\\n\\n.. versionchanged:: 2.2\\n    Return type defined.", "params": [{"name": "uri"}]}, "core.playlists.get_items": {"description": "Get the items in a playlist specified by ``uri``.\\n\\nReturns a list of :class:`~mopidy.models.Ref` objects referring to the\\nplaylist\'s items.\\n\\nIf a playlist with the given ``uri`` doesn\'t exist, it returns\\n:class:`None`.\\n\\n:rtype: list of :class:`mopidy.models.Ref`, or :class:`None`\\n\\n.. versionadded:: 1.0", "params": [{"name": "uri"}]}, "core.playlists.get_uri_schemes": {"description": "Get the list of URI schemes that support playlists.\\n\\n:rtype: list of string\\n\\n.. versionadded:: 2.0", "params": []}, "core.playlists.lookup": {"description": "Lookup playlist with given URI in both the set of playlists and in any\\nother playlist sources. Returns :class:`None` if not found.\\n\\n:param uri: playlist URI\\n:type uri: string\\n:rtype: :class:`mopidy.models.Playlist` or :class:`None`", "params": [{"name": "uri"}]}, "core.playlists.refresh": {"description": "Refresh the playlists in :attr:`playlists`.\\n\\nIf ``uri_scheme`` is :class:`None`, all backends are asked to refresh.\\nIf ``uri_scheme`` is an URI scheme handled by a backend, only that\\nbackend is asked to refresh. If ``uri_scheme`` doesn\'t match any\\ncurrent backend, nothing happens.\\n\\n:param uri_scheme: limit to the backend matching the URI scheme\\n:type uri_scheme: string", "params": [{"name": "uri_scheme", "default": null}]}, "core.playlists.save": {"description": "Save the playlist.\\n\\nFor a playlist to be saveable, it must have the ``uri`` attribute set.\\nYou must not set the ``uri`` atribute yourself, but use playlist\\nobjects returned by :meth:`create` or retrieved from :attr:`playlists`,\\nwhich will always give you saveable playlists.\\n\\nThe method returns the saved playlist. The return playlist may differ\\nfrom the saved playlist. E.g. if the playlist name was changed, the\\nreturned playlist may have a different URI. The caller of this method\\nmust throw away the playlist sent to this method, and use the\\nreturned playlist instead.\\n\\nIf the playlist\'s URI isn\'t set or doesn\'t match the URI scheme of a\\ncurrent backend, nothing is done and :class:`None` is returned.\\n\\n:param playlist: the playlist\\n:type playlist: :class:`mopidy.models.Playlist`\\n:rtype: :class:`mopidy.models.Playlist` or :class:`None`", "params": [{"name": "playlist"}]}, "core.tracklist.add": {"description": "Add tracks to the tracklist.\\n\\nIf ``uris`` is given instead of ``tracks``, the URIs are\\nlooked up in the library and the resulting tracks are added to the\\ntracklist.\\n\\nIf ``at_position`` is given, the tracks are inserted at the given\\nposition in the tracklist. If ``at_position`` is not given, the tracks\\nare appended to the end of the tracklist.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.\\n\\n:param tracks: tracks to add\\n:type tracks: list of :class:`mopidy.models.Track` or :class:`None`\\n:param at_position: position in tracklist to add tracks\\n:type at_position: int or :class:`None`\\n:param uris: list of URIs for tracks to add\\n:type uris: list of string or :class:`None`\\n:rtype: list of :class:`mopidy.models.TlTrack`\\n\\n.. versionadded:: 1.0\\n    The ``uris`` argument.\\n\\n.. deprecated:: 1.0\\n    The ``tracks`` argument. Use ``uris``.", "params": [{"name": "tracks", "default": null}, {"name": "at_position", "default": null}, {"name": "uris", "default": null}]}, "core.tracklist.clear": {"description": "Clear the tracklist.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.", "params": []}, "core.tracklist.eot_track": {"description": "The track that will be played after the given track.\\n\\nNot necessarily the same track as :meth:`next_track`.\\n\\n.. deprecated:: 3.0\\n    Use :meth:`get_eot_tlid` instead.\\n\\n:param tl_track: the reference track\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:rtype: :class:`mopidy.models.TlTrack` or :class:`None`", "params": [{"name": "tl_track"}]}, "core.tracklist.filter": {"description": "Filter the tracklist by the given criteria.\\n\\nEach rule in the criteria consists of a model field and a list of\\nvalues to compare it against. If the model field matches any of the\\nvalues, it may be returned.\\n\\nOnly tracks that match all the given criteria are returned.\\n\\nExamples::\\n\\n    # Returns tracks with TLIDs 1, 2, 3, or 4 (tracklist ID)\\n    filter({\'tlid\': [1, 2, 3, 4]})\\n\\n    # Returns track with URIs \'xyz\' or \'abc\'\\n    filter({\'uri\': [\'xyz\', \'abc\']})\\n\\n    # Returns track with a matching TLIDs (1, 3 or 6) and a\\n    # matching URI (\'xyz\' or \'abc\')\\n    filter({\'tlid\': [1, 3, 6], \'uri\': [\'xyz\', \'abc\']})\\n\\n:param criteria: one or more rules to match by\\n:type criteria: dict, of (string, list) pairs\\n:rtype: list of :class:`mopidy.models.TlTrack`", "params": [{"name": "criteria"}]}, "core.tracklist.get_consume": {"description": "Get consume mode.\\n\\n:class:`True`\\n    Tracks are removed from the tracklist when they have been played.\\n:class:`False`\\n    Tracks are not removed from the tracklist.", "params": []}, "core.tracklist.get_eot_tlid": {"description": "The TLID of the track that will be played after the current track.\\n\\nNot necessarily the same TLID as returned by :meth:`get_next_tlid`.\\n\\n:rtype: :class:`int` or :class:`None`\\n\\n.. versionadded:: 1.1", "params": []}, "core.tracklist.get_length": {"description": "Get length of the tracklist.", "params": []}, "core.tracklist.get_next_tlid": {"description": "The tlid of the track that will be played if calling\\n:meth:`mopidy.core.PlaybackController.next()`.\\n\\nFor normal playback this is the next track in the tracklist. If repeat\\nis enabled the next track can loop around the tracklist. When random is\\nenabled this should be a random track, all tracks should be played once\\nbefore the tracklist repeats.\\n\\n:rtype: :class:`int` or :class:`None`\\n\\n.. versionadded:: 1.1", "params": []}, "core.tracklist.get_previous_tlid": {"description": "Returns the TLID of the track that will be played if calling\\n:meth:`mopidy.core.PlaybackController.previous()`.\\n\\nFor normal playback this is the previous track in the tracklist. If\\nrandom and/or consume is enabled it should return the current track\\ninstead.\\n\\n:rtype: :class:`int` or :class:`None`\\n\\n.. versionadded:: 1.1", "params": []}, "core.tracklist.get_random": {"description": "Get random mode.\\n\\n:class:`True`\\n    Tracks are selected at random from the tracklist.\\n:class:`False`\\n    Tracks are played in the order of the tracklist.", "params": []}, "core.tracklist.get_repeat": {"description": "Get repeat mode.\\n\\n:class:`True`\\n    The tracklist is played repeatedly.\\n:class:`False`\\n    The tracklist is played once.", "params": []}, "core.tracklist.get_single": {"description": "Get single mode.\\n\\n:class:`True`\\n    Playback is stopped after current song, unless in ``repeat`` mode.\\n:class:`False`\\n    Playback continues after current song.", "params": []}, "core.tracklist.get_tl_tracks": {"description": "Get tracklist as list of :class:`mopidy.models.TlTrack`.", "params": []}, "core.tracklist.get_tracks": {"description": "Get tracklist as list of :class:`mopidy.models.Track`.", "params": []}, "core.tracklist.get_version": {"description": "Get the tracklist version.\\n\\nInteger which is increased every time the tracklist is changed. Is not\\nreset before Mopidy is restarted.", "params": []}, "core.tracklist.index": {"description": "The position of the given track in the tracklist.\\n\\nIf neither *tl_track* or *tlid* is given we return the index of\\nthe currently playing track.\\n\\n:param tl_track: the track to find the index of\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:param tlid: TLID of the track to find the index of\\n:type tlid: :class:`int` or :class:`None`\\n:rtype: :class:`int` or :class:`None`\\n\\n.. versionadded:: 1.1\\n    The *tlid* parameter", "params": [{"name": "tl_track", "default": null}, {"name": "tlid", "default": null}]}, "core.tracklist.move": {"description": "Move the tracks in the slice ``[start:end]`` to ``to_position``.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.\\n\\n:param start: position of first track to move\\n:type start: int\\n:param end: position after last track to move\\n:type end: int\\n:param to_position: new position for the tracks\\n:type to_position: int", "params": [{"name": "start"}, {"name": "end"}, {"name": "to_position"}]}, "core.tracklist.next_track": {"description": "The track that will be played if calling\\n:meth:`mopidy.core.PlaybackController.next()`.\\n\\nFor normal playback this is the next track in the tracklist. If repeat\\nis enabled the next track can loop around the tracklist. When random is\\nenabled this should be a random track, all tracks should be played once\\nbefore the tracklist repeats.\\n\\n.. deprecated:: 3.0\\n    Use :meth:`get_next_tlid` instead.\\n\\n:param tl_track: the reference track\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:rtype: :class:`mopidy.models.TlTrack` or :class:`None`", "params": [{"name": "tl_track"}]}, "core.tracklist.previous_track": {"description": "Returns the track that will be played if calling\\n:meth:`mopidy.core.PlaybackController.previous()`.\\n\\nFor normal playback this is the previous track in the tracklist. If\\nrandom and/or consume is enabled it should return the current track\\ninstead.\\n\\n.. deprecated:: 3.0\\n    Use :meth:`get_previous_tlid` instead.\\n\\n:param tl_track: the reference track\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:rtype: :class:`mopidy.models.TlTrack` or :class:`None`", "params": [{"name": "tl_track"}]}, "core.tracklist.remove": {"description": "Remove the matching tracks from the tracklist.\\n\\nUses :meth:`filter()` to lookup the tracks to remove.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.\\n\\n:param criteria: one or more rules to match by\\n:type criteria: dict, of (string, list) pairs\\n:rtype: list of :class:`mopidy.models.TlTrack` that were removed", "params": [{"name": "criteria"}]}, "core.tracklist.set_consume": {"description": "Set consume mode.\\n\\n:class:`True`\\n    Tracks are removed from the tracklist when they have been played.\\n:class:`False`\\n    Tracks are not removed from the tracklist.", "params": [{"name": "value"}]}, "core.tracklist.set_random": {"description": "Set random mode.\\n\\n:class:`True`\\n    Tracks are selected at random from the tracklist.\\n:class:`False`\\n    Tracks are played in the order of the tracklist.", "params": [{"name": "value"}]}, "core.tracklist.set_repeat": {"description": "Set repeat mode.\\n\\nTo repeat a single track, set both ``repeat`` and ``single``.\\n\\n:class:`True`\\n    The tracklist is played repeatedly.\\n:class:`False`\\n    The tracklist is played once.", "params": [{"name": "value"}]}, "core.tracklist.set_single": {"description": "Set single mode.\\n\\n:class:`True`\\n    Playback is stopped after current song, unless in ``repeat`` mode.\\n:class:`False`\\n    Playback continues after current song.", "params": [{"name": "value"}]}, "core.tracklist.shuffle": {"description": "Shuffles the entire tracklist. If ``start`` and ``end`` is given only\\nshuffles the slice ``[start:end]``.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.\\n\\n:param start: position of first track to shuffle\\n:type start: int or :class:`None`\\n:param end: position after last track to shuffle\\n:type end: int or :class:`None`", "params": [{"name": "start", "default": null}, {"name": "end", "default": null}]}, "core.tracklist.slice": {"description": "Returns a slice of the tracklist, limited by the given start and end\\npositions.\\n\\n:param start: position of first track to include in slice\\n:type start: int\\n:param end: position after last track to include in slice\\n:type end: int\\n:rtype: :class:`mopidy.models.TlTrack`", "params": [{"name": "start"}, {"name": "end"}]}}}'
okt 23 23:40:16 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:40:16,059 [8864:HttpServer] mopidy.http.handlers
okt 23 23:40:16 Desktop-Ubuntu mopidy[8864]:   Received WebSocket message from 127.0.0.1: '{"method":"core.describe","jsonrpc":"2.0","id":0}'
okt 23 23:40:16 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:40:16,056 [8864:HttpServer] mopidy.http.handlers
okt 23 23:40:16 Desktop-Ubuntu mopidy[8864]: tornado.websocket.WebSocketClosedError
okt 23 23:40:16 Desktop-Ubuntu mopidy[8864]:     raise WebSocketClosedError()
okt 23 23:40:16 Desktop-Ubuntu mopidy[8864]:   File "/usr/lib/python3/dist-packages/tornado/websocket.py", line 337, in write_message
okt 23 23:40:16 Desktop-Ubuntu mopidy[8864]:     connection["connection"].write_message(json_encode(message))
okt 23 23:40:16 Desktop-Ubuntu mopidy[8864]:   File "/home/gerard/App/Iris/mopidy_iris/core.py", line 236, in broadcast
okt 23 23:40:16 Desktop-Ubuntu mopidy[8864]:     self.broadcast(
okt 23 23:40:16 Desktop-Ubuntu mopidy[8864]:   File "/home/gerard/App/Iris/mopidy_iris/core.py", line 282, in add_connection
okt 23 23:40:16 Desktop-Ubuntu mopidy[8864]:     iris.add_connection(connection=self, client=client)
okt 23 23:40:16 Desktop-Ubuntu mopidy[8864]:   File "/home/gerard/App/Iris/mopidy_iris/handlers.py", line 48, in open
okt 23 23:40:16 Desktop-Ubuntu mopidy[8864]:     open_result = handler.open(*handler.open_args, **handler.open_kwargs)
okt 23 23:40:16 Desktop-Ubuntu mopidy[8864]:   File "/usr/lib/python3/dist-packages/tornado/websocket.py", line 954, in _accept_connection
okt 23 23:40:16 Desktop-Ubuntu mopidy[8864]: Traceback (most recent call last):
okt 23 23:40:16 Desktop-Ubuntu mopidy[8864]: HTTPServerRequest(protocol='http', host='localhost:6680', method='GET', uri='/iris/ws/', version='HTTP/1.1', remote_ip='127.0.0.1')
okt 23 23:40:16 Desktop-Ubuntu mopidy[8864]:   Uncaught exception GET /iris/ws/ (127.0.0.1)
okt 23 23:40:16 Desktop-Ubuntu mopidy[8864]: ERROR    2022-10-23 23:40:16,053 [8864:HttpServer] tornado.application
okt 23 23:40:16 Desktop-Ubuntu mopidy[8864]:   {'method': 'connection_added', 'params': {'connection': {'connection_id': 'EXBKEUVQVPO4', 'ip': '127.0.0.1', 'created': '2022-10-23 23:40:16'}}}
okt 23 23:40:16 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:40:16,053 [8864:HttpServer] mopidy_iris.core
okt 23 23:40:16 Desktop-Ubuntu mopidy[8864]:   <mopidy_iris.handlers.WebsocketHandler object at 0x7f9578212230>
okt 23 23:40:16 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:40:16,052 [8864:HttpServer] mopidy_iris.core
okt 23 23:40:16 Desktop-Ubuntu mopidy[8864]:   Connection added
okt 23 23:40:16 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:40:16,052 [8864:HttpServer] mopidy_iris.core
okt 23 23:40:16 Desktop-Ubuntu mopidy[8864]:   101 GET /iris/ws/ (127.0.0.1) 0.52ms
okt 23 23:40:16 Desktop-Ubuntu mopidy[8864]: INFO     2022-10-23 23:40:16,052 [8864:HttpServer] tornado.access
okt 23 23:40:16 Desktop-Ubuntu mopidy[8864]:   Failed to close connection to 0F4WM96J0GH6
okt 23 23:40:16 Desktop-Ubuntu mopidy[8864]: ERROR    2022-10-23 23:40:16,044 [8864:HttpServer] mopidy_iris.core
okt 23 23:40:16 Desktop-Ubuntu mopidy[8864]:   {'method': 'connection_removed', 'params': {'connection': {'connection_id': '0F4WM96J0GH6', 'ip': '127.0.0.1', 'created': '2022-10-23 23:36:42', 'username': 166637467060576, 'client_id': 166637467060628}}}
okt 23 23:40:16 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:40:16,044 [8864:HttpServer] mopidy_iris.core
okt 23 23:40:16 Desktop-Ubuntu mopidy[8864]:   
okt 23 23:40:16 Desktop-Ubuntu mopidy[8864]: ERROR    2022-10-23 23:40:16,044 [8864:HttpServer] mopidy_iris.handlers
okt 23 23:40:16 Desktop-Ubuntu mopidy[8864]:   {'method': 'notification', 'params': {'notification': {'content': '166637467060576 started playback', 'icon': False}}, 'connection_id': '0F4WM96J0GH6'}
okt 23 23:40:16 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:40:16,044 [8864:HttpServer] mopidy_iris.core
okt 23 23:40:16 Desktop-Ubuntu mopidy[8864]:   Iris websocket message received: {"jsonrpc":"2.0","id":166656108390618,"method":"broadcast","params":{"method":"notification","params":{"notification":{"content":"166637467060576 started playback","icon":false}}}}
okt 23 23:40:16 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:40:16,044 [8864:HttpServer] mopidy_iris.handlers
okt 23 23:40:16 Desktop-Ubuntu mopidy[8864]:   
okt 23 23:40:16 Desktop-Ubuntu mopidy[8864]: ERROR    2022-10-23 23:40:16,043 [8864:HttpServer] mopidy_iris.handlers
okt 23 23:40:16 Desktop-Ubuntu mopidy[8864]:   {'method': 'queue_metadata_changed', 'params': {'queue_metadata': {'tlid_1': {'tlid': 1, 'added_from': {'uri': 'm3u:Example%20Playlist.m3u8', 'name': 'Example Playlist', 'type': 'playlist', 'provider': 'mopidy', 'context': 'editable-playlist', 'can_edit': True}, 'added_by': 166637467060576}, 'tlid_2': {'tlid': 2, 'added_from': {'uri': 'm3u:Example%20Playlist.m3u8', 'name': 'Example Playlist', 'type': 'playlist', 'provider': 'mopidy', 'context': 'editable-playlist', 'can_edit': True}, 'added_by': 166637467060576}, 'tlid_3': {'tlid': 3, 'added_from': {'uri': 'm3u:Example%20Playlist.m3u8', 'name': 'Example Playlist', 'type': 'playlist', 'provider': 'mopidy', 'context': 'editable-playlist', 'can_edit': True}, 'added_by': 166637467060576}}}}
okt 23 23:40:16 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:40:16,043 [8864:HttpServer] mopidy_iris.core
okt 23 23:40:16 Desktop-Ubuntu mopidy[8864]:   Iris websocket message received: {"jsonrpc":"2.0","id":166656103579969,"method":"add_queue_metadata","params":{"tlids":[3],"added_from":{"uri":"m3u:Example%20Playlist.m3u8","name":"Example Playlist","type":"playlist","provider":"mopidy","context":"editable-playlist","can_edit":true},"added_by":166637467060576}}
okt 23 23:40:16 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:40:16,043 [8864:HttpServer] mopidy_iris.handlers
okt 23 23:40:16 Desktop-Ubuntu mopidy[8864]:   200 GET /iris/assets/favicon_error.png (127.0.0.1) 1.10ms
okt 23 23:40:16 Desktop-Ubuntu mopidy[8864]: INFO     2022-10-23 23:40:16,043 [8864:HttpServer] tornado.access
okt 23 23:40:16 Desktop-Ubuntu mopidy[8864]:   
okt 23 23:40:16 Desktop-Ubuntu mopidy[8864]: ERROR    2022-10-23 23:40:16,042 [8864:HttpServer] mopidy_iris.handlers
okt 23 23:40:16 Desktop-Ubuntu mopidy[8864]:   {'method': 'queue_metadata_changed', 'params': {'queue_metadata': {'tlid_1': {'tlid': 1, 'added_from': {'uri': 'm3u:Example%20Playlist.m3u8', 'name': 'Example Playlist', 'type': 'playlist', 'provider': 'mopidy', 'context': 'editable-playlist', 'can_edit': True}, 'added_by': 166637467060576}, 'tlid_2': {'tlid': 2, 'added_from': {'uri': 'm3u:Example%20Playlist.m3u8', 'name': 'Example Playlist', 'type': 'playlist', 'provider': 'mopidy', 'context': 'editable-playlist', 'can_edit': True}, 'added_by': 166637467060576}}}}
okt 23 23:40:16 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:40:16,041 [8864:HttpServer] mopidy_iris.core
okt 23 23:40:16 Desktop-Ubuntu mopidy[8864]:   Iris websocket message received: {"jsonrpc":"2.0","id":166656103574230,"method":"add_queue_metadata","params":{"tlids":[2],"added_from":{"uri":"m3u:Example%20Playlist.m3u8","name":"Example Playlist","type":"playlist","provider":"mopidy","context":"editable-playlist","can_edit":true},"added_by":166637467060576}}
okt 23 23:40:16 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:40:16,041 [8864:HttpServer] mopidy_iris.handlers
okt 23 23:40:16 Desktop-Ubuntu mopidy[8864]:   200 GET /iris/library/browse (127.0.0.1) 1.41ms
okt 23 23:40:16 Desktop-Ubuntu mopidy[8864]: INFO     2022-10-23 23:40:16,041 [8864:HttpServer] tornado.access
okt 23 23:40:16 Desktop-Ubuntu mopidy[8864]:   200 GET /iris/library/browse (127.0.0.1) 1.32ms
okt 23 23:40:16 Desktop-Ubuntu mopidy[8864]: INFO     2022-10-23 23:40:16,041 [8864:HttpServer] tornado.access
okt 23 23:40:16 Desktop-Ubuntu mopidy[8864]: tornado.websocket.WebSocketClosedError
okt 23 23:40:16 Desktop-Ubuntu mopidy[8864]:     raise WebSocketClosedError()
okt 23 23:40:16 Desktop-Ubuntu mopidy[8864]:   File "/usr/lib/python3/dist-packages/tornado/websocket.py", line 1104, in wrapper
okt 23 23:40:16 Desktop-Ubuntu mopidy[8864]: Traceback (most recent call last):
okt 23 23:40:16 Desktop-Ubuntu mopidy[8864]: During handling of the above exception, another exception occurred:
okt 23 23:40:16 Desktop-Ubuntu mopidy[8864]: tornado.iostream.StreamClosedError: Stream is closed
okt 23 23:40:16 Desktop-Ubuntu mopidy[8864]:     await fut
okt 23 23:40:16 Desktop-Ubuntu mopidy[8864]:   File "/usr/lib/python3/dist-packages/tornado/websocket.py", line 1102, in wrapper
okt 23 23:40:16 Desktop-Ubuntu mopidy[8864]: Traceback (most recent call last):
okt 23 23:40:16 Desktop-Ubuntu mopidy[8864]: future: <Task finished name='Task-130' coro=<WebSocketProtocol13.write_message.<locals>.wrapper() done, defined at /usr/lib/python3/dist-packages/tornado/websocket.py:1100> exception=WebSocketClosedError()>
okt 23 23:40:16 Desktop-Ubuntu mopidy[8864]:   Task exception was never retrieved
okt 23 23:40:16 Desktop-Ubuntu mopidy[8864]: ERROR    2022-10-23 23:40:16,040 [8864:HttpServer] asyncio
okt 23 23:40:16 Desktop-Ubuntu mopidy[8864]:   200 GET /iris/assets/favicon_error.png (127.0.0.1) 8.73ms
okt 23 23:40:16 Desktop-Ubuntu mopidy[8864]: INFO     2022-10-23 23:40:16,039 [8864:HttpServer] tornado.access
okt 23 23:40:16 Desktop-Ubuntu mopidy[8864]:   200 GET /iris/assets/favicon_error.png (127.0.0.1) 8.69ms
okt 23 23:40:16 Desktop-Ubuntu mopidy[8864]: INFO     2022-10-23 23:40:16,039 [8864:HttpServer] tornado.access
okt 23 23:40:16 Desktop-Ubuntu mopidy[8864]:   200 GET /iris/assets/favicon_error.png (127.0.0.1) 8.65ms
okt 23 23:40:16 Desktop-Ubuntu mopidy[8864]: INFO     2022-10-23 23:40:16,038 [8864:HttpServer] tornado.access
okt 23 23:40:16 Desktop-Ubuntu mopidy[8864]:   200 GET /iris/settings (127.0.0.1) 8.79ms
okt 23 23:40:16 Desktop-Ubuntu mopidy[8864]: INFO     2022-10-23 23:40:16,038 [8864:HttpServer] tornado.access
okt 23 23:40:16 Desktop-Ubuntu mopidy[8864]:   New WebSocket connection from 127.0.0.1
okt 23 23:40:16 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:40:16,037 [8864:HttpServer] mopidy.http.handlers
okt 23 23:40:16 Desktop-Ubuntu mopidy[8864]:   101 GET /mopidy/ws/ (127.0.0.1) 8.61ms
okt 23 23:40:16 Desktop-Ubuntu mopidy[8864]: INFO     2022-10-23 23:40:16,037 [8864:HttpServer] tornado.access
okt 23 23:40:16 Desktop-Ubuntu mopidy[8864]: tornado.websocket.WebSocketClosedError
okt 23 23:40:16 Desktop-Ubuntu mopidy[8864]:     raise WebSocketClosedError()
okt 23 23:40:16 Desktop-Ubuntu mopidy[8864]:   File "/usr/lib/python3/dist-packages/tornado/websocket.py", line 337, in write_message
okt 23 23:40:16 Desktop-Ubuntu mopidy[8864]:     connection["connection"].write_message(json_encode(message))
okt 23 23:40:16 Desktop-Ubuntu mopidy[8864]:   File "/home/gerard/App/Iris/mopidy_iris/core.py", line 236, in broadcast
okt 23 23:40:16 Desktop-Ubuntu mopidy[8864]:     self.broadcast(
okt 23 23:40:16 Desktop-Ubuntu mopidy[8864]:   File "/home/gerard/App/Iris/mopidy_iris/core.py", line 282, in add_connection
okt 23 23:40:16 Desktop-Ubuntu mopidy[8864]:     iris.add_connection(connection=self, client=client)
okt 23 23:40:16 Desktop-Ubuntu mopidy[8864]:   File "/home/gerard/App/Iris/mopidy_iris/handlers.py", line 48, in open
okt 23 23:40:16 Desktop-Ubuntu mopidy[8864]:     open_result = handler.open(*handler.open_args, **handler.open_kwargs)
okt 23 23:40:16 Desktop-Ubuntu mopidy[8864]:   File "/usr/lib/python3/dist-packages/tornado/websocket.py", line 954, in _accept_connection
okt 23 23:40:16 Desktop-Ubuntu mopidy[8864]: Traceback (most recent call last):
okt 23 23:40:16 Desktop-Ubuntu mopidy[8864]: HTTPServerRequest(protocol='http', host='localhost:6680', method='GET', uri='/iris/ws/', version='HTTP/1.1', remote_ip='127.0.0.1')
okt 23 23:40:16 Desktop-Ubuntu mopidy[8864]:   Uncaught exception GET /iris/ws/ (127.0.0.1)
okt 23 23:40:16 Desktop-Ubuntu mopidy[8864]: ERROR    2022-10-23 23:40:16,036 [8864:HttpServer] tornado.application
okt 23 23:40:16 Desktop-Ubuntu mopidy[8864]:   {'method': 'connection_added', 'params': {'connection': {'connection_id': 'SDKSW1M0EG5I', 'ip': '127.0.0.1', 'created': '2022-10-23 23:40:16'}}}
okt 23 23:40:16 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:40:16,036 [8864:HttpServer] mopidy_iris.core
okt 23 23:40:16 Desktop-Ubuntu mopidy[8864]:   <mopidy_iris.handlers.WebsocketHandler object at 0x7f9578213070>
okt 23 23:40:16 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:40:16,036 [8864:HttpServer] mopidy_iris.core
okt 23 23:40:16 Desktop-Ubuntu mopidy[8864]:   Connection added
okt 23 23:40:16 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:40:16,036 [8864:HttpServer] mopidy_iris.core
okt 23 23:40:16 Desktop-Ubuntu mopidy[8864]:   101 GET /iris/ws/ (127.0.0.1) 7.47ms
okt 23 23:40:16 Desktop-Ubuntu mopidy[8864]: INFO     2022-10-23 23:40:16,036 [8864:HttpServer] tornado.access
okt 23 23:40:16 Desktop-Ubuntu mopidy[8864]:   Closed WebSocket connection from 127.0.0.1
okt 23 23:40:16 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:40:16,036 [8864:HttpServer] mopidy.http.handlers
okt 23 23:40:16 Desktop-Ubuntu mopidy[8864]:   New WebSocket connection from 127.0.0.1
okt 23 23:40:16 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:40:16,035 [8864:HttpServer] mopidy.http.handlers
okt 23 23:40:16 Desktop-Ubuntu mopidy[8864]:   101 GET /mopidy/ws/ (127.0.0.1) 7.31ms
okt 23 23:40:16 Desktop-Ubuntu mopidy[8864]: INFO     2022-10-23 23:40:16,035 [8864:HttpServer] tornado.access
okt 23 23:40:16 Desktop-Ubuntu mopidy[8864]: tornado.websocket.WebSocketClosedError
okt 23 23:40:16 Desktop-Ubuntu mopidy[8864]:     raise WebSocketClosedError()
okt 23 23:40:16 Desktop-Ubuntu mopidy[8864]:   File "/usr/lib/python3/dist-packages/tornado/websocket.py", line 337, in write_message
okt 23 23:40:16 Desktop-Ubuntu mopidy[8864]:     connection["connection"].write_message(json_encode(message))
okt 23 23:40:16 Desktop-Ubuntu mopidy[8864]:   File "/home/gerard/App/Iris/mopidy_iris/core.py", line 236, in broadcast
okt 23 23:40:16 Desktop-Ubuntu mopidy[8864]:     self.broadcast(
okt 23 23:40:16 Desktop-Ubuntu mopidy[8864]:   File "/home/gerard/App/Iris/mopidy_iris/core.py", line 282, in add_connection
okt 23 23:40:16 Desktop-Ubuntu mopidy[8864]:     iris.add_connection(connection=self, client=client)
okt 23 23:40:16 Desktop-Ubuntu mopidy[8864]:   File "/home/gerard/App/Iris/mopidy_iris/handlers.py", line 48, in open
okt 23 23:40:16 Desktop-Ubuntu mopidy[8864]:     open_result = handler.open(*handler.open_args, **handler.open_kwargs)
okt 23 23:40:16 Desktop-Ubuntu mopidy[8864]:   File "/usr/lib/python3/dist-packages/tornado/websocket.py", line 954, in _accept_connection
okt 23 23:40:16 Desktop-Ubuntu mopidy[8864]: Traceback (most recent call last):
okt 23 23:40:16 Desktop-Ubuntu mopidy[8864]: HTTPServerRequest(protocol='http', host='localhost:6680', method='GET', uri='/iris/ws/', version='HTTP/1.1', remote_ip='127.0.0.1')
okt 23 23:40:16 Desktop-Ubuntu mopidy[8864]:   Uncaught exception GET /iris/ws/ (127.0.0.1)
okt 23 23:40:16 Desktop-Ubuntu mopidy[8864]: ERROR    2022-10-23 23:40:16,034 [8864:HttpServer] tornado.application
okt 23 23:40:16 Desktop-Ubuntu mopidy[8864]:   {'method': 'connection_added', 'params': {'connection': {'connection_id': '7BH47PRU9WBG', 'ip': '127.0.0.1', 'created': '2022-10-23 23:40:16'}}}
okt 23 23:40:16 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:40:16,034 [8864:HttpServer] mopidy_iris.core
okt 23 23:40:16 Desktop-Ubuntu mopidy[8864]:   <mopidy_iris.handlers.WebsocketHandler object at 0x7f9578212a10>
okt 23 23:40:16 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:40:16,034 [8864:HttpServer] mopidy_iris.core
okt 23 23:40:16 Desktop-Ubuntu mopidy[8864]:   Connection added
okt 23 23:40:16 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:40:16,034 [8864:HttpServer] mopidy_iris.core
okt 23 23:40:16 Desktop-Ubuntu mopidy[8864]:   101 GET /iris/ws/ (127.0.0.1) 6.49ms
okt 23 23:40:16 Desktop-Ubuntu mopidy[8864]: INFO     2022-10-23 23:40:16,034 [8864:HttpServer] tornado.access
okt 23 23:40:16 Desktop-Ubuntu mopidy[8864]:   Closed WebSocket connection from 127.0.0.1
okt 23 23:40:16 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:40:16,034 [8864:HttpServer] mopidy.http.handlers
okt 23 23:40:16 Desktop-Ubuntu mopidy[8864]:   New WebSocket connection from 127.0.0.1
okt 23 23:40:16 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:40:16,033 [8864:HttpServer] mopidy.http.handlers
okt 23 23:40:16 Desktop-Ubuntu mopidy[8864]:   101 GET /mopidy/ws/ (127.0.0.1) 6.35ms
okt 23 23:40:16 Desktop-Ubuntu mopidy[8864]: INFO     2022-10-23 23:40:16,033 [8864:HttpServer] tornado.access
okt 23 23:40:16 Desktop-Ubuntu mopidy[8864]:   200 GET /iris/assets/favicon_error.png (127.0.0.1) 6.36ms
okt 23 23:40:16 Desktop-Ubuntu mopidy[8864]: INFO     2022-10-23 23:40:16,033 [8864:HttpServer] tornado.access
okt 23 23:40:16 Desktop-Ubuntu mopidy[8864]:   304 GET /iris/service-worker.js (127.0.0.1) 6.38ms
okt 23 23:40:16 Desktop-Ubuntu mopidy[8864]: INFO     2022-10-23 23:40:16,033 [8864:HttpServer] tornado.access
okt 23 23:40:16 Desktop-Ubuntu mopidy[8864]:   200 GET /iris/library/browse (127.0.0.1) 6.40ms
okt 23 23:40:16 Desktop-Ubuntu mopidy[8864]: INFO     2022-10-23 23:40:16,032 [8864:HttpServer] tornado.access
okt 23 23:40:16 Desktop-Ubuntu mopidy[8864]:   {'id': 166656100564379, 'jsonrpc': '2.0', 'method': 'add_queue_metadata', 'result': {'message': 'Added queue metadata'}, 'recipient': '0F4WM96J0GH6'}
okt 23 23:40:16 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:40:16,032 [8864:HttpServer] mopidy_iris.core
okt 23 23:40:16 Desktop-Ubuntu mopidy[8864]:   {'method': 'queue_metadata_changed', 'params': {'queue_metadata': {'tlid_1': {'tlid': 1, 'added_from': {'uri': 'm3u:Example%20Playlist.m3u8', 'name': 'Example Playlist', 'type': 'playlist', 'provider': 'mopidy', 'context': 'editable-playlist', 'can_edit': True}, 'added_by': 166637467060576}}}}
okt 23 23:40:16 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:40:16,031 [8864:HttpServer] mopidy_iris.core
okt 23 23:40:16 Desktop-Ubuntu mopidy[8864]:   Iris websocket message received: {"jsonrpc":"2.0","id":166656100564379,"method":"add_queue_metadata","params":{"tlids":[1],"added_from":{"uri":"m3u:Example%20Playlist.m3u8","name":"Example Playlist","type":"playlist","provider":"mopidy","context":"editable-playlist","can_edit":true},"added_by":166637467060576}}
okt 23 23:40:16 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:40:16,031 [8864:HttpServer] mopidy_iris.handlers
okt 23 23:40:16 Desktop-Ubuntu mopidy[8864]:   Broadcast of WebSocket message to 127.0.0.1 failed:
okt 23 23:40:16 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:40:16,023 [8864:HttpServer] mopidy.http.handlers
okt 23 23:40:16 Desktop-Ubuntu mopidy[8864]:   Broadcast of WebSocket message to 127.0.0.1 failed:
okt 23 23:40:16 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:40:16,023 [8864:HttpServer] mopidy.http.handlers
okt 23 23:40:16 Desktop-Ubuntu mopidy[8864]: tornado.websocket.WebSocketClosedError
okt 23 23:40:16 Desktop-Ubuntu mopidy[8864]:     raise WebSocketClosedError()
okt 23 23:40:16 Desktop-Ubuntu mopidy[8864]:   File "/usr/lib/python3/dist-packages/tornado/websocket.py", line 1104, in wrapper
okt 23 23:40:16 Desktop-Ubuntu mopidy[8864]: Traceback (most recent call last):
okt 23 23:40:16 Desktop-Ubuntu mopidy[8864]: During handling of the above exception, another exception occurred:
okt 23 23:40:16 Desktop-Ubuntu mopidy[8864]: tornado.iostream.StreamClosedError: Stream is closed
okt 23 23:40:16 Desktop-Ubuntu mopidy[8864]:     await fut
okt 23 23:40:16 Desktop-Ubuntu mopidy[8864]:   File "/usr/lib/python3/dist-packages/tornado/websocket.py", line 1102, in wrapper
okt 23 23:40:16 Desktop-Ubuntu mopidy[8864]: Traceback (most recent call last):
okt 23 23:40:16 Desktop-Ubuntu mopidy[8864]: future: <Task finished name='Task-96' coro=<WebSocketProtocol13.write_message.<locals>.wrapper() done, defined at /usr/lib/python3/dist-packages/tornado/websocket.py:1100> exception=WebSocketClosedError()>
okt 23 23:40:16 Desktop-Ubuntu mopidy[8864]:   Task exception was never retrieved
okt 23 23:40:16 Desktop-Ubuntu mopidy[8864]: ERROR    2022-10-23 23:40:16,004 [8864:HttpServer] asyncio
okt 23 23:40:16 Desktop-Ubuntu mopidy[8864]:   Broadcast of WebSocket message to 127.0.0.1 failed:
okt 23 23:40:16 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:40:16,004 [8864:HttpServer] mopidy.http.handlers
okt 23 23:40:16 Desktop-Ubuntu mopidy[8864]:   Broadcast of WebSocket message to 127.0.0.1 failed:
okt 23 23:40:16 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:40:16,004 [8864:HttpServer] mopidy.http.handlers
okt 23 23:40:16 Desktop-Ubuntu mopidy[8864]:   Broadcast of WebSocket message to 127.0.0.1 failed:
okt 23 23:40:16 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:40:16,004 [8864:HttpServer] mopidy.http.handlers
okt 23 23:40:16 Desktop-Ubuntu mopidy[8864]:   Broadcast of WebSocket message to 127.0.0.1 failed:
okt 23 23:40:16 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:40:16,004 [8864:HttpServer] mopidy.http.handlers
okt 23 23:40:16 Desktop-Ubuntu mopidy[8864]:   Broadcast of WebSocket message to 127.0.0.1 failed:
okt 23 23:40:16 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:40:16,004 [8864:HttpServer] mopidy.http.handlers
okt 23 23:40:16 Desktop-Ubuntu mopidy[8864]:   Broadcast of WebSocket message to 127.0.0.1 failed:
okt 23 23:40:16 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:40:16,003 [8864:HttpServer] mopidy.http.handlers
okt 23 23:40:16 Desktop-Ubuntu mopidy[8864]:   Broadcast of WebSocket message to 127.0.0.1 failed:
okt 23 23:40:16 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:40:16,003 [8864:HttpServer] mopidy.http.handlers
okt 23 23:40:16 Desktop-Ubuntu mopidy[8864]:   Closed WebSocket connection from 127.0.0.1
okt 23 23:40:16 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:40:16,003 [8864:HttpServer] mopidy.http.handlers
okt 23 23:40:16 Desktop-Ubuntu mopidy[8864]:   WebSocket request error:
okt 23 23:40:16 Desktop-Ubuntu mopidy[8864]: ERROR    2022-10-23 23:40:16,003 [8864:HttpServer] mopidy.http.handlers
okt 23 23:40:16 Desktop-Ubuntu mopidy[8864]:   Received WebSocket message from 127.0.0.1: '{"method":"core.library.browse","params":{"uri":null},"jsonrpc":"2.0","id":27}'
okt 23 23:40:16 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:40:16,002 [8864:HttpServer] mopidy.http.handlers
okt 23 23:40:16 Desktop-Ubuntu mopidy[8864]:   WebSocket request error:
okt 23 23:40:16 Desktop-Ubuntu mopidy[8864]: ERROR    2022-10-23 23:40:16,002 [8864:HttpServer] mopidy.http.handlers
okt 23 23:40:16 Desktop-Ubuntu mopidy[8864]:   Received WebSocket message from 127.0.0.1: '{"method":"core.library.browse","params":{"uri":null},"jsonrpc":"2.0","id":26}'
okt 23 23:40:16 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:40:16,002 [8864:HttpServer] mopidy.http.handlers
okt 23 23:40:16 Desktop-Ubuntu mopidy[8864]:   WebSocket request error:
okt 23 23:40:16 Desktop-Ubuntu mopidy[8864]: ERROR    2022-10-23 23:40:16,001 [8864:HttpServer] mopidy.http.handlers
okt 23 23:40:16 Desktop-Ubuntu mopidy[8864]:   Sending volume_changed to CoreListener: {'volume': 100}
okt 23 23:40:16 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:40:16,001 [8864:Core-6 (_actor_loop)] mopidy.listener
okt 23 23:40:16 Desktop-Ubuntu mopidy[8864]:   Track is not playable: file:///home/gerard/Music/test.mp3
okt 23 23:40:16 Desktop-Ubuntu mopidy[8864]: WARNING  2022-10-23 23:40:16,001 [8864:Core-6 (_actor_loop)] mopidy.core.tracklist
okt 23 23:40:16 Desktop-Ubuntu mopidy[8864]:   Changing state to GST_STATE_NULL: result=GST_STATE_CHANGE_SUCCESS
okt 23 23:40:16 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:40:16,000 [8864:MainThread] mopidy.audio.gst
okt 23 23:40:16 Desktop-Ubuntu mopidy[8864]:   Setting GStreamer state to GST_STATE_PLAYING failed
okt 23 23:40:16 Desktop-Ubuntu mopidy[8864]: WARNING  2022-10-23 23:40:16,000 [8864:Audio-2 (_actor_loop)] mopidy.audio.actor
okt 23 23:40:16 Desktop-Ubuntu mopidy[8864]:   Changing state to GST_STATE_PLAYING: result=GST_STATE_CHANGE_FAILURE
okt 23 23:40:16 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:40:16,000 [8864:Audio-2 (_actor_loop)] mopidy.audio.gst
okt 23 23:40:16 Desktop-Ubuntu mopidy[8864]:   Got ERROR bus message: error=GLib.Error('Failed to connect: Timeout', 'gst-resource-error-quark', 1) debug='../ext/pulse/pulsesink.c(615): gst_pulseringbuffer_open_device (): /GstBin:audio-sink/mopidy+audio+actor+_Outputs:mopidy+audio+actor+_outputs0/GstBin:bin0/GstPulseSink:pulsesink0'
okt 23 23:40:16 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:40:16,000 [8864:MainThread] mopidy.audio.gst
okt 23 23:40:16 Desktop-Ubuntu mopidy[8864]:   GStreamer error: Failed to connect: Timeout
okt 23 23:40:16 Desktop-Ubuntu mopidy[8864]: ERROR    2022-10-23 23:40:16,000 [8864:MainThread] mopidy.audio.gst
okt 23 23:39:45 Desktop-Ubuntu mopidy[8864]:   Sending volume_changed to MixerListener: {'volume': 100}
okt 23 23:39:45 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:39:45,968 [8864:SoftwareMixer-1 (_actor_loop)] mopidy.listener
okt 23 23:39:45 Desktop-Ubuntu mopidy[8864]:   Mixer event: volume_changed(volume=100)
okt 23 23:39:45 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:39:45,968 [8864:SoftwareMixer-1 (_actor_loop)] mopidy.mixer
okt 23 23:39:45 Desktop-Ubuntu mopidy[8864]:   Flags: 2
okt 23 23:39:45 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:39:45,968 [8864:Audio-2 (_actor_loop)] mopidy.audio.actor
okt 23 23:39:45 Desktop-Ubuntu mopidy[8864]:   Got STATE_CHANGED bus message: old=GST_STATE_NULL new=GST_STATE_READY pending=GST_STATE_VOID_PENDING
okt 23 23:39:45 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:39:45,968 [8864:MainThread] mopidy.audio.gst
okt 23 23:39:45 Desktop-Ubuntu mopidy[8864]:   Changing state to GST_STATE_READY: result=GST_STATE_CHANGE_SUCCESS
okt 23 23:39:45 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:39:45,968 [8864:Audio-2 (_actor_loop)] mopidy.audio.gst
okt 23 23:39:45 Desktop-Ubuntu mopidy[8864]:   Received WebSocket message from 127.0.0.1: '{"method":"core.playback.play","params":{},"jsonrpc":"2.0","id":25}'
okt 23 23:39:45 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:39:45,967 [8864:HttpServer] mopidy.http.handlers
okt 23 23:39:45 Desktop-Ubuntu mopidy[8864]:   WebSocket request error:
okt 23 23:39:45 Desktop-Ubuntu mopidy[8864]: ERROR    2022-10-23 23:39:45,967 [8864:HttpServer] mopidy.http.handlers
okt 23 23:39:45 Desktop-Ubuntu mopidy[8864]:   Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.add","params":{"uris":["ytmusic:track:7dVohOzvox8"],"at_position":0},"jsonrpc":"2.0","id":24}'
okt 23 23:39:45 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:39:45,967 [8864:HttpServer] mopidy.http.handlers
okt 23 23:39:45 Desktop-Ubuntu mopidy[8864]:   WebSocket request error:
okt 23 23:39:45 Desktop-Ubuntu mopidy[8864]: ERROR    2022-10-23 23:39:45,966 [8864:HttpServer] mopidy.http.handlers
okt 23 23:39:45 Desktop-Ubuntu mopidy[8864]:   Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.add","params":{"uris":["ytmusic:track:7dVohOzvox8"],"at_position":0},"jsonrpc":"2.0","id":23}'
okt 23 23:39:45 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:39:45,966 [8864:HttpServer] mopidy.http.handlers
okt 23 23:39:45 Desktop-Ubuntu mopidy[8864]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 22, "result": []}'
okt 23 23:39:45 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:39:45,966 [8864:HttpServer] mopidy.http.handlers
okt 23 23:39:45 Desktop-Ubuntu mopidy[8864]:   Sending volume_changed to CoreListener: {'volume': 100}
okt 23 23:39:45 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:39:45,965 [8864:Core-6 (_actor_loop)] mopidy.listener
okt 23 23:39:45 Desktop-Ubuntu mopidy[8864]:   Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.add","params":{"uris":["jukebox:track:Jukebox/1.plate"],"at_position":0},"jsonrpc":"2.0","id":22}'
okt 23 23:39:45 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:39:45,964 [8864:HttpServer] mopidy.http.handlers
okt 23 23:39:45 Desktop-Ubuntu mopidy[8864]:   Sending volume_changed to CoreListener: {'volume': 100}
okt 23 23:39:45 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:39:45,964 [8864:Core-6 (_actor_loop)] mopidy.listener
okt 23 23:39:45 Desktop-Ubuntu mopidy[8864]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 21, "result": null}'
okt 23 23:39:45 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:39:45,964 [8864:HttpServer] mopidy.http.handlers
okt 23 23:39:45 Desktop-Ubuntu mopidy[8864]:   Sending volume_changed to CoreListener: {'volume': 100}
okt 23 23:39:45 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:39:45,963 [8864:Core-6 (_actor_loop)] mopidy.listener
okt 23 23:39:45 Desktop-Ubuntu mopidy[8864]:   Track is not playable: file:///home/gerard/Music/test.mp3
okt 23 23:39:45 Desktop-Ubuntu mopidy[8864]: WARNING  2022-10-23 23:39:45,963 [8864:Core-6 (_actor_loop)] mopidy.core.tracklist
okt 23 23:39:45 Desktop-Ubuntu mopidy[8864]:   Changing state to GST_STATE_NULL: result=GST_STATE_CHANGE_SUCCESS
okt 23 23:39:45 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:39:45,963 [8864:MainThread] mopidy.audio.gst
okt 23 23:39:45 Desktop-Ubuntu mopidy[8864]:   Setting GStreamer state to GST_STATE_PLAYING failed
okt 23 23:39:45 Desktop-Ubuntu mopidy[8864]: WARNING  2022-10-23 23:39:45,963 [8864:Audio-2 (_actor_loop)] mopidy.audio.actor
okt 23 23:39:45 Desktop-Ubuntu mopidy[8864]:   Changing state to GST_STATE_PLAYING: result=GST_STATE_CHANGE_FAILURE
okt 23 23:39:45 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:39:45,963 [8864:Audio-2 (_actor_loop)] mopidy.audio.gst
okt 23 23:39:45 Desktop-Ubuntu mopidy[8864]:   Got ERROR bus message: error=GLib.Error('Failed to connect: Timeout', 'gst-resource-error-quark', 1) debug='../ext/pulse/pulsesink.c(615): gst_pulseringbuffer_open_device (): /GstBin:audio-sink/mopidy+audio+actor+_Outputs:mopidy+audio+actor+_outputs0/GstBin:bin0/GstPulseSink:pulsesink0'
okt 23 23:39:45 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:39:45,963 [8864:MainThread] mopidy.audio.gst
okt 23 23:39:45 Desktop-Ubuntu mopidy[8864]:   GStreamer error: Failed to connect: Timeout
okt 23 23:39:45 Desktop-Ubuntu mopidy[8864]: ERROR    2022-10-23 23:39:45,962 [8864:MainThread] mopidy.audio.gst
okt 23 23:39:15 Desktop-Ubuntu mopidy[8864]:   Sending volume_changed to MixerListener: {'volume': 100}
okt 23 23:39:15 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:39:15,933 [8864:SoftwareMixer-1 (_actor_loop)] mopidy.listener
okt 23 23:39:15 Desktop-Ubuntu mopidy[8864]:   Mixer event: volume_changed(volume=100)
okt 23 23:39:15 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:39:15,933 [8864:SoftwareMixer-1 (_actor_loop)] mopidy.mixer
okt 23 23:39:15 Desktop-Ubuntu mopidy[8864]:   Flags: 2
okt 23 23:39:15 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:39:15,932 [8864:Audio-2 (_actor_loop)] mopidy.audio.actor
okt 23 23:39:15 Desktop-Ubuntu mopidy[8864]:   Got STATE_CHANGED bus message: old=GST_STATE_NULL new=GST_STATE_READY pending=GST_STATE_VOID_PENDING
okt 23 23:39:15 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:39:15,932 [8864:MainThread] mopidy.audio.gst
okt 23 23:39:15 Desktop-Ubuntu mopidy[8864]:   Changing state to GST_STATE_READY: result=GST_STATE_CHANGE_SUCCESS
okt 23 23:39:15 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:39:15,932 [8864:Audio-2 (_actor_loop)] mopidy.audio.gst
okt 23 23:39:15 Desktop-Ubuntu mopidy[8864]:   Track is not playable: file:///home/gerard/Music/test.mp3
okt 23 23:39:15 Desktop-Ubuntu mopidy[8864]: WARNING  2022-10-23 23:39:15,931 [8864:Core-6 (_actor_loop)] mopidy.core.tracklist
okt 23 23:39:15 Desktop-Ubuntu mopidy[8864]:   Setting GStreamer state to GST_STATE_PLAYING failed
okt 23 23:39:15 Desktop-Ubuntu mopidy[8864]: WARNING  2022-10-23 23:39:15,931 [8864:Audio-2 (_actor_loop)] mopidy.audio.actor
okt 23 23:39:15 Desktop-Ubuntu mopidy[8864]:   Changing state to GST_STATE_PLAYING: result=GST_STATE_CHANGE_FAILURE
okt 23 23:39:15 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:39:15,931 [8864:Audio-2 (_actor_loop)] mopidy.audio.gst
okt 23 23:39:15 Desktop-Ubuntu mopidy[8864]:   Changing state to GST_STATE_NULL: result=GST_STATE_CHANGE_SUCCESS
okt 23 23:39:15 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:39:15,931 [8864:MainThread] mopidy.audio.gst
okt 23 23:39:15 Desktop-Ubuntu mopidy[8864]:   Got ERROR bus message: error=GLib.Error('Failed to connect: Timeout', 'gst-resource-error-quark', 1) debug='../ext/pulse/pulsesink.c(615): gst_pulseringbuffer_open_device (): /GstBin:audio-sink/mopidy+audio+actor+_Outputs:mopidy+audio+actor+_outputs0/GstBin:bin0/GstPulseSink:pulsesink0'
okt 23 23:39:15 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:39:15,931 [8864:MainThread] mopidy.audio.gst
okt 23 23:39:15 Desktop-Ubuntu mopidy[8864]:   GStreamer error: Failed to connect: Timeout
okt 23 23:39:15 Desktop-Ubuntu mopidy[8864]: ERROR    2022-10-23 23:39:15,930 [8864:MainThread] mopidy.audio.gst
okt 23 23:38:45 Desktop-Ubuntu mopidy[8864]:   Sending volume_changed to MixerListener: {'volume': 100}
okt 23 23:38:45 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:38:45,901 [8864:SoftwareMixer-1 (_actor_loop)] mopidy.listener
okt 23 23:38:45 Desktop-Ubuntu mopidy[8864]:   Mixer event: volume_changed(volume=100)
okt 23 23:38:45 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:38:45,900 [8864:SoftwareMixer-1 (_actor_loop)] mopidy.mixer
okt 23 23:38:45 Desktop-Ubuntu mopidy[8864]:   Flags: 2
okt 23 23:38:45 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:38:45,900 [8864:Audio-2 (_actor_loop)] mopidy.audio.actor
okt 23 23:38:45 Desktop-Ubuntu mopidy[8864]:   Got STATE_CHANGED bus message: old=GST_STATE_NULL new=GST_STATE_READY pending=GST_STATE_VOID_PENDING
okt 23 23:38:45 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:38:45,900 [8864:MainThread] mopidy.audio.gst
okt 23 23:38:45 Desktop-Ubuntu mopidy[8864]:   Changing state to GST_STATE_READY: result=GST_STATE_CHANGE_SUCCESS
okt 23 23:38:45 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:38:45,900 [8864:Audio-2 (_actor_loop)] mopidy.audio.gst
okt 23 23:38:45 Desktop-Ubuntu mopidy[8864]:   Track is not playable: file:///home/gerard/Music/test.mp3
okt 23 23:38:45 Desktop-Ubuntu mopidy[8864]: WARNING  2022-10-23 23:38:45,899 [8864:Core-6 (_actor_loop)] mopidy.core.tracklist
okt 23 23:38:45 Desktop-Ubuntu mopidy[8864]:   Changing state to GST_STATE_NULL: result=GST_STATE_CHANGE_SUCCESS
okt 23 23:38:45 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:38:45,899 [8864:MainThread] mopidy.audio.gst
okt 23 23:38:45 Desktop-Ubuntu mopidy[8864]:   Setting GStreamer state to GST_STATE_PLAYING failed
okt 23 23:38:45 Desktop-Ubuntu mopidy[8864]: WARNING  2022-10-23 23:38:45,899 [8864:Audio-2 (_actor_loop)] mopidy.audio.actor
okt 23 23:38:45 Desktop-Ubuntu mopidy[8864]:   Changing state to GST_STATE_PLAYING: result=GST_STATE_CHANGE_FAILURE
okt 23 23:38:45 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:38:45,899 [8864:Audio-2 (_actor_loop)] mopidy.audio.gst
okt 23 23:38:45 Desktop-Ubuntu mopidy[8864]:   Got ERROR bus message: error=GLib.Error('Failed to connect: Timeout', 'gst-resource-error-quark', 1) debug='../ext/pulse/pulsesink.c(615): gst_pulseringbuffer_open_device (): /GstBin:audio-sink/mopidy+audio+actor+_Outputs:mopidy+audio+actor+_outputs0/GstBin:bin0/GstPulseSink:pulsesink0'
okt 23 23:38:45 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:38:45,899 [8864:MainThread] mopidy.audio.gst
okt 23 23:38:45 Desktop-Ubuntu mopidy[8864]:   GStreamer error: Failed to connect: Timeout
okt 23 23:38:45 Desktop-Ubuntu mopidy[8864]: ERROR    2022-10-23 23:38:45,898 [8864:MainThread] mopidy.audio.gst
okt 23 23:38:15 Desktop-Ubuntu mopidy[8864]:   Sending volume_changed to MixerListener: {'volume': 100}
okt 23 23:38:15 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:38:15,868 [8864:SoftwareMixer-1 (_actor_loop)] mopidy.listener
okt 23 23:38:15 Desktop-Ubuntu mopidy[8864]:   Mixer event: volume_changed(volume=100)
okt 23 23:38:15 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:38:15,868 [8864:SoftwareMixer-1 (_actor_loop)] mopidy.mixer
okt 23 23:38:15 Desktop-Ubuntu mopidy[8864]:   Got STATE_CHANGED bus message: old=GST_STATE_NULL new=GST_STATE_READY pending=GST_STATE_VOID_PENDING
okt 23 23:38:15 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:38:15,868 [8864:MainThread] mopidy.audio.gst
okt 23 23:38:15 Desktop-Ubuntu mopidy[8864]:   Flags: 2
okt 23 23:38:15 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:38:15,867 [8864:Audio-2 (_actor_loop)] mopidy.audio.actor
okt 23 23:38:15 Desktop-Ubuntu mopidy[8864]:   Changing state to GST_STATE_READY: result=GST_STATE_CHANGE_SUCCESS
okt 23 23:38:15 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:38:15,867 [8864:Audio-2 (_actor_loop)] mopidy.audio.gst
okt 23 23:38:15 Desktop-Ubuntu mopidy[8864]:   Received WebSocket message from 127.0.0.1: '{"method":"core.playback.play","params":{"tlid":3},"jsonrpc":"2.0","id":21}'
okt 23 23:38:15 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:38:15,866 [8864:HttpServer] mopidy.http.handlers
okt 23 23:38:15 Desktop-Ubuntu mopidy[8864]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 20, "result": null}'
okt 23 23:38:15 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:38:15,866 [8864:HttpServer] mopidy.http.handlers
okt 23 23:38:15 Desktop-Ubuntu mopidy[8864]:   Changing state to GST_STATE_NULL: result=GST_STATE_CHANGE_SUCCESS
okt 23 23:38:15 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:38:15,865 [8864:MainThread] mopidy.audio.gst
okt 23 23:38:15 Desktop-Ubuntu mopidy[8864]:   Sending volume_changed to CoreListener: {'volume': 100}
okt 23 23:38:15 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:38:15,865 [8864:Core-6 (_actor_loop)] mopidy.listener
okt 23 23:38:15 Desktop-Ubuntu mopidy[8864]:   Sending volume_changed to CoreListener: {'volume': 100}
okt 23 23:38:15 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:38:15,865 [8864:Core-6 (_actor_loop)] mopidy.listener
okt 23 23:38:15 Desktop-Ubuntu mopidy[8864]:   Track is not playable: file:///home/gerard/Music/test.mp3
okt 23 23:38:15 Desktop-Ubuntu mopidy[8864]: WARNING  2022-10-23 23:38:15,865 [8864:Core-6 (_actor_loop)] mopidy.core.tracklist
okt 23 23:38:15 Desktop-Ubuntu mopidy[8864]:   Setting GStreamer state to GST_STATE_PLAYING failed
okt 23 23:38:15 Desktop-Ubuntu mopidy[8864]: WARNING  2022-10-23 23:38:15,864 [8864:Audio-2 (_actor_loop)] mopidy.audio.actor
okt 23 23:38:15 Desktop-Ubuntu mopidy[8864]:   Changing state to GST_STATE_PLAYING: result=GST_STATE_CHANGE_FAILURE
okt 23 23:38:15 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:38:15,864 [8864:Audio-2 (_actor_loop)] mopidy.audio.gst
okt 23 23:38:15 Desktop-Ubuntu mopidy[8864]:   Got ERROR bus message: error=GLib.Error('Failed to connect: Timeout', 'gst-resource-error-quark', 1) debug='../ext/pulse/pulsesink.c(615): gst_pulseringbuffer_open_device (): /GstBin:audio-sink/mopidy+audio+actor+_Outputs:mopidy+audio+actor+_outputs0/GstBin:bin0/GstPulseSink:pulsesink0'
okt 23 23:38:15 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:38:15,864 [8864:MainThread] mopidy.audio.gst
okt 23 23:38:15 Desktop-Ubuntu mopidy[8864]:   GStreamer error: Failed to connect: Timeout
okt 23 23:38:15 Desktop-Ubuntu mopidy[8864]: ERROR    2022-10-23 23:38:15,864 [8864:MainThread] mopidy.audio.gst
okt 23 23:37:45 Desktop-Ubuntu mopidy[8864]:   Sending volume_changed to MixerListener: {'volume': 100}
okt 23 23:37:45 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:37:45,833 [8864:SoftwareMixer-1 (_actor_loop)] mopidy.listener
okt 23 23:37:45 Desktop-Ubuntu mopidy[8864]:   Mixer event: volume_changed(volume=100)
okt 23 23:37:45 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:37:45,833 [8864:SoftwareMixer-1 (_actor_loop)] mopidy.mixer
okt 23 23:37:45 Desktop-Ubuntu mopidy[8864]:   Flags: 2
okt 23 23:37:45 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:37:45,832 [8864:Audio-2 (_actor_loop)] mopidy.audio.actor
okt 23 23:37:45 Desktop-Ubuntu mopidy[8864]:   Got STATE_CHANGED bus message: old=GST_STATE_NULL new=GST_STATE_READY pending=GST_STATE_VOID_PENDING
okt 23 23:37:45 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:37:45,832 [8864:MainThread] mopidy.audio.gst
okt 23 23:37:45 Desktop-Ubuntu mopidy[8864]:   Changing state to GST_STATE_READY: result=GST_STATE_CHANGE_SUCCESS
okt 23 23:37:45 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:37:45,832 [8864:Audio-2 (_actor_loop)] mopidy.audio.gst
okt 23 23:37:45 Desktop-Ubuntu mopidy[8864]:   Track is not playable: file:///home/gerard/Music/test.mp3
okt 23 23:37:45 Desktop-Ubuntu mopidy[8864]: WARNING  2022-10-23 23:37:45,831 [8864:Core-6 (_actor_loop)] mopidy.core.tracklist
okt 23 23:37:45 Desktop-Ubuntu mopidy[8864]:   Setting GStreamer state to GST_STATE_PLAYING failed
okt 23 23:37:45 Desktop-Ubuntu mopidy[8864]: WARNING  2022-10-23 23:37:45,831 [8864:Audio-2 (_actor_loop)] mopidy.audio.actor
okt 23 23:37:45 Desktop-Ubuntu mopidy[8864]:   Changing state to GST_STATE_NULL: result=GST_STATE_CHANGE_SUCCESS
okt 23 23:37:45 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:37:45,831 [8864:MainThread] mopidy.audio.gst
okt 23 23:37:45 Desktop-Ubuntu mopidy[8864]:   Changing state to GST_STATE_PLAYING: result=GST_STATE_CHANGE_FAILURE
okt 23 23:37:45 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:37:45,831 [8864:Audio-2 (_actor_loop)] mopidy.audio.gst
okt 23 23:37:45 Desktop-Ubuntu mopidy[8864]:   Got ERROR bus message: error=GLib.Error('Failed to connect: Timeout', 'gst-resource-error-quark', 1) debug='../ext/pulse/pulsesink.c(615): gst_pulseringbuffer_open_device (): /GstBin:audio-sink/mopidy+audio+actor+_Outputs:mopidy+audio+actor+_outputs0/GstBin:bin0/GstPulseSink:pulsesink0'
okt 23 23:37:45 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:37:45,831 [8864:MainThread] mopidy.audio.gst
okt 23 23:37:45 Desktop-Ubuntu mopidy[8864]:   GStreamer error: Failed to connect: Timeout
okt 23 23:37:45 Desktop-Ubuntu mopidy[8864]: ERROR    2022-10-23 23:37:45,830 [8864:MainThread] mopidy.audio.gst
okt 23 23:37:15 Desktop-Ubuntu mopidy[8864]:   Sending volume_changed to MixerListener: {'volume': 100}
okt 23 23:37:15 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:37:15,800 [8864:SoftwareMixer-1 (_actor_loop)] mopidy.listener
okt 23 23:37:15 Desktop-Ubuntu mopidy[8864]:   Mixer event: volume_changed(volume=100)
okt 23 23:37:15 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:37:15,800 [8864:SoftwareMixer-1 (_actor_loop)] mopidy.mixer
okt 23 23:37:15 Desktop-Ubuntu mopidy[8864]:   Flags: 2
okt 23 23:37:15 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:37:15,800 [8864:Audio-2 (_actor_loop)] mopidy.audio.actor
okt 23 23:37:15 Desktop-Ubuntu mopidy[8864]:   Got STATE_CHANGED bus message: old=GST_STATE_NULL new=GST_STATE_READY pending=GST_STATE_VOID_PENDING
okt 23 23:37:15 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:37:15,800 [8864:MainThread] mopidy.audio.gst
okt 23 23:37:15 Desktop-Ubuntu mopidy[8864]:   Changing state to GST_STATE_READY: result=GST_STATE_CHANGE_SUCCESS
okt 23 23:37:15 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:37:15,799 [8864:Audio-2 (_actor_loop)] mopidy.audio.gst
okt 23 23:37:15 Desktop-Ubuntu mopidy[8864]:   Received WebSocket message from 127.0.0.1: '{"method":"core.playback.play","params":{"tlid":2},"jsonrpc":"2.0","id":20}'
okt 23 23:37:15 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:37:15,799 [8864:HttpServer] mopidy.http.handlers
okt 23 23:37:15 Desktop-Ubuntu mopidy[8864]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 19, "result": []}'
okt 23 23:37:15 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:37:15,798 [8864:HttpServer] mopidy.http.handlers
okt 23 23:37:15 Desktop-Ubuntu mopidy[8864]:   Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.add","params":{"uris":["ytmusic:track:7dVohOzvox8"],"at_position":0},"jsonrpc":"2.0","id":19}'
okt 23 23:37:15 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:37:15,798 [8864:HttpServer] mopidy.http.handlers
okt 23 23:37:15 Desktop-Ubuntu mopidy[8864]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 18, "result": []}'
okt 23 23:37:15 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:37:15,798 [8864:HttpServer] mopidy.http.handlers
okt 23 23:37:15 Desktop-Ubuntu mopidy[8864]:   Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.add","params":{"uris":["ytmusic:track:7dVohOzvox8"],"at_position":0},"jsonrpc":"2.0","id":18}'
okt 23 23:37:15 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:37:15,797 [8864:HttpServer] mopidy.http.handlers
okt 23 23:37:15 Desktop-Ubuntu mopidy[8864]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 17, "result": [{"__model__": "TlTrack", "tlid": 3, "track": {"__model__": "Track", "uri": "file:///home/gerard/Music/test.mp3", "name": "Symphony No. 40 in G Minor, K. 550 - I. Molto Allegro", "artists": [{"__model__": "Artist", "name": "Czech National Symphony Orchestra"}], "album": {"__model__": "Album", "name": "Musopen Kickstarter Project", "artists": [{"__model__": "Artist", "name": "Czech National Symphony Orchestra"}]}, "composers": [{"__model__": "Artist", "name": "Wolfgang Amadeus Mozart"}], "genre": "Classical", "length": 358848}}]}'
okt 23 23:37:15 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:37:15,797 [8864:HttpServer] mopidy.http.handlers
okt 23 23:37:15 Desktop-Ubuntu mopidy[8864]:   Sending tracklist_changed to CoreListener: {}
okt 23 23:37:15 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:37:15,796 [8864:Core-6 (_actor_loop)] mopidy.listener
okt 23 23:37:15 Desktop-Ubuntu mopidy[8864]:   Triggering event: tracklist_changed()
okt 23 23:37:15 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:37:15,796 [8864:Core-6 (_actor_loop)] mopidy.core.tracklist
okt 23 23:37:15 Desktop-Ubuntu mopidy[8864]:   element pipeline2: GstMessageAsyncDone, running-time=(guint64)18446744073709551615;
okt 23 23:37:15 Desktop-Ubuntu mopidy[8864]: TRACE    2022-10-23 23:37:15,795 [8864:FileBackend-3 (_actor_loop)] mopidy.audio.scan
okt 23 23:37:15 Desktop-Ubuntu mopidy[8864]:   element fakesink2: GstMessageTag, taglist=(taglist)"taglist\,\ encoder\=\(string\)\"LAME\\\ 32bi...
okt 23 23:37:15 Desktop-Ubuntu mopidy[8864]: TRACE    2022-10-23 23:37:15,795 [8864:FileBackend-3 (_actor_loop)] mopidy.audio.scan
okt 23 23:37:15 Desktop-Ubuntu mopidy[8864]:   element fakesink2: GstMessageTag, taglist=(taglist)"taglist\,\ encoder\=\(string\)\"LAME\\\ 32bi...
okt 23 23:37:15 Desktop-Ubuntu mopidy[8864]: TRACE    2022-10-23 23:37:15,769 [8864:FileBackend-3 (_actor_loop)] mopidy.audio.scan
okt 23 23:37:15 Desktop-Ubuntu mopidy[8864]:   element mpegaudioparse2: GstMessageDurationChanged;
okt 23 23:37:15 Desktop-Ubuntu mopidy[8864]: TRACE    2022-10-23 23:37:15,743 [8864:FileBackend-3 (_actor_loop)] mopidy.audio.scan
okt 23 23:37:15 Desktop-Ubuntu mopidy[8864]:   element decodebin2: have-audio;
okt 23 23:37:15 Desktop-Ubuntu mopidy[8864]: TRACE    2022-10-23 23:37:15,743 [8864:FileBackend-3 (_actor_loop)] mopidy.audio.scan
okt 23 23:37:15 Desktop-Ubuntu mopidy[8864]:   Looking up file URI: file:///home/gerard/Music/test.mp3
okt 23 23:37:15 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:37:15,740 [8864:FileBackend-3 (_actor_loop)] mopidy.file.library
okt 23 23:37:15 Desktop-Ubuntu mopidy[8864]:   Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.add","params":{"uris":["file:///home/gerard/Music/test.mp3"],"at_position":0},"jsonrpc":"2.0","id":17}'
okt 23 23:37:15 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:37:15,740 [8864:HttpServer] mopidy.http.handlers
okt 23 23:37:15 Desktop-Ubuntu mopidy[8864]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 16, "result": [{"__model__": "TlTrack", "tlid": 2, "track": {"__model__": "Track", "uri": "file:///home/gerard/Music/test.mp3", "name": "Symphony No. 40 in G Minor, K. 550 - I. Molto Allegro", "artists": [{"__model__": "Artist", "name": "Czech National Symphony Orchestra"}], "album": {"__model__": "Album", "name": "Musopen Kickstarter Project", "artists": [{"__model__": "Artist", "name": "Czech National Symphony Orchestra"}]}, "composers": [{"__model__": "Artist", "name": "Wolfgang Amadeus Mozart"}], "genre": "Classical", "length": 358848}}]}'
okt 23 23:37:15 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:37:15,740 [8864:HttpServer] mopidy.http.handlers
okt 23 23:37:15 Desktop-Ubuntu mopidy[8864]:   Sending tracklist_changed to CoreListener: {}
okt 23 23:37:15 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:37:15,739 [8864:Core-6 (_actor_loop)] mopidy.listener
okt 23 23:37:15 Desktop-Ubuntu mopidy[8864]:   Triggering event: tracklist_changed()
okt 23 23:37:15 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:37:15,739 [8864:Core-6 (_actor_loop)] mopidy.core.tracklist
okt 23 23:37:15 Desktop-Ubuntu mopidy[8864]:   element pipeline1: GstMessageAsyncDone, running-time=(guint64)18446744073709551615;
okt 23 23:37:15 Desktop-Ubuntu mopidy[8864]: TRACE    2022-10-23 23:37:15,738 [8864:FileBackend-3 (_actor_loop)] mopidy.audio.scan
okt 23 23:37:15 Desktop-Ubuntu mopidy[8864]:   element fakesink1: GstMessageTag, taglist=(taglist)"taglist\,\ encoder\=\(string\)\"LAME\\\ 32bi...
okt 23 23:37:15 Desktop-Ubuntu mopidy[8864]: TRACE    2022-10-23 23:37:15,737 [8864:FileBackend-3 (_actor_loop)] mopidy.audio.scan
okt 23 23:37:15 Desktop-Ubuntu mopidy[8864]:   element fakesink1: GstMessageTag, taglist=(taglist)"taglist\,\ encoder\=\(string\)\"LAME\\\ 32bi...
okt 23 23:37:15 Desktop-Ubuntu mopidy[8864]: TRACE    2022-10-23 23:37:15,711 [8864:FileBackend-3 (_actor_loop)] mopidy.audio.scan
okt 23 23:37:15 Desktop-Ubuntu mopidy[8864]:   element mpegaudioparse1: GstMessageDurationChanged;
okt 23 23:37:15 Desktop-Ubuntu mopidy[8864]: TRACE    2022-10-23 23:37:15,685 [8864:FileBackend-3 (_actor_loop)] mopidy.audio.scan
okt 23 23:37:15 Desktop-Ubuntu mopidy[8864]:   element decodebin1: have-audio;
okt 23 23:37:15 Desktop-Ubuntu mopidy[8864]: TRACE    2022-10-23 23:37:15,685 [8864:FileBackend-3 (_actor_loop)] mopidy.audio.scan
okt 23 23:37:15 Desktop-Ubuntu mopidy[8864]:   Looking up file URI: file:///home/gerard/Music/test.mp3
okt 23 23:37:15 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:37:15,682 [8864:FileBackend-3 (_actor_loop)] mopidy.file.library
okt 23 23:37:15 Desktop-Ubuntu mopidy[8864]:   Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.add","params":{"uris":["file:///home/gerard/Music/test.mp3"],"at_position":0},"jsonrpc":"2.0","id":16}'
okt 23 23:37:15 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:37:15,682 [8864:HttpServer] mopidy.http.handlers
okt 23 23:37:15 Desktop-Ubuntu mopidy[8864]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 15, "result": 1}'
okt 23 23:37:15 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:37:15,682 [8864:HttpServer] mopidy.http.handlers
okt 23 23:37:15 Desktop-Ubuntu mopidy[8864]:   Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_next_tlid","params":{},"jsonrpc":"2.0","id":15}'
okt 23 23:37:15 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:37:15,681 [8864:HttpServer] mopidy.http.handlers
okt 23 23:37:15 Desktop-Ubuntu mopidy[8864]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 14, "result": [{"__model__": "TlTrack", "tlid": 1, "track": {"__model__": "Track", "uri": "file:///home/gerard/Music/test.mp3", "name": "Symphony No. 40 in G Minor, K. 550 - I. Molto Allegro", "artists": [{"__model__": "Artist", "name": "Czech National Symphony Orchestra"}], "album": {"__model__": "Album", "name": "Musopen Kickstarter Project", "artists": [{"__model__": "Artist", "name": "Czech National Symphony Orchestra"}]}, "composers": [{"__model__": "Artist", "name": "Wolfgang Amadeus Mozart"}], "genre": "Classical", "length": 358848}}]}'
okt 23 23:37:15 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:37:15,681 [8864:HttpServer] mopidy.http.handlers
okt 23 23:37:15 Desktop-Ubuntu mopidy[8864]:   Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_tl_tracks","params":{},"jsonrpc":"2.0","id":14}'
okt 23 23:37:15 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:37:15,680 [8864:HttpServer] mopidy.http.handlers
okt 23 23:37:15 Desktop-Ubuntu mopidy[8864]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 13, "result": null}'
okt 23 23:37:15 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:37:15,680 [8864:HttpServer] mopidy.http.handlers
okt 23 23:37:15 Desktop-Ubuntu mopidy[8864]:   Sending volume_changed to CoreListener: {'volume': 100}
okt 23 23:37:15 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:37:15,679 [8864:Core-6 (_actor_loop)] mopidy.listener
okt 23 23:37:15 Desktop-Ubuntu mopidy[8864]:   Track is not playable: file:///home/gerard/Music/test.mp3
okt 23 23:37:15 Desktop-Ubuntu mopidy[8864]: WARNING  2022-10-23 23:37:15,679 [8864:Core-6 (_actor_loop)] mopidy.core.tracklist
okt 23 23:37:15 Desktop-Ubuntu mopidy[8864]:   Changing state to GST_STATE_NULL: result=GST_STATE_CHANGE_SUCCESS
okt 23 23:37:15 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:37:15,679 [8864:MainThread] mopidy.audio.gst
okt 23 23:37:15 Desktop-Ubuntu mopidy[8864]:   Setting GStreamer state to GST_STATE_PLAYING failed
okt 23 23:37:15 Desktop-Ubuntu mopidy[8864]: WARNING  2022-10-23 23:37:15,679 [8864:Audio-2 (_actor_loop)] mopidy.audio.actor
okt 23 23:37:15 Desktop-Ubuntu mopidy[8864]:   Changing state to GST_STATE_PLAYING: result=GST_STATE_CHANGE_FAILURE
okt 23 23:37:15 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:37:15,679 [8864:Audio-2 (_actor_loop)] mopidy.audio.gst
okt 23 23:37:15 Desktop-Ubuntu mopidy[8864]:   Got ERROR bus message: error=GLib.Error('Failed to connect: Timeout', 'gst-resource-error-quark', 1) debug='../ext/pulse/pulsesink.c(615): gst_pulseringbuffer_open_device (): /GstBin:audio-sink/mopidy+audio+actor+_Outputs:mopidy+audio+actor+_outputs0/GstBin:bin0/GstPulseSink:pulsesink0'
okt 23 23:37:15 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:37:15,679 [8864:MainThread] mopidy.audio.gst
okt 23 23:37:15 Desktop-Ubuntu mopidy[8864]:   GStreamer error: Failed to connect: Timeout
okt 23 23:37:15 Desktop-Ubuntu mopidy[8864]: ERROR    2022-10-23 23:37:15,678 [8864:MainThread] mopidy.audio.gst
okt 23 23:36:45 Desktop-Ubuntu mopidy[8864]:   Sending volume_changed to MixerListener: {'volume': 100}
okt 23 23:36:45 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:36:45,648 [8864:SoftwareMixer-1 (_actor_loop)] mopidy.listener
okt 23 23:36:45 Desktop-Ubuntu mopidy[8864]:   Mixer event: volume_changed(volume=100)
okt 23 23:36:45 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:36:45,648 [8864:SoftwareMixer-1 (_actor_loop)] mopidy.mixer
okt 23 23:36:45 Desktop-Ubuntu mopidy[8864]:   Flags: 2
okt 23 23:36:45 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:36:45,647 [8864:Audio-2 (_actor_loop)] mopidy.audio.actor
okt 23 23:36:45 Desktop-Ubuntu mopidy[8864]:   Got STATE_CHANGED bus message: old=GST_STATE_NULL new=GST_STATE_READY pending=GST_STATE_VOID_PENDING
okt 23 23:36:45 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:36:45,647 [8864:MainThread] mopidy.audio.gst
okt 23 23:36:45 Desktop-Ubuntu mopidy[8864]:   Changing state to GST_STATE_READY: result=GST_STATE_CHANGE_SUCCESS
okt 23 23:36:45 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:36:45,646 [8864:Audio-2 (_actor_loop)] mopidy.audio.gst
okt 23 23:36:45 Desktop-Ubuntu mopidy[8864]:   Received WebSocket message from 127.0.0.1: '{"method":"core.playback.play","params":{"tlid":1},"jsonrpc":"2.0","id":13}'
okt 23 23:36:45 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:36:45,643 [8864:HttpServer] mopidy.http.handlers
okt 23 23:36:45 Desktop-Ubuntu mopidy[8864]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 12, "result": [{"__model__": "TlTrack", "tlid": 1, "track": {"__model__": "Track", "uri": "file:///home/gerard/Music/test.mp3", "name": "Symphony No. 40 in G Minor, K. 550 - I. Molto Allegro", "artists": [{"__model__": "Artist", "name": "Czech National Symphony Orchestra"}], "album": {"__model__": "Album", "name": "Musopen Kickstarter Project", "artists": [{"__model__": "Artist", "name": "Czech National Symphony Orchestra"}]}, "composers": [{"__model__": "Artist", "name": "Wolfgang Amadeus Mozart"}], "genre": "Classical", "length": 358848}}]}'
okt 23 23:36:45 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:36:45,641 [8864:HttpServer] mopidy.http.handlers
okt 23 23:36:45 Desktop-Ubuntu mopidy[8864]:   Sending tracklist_changed to CoreListener: {}
okt 23 23:36:45 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:36:45,640 [8864:Core-6 (_actor_loop)] mopidy.listener
okt 23 23:36:45 Desktop-Ubuntu mopidy[8864]:   Triggering event: tracklist_changed()
okt 23 23:36:45 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:36:45,640 [8864:Core-6 (_actor_loop)] mopidy.core.tracklist
okt 23 23:36:45 Desktop-Ubuntu mopidy[8864]:   element pipeline0: GstMessageAsyncDone, running-time=(guint64)18446744073709551615;
okt 23 23:36:45 Desktop-Ubuntu mopidy[8864]: TRACE    2022-10-23 23:36:45,638 [8864:FileBackend-3 (_actor_loop)] mopidy.audio.scan
okt 23 23:36:45 Desktop-Ubuntu mopidy[8864]:   element fakesink0: GstMessageTag, taglist=(taglist)"taglist\,\ encoder\=\(string\)\"LAME\\\ 32bi...
okt 23 23:36:45 Desktop-Ubuntu mopidy[8864]: TRACE    2022-10-23 23:36:45,637 [8864:FileBackend-3 (_actor_loop)] mopidy.audio.scan
okt 23 23:36:45 Desktop-Ubuntu mopidy[8864]:   element fakesink0: GstMessageTag, taglist=(taglist)"taglist\,\ encoder\=\(string\)\"LAME\\\ 32bi...
okt 23 23:36:45 Desktop-Ubuntu mopidy[8864]: TRACE    2022-10-23 23:36:45,611 [8864:FileBackend-3 (_actor_loop)] mopidy.audio.scan
okt 23 23:36:45 Desktop-Ubuntu mopidy[8864]:   element mpegaudioparse0: GstMessageDurationChanged;
okt 23 23:36:45 Desktop-Ubuntu mopidy[8864]: TRACE    2022-10-23 23:36:45,585 [8864:FileBackend-3 (_actor_loop)] mopidy.audio.scan
okt 23 23:36:45 Desktop-Ubuntu mopidy[8864]:   element decodebin0: have-audio;
okt 23 23:36:45 Desktop-Ubuntu mopidy[8864]: TRACE    2022-10-23 23:36:45,583 [8864:FileBackend-3 (_actor_loop)] mopidy.audio.scan
okt 23 23:36:45 Desktop-Ubuntu mopidy[8864]:   Looking up file URI: file:///home/gerard/Music/test.mp3
okt 23 23:36:45 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:36:45,574 [8864:FileBackend-3 (_actor_loop)] mopidy.file.library
okt 23 23:36:45 Desktop-Ubuntu mopidy[8864]:   Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.add","params":{"uris":["file:///home/gerard/Music/test.mp3"],"at_position":0},"jsonrpc":"2.0","id":12}'
okt 23 23:36:45 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:36:45,572 [8864:HttpServer] mopidy.http.handlers
okt 23 23:36:42 Desktop-Ubuntu mopidy[8864]:   {'id': 166656100278040, 'jsonrpc': '2.0', 'method': 'get_version', 'result': {'version': {'current': '3.64.1', 'latest': '3.64.1', 'is_root': False, 'upgrade_available': False}}, 'recipient': '0F4WM96J0GH6'}
okt 23 23:36:42 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:36:42,904 [8864:HttpServer] mopidy_iris.core
okt 23 23:36:42 Desktop-Ubuntu mopidy[8864]:   Iris websocket message received: {"jsonrpc":"2.0","id":166656100278040,"method":"get_version"}
okt 23 23:36:42 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:36:42,781 [8864:HttpServer] mopidy_iris.handlers
okt 23 23:36:42 Desktop-Ubuntu mopidy[8864]:   304 GET /iris/assets/favicon_paused.png (127.0.0.1) 0.75ms
okt 23 23:36:42 Desktop-Ubuntu mopidy[8864]: INFO     2022-10-23 23:36:42,480 [8864:HttpServer] tornado.access
okt 23 23:36:42 Desktop-Ubuntu mopidy[8864]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 11, "result": null}'
okt 23 23:36:42 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:36:42,345 [8864:HttpServer] mopidy.http.handlers
okt 23 23:36:42 Desktop-Ubuntu mopidy[8864]:   Received WebSocket message from 127.0.0.1: '{"method":"core.playback.get_stream_title","params":{},"jsonrpc":"2.0","id":11}'
okt 23 23:36:42 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:36:42,344 [8864:HttpServer] mopidy.http.handlers
okt 23 23:36:42 Desktop-Ubuntu mopidy[8864]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 10, "result": ["file", "http", "https", "m3u", "rtsp"]}'
okt 23 23:36:42 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:36:42,344 [8864:HttpServer] mopidy.http.handlers
okt 23 23:36:42 Desktop-Ubuntu mopidy[8864]:   Received WebSocket message from 127.0.0.1: '{"method":"core.get_uri_schemes","params":{},"jsonrpc":"2.0","id":10}'
okt 23 23:36:42 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:36:42,343 [8864:HttpServer] mopidy.http.handlers
okt 23 23:36:42 Desktop-Ubuntu mopidy[8864]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 9, "result": 0}'
okt 23 23:36:42 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:36:42,343 [8864:HttpServer] mopidy.http.handlers
okt 23 23:36:42 Desktop-Ubuntu mopidy[8864]:   Received WebSocket message from 127.0.0.1: '{"method":"core.playback.get_time_position","params":{},"jsonrpc":"2.0","id":9}'
okt 23 23:36:42 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:36:42,343 [8864:HttpServer] mopidy.http.handlers
okt 23 23:36:42 Desktop-Ubuntu mopidy[8864]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 8, "result": []}'
okt 23 23:36:42 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:36:42,342 [8864:HttpServer] mopidy.http.handlers
okt 23 23:36:42 Desktop-Ubuntu mopidy[8864]:   Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_tl_tracks","params":{},"jsonrpc":"2.0","id":8}'
okt 23 23:36:42 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:36:42,342 [8864:HttpServer] mopidy.http.handlers
okt 23 23:36:42 Desktop-Ubuntu mopidy[8864]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 7, "result": false}'
okt 23 23:36:42 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:36:42,342 [8864:HttpServer] mopidy.http.handlers
okt 23 23:36:42 Desktop-Ubuntu mopidy[8864]:   Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_repeat","params":{},"jsonrpc":"2.0","id":7}'
okt 23 23:36:42 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:36:42,341 [8864:HttpServer] mopidy.http.handlers
okt 23 23:36:42 Desktop-Ubuntu mopidy[8864]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 6, "result": false}'
okt 23 23:36:42 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:36:42,341 [8864:HttpServer] mopidy.http.handlers
okt 23 23:36:42 Desktop-Ubuntu mopidy[8864]:   Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_random","params":{},"jsonrpc":"2.0","id":6}'
okt 23 23:36:42 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:36:42,341 [8864:HttpServer] mopidy.http.handlers
okt 23 23:36:42 Desktop-Ubuntu mopidy[8864]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 5, "result": false}'
okt 23 23:36:42 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:36:42,340 [8864:HttpServer] mopidy.http.handlers
okt 23 23:36:42 Desktop-Ubuntu mopidy[8864]:   Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_consume","params":{},"jsonrpc":"2.0","id":5}'
okt 23 23:36:42 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:36:42,340 [8864:HttpServer] mopidy.http.handlers
okt 23 23:36:42 Desktop-Ubuntu mopidy[8864]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 4, "result": false}'
okt 23 23:36:42 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:36:42,340 [8864:HttpServer] mopidy.http.handlers
okt 23 23:36:42 Desktop-Ubuntu mopidy[8864]:   Received WebSocket message from 127.0.0.1: '{"method":"core.mixer.get_mute","params":{},"jsonrpc":"2.0","id":4}'
okt 23 23:36:42 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:36:42,339 [8864:HttpServer] mopidy.http.handlers
okt 23 23:36:42 Desktop-Ubuntu mopidy[8864]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 3, "result": 100}'
okt 23 23:36:42 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:36:42,339 [8864:HttpServer] mopidy.http.handlers
okt 23 23:36:42 Desktop-Ubuntu mopidy[8864]:   Received WebSocket message from 127.0.0.1: '{"method":"core.mixer.get_volume","params":{},"jsonrpc":"2.0","id":3}'
okt 23 23:36:42 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:36:42,338 [8864:HttpServer] mopidy.http.handlers
okt 23 23:36:42 Desktop-Ubuntu mopidy[8864]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 2, "result": "stopped"}'
okt 23 23:36:42 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:36:42,338 [8864:HttpServer] mopidy.http.handlers
okt 23 23:36:42 Desktop-Ubuntu mopidy[8864]:   Received WebSocket message from 127.0.0.1: '{"method":"core.playback.get_state","params":{},"jsonrpc":"2.0","id":2}'
okt 23 23:36:42 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:36:42,338 [8864:HttpServer] mopidy.http.handlers
okt 23 23:36:42 Desktop-Ubuntu mopidy[8864]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 1, "result": null}'
okt 23 23:36:42 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:36:42,338 [8864:HttpServer] mopidy.http.handlers
okt 23 23:36:42 Desktop-Ubuntu mopidy[8864]:   Received WebSocket message from 127.0.0.1: '{"method":"core.playback.get_current_tl_track","params":{},"jsonrpc":"2.0","id":1}'
okt 23 23:36:42 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:36:42,337 [8864:HttpServer] mopidy.http.handlers
okt 23 23:36:42 Desktop-Ubuntu mopidy[8864]:   {'id': 166656100227910, 'jsonrpc': '2.0', 'method': 'get_queue_metadata', 'result': {'queue_metadata': {}}, 'recipient': '0F4WM96J0GH6'}
okt 23 23:36:42 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:36:42,280 [8864:HttpServer] mopidy_iris.core
okt 23 23:36:42 Desktop-Ubuntu mopidy[8864]:   Iris websocket message received: {"jsonrpc":"2.0","id":166656100227910,"method":"get_queue_metadata"}
okt 23 23:36:42 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:36:42,280 [8864:HttpServer] mopidy_iris.handlers
okt 23 23:36:42 Desktop-Ubuntu mopidy[8864]:   {'id': 166656100227897, 'jsonrpc': '2.0', 'method': 'get_pinned', 'result': {'pinned': []}, 'recipient': '0F4WM96J0GH6'}
okt 23 23:36:42 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:36:42,280 [8864:HttpServer] mopidy_iris.core
okt 23 23:36:42 Desktop-Ubuntu mopidy[8864]:   Iris websocket message received: {"jsonrpc":"2.0","id":166656100227897,"method":"get_pinned"}
okt 23 23:36:42 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:36:42,279 [8864:HttpServer] mopidy_iris.handlers
okt 23 23:36:42 Desktop-Ubuntu mopidy[8864]:   {'id': 166656100227757, 'jsonrpc': '2.0', 'method': 'get_commands', 'result': {'commands': {}}, 'recipient': '0F4WM96J0GH6'}
okt 23 23:36:42 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:36:42,279 [8864:HttpServer] mopidy_iris.core
okt 23 23:36:42 Desktop-Ubuntu mopidy[8864]:   Iris websocket message received: {"jsonrpc":"2.0","id":166656100227757,"method":"get_commands"}
okt 23 23:36:42 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:36:42,279 [8864:HttpServer] mopidy_iris.handlers
okt 23 23:36:42 Desktop-Ubuntu mopidy[8864]:   {'id': 166656100227649, 'jsonrpc': '2.0', 'method': 'get_radio', 'result': {'radio': {'enabled': 0, 'seed_artists': [], 'seed_genres': [], 'seed_tracks': [], 'results': []}}, 'recipient': '0F4WM96J0GH6'}
okt 23 23:36:42 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:36:42,279 [8864:HttpServer] mopidy_iris.core
okt 23 23:36:42 Desktop-Ubuntu mopidy[8864]:   Iris websocket message received: {"jsonrpc":"2.0","id":166656100227649,"method":"get_radio"}
okt 23 23:36:42 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:36:42,279 [8864:HttpServer] mopidy_iris.handlers
okt 23 23:36:42 Desktop-Ubuntu mopidy[8864]:   {'id': 166656100227594, 'jsonrpc': '2.0', 'method': 'get_shared_config', 'result': {'shared_config': {}}, 'recipient': '0F4WM96J0GH6'}
okt 23 23:36:42 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:36:42,278 [8864:HttpServer] mopidy_iris.core
okt 23 23:36:42 Desktop-Ubuntu mopidy[8864]:   Iris websocket message received: {"jsonrpc":"2.0","id":166656100227594,"method":"get_shared_config"}
okt 23 23:36:42 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:36:42,278 [8864:HttpServer] mopidy_iris.handlers
okt 23 23:36:42 Desktop-Ubuntu mopidy[8864]:   {'id': 166656100227475, 'jsonrpc': '2.0', 'method': 'get_config', 'result': {'config': {'is_root': False, 'spotify_username': False, 'country': 'NZ', 'locale': 'en_NZ', 'snapcast_enabled': True, 'snapcast_host': 'localhost', 'snapcast_port': '1780', 'snapcast_ssl': False, 'snapcast_stream': 'Default', 'spotify_authorization_url': 'https://jamesbarnsley.co.nz/iris/auth_spotify.php', 'lastfm_authorization_url': 'https://jamesbarnsley.co.nz/iris/auth_lastfm.php', 'genius_authorization_url': 'https://jamesbarnsley.co.nz/iris/auth_genius.php', 'shared_config': {}}}, 'recipient': '0F4WM96J0GH6'}
okt 23 23:36:42 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:36:42,278 [8864:HttpServer] mopidy_iris.core
okt 23 23:36:42 Desktop-Ubuntu mopidy[8864]:   Iris websocket message received: {"jsonrpc":"2.0","id":166656100227475,"method":"get_config"}
okt 23 23:36:42 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:36:42,277 [8864:HttpServer] mopidy_iris.handlers
okt 23 23:36:42 Desktop-Ubuntu mopidy[8864]:   {'id': 166656100227131, 'jsonrpc': '2.0', 'method': 'update_connection', 'result': {'connection': {'connection_id': '0F4WM96J0GH6', 'ip': '127.0.0.1', 'created': '2022-10-23 23:36:42', 'username': 166637467060576, 'client_id': 166637467060628}}, 'recipient': '0F4WM96J0GH6'}
okt 23 23:36:42 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:36:42,277 [8864:HttpServer] mopidy_iris.core
okt 23 23:36:42 Desktop-Ubuntu mopidy[8864]:   {'method': 'connection_changed', 'params': {'connection': {'connection_id': '0F4WM96J0GH6', 'ip': '127.0.0.1', 'created': '2022-10-23 23:36:42', 'username': 166637467060576, 'client_id': 166637467060628}}}
okt 23 23:36:42 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:36:42,277 [8864:HttpServer] mopidy_iris.core
okt 23 23:36:42 Desktop-Ubuntu mopidy[8864]:   Iris websocket message received: {"jsonrpc":"2.0","id":166656100227131,"method":"update_connection","params":{"username":166637467060576,"client_id":166637467060628}}
okt 23 23:36:42 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:36:42,277 [8864:HttpServer] mopidy_iris.handlers
okt 23 23:36:42 Desktop-Ubuntu mopidy[8864]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 0, "result": {"core.get_uri_schemes": {"description": "Get list of URI schemes we can handle", "params": []}, "core.get_version": {"description": "Get version of the Mopidy core API", "params": []}, "core.history.get_history": {"description": "Get the track history.\\n\\nThe timestamps are milliseconds since epoch.\\n\\n:returns: the track history\\n:rtype: list of (timestamp, :class:`mopidy.models.Ref`) tuples", "params": []}, "core.history.get_length": {"description": "Get the number of tracks in the history.\\n\\n:returns: the history length\\n:rtype: int", "params": []}, "core.library.browse": {"description": "Browse directories and tracks at the given ``uri``.\\n\\n``uri`` is a string which represents some directory belonging to a\\nbackend. To get the intial root directories for backends pass\\n:class:`None` as the URI.\\n\\nReturns a list of :class:`mopidy.models.Ref` objects for the\\ndirectories and tracks at the given ``uri``.\\n\\nThe :class:`~mopidy.models.Ref` objects representing tracks keep the\\ntrack\'s original URI. A matching pair of objects can look like this::\\n\\n    Track(uri=\'dummy:/foo.mp3\', name=\'foo\', artists=..., album=...)\\n    Ref.track(uri=\'dummy:/foo.mp3\', name=\'foo\')\\n\\nThe :class:`~mopidy.models.Ref` objects representing directories have\\nbackend specific URIs. These are opaque values, so no one but the\\nbackend that created them should try and derive any meaning from them.\\nThe only valid exception to this is checking the scheme, as it is used\\nto route browse requests to the correct backend.\\n\\nFor example, the dummy library\'s ``/bar`` directory could be returned\\nlike this::\\n\\n    Ref.directory(uri=\'dummy:directory:/bar\', name=\'bar\')\\n\\n:param string uri: URI to browse\\n:rtype: list of :class:`mopidy.models.Ref`\\n\\n.. versionadded:: 0.18", "params": [{"name": "uri"}]}, "core.library.get_distinct": {"description": "List distinct values for a given field from the library.\\n\\nThis has mainly been added to support the list commands the MPD\\nprotocol supports in a more sane fashion. Other frontends are not\\nrecommended to use this method.\\n\\n:param string field: Any one of ``uri``, ``track_name``, ``album``,\\n    ``artist``, ``albumartist``, ``composer``, ``performer``,\\n    ``track_no``, ``genre``, ``date``, ``comment``, ``disc_no``,\\n    ``musicbrainz_albumid``, ``musicbrainz_artistid``, or\\n    ``musicbrainz_trackid``.\\n:param dict query: Query to use for limiting results, see\\n    :meth:`search` for details about the query format.\\n:rtype: set of values corresponding to the requested field type.\\n\\n.. versionadded:: 1.0", "params": [{"name": "field"}, {"name": "query", "default": null}]}, "core.library.get_images": {"description": "Lookup the images for the given URIs\\n\\nBackends can use this to return image URIs for any URI they know about\\nbe it tracks, albums, playlists. The lookup result is a dictionary\\nmapping the provided URIs to lists of images.\\n\\nUnknown URIs or URIs the corresponding backend couldn\'t find anything\\nfor will simply return an empty list for that URI.\\n\\n:param uris: list of URIs to find images for\\n:type uris: list of string\\n:rtype: {uri: tuple of :class:`mopidy.models.Image`}\\n\\n.. versionadded:: 1.0", "params": [{"name": "uris"}]}, "core.library.lookup": {"description": "Lookup the given URIs.\\n\\nIf the URI expands to multiple tracks, the returned list will contain\\nthem all.\\n\\n:param uris: track URIs\\n:type uris: list of string\\n:rtype: {uri: list of :class:`mopidy.models.Track`}", "params": [{"name": "uris"}]}, "core.library.refresh": {"description": "Refresh library. Limit to URI and below if an URI is given.\\n\\n:param uri: directory or track URI\\n:type uri: string", "params": [{"name": "uri", "default": null}]}, "core.library.search": {"description": "Search the library for tracks where ``field`` contains ``values``.\\n\\n``field`` can be one of ``uri``, ``track_name``, ``album``, ``artist``,\\n``albumartist``, ``composer``, ``performer``, ``track_no``, ``genre``,\\n``date``, ``comment``, ``disc_no``, ``musicbrainz_albumid``,\\n``musicbrainz_artistid``, ``musicbrainz_trackid`` or ``any``.\\n\\nIf ``uris`` is given, the search is limited to results from within the\\nURI roots. For example passing ``uris=[\'file:\']`` will limit the search\\nto the local backend.\\n\\nExamples::\\n\\n    # Returns results matching \'a\' in any backend\\n    search({\'any\': [\'a\']})\\n\\n    # Returns results matching artist \'xyz\' in any backend\\n    search({\'artist\': [\'xyz\']})\\n\\n    # Returns results matching \'a\' and \'b\' and artist \'xyz\' in any\\n    # backend\\n    search({\'any\': [\'a\', \'b\'], \'artist\': [\'xyz\']})\\n\\n    # Returns results matching \'a\' if within the given URI roots\\n    # \\"file:///media/music\\" and \\"spotify:\\"\\n    search({\'any\': [\'a\']}, uris=[\'file:///media/music\', \'spotify:\'])\\n\\n    # Returns results matching artist \'xyz\' and \'abc\' in any backend\\n    search({\'artist\': [\'xyz\', \'abc\']})\\n\\n:param query: one or more queries to search for\\n:type query: dict\\n:param uris: zero or more URI roots to limit the search to\\n:type uris: list of string or :class:`None`\\n:param exact: if the search should use exact matching\\n:type exact: :class:`bool`\\n:rtype: list of :class:`mopidy.models.SearchResult`\\n\\n.. versionadded:: 1.0\\n    The ``exact`` keyword argument.", "params": [{"name": "query"}, {"name": "uris", "default": null}, {"name": "exact", "default": false}]}, "core.mixer.get_mute": {"description": "Get mute state.\\n\\n:class:`True` if muted, :class:`False` unmuted, :class:`None` if\\nunknown.", "params": []}, "core.mixer.get_volume": {"description": "Get the volume.\\n\\nInteger in range [0..100] or :class:`None` if unknown.\\n\\nThe volume scale is linear.", "params": []}, "core.mixer.set_mute": {"description": "Set mute state.\\n\\n:class:`True` to mute, :class:`False` to unmute.\\n\\nReturns :class:`True` if call is successful, otherwise :class:`False`.", "params": [{"name": "mute"}]}, "core.mixer.set_volume": {"description": "Set the volume.\\n\\nThe volume is defined as an integer in range [0..100].\\n\\nThe volume scale is linear.\\n\\nReturns :class:`True` if call is successful, otherwise :class:`False`.", "params": [{"name": "volume"}]}, "core.playback.get_current_tl_track": {"description": "Get the currently playing or selected track.\\n\\nReturns a :class:`mopidy.models.TlTrack` or :class:`None`.", "params": []}, "core.playback.get_current_tlid": {"description": "Get the currently playing or selected TLID.\\n\\nExtracted from :meth:`get_current_tl_track` for convenience.\\n\\nReturns a :class:`int` or :class:`None`.\\n\\n.. versionadded:: 1.1", "params": []}, "core.playback.get_current_track": {"description": "Get the currently playing or selected track.\\n\\nExtracted from :meth:`get_current_tl_track` for convenience.\\n\\nReturns a :class:`mopidy.models.Track` or :class:`None`.", "params": []}, "core.playback.get_state": {"description": "Get The playback state.", "params": []}, "core.playback.get_stream_title": {"description": "Get the current stream title or :class:`None`.", "params": []}, "core.playback.get_time_position": {"description": "Get time position in milliseconds.", "params": []}, "core.playback.next": {"description": "Change to the next track.\\n\\nThe current playback state will be kept. If it was playing, playing\\nwill continue. If it was paused, it will still be paused, etc.", "params": []}, "core.playback.pause": {"description": "Pause playback.", "params": []}, "core.playback.play": {"description": "Play the given track, or if the given tl_track and tlid is\\n:class:`None`, play the currently active track.\\n\\nNote that the track **must** already be in the tracklist.\\n\\n.. deprecated:: 3.0\\n    The ``tl_track`` argument. Use ``tlid`` instead.\\n\\n:param tl_track: track to play\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:param tlid: TLID of the track to play\\n:type tlid: :class:`int` or :class:`None`", "params": [{"name": "tl_track", "default": null}, {"name": "tlid", "default": null}]}, "core.playback.previous": {"description": "Change to the previous track.\\n\\nThe current playback state will be kept. If it was playing, playing\\nwill continue. If it was paused, it will still be paused, etc.", "params": []}, "core.playback.resume": {"description": "If paused, resume playing the current track.", "params": []}, "core.playback.seek": {"description": "Seeks to time position given in milliseconds.\\n\\n:param time_position: time position in milliseconds\\n:type time_position: int\\n:rtype: :class:`True` if successful, else :class:`False`", "params": [{"name": "time_position"}]}, "core.playback.set_state": {"description": "Set the playback state.\\n\\nMust be :attr:`PLAYING`, :attr:`PAUSED`, or :attr:`STOPPED`.\\n\\nPossible states and transitions:\\n\\n.. digraph:: state_transitions\\n\\n    \\"STOPPED\\" -> \\"PLAYING\\" [ label=\\"play\\" ]\\n    \\"STOPPED\\" -> \\"PAUSED\\" [ label=\\"pause\\" ]\\n    \\"PLAYING\\" -> \\"STOPPED\\" [ label=\\"stop\\" ]\\n    \\"PLAYING\\" -> \\"PAUSED\\" [ label=\\"pause\\" ]\\n    \\"PLAYING\\" -> \\"PLAYING\\" [ label=\\"play\\" ]\\n    \\"PAUSED\\" -> \\"PLAYING\\" [ label=\\"resume\\" ]\\n    \\"PAUSED\\" -> \\"STOPPED\\" [ label=\\"stop\\" ]", "params": [{"name": "new_state"}]}, "core.playback.stop": {"description": "Stop playing.", "params": []}, "core.playlists.as_list": {"description": "Get a list of the currently available playlists.\\n\\nReturns a list of :class:`~mopidy.models.Ref` objects referring to the\\nplaylists. In other words, no information about the playlists\' content\\nis given.\\n\\n:rtype: list of :class:`mopidy.models.Ref`\\n\\n.. versionadded:: 1.0", "params": []}, "core.playlists.create": {"description": "Create a new playlist.\\n\\nIf ``uri_scheme`` matches an URI scheme handled by a current backend,\\nthat backend is asked to create the playlist. If ``uri_scheme`` is\\n:class:`None` or doesn\'t match a current backend, the first backend is\\nasked to create the playlist.\\n\\nAll new playlists must be created by calling this method, and **not**\\nby creating new instances of :class:`mopidy.models.Playlist`.\\n\\n:param name: name of the new playlist\\n:type name: string\\n:param uri_scheme: use the backend matching the URI scheme\\n:type uri_scheme: string\\n:rtype: :class:`mopidy.models.Playlist` or :class:`None`", "params": [{"name": "name"}, {"name": "uri_scheme", "default": null}]}, "core.playlists.delete": {"description": "Delete playlist identified by the URI.\\n\\nIf the URI doesn\'t match the URI schemes handled by the current\\nbackends, nothing happens.\\n\\nReturns :class:`True` if deleted, :class:`False` otherwise.\\n\\n:param uri: URI of the playlist to delete\\n:type uri: string\\n:rtype: :class:`bool`\\n\\n.. versionchanged:: 2.2\\n    Return type defined.", "params": [{"name": "uri"}]}, "core.playlists.get_items": {"description": "Get the items in a playlist specified by ``uri``.\\n\\nReturns a list of :class:`~mopidy.models.Ref` objects referring to the\\nplaylist\'s items.\\n\\nIf a playlist with the given ``uri`` doesn\'t exist, it returns\\n:class:`None`.\\n\\n:rtype: list of :class:`mopidy.models.Ref`, or :class:`None`\\n\\n.. versionadded:: 1.0", "params": [{"name": "uri"}]}, "core.playlists.get_uri_schemes": {"description": "Get the list of URI schemes that support playlists.\\n\\n:rtype: list of string\\n\\n.. versionadded:: 2.0", "params": []}, "core.playlists.lookup": {"description": "Lookup playlist with given URI in both the set of playlists and in any\\nother playlist sources. Returns :class:`None` if not found.\\n\\n:param uri: playlist URI\\n:type uri: string\\n:rtype: :class:`mopidy.models.Playlist` or :class:`None`", "params": [{"name": "uri"}]}, "core.playlists.refresh": {"description": "Refresh the playlists in :attr:`playlists`.\\n\\nIf ``uri_scheme`` is :class:`None`, all backends are asked to refresh.\\nIf ``uri_scheme`` is an URI scheme handled by a backend, only that\\nbackend is asked to refresh. If ``uri_scheme`` doesn\'t match any\\ncurrent backend, nothing happens.\\n\\n:param uri_scheme: limit to the backend matching the URI scheme\\n:type uri_scheme: string", "params": [{"name": "uri_scheme", "default": null}]}, "core.playlists.save": {"description": "Save the playlist.\\n\\nFor a playlist to be saveable, it must have the ``uri`` attribute set.\\nYou must not set the ``uri`` atribute yourself, but use playlist\\nobjects returned by :meth:`create` or retrieved from :attr:`playlists`,\\nwhich will always give you saveable playlists.\\n\\nThe method returns the saved playlist. The return playlist may differ\\nfrom the saved playlist. E.g. if the playlist name was changed, the\\nreturned playlist may have a different URI. The caller of this method\\nmust throw away the playlist sent to this method, and use the\\nreturned playlist instead.\\n\\nIf the playlist\'s URI isn\'t set or doesn\'t match the URI scheme of a\\ncurrent backend, nothing is done and :class:`None` is returned.\\n\\n:param playlist: the playlist\\n:type playlist: :class:`mopidy.models.Playlist`\\n:rtype: :class:`mopidy.models.Playlist` or :class:`None`", "params": [{"name": "playlist"}]}, "core.tracklist.add": {"description": "Add tracks to the tracklist.\\n\\nIf ``uris`` is given instead of ``tracks``, the URIs are\\nlooked up in the library and the resulting tracks are added to the\\ntracklist.\\n\\nIf ``at_position`` is given, the tracks are inserted at the given\\nposition in the tracklist. If ``at_position`` is not given, the tracks\\nare appended to the end of the tracklist.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.\\n\\n:param tracks: tracks to add\\n:type tracks: list of :class:`mopidy.models.Track` or :class:`None`\\n:param at_position: position in tracklist to add tracks\\n:type at_position: int or :class:`None`\\n:param uris: list of URIs for tracks to add\\n:type uris: list of string or :class:`None`\\n:rtype: list of :class:`mopidy.models.TlTrack`\\n\\n.. versionadded:: 1.0\\n    The ``uris`` argument.\\n\\n.. deprecated:: 1.0\\n    The ``tracks`` argument. Use ``uris``.", "params": [{"name": "tracks", "default": null}, {"name": "at_position", "default": null}, {"name": "uris", "default": null}]}, "core.tracklist.clear": {"description": "Clear the tracklist.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.", "params": []}, "core.tracklist.eot_track": {"description": "The track that will be played after the given track.\\n\\nNot necessarily the same track as :meth:`next_track`.\\n\\n.. deprecated:: 3.0\\n    Use :meth:`get_eot_tlid` instead.\\n\\n:param tl_track: the reference track\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:rtype: :class:`mopidy.models.TlTrack` or :class:`None`", "params": [{"name": "tl_track"}]}, "core.tracklist.filter": {"description": "Filter the tracklist by the given criteria.\\n\\nEach rule in the criteria consists of a model field and a list of\\nvalues to compare it against. If the model field matches any of the\\nvalues, it may be returned.\\n\\nOnly tracks that match all the given criteria are returned.\\n\\nExamples::\\n\\n    # Returns tracks with TLIDs 1, 2, 3, or 4 (tracklist ID)\\n    filter({\'tlid\': [1, 2, 3, 4]})\\n\\n    # Returns track with URIs \'xyz\' or \'abc\'\\n    filter({\'uri\': [\'xyz\', \'abc\']})\\n\\n    # Returns track with a matching TLIDs (1, 3 or 6) and a\\n    # matching URI (\'xyz\' or \'abc\')\\n    filter({\'tlid\': [1, 3, 6], \'uri\': [\'xyz\', \'abc\']})\\n\\n:param criteria: one or more rules to match by\\n:type criteria: dict, of (string, list) pairs\\n:rtype: list of :class:`mopidy.models.TlTrack`", "params": [{"name": "criteria"}]}, "core.tracklist.get_consume": {"description": "Get consume mode.\\n\\n:class:`True`\\n    Tracks are removed from the tracklist when they have been played.\\n:class:`False`\\n    Tracks are not removed from the tracklist.", "params": []}, "core.tracklist.get_eot_tlid": {"description": "The TLID of the track that will be played after the current track.\\n\\nNot necessarily the same TLID as returned by :meth:`get_next_tlid`.\\n\\n:rtype: :class:`int` or :class:`None`\\n\\n.. versionadded:: 1.1", "params": []}, "core.tracklist.get_length": {"description": "Get length of the tracklist.", "params": []}, "core.tracklist.get_next_tlid": {"description": "The tlid of the track that will be played if calling\\n:meth:`mopidy.core.PlaybackController.next()`.\\n\\nFor normal playback this is the next track in the tracklist. If repeat\\nis enabled the next track can loop around the tracklist. When random is\\nenabled this should be a random track, all tracks should be played once\\nbefore the tracklist repeats.\\n\\n:rtype: :class:`int` or :class:`None`\\n\\n.. versionadded:: 1.1", "params": []}, "core.tracklist.get_previous_tlid": {"description": "Returns the TLID of the track that will be played if calling\\n:meth:`mopidy.core.PlaybackController.previous()`.\\n\\nFor normal playback this is the previous track in the tracklist. If\\nrandom and/or consume is enabled it should return the current track\\ninstead.\\n\\n:rtype: :class:`int` or :class:`None`\\n\\n.. versionadded:: 1.1", "params": []}, "core.tracklist.get_random": {"description": "Get random mode.\\n\\n:class:`True`\\n    Tracks are selected at random from the tracklist.\\n:class:`False`\\n    Tracks are played in the order of the tracklist.", "params": []}, "core.tracklist.get_repeat": {"description": "Get repeat mode.\\n\\n:class:`True`\\n    The tracklist is played repeatedly.\\n:class:`False`\\n    The tracklist is played once.", "params": []}, "core.tracklist.get_single": {"description": "Get single mode.\\n\\n:class:`True`\\n    Playback is stopped after current song, unless in ``repeat`` mode.\\n:class:`False`\\n    Playback continues after current song.", "params": []}, "core.tracklist.get_tl_tracks": {"description": "Get tracklist as list of :class:`mopidy.models.TlTrack`.", "params": []}, "core.tracklist.get_tracks": {"description": "Get tracklist as list of :class:`mopidy.models.Track`.", "params": []}, "core.tracklist.get_version": {"description": "Get the tracklist version.\\n\\nInteger which is increased every time the tracklist is changed. Is not\\nreset before Mopidy is restarted.", "params": []}, "core.tracklist.index": {"description": "The position of the given track in the tracklist.\\n\\nIf neither *tl_track* or *tlid* is given we return the index of\\nthe currently playing track.\\n\\n:param tl_track: the track to find the index of\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:param tlid: TLID of the track to find the index of\\n:type tlid: :class:`int` or :class:`None`\\n:rtype: :class:`int` or :class:`None`\\n\\n.. versionadded:: 1.1\\n    The *tlid* parameter", "params": [{"name": "tl_track", "default": null}, {"name": "tlid", "default": null}]}, "core.tracklist.move": {"description": "Move the tracks in the slice ``[start:end]`` to ``to_position``.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.\\n\\n:param start: position of first track to move\\n:type start: int\\n:param end: position after last track to move\\n:type end: int\\n:param to_position: new position for the tracks\\n:type to_position: int", "params": [{"name": "start"}, {"name": "end"}, {"name": "to_position"}]}, "core.tracklist.next_track": {"description": "The track that will be played if calling\\n:meth:`mopidy.core.PlaybackController.next()`.\\n\\nFor normal playback this is the next track in the tracklist. If repeat\\nis enabled the next track can loop around the tracklist. When random is\\nenabled this should be a random track, all tracks should be played once\\nbefore the tracklist repeats.\\n\\n.. deprecated:: 3.0\\n    Use :meth:`get_next_tlid` instead.\\n\\n:param tl_track: the reference track\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:rtype: :class:`mopidy.models.TlTrack` or :class:`None`", "params": [{"name": "tl_track"}]}, "core.tracklist.previous_track": {"description": "Returns the track that will be played if calling\\n:meth:`mopidy.core.PlaybackController.previous()`.\\n\\nFor normal playback this is the previous track in the tracklist. If\\nrandom and/or consume is enabled it should return the current track\\ninstead.\\n\\n.. deprecated:: 3.0\\n    Use :meth:`get_previous_tlid` instead.\\n\\n:param tl_track: the reference track\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:rtype: :class:`mopidy.models.TlTrack` or :class:`None`", "params": [{"name": "tl_track"}]}, "core.tracklist.remove": {"description": "Remove the matching tracks from the tracklist.\\n\\nUses :meth:`filter()` to lookup the tracks to remove.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.\\n\\n:param criteria: one or more rules to match by\\n:type criteria: dict, of (string, list) pairs\\n:rtype: list of :class:`mopidy.models.TlTrack` that were removed", "params": [{"name": "criteria"}]}, "core.tracklist.set_consume": {"description": "Set consume mode.\\n\\n:class:`True`\\n    Tracks are removed from the tracklist when they have been played.\\n:class:`False`\\n    Tracks are not removed from the tracklist.", "params": [{"name": "value"}]}, "core.tracklist.set_random": {"description": "Set random mode.\\n\\n:class:`True`\\n    Tracks are selected at random from the tracklist.\\n:class:`False`\\n    Tracks are played in the order of the tracklist.", "params": [{"name": "value"}]}, "core.tracklist.set_repeat": {"description": "Set repeat mode.\\n\\nTo repeat a single track, set both ``repeat`` and ``single``.\\n\\n:class:`True`\\n    The tracklist is played repeatedly.\\n:class:`False`\\n    The tracklist is played once.", "params": [{"name": "value"}]}, "core.tracklist.set_single": {"description": "Set single mode.\\n\\n:class:`True`\\n    Playback is stopped after current song, unless in ``repeat`` mode.\\n:class:`False`\\n    Playback continues after current song.", "params": [{"name": "value"}]}, "core.tracklist.shuffle": {"description": "Shuffles the entire tracklist. If ``start`` and ``end`` is given only\\nshuffles the slice ``[start:end]``.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.\\n\\n:param start: position of first track to shuffle\\n:type start: int or :class:`None`\\n:param end: position after last track to shuffle\\n:type end: int or :class:`None`", "params": [{"name": "start", "default": null}, {"name": "end", "default": null}]}, "core.tracklist.slice": {"description": "Returns a slice of the tracklist, limited by the given start and end\\npositions.\\n\\n:param start: position of first track to include in slice\\n:type start: int\\n:param end: position after last track to include in slice\\n:type end: int\\n:rtype: :class:`mopidy.models.TlTrack`", "params": [{"name": "start"}, {"name": "end"}]}}}'
okt 23 23:36:42 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:36:42,276 [8864:HttpServer] mopidy.http.handlers
okt 23 23:36:42 Desktop-Ubuntu mopidy[8864]:   Received WebSocket message from 127.0.0.1: '{"method":"core.describe","jsonrpc":"2.0","id":0}'
okt 23 23:36:42 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:36:42,272 [8864:HttpServer] mopidy.http.handlers
okt 23 23:36:42 Desktop-Ubuntu mopidy[8864]:   {'method': 'connection_added', 'params': {'connection': {'connection_id': '0F4WM96J0GH6', 'ip': '127.0.0.1', 'created': '2022-10-23 23:36:42'}}}
okt 23 23:36:42 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:36:42,207 [8864:HttpServer] mopidy_iris.core
okt 23 23:36:42 Desktop-Ubuntu mopidy[8864]:   <mopidy_iris.handlers.WebsocketHandler object at 0x7f957823a1a0>
okt 23 23:36:42 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:36:42,207 [8864:HttpServer] mopidy_iris.core
okt 23 23:36:42 Desktop-Ubuntu mopidy[8864]:   Connection added
okt 23 23:36:42 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:36:42,206 [8864:HttpServer] mopidy_iris.core
okt 23 23:36:42 Desktop-Ubuntu mopidy[8864]:   101 GET /iris/ws/ (127.0.0.1) 0.46ms
okt 23 23:36:42 Desktop-Ubuntu mopidy[8864]: INFO     2022-10-23 23:36:42,206 [8864:HttpServer] tornado.access
okt 23 23:36:42 Desktop-Ubuntu mopidy[8864]:   New WebSocket connection from 127.0.0.1
okt 23 23:36:42 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:36:42,195 [8864:HttpServer] mopidy.http.handlers
okt 23 23:36:42 Desktop-Ubuntu mopidy[8864]:   101 GET /mopidy/ws/ (127.0.0.1) 0.59ms
okt 23 23:36:42 Desktop-Ubuntu mopidy[8864]: INFO     2022-10-23 23:36:42,195 [8864:HttpServer] tornado.access
okt 23 23:36:42 Desktop-Ubuntu mopidy[8864]:   304 GET /iris/assets/app-icon_192.png (127.0.0.1) 0.67ms
okt 23 23:36:42 Desktop-Ubuntu mopidy[8864]: INFO     2022-10-23 23:36:42,145 [8864:HttpServer] tornado.access
okt 23 23:36:42 Desktop-Ubuntu mopidy[8864]:   304 GET /iris/manifest.json (127.0.0.1) 0.66ms
okt 23 23:36:42 Desktop-Ubuntu mopidy[8864]: INFO     2022-10-23 23:36:42,022 [8864:HttpServer] tornado.access
okt 23 23:36:41 Desktop-Ubuntu mopidy[8864]:   200 GET /iris/assets/favicon.png (127.0.0.1) 0.73ms
okt 23 23:36:41 Desktop-Ubuntu mopidy[8864]: INFO     2022-10-23 23:36:41,869 [8864:HttpServer] tornado.access
okt 23 23:36:41 Desktop-Ubuntu mopidy[8864]:   304 GET /iris/playlist/bTN1OkV4YW1wbGUlMjBQbGF5bGlzdC5tM3U4/null (127.0.0.1) 0.59ms
okt 23 23:36:41 Desktop-Ubuntu mopidy[8864]: INFO     2022-10-23 23:36:41,853 [8864:HttpServer] tornado.access
okt 23 23:36:41 Desktop-Ubuntu mopidy[8864]:   200 GET /iris/app.min.js?v=1666559547 (127.0.0.1) 11.09ms
okt 23 23:36:41 Desktop-Ubuntu mopidy[8864]: INFO     2022-10-23 23:36:41,168 [8864:HttpServer] tornado.access
okt 23 23:36:41 Desktop-Ubuntu mopidy[8864]:   200 GET /iris/app.min.css?v=1666559547 (127.0.0.1) 5.05ms
okt 23 23:36:41 Desktop-Ubuntu mopidy[8864]: INFO     2022-10-23 23:36:41,154 [8864:HttpServer] tornado.access
okt 23 23:36:40 Desktop-Ubuntu mopidy[8864]:   200 GET /iris/assets/app-icon.svg (127.0.0.1) 0.70ms
okt 23 23:36:40 Desktop-Ubuntu mopidy[8864]: INFO     2022-10-23 23:36:40,965 [8864:HttpServer] tornado.access
okt 23 23:36:40 Desktop-Ubuntu mopidy[8864]:   {'method': 'connection_removed', 'params': {'connection': {'connection_id': 'F3PZF12KOTYN', 'ip': '127.0.0.1', 'created': '2022-10-23 23:36:36', 'username': 166637467060576, 'client_id': 166637467060628}}}
okt 23 23:36:40 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:36:40,918 [8864:HttpServer] mopidy_iris.core
okt 23 23:36:40 Desktop-Ubuntu mopidy[8864]:   Closed WebSocket connection from 127.0.0.1
okt 23 23:36:40 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:36:40,915 [8864:HttpServer] mopidy.http.handlers
okt 23 23:36:40 Desktop-Ubuntu mopidy[8864]:   200 GET /iris/playlist/bTN1OkV4YW1wbGUlMjBQbGF5bGlzdC5tM3U4/Example%20Playlist (127.0.0.1) 1.03ms
okt 23 23:36:40 Desktop-Ubuntu mopidy[8864]: INFO     2022-10-23 23:36:40,899 [8864:HttpServer] tornado.access
okt 23 23:36:36 Desktop-Ubuntu mopidy[8864]:   {'id': 166656099682797, 'jsonrpc': '2.0', 'method': 'get_version', 'result': {'version': {'current': '3.64.1', 'latest': '3.64.1', 'is_root': False, 'upgrade_available': False}}, 'recipient': 'F3PZF12KOTYN'}
okt 23 23:36:36 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:36:36,983 [8864:HttpServer] mopidy_iris.core
okt 23 23:36:36 Desktop-Ubuntu mopidy[8864]:   Iris websocket message received: {"jsonrpc":"2.0","id":166656099682797,"method":"get_version"}
okt 23 23:36:36 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:36:36,827 [8864:HttpServer] mopidy_iris.handlers
okt 23 23:36:36 Desktop-Ubuntu mopidy[8864]:   {'id': 166656099632649, 'jsonrpc': '2.0', 'method': 'get_queue_metadata', 'result': {'queue_metadata': {}}, 'recipient': 'F3PZF12KOTYN'}
okt 23 23:36:36 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:36:36,326 [8864:HttpServer] mopidy_iris.core
okt 23 23:36:36 Desktop-Ubuntu mopidy[8864]:   Iris websocket message received: {"jsonrpc":"2.0","id":166656099632649,"method":"get_queue_metadata"}
okt 23 23:36:36 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:36:36,326 [8864:HttpServer] mopidy_iris.handlers
okt 23 23:36:36 Desktop-Ubuntu mopidy[8864]:   {'id': 166656099632424, 'jsonrpc': '2.0', 'method': 'get_pinned', 'result': {'pinned': []}, 'recipient': 'F3PZF12KOTYN'}
okt 23 23:36:36 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:36:36,325 [8864:HttpServer] mopidy_iris.core
okt 23 23:36:36 Desktop-Ubuntu mopidy[8864]:   Iris websocket message received: {"jsonrpc":"2.0","id":166656099632424,"method":"get_pinned"}
okt 23 23:36:36 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:36:36,325 [8864:HttpServer] mopidy_iris.handlers
okt 23 23:36:36 Desktop-Ubuntu mopidy[8864]:   {'id': 166656099632367, 'jsonrpc': '2.0', 'method': 'get_commands', 'result': {'commands': {}}, 'recipient': 'F3PZF12KOTYN'}
okt 23 23:36:36 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:36:36,324 [8864:HttpServer] mopidy_iris.core
okt 23 23:36:36 Desktop-Ubuntu mopidy[8864]:   Iris websocket message received: {"jsonrpc":"2.0","id":166656099632367,"method":"get_commands"}
okt 23 23:36:36 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:36:36,323 [8864:HttpServer] mopidy_iris.handlers
okt 23 23:36:36 Desktop-Ubuntu mopidy[8864]:   {'id': 166656099632286, 'jsonrpc': '2.0', 'method': 'get_radio', 'result': {'radio': {'enabled': 0, 'seed_artists': [], 'seed_genres': [], 'seed_tracks': [], 'results': []}}, 'recipient': 'F3PZF12KOTYN'}
okt 23 23:36:36 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:36:36,323 [8864:HttpServer] mopidy_iris.core
okt 23 23:36:36 Desktop-Ubuntu mopidy[8864]:   Iris websocket message received: {"jsonrpc":"2.0","id":166656099632286,"method":"get_radio"}
okt 23 23:36:36 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:36:36,323 [8864:HttpServer] mopidy_iris.handlers
okt 23 23:36:36 Desktop-Ubuntu mopidy[8864]:   {'id': 166656099632167, 'jsonrpc': '2.0', 'method': 'get_shared_config', 'result': {'shared_config': {}}, 'recipient': 'F3PZF12KOTYN'}
okt 23 23:36:36 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:36:36,322 [8864:HttpServer] mopidy_iris.core
okt 23 23:36:36 Desktop-Ubuntu mopidy[8864]:   Iris websocket message received: {"jsonrpc":"2.0","id":166656099632167,"method":"get_shared_config"}
okt 23 23:36:36 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:36:36,322 [8864:HttpServer] mopidy_iris.handlers
okt 23 23:36:36 Desktop-Ubuntu mopidy[8864]:   {'id': 166656099632057, 'jsonrpc': '2.0', 'method': 'get_config', 'result': {'config': {'is_root': False, 'spotify_username': False, 'country': 'NZ', 'locale': 'en_NZ', 'snapcast_enabled': True, 'snapcast_host': 'localhost', 'snapcast_port': '1780', 'snapcast_ssl': False, 'snapcast_stream': 'Default', 'spotify_authorization_url': 'https://jamesbarnsley.co.nz/iris/auth_spotify.php', 'lastfm_authorization_url': 'https://jamesbarnsley.co.nz/iris/auth_lastfm.php', 'genius_authorization_url': 'https://jamesbarnsley.co.nz/iris/auth_genius.php', 'shared_config': {}}}, 'recipient': 'F3PZF12KOTYN'}
okt 23 23:36:36 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:36:36,321 [8864:HttpServer] mopidy_iris.core
okt 23 23:36:36 Desktop-Ubuntu mopidy[8864]:   Iris websocket message received: {"jsonrpc":"2.0","id":166656099632057,"method":"get_config"}
okt 23 23:36:36 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:36:36,321 [8864:HttpServer] mopidy_iris.handlers
okt 23 23:36:36 Desktop-Ubuntu mopidy[8864]:   {'id': 16665609963194, 'jsonrpc': '2.0', 'method': 'update_connection', 'result': {'connection': {'connection_id': 'F3PZF12KOTYN', 'ip': '127.0.0.1', 'created': '2022-10-23 23:36:36', 'username': 166637467060576, 'client_id': 166637467060628}}, 'recipient': 'F3PZF12KOTYN'}
okt 23 23:36:36 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:36:36,320 [8864:HttpServer] mopidy_iris.core
okt 23 23:36:36 Desktop-Ubuntu mopidy[8864]:   {'method': 'connection_changed', 'params': {'connection': {'connection_id': 'F3PZF12KOTYN', 'ip': '127.0.0.1', 'created': '2022-10-23 23:36:36', 'username': 166637467060576, 'client_id': 166637467060628}}}
okt 23 23:36:36 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:36:36,320 [8864:HttpServer] mopidy_iris.core
okt 23 23:36:36 Desktop-Ubuntu mopidy[8864]:   Iris websocket message received: {"jsonrpc":"2.0","id":16665609963194,"method":"update_connection","params":{"username":166637467060576,"client_id":166637467060628}}
okt 23 23:36:36 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:36:36,320 [8864:HttpServer] mopidy_iris.handlers
okt 23 23:36:36 Desktop-Ubuntu mopidy[8864]:   {'method': 'connection_added', 'params': {'connection': {'connection_id': 'F3PZF12KOTYN', 'ip': '127.0.0.1', 'created': '2022-10-23 23:36:36'}}}
okt 23 23:36:36 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:36:36,316 [8864:HttpServer] mopidy_iris.core
okt 23 23:36:36 Desktop-Ubuntu mopidy[8864]:   <mopidy_iris.handlers.WebsocketHandler object at 0x7f95796c8b50>
okt 23 23:36:36 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:36:36,316 [8864:HttpServer] mopidy_iris.core
okt 23 23:36:36 Desktop-Ubuntu mopidy[8864]:   Connection added
okt 23 23:36:36 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:36:36,316 [8864:HttpServer] mopidy_iris.core
okt 23 23:36:36 Desktop-Ubuntu mopidy[8864]:   101 GET /iris/ws/ (127.0.0.1) 0.51ms
okt 23 23:36:36 Desktop-Ubuntu mopidy[8864]: INFO     2022-10-23 23:36:36,315 [8864:HttpServer] tornado.access
okt 23 23:36:35 Desktop-Ubuntu mopidy[8864]:   304 GET /iris/assets/silence.mp3 (127.0.0.1) 5.81ms
okt 23 23:36:35 Desktop-Ubuntu mopidy[8864]: INFO     2022-10-23 23:36:35,685 [8864:HttpServer] tornado.access
okt 23 23:36:32 Desktop-Ubuntu mopidy[8864]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 74, "result": null}'
okt 23 23:36:32 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:36:32,295 [8864:HttpServer] mopidy.http.handlers
okt 23 23:36:32 Desktop-Ubuntu mopidy[8864]:   Received WebSocket message from 127.0.0.1: '{"method":"core.playback.get_stream_title","params":{},"jsonrpc":"2.0","id":74}'
okt 23 23:36:32 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:36:32,295 [8864:HttpServer] mopidy.http.handlers
okt 23 23:36:32 Desktop-Ubuntu mopidy[8864]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 73, "result": ["file", "http", "https", "m3u", "rtsp"]}'
okt 23 23:36:32 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:36:32,294 [8864:HttpServer] mopidy.http.handlers
okt 23 23:36:32 Desktop-Ubuntu mopidy[8864]:   Received WebSocket message from 127.0.0.1: '{"method":"core.get_uri_schemes","params":{},"jsonrpc":"2.0","id":73}'
okt 23 23:36:32 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:36:32,294 [8864:HttpServer] mopidy.http.handlers
okt 23 23:36:32 Desktop-Ubuntu mopidy[8864]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 72, "result": 0}'
okt 23 23:36:32 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:36:32,294 [8864:HttpServer] mopidy.http.handlers
okt 23 23:36:32 Desktop-Ubuntu mopidy[8864]:   Received WebSocket message from 127.0.0.1: '{"method":"core.playback.get_time_position","params":{},"jsonrpc":"2.0","id":72}'
okt 23 23:36:32 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:36:32,293 [8864:HttpServer] mopidy.http.handlers
okt 23 23:36:32 Desktop-Ubuntu mopidy[8864]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 71, "result": []}'
okt 23 23:36:32 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:36:32,293 [8864:HttpServer] mopidy.http.handlers
okt 23 23:36:32 Desktop-Ubuntu mopidy[8864]:   Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_tl_tracks","params":{},"jsonrpc":"2.0","id":71}'
okt 23 23:36:32 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:36:32,293 [8864:HttpServer] mopidy.http.handlers
okt 23 23:36:32 Desktop-Ubuntu mopidy[8864]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 70, "result": false}'
okt 23 23:36:32 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:36:32,293 [8864:HttpServer] mopidy.http.handlers
okt 23 23:36:32 Desktop-Ubuntu mopidy[8864]:   Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_repeat","params":{},"jsonrpc":"2.0","id":70}'
okt 23 23:36:32 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:36:32,292 [8864:HttpServer] mopidy.http.handlers
okt 23 23:36:32 Desktop-Ubuntu mopidy[8864]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 69, "result": false}'
okt 23 23:36:32 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:36:32,292 [8864:HttpServer] mopidy.http.handlers
okt 23 23:36:32 Desktop-Ubuntu mopidy[8864]:   Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_random","params":{},"jsonrpc":"2.0","id":69}'
okt 23 23:36:32 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:36:32,292 [8864:HttpServer] mopidy.http.handlers
okt 23 23:36:32 Desktop-Ubuntu mopidy[8864]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 68, "result": false}'
okt 23 23:36:32 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:36:32,292 [8864:HttpServer] mopidy.http.handlers
okt 23 23:36:32 Desktop-Ubuntu mopidy[8864]:   Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_consume","params":{},"jsonrpc":"2.0","id":68}'
okt 23 23:36:32 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:36:32,291 [8864:HttpServer] mopidy.http.handlers
okt 23 23:36:32 Desktop-Ubuntu mopidy[8864]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 67, "result": false}'
okt 23 23:36:32 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:36:32,291 [8864:HttpServer] mopidy.http.handlers
okt 23 23:36:32 Desktop-Ubuntu mopidy[8864]:   Received WebSocket message from 127.0.0.1: '{"method":"core.mixer.get_mute","params":{},"jsonrpc":"2.0","id":67}'
okt 23 23:36:32 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:36:32,291 [8864:HttpServer] mopidy.http.handlers
okt 23 23:36:32 Desktop-Ubuntu mopidy[8864]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 66, "result": 100}'
okt 23 23:36:32 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:36:32,290 [8864:HttpServer] mopidy.http.handlers
okt 23 23:36:32 Desktop-Ubuntu mopidy[8864]:   Received WebSocket message from 127.0.0.1: '{"method":"core.mixer.get_volume","params":{},"jsonrpc":"2.0","id":66}'
okt 23 23:36:32 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:36:32,287 [8864:HttpServer] mopidy.http.handlers
okt 23 23:36:32 Desktop-Ubuntu mopidy[8864]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 65, "result": "stopped"}'
okt 23 23:36:32 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:36:32,286 [8864:HttpServer] mopidy.http.handlers
okt 23 23:36:32 Desktop-Ubuntu mopidy[8864]:   Received WebSocket message from 127.0.0.1: '{"method":"core.playback.get_state","params":{},"jsonrpc":"2.0","id":65}'
okt 23 23:36:32 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:36:32,286 [8864:HttpServer] mopidy.http.handlers
okt 23 23:36:32 Desktop-Ubuntu mopidy[8864]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 64, "result": null}'
okt 23 23:36:32 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:36:32,286 [8864:HttpServer] mopidy.http.handlers
okt 23 23:36:32 Desktop-Ubuntu mopidy[8864]:   Received WebSocket message from 127.0.0.1: '{"method":"core.playback.get_current_tl_track","params":{},"jsonrpc":"2.0","id":64}'
okt 23 23:36:32 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:36:32,285 [8864:HttpServer] mopidy.http.handlers
okt 23 23:36:32 Desktop-Ubuntu mopidy[8864]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 63, "result": {"core.get_uri_schemes": {"description": "Get list of URI schemes we can handle", "params": []}, "core.get_version": {"description": "Get version of the Mopidy core API", "params": []}, "core.history.get_history": {"description": "Get the track history.\\n\\nThe timestamps are milliseconds since epoch.\\n\\n:returns: the track history\\n:rtype: list of (timestamp, :class:`mopidy.models.Ref`) tuples", "params": []}, "core.history.get_length": {"description": "Get the number of tracks in the history.\\n\\n:returns: the history length\\n:rtype: int", "params": []}, "core.library.browse": {"description": "Browse directories and tracks at the given ``uri``.\\n\\n``uri`` is a string which represents some directory belonging to a\\nbackend. To get the intial root directories for backends pass\\n:class:`None` as the URI.\\n\\nReturns a list of :class:`mopidy.models.Ref` objects for the\\ndirectories and tracks at the given ``uri``.\\n\\nThe :class:`~mopidy.models.Ref` objects representing tracks keep the\\ntrack\'s original URI. A matching pair of objects can look like this::\\n\\n    Track(uri=\'dummy:/foo.mp3\', name=\'foo\', artists=..., album=...)\\n    Ref.track(uri=\'dummy:/foo.mp3\', name=\'foo\')\\n\\nThe :class:`~mopidy.models.Ref` objects representing directories have\\nbackend specific URIs. These are opaque values, so no one but the\\nbackend that created them should try and derive any meaning from them.\\nThe only valid exception to this is checking the scheme, as it is used\\nto route browse requests to the correct backend.\\n\\nFor example, the dummy library\'s ``/bar`` directory could be returned\\nlike this::\\n\\n    Ref.directory(uri=\'dummy:directory:/bar\', name=\'bar\')\\n\\n:param string uri: URI to browse\\n:rtype: list of :class:`mopidy.models.Ref`\\n\\n.. versionadded:: 0.18", "params": [{"name": "uri"}]}, "core.library.get_distinct": {"description": "List distinct values for a given field from the library.\\n\\nThis has mainly been added to support the list commands the MPD\\nprotocol supports in a more sane fashion. Other frontends are not\\nrecommended to use this method.\\n\\n:param string field: Any one of ``uri``, ``track_name``, ``album``,\\n    ``artist``, ``albumartist``, ``composer``, ``performer``,\\n    ``track_no``, ``genre``, ``date``, ``comment``, ``disc_no``,\\n    ``musicbrainz_albumid``, ``musicbrainz_artistid``, or\\n    ``musicbrainz_trackid``.\\n:param dict query: Query to use for limiting results, see\\n    :meth:`search` for details about the query format.\\n:rtype: set of values corresponding to the requested field type.\\n\\n.. versionadded:: 1.0", "params": [{"name": "field"}, {"name": "query", "default": null}]}, "core.library.get_images": {"description": "Lookup the images for the given URIs\\n\\nBackends can use this to return image URIs for any URI they know about\\nbe it tracks, albums, playlists. The lookup result is a dictionary\\nmapping the provided URIs to lists of images.\\n\\nUnknown URIs or URIs the corresponding backend couldn\'t find anything\\nfor will simply return an empty list for that URI.\\n\\n:param uris: list of URIs to find images for\\n:type uris: list of string\\n:rtype: {uri: tuple of :class:`mopidy.models.Image`}\\n\\n.. versionadded:: 1.0", "params": [{"name": "uris"}]}, "core.library.lookup": {"description": "Lookup the given URIs.\\n\\nIf the URI expands to multiple tracks, the returned list will contain\\nthem all.\\n\\n:param uris: track URIs\\n:type uris: list of string\\n:rtype: {uri: list of :class:`mopidy.models.Track`}", "params": [{"name": "uris"}]}, "core.library.refresh": {"description": "Refresh library. Limit to URI and below if an URI is given.\\n\\n:param uri: directory or track URI\\n:type uri: string", "params": [{"name": "uri", "default": null}]}, "core.library.search": {"description": "Search the library for tracks where ``field`` contains ``values``.\\n\\n``field`` can be one of ``uri``, ``track_name``, ``album``, ``artist``,\\n``albumartist``, ``composer``, ``performer``, ``track_no``, ``genre``,\\n``date``, ``comment``, ``disc_no``, ``musicbrainz_albumid``,\\n``musicbrainz_artistid``, ``musicbrainz_trackid`` or ``any``.\\n\\nIf ``uris`` is given, the search is limited to results from within the\\nURI roots. For example passing ``uris=[\'file:\']`` will limit the search\\nto the local backend.\\n\\nExamples::\\n\\n    # Returns results matching \'a\' in any backend\\n    search({\'any\': [\'a\']})\\n\\n    # Returns results matching artist \'xyz\' in any backend\\n    search({\'artist\': [\'xyz\']})\\n\\n    # Returns results matching \'a\' and \'b\' and artist \'xyz\' in any\\n    # backend\\n    search({\'any\': [\'a\', \'b\'], \'artist\': [\'xyz\']})\\n\\n    # Returns results matching \'a\' if within the given URI roots\\n    # \\"file:///media/music\\" and \\"spotify:\\"\\n    search({\'any\': [\'a\']}, uris=[\'file:///media/music\', \'spotify:\'])\\n\\n    # Returns results matching artist \'xyz\' and \'abc\' in any backend\\n    search({\'artist\': [\'xyz\', \'abc\']})\\n\\n:param query: one or more queries to search for\\n:type query: dict\\n:param uris: zero or more URI roots to limit the search to\\n:type uris: list of string or :class:`None`\\n:param exact: if the search should use exact matching\\n:type exact: :class:`bool`\\n:rtype: list of :class:`mopidy.models.SearchResult`\\n\\n.. versionadded:: 1.0\\n    The ``exact`` keyword argument.", "params": [{"name": "query"}, {"name": "uris", "default": null}, {"name": "exact", "default": false}]}, "core.mixer.get_mute": {"description": "Get mute state.\\n\\n:class:`True` if muted, :class:`False` unmuted, :class:`None` if\\nunknown.", "params": []}, "core.mixer.get_volume": {"description": "Get the volume.\\n\\nInteger in range [0..100] or :class:`None` if unknown.\\n\\nThe volume scale is linear.", "params": []}, "core.mixer.set_mute": {"description": "Set mute state.\\n\\n:class:`True` to mute, :class:`False` to unmute.\\n\\nReturns :class:`True` if call is successful, otherwise :class:`False`.", "params": [{"name": "mute"}]}, "core.mixer.set_volume": {"description": "Set the volume.\\n\\nThe volume is defined as an integer in range [0..100].\\n\\nThe volume scale is linear.\\n\\nReturns :class:`True` if call is successful, otherwise :class:`False`.", "params": [{"name": "volume"}]}, "core.playback.get_current_tl_track": {"description": "Get the currently playing or selected track.\\n\\nReturns a :class:`mopidy.models.TlTrack` or :class:`None`.", "params": []}, "core.playback.get_current_tlid": {"description": "Get the currently playing or selected TLID.\\n\\nExtracted from :meth:`get_current_tl_track` for convenience.\\n\\nReturns a :class:`int` or :class:`None`.\\n\\n.. versionadded:: 1.1", "params": []}, "core.playback.get_current_track": {"description": "Get the currently playing or selected track.\\n\\nExtracted from :meth:`get_current_tl_track` for convenience.\\n\\nReturns a :class:`mopidy.models.Track` or :class:`None`.", "params": []}, "core.playback.get_state": {"description": "Get The playback state.", "params": []}, "core.playback.get_stream_title": {"description": "Get the current stream title or :class:`None`.", "params": []}, "core.playback.get_time_position": {"description": "Get time position in milliseconds.", "params": []}, "core.playback.next": {"description": "Change to the next track.\\n\\nThe current playback state will be kept. If it was playing, playing\\nwill continue. If it was paused, it will still be paused, etc.", "params": []}, "core.playback.pause": {"description": "Pause playback.", "params": []}, "core.playback.play": {"description": "Play the given track, or if the given tl_track and tlid is\\n:class:`None`, play the currently active track.\\n\\nNote that the track **must** already be in the tracklist.\\n\\n.. deprecated:: 3.0\\n    The ``tl_track`` argument. Use ``tlid`` instead.\\n\\n:param tl_track: track to play\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:param tlid: TLID of the track to play\\n:type tlid: :class:`int` or :class:`None`", "params": [{"name": "tl_track", "default": null}, {"name": "tlid", "default": null}]}, "core.playback.previous": {"description": "Change to the previous track.\\n\\nThe current playback state will be kept. If it was playing, playing\\nwill continue. If it was paused, it will still be paused, etc.", "params": []}, "core.playback.resume": {"description": "If paused, resume playing the current track.", "params": []}, "core.playback.seek": {"description": "Seeks to time position given in milliseconds.\\n\\n:param time_position: time position in milliseconds\\n:type time_position: int\\n:rtype: :class:`True` if successful, else :class:`False`", "params": [{"name": "time_position"}]}, "core.playback.set_state": {"description": "Set the playback state.\\n\\nMust be :attr:`PLAYING`, :attr:`PAUSED`, or :attr:`STOPPED`.\\n\\nPossible states and transitions:\\n\\n.. digraph:: state_transitions\\n\\n    \\"STOPPED\\" -> \\"PLAYING\\" [ label=\\"play\\" ]\\n    \\"STOPPED\\" -> \\"PAUSED\\" [ label=\\"pause\\" ]\\n    \\"PLAYING\\" -> \\"STOPPED\\" [ label=\\"stop\\" ]\\n    \\"PLAYING\\" -> \\"PAUSED\\" [ label=\\"pause\\" ]\\n    \\"PLAYING\\" -> \\"PLAYING\\" [ label=\\"play\\" ]\\n    \\"PAUSED\\" -> \\"PLAYING\\" [ label=\\"resume\\" ]\\n    \\"PAUSED\\" -> \\"STOPPED\\" [ label=\\"stop\\" ]", "params": [{"name": "new_state"}]}, "core.playback.stop": {"description": "Stop playing.", "params": []}, "core.playlists.as_list": {"description": "Get a list of the currently available playlists.\\n\\nReturns a list of :class:`~mopidy.models.Ref` objects referring to the\\nplaylists. In other words, no information about the playlists\' content\\nis given.\\n\\n:rtype: list of :class:`mopidy.models.Ref`\\n\\n.. versionadded:: 1.0", "params": []}, "core.playlists.create": {"description": "Create a new playlist.\\n\\nIf ``uri_scheme`` matches an URI scheme handled by a current backend,\\nthat backend is asked to create the playlist. If ``uri_scheme`` is\\n:class:`None` or doesn\'t match a current backend, the first backend is\\nasked to create the playlist.\\n\\nAll new playlists must be created by calling this method, and **not**\\nby creating new instances of :class:`mopidy.models.Playlist`.\\n\\n:param name: name of the new playlist\\n:type name: string\\n:param uri_scheme: use the backend matching the URI scheme\\n:type uri_scheme: string\\n:rtype: :class:`mopidy.models.Playlist` or :class:`None`", "params": [{"name": "name"}, {"name": "uri_scheme", "default": null}]}, "core.playlists.delete": {"description": "Delete playlist identified by the URI.\\n\\nIf the URI doesn\'t match the URI schemes handled by the current\\nbackends, nothing happens.\\n\\nReturns :class:`True` if deleted, :class:`False` otherwise.\\n\\n:param uri: URI of the playlist to delete\\n:type uri: string\\n:rtype: :class:`bool`\\n\\n.. versionchanged:: 2.2\\n    Return type defined.", "params": [{"name": "uri"}]}, "core.playlists.get_items": {"description": "Get the items in a playlist specified by ``uri``.\\n\\nReturns a list of :class:`~mopidy.models.Ref` objects referring to the\\nplaylist\'s items.\\n\\nIf a playlist with the given ``uri`` doesn\'t exist, it returns\\n:class:`None`.\\n\\n:rtype: list of :class:`mopidy.models.Ref`, or :class:`None`\\n\\n.. versionadded:: 1.0", "params": [{"name": "uri"}]}, "core.playlists.get_uri_schemes": {"description": "Get the list of URI schemes that support playlists.\\n\\n:rtype: list of string\\n\\n.. versionadded:: 2.0", "params": []}, "core.playlists.lookup": {"description": "Lookup playlist with given URI in both the set of playlists and in any\\nother playlist sources. Returns :class:`None` if not found.\\n\\n:param uri: playlist URI\\n:type uri: string\\n:rtype: :class:`mopidy.models.Playlist` or :class:`None`", "params": [{"name": "uri"}]}, "core.playlists.refresh": {"description": "Refresh the playlists in :attr:`playlists`.\\n\\nIf ``uri_scheme`` is :class:`None`, all backends are asked to refresh.\\nIf ``uri_scheme`` is an URI scheme handled by a backend, only that\\nbackend is asked to refresh. If ``uri_scheme`` doesn\'t match any\\ncurrent backend, nothing happens.\\n\\n:param uri_scheme: limit to the backend matching the URI scheme\\n:type uri_scheme: string", "params": [{"name": "uri_scheme", "default": null}]}, "core.playlists.save": {"description": "Save the playlist.\\n\\nFor a playlist to be saveable, it must have the ``uri`` attribute set.\\nYou must not set the ``uri`` atribute yourself, but use playlist\\nobjects returned by :meth:`create` or retrieved from :attr:`playlists`,\\nwhich will always give you saveable playlists.\\n\\nThe method returns the saved playlist. The return playlist may differ\\nfrom the saved playlist. E.g. if the playlist name was changed, the\\nreturned playlist may have a different URI. The caller of this method\\nmust throw away the playlist sent to this method, and use the\\nreturned playlist instead.\\n\\nIf the playlist\'s URI isn\'t set or doesn\'t match the URI scheme of a\\ncurrent backend, nothing is done and :class:`None` is returned.\\n\\n:param playlist: the playlist\\n:type playlist: :class:`mopidy.models.Playlist`\\n:rtype: :class:`mopidy.models.Playlist` or :class:`None`", "params": [{"name": "playlist"}]}, "core.tracklist.add": {"description": "Add tracks to the tracklist.\\n\\nIf ``uris`` is given instead of ``tracks``, the URIs are\\nlooked up in the library and the resulting tracks are added to the\\ntracklist.\\n\\nIf ``at_position`` is given, the tracks are inserted at the given\\nposition in the tracklist. If ``at_position`` is not given, the tracks\\nare appended to the end of the tracklist.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.\\n\\n:param tracks: tracks to add\\n:type tracks: list of :class:`mopidy.models.Track` or :class:`None`\\n:param at_position: position in tracklist to add tracks\\n:type at_position: int or :class:`None`\\n:param uris: list of URIs for tracks to add\\n:type uris: list of string or :class:`None`\\n:rtype: list of :class:`mopidy.models.TlTrack`\\n\\n.. versionadded:: 1.0\\n    The ``uris`` argument.\\n\\n.. deprecated:: 1.0\\n    The ``tracks`` argument. Use ``uris``.", "params": [{"name": "tracks", "default": null}, {"name": "at_position", "default": null}, {"name": "uris", "default": null}]}, "core.tracklist.clear": {"description": "Clear the tracklist.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.", "params": []}, "core.tracklist.eot_track": {"description": "The track that will be played after the given track.\\n\\nNot necessarily the same track as :meth:`next_track`.\\n\\n.. deprecated:: 3.0\\n    Use :meth:`get_eot_tlid` instead.\\n\\n:param tl_track: the reference track\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:rtype: :class:`mopidy.models.TlTrack` or :class:`None`", "params": [{"name": "tl_track"}]}, "core.tracklist.filter": {"description": "Filter the tracklist by the given criteria.\\n\\nEach rule in the criteria consists of a model field and a list of\\nvalues to compare it against. If the model field matches any of the\\nvalues, it may be returned.\\n\\nOnly tracks that match all the given criteria are returned.\\n\\nExamples::\\n\\n    # Returns tracks with TLIDs 1, 2, 3, or 4 (tracklist ID)\\n    filter({\'tlid\': [1, 2, 3, 4]})\\n\\n    # Returns track with URIs \'xyz\' or \'abc\'\\n    filter({\'uri\': [\'xyz\', \'abc\']})\\n\\n    # Returns track with a matching TLIDs (1, 3 or 6) and a\\n    # matching URI (\'xyz\' or \'abc\')\\n    filter({\'tlid\': [1, 3, 6], \'uri\': [\'xyz\', \'abc\']})\\n\\n:param criteria: one or more rules to match by\\n:type criteria: dict, of (string, list) pairs\\n:rtype: list of :class:`mopidy.models.TlTrack`", "params": [{"name": "criteria"}]}, "core.tracklist.get_consume": {"description": "Get consume mode.\\n\\n:class:`True`\\n    Tracks are removed from the tracklist when they have been played.\\n:class:`False`\\n    Tracks are not removed from the tracklist.", "params": []}, "core.tracklist.get_eot_tlid": {"description": "The TLID of the track that will be played after the current track.\\n\\nNot necessarily the same TLID as returned by :meth:`get_next_tlid`.\\n\\n:rtype: :class:`int` or :class:`None`\\n\\n.. versionadded:: 1.1", "params": []}, "core.tracklist.get_length": {"description": "Get length of the tracklist.", "params": []}, "core.tracklist.get_next_tlid": {"description": "The tlid of the track that will be played if calling\\n:meth:`mopidy.core.PlaybackController.next()`.\\n\\nFor normal playback this is the next track in the tracklist. If repeat\\nis enabled the next track can loop around the tracklist. When random is\\nenabled this should be a random track, all tracks should be played once\\nbefore the tracklist repeats.\\n\\n:rtype: :class:`int` or :class:`None`\\n\\n.. versionadded:: 1.1", "params": []}, "core.tracklist.get_previous_tlid": {"description": "Returns the TLID of the track that will be played if calling\\n:meth:`mopidy.core.PlaybackController.previous()`.\\n\\nFor normal playback this is the previous track in the tracklist. If\\nrandom and/or consume is enabled it should return the current track\\ninstead.\\n\\n:rtype: :class:`int` or :class:`None`\\n\\n.. versionadded:: 1.1", "params": []}, "core.tracklist.get_random": {"description": "Get random mode.\\n\\n:class:`True`\\n    Tracks are selected at random from the tracklist.\\n:class:`False`\\n    Tracks are played in the order of the tracklist.", "params": []}, "core.tracklist.get_repeat": {"description": "Get repeat mode.\\n\\n:class:`True`\\n    The tracklist is played repeatedly.\\n:class:`False`\\n    The tracklist is played once.", "params": []}, "core.tracklist.get_single": {"description": "Get single mode.\\n\\n:class:`True`\\n    Playback is stopped after current song, unless in ``repeat`` mode.\\n:class:`False`\\n    Playback continues after current song.", "params": []}, "core.tracklist.get_tl_tracks": {"description": "Get tracklist as list of :class:`mopidy.models.TlTrack`.", "params": []}, "core.tracklist.get_tracks": {"description": "Get tracklist as list of :class:`mopidy.models.Track`.", "params": []}, "core.tracklist.get_version": {"description": "Get the tracklist version.\\n\\nInteger which is increased every time the tracklist is changed. Is not\\nreset before Mopidy is restarted.", "params": []}, "core.tracklist.index": {"description": "The position of the given track in the tracklist.\\n\\nIf neither *tl_track* or *tlid* is given we return the index of\\nthe currently playing track.\\n\\n:param tl_track: the track to find the index of\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:param tlid: TLID of the track to find the index of\\n:type tlid: :class:`int` or :class:`None`\\n:rtype: :class:`int` or :class:`None`\\n\\n.. versionadded:: 1.1\\n    The *tlid* parameter", "params": [{"name": "tl_track", "default": null}, {"name": "tlid", "default": null}]}, "core.tracklist.move": {"description": "Move the tracks in the slice ``[start:end]`` to ``to_position``.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.\\n\\n:param start: position of first track to move\\n:type start: int\\n:param end: position after last track to move\\n:type end: int\\n:param to_position: new position for the tracks\\n:type to_position: int", "params": [{"name": "start"}, {"name": "end"}, {"name": "to_position"}]}, "core.tracklist.next_track": {"description": "The track that will be played if calling\\n:meth:`mopidy.core.PlaybackController.next()`.\\n\\nFor normal playback this is the next track in the tracklist. If repeat\\nis enabled the next track can loop around the tracklist. When random is\\nenabled this should be a random track, all tracks should be played once\\nbefore the tracklist repeats.\\n\\n.. deprecated:: 3.0\\n    Use :meth:`get_next_tlid` instead.\\n\\n:param tl_track: the reference track\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:rtype: :class:`mopidy.models.TlTrack` or :class:`None`", "params": [{"name": "tl_track"}]}, "core.tracklist.previous_track": {"description": "Returns the track that will be played if calling\\n:meth:`mopidy.core.PlaybackController.previous()`.\\n\\nFor normal playback this is the previous track in the tracklist. If\\nrandom and/or consume is enabled it should return the current track\\ninstead.\\n\\n.. deprecated:: 3.0\\n    Use :meth:`get_previous_tlid` instead.\\n\\n:param tl_track: the reference track\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:rtype: :class:`mopidy.models.TlTrack` or :class:`None`", "params": [{"name": "tl_track"}]}, "core.tracklist.remove": {"description": "Remove the matching tracks from the tracklist.\\n\\nUses :meth:`filter()` to lookup the tracks to remove.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.\\n\\n:param criteria: one or more rules to match by\\n:type criteria: dict, of (string, list) pairs\\n:rtype: list of :class:`mopidy.models.TlTrack` that were removed", "params": [{"name": "criteria"}]}, "core.tracklist.set_consume": {"description": "Set consume mode.\\n\\n:class:`True`\\n    Tracks are removed from the tracklist when they have been played.\\n:class:`False`\\n    Tracks are not removed from the tracklist.", "params": [{"name": "value"}]}, "core.tracklist.set_random": {"description": "Set random mode.\\n\\n:class:`True`\\n    Tracks are selected at random from the tracklist.\\n:class:`False`\\n    Tracks are played in the order of the tracklist.", "params": [{"name": "value"}]}, "core.tracklist.set_repeat": {"description": "Set repeat mode.\\n\\nTo repeat a single track, set both ``repeat`` and ``single``.\\n\\n:class:`True`\\n    The tracklist is played repeatedly.\\n:class:`False`\\n    The tracklist is played once.", "params": [{"name": "value"}]}, "core.tracklist.set_single": {"description": "Set single mode.\\n\\n:class:`True`\\n    Playback is stopped after current song, unless in ``repeat`` mode.\\n:class:`False`\\n    Playback continues after current song.", "params": [{"name": "value"}]}, "core.tracklist.shuffle": {"description": "Shuffles the entire tracklist. If ``start`` and ``end`` is given only\\nshuffles the slice ``[start:end]``.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.\\n\\n:param start: position of first track to shuffle\\n:type start: int or :class:`None`\\n:param end: position after last track to shuffle\\n:type end: int or :class:`None`", "params": [{"name": "start", "default": null}, {"name": "end", "default": null}]}, "core.tracklist.slice": {"description": "Returns a slice of the tracklist, limited by the given start and end\\npositions.\\n\\n:param start: position of first track to include in slice\\n:type start: int\\n:param end: position after last track to include in slice\\n:type end: int\\n:rtype: :class:`mopidy.models.TlTrack`", "params": [{"name": "start"}, {"name": "end"}]}}}'
okt 23 23:36:32 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:36:32,275 [8864:HttpServer] mopidy.http.handlers
okt 23 23:36:32 Desktop-Ubuntu mopidy[8864]:   Received WebSocket message from 127.0.0.1: '{"method":"core.describe","jsonrpc":"2.0","id":63}'
okt 23 23:36:32 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:36:32,271 [8864:HttpServer] mopidy.http.handlers
okt 23 23:36:32 Desktop-Ubuntu mopidy[8864]:   New WebSocket connection from 127.0.0.1
okt 23 23:36:32 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:36:32,269 [8864:HttpServer] mopidy.http.handlers
okt 23 23:36:32 Desktop-Ubuntu mopidy[8864]:   101 GET /mopidy/ws/ (127.0.0.1) 18.64ms
okt 23 23:36:32 Desktop-Ubuntu mopidy[8864]: INFO     2022-10-23 23:36:32,269 [8864:HttpServer] tornado.access
okt 23 23:36:31 Desktop-Ubuntu mopidy[8864]:   Zeroconf service 'Mopidy HTTP server on Desktop-Ubuntu' (_mopidy-http._tcp at []:6680): Published
okt 23 23:36:31 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:36:31,939 [8864:HttpFrontend-11 (_actor_loop)] mopidy.zeroconf
okt 23 23:36:31 Desktop-Ubuntu mopidy[8864]:   Zeroconf service 'Mopidy HTTP server on Desktop-Ubuntu' (_http._tcp at []:6680): Published
okt 23 23:36:31 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:36:31,937 [8864:HttpFrontend-11 (_actor_loop)] mopidy.zeroconf
okt 23 23:36:31 Desktop-Ubuntu mopidy[8864]:     '/': <class 'tornado.web.RedirectHandler'>
okt 23 23:36:31 Desktop-Ubuntu mopidy[8864]:     '/mopidy/': <class 'mopidy.http.handlers.ClientListHandler'>
okt 23 23:36:31 Desktop-Ubuntu mopidy[8864]:     '/mopidy/(.+)': <class 'mopidy.http.handlers.StaticFileHandler'>
okt 23 23:36:31 Desktop-Ubuntu mopidy[8864]:     '/mopidy/rpc': <class 'mopidy.http.handlers.JsonRpcHandler'>
okt 23 23:36:31 Desktop-Ubuntu mopidy[8864]:     '/mopidy/ws/?': <class 'mopidy.http.handlers.WebSocketHandler'>
okt 23 23:36:31 Desktop-Ubuntu mopidy[8864]:     '/mopidy': <class 'mopidy.http.handlers.AddSlashHandler'>
okt 23 23:36:31 Desktop-Ubuntu mopidy[8864]:     '/iris/(.*)': <class 'mopidy_iris.handlers.ReactRouterHandler'>
okt 23 23:36:31 Desktop-Ubuntu mopidy[8864]:     '/iris/((.*)(?:css|js|json|map)$)': <class 'tornado.web.StaticFileHandler'>
okt 23 23:36:31 Desktop-Ubuntu mopidy[8864]:     '/iris/assets/(.*)': <class 'tornado.web.StaticFileHandler'>
okt 23 23:36:31 Desktop-Ubuntu mopidy[8864]:     '/iris/ws/?': <class 'mopidy_iris.handlers.WebsocketHandler'>
okt 23 23:36:31 Desktop-Ubuntu mopidy[8864]:     '/iris/http/([^/]*)': <class 'mopidy_iris.handlers.HttpHandler'>
okt 23 23:36:31 Desktop-Ubuntu mopidy[8864]:     '/iris': <class 'mopidy.http.handlers.AddSlashHandler'>
okt 23 23:36:31 Desktop-Ubuntu mopidy[8864]:     '/youtube/(.*\\.(?:webm|m4a|mp3|ogg))': <class 'mopidy_youtube.web.AudioHandler'>
okt 23 23:36:31 Desktop-Ubuntu mopidy[8864]:     '/youtube/(.*\\.jpg)': <class 'mopidy_youtube.web.ImageHandler'>
okt 23 23:36:31 Desktop-Ubuntu mopidy[8864]:     '/youtube/(index.html|image.html)?': <class 'mopidy_youtube.web.IndexHandler'>
okt 23 23:36:31 Desktop-Ubuntu mopidy[8864]:     '/youtube': <class 'mopidy.http.handlers.AddSlashHandler'>
okt 23 23:36:31 Desktop-Ubuntu mopidy[8864]:   HTTP routes from extensions:
okt 23 23:36:31 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:36:31,932 [8864:HttpServer] mopidy.http.actor
okt 23 23:36:31 Desktop-Ubuntu mopidy[8864]:   Default webclient is mopidy
okt 23 23:36:31 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:36:31,932 [8864:HttpServer] mopidy.http.actor
okt 23 23:36:31 Desktop-Ubuntu mopidy[8864]:   Loaded HTTP extension: mopidy
okt 23 23:36:31 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:36:31,931 [8864:HttpServer] mopidy.http.actor
okt 23 23:36:31 Desktop-Ubuntu mopidy[8864]:   Loaded HTTP extension: iris
okt 23 23:36:31 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:36:31,931 [8864:HttpServer] mopidy.http.actor
okt 23 23:36:31 Desktop-Ubuntu mopidy[8864]:   Loaded HTTP extension: youtube
okt 23 23:36:31 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:36:31,930 [8864:HttpServer] mopidy.http.actor
okt 23 23:36:31 Desktop-Ubuntu mopidy[8864]:   Starting GLib mainloop
okt 23 23:36:31 Desktop-Ubuntu mopidy[8864]: INFO     2022-10-23 23:36:31,926 [8864:MainThread] mopidy.commands
okt 23 23:36:31 Desktop-Ubuntu mopidy[8864]:   Using selector: EpollSelector
okt 23 23:36:31 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:36:31,926 [8864:HttpServer] asyncio
okt 23 23:36:31 Desktop-Ubuntu mopidy[8864]:   HttpFrontend took 1ms
okt 23 23:36:31 Desktop-Ubuntu mopidy[8864]: TRACE    2022-10-23 23:36:31,926 [8864:MainThread] mopidy.internal.timer
okt 23 23:36:31 Desktop-Ubuntu mopidy[8864]:   HTTP server running at [::ffff:127.0.0.1]:6680
okt 23 23:36:31 Desktop-Ubuntu mopidy[8864]: INFO     2022-10-23 23:36:31,926 [8864:HttpFrontend-11 (_actor_loop)] mopidy.http.actor
okt 23 23:36:31 Desktop-Ubuntu mopidy[8864]:   Starting HttpFrontend (urn:uuid:e7e398f5-952a-49a8-a2ec-316b66a1eecb)
okt 23 23:36:31 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:36:31,925 [8864:MainThread] pykka
okt 23 23:36:31 Desktop-Ubuntu mopidy[8864]:   Registered HttpFrontend (urn:uuid:e7e398f5-952a-49a8-a2ec-316b66a1eecb)
okt 23 23:36:31 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:36:31,925 [8864:MainThread] pykka
okt 23 23:36:31 Desktop-Ubuntu mopidy[8864]:   Starting HTTP server
okt 23 23:36:31 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:36:31,925 [8864:MainThread] mopidy.http.actor
okt 23 23:36:31 Desktop-Ubuntu mopidy[8864]:   IrisFrontend took 1ms
okt 23 23:36:31 Desktop-Ubuntu mopidy[8864]: TRACE    2022-10-23 23:36:31,924 [8864:MainThread] mopidy.internal.timer
okt 23 23:36:31 Desktop-Ubuntu mopidy[8864]:   Starting Iris 3.64.1
okt 23 23:36:31 Desktop-Ubuntu mopidy[8864]: INFO     2022-10-23 23:36:31,924 [8864:IrisFrontend-9 (_actor_loop)] mopidy_iris.core
okt 23 23:36:31 Desktop-Ubuntu mopidy[8864]:   Starting IrisFrontend (urn:uuid:8a977c23-f8a6-4e66-81e2-5e3375f1a399)
okt 23 23:36:31 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:36:31,924 [8864:MainThread] pykka
okt 23 23:36:31 Desktop-Ubuntu mopidy[8864]:   Registered IrisFrontend (urn:uuid:8a977c23-f8a6-4e66-81e2-5e3375f1a399)
okt 23 23:36:31 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:36:31,923 [8864:MainThread] pykka
okt 23 23:36:31 Desktop-Ubuntu mopidy[8864]:   YouTubeCoreListener took 0ms
okt 23 23:36:31 Desktop-Ubuntu mopidy[8864]: TRACE    2022-10-23 23:36:31,923 [8864:MainThread] mopidy.internal.timer
okt 23 23:36:31 Desktop-Ubuntu mopidy[8864]:   Starting YouTubeCoreListener (urn:uuid:a8fe7b28-1d50-466a-92f4-91020b0b31c0)
okt 23 23:36:31 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:36:31,922 [8864:MainThread] pykka
okt 23 23:36:31 Desktop-Ubuntu mopidy[8864]:   Registered YouTubeCoreListener (urn:uuid:a8fe7b28-1d50-466a-92f4-91020b0b31c0)
okt 23 23:36:31 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:36:31,922 [8864:MainThread] pykka
okt 23 23:36:31 Desktop-Ubuntu mopidy[8864]:   YouTubeAutoplayer took 0ms
okt 23 23:36:31 Desktop-Ubuntu mopidy[8864]: TRACE    2022-10-23 23:36:31,922 [8864:MainThread] mopidy.internal.timer
okt 23 23:36:31 Desktop-Ubuntu mopidy[8864]:   Starting YouTubeAutoplayer (urn:uuid:f880c3cc-7d8a-4070-b095-2f3752a7b812)
okt 23 23:36:31 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:36:31,922 [8864:MainThread] pykka
okt 23 23:36:31 Desktop-Ubuntu mopidy[8864]:   Registered YouTubeAutoplayer (urn:uuid:f880c3cc-7d8a-4070-b095-2f3752a7b812)
okt 23 23:36:31 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:36:31,922 [8864:MainThread] pykka
okt 23 23:36:31 Desktop-Ubuntu mopidy[8864]:   Starting Mopidy frontends: YouTubeAutoplayer, YouTubeCoreListener, IrisFrontend, HttpFrontend
okt 23 23:36:31 Desktop-Ubuntu mopidy[8864]: INFO     2022-10-23 23:36:31,922 [8864:MainThread] mopidy.commands
okt 23 23:36:31 Desktop-Ubuntu mopidy[8864]:   Starting Core (urn:uuid:8935220c-ea92-4e12-a314-b370a3bd7b19)
okt 23 23:36:31 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:36:31,918 [8864:MainThread] pykka
okt 23 23:36:31 Desktop-Ubuntu mopidy[8864]:   Registered Core (urn:uuid:8935220c-ea92-4e12-a314-b370a3bd7b19)
okt 23 23:36:31 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:36:31,918 [8864:MainThread] pykka
okt 23 23:36:31 Desktop-Ubuntu mopidy[8864]:   Starting Mopidy core
okt 23 23:36:31 Desktop-Ubuntu mopidy[8864]: INFO     2022-10-23 23:36:31,916 [8864:MainThread] mopidy.commands
okt 23 23:36:31 Desktop-Ubuntu mopidy[8864]:   StreamBackend took 6ms
okt 23 23:36:31 Desktop-Ubuntu mopidy[8864]: TRACE    2022-10-23 23:36:31,915 [8864:MainThread] mopidy.internal.timer
okt 23 23:36:31 Desktop-Ubuntu mopidy[8864]:   Starting StreamBackend (urn:uuid:d5bb2e7b-6a19-4dfd-b7ce-37d7acd343be)
okt 23 23:36:31 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:36:31,913 [8864:MainThread] pykka
okt 23 23:36:31 Desktop-Ubuntu mopidy[8864]:   Registered StreamBackend (urn:uuid:d5bb2e7b-6a19-4dfd-b7ce-37d7acd343be)
okt 23 23:36:31 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:36:31,913 [8864:MainThread] pykka
okt 23 23:36:31 Desktop-Ubuntu mopidy[8864]:   Audio output set to "pulsesink server=127.0.0.1:6680"
okt 23 23:36:31 Desktop-Ubuntu mopidy[8864]: INFO     2022-10-23 23:36:31,910 [8864:Audio-2 (_actor_loop)] mopidy.audio.actor
okt 23 23:36:31 Desktop-Ubuntu mopidy[8864]:   M3UBackend took 1ms
okt 23 23:36:31 Desktop-Ubuntu mopidy[8864]: TRACE    2022-10-23 23:36:31,909 [8864:MainThread] mopidy.internal.timer
okt 23 23:36:31 Desktop-Ubuntu mopidy[8864]:   Starting M3UBackend (urn:uuid:920aed54-625d-4061-95ee-916cbe07ced5)
okt 23 23:36:31 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:36:31,908 [8864:MainThread] pykka
okt 23 23:36:31 Desktop-Ubuntu mopidy[8864]:   Registered M3UBackend (urn:uuid:920aed54-625d-4061-95ee-916cbe07ced5)
okt 23 23:36:31 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:36:31,908 [8864:MainThread] pykka
okt 23 23:36:31 Desktop-Ubuntu mopidy[8864]:   FileBackend took 3ms
okt 23 23:36:31 Desktop-Ubuntu mopidy[8864]: TRACE    2022-10-23 23:36:31,908 [8864:MainThread] mopidy.internal.timer
okt 23 23:36:31 Desktop-Ubuntu mopidy[8864]:   Starting FileBackend (urn:uuid:e6ced9d6-c3c7-4eb5-9546-080680f49866)
okt 23 23:36:31 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:36:31,904 [8864:MainThread] pykka
okt 23 23:36:31 Desktop-Ubuntu mopidy[8864]:   Registered FileBackend (urn:uuid:e6ced9d6-c3c7-4eb5-9546-080680f49866)
okt 23 23:36:31 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:36:31,904 [8864:MainThread] pykka
okt 23 23:36:31 Desktop-Ubuntu mopidy[8864]:   Failed expanding path ($XDG_MUSIC_DIR) from file/media_dirs config value.
okt 23 23:36:31 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:36:31,904 [8864:MainThread] mopidy.file.library
okt 23 23:36:31 Desktop-Ubuntu mopidy[8864]: ModuleNotFoundError: No module named 'ytmusicapi'
okt 23 23:36:31 Desktop-Ubuntu mopidy[8864]:     from ytmusicapi import YTMusic
okt 23 23:36:31 Desktop-Ubuntu mopidy[8864]:   File "/usr/local/lib/python3.10/dist-packages/mopidy_youtube/apis/youtube_music.py", line 7, in <module>
okt 23 23:36:31 Desktop-Ubuntu mopidy[8864]:     from mopidy_youtube.apis import youtube_music
okt 23 23:36:31 Desktop-Ubuntu mopidy[8864]:   File "/usr/local/lib/python3.10/dist-packages/mopidy_youtube/backend.py", line 84, in __init__
okt 23 23:36:31 Desktop-Ubuntu mopidy[8864]:     obj = cls(*args, **kwargs)
okt 23 23:36:31 Desktop-Ubuntu mopidy[8864]:   File "/usr/lib/python3/dist-packages/pykka/_actor.py", line 91, in start
okt 23 23:36:31 Desktop-Ubuntu mopidy[8864]:     backend = backend_class.start(
okt 23 23:36:31 Desktop-Ubuntu mopidy[8864]:   File "/usr/lib/python3/dist-packages/mopidy/commands.py", line 412, in start_backends
okt 23 23:36:31 Desktop-Ubuntu mopidy[8864]:     yield
okt 23 23:36:31 Desktop-Ubuntu mopidy[8864]:   File "/usr/lib/python3/dist-packages/mopidy/commands.py", line 248, in _actor_error_handling
okt 23 23:36:31 Desktop-Ubuntu mopidy[8864]: Traceback (most recent call last):
okt 23 23:36:31 Desktop-Ubuntu mopidy[8864]:   Got un-handled exception from YouTubeBackend
okt 23 23:36:31 Desktop-Ubuntu mopidy[8864]: ERROR    2022-10-23 23:36:31,903 [8864:MainThread] mopidy.commands
okt 23 23:36:31 Desktop-Ubuntu mopidy[8864]:   Starting Mopidy backends: YouTubeBackend, FileBackend, M3UBackend, StreamBackend
okt 23 23:36:31 Desktop-Ubuntu mopidy[8864]: INFO     2022-10-23 23:36:31,901 [8864:MainThread] mopidy.commands
okt 23 23:36:31 Desktop-Ubuntu mopidy[8864]:   Starting Audio (urn:uuid:2e8ee409-4ac2-4fda-b24d-e479c9b72d1e)
okt 23 23:36:31 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:36:31,900 [8864:MainThread] pykka
okt 23 23:36:31 Desktop-Ubuntu mopidy[8864]:   Registered Audio (urn:uuid:2e8ee409-4ac2-4fda-b24d-e479c9b72d1e)
okt 23 23:36:31 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:36:31,900 [8864:MainThread] pykka
okt 23 23:36:31 Desktop-Ubuntu mopidy[8864]:   Starting Mopidy audio
okt 23 23:36:31 Desktop-Ubuntu mopidy[8864]: INFO     2022-10-23 23:36:31,900 [8864:MainThread] mopidy.commands
okt 23 23:36:31 Desktop-Ubuntu mopidy[8864]:   Mixer volume left unchanged
okt 23 23:36:31 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:36:31,900 [8864:MainThread] mopidy.commands
okt 23 23:36:31 Desktop-Ubuntu mopidy[8864]:   Starting SoftwareMixer (urn:uuid:9e084a76-66a6-43a9-ada5-9e98f1d454a1)
okt 23 23:36:31 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:36:31,898 [8864:MainThread] pykka
okt 23 23:36:31 Desktop-Ubuntu mopidy[8864]:   Registered SoftwareMixer (urn:uuid:9e084a76-66a6-43a9-ada5-9e98f1d454a1)
okt 23 23:36:31 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:36:31,898 [8864:MainThread] pykka
okt 23 23:36:31 Desktop-Ubuntu mopidy[8864]:   Starting Mopidy mixer: SoftwareMixer
okt 23 23:36:31 Desktop-Ubuntu mopidy[8864]: INFO     2022-10-23 23:36:31,898 [8864:MainThread] mopidy.commands
okt 23 23:36:31 Desktop-Ubuntu mopidy[8864]:   Available Mopidy mixers: SoftwareMixer
okt 23 23:36:31 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:36:31,898 [8864:MainThread] mopidy.commands
okt 23 23:36:31 Desktop-Ubuntu mopidy[8864]:   Disabled extensions: soundcloud
okt 23 23:36:31 Desktop-Ubuntu mopidy[8864]: INFO     2022-10-23 23:36:31,818 [8864:MainThread] mopidy.__main__
okt 23 23:36:31 Desktop-Ubuntu mopidy[8864]:   Enabled extensions: youtube, softwaremixer, file, m3u, stream, iris, http
okt 23 23:36:31 Desktop-Ubuntu mopidy[8864]: INFO     2022-10-23 23:36:31,818 [8864:MainThread] mopidy.__main__
okt 23 23:36:31 Desktop-Ubuntu mopidy[8864]:   Validating extension: stream
okt 23 23:36:31 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:36:31,818 [8864:MainThread] mopidy.ext
okt 23 23:36:31 Desktop-Ubuntu mopidy[8864]:   Validating extension: softwaremixer
okt 23 23:36:31 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:36:31,818 [8864:MainThread] mopidy.ext
okt 23 23:36:31 Desktop-Ubuntu mopidy[8864]:   Validating extension: m3u
okt 23 23:36:31 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:36:31,818 [8864:MainThread] mopidy.ext
okt 23 23:36:31 Desktop-Ubuntu mopidy[8864]:   Validating extension: http
okt 23 23:36:31 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:36:31,754 [8864:MainThread] mopidy.ext
okt 23 23:36:31 Desktop-Ubuntu mopidy[8864]:   Validating extension: file
okt 23 23:36:31 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:36:31,754 [8864:MainThread] mopidy.ext
okt 23 23:36:31 Desktop-Ubuntu mopidy[8864]:   Validating extension: iris
okt 23 23:36:31 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:36:31,745 [8864:MainThread] mopidy.ext
okt 23 23:36:31 Desktop-Ubuntu mopidy[8864]:   Validating extension: soundcloud
okt 23 23:36:31 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:36:31,720 [8864:MainThread] mopidy.ext
okt 23 23:36:31 Desktop-Ubuntu mopidy[8864]:   Validating extension: youtube
okt 23 23:36:31 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:36:31,668 [8864:MainThread] mopidy.ext
okt 23 23:36:31 Desktop-Ubuntu mopidy[8864]:   Ignoring config section 'ytmusic' because no matching extension was found
okt 23 23:36:31 Desktop-Ubuntu mopidy[8864]: WARNING  2022-10-23 23:36:31,667 [8864:MainThread] mopidy.config
okt 23 23:36:31 Desktop-Ubuntu mopidy[8864]:   Ignoring config section 'local' because no matching extension was found
okt 23 23:36:31 Desktop-Ubuntu mopidy[8864]: WARNING  2022-10-23 23:36:31,667 [8864:MainThread] mopidy.config
okt 23 23:36:31 Desktop-Ubuntu mopidy[8864]:   Ignoring config section 'jukebox' because no matching extension was found
okt 23 23:36:31 Desktop-Ubuntu mopidy[8864]: WARNING  2022-10-23 23:36:31,667 [8864:MainThread] mopidy.config
okt 23 23:36:31 Desktop-Ubuntu mopidy[8864]:   Loading config from command line options
okt 23 23:36:31 Desktop-Ubuntu mopidy[8864]: INFO     2022-10-23 23:36:31,664 [8864:MainThread] mopidy.config
okt 23 23:36:31 Desktop-Ubuntu mopidy[8864]:   Loading config from file:///etc/mopidy/mopidy.conf
okt 23 23:36:31 Desktop-Ubuntu mopidy[8864]: INFO     2022-10-23 23:36:31,663 [8864:MainThread] mopidy.config
okt 23 23:36:31 Desktop-Ubuntu mopidy[8864]:   Loading config from file:///usr/share/mopidy/conf.d/mopidy.conf
okt 23 23:36:31 Desktop-Ubuntu mopidy[8864]: INFO     2022-10-23 23:36:31,663 [8864:MainThread] mopidy.config
okt 23 23:36:31 Desktop-Ubuntu mopidy[8864]:   Loading config from builtin defaults
okt 23 23:36:31 Desktop-Ubuntu mopidy[8864]: INFO     2022-10-23 23:36:31,661 [8864:MainThread] mopidy.config
okt 23 23:36:31 Desktop-Ubuntu mopidy[8864]:   Fetching passwords from your keyring failed. Any passwords stored in the keyring will not be available. (org.freedesktop.DBus.Error.NotSupported: Unable to autolaunch a dbus-daemon without a $DISPLAY for X11)
okt 23 23:36:31 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:36:31,661 [8864:MainThread] mopidy.config.keyring
okt 23 23:36:31 Desktop-Ubuntu mopidy[8864]:   Discovered extensions: youtube, soundcloud, iris, file, http, m3u, softwaremixer, stream
okt 23 23:36:31 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:36:31,659 [8864:MainThread] mopidy.ext
okt 23 23:36:31 Desktop-Ubuntu mopidy[8864]:   Loaded extension: Mopidy-Stream 3.3.0
okt 23 23:36:31 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:36:31,656 [8864:MainThread] mopidy.ext
okt 23 23:36:31 Desktop-Ubuntu mopidy[8864]:   Loading entry point: stream = mopidy.stream:Extension
okt 23 23:36:31 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:36:31,656 [8864:MainThread] mopidy.ext
okt 23 23:36:31 Desktop-Ubuntu mopidy[8864]:   Loaded extension: Mopidy-SoftwareMixer 3.3.0
okt 23 23:36:31 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:36:31,656 [8864:MainThread] mopidy.ext
okt 23 23:36:31 Desktop-Ubuntu mopidy[8864]:   Loading entry point: softwaremixer = mopidy.softwaremixer:Extension
okt 23 23:36:31 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:36:31,655 [8864:MainThread] mopidy.ext
okt 23 23:36:31 Desktop-Ubuntu mopidy[8864]:   Loaded extension: Mopidy-M3U 3.3.0
okt 23 23:36:31 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:36:31,655 [8864:MainThread] mopidy.ext
okt 23 23:36:31 Desktop-Ubuntu mopidy[8864]:   Loading entry point: m3u = mopidy.m3u:Extension
okt 23 23:36:31 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:36:31,655 [8864:MainThread] mopidy.ext
okt 23 23:36:31 Desktop-Ubuntu mopidy[8864]:   Loaded extension: Mopidy-HTTP 3.3.0
okt 23 23:36:31 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:36:31,655 [8864:MainThread] mopidy.ext
okt 23 23:36:31 Desktop-Ubuntu mopidy[8864]:   Loading entry point: http = mopidy.http:Extension
okt 23 23:36:31 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:36:31,654 [8864:MainThread] mopidy.ext
okt 23 23:36:31 Desktop-Ubuntu mopidy[8864]:   Loaded extension: Mopidy-File 3.3.0
okt 23 23:36:31 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:36:31,654 [8864:MainThread] mopidy.ext
okt 23 23:36:31 Desktop-Ubuntu mopidy[8864]:   Loading entry point: file = mopidy.file:Extension
okt 23 23:36:31 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:36:31,654 [8864:MainThread] mopidy.ext
okt 23 23:36:31 Desktop-Ubuntu mopidy[8864]:   Loaded extension: Mopidy-Iris 3.64.1
okt 23 23:36:31 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:36:31,652 [8864:MainThread] mopidy.ext
okt 23 23:36:31 Desktop-Ubuntu mopidy[8864]:   Loading entry point: iris = mopidy_iris:Extension
okt 23 23:36:31 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:36:31,651 [8864:MainThread] mopidy.ext
okt 23 23:36:31 Desktop-Ubuntu mopidy[8864]:   Loaded extension: Mopidy-SoundCloud 3.0.1
okt 23 23:36:31 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:36:31,651 [8864:MainThread] mopidy.ext
okt 23 23:36:31 Desktop-Ubuntu mopidy[8864]:   Loading entry point: soundcloud = mopidy_soundcloud:Extension
okt 23 23:36:31 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:36:31,650 [8864:MainThread] mopidy.ext
okt 23 23:36:31 Desktop-Ubuntu mopidy[8864]:   Loaded extension: Mopidy-YouTube 3.6.1
okt 23 23:36:31 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:36:31,649 [8864:MainThread] mopidy.ext
okt 23 23:36:31 Desktop-Ubuntu mopidy[8864]:   Loading entry point: youtube = mopidy_youtube:Extension
okt 23 23:36:31 Desktop-Ubuntu mopidy[8864]: DEBUG    2022-10-23 23:36:31,648 [8864:MainThread] mopidy.ext
okt 23 23:36:31 Desktop-Ubuntu mopidy[8864]:   Starting Mopidy 3.3.0
okt 23 23:36:31 Desktop-Ubuntu mopidy[8864]: INFO     2022-10-23 23:36:31,646 [8864:MainThread] mopidy.__main__
okt 23 23:36:31 Desktop-Ubuntu systemd[1]: Started Mopidy music server.
okt 23 23:36:31 Desktop-Ubuntu systemd[1]: Starting Mopidy music server...
okt 23 23:36:31 Desktop-Ubuntu systemd[1]: mopidy.service: Consumed 1.736s CPU time.
okt 23 23:36:31 Desktop-Ubuntu systemd[1]: Stopped Mopidy music server.
okt 23 23:36:31 Desktop-Ubuntu systemd[1]: mopidy.service: Deactivated successfully.
okt 23 23:36:31 Desktop-Ubuntu mopidy[8268]:   All actors stopped.
okt 23 23:36:31 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:36:31,194 [8268:MainThread] mopidy.internal.process
okt 23 23:36:31 Desktop-Ubuntu mopidy[8268]:   Stopped SoftwareMixer (urn:uuid:a3f9667d-3efa-4fb5-ab50-449dc0311f7e)
okt 23 23:36:31 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:36:31,194 [8268:SoftwareMixer-1 (_actor_loop)] pykka
okt 23 23:36:31 Desktop-Ubuntu mopidy[8268]:   Unregistered SoftwareMixer (urn:uuid:a3f9667d-3efa-4fb5-ab50-449dc0311f7e)
okt 23 23:36:31 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:36:31,194 [8268:SoftwareMixer-1 (_actor_loop)] pykka
okt 23 23:36:31 Desktop-Ubuntu mopidy[8268]:   Stopping 1 instance(s) of SoftwareMixer
okt 23 23:36:31 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:36:31,193 [8268:MainThread] mopidy.internal.process
okt 23 23:36:31 Desktop-Ubuntu mopidy[8268]:   Stopping Mopidy mixer
okt 23 23:36:31 Desktop-Ubuntu mopidy[8268]: INFO     2022-10-23 23:36:31,193 [8268:MainThread] mopidy.commands
okt 23 23:36:31 Desktop-Ubuntu mopidy[8268]:   Stopped Audio (urn:uuid:10711aa7-9480-4da1-98e7-17d46e15e1d1)
okt 23 23:36:31 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:36:31,193 [8268:Audio-2 (_actor_loop)] pykka
okt 23 23:36:31 Desktop-Ubuntu mopidy[8268]:   Unregistered Audio (urn:uuid:10711aa7-9480-4da1-98e7-17d46e15e1d1)
okt 23 23:36:31 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:36:31,193 [8268:Audio-2 (_actor_loop)] pykka
okt 23 23:36:31 Desktop-Ubuntu mopidy[8268]:   Stopping 1 instance(s) of Audio
okt 23 23:36:31 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:36:31,193 [8268:MainThread] mopidy.internal.process
okt 23 23:36:31 Desktop-Ubuntu mopidy[8268]:   Stopping Mopidy audio
okt 23 23:36:31 Desktop-Ubuntu mopidy[8268]: INFO     2022-10-23 23:36:31,192 [8268:MainThread] mopidy.commands
okt 23 23:36:31 Desktop-Ubuntu mopidy[8268]:   Stopped StreamBackend (urn:uuid:f9b15e5c-ed4c-46b2-a284-17147e407121)
okt 23 23:36:31 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:36:31,192 [8268:StreamBackend-5 (_actor_loop)] pykka
okt 23 23:36:31 Desktop-Ubuntu mopidy[8268]:   Unregistered StreamBackend (urn:uuid:f9b15e5c-ed4c-46b2-a284-17147e407121)
okt 23 23:36:31 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:36:31,192 [8268:StreamBackend-5 (_actor_loop)] pykka
okt 23 23:36:31 Desktop-Ubuntu mopidy[8268]:   Stopping 1 instance(s) of StreamBackend
okt 23 23:36:31 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:36:31,192 [8268:MainThread] mopidy.internal.process
okt 23 23:36:31 Desktop-Ubuntu mopidy[8268]:   Stopped M3UBackend (urn:uuid:51ec7035-e71d-4f1e-92c2-b04d1da2b856)
okt 23 23:36:31 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:36:31,192 [8268:M3UBackend-4 (_actor_loop)] pykka
okt 23 23:36:31 Desktop-Ubuntu mopidy[8268]:   Unregistered M3UBackend (urn:uuid:51ec7035-e71d-4f1e-92c2-b04d1da2b856)
okt 23 23:36:31 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:36:31,192 [8268:M3UBackend-4 (_actor_loop)] pykka
okt 23 23:36:31 Desktop-Ubuntu mopidy[8268]:   Stopping 1 instance(s) of M3UBackend
okt 23 23:36:31 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:36:31,192 [8268:MainThread] mopidy.internal.process
okt 23 23:36:31 Desktop-Ubuntu mopidy[8268]:   Stopped FileBackend (urn:uuid:b5d29787-8902-4145-b307-34682f2a1d44)
okt 23 23:36:31 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:36:31,191 [8268:FileBackend-3 (_actor_loop)] pykka
okt 23 23:36:31 Desktop-Ubuntu mopidy[8268]:   Unregistered FileBackend (urn:uuid:b5d29787-8902-4145-b307-34682f2a1d44)
okt 23 23:36:31 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:36:31,191 [8268:FileBackend-3 (_actor_loop)] pykka
okt 23 23:36:31 Desktop-Ubuntu mopidy[8268]:   Stopping 1 instance(s) of FileBackend
okt 23 23:36:31 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:36:31,191 [8268:MainThread] mopidy.internal.process
okt 23 23:36:31 Desktop-Ubuntu mopidy[8268]:   Stopping 0 instance(s) of YouTubeBackend
okt 23 23:36:31 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:36:31,191 [8268:MainThread] mopidy.internal.process
okt 23 23:36:31 Desktop-Ubuntu mopidy[8268]:   Stopping Mopidy backends
okt 23 23:36:31 Desktop-Ubuntu mopidy[8268]: INFO     2022-10-23 23:36:31,191 [8268:MainThread] mopidy.commands
okt 23 23:36:31 Desktop-Ubuntu mopidy[8268]:   Stopped Core (urn:uuid:45c2c637-835d-46f9-b849-efaafd370902)
okt 23 23:36:31 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:36:31,191 [8268:Core-6 (_actor_loop)] pykka
okt 23 23:36:31 Desktop-Ubuntu mopidy[8268]:   Unregistered Core (urn:uuid:45c2c637-835d-46f9-b849-efaafd370902)
okt 23 23:36:31 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:36:31,191 [8268:Core-6 (_actor_loop)] pykka
okt 23 23:36:31 Desktop-Ubuntu mopidy[8268]:   Stopping 1 instance(s) of Core
okt 23 23:36:31 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:36:31,190 [8268:MainThread] mopidy.internal.process
okt 23 23:36:31 Desktop-Ubuntu mopidy[8268]:   Stopped HTTP server
okt 23 23:36:31 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:36:31,190 [8268:HttpServer] mopidy.http.actor
okt 23 23:36:31 Desktop-Ubuntu mopidy[8268]:   Stopping Mopidy core
okt 23 23:36:31 Desktop-Ubuntu mopidy[8268]: INFO     2022-10-23 23:36:31,190 [8268:MainThread] mopidy.commands
okt 23 23:36:31 Desktop-Ubuntu mopidy[8268]:   Stopping HTTP server
okt 23 23:36:31 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:36:31,190 [8268:HttpFrontend-11 (_actor_loop)] mopidy.http.actor
okt 23 23:36:31 Desktop-Ubuntu mopidy[8268]:   Zeroconf service 'Mopidy HTTP server on Desktop-Ubuntu' (_mopidy-http._tcp at []:6680): Unpublished
okt 23 23:36:31 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:36:31,190 [8268:HttpFrontend-11 (_actor_loop)] mopidy.zeroconf
okt 23 23:36:31 Desktop-Ubuntu mopidy[8268]:   Zeroconf service 'Mopidy HTTP server on Desktop-Ubuntu' (_http._tcp at []:6680): Unpublished
okt 23 23:36:31 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:36:31,189 [8268:HttpFrontend-11 (_actor_loop)] mopidy.zeroconf
okt 23 23:36:31 Desktop-Ubuntu mopidy[8268]:   Stopped HttpFrontend (urn:uuid:5aee4f16-80ac-4468-8788-a03b8a3741c5)
okt 23 23:36:31 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:36:31,188 [8268:HttpFrontend-11 (_actor_loop)] pykka
okt 23 23:36:31 Desktop-Ubuntu mopidy[8268]:   Unregistered HttpFrontend (urn:uuid:5aee4f16-80ac-4468-8788-a03b8a3741c5)
okt 23 23:36:31 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:36:31,188 [8268:HttpFrontend-11 (_actor_loop)] pykka
okt 23 23:36:31 Desktop-Ubuntu mopidy[8268]:   Stopping 1 instance(s) of HttpFrontend
okt 23 23:36:31 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:36:31,188 [8268:MainThread] mopidy.internal.process
okt 23 23:36:31 Desktop-Ubuntu mopidy[8268]:   Stopping Iris
okt 23 23:36:31 Desktop-Ubuntu mopidy[8268]: INFO     2022-10-23 23:36:31,188 [8268:IrisFrontend-9 (_actor_loop)] mopidy_iris.core
okt 23 23:36:31 Desktop-Ubuntu mopidy[8268]:   Stopped IrisFrontend (urn:uuid:44da2706-cb95-4fe4-b235-c7834da3e175)
okt 23 23:36:31 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:36:31,188 [8268:IrisFrontend-9 (_actor_loop)] pykka
okt 23 23:36:31 Desktop-Ubuntu mopidy[8268]:   Unregistered IrisFrontend (urn:uuid:44da2706-cb95-4fe4-b235-c7834da3e175)
okt 23 23:36:31 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:36:31,188 [8268:IrisFrontend-9 (_actor_loop)] pykka
okt 23 23:36:31 Desktop-Ubuntu mopidy[8268]:   Stopping 1 instance(s) of IrisFrontend
okt 23 23:36:31 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:36:31,188 [8268:MainThread] mopidy.internal.process
okt 23 23:36:31 Desktop-Ubuntu mopidy[8268]:   Stopped YouTubeCoreListener (urn:uuid:cdd2678f-3006-450f-981e-320bcc490f9e)
okt 23 23:36:31 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:36:31,187 [8268:YouTubeCoreListener-8 (_actor_loop)] pykka
okt 23 23:36:31 Desktop-Ubuntu mopidy[8268]:   Unregistered YouTubeCoreListener (urn:uuid:cdd2678f-3006-450f-981e-320bcc490f9e)
okt 23 23:36:31 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:36:31,187 [8268:YouTubeCoreListener-8 (_actor_loop)] pykka
okt 23 23:36:31 Desktop-Ubuntu mopidy[8268]:   Stopping 1 instance(s) of YouTubeCoreListener
okt 23 23:36:31 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:36:31,187 [8268:MainThread] mopidy.internal.process
okt 23 23:36:31 Desktop-Ubuntu mopidy[8268]:   Stopped YouTubeAutoplayer (urn:uuid:d2173c96-a38c-43b5-a7b0-aa9cbf387847)
okt 23 23:36:31 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:36:31,187 [8268:YouTubeAutoplayer-7 (_actor_loop)] pykka
okt 23 23:36:31 Desktop-Ubuntu mopidy[8268]:   Unregistered YouTubeAutoplayer (urn:uuid:d2173c96-a38c-43b5-a7b0-aa9cbf387847)
okt 23 23:36:31 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:36:31,187 [8268:YouTubeAutoplayer-7 (_actor_loop)] pykka
okt 23 23:36:31 Desktop-Ubuntu mopidy[8268]:   Stopping 1 instance(s) of YouTubeAutoplayer
okt 23 23:36:31 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:36:31,186 [8268:MainThread] mopidy.internal.process
okt 23 23:36:31 Desktop-Ubuntu mopidy[8268]:   Stopping Mopidy frontends
okt 23 23:36:31 Desktop-Ubuntu mopidy[8268]: INFO     2022-10-23 23:36:31,186 [8268:MainThread] mopidy.commands
okt 23 23:36:31 Desktop-Ubuntu mopidy[8268]:   GLib mainloop got SIGTERM. Exiting...
okt 23 23:36:31 Desktop-Ubuntu mopidy[8268]: INFO     2022-10-23 23:36:31,186 [8268:MainThread] mopidy.commands
okt 23 23:36:31 Desktop-Ubuntu systemd[1]: Stopping Mopidy music server...
okt 23 23:27:38 Desktop-Ubuntu mopidy[8268]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 62, "result": 10}'
okt 23 23:27:38 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:38,671 [8268:HttpServer] mopidy.http.handlers
okt 23 23:27:38 Desktop-Ubuntu mopidy[8268]:   Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_next_tlid","params":{},"jsonrpc":"2.0","id":62}'
okt 23 23:27:38 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:38,670 [8268:HttpServer] mopidy.http.handlers
okt 23 23:27:37 Desktop-Ubuntu mopidy[8268]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 61, "result": [{"__model__": "TlTrack", "tlid": 10, "track": {"__model__": "Track", "uri": "file:///home/gerard/Music/test.mp3", "name": "Symphony No. 40 in G Minor, K. 550 - I. Molto Allegro", "artists": [{"__model__": "Artist", "name": "Czech National Symphony Orchestra"}], "album": {"__model__": "Album", "name": "Musopen Kickstarter Project", "artists": [{"__model__": "Artist", "name": "Czech National Symphony Orchestra"}]}, "composers": [{"__model__": "Artist", "name": "Wolfgang Amadeus Mozart"}], "genre": "Classical", "length": 358848}}, {"__model__": "TlTrack", "tlid": 11, "track": {"__model__": "Track", "uri": "file:///home/gerard/Music/test.mp3", "name": "Symphony No. 40 in G Minor, K. 550 - I. Molto Allegro", "artists": [{"__model__": "Artist", "name": "Czech National Symphony Orchestra"}], "album": {"__model__": "Album", "name": "Musopen Kickstarter Project", "artists": [{"__model__": "Artist", "name": "Czech National Symphony Orchestra"}]}, "composers": [{"__model__": "Artist", "name": "Wolfgang Amadeus Mozart"}], "genre": "Classical", "length": 358848}}, {"__model__": "TlTrack", "tlid": 9, "track": {"__model__": "Track", "uri": "file:///home/gerard/Music/test.mp3", "name": "Symphony No. 40 in G Minor, K. 550 - I. Molto Allegro", "artists": [{"__model__": "Artist", "name": "Czech National Symphony Orchestra"}], "album": {"__model__": "Album", "name": "Musopen Kickstarter Project", "artists": [{"__model__": "Artist", "name": "Czech National Symphony Orchestra"}]}, "composers": [{"__model__": "Artist", "name": "Wolfgang Amadeus Mozart"}], "genre": "Classical", "length": 358848}}, {"__model__": "TlTrack", "tlid": 8, "track": {"__model__": "Track", "uri": "file:///home/gerard/Music/test.mp3", "name": "Symphony No. 40 in G Minor, K. 550 - I. Molto Allegro", "artists": [{"__model__": "Artist", "name": "Czech National Symphony Orchestra"}], "album": {"__model__": "Album", "name": "Musopen Kickstarter Project", "artists": [{"__model__": "Artist", "name": "Czech National Symphony Orchestra"}]}, "composers": [{"__model__": "Artist", "name": "Wolfgang Amadeus Mozart"}], "genre": "Classical", "length": 358848}}, {"__model__": "TlTrack", "tlid": 7, "track": {"__model__": "Track", "uri": "file:///home/gerard/Music/test.mp3", "name": "Symphony No. 40 in G Minor, K. 550 - I. Molto Allegro", "artists": [{"__model__": "Artist", "name": "Czech National Symphony Orchestra"}], "album": {"__model__": "Album", "name": "Musopen Kickstarter Project", "artists": [{"__model__": "Artist", "name": "Czech National Symphony Orchestra"}]}, "composers": [{"__model__": "Artist", "name": "Wolfgang Amadeus Mozart"}], "genre": "Classical", "length": 358848}}, {"__model__": "TlTrack", "tlid": 6, "track": {"__model__": "Track", "uri": "file:///home/gerard/Music/test.mp3", "name": "Symphony No. 40 in G Minor, K. 550 - I. Molto Allegro", "artists": [{"__model__": "Artist", "name": "Czech National Symphony Orchestra"}], "album": {"__model__": "Album", "name": "Musopen Kickstarter Project", "artists": [{"__model__": "Artist", "name": "Czech National Symphony Orchestra"}]}, "composers": [{"__model__": "Artist", "name": "Wolfgang Amadeus Mozart"}], "genre": "Classical", "length": 358848}}, {"__model__": "TlTrack", "tlid": 5, "track": {"__model__": "Track", "uri": "file:///home/gerard/Music/test.mp3", "name": "Symphony No. 40 in G Minor, K. 550 - I. Molto Allegro", "artists": [{"__model__": "Artist", "name": "Czech National Symphony Orchestra"}], "album": {"__model__": "Album", "name": "Musopen Kickstarter Project", "artists": [{"__model__": "Artist", "name": "Czech National Symphony Orchestra"}]}, "composers": [{"__model__": "Artist", "name": "Wolfgang Amadeus Mozart"}], "genre": "Classical", "length": 358848}}, {"__model__": "TlTrack", "tlid": 4, "track": {"__model__": "Track", "uri": "file:///home/gerard/Music/test.mp3", "name": "Symphony No. 40 in G Minor, K. 550 - I. Molto Allegro", "artists": [{"__model__": "Artist", "name": "Czech National Symphony Orchestra"}], "album": {"__model__": "Album", "name": "Musopen Kickstarter Project", "artists": [{"__model__": "Artist", "name": "Czech National Symphony Orchestra"}]}, "composers": [{"__model__": "Artist", "name": "Wolfgang Amadeus Mozart"}], "genre": "Classical", "length": 358848}}, {"__model__": "TlTrack", "tlid": 3, "track": {"__model__": "Track", "uri": "file:///home/gerard/Music/test.mp3", "name": "Symphony No. 40 in G Minor, K. 550 - I. Molto Allegro", "artists": [{"__model__": "Artist", "name": "Czech National Symphony Orchestra"}], "album": {"__model__": "Album", "name": "Musopen Kickstarter Project", "artists": [{"__model__": "Artist", "name": "Czech National Symphony Orchestra"}]}, "composers": [{"__model__": "Artist", "name": "Wolfgang Amadeus Mozart"}], "genre": "Classical", "length": 358848}}, {"__model__": "TlTrack", "tlid": 2, "track": {"__model__": "Track", "uri": "file:///home/gerard/Music/test.mp3", "name": "Symphony No. 40 in G Minor, K. 550 - I. Molto Allegro", "artists": [{"__model__": "Artist", "name": "Czech National Symphony Orchestra"}], "album": {"__model__": "Album", "name": "Musopen Kickstarter Project", "artists": [{"__model__": "Artist", "name": "Czech National Symphony Orchestra"}]}, "composers": [{"__model__": "Artist", "name": "Wolfgang Amadeus Mozart"}], "genre": "Classical", "length": 358848}}, {"__model__": "TlTrack", "tlid": 1, "track": {"__model__": "Track", "uri": "file:///home/gerard/Music/test.mp3", "name": "Symphony No. 40 in G Minor, K. 550 - I. Molto Allegro", "artists": [{"__model__": "Artist", "name": "Czech National Symphony Orchestra"}], "album": {"__model__": "Album", "name": "Musopen Kickstarter Project", "artists": [{"__model__": "Artist", "name": "Czech National Symphony Orchestra"}]}, "composers": [{"__model__": "Artist", "name": "Wolfgang Amadeus Mozart"}], "genre": "Classical", "length": 358848}}]}'
okt 23 23:27:37 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:37,670 [8268:HttpServer] mopidy.http.handlers
okt 23 23:27:37 Desktop-Ubuntu mopidy[8268]:   Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_tl_tracks","params":{},"jsonrpc":"2.0","id":61}'
okt 23 23:27:37 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:37,669 [8268:HttpServer] mopidy.http.handlers
okt 23 23:27:37 Desktop-Ubuntu mopidy[8268]:   {'id': 166656045766311, 'jsonrpc': '2.0', 'method': 'add_queue_metadata', 'result': {'message': 'Added queue metadata'}, 'recipient': 'BFXBXSDGLGDC'}
okt 23 23:27:37 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:37,664 [8268:HttpServer] mopidy_iris.core
okt 23 23:27:37 Desktop-Ubuntu mopidy[8268]:   {'method': 'queue_metadata_changed', 'params': {'queue_metadata': {'tlid_10': {'tlid': 10, 'added_from': {'uri': 'm3u:Example%20Playlist.m3u8', 'name': 'Example Playlist', 'type': 'playlist', 'provider': 'mopidy', 'context': 'editable-playlist', 'can_edit': True}, 'added_by': 166637467060576}, 'tlid_9': {'tlid': 9, 'added_from': {'uri': 'm3u:Example%20Playlist.m3u8', 'name': 'Example Playlist', 'type': 'playlist', 'provider': 'mopidy', 'context': 'editable-playlist', 'can_edit': True}, 'added_by': 166637467060576}, 'tlid_8': {'tlid': 8, 'added_from': {'uri': 'm3u:Example%20Playlist.m3u8', 'name': 'Example Playlist', 'type': 'playlist', 'provider': 'mopidy', 'context': 'editable-playlist', 'can_edit': True}, 'added_by': 166637467060576}, 'tlid_7': {'tlid': 7, 'added_from': {'uri': 'm3u:Example%20Playlist.m3u8', 'name': 'Example Playlist', 'type': 'playlist', 'provider': 'mopidy', 'context': 'editable-playlist', 'can_edit': True}, 'added_by': 166637467060576}, 'tlid_6': {'tlid': 6, 'added_from': {'uri': 'm3u:Example%20Playlist.m3u8', 'name': 'Example Playlist', 'type': 'playlist', 'provider': 'mopidy', 'context': 'editable-playlist', 'can_edit': True}, 'added_by': 166637467060576}, 'tlid_5': {'tlid': 5, 'added_from': {'uri': 'm3u:Example%20Playlist.m3u8', 'name': 'Example Playlist', 'type': 'playlist', 'provider': 'mopidy', 'context': 'editable-playlist', 'can_edit': True}, 'added_by': 166637467060576}, 'tlid_4': {'tlid': 4, 'added_from': {'uri': 'm3u:Example%20Playlist.m3u8', 'name': 'Example Playlist', 'type': 'playlist', 'provider': 'mopidy', 'context': 'editable-playlist', 'can_edit': True}, 'added_by': 166637467060576}, 'tlid_3': {'tlid': 3, 'added_from': {'uri': 'm3u:Example%20Playlist.m3u8', 'name': 'Example Playlist', 'type': 'playlist', 'provider': 'mopidy', 'context': 'editable-playlist', 'can_edit': True}, 'added_by': 166637467060576}, 'tlid_2': {'tlid': 2, 'added_from': {'uri': 'm3u:Example%20Playlist.m3u8', 'name': 'Example Playlist', 'type': 'playlist', 'provider': 'mopidy', 'context': 'editable-playlist', 'can_edit': True}, 'added_by': 166637467060576}, 'tlid_1': {'tlid': 1, 'added_from': {'uri': 'm3u:Example%20Playlist.m3u8', 'name': 'Example Playlist', 'type': 'playlist', 'provider': 'mopidy', 'context': 'editable-playlist', 'can_edit': True}, 'added_by': 166637467060576}, 'tlid_11': {'tlid': 11, 'added_from': {'uri': 'm3u:Example%20Playlist.m3u8', 'name': 'Example Playlist', 'type': 'playlist'}, 'added_by': 166637467060576}}}}
okt 23 23:27:37 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:37,664 [8268:HttpServer] mopidy_iris.core
okt 23 23:27:37 Desktop-Ubuntu mopidy[8268]:   Iris websocket message received: {"jsonrpc":"2.0","id":166656045766311,"method":"add_queue_metadata","params":{"tlids":[11],"added_from":{"uri":"m3u:Example%20Playlist.m3u8","name":"Example Playlist","type":"playlist"},"added_by":166637467060576}}
okt 23 23:27:37 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:37,664 [8268:HttpServer] mopidy_iris.handlers
okt 23 23:27:37 Desktop-Ubuntu mopidy[8268]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 60, "result": [{"__model__": "TlTrack", "tlid": 11, "track": {"__model__": "Track", "uri": "file:///home/gerard/Music/test.mp3", "name": "Symphony No. 40 in G Minor, K. 550 - I. Molto Allegro", "artists": [{"__model__": "Artist", "name": "Czech National Symphony Orchestra"}], "album": {"__model__": "Album", "name": "Musopen Kickstarter Project", "artists": [{"__model__": "Artist", "name": "Czech National Symphony Orchestra"}]}, "composers": [{"__model__": "Artist", "name": "Wolfgang Amadeus Mozart"}], "genre": "Classical", "length": 358848}}]}'
okt 23 23:27:37 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:37,662 [8268:HttpServer] mopidy.http.handlers
okt 23 23:27:37 Desktop-Ubuntu mopidy[8268]:   Sending tracklist_changed to CoreListener: {}
okt 23 23:27:37 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:37,662 [8268:Core-6 (_actor_loop)] mopidy.listener
okt 23 23:27:37 Desktop-Ubuntu mopidy[8268]:   Triggering event: tracklist_changed()
okt 23 23:27:37 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:37,662 [8268:Core-6 (_actor_loop)] mopidy.core.tracklist
okt 23 23:27:37 Desktop-Ubuntu mopidy[8268]:   element pipeline10: GstMessageAsyncDone, running-time=(guint64)18446744073709551615;
okt 23 23:27:37 Desktop-Ubuntu mopidy[8268]: TRACE    2022-10-23 23:27:37,660 [8268:FileBackend-3 (_actor_loop)] mopidy.audio.scan
okt 23 23:27:37 Desktop-Ubuntu mopidy[8268]:   element fakesink10: GstMessageTag, taglist=(taglist)"taglist\,\ encoder\=\(string\)\"LAME\\\ 32bi...
okt 23 23:27:37 Desktop-Ubuntu mopidy[8268]: TRACE    2022-10-23 23:27:37,660 [8268:FileBackend-3 (_actor_loop)] mopidy.audio.scan
okt 23 23:27:37 Desktop-Ubuntu mopidy[8268]:   element fakesink10: GstMessageTag, taglist=(taglist)"taglist\,\ encoder\=\(string\)\"LAME\\\ 32bi...
okt 23 23:27:37 Desktop-Ubuntu mopidy[8268]: TRACE    2022-10-23 23:27:37,633 [8268:FileBackend-3 (_actor_loop)] mopidy.audio.scan
okt 23 23:27:37 Desktop-Ubuntu mopidy[8268]:   element mpegaudioparse10: GstMessageDurationChanged;
okt 23 23:27:37 Desktop-Ubuntu mopidy[8268]: TRACE    2022-10-23 23:27:37,607 [8268:FileBackend-3 (_actor_loop)] mopidy.audio.scan
okt 23 23:27:37 Desktop-Ubuntu mopidy[8268]:   element decodebin10: have-audio;
okt 23 23:27:37 Desktop-Ubuntu mopidy[8268]: TRACE    2022-10-23 23:27:37,606 [8268:FileBackend-3 (_actor_loop)] mopidy.audio.scan
okt 23 23:27:37 Desktop-Ubuntu mopidy[8268]:   Looking up file URI: file:///home/gerard/Music/test.mp3
okt 23 23:27:37 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:37,603 [8268:FileBackend-3 (_actor_loop)] mopidy.file.library
okt 23 23:27:37 Desktop-Ubuntu mopidy[8268]:   Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.add","params":{"uris":["jukebox:track:Jukebox/3.plate","file:///home/gerard/Music/test.mp3","ytmusic:track:7dVohOzvox8"],"at_position":1},"jsonrpc":"2.0","id":60}'
okt 23 23:27:37 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:37,603 [8268:HttpServer] mopidy.http.handlers
okt 23 23:27:37 Desktop-Ubuntu mopidy[8268]:   {'id': 166656045760194, 'jsonrpc': '2.0', 'method': 'broadcast', 'result': {'message': 'Broadcast to 1 connections'}, 'recipient': 'BFXBXSDGLGDC'}
okt 23 23:27:37 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:37,602 [8268:HttpServer] mopidy_iris.core
okt 23 23:27:37 Desktop-Ubuntu mopidy[8268]:   {'method': 'notification', 'params': {'notification': {'content': '166637467060576 is adding 3 URI(s)', 'icon': False}}, 'connection_id': 'BFXBXSDGLGDC'}
okt 23 23:27:37 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:37,602 [8268:HttpServer] mopidy_iris.core
okt 23 23:27:37 Desktop-Ubuntu mopidy[8268]:   Iris websocket message received: {"jsonrpc":"2.0","id":166656045760194,"method":"broadcast","params":{"method":"notification","params":{"notification":{"content":"166637467060576 is adding 3 URI(s)","icon":false}}}}
okt 23 23:27:37 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:37,602 [8268:HttpServer] mopidy_iris.handlers
okt 23 23:27:37 Desktop-Ubuntu mopidy[8268]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 59, "result": []}'
okt 23 23:27:37 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:37,489 [8268:HttpServer] mopidy.http.handlers
okt 23 23:27:37 Desktop-Ubuntu mopidy[8268]:   Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.add","params":{"uris":["jukebox:track:Jukebox/1.plate"],"at_position":0},"jsonrpc":"2.0","id":59}'
okt 23 23:27:37 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:37,489 [8268:HttpServer] mopidy.http.handlers
okt 23 23:27:35 Desktop-Ubuntu mopidy[8268]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 58, "result": 10}'
okt 23 23:27:35 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:35,125 [8268:HttpServer] mopidy.http.handlers
okt 23 23:27:35 Desktop-Ubuntu mopidy[8268]:   Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_next_tlid","params":{},"jsonrpc":"2.0","id":58}'
okt 23 23:27:35 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:35,125 [8268:HttpServer] mopidy.http.handlers
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]:   {'id': 166656045415163, 'jsonrpc': '2.0', 'method': 'broadcast', 'result': {'message': 'Broadcast to 1 connections'}, 'recipient': 'BFXBXSDGLGDC'}
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:34,155 [8268:HttpServer] mopidy_iris.core
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]:   {'method': 'notification', 'params': {'notification': {'content': '166637467060576 changed track'}}, 'connection_id': 'BFXBXSDGLGDC'}
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:34,155 [8268:HttpServer] mopidy_iris.core
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]:   Iris websocket message received: {"jsonrpc":"2.0","id":166656045415163,"method":"broadcast","params":{"method":"notification","params":{"notification":{"content":"166637467060576 changed track"}}}}
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:34,155 [8268:HttpServer] mopidy_iris.handlers
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]:   {'id': 166656045412171, 'jsonrpc': '2.0', 'method': 'add_queue_metadata', 'result': {'message': 'Added queue metadata'}, 'recipient': 'BFXBXSDGLGDC'}
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:34,155 [8268:HttpServer] mopidy_iris.core
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]:   {'method': 'queue_metadata_changed', 'params': {'queue_metadata': {'tlid_9': {'tlid': 9, 'added_from': {'uri': 'm3u:Example%20Playlist.m3u8', 'name': 'Example Playlist', 'type': 'playlist', 'provider': 'mopidy', 'context': 'editable-playlist', 'can_edit': True}, 'added_by': 166637467060576}, 'tlid_8': {'tlid': 8, 'added_from': {'uri': 'm3u:Example%20Playlist.m3u8', 'name': 'Example Playlist', 'type': 'playlist', 'provider': 'mopidy', 'context': 'editable-playlist', 'can_edit': True}, 'added_by': 166637467060576}, 'tlid_7': {'tlid': 7, 'added_from': {'uri': 'm3u:Example%20Playlist.m3u8', 'name': 'Example Playlist', 'type': 'playlist', 'provider': 'mopidy', 'context': 'editable-playlist', 'can_edit': True}, 'added_by': 166637467060576}, 'tlid_6': {'tlid': 6, 'added_from': {'uri': 'm3u:Example%20Playlist.m3u8', 'name': 'Example Playlist', 'type': 'playlist', 'provider': 'mopidy', 'context': 'editable-playlist', 'can_edit': True}, 'added_by': 166637467060576}, 'tlid_5': {'tlid': 5, 'added_from': {'uri': 'm3u:Example%20Playlist.m3u8', 'name': 'Example Playlist', 'type': 'playlist', 'provider': 'mopidy', 'context': 'editable-playlist', 'can_edit': True}, 'added_by': 166637467060576}, 'tlid_4': {'tlid': 4, 'added_from': {'uri': 'm3u:Example%20Playlist.m3u8', 'name': 'Example Playlist', 'type': 'playlist', 'provider': 'mopidy', 'context': 'editable-playlist', 'can_edit': True}, 'added_by': 166637467060576}, 'tlid_3': {'tlid': 3, 'added_from': {'uri': 'm3u:Example%20Playlist.m3u8', 'name': 'Example Playlist', 'type': 'playlist', 'provider': 'mopidy', 'context': 'editable-playlist', 'can_edit': True}, 'added_by': 166637467060576}, 'tlid_2': {'tlid': 2, 'added_from': {'uri': 'm3u:Example%20Playlist.m3u8', 'name': 'Example Playlist', 'type': 'playlist', 'provider': 'mopidy', 'context': 'editable-playlist', 'can_edit': True}, 'added_by': 166637467060576}, 'tlid_1': {'tlid': 1, 'added_from': {'uri': 'm3u:Example%20Playlist.m3u8', 'name': 'Example Playlist', 'type': 'playlist', 'provider': 'mopidy', 'context': 'editable-playlist', 'can_edit': True}, 'added_by': 166637467060576}, 'tlid_10': {'tlid': 10, 'added_from': {'uri': 'm3u:Example%20Playlist.m3u8', 'name': 'Example Playlist', 'type': 'playlist', 'provider': 'mopidy', 'context': 'editable-playlist', 'can_edit': True}, 'added_by': 166637467060576}}}}
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:34,155 [8268:HttpServer] mopidy_iris.core
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]:   Iris websocket message received: {"jsonrpc":"2.0","id":166656045412171,"method":"add_queue_metadata","params":{"tlids":[10],"added_from":{"uri":"m3u:Example%20Playlist.m3u8","name":"Example Playlist","type":"playlist","provider":"mopidy","context":"editable-playlist","can_edit":true},"added_by":166637467060576}}
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:34,154 [8268:HttpServer] mopidy_iris.handlers
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 57, "result": [{"__model__": "TlTrack", "tlid": 10, "track": {"__model__": "Track", "uri": "file:///home/gerard/Music/test.mp3", "name": "Symphony No. 40 in G Minor, K. 550 - I. Molto Allegro", "artists": [{"__model__": "Artist", "name": "Czech National Symphony Orchestra"}], "album": {"__model__": "Album", "name": "Musopen Kickstarter Project", "artists": [{"__model__": "Artist", "name": "Czech National Symphony Orchestra"}]}, "composers": [{"__model__": "Artist", "name": "Wolfgang Amadeus Mozart"}], "genre": "Classical", "length": 358848}}, {"__model__": "TlTrack", "tlid": 9, "track": {"__model__": "Track", "uri": "file:///home/gerard/Music/test.mp3", "name": "Symphony No. 40 in G Minor, K. 550 - I. Molto Allegro", "artists": [{"__model__": "Artist", "name": "Czech National Symphony Orchestra"}], "album": {"__model__": "Album", "name": "Musopen Kickstarter Project", "artists": [{"__model__": "Artist", "name": "Czech National Symphony Orchestra"}]}, "composers": [{"__model__": "Artist", "name": "Wolfgang Amadeus Mozart"}], "genre": "Classical", "length": 358848}}, {"__model__": "TlTrack", "tlid": 8, "track": {"__model__": "Track", "uri": "file:///home/gerard/Music/test.mp3", "name": "Symphony No. 40 in G Minor, K. 550 - I. Molto Allegro", "artists": [{"__model__": "Artist", "name": "Czech National Symphony Orchestra"}], "album": {"__model__": "Album", "name": "Musopen Kickstarter Project", "artists": [{"__model__": "Artist", "name": "Czech National Symphony Orchestra"}]}, "composers": [{"__model__": "Artist", "name": "Wolfgang Amadeus Mozart"}], "genre": "Classical", "length": 358848}}, {"__model__": "TlTrack", "tlid": 7, "track": {"__model__": "Track", "uri": "file:///home/gerard/Music/test.mp3", "name": "Symphony No. 40 in G Minor, K. 550 - I. Molto Allegro", "artists": [{"__model__": "Artist", "name": "Czech National Symphony Orchestra"}], "album": {"__model__": "Album", "name": "Musopen Kickstarter Project", "artists": [{"__model__": "Artist", "name": "Czech National Symphony Orchestra"}]}, "composers": [{"__model__": "Artist", "name": "Wolfgang Amadeus Mozart"}], "genre": "Classical", "length": 358848}}, {"__model__": "TlTrack", "tlid": 6, "track": {"__model__": "Track", "uri": "file:///home/gerard/Music/test.mp3", "name": "Symphony No. 40 in G Minor, K. 550 - I. Molto Allegro", "artists": [{"__model__": "Artist", "name": "Czech National Symphony Orchestra"}], "album": {"__model__": "Album", "name": "Musopen Kickstarter Project", "artists": [{"__model__": "Artist", "name": "Czech National Symphony Orchestra"}]}, "composers": [{"__model__": "Artist", "name": "Wolfgang Amadeus Mozart"}], "genre": "Classical", "length": 358848}}, {"__model__": "TlTrack", "tlid": 5, "track": {"__model__": "Track", "uri": "file:///home/gerard/Music/test.mp3", "name": "Symphony No. 40 in G Minor, K. 550 - I. Molto Allegro", "artists": [{"__model__": "Artist", "name": "Czech National Symphony Orchestra"}], "album": {"__model__": "Album", "name": "Musopen Kickstarter Project", "artists": [{"__model__": "Artist", "name": "Czech National Symphony Orchestra"}]}, "composers": [{"__model__": "Artist", "name": "Wolfgang Amadeus Mozart"}], "genre": "Classical", "length": 358848}}, {"__model__": "TlTrack", "tlid": 4, "track": {"__model__": "Track", "uri": "file:///home/gerard/Music/test.mp3", "name": "Symphony No. 40 in G Minor, K. 550 - I. Molto Allegro", "artists": [{"__model__": "Artist", "name": "Czech National Symphony Orchestra"}], "album": {"__model__": "Album", "name": "Musopen Kickstarter Project", "artists": [{"__model__": "Artist", "name": "Czech National Symphony Orchestra"}]}, "composers": [{"__model__": "Artist", "name": "Wolfgang Amadeus Mozart"}], "genre": "Classical", "length": 358848}}, {"__model__": "TlTrack", "tlid": 3, "track": {"__model__": "Track", "uri": "file:///home/gerard/Music/test.mp3", "name": "Symphony No. 40 in G Minor, K. 550 - I. Molto Allegro", "artists": [{"__model__": "Artist", "name": "Czech National Symphony Orchestra"}], "album": {"__model__": "Album", "name": "Musopen Kickstarter Project", "artists": [{"__model__": "Artist", "name": "Czech National Symphony Orchestra"}]}, "composers": [{"__model__": "Artist", "name": "Wolfgang Amadeus Mozart"}], "genre": "Classical", "length": 358848}}, {"__model__": "TlTrack", "tlid": 2, "track": {"__model__": "Track", "uri": "file:///home/gerard/Music/test.mp3", "name": "Symphony No. 40 in G Minor, K. 550 - I. Molto Allegro", "artists": [{"__model__": "Artist", "name": "Czech National Symphony Orchestra"}], "album": {"__model__": "Album", "name": "Musopen Kickstarter Project", "artists": [{"__model__": "Artist", "name": "Czech National Symphony Orchestra"}]}, "composers": [{"__model__": "Artist", "name": "Wolfgang Amadeus Mozart"}], "genre": "Classical", "length": 358848}}, {"__model__": "TlTrack", "tlid": 1, "track": {"__model__": "Track", "uri": "file:///home/gerard/Music/test.mp3", "name": "Symphony No. 40 in G Minor, K. 550 - I. Molto Allegro", "artists": [{"__model__": "Artist", "name": "Czech National Symphony Orchestra"}], "album": {"__model__": "Album", "name": "Musopen Kickstarter Project", "artists": [{"__model__": "Artist", "name": "Czech National Symphony Orchestra"}]}, "composers": [{"__model__": "Artist", "name": "Wolfgang Amadeus Mozart"}], "genre": "Classical", "length": 358848}}]}'
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:34,153 [8268:HttpServer] mopidy.http.handlers
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]:   Sending volume_changed to CoreListener: {'volume': 100}
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:34,152 [8268:Core-6 (_actor_loop)] mopidy.listener
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]:   Sending volume_changed to CoreListener: {'volume': 100}
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:34,152 [8268:Core-6 (_actor_loop)] mopidy.listener
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]:   Sending volume_changed to CoreListener: {'volume': 100}
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:34,152 [8268:Core-6 (_actor_loop)] mopidy.listener
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]:   Sending volume_changed to CoreListener: {'volume': 100}
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:34,151 [8268:Core-6 (_actor_loop)] mopidy.listener
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]:   Sending volume_changed to CoreListener: {'volume': 100}
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:34,151 [8268:Core-6 (_actor_loop)] mopidy.listener
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]:   Sending volume_changed to CoreListener: {'volume': 100}
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:34,150 [8268:Core-6 (_actor_loop)] mopidy.listener
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]:   Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_tl_tracks","params":{},"jsonrpc":"2.0","id":57}'
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:34,150 [8268:HttpServer] mopidy.http.handlers
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]:   Sending volume_changed to CoreListener: {'volume': 100}
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:34,150 [8268:Core-6 (_actor_loop)] mopidy.listener
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 56, "result": null}'
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:34,150 [8268:HttpServer] mopidy.http.handlers
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]:   Sending volume_changed to CoreListener: {'volume': 100}
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:34,149 [8268:Core-6 (_actor_loop)] mopidy.listener
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]:   Sending volume_changed to CoreListener: {'volume': 100}
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:34,149 [8268:Core-6 (_actor_loop)] mopidy.listener
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]:   Sending volume_changed to CoreListener: {'volume': 100}
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:34,149 [8268:Core-6 (_actor_loop)] mopidy.listener
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]:   Track is not playable: file:///home/gerard/Music/test.mp3
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]: WARNING  2022-10-23 23:27:34,149 [8268:Core-6 (_actor_loop)] mopidy.core.tracklist
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]:   Changing state to GST_STATE_NULL: result=GST_STATE_CHANGE_SUCCESS
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:34,148 [8268:MainThread] mopidy.audio.gst
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]:   Setting GStreamer state to GST_STATE_PLAYING failed
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]: WARNING  2022-10-23 23:27:34,148 [8268:Audio-2 (_actor_loop)] mopidy.audio.actor
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]:   Got ERROR bus message: error=GLib.Error('Failed to connect: Connection refused', 'gst-resource-error-quark', 1) debug='../ext/pulse/pulsesink.c(615): gst_pulseringbuffer_open_device (): /GstBin:audio-sink/mopidy+audio+actor+_Outputs:mopidy+audio+actor+_outputs0/GstBin:bin0/GstPulseSink:pulsesink0'
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:34,148 [8268:MainThread] mopidy.audio.gst
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]:   Changing state to GST_STATE_PLAYING: result=GST_STATE_CHANGE_FAILURE
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:34,148 [8268:Audio-2 (_actor_loop)] mopidy.audio.gst
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]:   GStreamer error: Failed to connect: Connection refused
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]: ERROR    2022-10-23 23:27:34,148 [8268:MainThread] mopidy.audio.gst
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]:   Sending volume_changed to MixerListener: {'volume': 100}
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:34,147 [8268:SoftwareMixer-1 (_actor_loop)] mopidy.listener
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]:   Mixer event: volume_changed(volume=100)
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:34,147 [8268:SoftwareMixer-1 (_actor_loop)] mopidy.mixer
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]:   Flags: 2
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:34,147 [8268:Audio-2 (_actor_loop)] mopidy.audio.actor
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]:   Got STATE_CHANGED bus message: old=GST_STATE_NULL new=GST_STATE_READY pending=GST_STATE_VOID_PENDING
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:34,147 [8268:MainThread] mopidy.audio.gst
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]:   Changing state to GST_STATE_READY: result=GST_STATE_CHANGE_SUCCESS
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:34,146 [8268:Audio-2 (_actor_loop)] mopidy.audio.gst
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]:   Track is not playable: file:///home/gerard/Music/test.mp3
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]: WARNING  2022-10-23 23:27:34,146 [8268:Core-6 (_actor_loop)] mopidy.core.tracklist
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]:   Changing state to GST_STATE_NULL: result=GST_STATE_CHANGE_SUCCESS
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:34,146 [8268:MainThread] mopidy.audio.gst
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]:   Setting GStreamer state to GST_STATE_PLAYING failed
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]: WARNING  2022-10-23 23:27:34,146 [8268:Audio-2 (_actor_loop)] mopidy.audio.actor
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]:   Changing state to GST_STATE_PLAYING: result=GST_STATE_CHANGE_FAILURE
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:34,146 [8268:Audio-2 (_actor_loop)] mopidy.audio.gst
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]:   Got ERROR bus message: error=GLib.Error('Failed to connect: Connection refused', 'gst-resource-error-quark', 1) debug='../ext/pulse/pulsesink.c(615): gst_pulseringbuffer_open_device (): /GstBin:audio-sink/mopidy+audio+actor+_Outputs:mopidy+audio+actor+_outputs0/GstBin:bin0/GstPulseSink:pulsesink0'
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:34,145 [8268:MainThread] mopidy.audio.gst
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]:   GStreamer error: Failed to connect: Connection refused
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]: ERROR    2022-10-23 23:27:34,145 [8268:MainThread] mopidy.audio.gst
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]:   Sending volume_changed to MixerListener: {'volume': 100}
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:34,145 [8268:SoftwareMixer-1 (_actor_loop)] mopidy.listener
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]:   Mixer event: volume_changed(volume=100)
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:34,144 [8268:SoftwareMixer-1 (_actor_loop)] mopidy.mixer
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]:   Flags: 2
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:34,144 [8268:Audio-2 (_actor_loop)] mopidy.audio.actor
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]:   Got STATE_CHANGED bus message: old=GST_STATE_NULL new=GST_STATE_READY pending=GST_STATE_VOID_PENDING
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:34,144 [8268:MainThread] mopidy.audio.gst
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]:   Changing state to GST_STATE_READY: result=GST_STATE_CHANGE_SUCCESS
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:34,144 [8268:Audio-2 (_actor_loop)] mopidy.audio.gst
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]:   Changing state to GST_STATE_NULL: result=GST_STATE_CHANGE_SUCCESS
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:34,144 [8268:MainThread] mopidy.audio.gst
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]:   Track is not playable: file:///home/gerard/Music/test.mp3
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]: WARNING  2022-10-23 23:27:34,143 [8268:Core-6 (_actor_loop)] mopidy.core.tracklist
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]:   Got ERROR bus message: error=GLib.Error('Failed to connect: Connection refused', 'gst-resource-error-quark', 1) debug='../ext/pulse/pulsesink.c(615): gst_pulseringbuffer_open_device (): /GstBin:audio-sink/mopidy+audio+actor+_Outputs:mopidy+audio+actor+_outputs0/GstBin:bin0/GstPulseSink:pulsesink0'
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:34,143 [8268:MainThread] mopidy.audio.gst
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]:   Setting GStreamer state to GST_STATE_PLAYING failed
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]: WARNING  2022-10-23 23:27:34,143 [8268:Audio-2 (_actor_loop)] mopidy.audio.actor
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]:   GStreamer error: Failed to connect: Connection refused
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]: ERROR    2022-10-23 23:27:34,143 [8268:MainThread] mopidy.audio.gst
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]:   Changing state to GST_STATE_PLAYING: result=GST_STATE_CHANGE_FAILURE
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:34,143 [8268:Audio-2 (_actor_loop)] mopidy.audio.gst
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]:   Sending volume_changed to MixerListener: {'volume': 100}
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:34,142 [8268:SoftwareMixer-1 (_actor_loop)] mopidy.listener
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]:   Mixer event: volume_changed(volume=100)
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:34,142 [8268:SoftwareMixer-1 (_actor_loop)] mopidy.mixer
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]:   Flags: 2
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:34,142 [8268:Audio-2 (_actor_loop)] mopidy.audio.actor
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]:   Got STATE_CHANGED bus message: old=GST_STATE_NULL new=GST_STATE_READY pending=GST_STATE_VOID_PENDING
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:34,142 [8268:MainThread] mopidy.audio.gst
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]:   Changing state to GST_STATE_READY: result=GST_STATE_CHANGE_SUCCESS
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:34,141 [8268:Audio-2 (_actor_loop)] mopidy.audio.gst
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]:   Track is not playable: file:///home/gerard/Music/test.mp3
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]: WARNING  2022-10-23 23:27:34,141 [8268:Core-6 (_actor_loop)] mopidy.core.tracklist
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]:   Changing state to GST_STATE_NULL: result=GST_STATE_CHANGE_SUCCESS
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:34,141 [8268:MainThread] mopidy.audio.gst
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]:   Setting GStreamer state to GST_STATE_PLAYING failed
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]: WARNING  2022-10-23 23:27:34,140 [8268:Audio-2 (_actor_loop)] mopidy.audio.actor
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]:   Got ERROR bus message: error=GLib.Error('Failed to connect: Connection refused', 'gst-resource-error-quark', 1) debug='../ext/pulse/pulsesink.c(615): gst_pulseringbuffer_open_device (): /GstBin:audio-sink/mopidy+audio+actor+_Outputs:mopidy+audio+actor+_outputs0/GstBin:bin0/GstPulseSink:pulsesink0'
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:34,140 [8268:MainThread] mopidy.audio.gst
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]:   Changing state to GST_STATE_PLAYING: result=GST_STATE_CHANGE_FAILURE
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:34,140 [8268:Audio-2 (_actor_loop)] mopidy.audio.gst
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]:   GStreamer error: Failed to connect: Connection refused
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]: ERROR    2022-10-23 23:27:34,140 [8268:MainThread] mopidy.audio.gst
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]:   Sending volume_changed to MixerListener: {'volume': 100}
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:34,139 [8268:SoftwareMixer-1 (_actor_loop)] mopidy.listener
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]:   Mixer event: volume_changed(volume=100)
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:34,139 [8268:SoftwareMixer-1 (_actor_loop)] mopidy.mixer
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]:   Flags: 2
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:34,139 [8268:Audio-2 (_actor_loop)] mopidy.audio.actor
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]:   Got STATE_CHANGED bus message: old=GST_STATE_NULL new=GST_STATE_READY pending=GST_STATE_VOID_PENDING
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:34,139 [8268:MainThread] mopidy.audio.gst
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]:   Changing state to GST_STATE_READY: result=GST_STATE_CHANGE_SUCCESS
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:34,139 [8268:Audio-2 (_actor_loop)] mopidy.audio.gst
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]:   Changing state to GST_STATE_NULL: result=GST_STATE_CHANGE_SUCCESS
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:34,138 [8268:MainThread] mopidy.audio.gst
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]:   Track is not playable: file:///home/gerard/Music/test.mp3
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]: WARNING  2022-10-23 23:27:34,138 [8268:Core-6 (_actor_loop)] mopidy.core.tracklist
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]:   Got ERROR bus message: error=GLib.Error('Failed to connect: Connection refused', 'gst-resource-error-quark', 1) debug='../ext/pulse/pulsesink.c(615): gst_pulseringbuffer_open_device (): /GstBin:audio-sink/mopidy+audio+actor+_Outputs:mopidy+audio+actor+_outputs0/GstBin:bin0/GstPulseSink:pulsesink0'
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:34,138 [8268:MainThread] mopidy.audio.gst
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]:   GStreamer error: Failed to connect: Connection refused
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]: ERROR    2022-10-23 23:27:34,138 [8268:MainThread] mopidy.audio.gst
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]:   Setting GStreamer state to GST_STATE_PLAYING failed
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]: WARNING  2022-10-23 23:27:34,138 [8268:Audio-2 (_actor_loop)] mopidy.audio.actor
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]:   Changing state to GST_STATE_PLAYING: result=GST_STATE_CHANGE_FAILURE
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:34,138 [8268:Audio-2 (_actor_loop)] mopidy.audio.gst
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]:   Sending volume_changed to MixerListener: {'volume': 100}
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:34,137 [8268:SoftwareMixer-1 (_actor_loop)] mopidy.listener
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]:   Mixer event: volume_changed(volume=100)
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:34,136 [8268:SoftwareMixer-1 (_actor_loop)] mopidy.mixer
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]:   Flags: 2
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:34,136 [8268:Audio-2 (_actor_loop)] mopidy.audio.actor
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]:   Got STATE_CHANGED bus message: old=GST_STATE_NULL new=GST_STATE_READY pending=GST_STATE_VOID_PENDING
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:34,136 [8268:MainThread] mopidy.audio.gst
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]:   Changing state to GST_STATE_READY: result=GST_STATE_CHANGE_SUCCESS
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:34,136 [8268:Audio-2 (_actor_loop)] mopidy.audio.gst
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]:   Track is not playable: file:///home/gerard/Music/test.mp3
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]: WARNING  2022-10-23 23:27:34,135 [8268:Core-6 (_actor_loop)] mopidy.core.tracklist
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]:   Changing state to GST_STATE_NULL: result=GST_STATE_CHANGE_SUCCESS
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:34,135 [8268:MainThread] mopidy.audio.gst
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]:   Setting GStreamer state to GST_STATE_PLAYING failed
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]: WARNING  2022-10-23 23:27:34,135 [8268:Audio-2 (_actor_loop)] mopidy.audio.actor
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]:   Got ERROR bus message: error=GLib.Error('Failed to connect: Connection refused', 'gst-resource-error-quark', 1) debug='../ext/pulse/pulsesink.c(615): gst_pulseringbuffer_open_device (): /GstBin:audio-sink/mopidy+audio+actor+_Outputs:mopidy+audio+actor+_outputs0/GstBin:bin0/GstPulseSink:pulsesink0'
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:34,135 [8268:MainThread] mopidy.audio.gst
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]:   Changing state to GST_STATE_PLAYING: result=GST_STATE_CHANGE_FAILURE
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:34,135 [8268:Audio-2 (_actor_loop)] mopidy.audio.gst
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]:   GStreamer error: Failed to connect: Connection refused
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]: ERROR    2022-10-23 23:27:34,135 [8268:MainThread] mopidy.audio.gst
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]:   Sending volume_changed to MixerListener: {'volume': 100}
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:34,134 [8268:SoftwareMixer-1 (_actor_loop)] mopidy.listener
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]:   Mixer event: volume_changed(volume=100)
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:34,134 [8268:SoftwareMixer-1 (_actor_loop)] mopidy.mixer
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]:   Flags: 2
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:34,133 [8268:Audio-2 (_actor_loop)] mopidy.audio.actor
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]:   Got STATE_CHANGED bus message: old=GST_STATE_NULL new=GST_STATE_READY pending=GST_STATE_VOID_PENDING
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:34,133 [8268:MainThread] mopidy.audio.gst
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]:   Changing state to GST_STATE_READY: result=GST_STATE_CHANGE_SUCCESS
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:34,133 [8268:Audio-2 (_actor_loop)] mopidy.audio.gst
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]:   Track is not playable: file:///home/gerard/Music/test.mp3
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]: WARNING  2022-10-23 23:27:34,133 [8268:Core-6 (_actor_loop)] mopidy.core.tracklist
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]:   Changing state to GST_STATE_NULL: result=GST_STATE_CHANGE_SUCCESS
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:34,132 [8268:MainThread] mopidy.audio.gst
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]:   Setting GStreamer state to GST_STATE_PLAYING failed
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]: WARNING  2022-10-23 23:27:34,132 [8268:Audio-2 (_actor_loop)] mopidy.audio.actor
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]:   Got ERROR bus message: error=GLib.Error('Failed to connect: Connection refused', 'gst-resource-error-quark', 1) debug='../ext/pulse/pulsesink.c(615): gst_pulseringbuffer_open_device (): /GstBin:audio-sink/mopidy+audio+actor+_Outputs:mopidy+audio+actor+_outputs0/GstBin:bin0/GstPulseSink:pulsesink0'
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:34,132 [8268:MainThread] mopidy.audio.gst
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]:   Changing state to GST_STATE_PLAYING: result=GST_STATE_CHANGE_FAILURE
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:34,132 [8268:Audio-2 (_actor_loop)] mopidy.audio.gst
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]:   GStreamer error: Failed to connect: Connection refused
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]: ERROR    2022-10-23 23:27:34,132 [8268:MainThread] mopidy.audio.gst
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]:   Sending volume_changed to MixerListener: {'volume': 100}
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:34,131 [8268:SoftwareMixer-1 (_actor_loop)] mopidy.listener
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]:   Mixer event: volume_changed(volume=100)
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:34,131 [8268:SoftwareMixer-1 (_actor_loop)] mopidy.mixer
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]:   Flags: 2
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:34,131 [8268:Audio-2 (_actor_loop)] mopidy.audio.actor
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]:   Got STATE_CHANGED bus message: old=GST_STATE_NULL new=GST_STATE_READY pending=GST_STATE_VOID_PENDING
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:34,131 [8268:MainThread] mopidy.audio.gst
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]:   Changing state to GST_STATE_READY: result=GST_STATE_CHANGE_SUCCESS
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:34,130 [8268:Audio-2 (_actor_loop)] mopidy.audio.gst
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]:   Track is not playable: file:///home/gerard/Music/test.mp3
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]: WARNING  2022-10-23 23:27:34,130 [8268:Core-6 (_actor_loop)] mopidy.core.tracklist
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]:   Setting GStreamer state to GST_STATE_PLAYING failed
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]: WARNING  2022-10-23 23:27:34,130 [8268:Audio-2 (_actor_loop)] mopidy.audio.actor
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]:   Changing state to GST_STATE_NULL: result=GST_STATE_CHANGE_SUCCESS
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:34,130 [8268:MainThread] mopidy.audio.gst
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]:   Got ERROR bus message: error=GLib.Error('Failed to connect: Connection refused', 'gst-resource-error-quark', 1) debug='../ext/pulse/pulsesink.c(615): gst_pulseringbuffer_open_device (): /GstBin:audio-sink/mopidy+audio+actor+_Outputs:mopidy+audio+actor+_outputs0/GstBin:bin0/GstPulseSink:pulsesink0'
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:34,129 [8268:MainThread] mopidy.audio.gst
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]:   Changing state to GST_STATE_PLAYING: result=GST_STATE_CHANGE_FAILURE
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:34,129 [8268:Audio-2 (_actor_loop)] mopidy.audio.gst
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]:   GStreamer error: Failed to connect: Connection refused
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]: ERROR    2022-10-23 23:27:34,129 [8268:MainThread] mopidy.audio.gst
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]:   Sending volume_changed to MixerListener: {'volume': 100}
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:34,129 [8268:SoftwareMixer-1 (_actor_loop)] mopidy.listener
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]:   Mixer event: volume_changed(volume=100)
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:34,128 [8268:SoftwareMixer-1 (_actor_loop)] mopidy.mixer
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]:   Flags: 2
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:34,128 [8268:Audio-2 (_actor_loop)] mopidy.audio.actor
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]:   Got STATE_CHANGED bus message: old=GST_STATE_NULL new=GST_STATE_READY pending=GST_STATE_VOID_PENDING
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:34,128 [8268:MainThread] mopidy.audio.gst
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]:   Changing state to GST_STATE_READY: result=GST_STATE_CHANGE_SUCCESS
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:34,128 [8268:Audio-2 (_actor_loop)] mopidy.audio.gst
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]:   Track is not playable: file:///home/gerard/Music/test.mp3
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]: WARNING  2022-10-23 23:27:34,127 [8268:Core-6 (_actor_loop)] mopidy.core.tracklist
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]:   Changing state to GST_STATE_NULL: result=GST_STATE_CHANGE_SUCCESS
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:34,127 [8268:MainThread] mopidy.audio.gst
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]:   Setting GStreamer state to GST_STATE_PLAYING failed
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]: WARNING  2022-10-23 23:27:34,127 [8268:Audio-2 (_actor_loop)] mopidy.audio.actor
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]:   Got ERROR bus message: error=GLib.Error('Failed to connect: Connection refused', 'gst-resource-error-quark', 1) debug='../ext/pulse/pulsesink.c(615): gst_pulseringbuffer_open_device (): /GstBin:audio-sink/mopidy+audio+actor+_Outputs:mopidy+audio+actor+_outputs0/GstBin:bin0/GstPulseSink:pulsesink0'
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:34,127 [8268:MainThread] mopidy.audio.gst
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]:   Changing state to GST_STATE_PLAYING: result=GST_STATE_CHANGE_FAILURE
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:34,127 [8268:Audio-2 (_actor_loop)] mopidy.audio.gst
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]:   GStreamer error: Failed to connect: Connection refused
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]: ERROR    2022-10-23 23:27:34,127 [8268:MainThread] mopidy.audio.gst
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]:   Sending volume_changed to MixerListener: {'volume': 100}
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:34,126 [8268:SoftwareMixer-1 (_actor_loop)] mopidy.listener
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]:   Mixer event: volume_changed(volume=100)
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:34,126 [8268:SoftwareMixer-1 (_actor_loop)] mopidy.mixer
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]:   Flags: 2
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:34,126 [8268:Audio-2 (_actor_loop)] mopidy.audio.actor
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]:   Got STATE_CHANGED bus message: old=GST_STATE_NULL new=GST_STATE_READY pending=GST_STATE_VOID_PENDING
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:34,125 [8268:MainThread] mopidy.audio.gst
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]:   Changing state to GST_STATE_READY: result=GST_STATE_CHANGE_SUCCESS
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:34,125 [8268:Audio-2 (_actor_loop)] mopidy.audio.gst
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]:   Track is not playable: file:///home/gerard/Music/test.mp3
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]: WARNING  2022-10-23 23:27:34,125 [8268:Core-6 (_actor_loop)] mopidy.core.tracklist
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]:   Changing state to GST_STATE_NULL: result=GST_STATE_CHANGE_SUCCESS
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:34,125 [8268:MainThread] mopidy.audio.gst
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]:   Setting GStreamer state to GST_STATE_PLAYING failed
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]: WARNING  2022-10-23 23:27:34,124 [8268:Audio-2 (_actor_loop)] mopidy.audio.actor
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]:   Got ERROR bus message: error=GLib.Error('Failed to connect: Connection refused', 'gst-resource-error-quark', 1) debug='../ext/pulse/pulsesink.c(615): gst_pulseringbuffer_open_device (): /GstBin:audio-sink/mopidy+audio+actor+_Outputs:mopidy+audio+actor+_outputs0/GstBin:bin0/GstPulseSink:pulsesink0'
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:34,124 [8268:MainThread] mopidy.audio.gst
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]:   Changing state to GST_STATE_PLAYING: result=GST_STATE_CHANGE_FAILURE
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:34,124 [8268:Audio-2 (_actor_loop)] mopidy.audio.gst
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]:   GStreamer error: Failed to connect: Connection refused
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]: ERROR    2022-10-23 23:27:34,124 [8268:MainThread] mopidy.audio.gst
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]:   Sending volume_changed to MixerListener: {'volume': 100}
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:34,123 [8268:SoftwareMixer-1 (_actor_loop)] mopidy.listener
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]:   Mixer event: volume_changed(volume=100)
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:34,123 [8268:SoftwareMixer-1 (_actor_loop)] mopidy.mixer
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]:   Got STATE_CHANGED bus message: old=GST_STATE_NULL new=GST_STATE_READY pending=GST_STATE_VOID_PENDING
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:34,123 [8268:MainThread] mopidy.audio.gst
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]:   Flags: 2
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:34,122 [8268:Audio-2 (_actor_loop)] mopidy.audio.actor
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]:   Changing state to GST_STATE_READY: result=GST_STATE_CHANGE_SUCCESS
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:34,122 [8268:Audio-2 (_actor_loop)] mopidy.audio.gst
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]:   Received WebSocket message from 127.0.0.1: '{"method":"core.playback.play","params":{"tlid":10},"jsonrpc":"2.0","id":56}'
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:34,121 [8268:HttpServer] mopidy.http.handlers
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 55, "result": [{"__model__": "TlTrack", "tlid": 10, "track": {"__model__": "Track", "uri": "file:///home/gerard/Music/test.mp3", "name": "Symphony No. 40 in G Minor, K. 550 - I. Molto Allegro", "artists": [{"__model__": "Artist", "name": "Czech National Symphony Orchestra"}], "album": {"__model__": "Album", "name": "Musopen Kickstarter Project", "artists": [{"__model__": "Artist", "name": "Czech National Symphony Orchestra"}]}, "composers": [{"__model__": "Artist", "name": "Wolfgang Amadeus Mozart"}], "genre": "Classical", "length": 358848}}]}'
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:34,118 [8268:HttpServer] mopidy.http.handlers
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]:   Sending tracklist_changed to CoreListener: {}
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:34,117 [8268:Core-6 (_actor_loop)] mopidy.listener
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]:   Triggering event: tracklist_changed()
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:34,117 [8268:Core-6 (_actor_loop)] mopidy.core.tracklist
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]:   element pipeline9: GstMessageAsyncDone, running-time=(guint64)18446744073709551615;
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]: TRACE    2022-10-23 23:27:34,115 [8268:FileBackend-3 (_actor_loop)] mopidy.audio.scan
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]:   element fakesink9: GstMessageTag, taglist=(taglist)"taglist\,\ encoder\=\(string\)\"LAME\\\ 32bi...
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]: TRACE    2022-10-23 23:27:34,115 [8268:FileBackend-3 (_actor_loop)] mopidy.audio.scan
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]:   element fakesink9: GstMessageTag, taglist=(taglist)"taglist\,\ encoder\=\(string\)\"LAME\\\ 32bi...
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]: TRACE    2022-10-23 23:27:34,089 [8268:FileBackend-3 (_actor_loop)] mopidy.audio.scan
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]:   element mpegaudioparse9: GstMessageDurationChanged;
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]: TRACE    2022-10-23 23:27:34,063 [8268:FileBackend-3 (_actor_loop)] mopidy.audio.scan
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]:   element decodebin9: have-audio;
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]: TRACE    2022-10-23 23:27:34,062 [8268:FileBackend-3 (_actor_loop)] mopidy.audio.scan
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]:   Looking up file URI: file:///home/gerard/Music/test.mp3
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:34,060 [8268:FileBackend-3 (_actor_loop)] mopidy.file.library
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]:   Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.add","params":{"uris":["file:///home/gerard/Music/test.mp3"],"at_position":0},"jsonrpc":"2.0","id":55}'
okt 23 23:27:34 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:34,059 [8268:HttpServer] mopidy.http.handlers
okt 23 23:27:32 Desktop-Ubuntu mopidy[8268]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 54, "result": 9}'
okt 23 23:27:32 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:32,702 [8268:HttpServer] mopidy.http.handlers
okt 23 23:27:32 Desktop-Ubuntu mopidy[8268]:   Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_next_tlid","params":{},"jsonrpc":"2.0","id":54}'
okt 23 23:27:32 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:32,701 [8268:HttpServer] mopidy.http.handlers
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]:   {'id': 166656045172942, 'jsonrpc': '2.0', 'method': 'broadcast', 'result': {'message': 'Broadcast to 1 connections'}, 'recipient': 'BFXBXSDGLGDC'}
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:31,732 [8268:HttpServer] mopidy_iris.core
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]:   {'method': 'notification', 'params': {'notification': {'content': '166637467060576 changed track'}}, 'connection_id': 'BFXBXSDGLGDC'}
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:31,732 [8268:HttpServer] mopidy_iris.core
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]:   Iris websocket message received: {"jsonrpc":"2.0","id":166656045172942,"method":"broadcast","params":{"method":"notification","params":{"notification":{"content":"166637467060576 changed track"}}}}
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:31,732 [8268:HttpServer] mopidy_iris.handlers
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]:   {'id': 16665604516980, 'jsonrpc': '2.0', 'method': 'add_queue_metadata', 'result': {'message': 'Added queue metadata'}, 'recipient': 'BFXBXSDGLGDC'}
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:31,732 [8268:HttpServer] mopidy_iris.core
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]:   {'method': 'queue_metadata_changed', 'params': {'queue_metadata': {'tlid_8': {'tlid': 8, 'added_from': {'uri': 'm3u:Example%20Playlist.m3u8', 'name': 'Example Playlist', 'type': 'playlist', 'provider': 'mopidy', 'context': 'editable-playlist', 'can_edit': True}, 'added_by': 166637467060576}, 'tlid_7': {'tlid': 7, 'added_from': {'uri': 'm3u:Example%20Playlist.m3u8', 'name': 'Example Playlist', 'type': 'playlist', 'provider': 'mopidy', 'context': 'editable-playlist', 'can_edit': True}, 'added_by': 166637467060576}, 'tlid_6': {'tlid': 6, 'added_from': {'uri': 'm3u:Example%20Playlist.m3u8', 'name': 'Example Playlist', 'type': 'playlist', 'provider': 'mopidy', 'context': 'editable-playlist', 'can_edit': True}, 'added_by': 166637467060576}, 'tlid_5': {'tlid': 5, 'added_from': {'uri': 'm3u:Example%20Playlist.m3u8', 'name': 'Example Playlist', 'type': 'playlist', 'provider': 'mopidy', 'context': 'editable-playlist', 'can_edit': True}, 'added_by': 166637467060576}, 'tlid_4': {'tlid': 4, 'added_from': {'uri': 'm3u:Example%20Playlist.m3u8', 'name': 'Example Playlist', 'type': 'playlist', 'provider': 'mopidy', 'context': 'editable-playlist', 'can_edit': True}, 'added_by': 166637467060576}, 'tlid_3': {'tlid': 3, 'added_from': {'uri': 'm3u:Example%20Playlist.m3u8', 'name': 'Example Playlist', 'type': 'playlist', 'provider': 'mopidy', 'context': 'editable-playlist', 'can_edit': True}, 'added_by': 166637467060576}, 'tlid_2': {'tlid': 2, 'added_from': {'uri': 'm3u:Example%20Playlist.m3u8', 'name': 'Example Playlist', 'type': 'playlist', 'provider': 'mopidy', 'context': 'editable-playlist', 'can_edit': True}, 'added_by': 166637467060576}, 'tlid_1': {'tlid': 1, 'added_from': {'uri': 'm3u:Example%20Playlist.m3u8', 'name': 'Example Playlist', 'type': 'playlist', 'provider': 'mopidy', 'context': 'editable-playlist', 'can_edit': True}, 'added_by': 166637467060576}, 'tlid_9': {'tlid': 9, 'added_from': {'uri': 'm3u:Example%20Playlist.m3u8', 'name': 'Example Playlist', 'type': 'playlist', 'provider': 'mopidy', 'context': 'editable-playlist', 'can_edit': True}, 'added_by': 166637467060576}}}}
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:31,732 [8268:HttpServer] mopidy_iris.core
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]:   Iris websocket message received: {"jsonrpc":"2.0","id":16665604516980,"method":"add_queue_metadata","params":{"tlids":[9],"added_from":{"uri":"m3u:Example%20Playlist.m3u8","name":"Example Playlist","type":"playlist","provider":"mopidy","context":"editable-playlist","can_edit":true},"added_by":166637467060576}}
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:31,732 [8268:HttpServer] mopidy_iris.handlers
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 53, "result": [{"__model__": "TlTrack", "tlid": 9, "track": {"__model__": "Track", "uri": "file:///home/gerard/Music/test.mp3", "name": "Symphony No. 40 in G Minor, K. 550 - I. Molto Allegro", "artists": [{"__model__": "Artist", "name": "Czech National Symphony Orchestra"}], "album": {"__model__": "Album", "name": "Musopen Kickstarter Project", "artists": [{"__model__": "Artist", "name": "Czech National Symphony Orchestra"}]}, "composers": [{"__model__": "Artist", "name": "Wolfgang Amadeus Mozart"}], "genre": "Classical", "length": 358848}}, {"__model__": "TlTrack", "tlid": 8, "track": {"__model__": "Track", "uri": "file:///home/gerard/Music/test.mp3", "name": "Symphony No. 40 in G Minor, K. 550 - I. Molto Allegro", "artists": [{"__model__": "Artist", "name": "Czech National Symphony Orchestra"}], "album": {"__model__": "Album", "name": "Musopen Kickstarter Project", "artists": [{"__model__": "Artist", "name": "Czech National Symphony Orchestra"}]}, "composers": [{"__model__": "Artist", "name": "Wolfgang Amadeus Mozart"}], "genre": "Classical", "length": 358848}}, {"__model__": "TlTrack", "tlid": 7, "track": {"__model__": "Track", "uri": "file:///home/gerard/Music/test.mp3", "name": "Symphony No. 40 in G Minor, K. 550 - I. Molto Allegro", "artists": [{"__model__": "Artist", "name": "Czech National Symphony Orchestra"}], "album": {"__model__": "Album", "name": "Musopen Kickstarter Project", "artists": [{"__model__": "Artist", "name": "Czech National Symphony Orchestra"}]}, "composers": [{"__model__": "Artist", "name": "Wolfgang Amadeus Mozart"}], "genre": "Classical", "length": 358848}}, {"__model__": "TlTrack", "tlid": 6, "track": {"__model__": "Track", "uri": "file:///home/gerard/Music/test.mp3", "name": "Symphony No. 40 in G Minor, K. 550 - I. Molto Allegro", "artists": [{"__model__": "Artist", "name": "Czech National Symphony Orchestra"}], "album": {"__model__": "Album", "name": "Musopen Kickstarter Project", "artists": [{"__model__": "Artist", "name": "Czech National Symphony Orchestra"}]}, "composers": [{"__model__": "Artist", "name": "Wolfgang Amadeus Mozart"}], "genre": "Classical", "length": 358848}}, {"__model__": "TlTrack", "tlid": 5, "track": {"__model__": "Track", "uri": "file:///home/gerard/Music/test.mp3", "name": "Symphony No. 40 in G Minor, K. 550 - I. Molto Allegro", "artists": [{"__model__": "Artist", "name": "Czech National Symphony Orchestra"}], "album": {"__model__": "Album", "name": "Musopen Kickstarter Project", "artists": [{"__model__": "Artist", "name": "Czech National Symphony Orchestra"}]}, "composers": [{"__model__": "Artist", "name": "Wolfgang Amadeus Mozart"}], "genre": "Classical", "length": 358848}}, {"__model__": "TlTrack", "tlid": 4, "track": {"__model__": "Track", "uri": "file:///home/gerard/Music/test.mp3", "name": "Symphony No. 40 in G Minor, K. 550 - I. Molto Allegro", "artists": [{"__model__": "Artist", "name": "Czech National Symphony Orchestra"}], "album": {"__model__": "Album", "name": "Musopen Kickstarter Project", "artists": [{"__model__": "Artist", "name": "Czech National Symphony Orchestra"}]}, "composers": [{"__model__": "Artist", "name": "Wolfgang Amadeus Mozart"}], "genre": "Classical", "length": 358848}}, {"__model__": "TlTrack", "tlid": 3, "track": {"__model__": "Track", "uri": "file:///home/gerard/Music/test.mp3", "name": "Symphony No. 40 in G Minor, K. 550 - I. Molto Allegro", "artists": [{"__model__": "Artist", "name": "Czech National Symphony Orchestra"}], "album": {"__model__": "Album", "name": "Musopen Kickstarter Project", "artists": [{"__model__": "Artist", "name": "Czech National Symphony Orchestra"}]}, "composers": [{"__model__": "Artist", "name": "Wolfgang Amadeus Mozart"}], "genre": "Classical", "length": 358848}}, {"__model__": "TlTrack", "tlid": 2, "track": {"__model__": "Track", "uri": "file:///home/gerard/Music/test.mp3", "name": "Symphony No. 40 in G Minor, K. 550 - I. Molto Allegro", "artists": [{"__model__": "Artist", "name": "Czech National Symphony Orchestra"}], "album": {"__model__": "Album", "name": "Musopen Kickstarter Project", "artists": [{"__model__": "Artist", "name": "Czech National Symphony Orchestra"}]}, "composers": [{"__model__": "Artist", "name": "Wolfgang Amadeus Mozart"}], "genre": "Classical", "length": 358848}}, {"__model__": "TlTrack", "tlid": 1, "track": {"__model__": "Track", "uri": "file:///home/gerard/Music/test.mp3", "name": "Symphony No. 40 in G Minor, K. 550 - I. Molto Allegro", "artists": [{"__model__": "Artist", "name": "Czech National Symphony Orchestra"}], "album": {"__model__": "Album", "name": "Musopen Kickstarter Project", "artists": [{"__model__": "Artist", "name": "Czech National Symphony Orchestra"}]}, "composers": [{"__model__": "Artist", "name": "Wolfgang Amadeus Mozart"}], "genre": "Classical", "length": 358848}}]}'
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:31,730 [8268:HttpServer] mopidy.http.handlers
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]:   Sending volume_changed to CoreListener: {'volume': 100}
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:31,729 [8268:Core-6 (_actor_loop)] mopidy.listener
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]:   Sending volume_changed to CoreListener: {'volume': 100}
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:31,729 [8268:Core-6 (_actor_loop)] mopidy.listener
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]:   Sending volume_changed to CoreListener: {'volume': 100}
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:31,729 [8268:Core-6 (_actor_loop)] mopidy.listener
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]:   Sending volume_changed to CoreListener: {'volume': 100}
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:31,729 [8268:Core-6 (_actor_loop)] mopidy.listener
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]:   Sending volume_changed to CoreListener: {'volume': 100}
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:31,729 [8268:Core-6 (_actor_loop)] mopidy.listener
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]:   Sending volume_changed to CoreListener: {'volume': 100}
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:31,729 [8268:Core-6 (_actor_loop)] mopidy.listener
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]:   Sending volume_changed to CoreListener: {'volume': 100}
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:31,728 [8268:Core-6 (_actor_loop)] mopidy.listener
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]:   Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_tl_tracks","params":{},"jsonrpc":"2.0","id":53}'
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:31,728 [8268:HttpServer] mopidy.http.handlers
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 52, "result": null}'
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:31,727 [8268:HttpServer] mopidy.http.handlers
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]:   Sending volume_changed to CoreListener: {'volume': 100}
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:31,728 [8268:Core-6 (_actor_loop)] mopidy.listener
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]:   Sending volume_changed to CoreListener: {'volume': 100}
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:31,727 [8268:Core-6 (_actor_loop)] mopidy.listener
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]:   Track is not playable: file:///home/gerard/Music/test.mp3
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]: WARNING  2022-10-23 23:27:31,727 [8268:Core-6 (_actor_loop)] mopidy.core.tracklist
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]:   Setting GStreamer state to GST_STATE_PLAYING failed
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]: WARNING  2022-10-23 23:27:31,727 [8268:Audio-2 (_actor_loop)] mopidy.audio.actor
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]:   Changing state to GST_STATE_PLAYING: result=GST_STATE_CHANGE_FAILURE
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:31,726 [8268:Audio-2 (_actor_loop)] mopidy.audio.gst
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]:   Changing state to GST_STATE_NULL: result=GST_STATE_CHANGE_SUCCESS
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:31,727 [8268:MainThread] mopidy.audio.gst
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]:   Got ERROR bus message: error=GLib.Error('Failed to connect: Connection refused', 'gst-resource-error-quark', 1) debug='../ext/pulse/pulsesink.c(615): gst_pulseringbuffer_open_device (): /GstBin:audio-sink/mopidy+audio+actor+_Outputs:mopidy+audio+actor+_outputs0/GstBin:bin0/GstPulseSink:pulsesink0'
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:31,726 [8268:MainThread] mopidy.audio.gst
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]:   GStreamer error: Failed to connect: Connection refused
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]: ERROR    2022-10-23 23:27:31,726 [8268:MainThread] mopidy.audio.gst
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]:   Sending volume_changed to MixerListener: {'volume': 100}
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:31,725 [8268:SoftwareMixer-1 (_actor_loop)] mopidy.listener
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]:   Mixer event: volume_changed(volume=100)
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:31,725 [8268:SoftwareMixer-1 (_actor_loop)] mopidy.mixer
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]:   Flags: 2
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:31,725 [8268:Audio-2 (_actor_loop)] mopidy.audio.actor
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]:   Got STATE_CHANGED bus message: old=GST_STATE_NULL new=GST_STATE_READY pending=GST_STATE_VOID_PENDING
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:31,724 [8268:MainThread] mopidy.audio.gst
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]:   Changing state to GST_STATE_READY: result=GST_STATE_CHANGE_SUCCESS
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:31,724 [8268:Audio-2 (_actor_loop)] mopidy.audio.gst
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]:   Track is not playable: file:///home/gerard/Music/test.mp3
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]: WARNING  2022-10-23 23:27:31,724 [8268:Core-6 (_actor_loop)] mopidy.core.tracklist
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]:   Setting GStreamer state to GST_STATE_PLAYING failed
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]: WARNING  2022-10-23 23:27:31,724 [8268:Audio-2 (_actor_loop)] mopidy.audio.actor
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]:   Changing state to GST_STATE_PLAYING: result=GST_STATE_CHANGE_FAILURE
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:31,723 [8268:Audio-2 (_actor_loop)] mopidy.audio.gst
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]:   Changing state to GST_STATE_NULL: result=GST_STATE_CHANGE_SUCCESS
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:31,723 [8268:MainThread] mopidy.audio.gst
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]:   Got ERROR bus message: error=GLib.Error('Failed to connect: Connection refused', 'gst-resource-error-quark', 1) debug='../ext/pulse/pulsesink.c(615): gst_pulseringbuffer_open_device (): /GstBin:audio-sink/mopidy+audio+actor+_Outputs:mopidy+audio+actor+_outputs0/GstBin:bin0/GstPulseSink:pulsesink0'
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:31,723 [8268:MainThread] mopidy.audio.gst
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]:   GStreamer error: Failed to connect: Connection refused
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]: ERROR    2022-10-23 23:27:31,723 [8268:MainThread] mopidy.audio.gst
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]:   Sending volume_changed to MixerListener: {'volume': 100}
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:31,722 [8268:SoftwareMixer-1 (_actor_loop)] mopidy.listener
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]:   Mixer event: volume_changed(volume=100)
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:31,722 [8268:SoftwareMixer-1 (_actor_loop)] mopidy.mixer
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]:   Flags: 2
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:31,722 [8268:Audio-2 (_actor_loop)] mopidy.audio.actor
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]:   Got STATE_CHANGED bus message: old=GST_STATE_NULL new=GST_STATE_READY pending=GST_STATE_VOID_PENDING
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:31,722 [8268:MainThread] mopidy.audio.gst
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]:   Changing state to GST_STATE_READY: result=GST_STATE_CHANGE_SUCCESS
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:31,721 [8268:Audio-2 (_actor_loop)] mopidy.audio.gst
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]:   Track is not playable: file:///home/gerard/Music/test.mp3
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]: WARNING  2022-10-23 23:27:31,721 [8268:Core-6 (_actor_loop)] mopidy.core.tracklist
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]:   Changing state to GST_STATE_NULL: result=GST_STATE_CHANGE_SUCCESS
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:31,720 [8268:MainThread] mopidy.audio.gst
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]:   Setting GStreamer state to GST_STATE_PLAYING failed
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]: WARNING  2022-10-23 23:27:31,720 [8268:Audio-2 (_actor_loop)] mopidy.audio.actor
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]:   Got ERROR bus message: error=GLib.Error('Failed to connect: Connection refused', 'gst-resource-error-quark', 1) debug='../ext/pulse/pulsesink.c(615): gst_pulseringbuffer_open_device (): /GstBin:audio-sink/mopidy+audio+actor+_Outputs:mopidy+audio+actor+_outputs0/GstBin:bin0/GstPulseSink:pulsesink0'
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:31,720 [8268:MainThread] mopidy.audio.gst
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]:   Changing state to GST_STATE_PLAYING: result=GST_STATE_CHANGE_FAILURE
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:31,720 [8268:Audio-2 (_actor_loop)] mopidy.audio.gst
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]:   GStreamer error: Failed to connect: Connection refused
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]: ERROR    2022-10-23 23:27:31,720 [8268:MainThread] mopidy.audio.gst
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]:   Sending volume_changed to MixerListener: {'volume': 100}
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:31,719 [8268:SoftwareMixer-1 (_actor_loop)] mopidy.listener
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]:   Mixer event: volume_changed(volume=100)
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:31,718 [8268:SoftwareMixer-1 (_actor_loop)] mopidy.mixer
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]:   Flags: 2
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:31,718 [8268:Audio-2 (_actor_loop)] mopidy.audio.actor
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]:   Got STATE_CHANGED bus message: old=GST_STATE_NULL new=GST_STATE_READY pending=GST_STATE_VOID_PENDING
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:31,718 [8268:MainThread] mopidy.audio.gst
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]:   Changing state to GST_STATE_READY: result=GST_STATE_CHANGE_SUCCESS
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:31,717 [8268:Audio-2 (_actor_loop)] mopidy.audio.gst
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]:   Track is not playable: file:///home/gerard/Music/test.mp3
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]: WARNING  2022-10-23 23:27:31,717 [8268:Core-6 (_actor_loop)] mopidy.core.tracklist
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]:   Changing state to GST_STATE_NULL: result=GST_STATE_CHANGE_SUCCESS
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:31,717 [8268:MainThread] mopidy.audio.gst
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]:   Setting GStreamer state to GST_STATE_PLAYING failed
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]: WARNING  2022-10-23 23:27:31,717 [8268:Audio-2 (_actor_loop)] mopidy.audio.actor
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]:   Got ERROR bus message: error=GLib.Error('Failed to connect: Connection refused', 'gst-resource-error-quark', 1) debug='../ext/pulse/pulsesink.c(615): gst_pulseringbuffer_open_device (): /GstBin:audio-sink/mopidy+audio+actor+_Outputs:mopidy+audio+actor+_outputs0/GstBin:bin0/GstPulseSink:pulsesink0'
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:31,717 [8268:MainThread] mopidy.audio.gst
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]:   Changing state to GST_STATE_PLAYING: result=GST_STATE_CHANGE_FAILURE
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:31,717 [8268:Audio-2 (_actor_loop)] mopidy.audio.gst
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]:   GStreamer error: Failed to connect: Connection refused
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]: ERROR    2022-10-23 23:27:31,716 [8268:MainThread] mopidy.audio.gst
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]:   Sending volume_changed to MixerListener: {'volume': 100}
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:31,716 [8268:SoftwareMixer-1 (_actor_loop)] mopidy.listener
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]:   Mixer event: volume_changed(volume=100)
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:31,715 [8268:SoftwareMixer-1 (_actor_loop)] mopidy.mixer
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]:   Flags: 2
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:31,715 [8268:Audio-2 (_actor_loop)] mopidy.audio.actor
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]:   Got STATE_CHANGED bus message: old=GST_STATE_NULL new=GST_STATE_READY pending=GST_STATE_VOID_PENDING
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:31,715 [8268:MainThread] mopidy.audio.gst
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]:   Changing state to GST_STATE_READY: result=GST_STATE_CHANGE_SUCCESS
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:31,715 [8268:Audio-2 (_actor_loop)] mopidy.audio.gst
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]:   Track is not playable: file:///home/gerard/Music/test.mp3
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]: WARNING  2022-10-23 23:27:31,714 [8268:Core-6 (_actor_loop)] mopidy.core.tracklist
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]:   Changing state to GST_STATE_NULL: result=GST_STATE_CHANGE_SUCCESS
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:31,714 [8268:MainThread] mopidy.audio.gst
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]:   Setting GStreamer state to GST_STATE_PLAYING failed
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]: WARNING  2022-10-23 23:27:31,714 [8268:Audio-2 (_actor_loop)] mopidy.audio.actor
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]:   Got ERROR bus message: error=GLib.Error('Failed to connect: Connection refused', 'gst-resource-error-quark', 1) debug='../ext/pulse/pulsesink.c(615): gst_pulseringbuffer_open_device (): /GstBin:audio-sink/mopidy+audio+actor+_Outputs:mopidy+audio+actor+_outputs0/GstBin:bin0/GstPulseSink:pulsesink0'
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:31,714 [8268:MainThread] mopidy.audio.gst
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]:   Changing state to GST_STATE_PLAYING: result=GST_STATE_CHANGE_FAILURE
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:31,714 [8268:Audio-2 (_actor_loop)] mopidy.audio.gst
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]:   GStreamer error: Failed to connect: Connection refused
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]: ERROR    2022-10-23 23:27:31,714 [8268:MainThread] mopidy.audio.gst
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]:   Sending volume_changed to MixerListener: {'volume': 100}
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:31,713 [8268:SoftwareMixer-1 (_actor_loop)] mopidy.listener
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]:   Mixer event: volume_changed(volume=100)
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:31,713 [8268:SoftwareMixer-1 (_actor_loop)] mopidy.mixer
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]:   Flags: 2
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:31,712 [8268:Audio-2 (_actor_loop)] mopidy.audio.actor
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]:   Got STATE_CHANGED bus message: old=GST_STATE_NULL new=GST_STATE_READY pending=GST_STATE_VOID_PENDING
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:31,712 [8268:MainThread] mopidy.audio.gst
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]:   Changing state to GST_STATE_READY: result=GST_STATE_CHANGE_SUCCESS
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:31,712 [8268:Audio-2 (_actor_loop)] mopidy.audio.gst
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]:   Changing state to GST_STATE_NULL: result=GST_STATE_CHANGE_SUCCESS
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:31,712 [8268:MainThread] mopidy.audio.gst
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]:   Track is not playable: file:///home/gerard/Music/test.mp3
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]: WARNING  2022-10-23 23:27:31,712 [8268:Core-6 (_actor_loop)] mopidy.core.tracklist
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]:   Setting GStreamer state to GST_STATE_PLAYING failed
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]: WARNING  2022-10-23 23:27:31,711 [8268:Audio-2 (_actor_loop)] mopidy.audio.actor
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]:   Got ERROR bus message: error=GLib.Error('Failed to connect: Connection refused', 'gst-resource-error-quark', 1) debug='../ext/pulse/pulsesink.c(615): gst_pulseringbuffer_open_device (): /GstBin:audio-sink/mopidy+audio+actor+_Outputs:mopidy+audio+actor+_outputs0/GstBin:bin0/GstPulseSink:pulsesink0'
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:31,711 [8268:MainThread] mopidy.audio.gst
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]:   Changing state to GST_STATE_PLAYING: result=GST_STATE_CHANGE_FAILURE
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:31,711 [8268:Audio-2 (_actor_loop)] mopidy.audio.gst
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]:   GStreamer error: Failed to connect: Connection refused
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]: ERROR    2022-10-23 23:27:31,711 [8268:MainThread] mopidy.audio.gst
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]:   Sending volume_changed to MixerListener: {'volume': 100}
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:31,710 [8268:SoftwareMixer-1 (_actor_loop)] mopidy.listener
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]:   Mixer event: volume_changed(volume=100)
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:31,710 [8268:SoftwareMixer-1 (_actor_loop)] mopidy.mixer
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]:   Flags: 2
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:31,710 [8268:Audio-2 (_actor_loop)] mopidy.audio.actor
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]:   Got STATE_CHANGED bus message: old=GST_STATE_NULL new=GST_STATE_READY pending=GST_STATE_VOID_PENDING
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:31,710 [8268:MainThread] mopidy.audio.gst
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]:   Changing state to GST_STATE_READY: result=GST_STATE_CHANGE_SUCCESS
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:31,709 [8268:Audio-2 (_actor_loop)] mopidy.audio.gst
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]:   Track is not playable: file:///home/gerard/Music/test.mp3
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]: WARNING  2022-10-23 23:27:31,709 [8268:Core-6 (_actor_loop)] mopidy.core.tracklist
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]:   Setting GStreamer state to GST_STATE_PLAYING failed
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]: WARNING  2022-10-23 23:27:31,708 [8268:Audio-2 (_actor_loop)] mopidy.audio.actor
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]:   Changing state to GST_STATE_PLAYING: result=GST_STATE_CHANGE_FAILURE
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:31,708 [8268:Audio-2 (_actor_loop)] mopidy.audio.gst
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]:   Changing state to GST_STATE_NULL: result=GST_STATE_CHANGE_SUCCESS
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:31,708 [8268:MainThread] mopidy.audio.gst
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]:   Got ERROR bus message: error=GLib.Error('Failed to connect: Connection refused', 'gst-resource-error-quark', 1) debug='../ext/pulse/pulsesink.c(615): gst_pulseringbuffer_open_device (): /GstBin:audio-sink/mopidy+audio+actor+_Outputs:mopidy+audio+actor+_outputs0/GstBin:bin0/GstPulseSink:pulsesink0'
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:31,708 [8268:MainThread] mopidy.audio.gst
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]:   GStreamer error: Failed to connect: Connection refused
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]: ERROR    2022-10-23 23:27:31,708 [8268:MainThread] mopidy.audio.gst
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]:   Sending volume_changed to MixerListener: {'volume': 100}
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:31,707 [8268:SoftwareMixer-1 (_actor_loop)] mopidy.listener
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]:   Mixer event: volume_changed(volume=100)
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:31,706 [8268:SoftwareMixer-1 (_actor_loop)] mopidy.mixer
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]:   Flags: 2
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:31,706 [8268:Audio-2 (_actor_loop)] mopidy.audio.actor
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]:   Got STATE_CHANGED bus message: old=GST_STATE_NULL new=GST_STATE_READY pending=GST_STATE_VOID_PENDING
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:31,705 [8268:MainThread] mopidy.audio.gst
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]:   Changing state to GST_STATE_READY: result=GST_STATE_CHANGE_SUCCESS
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:31,704 [8268:Audio-2 (_actor_loop)] mopidy.audio.gst
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]:   Track is not playable: file:///home/gerard/Music/test.mp3
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]: WARNING  2022-10-23 23:27:31,704 [8268:Core-6 (_actor_loop)] mopidy.core.tracklist
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]:   Setting GStreamer state to GST_STATE_PLAYING failed
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]: WARNING  2022-10-23 23:27:31,704 [8268:Audio-2 (_actor_loop)] mopidy.audio.actor
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]:   Changing state to GST_STATE_NULL: result=GST_STATE_CHANGE_SUCCESS
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:31,704 [8268:MainThread] mopidy.audio.gst
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]:   Got ERROR bus message: error=GLib.Error('Failed to connect: Connection refused', 'gst-resource-error-quark', 1) debug='../ext/pulse/pulsesink.c(615): gst_pulseringbuffer_open_device (): /GstBin:audio-sink/mopidy+audio+actor+_Outputs:mopidy+audio+actor+_outputs0/GstBin:bin0/GstPulseSink:pulsesink0'
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:31,703 [8268:MainThread] mopidy.audio.gst
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]:   Changing state to GST_STATE_PLAYING: result=GST_STATE_CHANGE_FAILURE
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:31,703 [8268:Audio-2 (_actor_loop)] mopidy.audio.gst
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]:   GStreamer error: Failed to connect: Connection refused
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]: ERROR    2022-10-23 23:27:31,703 [8268:MainThread] mopidy.audio.gst
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]:   Sending volume_changed to MixerListener: {'volume': 100}
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:31,703 [8268:SoftwareMixer-1 (_actor_loop)] mopidy.listener
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]:   Mixer event: volume_changed(volume=100)
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:31,702 [8268:SoftwareMixer-1 (_actor_loop)] mopidy.mixer
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]:   Flags: 2
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:31,702 [8268:Audio-2 (_actor_loop)] mopidy.audio.actor
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]:   Got STATE_CHANGED bus message: old=GST_STATE_NULL new=GST_STATE_READY pending=GST_STATE_VOID_PENDING
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:31,702 [8268:MainThread] mopidy.audio.gst
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]:   Changing state to GST_STATE_READY: result=GST_STATE_CHANGE_SUCCESS
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:31,702 [8268:Audio-2 (_actor_loop)] mopidy.audio.gst
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]:   Track is not playable: file:///home/gerard/Music/test.mp3
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]: WARNING  2022-10-23 23:27:31,701 [8268:Core-6 (_actor_loop)] mopidy.core.tracklist
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]:   Changing state to GST_STATE_NULL: result=GST_STATE_CHANGE_SUCCESS
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:31,701 [8268:MainThread] mopidy.audio.gst
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]:   Setting GStreamer state to GST_STATE_PLAYING failed
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]: WARNING  2022-10-23 23:27:31,701 [8268:Audio-2 (_actor_loop)] mopidy.audio.actor
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]:   Changing state to GST_STATE_PLAYING: result=GST_STATE_CHANGE_FAILURE
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:31,701 [8268:Audio-2 (_actor_loop)] mopidy.audio.gst
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]:   Got ERROR bus message: error=GLib.Error('Failed to connect: Connection refused', 'gst-resource-error-quark', 1) debug='../ext/pulse/pulsesink.c(615): gst_pulseringbuffer_open_device (): /GstBin:audio-sink/mopidy+audio+actor+_Outputs:mopidy+audio+actor+_outputs0/GstBin:bin0/GstPulseSink:pulsesink0'
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:31,701 [8268:MainThread] mopidy.audio.gst
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]:   GStreamer error: Failed to connect: Connection refused
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]: ERROR    2022-10-23 23:27:31,700 [8268:MainThread] mopidy.audio.gst
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]:   Sending volume_changed to MixerListener: {'volume': 100}
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:31,700 [8268:SoftwareMixer-1 (_actor_loop)] mopidy.listener
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]:   Mixer event: volume_changed(volume=100)
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:31,700 [8268:SoftwareMixer-1 (_actor_loop)] mopidy.mixer
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]:   Flags: 2
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:31,699 [8268:Audio-2 (_actor_loop)] mopidy.audio.actor
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]:   Got STATE_CHANGED bus message: old=GST_STATE_NULL new=GST_STATE_READY pending=GST_STATE_VOID_PENDING
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:31,699 [8268:MainThread] mopidy.audio.gst
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]:   Changing state to GST_STATE_READY: result=GST_STATE_CHANGE_SUCCESS
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:31,699 [8268:Audio-2 (_actor_loop)] mopidy.audio.gst
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]:   Received WebSocket message from 127.0.0.1: '{"method":"core.playback.play","params":{"tlid":9},"jsonrpc":"2.0","id":52}'
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:31,698 [8268:HttpServer] mopidy.http.handlers
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 51, "result": [{"__model__": "TlTrack", "tlid": 9, "track": {"__model__": "Track", "uri": "file:///home/gerard/Music/test.mp3", "name": "Symphony No. 40 in G Minor, K. 550 - I. Molto Allegro", "artists": [{"__model__": "Artist", "name": "Czech National Symphony Orchestra"}], "album": {"__model__": "Album", "name": "Musopen Kickstarter Project", "artists": [{"__model__": "Artist", "name": "Czech National Symphony Orchestra"}]}, "composers": [{"__model__": "Artist", "name": "Wolfgang Amadeus Mozart"}], "genre": "Classical", "length": 358848}}]}'
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:31,697 [8268:HttpServer] mopidy.http.handlers
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]:   Sending tracklist_changed to CoreListener: {}
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:31,696 [8268:Core-6 (_actor_loop)] mopidy.listener
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]:   Triggering event: tracklist_changed()
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:31,696 [8268:Core-6 (_actor_loop)] mopidy.core.tracklist
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]:   element pipeline8: GstMessageAsyncDone, running-time=(guint64)18446744073709551615;
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]: TRACE    2022-10-23 23:27:31,694 [8268:FileBackend-3 (_actor_loop)] mopidy.audio.scan
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]:   element fakesink8: GstMessageTag, taglist=(taglist)"taglist\,\ encoder\=\(string\)\"LAME\\\ 32bi...
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]: TRACE    2022-10-23 23:27:31,694 [8268:FileBackend-3 (_actor_loop)] mopidy.audio.scan
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]:   element fakesink8: GstMessageTag, taglist=(taglist)"taglist\,\ encoder\=\(string\)\"LAME\\\ 32bi...
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]: TRACE    2022-10-23 23:27:31,667 [8268:FileBackend-3 (_actor_loop)] mopidy.audio.scan
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]:   element mpegaudioparse8: GstMessageDurationChanged;
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]: TRACE    2022-10-23 23:27:31,641 [8268:FileBackend-3 (_actor_loop)] mopidy.audio.scan
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]:   element decodebin8: have-audio;
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]: TRACE    2022-10-23 23:27:31,641 [8268:FileBackend-3 (_actor_loop)] mopidy.audio.scan
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]:   Looking up file URI: file:///home/gerard/Music/test.mp3
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:31,638 [8268:FileBackend-3 (_actor_loop)] mopidy.file.library
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]:   Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.add","params":{"uris":["file:///home/gerard/Music/test.mp3"],"at_position":0},"jsonrpc":"2.0","id":51}'
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:31,638 [8268:HttpServer] mopidy.http.handlers
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 50, "result": 8}'
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:31,631 [8268:HttpServer] mopidy.http.handlers
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]:   Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_next_tlid","params":{},"jsonrpc":"2.0","id":50}'
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:31,631 [8268:HttpServer] mopidy.http.handlers
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 49, "result": 8}'
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:31,089 [8268:HttpServer] mopidy.http.handlers
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]:   Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_next_tlid","params":{},"jsonrpc":"2.0","id":49}'
okt 23 23:27:31 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:31,089 [8268:HttpServer] mopidy.http.handlers
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]:   {'id': 166656045065357, 'jsonrpc': '2.0', 'method': 'broadcast', 'result': {'message': 'Broadcast to 1 connections'}, 'recipient': 'BFXBXSDGLGDC'}
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:30,659 [8268:HttpServer] mopidy_iris.core
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]:   {'method': 'notification', 'params': {'notification': {'content': '166637467060576 changed track'}}, 'connection_id': 'BFXBXSDGLGDC'}
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:30,659 [8268:HttpServer] mopidy_iris.core
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]:   Iris websocket message received: {"jsonrpc":"2.0","id":166656045065357,"method":"broadcast","params":{"method":"notification","params":{"notification":{"content":"166637467060576 changed track"}}}}
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:30,659 [8268:HttpServer] mopidy_iris.handlers
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]:   {'id': 166656045062893, 'jsonrpc': '2.0', 'method': 'add_queue_metadata', 'result': {'message': 'Added queue metadata'}, 'recipient': 'BFXBXSDGLGDC'}
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:30,659 [8268:HttpServer] mopidy_iris.core
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]:   {'method': 'queue_metadata_changed', 'params': {'queue_metadata': {'tlid_7': {'tlid': 7, 'added_from': {'uri': 'm3u:Example%20Playlist.m3u8', 'name': 'Example Playlist', 'type': 'playlist', 'provider': 'mopidy', 'context': 'editable-playlist', 'can_edit': True}, 'added_by': 166637467060576}, 'tlid_6': {'tlid': 6, 'added_from': {'uri': 'm3u:Example%20Playlist.m3u8', 'name': 'Example Playlist', 'type': 'playlist', 'provider': 'mopidy', 'context': 'editable-playlist', 'can_edit': True}, 'added_by': 166637467060576}, 'tlid_5': {'tlid': 5, 'added_from': {'uri': 'm3u:Example%20Playlist.m3u8', 'name': 'Example Playlist', 'type': 'playlist', 'provider': 'mopidy', 'context': 'editable-playlist', 'can_edit': True}, 'added_by': 166637467060576}, 'tlid_4': {'tlid': 4, 'added_from': {'uri': 'm3u:Example%20Playlist.m3u8', 'name': 'Example Playlist', 'type': 'playlist', 'provider': 'mopidy', 'context': 'editable-playlist', 'can_edit': True}, 'added_by': 166637467060576}, 'tlid_3': {'tlid': 3, 'added_from': {'uri': 'm3u:Example%20Playlist.m3u8', 'name': 'Example Playlist', 'type': 'playlist', 'provider': 'mopidy', 'context': 'editable-playlist', 'can_edit': True}, 'added_by': 166637467060576}, 'tlid_2': {'tlid': 2, 'added_from': {'uri': 'm3u:Example%20Playlist.m3u8', 'name': 'Example Playlist', 'type': 'playlist', 'provider': 'mopidy', 'context': 'editable-playlist', 'can_edit': True}, 'added_by': 166637467060576}, 'tlid_1': {'tlid': 1, 'added_from': {'uri': 'm3u:Example%20Playlist.m3u8', 'name': 'Example Playlist', 'type': 'playlist', 'provider': 'mopidy', 'context': 'editable-playlist', 'can_edit': True}, 'added_by': 166637467060576}, 'tlid_8': {'tlid': 8, 'added_from': {'uri': 'm3u:Example%20Playlist.m3u8', 'name': 'Example Playlist', 'type': 'playlist', 'provider': 'mopidy', 'context': 'editable-playlist', 'can_edit': True}, 'added_by': 166637467060576}}}}
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:30,658 [8268:HttpServer] mopidy_iris.core
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]:   Iris websocket message received: {"jsonrpc":"2.0","id":166656045062893,"method":"add_queue_metadata","params":{"tlids":[8],"added_from":{"uri":"m3u:Example%20Playlist.m3u8","name":"Example Playlist","type":"playlist","provider":"mopidy","context":"editable-playlist","can_edit":true},"added_by":166637467060576}}
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:30,658 [8268:HttpServer] mopidy_iris.handlers
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 48, "result": [{"__model__": "TlTrack", "tlid": 8, "track": {"__model__": "Track", "uri": "file:///home/gerard/Music/test.mp3", "name": "Symphony No. 40 in G Minor, K. 550 - I. Molto Allegro", "artists": [{"__model__": "Artist", "name": "Czech National Symphony Orchestra"}], "album": {"__model__": "Album", "name": "Musopen Kickstarter Project", "artists": [{"__model__": "Artist", "name": "Czech National Symphony Orchestra"}]}, "composers": [{"__model__": "Artist", "name": "Wolfgang Amadeus Mozart"}], "genre": "Classical", "length": 358848}}, {"__model__": "TlTrack", "tlid": 7, "track": {"__model__": "Track", "uri": "file:///home/gerard/Music/test.mp3", "name": "Symphony No. 40 in G Minor, K. 550 - I. Molto Allegro", "artists": [{"__model__": "Artist", "name": "Czech National Symphony Orchestra"}], "album": {"__model__": "Album", "name": "Musopen Kickstarter Project", "artists": [{"__model__": "Artist", "name": "Czech National Symphony Orchestra"}]}, "composers": [{"__model__": "Artist", "name": "Wolfgang Amadeus Mozart"}], "genre": "Classical", "length": 358848}}, {"__model__": "TlTrack", "tlid": 6, "track": {"__model__": "Track", "uri": "file:///home/gerard/Music/test.mp3", "name": "Symphony No. 40 in G Minor, K. 550 - I. Molto Allegro", "artists": [{"__model__": "Artist", "name": "Czech National Symphony Orchestra"}], "album": {"__model__": "Album", "name": "Musopen Kickstarter Project", "artists": [{"__model__": "Artist", "name": "Czech National Symphony Orchestra"}]}, "composers": [{"__model__": "Artist", "name": "Wolfgang Amadeus Mozart"}], "genre": "Classical", "length": 358848}}, {"__model__": "TlTrack", "tlid": 5, "track": {"__model__": "Track", "uri": "file:///home/gerard/Music/test.mp3", "name": "Symphony No. 40 in G Minor, K. 550 - I. Molto Allegro", "artists": [{"__model__": "Artist", "name": "Czech National Symphony Orchestra"}], "album": {"__model__": "Album", "name": "Musopen Kickstarter Project", "artists": [{"__model__": "Artist", "name": "Czech National Symphony Orchestra"}]}, "composers": [{"__model__": "Artist", "name": "Wolfgang Amadeus Mozart"}], "genre": "Classical", "length": 358848}}, {"__model__": "TlTrack", "tlid": 4, "track": {"__model__": "Track", "uri": "file:///home/gerard/Music/test.mp3", "name": "Symphony No. 40 in G Minor, K. 550 - I. Molto Allegro", "artists": [{"__model__": "Artist", "name": "Czech National Symphony Orchestra"}], "album": {"__model__": "Album", "name": "Musopen Kickstarter Project", "artists": [{"__model__": "Artist", "name": "Czech National Symphony Orchestra"}]}, "composers": [{"__model__": "Artist", "name": "Wolfgang Amadeus Mozart"}], "genre": "Classical", "length": 358848}}, {"__model__": "TlTrack", "tlid": 3, "track": {"__model__": "Track", "uri": "file:///home/gerard/Music/test.mp3", "name": "Symphony No. 40 in G Minor, K. 550 - I. Molto Allegro", "artists": [{"__model__": "Artist", "name": "Czech National Symphony Orchestra"}], "album": {"__model__": "Album", "name": "Musopen Kickstarter Project", "artists": [{"__model__": "Artist", "name": "Czech National Symphony Orchestra"}]}, "composers": [{"__model__": "Artist", "name": "Wolfgang Amadeus Mozart"}], "genre": "Classical", "length": 358848}}, {"__model__": "TlTrack", "tlid": 2, "track": {"__model__": "Track", "uri": "file:///home/gerard/Music/test.mp3", "name": "Symphony No. 40 in G Minor, K. 550 - I. Molto Allegro", "artists": [{"__model__": "Artist", "name": "Czech National Symphony Orchestra"}], "album": {"__model__": "Album", "name": "Musopen Kickstarter Project", "artists": [{"__model__": "Artist", "name": "Czech National Symphony Orchestra"}]}, "composers": [{"__model__": "Artist", "name": "Wolfgang Amadeus Mozart"}], "genre": "Classical", "length": 358848}}, {"__model__": "TlTrack", "tlid": 1, "track": {"__model__": "Track", "uri": "file:///home/gerard/Music/test.mp3", "name": "Symphony No. 40 in G Minor, K. 550 - I. Molto Allegro", "artists": [{"__model__": "Artist", "name": "Czech National Symphony Orchestra"}], "album": {"__model__": "Album", "name": "Musopen Kickstarter Project", "artists": [{"__model__": "Artist", "name": "Czech National Symphony Orchestra"}]}, "composers": [{"__model__": "Artist", "name": "Wolfgang Amadeus Mozart"}], "genre": "Classical", "length": 358848}}]}'
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:30,657 [8268:HttpServer] mopidy.http.handlers
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]:   Sending volume_changed to CoreListener: {'volume': 100}
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:30,656 [8268:Core-6 (_actor_loop)] mopidy.listener
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]:   Sending volume_changed to CoreListener: {'volume': 100}
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:30,656 [8268:Core-6 (_actor_loop)] mopidy.listener
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]:   Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_tl_tracks","params":{},"jsonrpc":"2.0","id":48}'
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:30,655 [8268:HttpServer] mopidy.http.handlers
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]:   Sending volume_changed to CoreListener: {'volume': 100}
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:30,655 [8268:Core-6 (_actor_loop)] mopidy.listener
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]:   Sending volume_changed to CoreListener: {'volume': 100}
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:30,655 [8268:Core-6 (_actor_loop)] mopidy.listener
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 47, "result": null}'
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:30,655 [8268:HttpServer] mopidy.http.handlers
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]:   Sending volume_changed to CoreListener: {'volume': 100}
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:30,654 [8268:Core-6 (_actor_loop)] mopidy.listener
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]:   Sending volume_changed to CoreListener: {'volume': 100}
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:30,652 [8268:Core-6 (_actor_loop)] mopidy.listener
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]:   Sending volume_changed to CoreListener: {'volume': 100}
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:30,652 [8268:Core-6 (_actor_loop)] mopidy.listener
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]:   Sending volume_changed to CoreListener: {'volume': 100}
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:30,652 [8268:Core-6 (_actor_loop)] mopidy.listener
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]:   Track is not playable: file:///home/gerard/Music/test.mp3
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]: WARNING  2022-10-23 23:27:30,652 [8268:Core-6 (_actor_loop)] mopidy.core.tracklist
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]:   Changing state to GST_STATE_NULL: result=GST_STATE_CHANGE_SUCCESS
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:30,651 [8268:MainThread] mopidy.audio.gst
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]:   Setting GStreamer state to GST_STATE_PLAYING failed
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]: WARNING  2022-10-23 23:27:30,651 [8268:Audio-2 (_actor_loop)] mopidy.audio.actor
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]:   Got ERROR bus message: error=GLib.Error('Failed to connect: Connection refused', 'gst-resource-error-quark', 1) debug='../ext/pulse/pulsesink.c(615): gst_pulseringbuffer_open_device (): /GstBin:audio-sink/mopidy+audio+actor+_Outputs:mopidy+audio+actor+_outputs0/GstBin:bin0/GstPulseSink:pulsesink0'
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:30,651 [8268:MainThread] mopidy.audio.gst
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]:   Changing state to GST_STATE_PLAYING: result=GST_STATE_CHANGE_FAILURE
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:30,651 [8268:Audio-2 (_actor_loop)] mopidy.audio.gst
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]:   GStreamer error: Failed to connect: Connection refused
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]: ERROR    2022-10-23 23:27:30,651 [8268:MainThread] mopidy.audio.gst
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]:   Sending volume_changed to MixerListener: {'volume': 100}
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:30,650 [8268:SoftwareMixer-1 (_actor_loop)] mopidy.listener
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]:   Mixer event: volume_changed(volume=100)
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:30,650 [8268:SoftwareMixer-1 (_actor_loop)] mopidy.mixer
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]:   Flags: 2
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:30,649 [8268:Audio-2 (_actor_loop)] mopidy.audio.actor
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]:   Got STATE_CHANGED bus message: old=GST_STATE_NULL new=GST_STATE_READY pending=GST_STATE_VOID_PENDING
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:30,649 [8268:MainThread] mopidy.audio.gst
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]:   Changing state to GST_STATE_READY: result=GST_STATE_CHANGE_SUCCESS
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:30,649 [8268:Audio-2 (_actor_loop)] mopidy.audio.gst
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]:   Track is not playable: file:///home/gerard/Music/test.mp3
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]: WARNING  2022-10-23 23:27:30,649 [8268:Core-6 (_actor_loop)] mopidy.core.tracklist
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]:   Changing state to GST_STATE_NULL: result=GST_STATE_CHANGE_SUCCESS
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:30,649 [8268:MainThread] mopidy.audio.gst
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]:   Setting GStreamer state to GST_STATE_PLAYING failed
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]: WARNING  2022-10-23 23:27:30,648 [8268:Audio-2 (_actor_loop)] mopidy.audio.actor
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]:   Got ERROR bus message: error=GLib.Error('Failed to connect: Connection refused', 'gst-resource-error-quark', 1) debug='../ext/pulse/pulsesink.c(615): gst_pulseringbuffer_open_device (): /GstBin:audio-sink/mopidy+audio+actor+_Outputs:mopidy+audio+actor+_outputs0/GstBin:bin0/GstPulseSink:pulsesink0'
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:30,648 [8268:MainThread] mopidy.audio.gst
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]:   Changing state to GST_STATE_PLAYING: result=GST_STATE_CHANGE_FAILURE
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:30,648 [8268:Audio-2 (_actor_loop)] mopidy.audio.gst
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]:   GStreamer error: Failed to connect: Connection refused
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]: ERROR    2022-10-23 23:27:30,648 [8268:MainThread] mopidy.audio.gst
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]:   Sending volume_changed to MixerListener: {'volume': 100}
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:30,647 [8268:SoftwareMixer-1 (_actor_loop)] mopidy.listener
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]:   Mixer event: volume_changed(volume=100)
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:30,647 [8268:SoftwareMixer-1 (_actor_loop)] mopidy.mixer
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]:   Got STATE_CHANGED bus message: old=GST_STATE_NULL new=GST_STATE_READY pending=GST_STATE_VOID_PENDING
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:30,647 [8268:MainThread] mopidy.audio.gst
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]:   Flags: 2
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:30,647 [8268:Audio-2 (_actor_loop)] mopidy.audio.actor
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]:   Changing state to GST_STATE_READY: result=GST_STATE_CHANGE_SUCCESS
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:30,646 [8268:Audio-2 (_actor_loop)] mopidy.audio.gst
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]:   Track is not playable: file:///home/gerard/Music/test.mp3
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]: WARNING  2022-10-23 23:27:30,646 [8268:Core-6 (_actor_loop)] mopidy.core.tracklist
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]:   Setting GStreamer state to GST_STATE_PLAYING failed
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]: WARNING  2022-10-23 23:27:30,645 [8268:Audio-2 (_actor_loop)] mopidy.audio.actor
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]:   Changing state to GST_STATE_NULL: result=GST_STATE_CHANGE_SUCCESS
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:30,645 [8268:MainThread] mopidy.audio.gst
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]:   Changing state to GST_STATE_PLAYING: result=GST_STATE_CHANGE_FAILURE
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:30,645 [8268:Audio-2 (_actor_loop)] mopidy.audio.gst
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]:   Got ERROR bus message: error=GLib.Error('Failed to connect: Connection refused', 'gst-resource-error-quark', 1) debug='../ext/pulse/pulsesink.c(615): gst_pulseringbuffer_open_device (): /GstBin:audio-sink/mopidy+audio+actor+_Outputs:mopidy+audio+actor+_outputs0/GstBin:bin0/GstPulseSink:pulsesink0'
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:30,645 [8268:MainThread] mopidy.audio.gst
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]:   GStreamer error: Failed to connect: Connection refused
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]: ERROR    2022-10-23 23:27:30,645 [8268:MainThread] mopidy.audio.gst
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]:   Sending volume_changed to MixerListener: {'volume': 100}
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:30,644 [8268:SoftwareMixer-1 (_actor_loop)] mopidy.listener
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]:   Mixer event: volume_changed(volume=100)
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:30,644 [8268:SoftwareMixer-1 (_actor_loop)] mopidy.mixer
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]:   Flags: 2
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:30,644 [8268:Audio-2 (_actor_loop)] mopidy.audio.actor
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]:   Got STATE_CHANGED bus message: old=GST_STATE_NULL new=GST_STATE_READY pending=GST_STATE_VOID_PENDING
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:30,643 [8268:MainThread] mopidy.audio.gst
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]:   Changing state to GST_STATE_READY: result=GST_STATE_CHANGE_SUCCESS
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:30,643 [8268:Audio-2 (_actor_loop)] mopidy.audio.gst
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]:   Track is not playable: file:///home/gerard/Music/test.mp3
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]: WARNING  2022-10-23 23:27:30,642 [8268:Core-6 (_actor_loop)] mopidy.core.tracklist
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]:   Changing state to GST_STATE_NULL: result=GST_STATE_CHANGE_SUCCESS
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:30,642 [8268:MainThread] mopidy.audio.gst
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]:   Setting GStreamer state to GST_STATE_PLAYING failed
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]: WARNING  2022-10-23 23:27:30,642 [8268:Audio-2 (_actor_loop)] mopidy.audio.actor
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]:   Got ERROR bus message: error=GLib.Error('Failed to connect: Connection refused', 'gst-resource-error-quark', 1) debug='../ext/pulse/pulsesink.c(615): gst_pulseringbuffer_open_device (): /GstBin:audio-sink/mopidy+audio+actor+_Outputs:mopidy+audio+actor+_outputs0/GstBin:bin0/GstPulseSink:pulsesink0'
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:30,642 [8268:MainThread] mopidy.audio.gst
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]:   Changing state to GST_STATE_PLAYING: result=GST_STATE_CHANGE_FAILURE
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:30,642 [8268:Audio-2 (_actor_loop)] mopidy.audio.gst
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]:   GStreamer error: Failed to connect: Connection refused
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]: ERROR    2022-10-23 23:27:30,642 [8268:MainThread] mopidy.audio.gst
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]:   Sending volume_changed to MixerListener: {'volume': 100}
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:30,641 [8268:SoftwareMixer-1 (_actor_loop)] mopidy.listener
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]:   Mixer event: volume_changed(volume=100)
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:30,641 [8268:SoftwareMixer-1 (_actor_loop)] mopidy.mixer
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]:   Flags: 2
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:30,640 [8268:Audio-2 (_actor_loop)] mopidy.audio.actor
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]:   Got STATE_CHANGED bus message: old=GST_STATE_NULL new=GST_STATE_READY pending=GST_STATE_VOID_PENDING
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:30,640 [8268:MainThread] mopidy.audio.gst
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]:   Changing state to GST_STATE_READY: result=GST_STATE_CHANGE_SUCCESS
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:30,640 [8268:Audio-2 (_actor_loop)] mopidy.audio.gst
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]:   Track is not playable: file:///home/gerard/Music/test.mp3
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]: WARNING  2022-10-23 23:27:30,640 [8268:Core-6 (_actor_loop)] mopidy.core.tracklist
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]:   Changing state to GST_STATE_NULL: result=GST_STATE_CHANGE_SUCCESS
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:30,639 [8268:MainThread] mopidy.audio.gst
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]:   Setting GStreamer state to GST_STATE_PLAYING failed
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]: WARNING  2022-10-23 23:27:30,639 [8268:Audio-2 (_actor_loop)] mopidy.audio.actor
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]:   Got ERROR bus message: error=GLib.Error('Failed to connect: Connection refused', 'gst-resource-error-quark', 1) debug='../ext/pulse/pulsesink.c(615): gst_pulseringbuffer_open_device (): /GstBin:audio-sink/mopidy+audio+actor+_Outputs:mopidy+audio+actor+_outputs0/GstBin:bin0/GstPulseSink:pulsesink0'
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:30,639 [8268:MainThread] mopidy.audio.gst
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]:   Changing state to GST_STATE_PLAYING: result=GST_STATE_CHANGE_FAILURE
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:30,639 [8268:Audio-2 (_actor_loop)] mopidy.audio.gst
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]:   GStreamer error: Failed to connect: Connection refused
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]: ERROR    2022-10-23 23:27:30,639 [8268:MainThread] mopidy.audio.gst
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]:   Sending volume_changed to MixerListener: {'volume': 100}
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:30,638 [8268:SoftwareMixer-1 (_actor_loop)] mopidy.listener
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]:   Mixer event: volume_changed(volume=100)
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:30,638 [8268:SoftwareMixer-1 (_actor_loop)] mopidy.mixer
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]:   Flags: 2
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:30,638 [8268:Audio-2 (_actor_loop)] mopidy.audio.actor
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]:   Got STATE_CHANGED bus message: old=GST_STATE_NULL new=GST_STATE_READY pending=GST_STATE_VOID_PENDING
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:30,637 [8268:MainThread] mopidy.audio.gst
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]:   Changing state to GST_STATE_READY: result=GST_STATE_CHANGE_SUCCESS
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:30,637 [8268:Audio-2 (_actor_loop)] mopidy.audio.gst
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]:   Track is not playable: file:///home/gerard/Music/test.mp3
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]: WARNING  2022-10-23 23:27:30,637 [8268:Core-6 (_actor_loop)] mopidy.core.tracklist
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]:   Changing state to GST_STATE_NULL: result=GST_STATE_CHANGE_SUCCESS
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:30,636 [8268:MainThread] mopidy.audio.gst
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]:   Setting GStreamer state to GST_STATE_PLAYING failed
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]: WARNING  2022-10-23 23:27:30,636 [8268:Audio-2 (_actor_loop)] mopidy.audio.actor
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]:   Changing state to GST_STATE_PLAYING: result=GST_STATE_CHANGE_FAILURE
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:30,636 [8268:Audio-2 (_actor_loop)] mopidy.audio.gst
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]:   Got ERROR bus message: error=GLib.Error('Failed to connect: Connection refused', 'gst-resource-error-quark', 1) debug='../ext/pulse/pulsesink.c(615): gst_pulseringbuffer_open_device (): /GstBin:audio-sink/mopidy+audio+actor+_Outputs:mopidy+audio+actor+_outputs0/GstBin:bin0/GstPulseSink:pulsesink0'
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:30,636 [8268:MainThread] mopidy.audio.gst
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]:   GStreamer error: Failed to connect: Connection refused
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]: ERROR    2022-10-23 23:27:30,636 [8268:MainThread] mopidy.audio.gst
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]:   Sending volume_changed to MixerListener: {'volume': 100}
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:30,635 [8268:SoftwareMixer-1 (_actor_loop)] mopidy.listener
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]:   Mixer event: volume_changed(volume=100)
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:30,635 [8268:SoftwareMixer-1 (_actor_loop)] mopidy.mixer
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]:   Flags: 2
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:30,635 [8268:Audio-2 (_actor_loop)] mopidy.audio.actor
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]:   Got STATE_CHANGED bus message: old=GST_STATE_NULL new=GST_STATE_READY pending=GST_STATE_VOID_PENDING
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:30,634 [8268:MainThread] mopidy.audio.gst
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]:   Changing state to GST_STATE_READY: result=GST_STATE_CHANGE_SUCCESS
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:30,634 [8268:Audio-2 (_actor_loop)] mopidy.audio.gst
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]:   Changing state to GST_STATE_NULL: result=GST_STATE_CHANGE_SUCCESS
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:30,634 [8268:MainThread] mopidy.audio.gst
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]:   Track is not playable: file:///home/gerard/Music/test.mp3
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]: WARNING  2022-10-23 23:27:30,634 [8268:Core-6 (_actor_loop)] mopidy.core.tracklist
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]:   Got ERROR bus message: error=GLib.Error('Failed to connect: Connection refused', 'gst-resource-error-quark', 1) debug='../ext/pulse/pulsesink.c(615): gst_pulseringbuffer_open_device (): /GstBin:audio-sink/mopidy+audio+actor+_Outputs:mopidy+audio+actor+_outputs0/GstBin:bin0/GstPulseSink:pulsesink0'
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:30,633 [8268:MainThread] mopidy.audio.gst
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]:   Setting GStreamer state to GST_STATE_PLAYING failed
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]: WARNING  2022-10-23 23:27:30,633 [8268:Audio-2 (_actor_loop)] mopidy.audio.actor
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]:   GStreamer error: Failed to connect: Connection refused
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]: ERROR    2022-10-23 23:27:30,633 [8268:MainThread] mopidy.audio.gst
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]:   Changing state to GST_STATE_PLAYING: result=GST_STATE_CHANGE_FAILURE
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:30,633 [8268:Audio-2 (_actor_loop)] mopidy.audio.gst
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]:   Sending volume_changed to MixerListener: {'volume': 100}
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:30,632 [8268:SoftwareMixer-1 (_actor_loop)] mopidy.listener
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]:   Mixer event: volume_changed(volume=100)
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:30,632 [8268:SoftwareMixer-1 (_actor_loop)] mopidy.mixer
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]:   Got STATE_CHANGED bus message: old=GST_STATE_NULL new=GST_STATE_READY pending=GST_STATE_VOID_PENDING
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:30,632 [8268:MainThread] mopidy.audio.gst
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]:   Flags: 2
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:30,632 [8268:Audio-2 (_actor_loop)] mopidy.audio.actor
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]:   Changing state to GST_STATE_READY: result=GST_STATE_CHANGE_SUCCESS
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:30,631 [8268:Audio-2 (_actor_loop)] mopidy.audio.gst
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]:   Track is not playable: file:///home/gerard/Music/test.mp3
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]: WARNING  2022-10-23 23:27:30,631 [8268:Core-6 (_actor_loop)] mopidy.core.tracklist
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]:   Changing state to GST_STATE_NULL: result=GST_STATE_CHANGE_SUCCESS
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:30,631 [8268:MainThread] mopidy.audio.gst
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]:   Setting GStreamer state to GST_STATE_PLAYING failed
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]: WARNING  2022-10-23 23:27:30,631 [8268:Audio-2 (_actor_loop)] mopidy.audio.actor
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]:   Changing state to GST_STATE_PLAYING: result=GST_STATE_CHANGE_FAILURE
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:30,631 [8268:Audio-2 (_actor_loop)] mopidy.audio.gst
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]:   Got ERROR bus message: error=GLib.Error('Failed to connect: Connection refused', 'gst-resource-error-quark', 1) debug='../ext/pulse/pulsesink.c(615): gst_pulseringbuffer_open_device (): /GstBin:audio-sink/mopidy+audio+actor+_Outputs:mopidy+audio+actor+_outputs0/GstBin:bin0/GstPulseSink:pulsesink0'
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:30,631 [8268:MainThread] mopidy.audio.gst
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]:   GStreamer error: Failed to connect: Connection refused
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]: ERROR    2022-10-23 23:27:30,630 [8268:MainThread] mopidy.audio.gst
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]:   Sending volume_changed to MixerListener: {'volume': 100}
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:30,630 [8268:SoftwareMixer-1 (_actor_loop)] mopidy.listener
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]:   Mixer event: volume_changed(volume=100)
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:30,629 [8268:SoftwareMixer-1 (_actor_loop)] mopidy.mixer
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]:   Flags: 2
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:30,629 [8268:Audio-2 (_actor_loop)] mopidy.audio.actor
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]:   Got STATE_CHANGED bus message: old=GST_STATE_NULL new=GST_STATE_READY pending=GST_STATE_VOID_PENDING
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:30,629 [8268:MainThread] mopidy.audio.gst
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]:   Changing state to GST_STATE_READY: result=GST_STATE_CHANGE_SUCCESS
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:30,628 [8268:Audio-2 (_actor_loop)] mopidy.audio.gst
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]:   Received WebSocket message from 127.0.0.1: '{"method":"core.playback.play","params":{"tlid":8},"jsonrpc":"2.0","id":47}'
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:30,628 [8268:HttpServer] mopidy.http.handlers
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 46, "result": [{"__model__": "TlTrack", "tlid": 8, "track": {"__model__": "Track", "uri": "file:///home/gerard/Music/test.mp3", "name": "Symphony No. 40 in G Minor, K. 550 - I. Molto Allegro", "artists": [{"__model__": "Artist", "name": "Czech National Symphony Orchestra"}], "album": {"__model__": "Album", "name": "Musopen Kickstarter Project", "artists": [{"__model__": "Artist", "name": "Czech National Symphony Orchestra"}]}, "composers": [{"__model__": "Artist", "name": "Wolfgang Amadeus Mozart"}], "genre": "Classical", "length": 358848}}]}'
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:30,626 [8268:HttpServer] mopidy.http.handlers
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]:   Sending tracklist_changed to CoreListener: {}
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:30,625 [8268:Core-6 (_actor_loop)] mopidy.listener
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]:   Triggering event: tracklist_changed()
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:30,625 [8268:Core-6 (_actor_loop)] mopidy.core.tracklist
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]:   element pipeline7: GstMessageAsyncDone, running-time=(guint64)18446744073709551615;
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]: TRACE    2022-10-23 23:27:30,623 [8268:FileBackend-3 (_actor_loop)] mopidy.audio.scan
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]:   element fakesink7: GstMessageTag, taglist=(taglist)"taglist\,\ encoder\=\(string\)\"LAME\\\ 32bi...
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]: TRACE    2022-10-23 23:27:30,622 [8268:FileBackend-3 (_actor_loop)] mopidy.audio.scan
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]:   element fakesink7: GstMessageTag, taglist=(taglist)"taglist\,\ encoder\=\(string\)\"LAME\\\ 32bi...
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]: TRACE    2022-10-23 23:27:30,597 [8268:FileBackend-3 (_actor_loop)] mopidy.audio.scan
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]:   element mpegaudioparse7: GstMessageDurationChanged;
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]: TRACE    2022-10-23 23:27:30,571 [8268:FileBackend-3 (_actor_loop)] mopidy.audio.scan
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]:   element decodebin7: have-audio;
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]: TRACE    2022-10-23 23:27:30,570 [8268:FileBackend-3 (_actor_loop)] mopidy.audio.scan
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]:   Looking up file URI: file:///home/gerard/Music/test.mp3
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:30,568 [8268:FileBackend-3 (_actor_loop)] mopidy.file.library
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]:   Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.add","params":{"uris":["file:///home/gerard/Music/test.mp3"],"at_position":0},"jsonrpc":"2.0","id":46}'
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:30,567 [8268:HttpServer] mopidy.http.handlers
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]:   {'id': 166656045010730, 'jsonrpc': '2.0', 'method': 'broadcast', 'result': {'message': 'Broadcast to 1 connections'}, 'recipient': 'BFXBXSDGLGDC'}
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:30,111 [8268:HttpServer] mopidy_iris.core
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]:   {'method': 'notification', 'params': {'notification': {'content': '166637467060576 changed track'}}, 'connection_id': 'BFXBXSDGLGDC'}
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:30,111 [8268:HttpServer] mopidy_iris.core
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]:   Iris websocket message received: {"jsonrpc":"2.0","id":166656045010730,"method":"broadcast","params":{"method":"notification","params":{"notification":{"content":"166637467060576 changed track"}}}}
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:30,111 [8268:HttpServer] mopidy_iris.handlers
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]:   {'id': 16665604500830, 'jsonrpc': '2.0', 'method': 'add_queue_metadata', 'result': {'message': 'Added queue metadata'}, 'recipient': 'BFXBXSDGLGDC'}
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:30,111 [8268:HttpServer] mopidy_iris.core
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]:   {'method': 'queue_metadata_changed', 'params': {'queue_metadata': {'tlid_6': {'tlid': 6, 'added_from': {'uri': 'm3u:Example%20Playlist.m3u8', 'name': 'Example Playlist', 'type': 'playlist', 'provider': 'mopidy', 'context': 'editable-playlist', 'can_edit': True}, 'added_by': 166637467060576}, 'tlid_5': {'tlid': 5, 'added_from': {'uri': 'm3u:Example%20Playlist.m3u8', 'name': 'Example Playlist', 'type': 'playlist', 'provider': 'mopidy', 'context': 'editable-playlist', 'can_edit': True}, 'added_by': 166637467060576}, 'tlid_4': {'tlid': 4, 'added_from': {'uri': 'm3u:Example%20Playlist.m3u8', 'name': 'Example Playlist', 'type': 'playlist', 'provider': 'mopidy', 'context': 'editable-playlist', 'can_edit': True}, 'added_by': 166637467060576}, 'tlid_3': {'tlid': 3, 'added_from': {'uri': 'm3u:Example%20Playlist.m3u8', 'name': 'Example Playlist', 'type': 'playlist', 'provider': 'mopidy', 'context': 'editable-playlist', 'can_edit': True}, 'added_by': 166637467060576}, 'tlid_2': {'tlid': 2, 'added_from': {'uri': 'm3u:Example%20Playlist.m3u8', 'name': 'Example Playlist', 'type': 'playlist', 'provider': 'mopidy', 'context': 'editable-playlist', 'can_edit': True}, 'added_by': 166637467060576}, 'tlid_1': {'tlid': 1, 'added_from': {'uri': 'm3u:Example%20Playlist.m3u8', 'name': 'Example Playlist', 'type': 'playlist', 'provider': 'mopidy', 'context': 'editable-playlist', 'can_edit': True}, 'added_by': 166637467060576}, 'tlid_7': {'tlid': 7, 'added_from': {'uri': 'm3u:Example%20Playlist.m3u8', 'name': 'Example Playlist', 'type': 'playlist', 'provider': 'mopidy', 'context': 'editable-playlist', 'can_edit': True}, 'added_by': 166637467060576}}}}
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:30,110 [8268:HttpServer] mopidy_iris.core
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]:   Iris websocket message received: {"jsonrpc":"2.0","id":16665604500830,"method":"add_queue_metadata","params":{"tlids":[7],"added_from":{"uri":"m3u:Example%20Playlist.m3u8","name":"Example Playlist","type":"playlist","provider":"mopidy","context":"editable-playlist","can_edit":true},"added_by":166637467060576}}
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:30,110 [8268:HttpServer] mopidy_iris.handlers
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 45, "result": [{"__model__": "TlTrack", "tlid": 7, "track": {"__model__": "Track", "uri": "file:///home/gerard/Music/test.mp3", "name": "Symphony No. 40 in G Minor, K. 550 - I. Molto Allegro", "artists": [{"__model__": "Artist", "name": "Czech National Symphony Orchestra"}], "album": {"__model__": "Album", "name": "Musopen Kickstarter Project", "artists": [{"__model__": "Artist", "name": "Czech National Symphony Orchestra"}]}, "composers": [{"__model__": "Artist", "name": "Wolfgang Amadeus Mozart"}], "genre": "Classical", "length": 358848}}, {"__model__": "TlTrack", "tlid": 6, "track": {"__model__": "Track", "uri": "file:///home/gerard/Music/test.mp3", "name": "Symphony No. 40 in G Minor, K. 550 - I. Molto Allegro", "artists": [{"__model__": "Artist", "name": "Czech National Symphony Orchestra"}], "album": {"__model__": "Album", "name": "Musopen Kickstarter Project", "artists": [{"__model__": "Artist", "name": "Czech National Symphony Orchestra"}]}, "composers": [{"__model__": "Artist", "name": "Wolfgang Amadeus Mozart"}], "genre": "Classical", "length": 358848}}, {"__model__": "TlTrack", "tlid": 5, "track": {"__model__": "Track", "uri": "file:///home/gerard/Music/test.mp3", "name": "Symphony No. 40 in G Minor, K. 550 - I. Molto Allegro", "artists": [{"__model__": "Artist", "name": "Czech National Symphony Orchestra"}], "album": {"__model__": "Album", "name": "Musopen Kickstarter Project", "artists": [{"__model__": "Artist", "name": "Czech National Symphony Orchestra"}]}, "composers": [{"__model__": "Artist", "name": "Wolfgang Amadeus Mozart"}], "genre": "Classical", "length": 358848}}, {"__model__": "TlTrack", "tlid": 4, "track": {"__model__": "Track", "uri": "file:///home/gerard/Music/test.mp3", "name": "Symphony No. 40 in G Minor, K. 550 - I. Molto Allegro", "artists": [{"__model__": "Artist", "name": "Czech National Symphony Orchestra"}], "album": {"__model__": "Album", "name": "Musopen Kickstarter Project", "artists": [{"__model__": "Artist", "name": "Czech National Symphony Orchestra"}]}, "composers": [{"__model__": "Artist", "name": "Wolfgang Amadeus Mozart"}], "genre": "Classical", "length": 358848}}, {"__model__": "TlTrack", "tlid": 3, "track": {"__model__": "Track", "uri": "file:///home/gerard/Music/test.mp3", "name": "Symphony No. 40 in G Minor, K. 550 - I. Molto Allegro", "artists": [{"__model__": "Artist", "name": "Czech National Symphony Orchestra"}], "album": {"__model__": "Album", "name": "Musopen Kickstarter Project", "artists": [{"__model__": "Artist", "name": "Czech National Symphony Orchestra"}]}, "composers": [{"__model__": "Artist", "name": "Wolfgang Amadeus Mozart"}], "genre": "Classical", "length": 358848}}, {"__model__": "TlTrack", "tlid": 2, "track": {"__model__": "Track", "uri": "file:///home/gerard/Music/test.mp3", "name": "Symphony No. 40 in G Minor, K. 550 - I. Molto Allegro", "artists": [{"__model__": "Artist", "name": "Czech National Symphony Orchestra"}], "album": {"__model__": "Album", "name": "Musopen Kickstarter Project", "artists": [{"__model__": "Artist", "name": "Czech National Symphony Orchestra"}]}, "composers": [{"__model__": "Artist", "name": "Wolfgang Amadeus Mozart"}], "genre": "Classical", "length": 358848}}, {"__model__": "TlTrack", "tlid": 1, "track": {"__model__": "Track", "uri": "file:///home/gerard/Music/test.mp3", "name": "Symphony No. 40 in G Minor, K. 550 - I. Molto Allegro", "artists": [{"__model__": "Artist", "name": "Czech National Symphony Orchestra"}], "album": {"__model__": "Album", "name": "Musopen Kickstarter Project", "artists": [{"__model__": "Artist", "name": "Czech National Symphony Orchestra"}]}, "composers": [{"__model__": "Artist", "name": "Wolfgang Amadeus Mozart"}], "genre": "Classical", "length": 358848}}]}'
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:30,109 [8268:HttpServer] mopidy.http.handlers
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]:   Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_tl_tracks","params":{},"jsonrpc":"2.0","id":45}'
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:30,108 [8268:HttpServer] mopidy.http.handlers
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]:   Sending volume_changed to CoreListener: {'volume': 100}
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:30,108 [8268:Core-6 (_actor_loop)] mopidy.listener
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]:   Sending volume_changed to CoreListener: {'volume': 100}
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:30,107 [8268:Core-6 (_actor_loop)] mopidy.listener
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 44, "result": null}'
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:30,106 [8268:HttpServer] mopidy.http.handlers
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]:   Sending volume_changed to CoreListener: {'volume': 100}
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:30,107 [8268:Core-6 (_actor_loop)] mopidy.listener
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]:   Sending volume_changed to CoreListener: {'volume': 100}
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:30,107 [8268:Core-6 (_actor_loop)] mopidy.listener
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]:   Sending volume_changed to CoreListener: {'volume': 100}
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:30,107 [8268:Core-6 (_actor_loop)] mopidy.listener
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]:   Sending volume_changed to CoreListener: {'volume': 100}
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:30,106 [8268:Core-6 (_actor_loop)] mopidy.listener
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]:   Sending volume_changed to CoreListener: {'volume': 100}
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:30,106 [8268:Core-6 (_actor_loop)] mopidy.listener
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]:   Track is not playable: file:///home/gerard/Music/test.mp3
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]: WARNING  2022-10-23 23:27:30,106 [8268:Core-6 (_actor_loop)] mopidy.core.tracklist
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]:   Changing state to GST_STATE_NULL: result=GST_STATE_CHANGE_SUCCESS
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:30,106 [8268:MainThread] mopidy.audio.gst
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]:   Setting GStreamer state to GST_STATE_PLAYING failed
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]: WARNING  2022-10-23 23:27:30,105 [8268:Audio-2 (_actor_loop)] mopidy.audio.actor
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]:   Got ERROR bus message: error=GLib.Error('Failed to connect: Connection refused', 'gst-resource-error-quark', 1) debug='../ext/pulse/pulsesink.c(615): gst_pulseringbuffer_open_device (): /GstBin:audio-sink/mopidy+audio+actor+_Outputs:mopidy+audio+actor+_outputs0/GstBin:bin0/GstPulseSink:pulsesink0'
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:30,105 [8268:MainThread] mopidy.audio.gst
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]:   Changing state to GST_STATE_PLAYING: result=GST_STATE_CHANGE_FAILURE
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:30,105 [8268:Audio-2 (_actor_loop)] mopidy.audio.gst
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]:   GStreamer error: Failed to connect: Connection refused
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]: ERROR    2022-10-23 23:27:30,105 [8268:MainThread] mopidy.audio.gst
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]:   Sending volume_changed to MixerListener: {'volume': 100}
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:30,104 [8268:SoftwareMixer-1 (_actor_loop)] mopidy.listener
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]:   Mixer event: volume_changed(volume=100)
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:30,104 [8268:SoftwareMixer-1 (_actor_loop)] mopidy.mixer
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]:   Flags: 2
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:30,104 [8268:Audio-2 (_actor_loop)] mopidy.audio.actor
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]:   Got STATE_CHANGED bus message: old=GST_STATE_NULL new=GST_STATE_READY pending=GST_STATE_VOID_PENDING
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:30,104 [8268:MainThread] mopidy.audio.gst
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]:   Changing state to GST_STATE_READY: result=GST_STATE_CHANGE_SUCCESS
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:30,103 [8268:Audio-2 (_actor_loop)] mopidy.audio.gst
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]:   Changing state to GST_STATE_NULL: result=GST_STATE_CHANGE_SUCCESS
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:30,103 [8268:MainThread] mopidy.audio.gst
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]:   Track is not playable: file:///home/gerard/Music/test.mp3
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]: WARNING  2022-10-23 23:27:30,103 [8268:Core-6 (_actor_loop)] mopidy.core.tracklist
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]:   Setting GStreamer state to GST_STATE_PLAYING failed
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]: WARNING  2022-10-23 23:27:30,103 [8268:Audio-2 (_actor_loop)] mopidy.audio.actor
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]:   Changing state to GST_STATE_PLAYING: result=GST_STATE_CHANGE_FAILURE
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:30,103 [8268:Audio-2 (_actor_loop)] mopidy.audio.gst
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]:   Got ERROR bus message: error=GLib.Error('Failed to connect: Connection refused', 'gst-resource-error-quark', 1) debug='../ext/pulse/pulsesink.c(615): gst_pulseringbuffer_open_device (): /GstBin:audio-sink/mopidy+audio+actor+_Outputs:mopidy+audio+actor+_outputs0/GstBin:bin0/GstPulseSink:pulsesink0'
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:30,102 [8268:MainThread] mopidy.audio.gst
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]:   GStreamer error: Failed to connect: Connection refused
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]: ERROR    2022-10-23 23:27:30,102 [8268:MainThread] mopidy.audio.gst
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]:   Sending volume_changed to MixerListener: {'volume': 100}
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:30,101 [8268:SoftwareMixer-1 (_actor_loop)] mopidy.listener
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]:   Mixer event: volume_changed(volume=100)
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:30,101 [8268:SoftwareMixer-1 (_actor_loop)] mopidy.mixer
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]:   Flags: 2
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:30,101 [8268:Audio-2 (_actor_loop)] mopidy.audio.actor
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]:   Got STATE_CHANGED bus message: old=GST_STATE_NULL new=GST_STATE_READY pending=GST_STATE_VOID_PENDING
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:30,101 [8268:MainThread] mopidy.audio.gst
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]:   Changing state to GST_STATE_READY: result=GST_STATE_CHANGE_SUCCESS
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:30,101 [8268:Audio-2 (_actor_loop)] mopidy.audio.gst
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]:   Track is not playable: file:///home/gerard/Music/test.mp3
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]: WARNING  2022-10-23 23:27:30,100 [8268:Core-6 (_actor_loop)] mopidy.core.tracklist
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]:   Changing state to GST_STATE_NULL: result=GST_STATE_CHANGE_SUCCESS
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:30,100 [8268:MainThread] mopidy.audio.gst
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]:   Setting GStreamer state to GST_STATE_PLAYING failed
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]: WARNING  2022-10-23 23:27:30,099 [8268:Audio-2 (_actor_loop)] mopidy.audio.actor
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]:   Got ERROR bus message: error=GLib.Error('Failed to connect: Connection refused', 'gst-resource-error-quark', 1) debug='../ext/pulse/pulsesink.c(615): gst_pulseringbuffer_open_device (): /GstBin:audio-sink/mopidy+audio+actor+_Outputs:mopidy+audio+actor+_outputs0/GstBin:bin0/GstPulseSink:pulsesink0'
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:30,099 [8268:MainThread] mopidy.audio.gst
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]:   Changing state to GST_STATE_PLAYING: result=GST_STATE_CHANGE_FAILURE
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:30,099 [8268:Audio-2 (_actor_loop)] mopidy.audio.gst
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]:   GStreamer error: Failed to connect: Connection refused
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]: ERROR    2022-10-23 23:27:30,099 [8268:MainThread] mopidy.audio.gst
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]:   Sending volume_changed to MixerListener: {'volume': 100}
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:30,098 [8268:SoftwareMixer-1 (_actor_loop)] mopidy.listener
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]:   Mixer event: volume_changed(volume=100)
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:30,098 [8268:SoftwareMixer-1 (_actor_loop)] mopidy.mixer
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]:   Flags: 2
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:30,098 [8268:Audio-2 (_actor_loop)] mopidy.audio.actor
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]:   Got STATE_CHANGED bus message: old=GST_STATE_NULL new=GST_STATE_READY pending=GST_STATE_VOID_PENDING
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:30,098 [8268:MainThread] mopidy.audio.gst
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]:   Changing state to GST_STATE_READY: result=GST_STATE_CHANGE_SUCCESS
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:30,098 [8268:Audio-2 (_actor_loop)] mopidy.audio.gst
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]:   Track is not playable: file:///home/gerard/Music/test.mp3
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]: WARNING  2022-10-23 23:27:30,097 [8268:Core-6 (_actor_loop)] mopidy.core.tracklist
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]:   Changing state to GST_STATE_NULL: result=GST_STATE_CHANGE_SUCCESS
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:30,097 [8268:MainThread] mopidy.audio.gst
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]:   Setting GStreamer state to GST_STATE_PLAYING failed
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]: WARNING  2022-10-23 23:27:30,097 [8268:Audio-2 (_actor_loop)] mopidy.audio.actor
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]:   Got ERROR bus message: error=GLib.Error('Failed to connect: Connection refused', 'gst-resource-error-quark', 1) debug='../ext/pulse/pulsesink.c(615): gst_pulseringbuffer_open_device (): /GstBin:audio-sink/mopidy+audio+actor+_Outputs:mopidy+audio+actor+_outputs0/GstBin:bin0/GstPulseSink:pulsesink0'
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:30,097 [8268:MainThread] mopidy.audio.gst
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]:   Changing state to GST_STATE_PLAYING: result=GST_STATE_CHANGE_FAILURE
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:30,097 [8268:Audio-2 (_actor_loop)] mopidy.audio.gst
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]:   GStreamer error: Failed to connect: Connection refused
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]: ERROR    2022-10-23 23:27:30,097 [8268:MainThread] mopidy.audio.gst
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]:   Sending volume_changed to MixerListener: {'volume': 100}
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:30,096 [8268:SoftwareMixer-1 (_actor_loop)] mopidy.listener
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]:   Mixer event: volume_changed(volume=100)
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:30,096 [8268:SoftwareMixer-1 (_actor_loop)] mopidy.mixer
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]:   Flags: 2
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:30,095 [8268:Audio-2 (_actor_loop)] mopidy.audio.actor
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]:   Got STATE_CHANGED bus message: old=GST_STATE_NULL new=GST_STATE_READY pending=GST_STATE_VOID_PENDING
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:30,095 [8268:MainThread] mopidy.audio.gst
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]:   Changing state to GST_STATE_READY: result=GST_STATE_CHANGE_SUCCESS
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:30,095 [8268:Audio-2 (_actor_loop)] mopidy.audio.gst
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]:   Track is not playable: file:///home/gerard/Music/test.mp3
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]: WARNING  2022-10-23 23:27:30,094 [8268:Core-6 (_actor_loop)] mopidy.core.tracklist
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]:   Changing state to GST_STATE_NULL: result=GST_STATE_CHANGE_SUCCESS
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:30,094 [8268:MainThread] mopidy.audio.gst
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]:   Setting GStreamer state to GST_STATE_PLAYING failed
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]: WARNING  2022-10-23 23:27:30,094 [8268:Audio-2 (_actor_loop)] mopidy.audio.actor
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]:   Got ERROR bus message: error=GLib.Error('Failed to connect: Connection refused', 'gst-resource-error-quark', 1) debug='../ext/pulse/pulsesink.c(615): gst_pulseringbuffer_open_device (): /GstBin:audio-sink/mopidy+audio+actor+_Outputs:mopidy+audio+actor+_outputs0/GstBin:bin0/GstPulseSink:pulsesink0'
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:30,094 [8268:MainThread] mopidy.audio.gst
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]:   Changing state to GST_STATE_PLAYING: result=GST_STATE_CHANGE_FAILURE
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:30,094 [8268:Audio-2 (_actor_loop)] mopidy.audio.gst
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]:   GStreamer error: Failed to connect: Connection refused
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]: ERROR    2022-10-23 23:27:30,094 [8268:MainThread] mopidy.audio.gst
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]:   Sending volume_changed to MixerListener: {'volume': 100}
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:30,093 [8268:SoftwareMixer-1 (_actor_loop)] mopidy.listener
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]:   Mixer event: volume_changed(volume=100)
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:30,093 [8268:SoftwareMixer-1 (_actor_loop)] mopidy.mixer
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]:   Got STATE_CHANGED bus message: old=GST_STATE_NULL new=GST_STATE_READY pending=GST_STATE_VOID_PENDING
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:30,093 [8268:MainThread] mopidy.audio.gst
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]:   Flags: 2
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:30,092 [8268:Audio-2 (_actor_loop)] mopidy.audio.actor
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]:   Changing state to GST_STATE_READY: result=GST_STATE_CHANGE_SUCCESS
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:30,092 [8268:Audio-2 (_actor_loop)] mopidy.audio.gst
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]:   Changing state to GST_STATE_NULL: result=GST_STATE_CHANGE_SUCCESS
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:30,092 [8268:MainThread] mopidy.audio.gst
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]:   Track is not playable: file:///home/gerard/Music/test.mp3
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]: WARNING  2022-10-23 23:27:30,091 [8268:Core-6 (_actor_loop)] mopidy.core.tracklist
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]:   Setting GStreamer state to GST_STATE_PLAYING failed
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]: WARNING  2022-10-23 23:27:30,091 [8268:Audio-2 (_actor_loop)] mopidy.audio.actor
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]:   Changing state to GST_STATE_PLAYING: result=GST_STATE_CHANGE_FAILURE
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:30,091 [8268:Audio-2 (_actor_loop)] mopidy.audio.gst
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]:   Got ERROR bus message: error=GLib.Error('Failed to connect: Connection refused', 'gst-resource-error-quark', 1) debug='../ext/pulse/pulsesink.c(615): gst_pulseringbuffer_open_device (): /GstBin:audio-sink/mopidy+audio+actor+_Outputs:mopidy+audio+actor+_outputs0/GstBin:bin0/GstPulseSink:pulsesink0'
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:30,091 [8268:MainThread] mopidy.audio.gst
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]:   GStreamer error: Failed to connect: Connection refused
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]: ERROR    2022-10-23 23:27:30,091 [8268:MainThread] mopidy.audio.gst
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]:   Sending volume_changed to MixerListener: {'volume': 100}
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:30,090 [8268:SoftwareMixer-1 (_actor_loop)] mopidy.listener
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]:   Mixer event: volume_changed(volume=100)
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:30,090 [8268:SoftwareMixer-1 (_actor_loop)] mopidy.mixer
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]:   Flags: 2
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:30,088 [8268:Audio-2 (_actor_loop)] mopidy.audio.actor
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]:   Got STATE_CHANGED bus message: old=GST_STATE_NULL new=GST_STATE_READY pending=GST_STATE_VOID_PENDING
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:30,088 [8268:MainThread] mopidy.audio.gst
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]:   Changing state to GST_STATE_READY: result=GST_STATE_CHANGE_SUCCESS
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:30,088 [8268:Audio-2 (_actor_loop)] mopidy.audio.gst
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]:   Track is not playable: file:///home/gerard/Music/test.mp3
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]: WARNING  2022-10-23 23:27:30,087 [8268:Core-6 (_actor_loop)] mopidy.core.tracklist
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]:   Changing state to GST_STATE_NULL: result=GST_STATE_CHANGE_SUCCESS
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:30,087 [8268:MainThread] mopidy.audio.gst
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]:   Got ERROR bus message: error=GLib.Error('Failed to connect: Connection refused', 'gst-resource-error-quark', 1) debug='../ext/pulse/pulsesink.c(615): gst_pulseringbuffer_open_device (): /GstBin:audio-sink/mopidy+audio+actor+_Outputs:mopidy+audio+actor+_outputs0/GstBin:bin0/GstPulseSink:pulsesink0'
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:30,087 [8268:MainThread] mopidy.audio.gst
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]:   GStreamer error: Failed to connect: Connection refused
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]: ERROR    2022-10-23 23:27:30,087 [8268:MainThread] mopidy.audio.gst
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]:   Setting GStreamer state to GST_STATE_PLAYING failed
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]: WARNING  2022-10-23 23:27:30,086 [8268:Audio-2 (_actor_loop)] mopidy.audio.actor
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]:   Changing state to GST_STATE_PLAYING: result=GST_STATE_CHANGE_FAILURE
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:30,086 [8268:Audio-2 (_actor_loop)] mopidy.audio.gst
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]:   Sending volume_changed to MixerListener: {'volume': 100}
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:30,085 [8268:SoftwareMixer-1 (_actor_loop)] mopidy.listener
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]:   Mixer event: volume_changed(volume=100)
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:30,085 [8268:SoftwareMixer-1 (_actor_loop)] mopidy.mixer
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]:   Flags: 2
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:30,084 [8268:Audio-2 (_actor_loop)] mopidy.audio.actor
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]:   Got STATE_CHANGED bus message: old=GST_STATE_NULL new=GST_STATE_READY pending=GST_STATE_VOID_PENDING
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:30,084 [8268:MainThread] mopidy.audio.gst
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]:   Changing state to GST_STATE_READY: result=GST_STATE_CHANGE_SUCCESS
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:30,084 [8268:Audio-2 (_actor_loop)] mopidy.audio.gst
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]:   Received WebSocket message from 127.0.0.1: '{"method":"core.playback.play","params":{"tlid":7},"jsonrpc":"2.0","id":44}'
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:30,083 [8268:HttpServer] mopidy.http.handlers
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 43, "result": [{"__model__": "TlTrack", "tlid": 7, "track": {"__model__": "Track", "uri": "file:///home/gerard/Music/test.mp3", "name": "Symphony No. 40 in G Minor, K. 550 - I. Molto Allegro", "artists": [{"__model__": "Artist", "name": "Czech National Symphony Orchestra"}], "album": {"__model__": "Album", "name": "Musopen Kickstarter Project", "artists": [{"__model__": "Artist", "name": "Czech National Symphony Orchestra"}]}, "composers": [{"__model__": "Artist", "name": "Wolfgang Amadeus Mozart"}], "genre": "Classical", "length": 358848}}]}'
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:30,081 [8268:HttpServer] mopidy.http.handlers
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]:   Sending tracklist_changed to CoreListener: {}
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:30,080 [8268:Core-6 (_actor_loop)] mopidy.listener
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]:   Triggering event: tracklist_changed()
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:30,080 [8268:Core-6 (_actor_loop)] mopidy.core.tracklist
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]:   element pipeline6: GstMessageAsyncDone, running-time=(guint64)18446744073709551615;
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]: TRACE    2022-10-23 23:27:30,078 [8268:FileBackend-3 (_actor_loop)] mopidy.audio.scan
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]:   element fakesink6: GstMessageTag, taglist=(taglist)"taglist\,\ encoder\=\(string\)\"LAME\\\ 32bi...
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]: TRACE    2022-10-23 23:27:30,078 [8268:FileBackend-3 (_actor_loop)] mopidy.audio.scan
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]:   element fakesink6: GstMessageTag, taglist=(taglist)"taglist\,\ encoder\=\(string\)\"LAME\\\ 32bi...
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]: TRACE    2022-10-23 23:27:30,051 [8268:FileBackend-3 (_actor_loop)] mopidy.audio.scan
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]:   element mpegaudioparse6: GstMessageDurationChanged;
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]: TRACE    2022-10-23 23:27:30,025 [8268:FileBackend-3 (_actor_loop)] mopidy.audio.scan
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]:   element decodebin6: have-audio;
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]: TRACE    2022-10-23 23:27:30,025 [8268:FileBackend-3 (_actor_loop)] mopidy.audio.scan
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]:   Looking up file URI: file:///home/gerard/Music/test.mp3
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:30,022 [8268:FileBackend-3 (_actor_loop)] mopidy.file.library
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]:   Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.add","params":{"uris":["file:///home/gerard/Music/test.mp3"],"at_position":0},"jsonrpc":"2.0","id":43}'
okt 23 23:27:30 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:30,022 [8268:HttpServer] mopidy.http.handlers
okt 23 23:27:29 Desktop-Ubuntu mopidy[8268]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 42, "result": 6}'
okt 23 23:27:29 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:29,882 [8268:HttpServer] mopidy.http.handlers
okt 23 23:27:29 Desktop-Ubuntu mopidy[8268]:   Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_next_tlid","params":{},"jsonrpc":"2.0","id":42}'
okt 23 23:27:29 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:29,881 [8268:HttpServer] mopidy.http.handlers
okt 23 23:27:28 Desktop-Ubuntu mopidy[8268]:   {'id': 16665604488973, 'jsonrpc': '2.0', 'method': 'broadcast', 'result': {'message': 'Broadcast to 1 connections'}, 'recipient': 'BFXBXSDGLGDC'}
okt 23 23:27:28 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:28,898 [8268:HttpServer] mopidy_iris.core
okt 23 23:27:28 Desktop-Ubuntu mopidy[8268]:   {'method': 'notification', 'params': {'notification': {'content': '166637467060576 changed track'}}, 'connection_id': 'BFXBXSDGLGDC'}
okt 23 23:27:28 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:28,898 [8268:HttpServer] mopidy_iris.core
okt 23 23:27:28 Desktop-Ubuntu mopidy[8268]:   Iris websocket message received: {"jsonrpc":"2.0","id":16665604488973,"method":"broadcast","params":{"method":"notification","params":{"notification":{"content":"166637467060576 changed track"}}}}
okt 23 23:27:28 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:28,898 [8268:HttpServer] mopidy_iris.handlers
okt 23 23:27:28 Desktop-Ubuntu mopidy[8268]:   {'id': 166656044887782, 'jsonrpc': '2.0', 'method': 'add_queue_metadata', 'result': {'message': 'Added queue metadata'}, 'recipient': 'BFXBXSDGLGDC'}
okt 23 23:27:28 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:28,898 [8268:HttpServer] mopidy_iris.core
okt 23 23:27:28 Desktop-Ubuntu mopidy[8268]:   {'method': 'queue_metadata_changed', 'params': {'queue_metadata': {'tlid_5': {'tlid': 5, 'added_from': {'uri': 'm3u:Example%20Playlist.m3u8', 'name': 'Example Playlist', 'type': 'playlist', 'provider': 'mopidy', 'context': 'editable-playlist', 'can_edit': True}, 'added_by': 166637467060576}, 'tlid_4': {'tlid': 4, 'added_from': {'uri': 'm3u:Example%20Playlist.m3u8', 'name': 'Example Playlist', 'type': 'playlist', 'provider': 'mopidy', 'context': 'editable-playlist', 'can_edit': True}, 'added_by': 166637467060576}, 'tlid_3': {'tlid': 3, 'added_from': {'uri': 'm3u:Example%20Playlist.m3u8', 'name': 'Example Playlist', 'type': 'playlist', 'provider': 'mopidy', 'context': 'editable-playlist', 'can_edit': True}, 'added_by': 166637467060576}, 'tlid_2': {'tlid': 2, 'added_from': {'uri': 'm3u:Example%20Playlist.m3u8', 'name': 'Example Playlist', 'type': 'playlist', 'provider': 'mopidy', 'context': 'editable-playlist', 'can_edit': True}, 'added_by': 166637467060576}, 'tlid_1': {'tlid': 1, 'added_from': {'uri': 'm3u:Example%20Playlist.m3u8', 'name': 'Example Playlist', 'type': 'playlist', 'provider': 'mopidy', 'context': 'editable-playlist', 'can_edit': True}, 'added_by': 166637467060576}, 'tlid_6': {'tlid': 6, 'added_from': {'uri': 'm3u:Example%20Playlist.m3u8', 'name': 'Example Playlist', 'type': 'playlist', 'provider': 'mopidy', 'context': 'editable-playlist', 'can_edit': True}, 'added_by': 166637467060576}}}}
okt 23 23:27:28 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:28,898 [8268:HttpServer] mopidy_iris.core
okt 23 23:27:28 Desktop-Ubuntu mopidy[8268]:   Iris websocket message received: {"jsonrpc":"2.0","id":166656044887782,"method":"add_queue_metadata","params":{"tlids":[6],"added_from":{"uri":"m3u:Example%20Playlist.m3u8","name":"Example Playlist","type":"playlist","provider":"mopidy","context":"editable-playlist","can_edit":true},"added_by":166637467060576}}
okt 23 23:27:28 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:28,898 [8268:HttpServer] mopidy_iris.handlers
okt 23 23:27:28 Desktop-Ubuntu mopidy[8268]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 41, "result": [{"__model__": "TlTrack", "tlid": 6, "track": {"__model__": "Track", "uri": "file:///home/gerard/Music/test.mp3", "name": "Symphony No. 40 in G Minor, K. 550 - I. Molto Allegro", "artists": [{"__model__": "Artist", "name": "Czech National Symphony Orchestra"}], "album": {"__model__": "Album", "name": "Musopen Kickstarter Project", "artists": [{"__model__": "Artist", "name": "Czech National Symphony Orchestra"}]}, "composers": [{"__model__": "Artist", "name": "Wolfgang Amadeus Mozart"}], "genre": "Classical", "length": 358848}}, {"__model__": "TlTrack", "tlid": 5, "track": {"__model__": "Track", "uri": "file:///home/gerard/Music/test.mp3", "name": "Symphony No. 40 in G Minor, K. 550 - I. Molto Allegro", "artists": [{"__model__": "Artist", "name": "Czech National Symphony Orchestra"}], "album": {"__model__": "Album", "name": "Musopen Kickstarter Project", "artists": [{"__model__": "Artist", "name": "Czech National Symphony Orchestra"}]}, "composers": [{"__model__": "Artist", "name": "Wolfgang Amadeus Mozart"}], "genre": "Classical", "length": 358848}}, {"__model__": "TlTrack", "tlid": 4, "track": {"__model__": "Track", "uri": "file:///home/gerard/Music/test.mp3", "name": "Symphony No. 40 in G Minor, K. 550 - I. Molto Allegro", "artists": [{"__model__": "Artist", "name": "Czech National Symphony Orchestra"}], "album": {"__model__": "Album", "name": "Musopen Kickstarter Project", "artists": [{"__model__": "Artist", "name": "Czech National Symphony Orchestra"}]}, "composers": [{"__model__": "Artist", "name": "Wolfgang Amadeus Mozart"}], "genre": "Classical", "length": 358848}}, {"__model__": "TlTrack", "tlid": 3, "track": {"__model__": "Track", "uri": "file:///home/gerard/Music/test.mp3", "name": "Symphony No. 40 in G Minor, K. 550 - I. Molto Allegro", "artists": [{"__model__": "Artist", "name": "Czech National Symphony Orchestra"}], "album": {"__model__": "Album", "name": "Musopen Kickstarter Project", "artists": [{"__model__": "Artist", "name": "Czech National Symphony Orchestra"}]}, "composers": [{"__model__": "Artist", "name": "Wolfgang Amadeus Mozart"}], "genre": "Classical", "length": 358848}}, {"__model__": "TlTrack", "tlid": 2, "track": {"__model__": "Track", "uri": "file:///home/gerard/Music/test.mp3", "name": "Symphony No. 40 in G Minor, K. 550 - I. Molto Allegro", "artists": [{"__model__": "Artist", "name": "Czech National Symphony Orchestra"}], "album": {"__model__": "Album", "name": "Musopen Kickstarter Project", "artists": [{"__model__": "Artist", "name": "Czech National Symphony Orchestra"}]}, "composers": [{"__model__": "Artist", "name": "Wolfgang Amadeus Mozart"}], "genre": "Classical", "length": 358848}}, {"__model__": "TlTrack", "tlid": 1, "track": {"__model__": "Track", "uri": "file:///home/gerard/Music/test.mp3", "name": "Symphony No. 40 in G Minor, K. 550 - I. Molto Allegro", "artists": [{"__model__": "Artist", "name": "Czech National Symphony Orchestra"}], "album": {"__model__": "Album", "name": "Musopen Kickstarter Project", "artists": [{"__model__": "Artist", "name": "Czech National Symphony Orchestra"}]}, "composers": [{"__model__": "Artist", "name": "Wolfgang Amadeus Mozart"}], "genre": "Classical", "length": 358848}}]}'
okt 23 23:27:28 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:28,897 [8268:HttpServer] mopidy.http.handlers
okt 23 23:27:28 Desktop-Ubuntu mopidy[8268]:   Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_tl_tracks","params":{},"jsonrpc":"2.0","id":41}'
okt 23 23:27:28 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:28,896 [8268:HttpServer] mopidy.http.handlers
okt 23 23:27:28 Desktop-Ubuntu mopidy[8268]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 40, "result": null}'
okt 23 23:27:28 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:28,895 [8268:HttpServer] mopidy.http.handlers
okt 23 23:27:28 Desktop-Ubuntu mopidy[8268]:   Sending volume_changed to CoreListener: {'volume': 100}
okt 23 23:27:28 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:28,895 [8268:Core-6 (_actor_loop)] mopidy.listener
okt 23 23:27:28 Desktop-Ubuntu mopidy[8268]:   Sending volume_changed to CoreListener: {'volume': 100}
okt 23 23:27:28 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:28,895 [8268:Core-6 (_actor_loop)] mopidy.listener
okt 23 23:27:28 Desktop-Ubuntu mopidy[8268]:   Sending volume_changed to CoreListener: {'volume': 100}
okt 23 23:27:28 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:28,894 [8268:Core-6 (_actor_loop)] mopidy.listener
okt 23 23:27:28 Desktop-Ubuntu mopidy[8268]:   Sending volume_changed to CoreListener: {'volume': 100}
okt 23 23:27:28 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:28,894 [8268:Core-6 (_actor_loop)] mopidy.listener
okt 23 23:27:28 Desktop-Ubuntu mopidy[8268]:   Sending volume_changed to CoreListener: {'volume': 100}
okt 23 23:27:28 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:28,894 [8268:Core-6 (_actor_loop)] mopidy.listener
okt 23 23:27:28 Desktop-Ubuntu mopidy[8268]:   Sending volume_changed to CoreListener: {'volume': 100}
okt 23 23:27:28 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:28,894 [8268:Core-6 (_actor_loop)] mopidy.listener
okt 23 23:27:28 Desktop-Ubuntu mopidy[8268]:   Track is not playable: file:///home/gerard/Music/test.mp3
okt 23 23:27:28 Desktop-Ubuntu mopidy[8268]: WARNING  2022-10-23 23:27:28,894 [8268:Core-6 (_actor_loop)] mopidy.core.tracklist
okt 23 23:27:28 Desktop-Ubuntu mopidy[8268]:   Changing state to GST_STATE_NULL: result=GST_STATE_CHANGE_SUCCESS
okt 23 23:27:28 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:28,894 [8268:MainThread] mopidy.audio.gst
okt 23 23:27:28 Desktop-Ubuntu mopidy[8268]:   Setting GStreamer state to GST_STATE_PLAYING failed
okt 23 23:27:28 Desktop-Ubuntu mopidy[8268]: WARNING  2022-10-23 23:27:28,894 [8268:Audio-2 (_actor_loop)] mopidy.audio.actor
okt 23 23:27:28 Desktop-Ubuntu mopidy[8268]:   Changing state to GST_STATE_PLAYING: result=GST_STATE_CHANGE_FAILURE
okt 23 23:27:28 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:28,893 [8268:Audio-2 (_actor_loop)] mopidy.audio.gst
okt 23 23:27:28 Desktop-Ubuntu mopidy[8268]:   Got ERROR bus message: error=GLib.Error('Failed to connect: Connection refused', 'gst-resource-error-quark', 1) debug='../ext/pulse/pulsesink.c(615): gst_pulseringbuffer_open_device (): /GstBin:audio-sink/mopidy+audio+actor+_Outputs:mopidy+audio+actor+_outputs0/GstBin:bin0/GstPulseSink:pulsesink0'
okt 23 23:27:28 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:28,893 [8268:MainThread] mopidy.audio.gst
okt 23 23:27:28 Desktop-Ubuntu mopidy[8268]:   GStreamer error: Failed to connect: Connection refused
okt 23 23:27:28 Desktop-Ubuntu mopidy[8268]: ERROR    2022-10-23 23:27:28,893 [8268:MainThread] mopidy.audio.gst
okt 23 23:27:28 Desktop-Ubuntu mopidy[8268]:   Sending volume_changed to MixerListener: {'volume': 100}
okt 23 23:27:28 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:28,892 [8268:SoftwareMixer-1 (_actor_loop)] mopidy.listener
okt 23 23:27:28 Desktop-Ubuntu mopidy[8268]:   Mixer event: volume_changed(volume=100)
okt 23 23:27:28 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:28,892 [8268:SoftwareMixer-1 (_actor_loop)] mopidy.mixer
okt 23 23:27:28 Desktop-Ubuntu mopidy[8268]:   Flags: 2
okt 23 23:27:28 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:28,892 [8268:Audio-2 (_actor_loop)] mopidy.audio.actor
okt 23 23:27:28 Desktop-Ubuntu mopidy[8268]:   Got STATE_CHANGED bus message: old=GST_STATE_NULL new=GST_STATE_READY pending=GST_STATE_VOID_PENDING
okt 23 23:27:28 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:28,892 [8268:MainThread] mopidy.audio.gst
okt 23 23:27:28 Desktop-Ubuntu mopidy[8268]:   Changing state to GST_STATE_READY: result=GST_STATE_CHANGE_SUCCESS
okt 23 23:27:28 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:28,892 [8268:Audio-2 (_actor_loop)] mopidy.audio.gst
okt 23 23:27:28 Desktop-Ubuntu mopidy[8268]:   Changing state to GST_STATE_NULL: result=GST_STATE_CHANGE_SUCCESS
okt 23 23:27:28 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:28,891 [8268:MainThread] mopidy.audio.gst
okt 23 23:27:28 Desktop-Ubuntu mopidy[8268]:   Track is not playable: file:///home/gerard/Music/test.mp3
okt 23 23:27:28 Desktop-Ubuntu mopidy[8268]: WARNING  2022-10-23 23:27:28,891 [8268:Core-6 (_actor_loop)] mopidy.core.tracklist
okt 23 23:27:28 Desktop-Ubuntu mopidy[8268]:   Got ERROR bus message: error=GLib.Error('Failed to connect: Connection refused', 'gst-resource-error-quark', 1) debug='../ext/pulse/pulsesink.c(615): gst_pulseringbuffer_open_device (): /GstBin:audio-sink/mopidy+audio+actor+_Outputs:mopidy+audio+actor+_outputs0/GstBin:bin0/GstPulseSink:pulsesink0'
okt 23 23:27:28 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:28,891 [8268:MainThread] mopidy.audio.gst
okt 23 23:27:28 Desktop-Ubuntu mopidy[8268]:   GStreamer error: Failed to connect: Connection refused
okt 23 23:27:28 Desktop-Ubuntu mopidy[8268]: ERROR    2022-10-23 23:27:28,891 [8268:MainThread] mopidy.audio.gst
okt 23 23:27:28 Desktop-Ubuntu mopidy[8268]:   Setting GStreamer state to GST_STATE_PLAYING failed
okt 23 23:27:28 Desktop-Ubuntu mopidy[8268]: WARNING  2022-10-23 23:27:28,891 [8268:Audio-2 (_actor_loop)] mopidy.audio.actor
okt 23 23:27:28 Desktop-Ubuntu mopidy[8268]:   Changing state to GST_STATE_PLAYING: result=GST_STATE_CHANGE_FAILURE
okt 23 23:27:28 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:28,891 [8268:Audio-2 (_actor_loop)] mopidy.audio.gst
okt 23 23:27:28 Desktop-Ubuntu mopidy[8268]:   Sending volume_changed to MixerListener: {'volume': 100}
okt 23 23:27:28 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:28,890 [8268:SoftwareMixer-1 (_actor_loop)] mopidy.listener
okt 23 23:27:28 Desktop-Ubuntu mopidy[8268]:   Mixer event: volume_changed(volume=100)
okt 23 23:27:28 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:28,890 [8268:SoftwareMixer-1 (_actor_loop)] mopidy.mixer
okt 23 23:27:28 Desktop-Ubuntu mopidy[8268]:   Flags: 2
okt 23 23:27:28 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:28,889 [8268:Audio-2 (_actor_loop)] mopidy.audio.actor
okt 23 23:27:28 Desktop-Ubuntu mopidy[8268]:   Got STATE_CHANGED bus message: old=GST_STATE_NULL new=GST_STATE_READY pending=GST_STATE_VOID_PENDING
okt 23 23:27:28 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:28,889 [8268:MainThread] mopidy.audio.gst
okt 23 23:27:28 Desktop-Ubuntu mopidy[8268]:   Changing state to GST_STATE_READY: result=GST_STATE_CHANGE_SUCCESS
okt 23 23:27:28 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:28,889 [8268:Audio-2 (_actor_loop)] mopidy.audio.gst
okt 23 23:27:28 Desktop-Ubuntu mopidy[8268]:   Track is not playable: file:///home/gerard/Music/test.mp3
okt 23 23:27:28 Desktop-Ubuntu mopidy[8268]: WARNING  2022-10-23 23:27:28,889 [8268:Core-6 (_actor_loop)] mopidy.core.tracklist
okt 23 23:27:28 Desktop-Ubuntu mopidy[8268]:   Changing state to GST_STATE_NULL: result=GST_STATE_CHANGE_SUCCESS
okt 23 23:27:28 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:28,889 [8268:MainThread] mopidy.audio.gst
okt 23 23:27:28 Desktop-Ubuntu mopidy[8268]:   Setting GStreamer state to GST_STATE_PLAYING failed
okt 23 23:27:28 Desktop-Ubuntu mopidy[8268]: WARNING  2022-10-23 23:27:28,888 [8268:Audio-2 (_actor_loop)] mopidy.audio.actor
okt 23 23:27:28 Desktop-Ubuntu mopidy[8268]:   Got ERROR bus message: error=GLib.Error('Failed to connect: Connection refused', 'gst-resource-error-quark', 1) debug='../ext/pulse/pulsesink.c(615): gst_pulseringbuffer_open_device (): /GstBin:audio-sink/mopidy+audio+actor+_Outputs:mopidy+audio+actor+_outputs0/GstBin:bin0/GstPulseSink:pulsesink0'
okt 23 23:27:28 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:28,888 [8268:MainThread] mopidy.audio.gst
okt 23 23:27:28 Desktop-Ubuntu mopidy[8268]:   Changing state to GST_STATE_PLAYING: result=GST_STATE_CHANGE_FAILURE
okt 23 23:27:28 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:28,888 [8268:Audio-2 (_actor_loop)] mopidy.audio.gst
okt 23 23:27:28 Desktop-Ubuntu mopidy[8268]:   GStreamer error: Failed to connect: Connection refused
okt 23 23:27:28 Desktop-Ubuntu mopidy[8268]: ERROR    2022-10-23 23:27:28,888 [8268:MainThread] mopidy.audio.gst
okt 23 23:27:28 Desktop-Ubuntu mopidy[8268]:   Sending volume_changed to MixerListener: {'volume': 100}
okt 23 23:27:28 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:28,887 [8268:SoftwareMixer-1 (_actor_loop)] mopidy.listener
okt 23 23:27:28 Desktop-Ubuntu mopidy[8268]:   Mixer event: volume_changed(volume=100)
okt 23 23:27:28 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:28,887 [8268:SoftwareMixer-1 (_actor_loop)] mopidy.mixer
okt 23 23:27:28 Desktop-Ubuntu mopidy[8268]:   Flags: 2
okt 23 23:27:28 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:28,887 [8268:Audio-2 (_actor_loop)] mopidy.audio.actor
okt 23 23:27:28 Desktop-Ubuntu mopidy[8268]:   Got STATE_CHANGED bus message: old=GST_STATE_NULL new=GST_STATE_READY pending=GST_STATE_VOID_PENDING
okt 23 23:27:28 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:28,887 [8268:MainThread] mopidy.audio.gst
okt 23 23:27:28 Desktop-Ubuntu mopidy[8268]:   Changing state to GST_STATE_READY: result=GST_STATE_CHANGE_SUCCESS
okt 23 23:27:28 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:28,886 [8268:Audio-2 (_actor_loop)] mopidy.audio.gst
okt 23 23:27:28 Desktop-Ubuntu mopidy[8268]:   Changing state to GST_STATE_NULL: result=GST_STATE_CHANGE_SUCCESS
okt 23 23:27:28 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:28,886 [8268:MainThread] mopidy.audio.gst
okt 23 23:27:28 Desktop-Ubuntu mopidy[8268]:   Track is not playable: file:///home/gerard/Music/test.mp3
okt 23 23:27:28 Desktop-Ubuntu mopidy[8268]: WARNING  2022-10-23 23:27:28,886 [8268:Core-6 (_actor_loop)] mopidy.core.tracklist
okt 23 23:27:28 Desktop-Ubuntu mopidy[8268]:   Setting GStreamer state to GST_STATE_PLAYING failed
okt 23 23:27:28 Desktop-Ubuntu mopidy[8268]: WARNING  2022-10-23 23:27:28,886 [8268:Audio-2 (_actor_loop)] mopidy.audio.actor
okt 23 23:27:28 Desktop-Ubuntu mopidy[8268]:   Got ERROR bus message: error=GLib.Error('Failed to connect: Connection refused', 'gst-resource-error-quark', 1) debug='../ext/pulse/pulsesink.c(615): gst_pulseringbuffer_open_device (): /GstBin:audio-sink/mopidy+audio+actor+_Outputs:mopidy+audio+actor+_outputs0/GstBin:bin0/GstPulseSink:pulsesink0'
okt 23 23:27:28 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:28,886 [8268:MainThread] mopidy.audio.gst
okt 23 23:27:28 Desktop-Ubuntu mopidy[8268]:   Changing state to GST_STATE_PLAYING: result=GST_STATE_CHANGE_FAILURE
okt 23 23:27:28 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:28,885 [8268:Audio-2 (_actor_loop)] mopidy.audio.gst
okt 23 23:27:28 Desktop-Ubuntu mopidy[8268]:   GStreamer error: Failed to connect: Connection refused
okt 23 23:27:28 Desktop-Ubuntu mopidy[8268]: ERROR    2022-10-23 23:27:28,885 [8268:MainThread] mopidy.audio.gst
okt 23 23:27:28 Desktop-Ubuntu mopidy[8268]:   Sending volume_changed to MixerListener: {'volume': 100}
okt 23 23:27:28 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:28,885 [8268:SoftwareMixer-1 (_actor_loop)] mopidy.listener
okt 23 23:27:28 Desktop-Ubuntu mopidy[8268]:   Mixer event: volume_changed(volume=100)
okt 23 23:27:28 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:28,884 [8268:SoftwareMixer-1 (_actor_loop)] mopidy.mixer
okt 23 23:27:28 Desktop-Ubuntu mopidy[8268]:   Flags: 2
okt 23 23:27:28 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:28,884 [8268:Audio-2 (_actor_loop)] mopidy.audio.actor
okt 23 23:27:28 Desktop-Ubuntu mopidy[8268]:   Got STATE_CHANGED bus message: old=GST_STATE_NULL new=GST_STATE_READY pending=GST_STATE_VOID_PENDING
okt 23 23:27:28 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:28,884 [8268:MainThread] mopidy.audio.gst
okt 23 23:27:28 Desktop-Ubuntu mopidy[8268]:   Changing state to GST_STATE_READY: result=GST_STATE_CHANGE_SUCCESS
okt 23 23:27:28 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:28,884 [8268:Audio-2 (_actor_loop)] mopidy.audio.gst
okt 23 23:27:28 Desktop-Ubuntu mopidy[8268]:   Track is not playable: file:///home/gerard/Music/test.mp3
okt 23 23:27:28 Desktop-Ubuntu mopidy[8268]: WARNING  2022-10-23 23:27:28,883 [8268:Core-6 (_actor_loop)] mopidy.core.tracklist
okt 23 23:27:28 Desktop-Ubuntu mopidy[8268]:   Changing state to GST_STATE_NULL: result=GST_STATE_CHANGE_SUCCESS
okt 23 23:27:28 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:28,883 [8268:MainThread] mopidy.audio.gst
okt 23 23:27:28 Desktop-Ubuntu mopidy[8268]:   Setting GStreamer state to GST_STATE_PLAYING failed
okt 23 23:27:28 Desktop-Ubuntu mopidy[8268]: WARNING  2022-10-23 23:27:28,883 [8268:Audio-2 (_actor_loop)] mopidy.audio.actor
okt 23 23:27:28 Desktop-Ubuntu mopidy[8268]:   Got ERROR bus message: error=GLib.Error('Failed to connect: Connection refused', 'gst-resource-error-quark', 1) debug='../ext/pulse/pulsesink.c(615): gst_pulseringbuffer_open_device (): /GstBin:audio-sink/mopidy+audio+actor+_Outputs:mopidy+audio+actor+_outputs0/GstBin:bin0/GstPulseSink:pulsesink0'
okt 23 23:27:28 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:28,883 [8268:MainThread] mopidy.audio.gst
okt 23 23:27:28 Desktop-Ubuntu mopidy[8268]:   Changing state to GST_STATE_PLAYING: result=GST_STATE_CHANGE_FAILURE
okt 23 23:27:28 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:28,883 [8268:Audio-2 (_actor_loop)] mopidy.audio.gst
okt 23 23:27:28 Desktop-Ubuntu mopidy[8268]:   GStreamer error: Failed to connect: Connection refused
okt 23 23:27:28 Desktop-Ubuntu mopidy[8268]: ERROR    2022-10-23 23:27:28,883 [8268:MainThread] mopidy.audio.gst
okt 23 23:27:28 Desktop-Ubuntu mopidy[8268]:   Sending volume_changed to MixerListener: {'volume': 100}
okt 23 23:27:28 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:28,882 [8268:SoftwareMixer-1 (_actor_loop)] mopidy.listener
okt 23 23:27:28 Desktop-Ubuntu mopidy[8268]:   Mixer event: volume_changed(volume=100)
okt 23 23:27:28 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:28,882 [8268:SoftwareMixer-1 (_actor_loop)] mopidy.mixer
okt 23 23:27:28 Desktop-Ubuntu mopidy[8268]:   Flags: 2
okt 23 23:27:28 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:28,882 [8268:Audio-2 (_actor_loop)] mopidy.audio.actor
okt 23 23:27:28 Desktop-Ubuntu mopidy[8268]:   Got STATE_CHANGED bus message: old=GST_STATE_NULL new=GST_STATE_READY pending=GST_STATE_VOID_PENDING
okt 23 23:27:28 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:28,882 [8268:MainThread] mopidy.audio.gst
okt 23 23:27:28 Desktop-Ubuntu mopidy[8268]:   Changing state to GST_STATE_READY: result=GST_STATE_CHANGE_SUCCESS
okt 23 23:27:28 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:28,881 [8268:Audio-2 (_actor_loop)] mopidy.audio.gst
okt 23 23:27:28 Desktop-Ubuntu mopidy[8268]:   Track is not playable: file:///home/gerard/Music/test.mp3
okt 23 23:27:28 Desktop-Ubuntu mopidy[8268]: WARNING  2022-10-23 23:27:28,881 [8268:Core-6 (_actor_loop)] mopidy.core.tracklist
okt 23 23:27:28 Desktop-Ubuntu mopidy[8268]:   Changing state to GST_STATE_NULL: result=GST_STATE_CHANGE_SUCCESS
okt 23 23:27:28 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:28,881 [8268:MainThread] mopidy.audio.gst
okt 23 23:27:28 Desktop-Ubuntu mopidy[8268]:   Setting GStreamer state to GST_STATE_PLAYING failed
okt 23 23:27:28 Desktop-Ubuntu mopidy[8268]: WARNING  2022-10-23 23:27:28,880 [8268:Audio-2 (_actor_loop)] mopidy.audio.actor
okt 23 23:27:28 Desktop-Ubuntu mopidy[8268]:   Got ERROR bus message: error=GLib.Error('Failed to connect: Connection refused', 'gst-resource-error-quark', 1) debug='../ext/pulse/pulsesink.c(615): gst_pulseringbuffer_open_device (): /GstBin:audio-sink/mopidy+audio+actor+_Outputs:mopidy+audio+actor+_outputs0/GstBin:bin0/GstPulseSink:pulsesink0'
okt 23 23:27:28 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:28,880 [8268:MainThread] mopidy.audio.gst
okt 23 23:27:28 Desktop-Ubuntu mopidy[8268]:   Changing state to GST_STATE_PLAYING: result=GST_STATE_CHANGE_FAILURE
okt 23 23:27:28 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:28,880 [8268:Audio-2 (_actor_loop)] mopidy.audio.gst
okt 23 23:27:28 Desktop-Ubuntu mopidy[8268]:   GStreamer error: Failed to connect: Connection refused
okt 23 23:27:28 Desktop-Ubuntu mopidy[8268]: ERROR    2022-10-23 23:27:28,880 [8268:MainThread] mopidy.audio.gst
okt 23 23:27:28 Desktop-Ubuntu mopidy[8268]:   Sending volume_changed to MixerListener: {'volume': 100}
okt 23 23:27:28 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:28,879 [8268:SoftwareMixer-1 (_actor_loop)] mopidy.listener
okt 23 23:27:28 Desktop-Ubuntu mopidy[8268]:   Mixer event: volume_changed(volume=100)
okt 23 23:27:28 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:28,879 [8268:SoftwareMixer-1 (_actor_loop)] mopidy.mixer
okt 23 23:27:28 Desktop-Ubuntu mopidy[8268]:   Flags: 2
okt 23 23:27:28 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:28,878 [8268:Audio-2 (_actor_loop)] mopidy.audio.actor
okt 23 23:27:28 Desktop-Ubuntu mopidy[8268]:   Got STATE_CHANGED bus message: old=GST_STATE_NULL new=GST_STATE_READY pending=GST_STATE_VOID_PENDING
okt 23 23:27:28 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:28,878 [8268:MainThread] mopidy.audio.gst
okt 23 23:27:28 Desktop-Ubuntu mopidy[8268]:   Changing state to GST_STATE_READY: result=GST_STATE_CHANGE_SUCCESS
okt 23 23:27:28 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:28,878 [8268:Audio-2 (_actor_loop)] mopidy.audio.gst
okt 23 23:27:28 Desktop-Ubuntu mopidy[8268]:   Received WebSocket message from 127.0.0.1: '{"method":"core.playback.play","params":{"tlid":6},"jsonrpc":"2.0","id":40}'
okt 23 23:27:28 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:28,877 [8268:HttpServer] mopidy.http.handlers
okt 23 23:27:28 Desktop-Ubuntu mopidy[8268]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 39, "result": [{"__model__": "TlTrack", "tlid": 6, "track": {"__model__": "Track", "uri": "file:///home/gerard/Music/test.mp3", "name": "Symphony No. 40 in G Minor, K. 550 - I. Molto Allegro", "artists": [{"__model__": "Artist", "name": "Czech National Symphony Orchestra"}], "album": {"__model__": "Album", "name": "Musopen Kickstarter Project", "artists": [{"__model__": "Artist", "name": "Czech National Symphony Orchestra"}]}, "composers": [{"__model__": "Artist", "name": "Wolfgang Amadeus Mozart"}], "genre": "Classical", "length": 358848}}]}'
okt 23 23:27:28 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:28,874 [8268:HttpServer] mopidy.http.handlers
okt 23 23:27:28 Desktop-Ubuntu mopidy[8268]:   Sending tracklist_changed to CoreListener: {}
okt 23 23:27:28 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:28,873 [8268:Core-6 (_actor_loop)] mopidy.listener
okt 23 23:27:28 Desktop-Ubuntu mopidy[8268]:   Triggering event: tracklist_changed()
okt 23 23:27:28 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:28,873 [8268:Core-6 (_actor_loop)] mopidy.core.tracklist
okt 23 23:27:28 Desktop-Ubuntu mopidy[8268]:   element pipeline5: GstMessageAsyncDone, running-time=(guint64)18446744073709551615;
okt 23 23:27:28 Desktop-Ubuntu mopidy[8268]: TRACE    2022-10-23 23:27:28,871 [8268:FileBackend-3 (_actor_loop)] mopidy.audio.scan
okt 23 23:27:28 Desktop-Ubuntu mopidy[8268]:   element fakesink5: GstMessageTag, taglist=(taglist)"taglist\,\ encoder\=\(string\)\"LAME\\\ 32bi...
okt 23 23:27:28 Desktop-Ubuntu mopidy[8268]: TRACE    2022-10-23 23:27:28,871 [8268:FileBackend-3 (_actor_loop)] mopidy.audio.scan
okt 23 23:27:28 Desktop-Ubuntu mopidy[8268]:   element fakesink5: GstMessageTag, taglist=(taglist)"taglist\,\ encoder\=\(string\)\"LAME\\\ 32bi...
okt 23 23:27:28 Desktop-Ubuntu mopidy[8268]: TRACE    2022-10-23 23:27:28,845 [8268:FileBackend-3 (_actor_loop)] mopidy.audio.scan
okt 23 23:27:28 Desktop-Ubuntu mopidy[8268]:   element mpegaudioparse5: GstMessageDurationChanged;
okt 23 23:27:28 Desktop-Ubuntu mopidy[8268]: TRACE    2022-10-23 23:27:28,820 [8268:FileBackend-3 (_actor_loop)] mopidy.audio.scan
okt 23 23:27:28 Desktop-Ubuntu mopidy[8268]:   element decodebin5: have-audio;
okt 23 23:27:28 Desktop-Ubuntu mopidy[8268]: TRACE    2022-10-23 23:27:28,819 [8268:FileBackend-3 (_actor_loop)] mopidy.audio.scan
okt 23 23:27:28 Desktop-Ubuntu mopidy[8268]:   Looking up file URI: file:///home/gerard/Music/test.mp3
okt 23 23:27:28 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:28,817 [8268:FileBackend-3 (_actor_loop)] mopidy.file.library
okt 23 23:27:28 Desktop-Ubuntu mopidy[8268]:   Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.add","params":{"uris":["file:///home/gerard/Music/test.mp3"],"at_position":0},"jsonrpc":"2.0","id":39}'
okt 23 23:27:28 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:28,816 [8268:HttpServer] mopidy.http.handlers
okt 23 23:27:26 Desktop-Ubuntu mopidy[8268]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 38, "result": 0}'
okt 23 23:27:26 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:26,423 [8268:HttpServer] mopidy.http.handlers
okt 23 23:27:26 Desktop-Ubuntu mopidy[8268]:   Received WebSocket message from 127.0.0.1: '{"method":"core.playback.get_time_position","params":{},"jsonrpc":"2.0","id":38}'
okt 23 23:27:26 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:26,422 [8268:HttpServer] mopidy.http.handlers
okt 23 23:27:26 Desktop-Ubuntu mopidy[8268]:   {'id': 166656044637616, 'jsonrpc': '2.0', 'method': 'broadcast', 'result': {'message': 'Broadcast to 1 connections'}, 'recipient': 'BFXBXSDGLGDC'}
okt 23 23:27:26 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:26,378 [8268:HttpServer] mopidy_iris.core
okt 23 23:27:26 Desktop-Ubuntu mopidy[8268]:   {'method': 'notification', 'params': {'notification': {'content': '166637467060576 paused playback', 'icon': False}}, 'connection_id': 'BFXBXSDGLGDC'}
okt 23 23:27:26 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:26,378 [8268:HttpServer] mopidy_iris.core
okt 23 23:27:26 Desktop-Ubuntu mopidy[8268]:   Iris websocket message received: {"jsonrpc":"2.0","id":166656044637616,"method":"broadcast","params":{"method":"notification","params":{"notification":{"content":"166637467060576 paused playback","icon":false}}}}
okt 23 23:27:26 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:26,377 [8268:HttpServer] mopidy_iris.handlers
okt 23 23:27:26 Desktop-Ubuntu mopidy[8268]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 37, "result": null}'
okt 23 23:27:26 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:26,372 [8268:HttpServer] mopidy.http.handlers
okt 23 23:27:26 Desktop-Ubuntu mopidy[8268]:   Triggering track playback paused event
okt 23 23:27:26 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:26,371 [8268:Core-6 (_actor_loop)] mopidy.core.playback
okt 23 23:27:26 Desktop-Ubuntu mopidy[8268]:   Sending playback_state_changed to CoreListener: {'old_state': 'stopped', 'new_state': 'paused'}
okt 23 23:27:26 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:26,371 [8268:Core-6 (_actor_loop)] mopidy.listener
okt 23 23:27:26 Desktop-Ubuntu mopidy[8268]:   Triggering playback state change event
okt 23 23:27:26 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:26,371 [8268:Core-6 (_actor_loop)] mopidy.core.playback
okt 23 23:27:26 Desktop-Ubuntu mopidy[8268]:   Changing state: stopped -> paused
okt 23 23:27:26 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:26,371 [8268:Core-6 (_actor_loop)] mopidy.core.playback
okt 23 23:27:26 Desktop-Ubuntu mopidy[8268]:   Received WebSocket message from 127.0.0.1: '{"method":"core.playback.pause","params":{},"jsonrpc":"2.0","id":37}'
okt 23 23:27:26 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:26,371 [8268:HttpServer] mopidy.http.handlers
okt 23 23:27:25 Desktop-Ubuntu mopidy[8268]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 36, "result": 5}'
okt 23 23:27:25 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:25,400 [8268:HttpServer] mopidy.http.handlers
okt 23 23:27:25 Desktop-Ubuntu mopidy[8268]:   Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_next_tlid","params":{},"jsonrpc":"2.0","id":36}'
okt 23 23:27:25 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:25,399 [8268:HttpServer] mopidy.http.handlers
okt 23 23:27:24 Desktop-Ubuntu mopidy[8268]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 35, "result": 5}'
okt 23 23:27:24 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:24,593 [8268:HttpServer] mopidy.http.handlers
okt 23 23:27:24 Desktop-Ubuntu mopidy[8268]:   Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_next_tlid","params":{},"jsonrpc":"2.0","id":35}'
okt 23 23:27:24 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:24,592 [8268:HttpServer] mopidy.http.handlers
okt 23 23:27:24 Desktop-Ubuntu mopidy[8268]:   {'id': 166656044442030, 'jsonrpc': '2.0', 'method': 'broadcast', 'result': {'message': 'Broadcast to 1 connections'}, 'recipient': 'BFXBXSDGLGDC'}
okt 23 23:27:24 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:24,421 [8268:HttpServer] mopidy_iris.core
okt 23 23:27:24 Desktop-Ubuntu mopidy[8268]:   {'method': 'notification', 'params': {'notification': {'content': '166637467060576 changed track'}}, 'connection_id': 'BFXBXSDGLGDC'}
okt 23 23:27:24 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:24,421 [8268:HttpServer] mopidy_iris.core
okt 23 23:27:24 Desktop-Ubuntu mopidy[8268]:   Iris websocket message received: {"jsonrpc":"2.0","id":166656044442030,"method":"broadcast","params":{"method":"notification","params":{"notification":{"content":"166637467060576 changed track"}}}}
okt 23 23:27:24 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:24,421 [8268:HttpServer] mopidy_iris.handlers
okt 23 23:27:24 Desktop-Ubuntu mopidy[8268]:   {'id': 166656044439653, 'jsonrpc': '2.0', 'method': 'add_queue_metadata', 'result': {'message': 'Added queue metadata'}, 'recipient': 'BFXBXSDGLGDC'}
okt 23 23:27:24 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:24,418 [8268:HttpServer] mopidy_iris.core
okt 23 23:27:24 Desktop-Ubuntu mopidy[8268]:   {'method': 'queue_metadata_changed', 'params': {'queue_metadata': {'tlid_4': {'tlid': 4, 'added_from': {'uri': 'm3u:Example%20Playlist.m3u8', 'name': 'Example Playlist', 'type': 'playlist', 'provider': 'mopidy', 'context': 'editable-playlist', 'can_edit': True}, 'added_by': 166637467060576}, 'tlid_3': {'tlid': 3, 'added_from': {'uri': 'm3u:Example%20Playlist.m3u8', 'name': 'Example Playlist', 'type': 'playlist', 'provider': 'mopidy', 'context': 'editable-playlist', 'can_edit': True}, 'added_by': 166637467060576}, 'tlid_2': {'tlid': 2, 'added_from': {'uri': 'm3u:Example%20Playlist.m3u8', 'name': 'Example Playlist', 'type': 'playlist', 'provider': 'mopidy', 'context': 'editable-playlist', 'can_edit': True}, 'added_by': 166637467060576}, 'tlid_1': {'tlid': 1, 'added_from': {'uri': 'm3u:Example%20Playlist.m3u8', 'name': 'Example Playlist', 'type': 'playlist', 'provider': 'mopidy', 'context': 'editable-playlist', 'can_edit': True}, 'added_by': 166637467060576}, 'tlid_5': {'tlid': 5, 'added_from': {'uri': 'm3u:Example%20Playlist.m3u8', 'name': 'Example Playlist', 'type': 'playlist', 'provider': 'mopidy', 'context': 'editable-playlist', 'can_edit': True}, 'added_by': 166637467060576}}}}
okt 23 23:27:24 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:24,418 [8268:HttpServer] mopidy_iris.core
okt 23 23:27:24 Desktop-Ubuntu mopidy[8268]:   Iris websocket message received: {"jsonrpc":"2.0","id":166656044439653,"method":"add_queue_metadata","params":{"tlids":[5],"added_from":{"uri":"m3u:Example%20Playlist.m3u8","name":"Example Playlist","type":"playlist","provider":"mopidy","context":"editable-playlist","can_edit":true},"added_by":166637467060576}}
okt 23 23:27:24 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:24,418 [8268:HttpServer] mopidy_iris.handlers
okt 23 23:27:24 Desktop-Ubuntu mopidy[8268]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 34, "result": [{"__model__": "TlTrack", "tlid": 5, "track": {"__model__": "Track", "uri": "file:///home/gerard/Music/test.mp3", "name": "Symphony No. 40 in G Minor, K. 550 - I. Molto Allegro", "artists": [{"__model__": "Artist", "name": "Czech National Symphony Orchestra"}], "album": {"__model__": "Album", "name": "Musopen Kickstarter Project", "artists": [{"__model__": "Artist", "name": "Czech National Symphony Orchestra"}]}, "composers": [{"__model__": "Artist", "name": "Wolfgang Amadeus Mozart"}], "genre": "Classical", "length": 358848}}, {"__model__": "TlTrack", "tlid": 4, "track": {"__model__": "Track", "uri": "file:///home/gerard/Music/test.mp3", "name": "Symphony No. 40 in G Minor, K. 550 - I. Molto Allegro", "artists": [{"__model__": "Artist", "name": "Czech National Symphony Orchestra"}], "album": {"__model__": "Album", "name": "Musopen Kickstarter Project", "artists": [{"__model__": "Artist", "name": "Czech National Symphony Orchestra"}]}, "composers": [{"__model__": "Artist", "name": "Wolfgang Amadeus Mozart"}], "genre": "Classical", "length": 358848}}, {"__model__": "TlTrack", "tlid": 3, "track": {"__model__": "Track", "uri": "file:///home/gerard/Music/test.mp3", "name": "Symphony No. 40 in G Minor, K. 550 - I. Molto Allegro", "artists": [{"__model__": "Artist", "name": "Czech National Symphony Orchestra"}], "album": {"__model__": "Album", "name": "Musopen Kickstarter Project", "artists": [{"__model__": "Artist", "name": "Czech National Symphony Orchestra"}]}, "composers": [{"__model__": "Artist", "name": "Wolfgang Amadeus Mozart"}], "genre": "Classical", "length": 358848}}, {"__model__": "TlTrack", "tlid": 2, "track": {"__model__": "Track", "uri": "file:///home/gerard/Music/test.mp3", "name": "Symphony No. 40 in G Minor, K. 550 - I. Molto Allegro", "artists": [{"__model__": "Artist", "name": "Czech National Symphony Orchestra"}], "album": {"__model__": "Album", "name": "Musopen Kickstarter Project", "artists": [{"__model__": "Artist", "name": "Czech National Symphony Orchestra"}]}, "composers": [{"__model__": "Artist", "name": "Wolfgang Amadeus Mozart"}], "genre": "Classical", "length": 358848}}, {"__model__": "TlTrack", "tlid": 1, "track": {"__model__": "Track", "uri": "file:///home/gerard/Music/test.mp3", "name": "Symphony No. 40 in G Minor, K. 550 - I. Molto Allegro", "artists": [{"__model__": "Artist", "name": "Czech National Symphony Orchestra"}], "album": {"__model__": "Album", "name": "Musopen Kickstarter Project", "artists": [{"__model__": "Artist", "name": "Czech National Symphony Orchestra"}]}, "composers": [{"__model__": "Artist", "name": "Wolfgang Amadeus Mozart"}], "genre": "Classical", "length": 358848}}]}'
okt 23 23:27:24 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:24,417 [8268:HttpServer] mopidy.http.handlers
okt 23 23:27:24 Desktop-Ubuntu mopidy[8268]:   Sending volume_changed to CoreListener: {'volume': 100}
okt 23 23:27:24 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:24,416 [8268:Core-6 (_actor_loop)] mopidy.listener
okt 23 23:27:24 Desktop-Ubuntu mopidy[8268]:   Sending volume_changed to CoreListener: {'volume': 100}
okt 23 23:27:24 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:24,416 [8268:Core-6 (_actor_loop)] mopidy.listener
okt 23 23:27:24 Desktop-Ubuntu mopidy[8268]:   Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_tl_tracks","params":{},"jsonrpc":"2.0","id":34}'
okt 23 23:27:24 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:24,416 [8268:HttpServer] mopidy.http.handlers
okt 23 23:27:24 Desktop-Ubuntu mopidy[8268]:   Sending volume_changed to CoreListener: {'volume': 100}
okt 23 23:27:24 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:24,415 [8268:Core-6 (_actor_loop)] mopidy.listener
okt 23 23:27:24 Desktop-Ubuntu mopidy[8268]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 33, "result": null}'
okt 23 23:27:24 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:24,415 [8268:HttpServer] mopidy.http.handlers
okt 23 23:27:24 Desktop-Ubuntu mopidy[8268]:   Sending volume_changed to CoreListener: {'volume': 100}
okt 23 23:27:24 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:24,415 [8268:Core-6 (_actor_loop)] mopidy.listener
okt 23 23:27:24 Desktop-Ubuntu mopidy[8268]:   Sending volume_changed to CoreListener: {'volume': 100}
okt 23 23:27:24 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:24,415 [8268:Core-6 (_actor_loop)] mopidy.listener
okt 23 23:27:24 Desktop-Ubuntu mopidy[8268]:   Track is not playable: file:///home/gerard/Music/test.mp3
okt 23 23:27:24 Desktop-Ubuntu mopidy[8268]: WARNING  2022-10-23 23:27:24,415 [8268:Core-6 (_actor_loop)] mopidy.core.tracklist
okt 23 23:27:24 Desktop-Ubuntu mopidy[8268]:   Setting GStreamer state to GST_STATE_PLAYING failed
okt 23 23:27:24 Desktop-Ubuntu mopidy[8268]: WARNING  2022-10-23 23:27:24,414 [8268:Audio-2 (_actor_loop)] mopidy.audio.actor
okt 23 23:27:24 Desktop-Ubuntu mopidy[8268]:   Changing state to GST_STATE_NULL: result=GST_STATE_CHANGE_SUCCESS
okt 23 23:27:24 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:24,414 [8268:MainThread] mopidy.audio.gst
okt 23 23:27:24 Desktop-Ubuntu mopidy[8268]:   Changing state to GST_STATE_PLAYING: result=GST_STATE_CHANGE_FAILURE
okt 23 23:27:24 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:24,412 [8268:Audio-2 (_actor_loop)] mopidy.audio.gst
okt 23 23:27:24 Desktop-Ubuntu mopidy[8268]:   Got ERROR bus message: error=GLib.Error('Failed to connect: Connection refused', 'gst-resource-error-quark', 1) debug='../ext/pulse/pulsesink.c(615): gst_pulseringbuffer_open_device (): /GstBin:audio-sink/mopidy+audio+actor+_Outputs:mopidy+audio+actor+_outputs0/GstBin:bin0/GstPulseSink:pulsesink0'
okt 23 23:27:24 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:24,412 [8268:MainThread] mopidy.audio.gst
okt 23 23:27:24 Desktop-Ubuntu mopidy[8268]:   GStreamer error: Failed to connect: Connection refused
okt 23 23:27:24 Desktop-Ubuntu mopidy[8268]: ERROR    2022-10-23 23:27:24,412 [8268:MainThread] mopidy.audio.gst
okt 23 23:27:24 Desktop-Ubuntu mopidy[8268]:   Sending volume_changed to MixerListener: {'volume': 100}
okt 23 23:27:24 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:24,411 [8268:SoftwareMixer-1 (_actor_loop)] mopidy.listener
okt 23 23:27:24 Desktop-Ubuntu mopidy[8268]:   Mixer event: volume_changed(volume=100)
okt 23 23:27:24 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:24,411 [8268:SoftwareMixer-1 (_actor_loop)] mopidy.mixer
okt 23 23:27:24 Desktop-Ubuntu mopidy[8268]:   Flags: 2
okt 23 23:27:24 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:24,411 [8268:Audio-2 (_actor_loop)] mopidy.audio.actor
okt 23 23:27:24 Desktop-Ubuntu mopidy[8268]:   Got STATE_CHANGED bus message: old=GST_STATE_NULL new=GST_STATE_READY pending=GST_STATE_VOID_PENDING
okt 23 23:27:24 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:24,411 [8268:MainThread] mopidy.audio.gst
okt 23 23:27:24 Desktop-Ubuntu mopidy[8268]:   Changing state to GST_STATE_READY: result=GST_STATE_CHANGE_SUCCESS
okt 23 23:27:24 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:24,410 [8268:Audio-2 (_actor_loop)] mopidy.audio.gst
okt 23 23:27:24 Desktop-Ubuntu mopidy[8268]:   Track is not playable: file:///home/gerard/Music/test.mp3
okt 23 23:27:24 Desktop-Ubuntu mopidy[8268]: WARNING  2022-10-23 23:27:24,410 [8268:Core-6 (_actor_loop)] mopidy.core.tracklist
okt 23 23:27:24 Desktop-Ubuntu mopidy[8268]:   Changing state to GST_STATE_NULL: result=GST_STATE_CHANGE_SUCCESS
okt 23 23:27:24 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:24,410 [8268:MainThread] mopidy.audio.gst
okt 23 23:27:24 Desktop-Ubuntu mopidy[8268]:   Setting GStreamer state to GST_STATE_PLAYING failed
okt 23 23:27:24 Desktop-Ubuntu mopidy[8268]: WARNING  2022-10-23 23:27:24,409 [8268:Audio-2 (_actor_loop)] mopidy.audio.actor
okt 23 23:27:24 Desktop-Ubuntu mopidy[8268]:   Got ERROR bus message: error=GLib.Error('Failed to connect: Connection refused', 'gst-resource-error-quark', 1) debug='../ext/pulse/pulsesink.c(615): gst_pulseringbuffer_open_device (): /GstBin:audio-sink/mopidy+audio+actor+_Outputs:mopidy+audio+actor+_outputs0/GstBin:bin0/GstPulseSink:pulsesink0'
okt 23 23:27:24 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:24,409 [8268:MainThread] mopidy.audio.gst
okt 23 23:27:24 Desktop-Ubuntu mopidy[8268]:   Changing state to GST_STATE_PLAYING: result=GST_STATE_CHANGE_FAILURE
okt 23 23:27:24 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:24,409 [8268:Audio-2 (_actor_loop)] mopidy.audio.gst
okt 23 23:27:24 Desktop-Ubuntu mopidy[8268]:   GStreamer error: Failed to connect: Connection refused
okt 23 23:27:24 Desktop-Ubuntu mopidy[8268]: ERROR    2022-10-23 23:27:24,409 [8268:MainThread] mopidy.audio.gst
okt 23 23:27:24 Desktop-Ubuntu mopidy[8268]:   Sending volume_changed to MixerListener: {'volume': 100}
okt 23 23:27:24 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:24,408 [8268:SoftwareMixer-1 (_actor_loop)] mopidy.listener
okt 23 23:27:24 Desktop-Ubuntu mopidy[8268]:   Mixer event: volume_changed(volume=100)
okt 23 23:27:24 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:24,406 [8268:SoftwareMixer-1 (_actor_loop)] mopidy.mixer
okt 23 23:27:24 Desktop-Ubuntu mopidy[8268]:   Flags: 2
okt 23 23:27:24 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:24,406 [8268:Audio-2 (_actor_loop)] mopidy.audio.actor
okt 23 23:27:24 Desktop-Ubuntu mopidy[8268]:   Got STATE_CHANGED bus message: old=GST_STATE_NULL new=GST_STATE_READY pending=GST_STATE_VOID_PENDING
okt 23 23:27:24 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:24,406 [8268:MainThread] mopidy.audio.gst
okt 23 23:27:24 Desktop-Ubuntu mopidy[8268]:   Changing state to GST_STATE_READY: result=GST_STATE_CHANGE_SUCCESS
okt 23 23:27:24 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:24,406 [8268:Audio-2 (_actor_loop)] mopidy.audio.gst
okt 23 23:27:24 Desktop-Ubuntu mopidy[8268]:   Track is not playable: file:///home/gerard/Music/test.mp3
okt 23 23:27:24 Desktop-Ubuntu mopidy[8268]: WARNING  2022-10-23 23:27:24,405 [8268:Core-6 (_actor_loop)] mopidy.core.tracklist
okt 23 23:27:24 Desktop-Ubuntu mopidy[8268]:   Setting GStreamer state to GST_STATE_PLAYING failed
okt 23 23:27:24 Desktop-Ubuntu mopidy[8268]: WARNING  2022-10-23 23:27:24,405 [8268:Audio-2 (_actor_loop)] mopidy.audio.actor
okt 23 23:27:24 Desktop-Ubuntu mopidy[8268]:   Changing state to GST_STATE_NULL: result=GST_STATE_CHANGE_SUCCESS
okt 23 23:27:24 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:24,405 [8268:MainThread] mopidy.audio.gst
okt 23 23:27:24 Desktop-Ubuntu mopidy[8268]:   Got ERROR bus message: error=GLib.Error('Failed to connect: Connection refused', 'gst-resource-error-quark', 1) debug='../ext/pulse/pulsesink.c(615): gst_pulseringbuffer_open_device (): /GstBin:audio-sink/mopidy+audio+actor+_Outputs:mopidy+audio+actor+_outputs0/GstBin:bin0/GstPulseSink:pulsesink0'
okt 23 23:27:24 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:24,405 [8268:MainThread] mopidy.audio.gst
okt 23 23:27:24 Desktop-Ubuntu mopidy[8268]:   Changing state to GST_STATE_PLAYING: result=GST_STATE_CHANGE_FAILURE
okt 23 23:27:24 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:24,405 [8268:Audio-2 (_actor_loop)] mopidy.audio.gst
okt 23 23:27:24 Desktop-Ubuntu mopidy[8268]:   GStreamer error: Failed to connect: Connection refused
okt 23 23:27:24 Desktop-Ubuntu mopidy[8268]: ERROR    2022-10-23 23:27:24,405 [8268:MainThread] mopidy.audio.gst
okt 23 23:27:24 Desktop-Ubuntu mopidy[8268]:   Sending volume_changed to MixerListener: {'volume': 100}
okt 23 23:27:24 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:24,404 [8268:SoftwareMixer-1 (_actor_loop)] mopidy.listener
okt 23 23:27:24 Desktop-Ubuntu mopidy[8268]:   Mixer event: volume_changed(volume=100)
okt 23 23:27:24 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:24,404 [8268:SoftwareMixer-1 (_actor_loop)] mopidy.mixer
okt 23 23:27:24 Desktop-Ubuntu mopidy[8268]:   Flags: 2
okt 23 23:27:24 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:24,403 [8268:Audio-2 (_actor_loop)] mopidy.audio.actor
okt 23 23:27:24 Desktop-Ubuntu mopidy[8268]:   Got STATE_CHANGED bus message: old=GST_STATE_NULL new=GST_STATE_READY pending=GST_STATE_VOID_PENDING
okt 23 23:27:24 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:24,403 [8268:MainThread] mopidy.audio.gst
okt 23 23:27:24 Desktop-Ubuntu mopidy[8268]:   Changing state to GST_STATE_READY: result=GST_STATE_CHANGE_SUCCESS
okt 23 23:27:24 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:24,403 [8268:Audio-2 (_actor_loop)] mopidy.audio.gst
okt 23 23:27:24 Desktop-Ubuntu mopidy[8268]:   Track is not playable: file:///home/gerard/Music/test.mp3
okt 23 23:27:24 Desktop-Ubuntu mopidy[8268]: WARNING  2022-10-23 23:27:24,403 [8268:Core-6 (_actor_loop)] mopidy.core.tracklist
okt 23 23:27:24 Desktop-Ubuntu mopidy[8268]:   Changing state to GST_STATE_NULL: result=GST_STATE_CHANGE_SUCCESS
okt 23 23:27:24 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:24,402 [8268:MainThread] mopidy.audio.gst
okt 23 23:27:24 Desktop-Ubuntu mopidy[8268]:   Setting GStreamer state to GST_STATE_PLAYING failed
okt 23 23:27:24 Desktop-Ubuntu mopidy[8268]: WARNING  2022-10-23 23:27:24,402 [8268:Audio-2 (_actor_loop)] mopidy.audio.actor
okt 23 23:27:24 Desktop-Ubuntu mopidy[8268]:   Got ERROR bus message: error=GLib.Error('Failed to connect: Connection refused', 'gst-resource-error-quark', 1) debug='../ext/pulse/pulsesink.c(615): gst_pulseringbuffer_open_device (): /GstBin:audio-sink/mopidy+audio+actor+_Outputs:mopidy+audio+actor+_outputs0/GstBin:bin0/GstPulseSink:pulsesink0'
okt 23 23:27:24 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:24,402 [8268:MainThread] mopidy.audio.gst
okt 23 23:27:24 Desktop-Ubuntu mopidy[8268]:   Changing state to GST_STATE_PLAYING: result=GST_STATE_CHANGE_FAILURE
okt 23 23:27:24 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:24,402 [8268:Audio-2 (_actor_loop)] mopidy.audio.gst
okt 23 23:27:24 Desktop-Ubuntu mopidy[8268]:   GStreamer error: Failed to connect: Connection refused
okt 23 23:27:24 Desktop-Ubuntu mopidy[8268]: ERROR    2022-10-23 23:27:24,402 [8268:MainThread] mopidy.audio.gst
okt 23 23:27:24 Desktop-Ubuntu mopidy[8268]:   Sending volume_changed to MixerListener: {'volume': 100}
okt 23 23:27:24 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:24,401 [8268:SoftwareMixer-1 (_actor_loop)] mopidy.listener
okt 23 23:27:24 Desktop-Ubuntu mopidy[8268]:   Mixer event: volume_changed(volume=100)
okt 23 23:27:24 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:24,401 [8268:SoftwareMixer-1 (_actor_loop)] mopidy.mixer
okt 23 23:27:24 Desktop-Ubuntu mopidy[8268]:   Flags: 2
okt 23 23:27:24 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:24,401 [8268:Audio-2 (_actor_loop)] mopidy.audio.actor
okt 23 23:27:24 Desktop-Ubuntu mopidy[8268]:   Got STATE_CHANGED bus message: old=GST_STATE_NULL new=GST_STATE_READY pending=GST_STATE_VOID_PENDING
okt 23 23:27:24 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:24,400 [8268:MainThread] mopidy.audio.gst
okt 23 23:27:24 Desktop-Ubuntu mopidy[8268]:   Changing state to GST_STATE_READY: result=GST_STATE_CHANGE_SUCCESS
okt 23 23:27:24 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:24,400 [8268:Audio-2 (_actor_loop)] mopidy.audio.gst
okt 23 23:27:24 Desktop-Ubuntu mopidy[8268]:   Track is not playable: file:///home/gerard/Music/test.mp3
okt 23 23:27:24 Desktop-Ubuntu mopidy[8268]: WARNING  2022-10-23 23:27:24,400 [8268:Core-6 (_actor_loop)] mopidy.core.tracklist
okt 23 23:27:24 Desktop-Ubuntu mopidy[8268]:   Changing state to GST_STATE_NULL: result=GST_STATE_CHANGE_SUCCESS
okt 23 23:27:24 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:24,400 [8268:MainThread] mopidy.audio.gst
okt 23 23:27:24 Desktop-Ubuntu mopidy[8268]:   Setting GStreamer state to GST_STATE_PLAYING failed
okt 23 23:27:24 Desktop-Ubuntu mopidy[8268]: WARNING  2022-10-23 23:27:24,400 [8268:Audio-2 (_actor_loop)] mopidy.audio.actor
okt 23 23:27:24 Desktop-Ubuntu mopidy[8268]:   Changing state to GST_STATE_PLAYING: result=GST_STATE_CHANGE_FAILURE
okt 23 23:27:24 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:24,399 [8268:Audio-2 (_actor_loop)] mopidy.audio.gst
okt 23 23:27:24 Desktop-Ubuntu mopidy[8268]:   Got ERROR bus message: error=GLib.Error('Failed to connect: Connection refused', 'gst-resource-error-quark', 1) debug='../ext/pulse/pulsesink.c(615): gst_pulseringbuffer_open_device (): /GstBin:audio-sink/mopidy+audio+actor+_Outputs:mopidy+audio+actor+_outputs0/GstBin:bin0/GstPulseSink:pulsesink0'
okt 23 23:27:24 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:24,399 [8268:MainThread] mopidy.audio.gst
okt 23 23:27:24 Desktop-Ubuntu mopidy[8268]:   GStreamer error: Failed to connect: Connection refused
okt 23 23:27:24 Desktop-Ubuntu mopidy[8268]: ERROR    2022-10-23 23:27:24,399 [8268:MainThread] mopidy.audio.gst
okt 23 23:27:24 Desktop-Ubuntu mopidy[8268]:   Sending volume_changed to MixerListener: {'volume': 100}
okt 23 23:27:24 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:24,398 [8268:SoftwareMixer-1 (_actor_loop)] mopidy.listener
okt 23 23:27:24 Desktop-Ubuntu mopidy[8268]:   Mixer event: volume_changed(volume=100)
okt 23 23:27:24 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:24,398 [8268:SoftwareMixer-1 (_actor_loop)] mopidy.mixer
okt 23 23:27:24 Desktop-Ubuntu mopidy[8268]:   Flags: 2
okt 23 23:27:24 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:24,398 [8268:Audio-2 (_actor_loop)] mopidy.audio.actor
okt 23 23:27:24 Desktop-Ubuntu mopidy[8268]:   Got STATE_CHANGED bus message: old=GST_STATE_NULL new=GST_STATE_READY pending=GST_STATE_VOID_PENDING
okt 23 23:27:24 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:24,397 [8268:MainThread] mopidy.audio.gst
okt 23 23:27:24 Desktop-Ubuntu mopidy[8268]:   Changing state to GST_STATE_READY: result=GST_STATE_CHANGE_SUCCESS
okt 23 23:27:24 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:24,397 [8268:Audio-2 (_actor_loop)] mopidy.audio.gst
okt 23 23:27:24 Desktop-Ubuntu mopidy[8268]:   Received WebSocket message from 127.0.0.1: '{"method":"core.playback.play","params":{"tlid":5},"jsonrpc":"2.0","id":33}'
okt 23 23:27:24 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:24,397 [8268:HttpServer] mopidy.http.handlers
okt 23 23:27:24 Desktop-Ubuntu mopidy[8268]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 32, "result": [{"__model__": "TlTrack", "tlid": 5, "track": {"__model__": "Track", "uri": "file:///home/gerard/Music/test.mp3", "name": "Symphony No. 40 in G Minor, K. 550 - I. Molto Allegro", "artists": [{"__model__": "Artist", "name": "Czech National Symphony Orchestra"}], "album": {"__model__": "Album", "name": "Musopen Kickstarter Project", "artists": [{"__model__": "Artist", "name": "Czech National Symphony Orchestra"}]}, "composers": [{"__model__": "Artist", "name": "Wolfgang Amadeus Mozart"}], "genre": "Classical", "length": 358848}}]}'
okt 23 23:27:24 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:24,395 [8268:HttpServer] mopidy.http.handlers
okt 23 23:27:24 Desktop-Ubuntu mopidy[8268]:   Sending tracklist_changed to CoreListener: {}
okt 23 23:27:24 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:24,394 [8268:Core-6 (_actor_loop)] mopidy.listener
okt 23 23:27:24 Desktop-Ubuntu mopidy[8268]:   Triggering event: tracklist_changed()
okt 23 23:27:24 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:24,394 [8268:Core-6 (_actor_loop)] mopidy.core.tracklist
okt 23 23:27:24 Desktop-Ubuntu mopidy[8268]:   element pipeline4: GstMessageAsyncDone, running-time=(guint64)18446744073709551615;
okt 23 23:27:24 Desktop-Ubuntu mopidy[8268]: TRACE    2022-10-23 23:27:24,392 [8268:FileBackend-3 (_actor_loop)] mopidy.audio.scan
okt 23 23:27:24 Desktop-Ubuntu mopidy[8268]:   element fakesink4: GstMessageTag, taglist=(taglist)"taglist\,\ encoder\=\(string\)\"LAME\\\ 32bi...
okt 23 23:27:24 Desktop-Ubuntu mopidy[8268]: TRACE    2022-10-23 23:27:24,392 [8268:FileBackend-3 (_actor_loop)] mopidy.audio.scan
okt 23 23:27:24 Desktop-Ubuntu mopidy[8268]:   element fakesink4: GstMessageTag, taglist=(taglist)"taglist\,\ encoder\=\(string\)\"LAME\\\ 32bi...
okt 23 23:27:24 Desktop-Ubuntu mopidy[8268]: TRACE    2022-10-23 23:27:24,366 [8268:FileBackend-3 (_actor_loop)] mopidy.audio.scan
okt 23 23:27:24 Desktop-Ubuntu mopidy[8268]:   element mpegaudioparse4: GstMessageDurationChanged;
okt 23 23:27:24 Desktop-Ubuntu mopidy[8268]: TRACE    2022-10-23 23:27:24,340 [8268:FileBackend-3 (_actor_loop)] mopidy.audio.scan
okt 23 23:27:24 Desktop-Ubuntu mopidy[8268]:   element decodebin4: have-audio;
okt 23 23:27:24 Desktop-Ubuntu mopidy[8268]: TRACE    2022-10-23 23:27:24,340 [8268:FileBackend-3 (_actor_loop)] mopidy.audio.scan
okt 23 23:27:24 Desktop-Ubuntu mopidy[8268]:   Looking up file URI: file:///home/gerard/Music/test.mp3
okt 23 23:27:24 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:24,337 [8268:FileBackend-3 (_actor_loop)] mopidy.file.library
okt 23 23:27:24 Desktop-Ubuntu mopidy[8268]:   Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.add","params":{"uris":["file:///home/gerard/Music/test.mp3"],"at_position":0},"jsonrpc":"2.0","id":32}'
okt 23 23:27:24 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:24,336 [8268:HttpServer] mopidy.http.handlers
okt 23 23:27:23 Desktop-Ubuntu mopidy[8268]:   {'id': 166656044360895, 'jsonrpc': '2.0', 'method': 'broadcast', 'result': {'message': 'Broadcast to 1 connections'}, 'recipient': 'BFXBXSDGLGDC'}
okt 23 23:27:23 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:23,609 [8268:HttpServer] mopidy_iris.core
okt 23 23:27:23 Desktop-Ubuntu mopidy[8268]:   {'method': 'notification', 'params': {'notification': {'content': '166637467060576 changed track'}}, 'connection_id': 'BFXBXSDGLGDC'}
okt 23 23:27:23 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:23,609 [8268:HttpServer] mopidy_iris.core
okt 23 23:27:23 Desktop-Ubuntu mopidy[8268]:   Iris websocket message received: {"jsonrpc":"2.0","id":166656044360895,"method":"broadcast","params":{"method":"notification","params":{"notification":{"content":"166637467060576 changed track"}}}}
okt 23 23:27:23 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:23,608 [8268:HttpServer] mopidy_iris.handlers
okt 23 23:27:23 Desktop-Ubuntu mopidy[8268]:   {'id': 166656044358830, 'jsonrpc': '2.0', 'method': 'add_queue_metadata', 'result': {'message': 'Added queue metadata'}, 'recipient': 'BFXBXSDGLGDC'}
okt 23 23:27:23 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:23,607 [8268:HttpServer] mopidy_iris.core
okt 23 23:27:23 Desktop-Ubuntu mopidy[8268]:   {'method': 'queue_metadata_changed', 'params': {'queue_metadata': {'tlid_3': {'tlid': 3, 'added_from': {'uri': 'm3u:Example%20Playlist.m3u8', 'name': 'Example Playlist', 'type': 'playlist', 'provider': 'mopidy', 'context': 'editable-playlist', 'can_edit': True}, 'added_by': 166637467060576}, 'tlid_2': {'tlid': 2, 'added_from': {'uri': 'm3u:Example%20Playlist.m3u8', 'name': 'Example Playlist', 'type': 'playlist', 'provider': 'mopidy', 'context': 'editable-playlist', 'can_edit': True}, 'added_by': 166637467060576}, 'tlid_1': {'tlid': 1, 'added_from': {'uri': 'm3u:Example%20Playlist.m3u8', 'name': 'Example Playlist', 'type': 'playlist', 'provider': 'mopidy', 'context': 'editable-playlist', 'can_edit': True}, 'added_by': 166637467060576}, 'tlid_4': {'tlid': 4, 'added_from': {'uri': 'm3u:Example%20Playlist.m3u8', 'name': 'Example Playlist', 'type': 'playlist', 'provider': 'mopidy', 'context': 'editable-playlist', 'can_edit': True}, 'added_by': 166637467060576}}}}
okt 23 23:27:23 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:23,606 [8268:HttpServer] mopidy_iris.core
okt 23 23:27:23 Desktop-Ubuntu mopidy[8268]:   Iris websocket message received: {"jsonrpc":"2.0","id":166656044358830,"method":"add_queue_metadata","params":{"tlids":[4],"added_from":{"uri":"m3u:Example%20Playlist.m3u8","name":"Example Playlist","type":"playlist","provider":"mopidy","context":"editable-playlist","can_edit":true},"added_by":166637467060576}}
okt 23 23:27:23 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:23,606 [8268:HttpServer] mopidy_iris.handlers
okt 23 23:27:23 Desktop-Ubuntu mopidy[8268]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 31, "result": [{"__model__": "TlTrack", "tlid": 4, "track": {"__model__": "Track", "uri": "file:///home/gerard/Music/test.mp3", "name": "Symphony No. 40 in G Minor, K. 550 - I. Molto Allegro", "artists": [{"__model__": "Artist", "name": "Czech National Symphony Orchestra"}], "album": {"__model__": "Album", "name": "Musopen Kickstarter Project", "artists": [{"__model__": "Artist", "name": "Czech National Symphony Orchestra"}]}, "composers": [{"__model__": "Artist", "name": "Wolfgang Amadeus Mozart"}], "genre": "Classical", "length": 358848}}, {"__model__": "TlTrack", "tlid": 3, "track": {"__model__": "Track", "uri": "file:///home/gerard/Music/test.mp3", "name": "Symphony No. 40 in G Minor, K. 550 - I. Molto Allegro", "artists": [{"__model__": "Artist", "name": "Czech National Symphony Orchestra"}], "album": {"__model__": "Album", "name": "Musopen Kickstarter Project", "artists": [{"__model__": "Artist", "name": "Czech National Symphony Orchestra"}]}, "composers": [{"__model__": "Artist", "name": "Wolfgang Amadeus Mozart"}], "genre": "Classical", "length": 358848}}, {"__model__": "TlTrack", "tlid": 2, "track": {"__model__": "Track", "uri": "file:///home/gerard/Music/test.mp3", "name": "Symphony No. 40 in G Minor, K. 550 - I. Molto Allegro", "artists": [{"__model__": "Artist", "name": "Czech National Symphony Orchestra"}], "album": {"__model__": "Album", "name": "Musopen Kickstarter Project", "artists": [{"__model__": "Artist", "name": "Czech National Symphony Orchestra"}]}, "composers": [{"__model__": "Artist", "name": "Wolfgang Amadeus Mozart"}], "genre": "Classical", "length": 358848}}, {"__model__": "TlTrack", "tlid": 1, "track": {"__model__": "Track", "uri": "file:///home/gerard/Music/test.mp3", "name": "Symphony No. 40 in G Minor, K. 550 - I. Molto Allegro", "artists": [{"__model__": "Artist", "name": "Czech National Symphony Orchestra"}], "album": {"__model__": "Album", "name": "Musopen Kickstarter Project", "artists": [{"__model__": "Artist", "name": "Czech National Symphony Orchestra"}]}, "composers": [{"__model__": "Artist", "name": "Wolfgang Amadeus Mozart"}], "genre": "Classical", "length": 358848}}]}'
okt 23 23:27:23 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:23,606 [8268:HttpServer] mopidy.http.handlers
okt 23 23:27:23 Desktop-Ubuntu mopidy[8268]:   Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_tl_tracks","params":{},"jsonrpc":"2.0","id":31}'
okt 23 23:27:23 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:23,605 [8268:HttpServer] mopidy.http.handlers
okt 23 23:27:23 Desktop-Ubuntu mopidy[8268]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 30, "result": null}'
okt 23 23:27:23 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:23,605 [8268:HttpServer] mopidy.http.handlers
okt 23 23:27:23 Desktop-Ubuntu mopidy[8268]:   Sending volume_changed to CoreListener: {'volume': 100}
okt 23 23:27:23 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:23,604 [8268:Core-6 (_actor_loop)] mopidy.listener
okt 23 23:27:23 Desktop-Ubuntu mopidy[8268]:   Sending volume_changed to CoreListener: {'volume': 100}
okt 23 23:27:23 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:23,604 [8268:Core-6 (_actor_loop)] mopidy.listener
okt 23 23:27:23 Desktop-Ubuntu mopidy[8268]:   Sending volume_changed to CoreListener: {'volume': 100}
okt 23 23:27:23 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:23,604 [8268:Core-6 (_actor_loop)] mopidy.listener
okt 23 23:27:23 Desktop-Ubuntu mopidy[8268]:   Sending volume_changed to CoreListener: {'volume': 100}
okt 23 23:27:23 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:23,604 [8268:Core-6 (_actor_loop)] mopidy.listener
okt 23 23:27:23 Desktop-Ubuntu mopidy[8268]:   Track is not playable: file:///home/gerard/Music/test.mp3
okt 23 23:27:23 Desktop-Ubuntu mopidy[8268]: WARNING  2022-10-23 23:27:23,604 [8268:Core-6 (_actor_loop)] mopidy.core.tracklist
okt 23 23:27:23 Desktop-Ubuntu mopidy[8268]:   Setting GStreamer state to GST_STATE_PLAYING failed
okt 23 23:27:23 Desktop-Ubuntu mopidy[8268]: WARNING  2022-10-23 23:27:23,604 [8268:Audio-2 (_actor_loop)] mopidy.audio.actor
okt 23 23:27:23 Desktop-Ubuntu mopidy[8268]:   Changing state to GST_STATE_PLAYING: result=GST_STATE_CHANGE_FAILURE
okt 23 23:27:23 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:23,603 [8268:Audio-2 (_actor_loop)] mopidy.audio.gst
okt 23 23:27:23 Desktop-Ubuntu mopidy[8268]:   Changing state to GST_STATE_NULL: result=GST_STATE_CHANGE_SUCCESS
okt 23 23:27:23 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:23,603 [8268:MainThread] mopidy.audio.gst
okt 23 23:27:23 Desktop-Ubuntu mopidy[8268]:   Got ERROR bus message: error=GLib.Error('Failed to connect: Connection refused', 'gst-resource-error-quark', 1) debug='../ext/pulse/pulsesink.c(615): gst_pulseringbuffer_open_device (): /GstBin:audio-sink/mopidy+audio+actor+_Outputs:mopidy+audio+actor+_outputs0/GstBin:bin0/GstPulseSink:pulsesink0'
okt 23 23:27:23 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:23,603 [8268:MainThread] mopidy.audio.gst
okt 23 23:27:23 Desktop-Ubuntu mopidy[8268]:   GStreamer error: Failed to connect: Connection refused
okt 23 23:27:23 Desktop-Ubuntu mopidy[8268]: ERROR    2022-10-23 23:27:23,603 [8268:MainThread] mopidy.audio.gst
okt 23 23:27:23 Desktop-Ubuntu mopidy[8268]:   Sending volume_changed to MixerListener: {'volume': 100}
okt 23 23:27:23 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:23,602 [8268:SoftwareMixer-1 (_actor_loop)] mopidy.listener
okt 23 23:27:23 Desktop-Ubuntu mopidy[8268]:   Mixer event: volume_changed(volume=100)
okt 23 23:27:23 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:23,602 [8268:SoftwareMixer-1 (_actor_loop)] mopidy.mixer
okt 23 23:27:23 Desktop-Ubuntu mopidy[8268]:   Flags: 2
okt 23 23:27:23 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:23,601 [8268:Audio-2 (_actor_loop)] mopidy.audio.actor
okt 23 23:27:23 Desktop-Ubuntu mopidy[8268]:   Got STATE_CHANGED bus message: old=GST_STATE_NULL new=GST_STATE_READY pending=GST_STATE_VOID_PENDING
okt 23 23:27:23 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:23,601 [8268:MainThread] mopidy.audio.gst
okt 23 23:27:23 Desktop-Ubuntu mopidy[8268]:   Changing state to GST_STATE_READY: result=GST_STATE_CHANGE_SUCCESS
okt 23 23:27:23 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:23,601 [8268:Audio-2 (_actor_loop)] mopidy.audio.gst
okt 23 23:27:23 Desktop-Ubuntu mopidy[8268]:   Track is not playable: file:///home/gerard/Music/test.mp3
okt 23 23:27:23 Desktop-Ubuntu mopidy[8268]: WARNING  2022-10-23 23:27:23,601 [8268:Core-6 (_actor_loop)] mopidy.core.tracklist
okt 23 23:27:23 Desktop-Ubuntu mopidy[8268]:   Changing state to GST_STATE_NULL: result=GST_STATE_CHANGE_SUCCESS
okt 23 23:27:23 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:23,600 [8268:MainThread] mopidy.audio.gst
okt 23 23:27:23 Desktop-Ubuntu mopidy[8268]:   Setting GStreamer state to GST_STATE_PLAYING failed
okt 23 23:27:23 Desktop-Ubuntu mopidy[8268]: WARNING  2022-10-23 23:27:23,600 [8268:Audio-2 (_actor_loop)] mopidy.audio.actor
okt 23 23:27:23 Desktop-Ubuntu mopidy[8268]:   Got ERROR bus message: error=GLib.Error('Failed to connect: Connection refused', 'gst-resource-error-quark', 1) debug='../ext/pulse/pulsesink.c(615): gst_pulseringbuffer_open_device (): /GstBin:audio-sink/mopidy+audio+actor+_Outputs:mopidy+audio+actor+_outputs0/GstBin:bin0/GstPulseSink:pulsesink0'
okt 23 23:27:23 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:23,600 [8268:MainThread] mopidy.audio.gst
okt 23 23:27:23 Desktop-Ubuntu mopidy[8268]:   Changing state to GST_STATE_PLAYING: result=GST_STATE_CHANGE_FAILURE
okt 23 23:27:23 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:23,600 [8268:Audio-2 (_actor_loop)] mopidy.audio.gst
okt 23 23:27:23 Desktop-Ubuntu mopidy[8268]:   GStreamer error: Failed to connect: Connection refused
okt 23 23:27:23 Desktop-Ubuntu mopidy[8268]: ERROR    2022-10-23 23:27:23,600 [8268:MainThread] mopidy.audio.gst
okt 23 23:27:23 Desktop-Ubuntu mopidy[8268]:   Sending volume_changed to MixerListener: {'volume': 100}
okt 23 23:27:23 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:23,599 [8268:SoftwareMixer-1 (_actor_loop)] mopidy.listener
okt 23 23:27:23 Desktop-Ubuntu mopidy[8268]:   Mixer event: volume_changed(volume=100)
okt 23 23:27:23 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:23,599 [8268:SoftwareMixer-1 (_actor_loop)] mopidy.mixer
okt 23 23:27:23 Desktop-Ubuntu mopidy[8268]:   Flags: 2
okt 23 23:27:23 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:23,599 [8268:Audio-2 (_actor_loop)] mopidy.audio.actor
okt 23 23:27:23 Desktop-Ubuntu mopidy[8268]:   Got STATE_CHANGED bus message: old=GST_STATE_NULL new=GST_STATE_READY pending=GST_STATE_VOID_PENDING
okt 23 23:27:23 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:23,599 [8268:MainThread] mopidy.audio.gst
okt 23 23:27:23 Desktop-Ubuntu mopidy[8268]:   Changing state to GST_STATE_READY: result=GST_STATE_CHANGE_SUCCESS
okt 23 23:27:23 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:23,598 [8268:Audio-2 (_actor_loop)] mopidy.audio.gst
okt 23 23:27:23 Desktop-Ubuntu mopidy[8268]:   Track is not playable: file:///home/gerard/Music/test.mp3
okt 23 23:27:23 Desktop-Ubuntu mopidy[8268]: WARNING  2022-10-23 23:27:23,598 [8268:Core-6 (_actor_loop)] mopidy.core.tracklist
okt 23 23:27:23 Desktop-Ubuntu mopidy[8268]:   Changing state to GST_STATE_NULL: result=GST_STATE_CHANGE_SUCCESS
okt 23 23:27:23 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:23,598 [8268:MainThread] mopidy.audio.gst
okt 23 23:27:23 Desktop-Ubuntu mopidy[8268]:   Got ERROR bus message: error=GLib.Error('Failed to connect: Connection refused', 'gst-resource-error-quark', 1) debug='../ext/pulse/pulsesink.c(615): gst_pulseringbuffer_open_device (): /GstBin:audio-sink/mopidy+audio+actor+_Outputs:mopidy+audio+actor+_outputs0/GstBin:bin0/GstPulseSink:pulsesink0'
okt 23 23:27:23 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:23,598 [8268:MainThread] mopidy.audio.gst
okt 23 23:27:23 Desktop-Ubuntu mopidy[8268]:   GStreamer error: Failed to connect: Connection refused
okt 23 23:27:23 Desktop-Ubuntu mopidy[8268]: ERROR    2022-10-23 23:27:23,597 [8268:MainThread] mopidy.audio.gst
okt 23 23:27:23 Desktop-Ubuntu mopidy[8268]:   Setting GStreamer state to GST_STATE_PLAYING failed
okt 23 23:27:23 Desktop-Ubuntu mopidy[8268]: WARNING  2022-10-23 23:27:23,597 [8268:Audio-2 (_actor_loop)] mopidy.audio.actor
okt 23 23:27:23 Desktop-Ubuntu mopidy[8268]:   Changing state to GST_STATE_PLAYING: result=GST_STATE_CHANGE_FAILURE
okt 23 23:27:23 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:23,597 [8268:Audio-2 (_actor_loop)] mopidy.audio.gst
okt 23 23:27:23 Desktop-Ubuntu mopidy[8268]:   Sending volume_changed to MixerListener: {'volume': 100}
okt 23 23:27:23 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:23,596 [8268:SoftwareMixer-1 (_actor_loop)] mopidy.listener
okt 23 23:27:23 Desktop-Ubuntu mopidy[8268]:   Mixer event: volume_changed(volume=100)
okt 23 23:27:23 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:23,596 [8268:SoftwareMixer-1 (_actor_loop)] mopidy.mixer
okt 23 23:27:23 Desktop-Ubuntu mopidy[8268]:   Got STATE_CHANGED bus message: old=GST_STATE_NULL new=GST_STATE_READY pending=GST_STATE_VOID_PENDING
okt 23 23:27:23 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:23,596 [8268:MainThread] mopidy.audio.gst
okt 23 23:27:23 Desktop-Ubuntu mopidy[8268]:   Flags: 2
okt 23 23:27:23 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:23,596 [8268:Audio-2 (_actor_loop)] mopidy.audio.actor
okt 23 23:27:23 Desktop-Ubuntu mopidy[8268]:   Changing state to GST_STATE_READY: result=GST_STATE_CHANGE_SUCCESS
okt 23 23:27:23 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:23,595 [8268:Audio-2 (_actor_loop)] mopidy.audio.gst
okt 23 23:27:23 Desktop-Ubuntu mopidy[8268]:   Track is not playable: file:///home/gerard/Music/test.mp3
okt 23 23:27:23 Desktop-Ubuntu mopidy[8268]: WARNING  2022-10-23 23:27:23,595 [8268:Core-6 (_actor_loop)] mopidy.core.tracklist
okt 23 23:27:23 Desktop-Ubuntu mopidy[8268]:   Changing state to GST_STATE_NULL: result=GST_STATE_CHANGE_SUCCESS
okt 23 23:27:23 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:23,594 [8268:MainThread] mopidy.audio.gst
okt 23 23:27:23 Desktop-Ubuntu mopidy[8268]:   Got ERROR bus message: error=GLib.Error('Failed to connect: Connection refused', 'gst-resource-error-quark', 1) debug='../ext/pulse/pulsesink.c(615): gst_pulseringbuffer_open_device (): /GstBin:audio-sink/mopidy+audio+actor+_Outputs:mopidy+audio+actor+_outputs0/GstBin:bin0/GstPulseSink:pulsesink0'
okt 23 23:27:23 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:23,594 [8268:MainThread] mopidy.audio.gst
okt 23 23:27:23 Desktop-Ubuntu mopidy[8268]:   GStreamer error: Failed to connect: Connection refused
okt 23 23:27:23 Desktop-Ubuntu mopidy[8268]: ERROR    2022-10-23 23:27:23,594 [8268:MainThread] mopidy.audio.gst
okt 23 23:27:23 Desktop-Ubuntu mopidy[8268]:   Setting GStreamer state to GST_STATE_PLAYING failed
okt 23 23:27:23 Desktop-Ubuntu mopidy[8268]: WARNING  2022-10-23 23:27:23,592 [8268:Audio-2 (_actor_loop)] mopidy.audio.actor
okt 23 23:27:23 Desktop-Ubuntu mopidy[8268]:   Changing state to GST_STATE_PLAYING: result=GST_STATE_CHANGE_FAILURE
okt 23 23:27:23 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:23,592 [8268:Audio-2 (_actor_loop)] mopidy.audio.gst
okt 23 23:27:23 Desktop-Ubuntu mopidy[8268]:   Sending volume_changed to MixerListener: {'volume': 100}
okt 23 23:27:23 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:23,590 [8268:SoftwareMixer-1 (_actor_loop)] mopidy.listener
okt 23 23:27:23 Desktop-Ubuntu mopidy[8268]:   Mixer event: volume_changed(volume=100)
okt 23 23:27:23 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:23,590 [8268:SoftwareMixer-1 (_actor_loop)] mopidy.mixer
okt 23 23:27:23 Desktop-Ubuntu mopidy[8268]:   Flags: 2
okt 23 23:27:23 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:23,590 [8268:Audio-2 (_actor_loop)] mopidy.audio.actor
okt 23 23:27:23 Desktop-Ubuntu mopidy[8268]:   Got STATE_CHANGED bus message: old=GST_STATE_NULL new=GST_STATE_READY pending=GST_STATE_VOID_PENDING
okt 23 23:27:23 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:23,590 [8268:MainThread] mopidy.audio.gst
okt 23 23:27:23 Desktop-Ubuntu mopidy[8268]:   Changing state to GST_STATE_READY: result=GST_STATE_CHANGE_SUCCESS
okt 23 23:27:23 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:23,590 [8268:Audio-2 (_actor_loop)] mopidy.audio.gst
okt 23 23:27:23 Desktop-Ubuntu mopidy[8268]:   Received WebSocket message from 127.0.0.1: '{"method":"core.playback.play","params":{"tlid":4},"jsonrpc":"2.0","id":30}'
okt 23 23:27:23 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:23,589 [8268:HttpServer] mopidy.http.handlers
okt 23 23:27:23 Desktop-Ubuntu mopidy[8268]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 29, "result": [{"__model__": "TlTrack", "tlid": 4, "track": {"__model__": "Track", "uri": "file:///home/gerard/Music/test.mp3", "name": "Symphony No. 40 in G Minor, K. 550 - I. Molto Allegro", "artists": [{"__model__": "Artist", "name": "Czech National Symphony Orchestra"}], "album": {"__model__": "Album", "name": "Musopen Kickstarter Project", "artists": [{"__model__": "Artist", "name": "Czech National Symphony Orchestra"}]}, "composers": [{"__model__": "Artist", "name": "Wolfgang Amadeus Mozart"}], "genre": "Classical", "length": 358848}}]}'
okt 23 23:27:23 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:23,587 [8268:HttpServer] mopidy.http.handlers
okt 23 23:27:23 Desktop-Ubuntu mopidy[8268]:   Sending tracklist_changed to CoreListener: {}
okt 23 23:27:23 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:23,586 [8268:Core-6 (_actor_loop)] mopidy.listener
okt 23 23:27:23 Desktop-Ubuntu mopidy[8268]:   Triggering event: tracklist_changed()
okt 23 23:27:23 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:23,586 [8268:Core-6 (_actor_loop)] mopidy.core.tracklist
okt 23 23:27:23 Desktop-Ubuntu mopidy[8268]:   element pipeline3: GstMessageAsyncDone, running-time=(guint64)18446744073709551615;
okt 23 23:27:23 Desktop-Ubuntu mopidy[8268]: TRACE    2022-10-23 23:27:23,584 [8268:FileBackend-3 (_actor_loop)] mopidy.audio.scan
okt 23 23:27:23 Desktop-Ubuntu mopidy[8268]:   element fakesink3: GstMessageTag, taglist=(taglist)"taglist\,\ encoder\=\(string\)\"LAME\\\ 32bi...
okt 23 23:27:23 Desktop-Ubuntu mopidy[8268]: TRACE    2022-10-23 23:27:23,583 [8268:FileBackend-3 (_actor_loop)] mopidy.audio.scan
okt 23 23:27:23 Desktop-Ubuntu mopidy[8268]:   element fakesink3: GstMessageTag, taglist=(taglist)"taglist\,\ encoder\=\(string\)\"LAME\\\ 32bi...
okt 23 23:27:23 Desktop-Ubuntu mopidy[8268]: TRACE    2022-10-23 23:27:23,557 [8268:FileBackend-3 (_actor_loop)] mopidy.audio.scan
okt 23 23:27:23 Desktop-Ubuntu mopidy[8268]:   element mpegaudioparse3: GstMessageDurationChanged;
okt 23 23:27:23 Desktop-Ubuntu mopidy[8268]: TRACE    2022-10-23 23:27:23,530 [8268:FileBackend-3 (_actor_loop)] mopidy.audio.scan
okt 23 23:27:23 Desktop-Ubuntu mopidy[8268]:   element decodebin3: have-audio;
okt 23 23:27:23 Desktop-Ubuntu mopidy[8268]: TRACE    2022-10-23 23:27:23,530 [8268:FileBackend-3 (_actor_loop)] mopidy.audio.scan
okt 23 23:27:23 Desktop-Ubuntu mopidy[8268]:   Looking up file URI: file:///home/gerard/Music/test.mp3
okt 23 23:27:23 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:23,527 [8268:FileBackend-3 (_actor_loop)] mopidy.file.library
okt 23 23:27:23 Desktop-Ubuntu mopidy[8268]:   Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.add","params":{"uris":["file:///home/gerard/Music/test.mp3"],"at_position":0},"jsonrpc":"2.0","id":29}'
okt 23 23:27:23 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:23,527 [8268:HttpServer] mopidy.http.handlers
okt 23 23:27:23 Desktop-Ubuntu mopidy[8268]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 28, "result": 3}'
okt 23 23:27:23 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:23,450 [8268:HttpServer] mopidy.http.handlers
okt 23 23:27:23 Desktop-Ubuntu mopidy[8268]:   Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_next_tlid","params":{},"jsonrpc":"2.0","id":28}'
okt 23 23:27:23 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:23,449 [8268:HttpServer] mopidy.http.handlers
okt 23 23:27:22 Desktop-Ubuntu mopidy[8268]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 27, "result": 3}'
okt 23 23:27:22 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:22,668 [8268:HttpServer] mopidy.http.handlers
okt 23 23:27:22 Desktop-Ubuntu mopidy[8268]:   Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_next_tlid","params":{},"jsonrpc":"2.0","id":27}'
okt 23 23:27:22 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:22,667 [8268:HttpServer] mopidy.http.handlers
okt 23 23:27:22 Desktop-Ubuntu mopidy[8268]:   {'id': 166656044245916, 'jsonrpc': '2.0', 'method': 'broadcast', 'result': {'message': 'Broadcast to 1 connections'}, 'recipient': 'BFXBXSDGLGDC'}
okt 23 23:27:22 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:22,461 [8268:HttpServer] mopidy_iris.core
okt 23 23:27:22 Desktop-Ubuntu mopidy[8268]:   {'method': 'notification', 'params': {'notification': {'content': '166637467060576 changed track'}}, 'connection_id': 'BFXBXSDGLGDC'}
okt 23 23:27:22 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:22,460 [8268:HttpServer] mopidy_iris.core
okt 23 23:27:22 Desktop-Ubuntu mopidy[8268]:   Iris websocket message received: {"jsonrpc":"2.0","id":166656044245916,"method":"broadcast","params":{"method":"notification","params":{"notification":{"content":"166637467060576 changed track"}}}}
okt 23 23:27:22 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:22,460 [8268:HttpServer] mopidy_iris.handlers
okt 23 23:27:22 Desktop-Ubuntu mopidy[8268]:   {'id': 166656044244613, 'jsonrpc': '2.0', 'method': 'add_queue_metadata', 'result': {'message': 'Added queue metadata'}, 'recipient': 'BFXBXSDGLGDC'}
okt 23 23:27:22 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:22,460 [8268:HttpServer] mopidy_iris.core
okt 23 23:27:22 Desktop-Ubuntu mopidy[8268]:   {'method': 'queue_metadata_changed', 'params': {'queue_metadata': {'tlid_2': {'tlid': 2, 'added_from': {'uri': 'm3u:Example%20Playlist.m3u8', 'name': 'Example Playlist', 'type': 'playlist', 'provider': 'mopidy', 'context': 'editable-playlist', 'can_edit': True}, 'added_by': 166637467060576}, 'tlid_1': {'tlid': 1, 'added_from': {'uri': 'm3u:Example%20Playlist.m3u8', 'name': 'Example Playlist', 'type': 'playlist', 'provider': 'mopidy', 'context': 'editable-playlist', 'can_edit': True}, 'added_by': 166637467060576}, 'tlid_3': {'tlid': 3, 'added_from': {'uri': 'm3u:Example%20Playlist.m3u8', 'name': 'Example Playlist', 'type': 'playlist', 'provider': 'mopidy', 'context': 'editable-playlist', 'can_edit': True}, 'added_by': 166637467060576}}}}
okt 23 23:27:22 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:22,460 [8268:HttpServer] mopidy_iris.core
okt 23 23:27:22 Desktop-Ubuntu mopidy[8268]:   Iris websocket message received: {"jsonrpc":"2.0","id":166656044244613,"method":"add_queue_metadata","params":{"tlids":[3],"added_from":{"uri":"m3u:Example%20Playlist.m3u8","name":"Example Playlist","type":"playlist","provider":"mopidy","context":"editable-playlist","can_edit":true},"added_by":166637467060576}}
okt 23 23:27:22 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:22,460 [8268:HttpServer] mopidy_iris.handlers
okt 23 23:27:22 Desktop-Ubuntu mopidy[8268]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 26, "result": [{"__model__": "TlTrack", "tlid": 3, "track": {"__model__": "Track", "uri": "file:///home/gerard/Music/test.mp3", "name": "Symphony No. 40 in G Minor, K. 550 - I. Molto Allegro", "artists": [{"__model__": "Artist", "name": "Czech National Symphony Orchestra"}], "album": {"__model__": "Album", "name": "Musopen Kickstarter Project", "artists": [{"__model__": "Artist", "name": "Czech National Symphony Orchestra"}]}, "composers": [{"__model__": "Artist", "name": "Wolfgang Amadeus Mozart"}], "genre": "Classical", "length": 358848}}, {"__model__": "TlTrack", "tlid": 2, "track": {"__model__": "Track", "uri": "file:///home/gerard/Music/test.mp3", "name": "Symphony No. 40 in G Minor, K. 550 - I. Molto Allegro", "artists": [{"__model__": "Artist", "name": "Czech National Symphony Orchestra"}], "album": {"__model__": "Album", "name": "Musopen Kickstarter Project", "artists": [{"__model__": "Artist", "name": "Czech National Symphony Orchestra"}]}, "composers": [{"__model__": "Artist", "name": "Wolfgang Amadeus Mozart"}], "genre": "Classical", "length": 358848}}, {"__model__": "TlTrack", "tlid": 1, "track": {"__model__": "Track", "uri": "file:///home/gerard/Music/test.mp3", "name": "Symphony No. 40 in G Minor, K. 550 - I. Molto Allegro", "artists": [{"__model__": "Artist", "name": "Czech National Symphony Orchestra"}], "album": {"__model__": "Album", "name": "Musopen Kickstarter Project", "artists": [{"__model__": "Artist", "name": "Czech National Symphony Orchestra"}]}, "composers": [{"__model__": "Artist", "name": "Wolfgang Amadeus Mozart"}], "genre": "Classical", "length": 358848}}]}'
okt 23 23:27:22 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:22,459 [8268:HttpServer] mopidy.http.handlers
okt 23 23:27:22 Desktop-Ubuntu mopidy[8268]:   Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_tl_tracks","params":{},"jsonrpc":"2.0","id":26}'
okt 23 23:27:22 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:22,458 [8268:HttpServer] mopidy.http.handlers
okt 23 23:27:22 Desktop-Ubuntu mopidy[8268]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 25, "result": null}'
okt 23 23:27:22 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:22,458 [8268:HttpServer] mopidy.http.handlers
okt 23 23:27:22 Desktop-Ubuntu mopidy[8268]:   Sending volume_changed to CoreListener: {'volume': 100}
okt 23 23:27:22 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:22,458 [8268:Core-6 (_actor_loop)] mopidy.listener
okt 23 23:27:22 Desktop-Ubuntu mopidy[8268]:   Sending volume_changed to CoreListener: {'volume': 100}
okt 23 23:27:22 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:22,458 [8268:Core-6 (_actor_loop)] mopidy.listener
okt 23 23:27:22 Desktop-Ubuntu mopidy[8268]:   Sending volume_changed to CoreListener: {'volume': 100}
okt 23 23:27:22 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:22,457 [8268:Core-6 (_actor_loop)] mopidy.listener
okt 23 23:27:22 Desktop-Ubuntu mopidy[8268]:   Track is not playable: file:///home/gerard/Music/test.mp3
okt 23 23:27:22 Desktop-Ubuntu mopidy[8268]: WARNING  2022-10-23 23:27:22,457 [8268:Core-6 (_actor_loop)] mopidy.core.tracklist
okt 23 23:27:22 Desktop-Ubuntu mopidy[8268]:   Changing state to GST_STATE_NULL: result=GST_STATE_CHANGE_SUCCESS
okt 23 23:27:22 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:22,457 [8268:MainThread] mopidy.audio.gst
okt 23 23:27:22 Desktop-Ubuntu mopidy[8268]:   Setting GStreamer state to GST_STATE_PLAYING failed
okt 23 23:27:22 Desktop-Ubuntu mopidy[8268]: WARNING  2022-10-23 23:27:22,457 [8268:Audio-2 (_actor_loop)] mopidy.audio.actor
okt 23 23:27:22 Desktop-Ubuntu mopidy[8268]:   Got ERROR bus message: error=GLib.Error('Failed to connect: Connection refused', 'gst-resource-error-quark', 1) debug='../ext/pulse/pulsesink.c(615): gst_pulseringbuffer_open_device (): /GstBin:audio-sink/mopidy+audio+actor+_Outputs:mopidy+audio+actor+_outputs0/GstBin:bin0/GstPulseSink:pulsesink0'
okt 23 23:27:22 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:22,457 [8268:MainThread] mopidy.audio.gst
okt 23 23:27:22 Desktop-Ubuntu mopidy[8268]:   Changing state to GST_STATE_PLAYING: result=GST_STATE_CHANGE_FAILURE
okt 23 23:27:22 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:22,457 [8268:Audio-2 (_actor_loop)] mopidy.audio.gst
okt 23 23:27:22 Desktop-Ubuntu mopidy[8268]:   GStreamer error: Failed to connect: Connection refused
okt 23 23:27:22 Desktop-Ubuntu mopidy[8268]: ERROR    2022-10-23 23:27:22,456 [8268:MainThread] mopidy.audio.gst
okt 23 23:27:22 Desktop-Ubuntu mopidy[8268]:   Sending volume_changed to MixerListener: {'volume': 100}
okt 23 23:27:22 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:22,456 [8268:SoftwareMixer-1 (_actor_loop)] mopidy.listener
okt 23 23:27:22 Desktop-Ubuntu mopidy[8268]:   Mixer event: volume_changed(volume=100)
okt 23 23:27:22 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:22,455 [8268:SoftwareMixer-1 (_actor_loop)] mopidy.mixer
okt 23 23:27:22 Desktop-Ubuntu mopidy[8268]:   Got STATE_CHANGED bus message: old=GST_STATE_NULL new=GST_STATE_READY pending=GST_STATE_VOID_PENDING
okt 23 23:27:22 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:22,455 [8268:MainThread] mopidy.audio.gst
okt 23 23:27:22 Desktop-Ubuntu mopidy[8268]:   Flags: 2
okt 23 23:27:22 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:22,455 [8268:Audio-2 (_actor_loop)] mopidy.audio.actor
okt 23 23:27:22 Desktop-Ubuntu mopidy[8268]:   Changing state to GST_STATE_READY: result=GST_STATE_CHANGE_SUCCESS
okt 23 23:27:22 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:22,455 [8268:Audio-2 (_actor_loop)] mopidy.audio.gst
okt 23 23:27:22 Desktop-Ubuntu mopidy[8268]:   Track is not playable: file:///home/gerard/Music/test.mp3
okt 23 23:27:22 Desktop-Ubuntu mopidy[8268]: WARNING  2022-10-23 23:27:22,454 [8268:Core-6 (_actor_loop)] mopidy.core.tracklist
okt 23 23:27:22 Desktop-Ubuntu mopidy[8268]:   Setting GStreamer state to GST_STATE_PLAYING failed
okt 23 23:27:22 Desktop-Ubuntu mopidy[8268]: WARNING  2022-10-23 23:27:22,452 [8268:Audio-2 (_actor_loop)] mopidy.audio.actor
okt 23 23:27:22 Desktop-Ubuntu mopidy[8268]:   Changing state to GST_STATE_PLAYING: result=GST_STATE_CHANGE_FAILURE
okt 23 23:27:22 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:22,452 [8268:Audio-2 (_actor_loop)] mopidy.audio.gst
okt 23 23:27:22 Desktop-Ubuntu mopidy[8268]:   Changing state to GST_STATE_NULL: result=GST_STATE_CHANGE_SUCCESS
okt 23 23:27:22 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:22,452 [8268:MainThread] mopidy.audio.gst
okt 23 23:27:22 Desktop-Ubuntu mopidy[8268]:   Got ERROR bus message: error=GLib.Error('Failed to connect: Connection refused', 'gst-resource-error-quark', 1) debug='../ext/pulse/pulsesink.c(615): gst_pulseringbuffer_open_device (): /GstBin:audio-sink/mopidy+audio+actor+_Outputs:mopidy+audio+actor+_outputs0/GstBin:bin0/GstPulseSink:pulsesink0'
okt 23 23:27:22 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:22,452 [8268:MainThread] mopidy.audio.gst
okt 23 23:27:22 Desktop-Ubuntu mopidy[8268]:   GStreamer error: Failed to connect: Connection refused
okt 23 23:27:22 Desktop-Ubuntu mopidy[8268]: ERROR    2022-10-23 23:27:22,452 [8268:MainThread] mopidy.audio.gst
okt 23 23:27:22 Desktop-Ubuntu mopidy[8268]:   Sending volume_changed to MixerListener: {'volume': 100}
okt 23 23:27:22 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:22,451 [8268:SoftwareMixer-1 (_actor_loop)] mopidy.listener
okt 23 23:27:22 Desktop-Ubuntu mopidy[8268]:   Mixer event: volume_changed(volume=100)
okt 23 23:27:22 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:22,450 [8268:SoftwareMixer-1 (_actor_loop)] mopidy.mixer
okt 23 23:27:22 Desktop-Ubuntu mopidy[8268]:   Flags: 2
okt 23 23:27:22 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:22,450 [8268:Audio-2 (_actor_loop)] mopidy.audio.actor
okt 23 23:27:22 Desktop-Ubuntu mopidy[8268]:   Got STATE_CHANGED bus message: old=GST_STATE_NULL new=GST_STATE_READY pending=GST_STATE_VOID_PENDING
okt 23 23:27:22 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:22,450 [8268:MainThread] mopidy.audio.gst
okt 23 23:27:22 Desktop-Ubuntu mopidy[8268]:   Changing state to GST_STATE_READY: result=GST_STATE_CHANGE_SUCCESS
okt 23 23:27:22 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:22,450 [8268:Audio-2 (_actor_loop)] mopidy.audio.gst
okt 23 23:27:22 Desktop-Ubuntu mopidy[8268]:   Track is not playable: file:///home/gerard/Music/test.mp3
okt 23 23:27:22 Desktop-Ubuntu mopidy[8268]: WARNING  2022-10-23 23:27:22,449 [8268:Core-6 (_actor_loop)] mopidy.core.tracklist
okt 23 23:27:22 Desktop-Ubuntu mopidy[8268]:   Changing state to GST_STATE_NULL: result=GST_STATE_CHANGE_SUCCESS
okt 23 23:27:22 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:22,449 [8268:MainThread] mopidy.audio.gst
okt 23 23:27:22 Desktop-Ubuntu mopidy[8268]:   Setting GStreamer state to GST_STATE_PLAYING failed
okt 23 23:27:22 Desktop-Ubuntu mopidy[8268]: WARNING  2022-10-23 23:27:22,449 [8268:Audio-2 (_actor_loop)] mopidy.audio.actor
okt 23 23:27:22 Desktop-Ubuntu mopidy[8268]:   Got ERROR bus message: error=GLib.Error('Failed to connect: Connection refused', 'gst-resource-error-quark', 1) debug='../ext/pulse/pulsesink.c(615): gst_pulseringbuffer_open_device (): /GstBin:audio-sink/mopidy+audio+actor+_Outputs:mopidy+audio+actor+_outputs0/GstBin:bin0/GstPulseSink:pulsesink0'
okt 23 23:27:22 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:22,449 [8268:MainThread] mopidy.audio.gst
okt 23 23:27:22 Desktop-Ubuntu mopidy[8268]:   Changing state to GST_STATE_PLAYING: result=GST_STATE_CHANGE_FAILURE
okt 23 23:27:22 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:22,449 [8268:Audio-2 (_actor_loop)] mopidy.audio.gst
okt 23 23:27:22 Desktop-Ubuntu mopidy[8268]:   GStreamer error: Failed to connect: Connection refused
okt 23 23:27:22 Desktop-Ubuntu mopidy[8268]: ERROR    2022-10-23 23:27:22,449 [8268:MainThread] mopidy.audio.gst
okt 23 23:27:22 Desktop-Ubuntu mopidy[8268]:   Sending volume_changed to MixerListener: {'volume': 100}
okt 23 23:27:22 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:22,448 [8268:SoftwareMixer-1 (_actor_loop)] mopidy.listener
okt 23 23:27:22 Desktop-Ubuntu mopidy[8268]:   Mixer event: volume_changed(volume=100)
okt 23 23:27:22 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:22,447 [8268:SoftwareMixer-1 (_actor_loop)] mopidy.mixer
okt 23 23:27:22 Desktop-Ubuntu mopidy[8268]:   Flags: 2
okt 23 23:27:22 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:22,447 [8268:Audio-2 (_actor_loop)] mopidy.audio.actor
okt 23 23:27:22 Desktop-Ubuntu mopidy[8268]:   Got STATE_CHANGED bus message: old=GST_STATE_NULL new=GST_STATE_READY pending=GST_STATE_VOID_PENDING
okt 23 23:27:22 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:22,447 [8268:MainThread] mopidy.audio.gst
okt 23 23:27:22 Desktop-Ubuntu mopidy[8268]:   Changing state to GST_STATE_READY: result=GST_STATE_CHANGE_SUCCESS
okt 23 23:27:22 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:22,447 [8268:Audio-2 (_actor_loop)] mopidy.audio.gst
okt 23 23:27:22 Desktop-Ubuntu mopidy[8268]:   Received WebSocket message from 127.0.0.1: '{"method":"core.playback.play","params":{"tlid":3},"jsonrpc":"2.0","id":25}'
okt 23 23:27:22 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:22,446 [8268:HttpServer] mopidy.http.handlers
okt 23 23:27:22 Desktop-Ubuntu mopidy[8268]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 24, "result": [{"__model__": "TlTrack", "tlid": 3, "track": {"__model__": "Track", "uri": "file:///home/gerard/Music/test.mp3", "name": "Symphony No. 40 in G Minor, K. 550 - I. Molto Allegro", "artists": [{"__model__": "Artist", "name": "Czech National Symphony Orchestra"}], "album": {"__model__": "Album", "name": "Musopen Kickstarter Project", "artists": [{"__model__": "Artist", "name": "Czech National Symphony Orchestra"}]}, "composers": [{"__model__": "Artist", "name": "Wolfgang Amadeus Mozart"}], "genre": "Classical", "length": 358848}}]}'
okt 23 23:27:22 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:22,444 [8268:HttpServer] mopidy.http.handlers
okt 23 23:27:22 Desktop-Ubuntu mopidy[8268]:   Sending tracklist_changed to CoreListener: {}
okt 23 23:27:22 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:22,443 [8268:Core-6 (_actor_loop)] mopidy.listener
okt 23 23:27:22 Desktop-Ubuntu mopidy[8268]:   Triggering event: tracklist_changed()
okt 23 23:27:22 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:22,443 [8268:Core-6 (_actor_loop)] mopidy.core.tracklist
okt 23 23:27:22 Desktop-Ubuntu mopidy[8268]:   element pipeline2: GstMessageAsyncDone, running-time=(guint64)18446744073709551615;
okt 23 23:27:22 Desktop-Ubuntu mopidy[8268]: TRACE    2022-10-23 23:27:22,442 [8268:FileBackend-3 (_actor_loop)] mopidy.audio.scan
okt 23 23:27:22 Desktop-Ubuntu mopidy[8268]:   element fakesink2: GstMessageTag, taglist=(taglist)"taglist\,\ encoder\=\(string\)\"LAME\\\ 32bi...
okt 23 23:27:22 Desktop-Ubuntu mopidy[8268]: TRACE    2022-10-23 23:27:22,441 [8268:FileBackend-3 (_actor_loop)] mopidy.audio.scan
okt 23 23:27:22 Desktop-Ubuntu mopidy[8268]:   element fakesink2: GstMessageTag, taglist=(taglist)"taglist\,\ encoder\=\(string\)\"LAME\\\ 32bi...
okt 23 23:27:22 Desktop-Ubuntu mopidy[8268]: TRACE    2022-10-23 23:27:22,415 [8268:FileBackend-3 (_actor_loop)] mopidy.audio.scan
okt 23 23:27:22 Desktop-Ubuntu mopidy[8268]:   element mpegaudioparse2: GstMessageDurationChanged;
okt 23 23:27:22 Desktop-Ubuntu mopidy[8268]: TRACE    2022-10-23 23:27:22,389 [8268:FileBackend-3 (_actor_loop)] mopidy.audio.scan
okt 23 23:27:22 Desktop-Ubuntu mopidy[8268]:   element decodebin2: have-audio;
okt 23 23:27:22 Desktop-Ubuntu mopidy[8268]: TRACE    2022-10-23 23:27:22,389 [8268:FileBackend-3 (_actor_loop)] mopidy.audio.scan
okt 23 23:27:22 Desktop-Ubuntu mopidy[8268]:   Looking up file URI: file:///home/gerard/Music/test.mp3
okt 23 23:27:22 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:22,386 [8268:FileBackend-3 (_actor_loop)] mopidy.file.library
okt 23 23:27:22 Desktop-Ubuntu mopidy[8268]:   Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.add","params":{"uris":["file:///home/gerard/Music/test.mp3"],"at_position":0},"jsonrpc":"2.0","id":24}'
okt 23 23:27:22 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:22,385 [8268:HttpServer] mopidy.http.handlers
okt 23 23:27:21 Desktop-Ubuntu mopidy[8268]:   {'id': 166656044167386, 'jsonrpc': '2.0', 'method': 'broadcast', 'result': {'message': 'Broadcast to 1 connections'}, 'recipient': 'BFXBXSDGLGDC'}
okt 23 23:27:21 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:21,674 [8268:HttpServer] mopidy_iris.core
okt 23 23:27:21 Desktop-Ubuntu mopidy[8268]:   {'method': 'notification', 'params': {'notification': {'content': '166637467060576 changed track'}}, 'connection_id': 'BFXBXSDGLGDC'}
okt 23 23:27:21 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:21,674 [8268:HttpServer] mopidy_iris.core
okt 23 23:27:21 Desktop-Ubuntu mopidy[8268]:   Iris websocket message received: {"jsonrpc":"2.0","id":166656044167386,"method":"broadcast","params":{"method":"notification","params":{"notification":{"content":"166637467060576 changed track"}}}}
okt 23 23:27:21 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:21,674 [8268:HttpServer] mopidy_iris.handlers
okt 23 23:27:21 Desktop-Ubuntu mopidy[8268]:   {'id': 166656044166497, 'jsonrpc': '2.0', 'method': 'add_queue_metadata', 'result': {'message': 'Added queue metadata'}, 'recipient': 'BFXBXSDGLGDC'}
okt 23 23:27:21 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:21,674 [8268:HttpServer] mopidy_iris.core
okt 23 23:27:21 Desktop-Ubuntu mopidy[8268]:   {'method': 'queue_metadata_changed', 'params': {'queue_metadata': {'tlid_1': {'tlid': 1, 'added_from': {'uri': 'm3u:Example%20Playlist.m3u8', 'name': 'Example Playlist', 'type': 'playlist', 'provider': 'mopidy', 'context': 'editable-playlist', 'can_edit': True}, 'added_by': 166637467060576}, 'tlid_2': {'tlid': 2, 'added_from': {'uri': 'm3u:Example%20Playlist.m3u8', 'name': 'Example Playlist', 'type': 'playlist', 'provider': 'mopidy', 'context': 'editable-playlist', 'can_edit': True}, 'added_by': 166637467060576}}}}
okt 23 23:27:21 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:21,673 [8268:HttpServer] mopidy_iris.core
okt 23 23:27:21 Desktop-Ubuntu mopidy[8268]:   Iris websocket message received: {"jsonrpc":"2.0","id":166656044166497,"method":"add_queue_metadata","params":{"tlids":[2],"added_from":{"uri":"m3u:Example%20Playlist.m3u8","name":"Example Playlist","type":"playlist","provider":"mopidy","context":"editable-playlist","can_edit":true},"added_by":166637467060576}}
okt 23 23:27:21 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:21,673 [8268:HttpServer] mopidy_iris.handlers
okt 23 23:27:21 Desktop-Ubuntu mopidy[8268]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 23, "result": [{"__model__": "TlTrack", "tlid": 2, "track": {"__model__": "Track", "uri": "file:///home/gerard/Music/test.mp3", "name": "Symphony No. 40 in G Minor, K. 550 - I. Molto Allegro", "artists": [{"__model__": "Artist", "name": "Czech National Symphony Orchestra"}], "album": {"__model__": "Album", "name": "Musopen Kickstarter Project", "artists": [{"__model__": "Artist", "name": "Czech National Symphony Orchestra"}]}, "composers": [{"__model__": "Artist", "name": "Wolfgang Amadeus Mozart"}], "genre": "Classical", "length": 358848}}, {"__model__": "TlTrack", "tlid": 1, "track": {"__model__": "Track", "uri": "file:///home/gerard/Music/test.mp3", "name": "Symphony No. 40 in G Minor, K. 550 - I. Molto Allegro", "artists": [{"__model__": "Artist", "name": "Czech National Symphony Orchestra"}], "album": {"__model__": "Album", "name": "Musopen Kickstarter Project", "artists": [{"__model__": "Artist", "name": "Czech National Symphony Orchestra"}]}, "composers": [{"__model__": "Artist", "name": "Wolfgang Amadeus Mozart"}], "genre": "Classical", "length": 358848}}]}'
okt 23 23:27:21 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:21,673 [8268:HttpServer] mopidy.http.handlers
okt 23 23:27:21 Desktop-Ubuntu mopidy[8268]:   Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_tl_tracks","params":{},"jsonrpc":"2.0","id":23}'
okt 23 23:27:21 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:21,672 [8268:HttpServer] mopidy.http.handlers
okt 23 23:27:21 Desktop-Ubuntu mopidy[8268]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 22, "result": null}'
okt 23 23:27:21 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:21,672 [8268:HttpServer] mopidy.http.handlers
okt 23 23:27:21 Desktop-Ubuntu mopidy[8268]:   Sending volume_changed to CoreListener: {'volume': 100}
okt 23 23:27:21 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:21,671 [8268:Core-6 (_actor_loop)] mopidy.listener
okt 23 23:27:21 Desktop-Ubuntu mopidy[8268]:   Sending volume_changed to CoreListener: {'volume': 100}
okt 23 23:27:21 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:21,671 [8268:Core-6 (_actor_loop)] mopidy.listener
okt 23 23:27:21 Desktop-Ubuntu mopidy[8268]:   Track is not playable: file:///home/gerard/Music/test.mp3
okt 23 23:27:21 Desktop-Ubuntu mopidy[8268]: WARNING  2022-10-23 23:27:21,671 [8268:Core-6 (_actor_loop)] mopidy.core.tracklist
okt 23 23:27:21 Desktop-Ubuntu mopidy[8268]:   Changing state to GST_STATE_NULL: result=GST_STATE_CHANGE_SUCCESS
okt 23 23:27:21 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:21,671 [8268:MainThread] mopidy.audio.gst
okt 23 23:27:21 Desktop-Ubuntu mopidy[8268]:   Setting GStreamer state to GST_STATE_PLAYING failed
okt 23 23:27:21 Desktop-Ubuntu mopidy[8268]: WARNING  2022-10-23 23:27:21,671 [8268:Audio-2 (_actor_loop)] mopidy.audio.actor
okt 23 23:27:21 Desktop-Ubuntu mopidy[8268]:   Changing state to GST_STATE_PLAYING: result=GST_STATE_CHANGE_FAILURE
okt 23 23:27:21 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:21,671 [8268:Audio-2 (_actor_loop)] mopidy.audio.gst
okt 23 23:27:21 Desktop-Ubuntu mopidy[8268]:   Got ERROR bus message: error=GLib.Error('Failed to connect: Connection refused', 'gst-resource-error-quark', 1) debug='../ext/pulse/pulsesink.c(615): gst_pulseringbuffer_open_device (): /GstBin:audio-sink/mopidy+audio+actor+_Outputs:mopidy+audio+actor+_outputs0/GstBin:bin0/GstPulseSink:pulsesink0'
okt 23 23:27:21 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:21,671 [8268:MainThread] mopidy.audio.gst
okt 23 23:27:21 Desktop-Ubuntu mopidy[8268]:   GStreamer error: Failed to connect: Connection refused
okt 23 23:27:21 Desktop-Ubuntu mopidy[8268]: ERROR    2022-10-23 23:27:21,670 [8268:MainThread] mopidy.audio.gst
okt 23 23:27:21 Desktop-Ubuntu mopidy[8268]:   Sending volume_changed to MixerListener: {'volume': 100}
okt 23 23:27:21 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:21,668 [8268:SoftwareMixer-1 (_actor_loop)] mopidy.listener
okt 23 23:27:21 Desktop-Ubuntu mopidy[8268]:   Mixer event: volume_changed(volume=100)
okt 23 23:27:21 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:21,668 [8268:SoftwareMixer-1 (_actor_loop)] mopidy.mixer
okt 23 23:27:21 Desktop-Ubuntu mopidy[8268]:   Flags: 2
okt 23 23:27:21 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:21,668 [8268:Audio-2 (_actor_loop)] mopidy.audio.actor
okt 23 23:27:21 Desktop-Ubuntu mopidy[8268]:   Got STATE_CHANGED bus message: old=GST_STATE_NULL new=GST_STATE_READY pending=GST_STATE_VOID_PENDING
okt 23 23:27:21 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:21,668 [8268:MainThread] mopidy.audio.gst
okt 23 23:27:21 Desktop-Ubuntu mopidy[8268]:   Changing state to GST_STATE_READY: result=GST_STATE_CHANGE_SUCCESS
okt 23 23:27:21 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:21,668 [8268:Audio-2 (_actor_loop)] mopidy.audio.gst
okt 23 23:27:21 Desktop-Ubuntu mopidy[8268]:   Track is not playable: file:///home/gerard/Music/test.mp3
okt 23 23:27:21 Desktop-Ubuntu mopidy[8268]: WARNING  2022-10-23 23:27:21,667 [8268:Core-6 (_actor_loop)] mopidy.core.tracklist
okt 23 23:27:21 Desktop-Ubuntu mopidy[8268]:   Changing state to GST_STATE_NULL: result=GST_STATE_CHANGE_SUCCESS
okt 23 23:27:21 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:21,667 [8268:MainThread] mopidy.audio.gst
okt 23 23:27:21 Desktop-Ubuntu mopidy[8268]:   Setting GStreamer state to GST_STATE_PLAYING failed
okt 23 23:27:21 Desktop-Ubuntu mopidy[8268]: WARNING  2022-10-23 23:27:21,667 [8268:Audio-2 (_actor_loop)] mopidy.audio.actor
okt 23 23:27:21 Desktop-Ubuntu mopidy[8268]:   Got ERROR bus message: error=GLib.Error('Failed to connect: Connection refused', 'gst-resource-error-quark', 1) debug='../ext/pulse/pulsesink.c(615): gst_pulseringbuffer_open_device (): /GstBin:audio-sink/mopidy+audio+actor+_Outputs:mopidy+audio+actor+_outputs0/GstBin:bin0/GstPulseSink:pulsesink0'
okt 23 23:27:21 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:21,667 [8268:MainThread] mopidy.audio.gst
okt 23 23:27:21 Desktop-Ubuntu mopidy[8268]:   Changing state to GST_STATE_PLAYING: result=GST_STATE_CHANGE_FAILURE
okt 23 23:27:21 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:21,667 [8268:Audio-2 (_actor_loop)] mopidy.audio.gst
okt 23 23:27:21 Desktop-Ubuntu mopidy[8268]:   GStreamer error: Failed to connect: Connection refused
okt 23 23:27:21 Desktop-Ubuntu mopidy[8268]: ERROR    2022-10-23 23:27:21,666 [8268:MainThread] mopidy.audio.gst
okt 23 23:27:21 Desktop-Ubuntu mopidy[8268]:   Sending volume_changed to MixerListener: {'volume': 100}
okt 23 23:27:21 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:21,665 [8268:SoftwareMixer-1 (_actor_loop)] mopidy.listener
okt 23 23:27:21 Desktop-Ubuntu mopidy[8268]:   Mixer event: volume_changed(volume=100)
okt 23 23:27:21 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:21,665 [8268:SoftwareMixer-1 (_actor_loop)] mopidy.mixer
okt 23 23:27:21 Desktop-Ubuntu mopidy[8268]:   Flags: 2
okt 23 23:27:21 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:21,665 [8268:Audio-2 (_actor_loop)] mopidy.audio.actor
okt 23 23:27:21 Desktop-Ubuntu mopidy[8268]:   Got STATE_CHANGED bus message: old=GST_STATE_NULL new=GST_STATE_READY pending=GST_STATE_VOID_PENDING
okt 23 23:27:21 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:21,665 [8268:MainThread] mopidy.audio.gst
okt 23 23:27:21 Desktop-Ubuntu mopidy[8268]:   Changing state to GST_STATE_READY: result=GST_STATE_CHANGE_SUCCESS
okt 23 23:27:21 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:21,664 [8268:Audio-2 (_actor_loop)] mopidy.audio.gst
okt 23 23:27:21 Desktop-Ubuntu mopidy[8268]:   Received WebSocket message from 127.0.0.1: '{"method":"core.playback.play","params":{"tlid":2},"jsonrpc":"2.0","id":22}'
okt 23 23:27:21 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:21,664 [8268:HttpServer] mopidy.http.handlers
okt 23 23:27:21 Desktop-Ubuntu mopidy[8268]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 21, "result": [{"__model__": "TlTrack", "tlid": 2, "track": {"__model__": "Track", "uri": "file:///home/gerard/Music/test.mp3", "name": "Symphony No. 40 in G Minor, K. 550 - I. Molto Allegro", "artists": [{"__model__": "Artist", "name": "Czech National Symphony Orchestra"}], "album": {"__model__": "Album", "name": "Musopen Kickstarter Project", "artists": [{"__model__": "Artist", "name": "Czech National Symphony Orchestra"}]}, "composers": [{"__model__": "Artist", "name": "Wolfgang Amadeus Mozart"}], "genre": "Classical", "length": 358848}}]}'
okt 23 23:27:21 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:21,662 [8268:HttpServer] mopidy.http.handlers
okt 23 23:27:21 Desktop-Ubuntu mopidy[8268]:   Sending tracklist_changed to CoreListener: {}
okt 23 23:27:21 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:21,661 [8268:Core-6 (_actor_loop)] mopidy.listener
okt 23 23:27:21 Desktop-Ubuntu mopidy[8268]:   Triggering event: tracklist_changed()
okt 23 23:27:21 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:21,661 [8268:Core-6 (_actor_loop)] mopidy.core.tracklist
okt 23 23:27:21 Desktop-Ubuntu mopidy[8268]:   element pipeline1: GstMessageAsyncDone, running-time=(guint64)18446744073709551615;
okt 23 23:27:21 Desktop-Ubuntu mopidy[8268]: TRACE    2022-10-23 23:27:21,660 [8268:FileBackend-3 (_actor_loop)] mopidy.audio.scan
okt 23 23:27:21 Desktop-Ubuntu mopidy[8268]:   element fakesink1: GstMessageTag, taglist=(taglist)"taglist\,\ encoder\=\(string\)\"LAME\\\ 32bi...
okt 23 23:27:21 Desktop-Ubuntu mopidy[8268]: TRACE    2022-10-23 23:27:21,659 [8268:FileBackend-3 (_actor_loop)] mopidy.audio.scan
okt 23 23:27:21 Desktop-Ubuntu mopidy[8268]:   element fakesink1: GstMessageTag, taglist=(taglist)"taglist\,\ encoder\=\(string\)\"LAME\\\ 32bi...
okt 23 23:27:21 Desktop-Ubuntu mopidy[8268]: TRACE    2022-10-23 23:27:21,632 [8268:FileBackend-3 (_actor_loop)] mopidy.audio.scan
okt 23 23:27:21 Desktop-Ubuntu mopidy[8268]:   element mpegaudioparse1: GstMessageDurationChanged;
okt 23 23:27:21 Desktop-Ubuntu mopidy[8268]: TRACE    2022-10-23 23:27:21,606 [8268:FileBackend-3 (_actor_loop)] mopidy.audio.scan
okt 23 23:27:21 Desktop-Ubuntu mopidy[8268]:   element decodebin1: have-audio;
okt 23 23:27:21 Desktop-Ubuntu mopidy[8268]: TRACE    2022-10-23 23:27:21,606 [8268:FileBackend-3 (_actor_loop)] mopidy.audio.scan
okt 23 23:27:21 Desktop-Ubuntu mopidy[8268]:   Looking up file URI: file:///home/gerard/Music/test.mp3
okt 23 23:27:21 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:21,603 [8268:FileBackend-3 (_actor_loop)] mopidy.file.library
okt 23 23:27:21 Desktop-Ubuntu mopidy[8268]:   Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.add","params":{"uris":["file:///home/gerard/Music/test.mp3"],"at_position":0},"jsonrpc":"2.0","id":21}'
okt 23 23:27:21 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:21,602 [8268:HttpServer] mopidy.http.handlers
okt 23 23:27:21 Desktop-Ubuntu mopidy[8268]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 20, "result": 1}'
okt 23 23:27:21 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:21,139 [8268:HttpServer] mopidy.http.handlers
okt 23 23:27:21 Desktop-Ubuntu mopidy[8268]:   Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_next_tlid","params":{},"jsonrpc":"2.0","id":20}'
okt 23 23:27:21 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:21,139 [8268:HttpServer] mopidy.http.handlers
okt 23 23:27:20 Desktop-Ubuntu mopidy[8268]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 19, "result": 0}'
okt 23 23:27:20 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:20,888 [8268:HttpServer] mopidy.http.handlers
okt 23 23:27:20 Desktop-Ubuntu mopidy[8268]:   Received WebSocket message from 127.0.0.1: '{"method":"core.playback.get_time_position","params":{},"jsonrpc":"2.0","id":19}'
okt 23 23:27:20 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:20,887 [8268:HttpServer] mopidy.http.handlers
okt 23 23:27:20 Desktop-Ubuntu mopidy[8268]:   {'id': 166656044016488, 'jsonrpc': '2.0', 'method': 'broadcast', 'result': {'message': 'Broadcast to 1 connections'}, 'recipient': 'BFXBXSDGLGDC'}
okt 23 23:27:20 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:20,166 [8268:HttpServer] mopidy_iris.core
okt 23 23:27:20 Desktop-Ubuntu mopidy[8268]:   {'method': 'notification', 'params': {'notification': {'content': '166637467060576 changed track'}}, 'connection_id': 'BFXBXSDGLGDC'}
okt 23 23:27:20 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:20,166 [8268:HttpServer] mopidy_iris.core
okt 23 23:27:20 Desktop-Ubuntu mopidy[8268]:   Iris websocket message received: {"jsonrpc":"2.0","id":166656044016488,"method":"broadcast","params":{"method":"notification","params":{"notification":{"content":"166637467060576 changed track"}}}}
okt 23 23:27:20 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:20,165 [8268:HttpServer] mopidy_iris.handlers
okt 23 23:27:20 Desktop-Ubuntu mopidy[8268]:   {'id': 166656044013692, 'jsonrpc': '2.0', 'method': 'add_queue_metadata', 'result': {'message': 'Added queue metadata'}, 'recipient': 'BFXBXSDGLGDC'}
okt 23 23:27:20 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:20,165 [8268:HttpServer] mopidy_iris.core
okt 23 23:27:20 Desktop-Ubuntu mopidy[8268]:   {'method': 'queue_metadata_changed', 'params': {'queue_metadata': {'tlid_1': {'tlid': 1, 'added_from': {'uri': 'm3u:Example%20Playlist.m3u8', 'name': 'Example Playlist', 'type': 'playlist', 'provider': 'mopidy', 'context': 'editable-playlist', 'can_edit': True}, 'added_by': 166637467060576}}}}
okt 23 23:27:20 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:20,165 [8268:HttpServer] mopidy_iris.core
okt 23 23:27:20 Desktop-Ubuntu mopidy[8268]:   Iris websocket message received: {"jsonrpc":"2.0","id":166656044013692,"method":"add_queue_metadata","params":{"tlids":[1],"added_from":{"uri":"m3u:Example%20Playlist.m3u8","name":"Example Playlist","type":"playlist","provider":"mopidy","context":"editable-playlist","can_edit":true},"added_by":166637467060576}}
okt 23 23:27:20 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:20,165 [8268:HttpServer] mopidy_iris.handlers
okt 23 23:27:20 Desktop-Ubuntu mopidy[8268]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 18, "result": [{"__model__": "TlTrack", "tlid": 1, "track": {"__model__": "Track", "uri": "file:///home/gerard/Music/test.mp3", "name": "Symphony No. 40 in G Minor, K. 550 - I. Molto Allegro", "artists": [{"__model__": "Artist", "name": "Czech National Symphony Orchestra"}], "album": {"__model__": "Album", "name": "Musopen Kickstarter Project", "artists": [{"__model__": "Artist", "name": "Czech National Symphony Orchestra"}]}, "composers": [{"__model__": "Artist", "name": "Wolfgang Amadeus Mozart"}], "genre": "Classical", "length": 358848}}]}'
okt 23 23:27:20 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:20,164 [8268:HttpServer] mopidy.http.handlers
okt 23 23:27:20 Desktop-Ubuntu mopidy[8268]:   Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_tl_tracks","params":{},"jsonrpc":"2.0","id":18}'
okt 23 23:27:20 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:20,164 [8268:HttpServer] mopidy.http.handlers
okt 23 23:27:20 Desktop-Ubuntu mopidy[8268]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 17, "result": null}'
okt 23 23:27:20 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:20,163 [8268:HttpServer] mopidy.http.handlers
okt 23 23:27:20 Desktop-Ubuntu mopidy[8268]:   Sending volume_changed to CoreListener: {'volume': 100}
okt 23 23:27:20 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:20,163 [8268:Core-6 (_actor_loop)] mopidy.listener
okt 23 23:27:20 Desktop-Ubuntu mopidy[8268]:   Track is not playable: file:///home/gerard/Music/test.mp3
okt 23 23:27:20 Desktop-Ubuntu mopidy[8268]: WARNING  2022-10-23 23:27:20,163 [8268:Core-6 (_actor_loop)] mopidy.core.tracklist
okt 23 23:27:20 Desktop-Ubuntu mopidy[8268]:   Changing state to GST_STATE_NULL: result=GST_STATE_CHANGE_SUCCESS
okt 23 23:27:20 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:20,163 [8268:MainThread] mopidy.audio.gst
okt 23 23:27:20 Desktop-Ubuntu mopidy[8268]:   Setting GStreamer state to GST_STATE_PLAYING failed
okt 23 23:27:20 Desktop-Ubuntu mopidy[8268]: WARNING  2022-10-23 23:27:20,162 [8268:Audio-2 (_actor_loop)] mopidy.audio.actor
okt 23 23:27:20 Desktop-Ubuntu mopidy[8268]:   Changing state to GST_STATE_PLAYING: result=GST_STATE_CHANGE_FAILURE
okt 23 23:27:20 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:20,162 [8268:Audio-2 (_actor_loop)] mopidy.audio.gst
okt 23 23:27:20 Desktop-Ubuntu mopidy[8268]:   Got ERROR bus message: error=GLib.Error('Failed to connect: Connection refused', 'gst-resource-error-quark', 1) debug='../ext/pulse/pulsesink.c(615): gst_pulseringbuffer_open_device (): /GstBin:audio-sink/mopidy+audio+actor+_Outputs:mopidy+audio+actor+_outputs0/GstBin:bin0/GstPulseSink:pulsesink0'
okt 23 23:27:20 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:20,142 [8268:MainThread] mopidy.audio.gst
okt 23 23:27:20 Desktop-Ubuntu mopidy[8268]:   GStreamer error: Failed to connect: Connection refused
okt 23 23:27:20 Desktop-Ubuntu mopidy[8268]: ERROR    2022-10-23 23:27:20,142 [8268:MainThread] mopidy.audio.gst
okt 23 23:27:20 Desktop-Ubuntu mopidy[8268]:   Sending volume_changed to MixerListener: {'volume': 100}
okt 23 23:27:20 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:20,140 [8268:SoftwareMixer-1 (_actor_loop)] mopidy.listener
okt 23 23:27:20 Desktop-Ubuntu mopidy[8268]:   Mixer event: volume_changed(volume=100)
okt 23 23:27:20 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:20,140 [8268:SoftwareMixer-1 (_actor_loop)] mopidy.mixer
okt 23 23:27:20 Desktop-Ubuntu mopidy[8268]:   Flags: 2
okt 23 23:27:20 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:20,140 [8268:Audio-2 (_actor_loop)] mopidy.audio.actor
okt 23 23:27:20 Desktop-Ubuntu mopidy[8268]:   Got STATE_CHANGED bus message: old=GST_STATE_NULL new=GST_STATE_READY pending=GST_STATE_VOID_PENDING
okt 23 23:27:20 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:20,139 [8268:MainThread] mopidy.audio.gst
okt 23 23:27:20 Desktop-Ubuntu mopidy[8268]:   Changing state to GST_STATE_READY: result=GST_STATE_CHANGE_SUCCESS
okt 23 23:27:20 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:20,138 [8268:Audio-2 (_actor_loop)] mopidy.audio.gst
okt 23 23:27:20 Desktop-Ubuntu mopidy[8268]:   Received WebSocket message from 127.0.0.1: '{"method":"core.playback.play","params":{"tlid":1},"jsonrpc":"2.0","id":17}'
okt 23 23:27:20 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:20,136 [8268:HttpServer] mopidy.http.handlers
okt 23 23:27:20 Desktop-Ubuntu mopidy[8268]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 16, "result": [{"__model__": "TlTrack", "tlid": 1, "track": {"__model__": "Track", "uri": "file:///home/gerard/Music/test.mp3", "name": "Symphony No. 40 in G Minor, K. 550 - I. Molto Allegro", "artists": [{"__model__": "Artist", "name": "Czech National Symphony Orchestra"}], "album": {"__model__": "Album", "name": "Musopen Kickstarter Project", "artists": [{"__model__": "Artist", "name": "Czech National Symphony Orchestra"}]}, "composers": [{"__model__": "Artist", "name": "Wolfgang Amadeus Mozart"}], "genre": "Classical", "length": 358848}}]}'
okt 23 23:27:20 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:20,122 [8268:HttpServer] mopidy.http.handlers
okt 23 23:27:20 Desktop-Ubuntu mopidy[8268]:   Sending tracklist_changed to CoreListener: {}
okt 23 23:27:20 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:20,122 [8268:Core-6 (_actor_loop)] mopidy.listener
okt 23 23:27:20 Desktop-Ubuntu mopidy[8268]:   Triggering event: tracklist_changed()
okt 23 23:27:20 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:20,121 [8268:Core-6 (_actor_loop)] mopidy.core.tracklist
okt 23 23:27:20 Desktop-Ubuntu mopidy[8268]:   element pipeline0: GstMessageAsyncDone, running-time=(guint64)18446744073709551615;
okt 23 23:27:20 Desktop-Ubuntu mopidy[8268]: TRACE    2022-10-23 23:27:20,119 [8268:FileBackend-3 (_actor_loop)] mopidy.audio.scan
okt 23 23:27:20 Desktop-Ubuntu mopidy[8268]:   element fakesink0: GstMessageTag, taglist=(taglist)"taglist\,\ encoder\=\(string\)\"LAME\\\ 32bi...
okt 23 23:27:20 Desktop-Ubuntu mopidy[8268]: TRACE    2022-10-23 23:27:20,119 [8268:FileBackend-3 (_actor_loop)] mopidy.audio.scan
okt 23 23:27:20 Desktop-Ubuntu mopidy[8268]:   element fakesink0: GstMessageTag, taglist=(taglist)"taglist\,\ encoder\=\(string\)\"LAME\\\ 32bi...
okt 23 23:27:20 Desktop-Ubuntu mopidy[8268]: TRACE    2022-10-23 23:27:20,092 [8268:FileBackend-3 (_actor_loop)] mopidy.audio.scan
okt 23 23:27:20 Desktop-Ubuntu mopidy[8268]:   element mpegaudioparse0: GstMessageDurationChanged;
okt 23 23:27:20 Desktop-Ubuntu mopidy[8268]: TRACE    2022-10-23 23:27:20,066 [8268:FileBackend-3 (_actor_loop)] mopidy.audio.scan
okt 23 23:27:20 Desktop-Ubuntu mopidy[8268]:   element decodebin0: have-audio;
okt 23 23:27:20 Desktop-Ubuntu mopidy[8268]: TRACE    2022-10-23 23:27:20,065 [8268:FileBackend-3 (_actor_loop)] mopidy.audio.scan
okt 23 23:27:19 Desktop-Ubuntu mopidy[8268]:   Looking up file URI: file:///home/gerard/Music/test.mp3
okt 23 23:27:19 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:19,956 [8268:FileBackend-3 (_actor_loop)] mopidy.file.library
okt 23 23:27:19 Desktop-Ubuntu mopidy[8268]:   Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.add","params":{"uris":["file:///home/gerard/Music/test.mp3"],"at_position":0},"jsonrpc":"2.0","id":16}'
okt 23 23:27:19 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:19,953 [8268:HttpServer] mopidy.http.handlers
okt 23 23:27:10 Desktop-Ubuntu mopidy[8268]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 15, "result": 0}'
okt 23 23:27:10 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:10,888 [8268:HttpServer] mopidy.http.handlers
okt 23 23:27:10 Desktop-Ubuntu mopidy[8268]:   Received WebSocket message from 127.0.0.1: '{"method":"core.playback.get_time_position","params":{},"jsonrpc":"2.0","id":15}'
okt 23 23:27:10 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:10,887 [8268:HttpServer] mopidy.http.handlers
okt 23 23:27:07 Desktop-Ubuntu mopidy[8268]:   {'id': 166656042791563, 'jsonrpc': '2.0', 'method': 'broadcast', 'result': {'message': 'Broadcast to 1 connections'}, 'recipient': 'BFXBXSDGLGDC'}
okt 23 23:27:07 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:07,917 [8268:HttpServer] mopidy_iris.core
okt 23 23:27:07 Desktop-Ubuntu mopidy[8268]:   {'method': 'notification', 'params': {'notification': {'content': '166637467060576 started playback', 'icon': False}}, 'connection_id': 'BFXBXSDGLGDC'}
okt 23 23:27:07 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:07,917 [8268:HttpServer] mopidy_iris.core
okt 23 23:27:07 Desktop-Ubuntu mopidy[8268]:   Iris websocket message received: {"jsonrpc":"2.0","id":166656042791563,"method":"broadcast","params":{"method":"notification","params":{"notification":{"content":"166637467060576 started playback","icon":false}}}}
okt 23 23:27:07 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:07,916 [8268:HttpServer] mopidy_iris.handlers
okt 23 23:27:07 Desktop-Ubuntu mopidy[8268]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 14, "result": null}'
okt 23 23:27:07 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:07,916 [8268:HttpServer] mopidy.http.handlers
okt 23 23:27:07 Desktop-Ubuntu mopidy[8268]:   Received WebSocket message from 127.0.0.1: '{"method":"core.playback.play","params":{},"jsonrpc":"2.0","id":14}'
okt 23 23:27:07 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:07,915 [8268:HttpServer] mopidy.http.handlers
okt 23 23:27:07 Desktop-Ubuntu mopidy[8268]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 13, "result": []}'
okt 23 23:27:07 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:07,115 [8268:HttpServer] mopidy.http.handlers
okt 23 23:27:07 Desktop-Ubuntu mopidy[8268]:   Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.add","params":{"uris":["ytmusic:track:7dVohOzvox8"],"at_position":0},"jsonrpc":"2.0","id":13}'
okt 23 23:27:07 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:07,114 [8268:HttpServer] mopidy.http.handlers
okt 23 23:27:04 Desktop-Ubuntu mopidy[8268]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 12, "result": []}'
okt 23 23:27:04 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:04,999 [8268:HttpServer] mopidy.http.handlers
okt 23 23:27:04 Desktop-Ubuntu mopidy[8268]:   Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.add","params":{"uris":["ytmusic:track:7dVohOzvox8"],"at_position":0},"jsonrpc":"2.0","id":12}'
okt 23 23:27:04 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:04,999 [8268:HttpServer] mopidy.http.handlers
okt 23 23:27:02 Desktop-Ubuntu mopidy[8268]:   304 GET /iris/assets/silence.mp3 (127.0.0.1) 0.82ms
okt 23 23:27:02 Desktop-Ubuntu mopidy[8268]: INFO     2022-10-23 23:27:02,770 [8268:HttpServer] tornado.access
okt 23 23:27:01 Desktop-Ubuntu mopidy[8268]:   {'id': 166656042132456, 'jsonrpc': '2.0', 'method': 'get_version', 'result': {'version': {'current': '3.64.1', 'latest': '3.64.1', 'is_root': False, 'upgrade_available': False}}, 'recipient': 'BFXBXSDGLGDC'}
okt 23 23:27:01 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:01,468 [8268:HttpServer] mopidy_iris.core
okt 23 23:27:01 Desktop-Ubuntu mopidy[8268]:   Iris websocket message received: {"jsonrpc":"2.0","id":166656042132456,"method":"get_version"}
okt 23 23:27:01 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:01,325 [8268:HttpServer] mopidy_iris.handlers
okt 23 23:27:00 Desktop-Ubuntu mopidy[8268]:   304 GET /iris/assets/app-icon_192.png (127.0.0.1) 0.70ms
okt 23 23:27:00 Desktop-Ubuntu mopidy[8268]: INFO     2022-10-23 23:27:00,935 [8268:HttpServer] tornado.access
okt 23 23:27:00 Desktop-Ubuntu mopidy[8268]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 11, "result": null}'
okt 23 23:27:00 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:00,887 [8268:HttpServer] mopidy.http.handlers
okt 23 23:27:00 Desktop-Ubuntu mopidy[8268]:   Received WebSocket message from 127.0.0.1: '{"method":"core.playback.get_stream_title","params":{},"jsonrpc":"2.0","id":11}'
okt 23 23:27:00 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:00,887 [8268:HttpServer] mopidy.http.handlers
okt 23 23:27:00 Desktop-Ubuntu mopidy[8268]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 10, "result": ["file", "http", "https", "m3u", "rtsp"]}'
okt 23 23:27:00 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:00,887 [8268:HttpServer] mopidy.http.handlers
okt 23 23:27:00 Desktop-Ubuntu mopidy[8268]:   Received WebSocket message from 127.0.0.1: '{"method":"core.get_uri_schemes","params":{},"jsonrpc":"2.0","id":10}'
okt 23 23:27:00 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:00,886 [8268:HttpServer] mopidy.http.handlers
okt 23 23:27:00 Desktop-Ubuntu mopidy[8268]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 9, "result": 0}'
okt 23 23:27:00 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:00,885 [8268:HttpServer] mopidy.http.handlers
okt 23 23:27:00 Desktop-Ubuntu mopidy[8268]:   Received WebSocket message from 127.0.0.1: '{"method":"core.playback.get_time_position","params":{},"jsonrpc":"2.0","id":9}'
okt 23 23:27:00 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:00,885 [8268:HttpServer] mopidy.http.handlers
okt 23 23:27:00 Desktop-Ubuntu mopidy[8268]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 8, "result": []}'
okt 23 23:27:00 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:00,885 [8268:HttpServer] mopidy.http.handlers
okt 23 23:27:00 Desktop-Ubuntu mopidy[8268]:   Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_tl_tracks","params":{},"jsonrpc":"2.0","id":8}'
okt 23 23:27:00 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:00,884 [8268:HttpServer] mopidy.http.handlers
okt 23 23:27:00 Desktop-Ubuntu mopidy[8268]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 7, "result": false}'
okt 23 23:27:00 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:00,884 [8268:HttpServer] mopidy.http.handlers
okt 23 23:27:00 Desktop-Ubuntu mopidy[8268]:   Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_repeat","params":{},"jsonrpc":"2.0","id":7}'
okt 23 23:27:00 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:00,884 [8268:HttpServer] mopidy.http.handlers
okt 23 23:27:00 Desktop-Ubuntu mopidy[8268]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 6, "result": false}'
okt 23 23:27:00 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:00,883 [8268:HttpServer] mopidy.http.handlers
okt 23 23:27:00 Desktop-Ubuntu mopidy[8268]:   Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_random","params":{},"jsonrpc":"2.0","id":6}'
okt 23 23:27:00 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:00,883 [8268:HttpServer] mopidy.http.handlers
okt 23 23:27:00 Desktop-Ubuntu mopidy[8268]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 5, "result": false}'
okt 23 23:27:00 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:00,883 [8268:HttpServer] mopidy.http.handlers
okt 23 23:27:00 Desktop-Ubuntu mopidy[8268]:   Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_consume","params":{},"jsonrpc":"2.0","id":5}'
okt 23 23:27:00 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:00,882 [8268:HttpServer] mopidy.http.handlers
okt 23 23:27:00 Desktop-Ubuntu mopidy[8268]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 4, "result": false}'
okt 23 23:27:00 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:00,882 [8268:HttpServer] mopidy.http.handlers
okt 23 23:27:00 Desktop-Ubuntu mopidy[8268]:   Received WebSocket message from 127.0.0.1: '{"method":"core.mixer.get_mute","params":{},"jsonrpc":"2.0","id":4}'
okt 23 23:27:00 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:00,882 [8268:HttpServer] mopidy.http.handlers
okt 23 23:27:00 Desktop-Ubuntu mopidy[8268]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 3, "result": 100}'
okt 23 23:27:00 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:00,881 [8268:HttpServer] mopidy.http.handlers
okt 23 23:27:00 Desktop-Ubuntu mopidy[8268]:   Received WebSocket message from 127.0.0.1: '{"method":"core.mixer.get_volume","params":{},"jsonrpc":"2.0","id":3}'
okt 23 23:27:00 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:00,881 [8268:HttpServer] mopidy.http.handlers
okt 23 23:27:00 Desktop-Ubuntu mopidy[8268]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 2, "result": "stopped"}'
okt 23 23:27:00 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:00,880 [8268:HttpServer] mopidy.http.handlers
okt 23 23:27:00 Desktop-Ubuntu mopidy[8268]:   Received WebSocket message from 127.0.0.1: '{"method":"core.playback.get_state","params":{},"jsonrpc":"2.0","id":2}'
okt 23 23:27:00 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:00,880 [8268:HttpServer] mopidy.http.handlers
okt 23 23:27:00 Desktop-Ubuntu mopidy[8268]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 1, "result": null}'
okt 23 23:27:00 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:00,880 [8268:HttpServer] mopidy.http.handlers
okt 23 23:27:00 Desktop-Ubuntu mopidy[8268]:   Received WebSocket message from 127.0.0.1: '{"method":"core.playback.get_current_tl_track","params":{},"jsonrpc":"2.0","id":1}'
okt 23 23:27:00 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:00,879 [8268:HttpServer] mopidy.http.handlers
okt 23 23:27:00 Desktop-Ubuntu mopidy[8268]:   {'id': 166656042082339, 'jsonrpc': '2.0', 'method': 'get_queue_metadata', 'result': {'queue_metadata': {}}, 'recipient': 'BFXBXSDGLGDC'}
okt 23 23:27:00 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:00,824 [8268:HttpServer] mopidy_iris.core
okt 23 23:27:00 Desktop-Ubuntu mopidy[8268]:   Iris websocket message received: {"jsonrpc":"2.0","id":166656042082339,"method":"get_queue_metadata"}
okt 23 23:27:00 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:00,824 [8268:HttpServer] mopidy_iris.handlers
okt 23 23:27:00 Desktop-Ubuntu mopidy[8268]:   {'id': 166656042082227, 'jsonrpc': '2.0', 'method': 'get_pinned', 'result': {'pinned': []}, 'recipient': 'BFXBXSDGLGDC'}
okt 23 23:27:00 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:00,823 [8268:HttpServer] mopidy_iris.core
okt 23 23:27:00 Desktop-Ubuntu mopidy[8268]:   Iris websocket message received: {"jsonrpc":"2.0","id":166656042082227,"method":"get_pinned"}
okt 23 23:27:00 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:00,823 [8268:HttpServer] mopidy_iris.handlers
okt 23 23:27:00 Desktop-Ubuntu mopidy[8268]:   {'id': 166656042082181, 'jsonrpc': '2.0', 'method': 'get_commands', 'result': {'commands': {}}, 'recipient': 'BFXBXSDGLGDC'}
okt 23 23:27:00 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:00,822 [8268:HttpServer] mopidy_iris.core
okt 23 23:27:00 Desktop-Ubuntu mopidy[8268]:   Iris websocket message received: {"jsonrpc":"2.0","id":166656042082181,"method":"get_commands"}
okt 23 23:27:00 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:00,822 [8268:HttpServer] mopidy_iris.handlers
okt 23 23:27:00 Desktop-Ubuntu mopidy[8268]:   {'id': 16665604208211, 'jsonrpc': '2.0', 'method': 'get_radio', 'result': {'radio': {'enabled': 0, 'seed_artists': [], 'seed_genres': [], 'seed_tracks': [], 'results': []}}, 'recipient': 'BFXBXSDGLGDC'}
okt 23 23:27:00 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:00,821 [8268:HttpServer] mopidy_iris.core
okt 23 23:27:00 Desktop-Ubuntu mopidy[8268]:   Iris websocket message received: {"jsonrpc":"2.0","id":16665604208211,"method":"get_radio"}
okt 23 23:27:00 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:00,821 [8268:HttpServer] mopidy_iris.handlers
okt 23 23:27:00 Desktop-Ubuntu mopidy[8268]:   {'id': 166656042082035, 'jsonrpc': '2.0', 'method': 'get_shared_config', 'result': {'shared_config': {}}, 'recipient': 'BFXBXSDGLGDC'}
okt 23 23:27:00 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:00,820 [8268:HttpServer] mopidy_iris.core
okt 23 23:27:00 Desktop-Ubuntu mopidy[8268]:   Iris websocket message received: {"jsonrpc":"2.0","id":166656042082035,"method":"get_shared_config"}
okt 23 23:27:00 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:00,820 [8268:HttpServer] mopidy_iris.handlers
okt 23 23:27:00 Desktop-Ubuntu mopidy[8268]:   {'id': 166656042081982, 'jsonrpc': '2.0', 'method': 'get_config', 'result': {'config': {'is_root': False, 'spotify_username': False, 'country': 'NZ', 'locale': 'en_NZ', 'snapcast_enabled': True, 'snapcast_host': 'localhost', 'snapcast_port': '1780', 'snapcast_ssl': False, 'snapcast_stream': 'Default', 'spotify_authorization_url': 'https://jamesbarnsley.co.nz/iris/auth_spotify.php', 'lastfm_authorization_url': 'https://jamesbarnsley.co.nz/iris/auth_lastfm.php', 'genius_authorization_url': 'https://jamesbarnsley.co.nz/iris/auth_genius.php', 'shared_config': {}}}, 'recipient': 'BFXBXSDGLGDC'}
okt 23 23:27:00 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:00,819 [8268:HttpServer] mopidy_iris.core
okt 23 23:27:00 Desktop-Ubuntu mopidy[8268]:   Iris websocket message received: {"jsonrpc":"2.0","id":166656042081982,"method":"get_config"}
okt 23 23:27:00 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:00,819 [8268:HttpServer] mopidy_iris.handlers
okt 23 23:27:00 Desktop-Ubuntu mopidy[8268]:   {'id': 166656042081560, 'jsonrpc': '2.0', 'method': 'update_connection', 'result': {'connection': {'connection_id': 'BFXBXSDGLGDC', 'ip': '127.0.0.1', 'created': '2022-10-23 23:27:00', 'username': 166637467060576, 'client_id': 166637467060628}}, 'recipient': 'BFXBXSDGLGDC'}
okt 23 23:27:00 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:00,819 [8268:HttpServer] mopidy_iris.core
okt 23 23:27:00 Desktop-Ubuntu mopidy[8268]:   {'method': 'connection_changed', 'params': {'connection': {'connection_id': 'BFXBXSDGLGDC', 'ip': '127.0.0.1', 'created': '2022-10-23 23:27:00', 'username': 166637467060576, 'client_id': 166637467060628}}}
okt 23 23:27:00 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:00,819 [8268:HttpServer] mopidy_iris.core
okt 23 23:27:00 Desktop-Ubuntu mopidy[8268]:   Iris websocket message received: {"jsonrpc":"2.0","id":166656042081560,"method":"update_connection","params":{"username":166637467060576,"client_id":166637467060628}}
okt 23 23:27:00 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:00,819 [8268:HttpServer] mopidy_iris.handlers
okt 23 23:27:00 Desktop-Ubuntu mopidy[8268]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 0, "result": {"core.get_uri_schemes": {"description": "Get list of URI schemes we can handle", "params": []}, "core.get_version": {"description": "Get version of the Mopidy core API", "params": []}, "core.history.get_history": {"description": "Get the track history.\\n\\nThe timestamps are milliseconds since epoch.\\n\\n:returns: the track history\\n:rtype: list of (timestamp, :class:`mopidy.models.Ref`) tuples", "params": []}, "core.history.get_length": {"description": "Get the number of tracks in the history.\\n\\n:returns: the history length\\n:rtype: int", "params": []}, "core.library.browse": {"description": "Browse directories and tracks at the given ``uri``.\\n\\n``uri`` is a string which represents some directory belonging to a\\nbackend. To get the intial root directories for backends pass\\n:class:`None` as the URI.\\n\\nReturns a list of :class:`mopidy.models.Ref` objects for the\\ndirectories and tracks at the given ``uri``.\\n\\nThe :class:`~mopidy.models.Ref` objects representing tracks keep the\\ntrack\'s original URI. A matching pair of objects can look like this::\\n\\n    Track(uri=\'dummy:/foo.mp3\', name=\'foo\', artists=..., album=...)\\n    Ref.track(uri=\'dummy:/foo.mp3\', name=\'foo\')\\n\\nThe :class:`~mopidy.models.Ref` objects representing directories have\\nbackend specific URIs. These are opaque values, so no one but the\\nbackend that created them should try and derive any meaning from them.\\nThe only valid exception to this is checking the scheme, as it is used\\nto route browse requests to the correct backend.\\n\\nFor example, the dummy library\'s ``/bar`` directory could be returned\\nlike this::\\n\\n    Ref.directory(uri=\'dummy:directory:/bar\', name=\'bar\')\\n\\n:param string uri: URI to browse\\n:rtype: list of :class:`mopidy.models.Ref`\\n\\n.. versionadded:: 0.18", "params": [{"name": "uri"}]}, "core.library.get_distinct": {"description": "List distinct values for a given field from the library.\\n\\nThis has mainly been added to support the list commands the MPD\\nprotocol supports in a more sane fashion. Other frontends are not\\nrecommended to use this method.\\n\\n:param string field: Any one of ``uri``, ``track_name``, ``album``,\\n    ``artist``, ``albumartist``, ``composer``, ``performer``,\\n    ``track_no``, ``genre``, ``date``, ``comment``, ``disc_no``,\\n    ``musicbrainz_albumid``, ``musicbrainz_artistid``, or\\n    ``musicbrainz_trackid``.\\n:param dict query: Query to use for limiting results, see\\n    :meth:`search` for details about the query format.\\n:rtype: set of values corresponding to the requested field type.\\n\\n.. versionadded:: 1.0", "params": [{"name": "field"}, {"name": "query", "default": null}]}, "core.library.get_images": {"description": "Lookup the images for the given URIs\\n\\nBackends can use this to return image URIs for any URI they know about\\nbe it tracks, albums, playlists. The lookup result is a dictionary\\nmapping the provided URIs to lists of images.\\n\\nUnknown URIs or URIs the corresponding backend couldn\'t find anything\\nfor will simply return an empty list for that URI.\\n\\n:param uris: list of URIs to find images for\\n:type uris: list of string\\n:rtype: {uri: tuple of :class:`mopidy.models.Image`}\\n\\n.. versionadded:: 1.0", "params": [{"name": "uris"}]}, "core.library.lookup": {"description": "Lookup the given URIs.\\n\\nIf the URI expands to multiple tracks, the returned list will contain\\nthem all.\\n\\n:param uris: track URIs\\n:type uris: list of string\\n:rtype: {uri: list of :class:`mopidy.models.Track`}", "params": [{"name": "uris"}]}, "core.library.refresh": {"description": "Refresh library. Limit to URI and below if an URI is given.\\n\\n:param uri: directory or track URI\\n:type uri: string", "params": [{"name": "uri", "default": null}]}, "core.library.search": {"description": "Search the library for tracks where ``field`` contains ``values``.\\n\\n``field`` can be one of ``uri``, ``track_name``, ``album``, ``artist``,\\n``albumartist``, ``composer``, ``performer``, ``track_no``, ``genre``,\\n``date``, ``comment``, ``disc_no``, ``musicbrainz_albumid``,\\n``musicbrainz_artistid``, ``musicbrainz_trackid`` or ``any``.\\n\\nIf ``uris`` is given, the search is limited to results from within the\\nURI roots. For example passing ``uris=[\'file:\']`` will limit the search\\nto the local backend.\\n\\nExamples::\\n\\n    # Returns results matching \'a\' in any backend\\n    search({\'any\': [\'a\']})\\n\\n    # Returns results matching artist \'xyz\' in any backend\\n    search({\'artist\': [\'xyz\']})\\n\\n    # Returns results matching \'a\' and \'b\' and artist \'xyz\' in any\\n    # backend\\n    search({\'any\': [\'a\', \'b\'], \'artist\': [\'xyz\']})\\n\\n    # Returns results matching \'a\' if within the given URI roots\\n    # \\"file:///media/music\\" and \\"spotify:\\"\\n    search({\'any\': [\'a\']}, uris=[\'file:///media/music\', \'spotify:\'])\\n\\n    # Returns results matching artist \'xyz\' and \'abc\' in any backend\\n    search({\'artist\': [\'xyz\', \'abc\']})\\n\\n:param query: one or more queries to search for\\n:type query: dict\\n:param uris: zero or more URI roots to limit the search to\\n:type uris: list of string or :class:`None`\\n:param exact: if the search should use exact matching\\n:type exact: :class:`bool`\\n:rtype: list of :class:`mopidy.models.SearchResult`\\n\\n.. versionadded:: 1.0\\n    The ``exact`` keyword argument.", "params": [{"name": "query"}, {"name": "uris", "default": null}, {"name": "exact", "default": false}]}, "core.mixer.get_mute": {"description": "Get mute state.\\n\\n:class:`True` if muted, :class:`False` unmuted, :class:`None` if\\nunknown.", "params": []}, "core.mixer.get_volume": {"description": "Get the volume.\\n\\nInteger in range [0..100] or :class:`None` if unknown.\\n\\nThe volume scale is linear.", "params": []}, "core.mixer.set_mute": {"description": "Set mute state.\\n\\n:class:`True` to mute, :class:`False` to unmute.\\n\\nReturns :class:`True` if call is successful, otherwise :class:`False`.", "params": [{"name": "mute"}]}, "core.mixer.set_volume": {"description": "Set the volume.\\n\\nThe volume is defined as an integer in range [0..100].\\n\\nThe volume scale is linear.\\n\\nReturns :class:`True` if call is successful, otherwise :class:`False`.", "params": [{"name": "volume"}]}, "core.playback.get_current_tl_track": {"description": "Get the currently playing or selected track.\\n\\nReturns a :class:`mopidy.models.TlTrack` or :class:`None`.", "params": []}, "core.playback.get_current_tlid": {"description": "Get the currently playing or selected TLID.\\n\\nExtracted from :meth:`get_current_tl_track` for convenience.\\n\\nReturns a :class:`int` or :class:`None`.\\n\\n.. versionadded:: 1.1", "params": []}, "core.playback.get_current_track": {"description": "Get the currently playing or selected track.\\n\\nExtracted from :meth:`get_current_tl_track` for convenience.\\n\\nReturns a :class:`mopidy.models.Track` or :class:`None`.", "params": []}, "core.playback.get_state": {"description": "Get The playback state.", "params": []}, "core.playback.get_stream_title": {"description": "Get the current stream title or :class:`None`.", "params": []}, "core.playback.get_time_position": {"description": "Get time position in milliseconds.", "params": []}, "core.playback.next": {"description": "Change to the next track.\\n\\nThe current playback state will be kept. If it was playing, playing\\nwill continue. If it was paused, it will still be paused, etc.", "params": []}, "core.playback.pause": {"description": "Pause playback.", "params": []}, "core.playback.play": {"description": "Play the given track, or if the given tl_track and tlid is\\n:class:`None`, play the currently active track.\\n\\nNote that the track **must** already be in the tracklist.\\n\\n.. deprecated:: 3.0\\n    The ``tl_track`` argument. Use ``tlid`` instead.\\n\\n:param tl_track: track to play\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:param tlid: TLID of the track to play\\n:type tlid: :class:`int` or :class:`None`", "params": [{"name": "tl_track", "default": null}, {"name": "tlid", "default": null}]}, "core.playback.previous": {"description": "Change to the previous track.\\n\\nThe current playback state will be kept. If it was playing, playing\\nwill continue. If it was paused, it will still be paused, etc.", "params": []}, "core.playback.resume": {"description": "If paused, resume playing the current track.", "params": []}, "core.playback.seek": {"description": "Seeks to time position given in milliseconds.\\n\\n:param time_position: time position in milliseconds\\n:type time_position: int\\n:rtype: :class:`True` if successful, else :class:`False`", "params": [{"name": "time_position"}]}, "core.playback.set_state": {"description": "Set the playback state.\\n\\nMust be :attr:`PLAYING`, :attr:`PAUSED`, or :attr:`STOPPED`.\\n\\nPossible states and transitions:\\n\\n.. digraph:: state_transitions\\n\\n    \\"STOPPED\\" -> \\"PLAYING\\" [ label=\\"play\\" ]\\n    \\"STOPPED\\" -> \\"PAUSED\\" [ label=\\"pause\\" ]\\n    \\"PLAYING\\" -> \\"STOPPED\\" [ label=\\"stop\\" ]\\n    \\"PLAYING\\" -> \\"PAUSED\\" [ label=\\"pause\\" ]\\n    \\"PLAYING\\" -> \\"PLAYING\\" [ label=\\"play\\" ]\\n    \\"PAUSED\\" -> \\"PLAYING\\" [ label=\\"resume\\" ]\\n    \\"PAUSED\\" -> \\"STOPPED\\" [ label=\\"stop\\" ]", "params": [{"name": "new_state"}]}, "core.playback.stop": {"description": "Stop playing.", "params": []}, "core.playlists.as_list": {"description": "Get a list of the currently available playlists.\\n\\nReturns a list of :class:`~mopidy.models.Ref` objects referring to the\\nplaylists. In other words, no information about the playlists\' content\\nis given.\\n\\n:rtype: list of :class:`mopidy.models.Ref`\\n\\n.. versionadded:: 1.0", "params": []}, "core.playlists.create": {"description": "Create a new playlist.\\n\\nIf ``uri_scheme`` matches an URI scheme handled by a current backend,\\nthat backend is asked to create the playlist. If ``uri_scheme`` is\\n:class:`None` or doesn\'t match a current backend, the first backend is\\nasked to create the playlist.\\n\\nAll new playlists must be created by calling this method, and **not**\\nby creating new instances of :class:`mopidy.models.Playlist`.\\n\\n:param name: name of the new playlist\\n:type name: string\\n:param uri_scheme: use the backend matching the URI scheme\\n:type uri_scheme: string\\n:rtype: :class:`mopidy.models.Playlist` or :class:`None`", "params": [{"name": "name"}, {"name": "uri_scheme", "default": null}]}, "core.playlists.delete": {"description": "Delete playlist identified by the URI.\\n\\nIf the URI doesn\'t match the URI schemes handled by the current\\nbackends, nothing happens.\\n\\nReturns :class:`True` if deleted, :class:`False` otherwise.\\n\\n:param uri: URI of the playlist to delete\\n:type uri: string\\n:rtype: :class:`bool`\\n\\n.. versionchanged:: 2.2\\n    Return type defined.", "params": [{"name": "uri"}]}, "core.playlists.get_items": {"description": "Get the items in a playlist specified by ``uri``.\\n\\nReturns a list of :class:`~mopidy.models.Ref` objects referring to the\\nplaylist\'s items.\\n\\nIf a playlist with the given ``uri`` doesn\'t exist, it returns\\n:class:`None`.\\n\\n:rtype: list of :class:`mopidy.models.Ref`, or :class:`None`\\n\\n.. versionadded:: 1.0", "params": [{"name": "uri"}]}, "core.playlists.get_uri_schemes": {"description": "Get the list of URI schemes that support playlists.\\n\\n:rtype: list of string\\n\\n.. versionadded:: 2.0", "params": []}, "core.playlists.lookup": {"description": "Lookup playlist with given URI in both the set of playlists and in any\\nother playlist sources. Returns :class:`None` if not found.\\n\\n:param uri: playlist URI\\n:type uri: string\\n:rtype: :class:`mopidy.models.Playlist` or :class:`None`", "params": [{"name": "uri"}]}, "core.playlists.refresh": {"description": "Refresh the playlists in :attr:`playlists`.\\n\\nIf ``uri_scheme`` is :class:`None`, all backends are asked to refresh.\\nIf ``uri_scheme`` is an URI scheme handled by a backend, only that\\nbackend is asked to refresh. If ``uri_scheme`` doesn\'t match any\\ncurrent backend, nothing happens.\\n\\n:param uri_scheme: limit to the backend matching the URI scheme\\n:type uri_scheme: string", "params": [{"name": "uri_scheme", "default": null}]}, "core.playlists.save": {"description": "Save the playlist.\\n\\nFor a playlist to be saveable, it must have the ``uri`` attribute set.\\nYou must not set the ``uri`` atribute yourself, but use playlist\\nobjects returned by :meth:`create` or retrieved from :attr:`playlists`,\\nwhich will always give you saveable playlists.\\n\\nThe method returns the saved playlist. The return playlist may differ\\nfrom the saved playlist. E.g. if the playlist name was changed, the\\nreturned playlist may have a different URI. The caller of this method\\nmust throw away the playlist sent to this method, and use the\\nreturned playlist instead.\\n\\nIf the playlist\'s URI isn\'t set or doesn\'t match the URI scheme of a\\ncurrent backend, nothing is done and :class:`None` is returned.\\n\\n:param playlist: the playlist\\n:type playlist: :class:`mopidy.models.Playlist`\\n:rtype: :class:`mopidy.models.Playlist` or :class:`None`", "params": [{"name": "playlist"}]}, "core.tracklist.add": {"description": "Add tracks to the tracklist.\\n\\nIf ``uris`` is given instead of ``tracks``, the URIs are\\nlooked up in the library and the resulting tracks are added to the\\ntracklist.\\n\\nIf ``at_position`` is given, the tracks are inserted at the given\\nposition in the tracklist. If ``at_position`` is not given, the tracks\\nare appended to the end of the tracklist.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.\\n\\n:param tracks: tracks to add\\n:type tracks: list of :class:`mopidy.models.Track` or :class:`None`\\n:param at_position: position in tracklist to add tracks\\n:type at_position: int or :class:`None`\\n:param uris: list of URIs for tracks to add\\n:type uris: list of string or :class:`None`\\n:rtype: list of :class:`mopidy.models.TlTrack`\\n\\n.. versionadded:: 1.0\\n    The ``uris`` argument.\\n\\n.. deprecated:: 1.0\\n    The ``tracks`` argument. Use ``uris``.", "params": [{"name": "tracks", "default": null}, {"name": "at_position", "default": null}, {"name": "uris", "default": null}]}, "core.tracklist.clear": {"description": "Clear the tracklist.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.", "params": []}, "core.tracklist.eot_track": {"description": "The track that will be played after the given track.\\n\\nNot necessarily the same track as :meth:`next_track`.\\n\\n.. deprecated:: 3.0\\n    Use :meth:`get_eot_tlid` instead.\\n\\n:param tl_track: the reference track\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:rtype: :class:`mopidy.models.TlTrack` or :class:`None`", "params": [{"name": "tl_track"}]}, "core.tracklist.filter": {"description": "Filter the tracklist by the given criteria.\\n\\nEach rule in the criteria consists of a model field and a list of\\nvalues to compare it against. If the model field matches any of the\\nvalues, it may be returned.\\n\\nOnly tracks that match all the given criteria are returned.\\n\\nExamples::\\n\\n    # Returns tracks with TLIDs 1, 2, 3, or 4 (tracklist ID)\\n    filter({\'tlid\': [1, 2, 3, 4]})\\n\\n    # Returns track with URIs \'xyz\' or \'abc\'\\n    filter({\'uri\': [\'xyz\', \'abc\']})\\n\\n    # Returns track with a matching TLIDs (1, 3 or 6) and a\\n    # matching URI (\'xyz\' or \'abc\')\\n    filter({\'tlid\': [1, 3, 6], \'uri\': [\'xyz\', \'abc\']})\\n\\n:param criteria: one or more rules to match by\\n:type criteria: dict, of (string, list) pairs\\n:rtype: list of :class:`mopidy.models.TlTrack`", "params": [{"name": "criteria"}]}, "core.tracklist.get_consume": {"description": "Get consume mode.\\n\\n:class:`True`\\n    Tracks are removed from the tracklist when they have been played.\\n:class:`False`\\n    Tracks are not removed from the tracklist.", "params": []}, "core.tracklist.get_eot_tlid": {"description": "The TLID of the track that will be played after the current track.\\n\\nNot necessarily the same TLID as returned by :meth:`get_next_tlid`.\\n\\n:rtype: :class:`int` or :class:`None`\\n\\n.. versionadded:: 1.1", "params": []}, "core.tracklist.get_length": {"description": "Get length of the tracklist.", "params": []}, "core.tracklist.get_next_tlid": {"description": "The tlid of the track that will be played if calling\\n:meth:`mopidy.core.PlaybackController.next()`.\\n\\nFor normal playback this is the next track in the tracklist. If repeat\\nis enabled the next track can loop around the tracklist. When random is\\nenabled this should be a random track, all tracks should be played once\\nbefore the tracklist repeats.\\n\\n:rtype: :class:`int` or :class:`None`\\n\\n.. versionadded:: 1.1", "params": []}, "core.tracklist.get_previous_tlid": {"description": "Returns the TLID of the track that will be played if calling\\n:meth:`mopidy.core.PlaybackController.previous()`.\\n\\nFor normal playback this is the previous track in the tracklist. If\\nrandom and/or consume is enabled it should return the current track\\ninstead.\\n\\n:rtype: :class:`int` or :class:`None`\\n\\n.. versionadded:: 1.1", "params": []}, "core.tracklist.get_random": {"description": "Get random mode.\\n\\n:class:`True`\\n    Tracks are selected at random from the tracklist.\\n:class:`False`\\n    Tracks are played in the order of the tracklist.", "params": []}, "core.tracklist.get_repeat": {"description": "Get repeat mode.\\n\\n:class:`True`\\n    The tracklist is played repeatedly.\\n:class:`False`\\n    The tracklist is played once.", "params": []}, "core.tracklist.get_single": {"description": "Get single mode.\\n\\n:class:`True`\\n    Playback is stopped after current song, unless in ``repeat`` mode.\\n:class:`False`\\n    Playback continues after current song.", "params": []}, "core.tracklist.get_tl_tracks": {"description": "Get tracklist as list of :class:`mopidy.models.TlTrack`.", "params": []}, "core.tracklist.get_tracks": {"description": "Get tracklist as list of :class:`mopidy.models.Track`.", "params": []}, "core.tracklist.get_version": {"description": "Get the tracklist version.\\n\\nInteger which is increased every time the tracklist is changed. Is not\\nreset before Mopidy is restarted.", "params": []}, "core.tracklist.index": {"description": "The position of the given track in the tracklist.\\n\\nIf neither *tl_track* or *tlid* is given we return the index of\\nthe currently playing track.\\n\\n:param tl_track: the track to find the index of\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:param tlid: TLID of the track to find the index of\\n:type tlid: :class:`int` or :class:`None`\\n:rtype: :class:`int` or :class:`None`\\n\\n.. versionadded:: 1.1\\n    The *tlid* parameter", "params": [{"name": "tl_track", "default": null}, {"name": "tlid", "default": null}]}, "core.tracklist.move": {"description": "Move the tracks in the slice ``[start:end]`` to ``to_position``.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.\\n\\n:param start: position of first track to move\\n:type start: int\\n:param end: position after last track to move\\n:type end: int\\n:param to_position: new position for the tracks\\n:type to_position: int", "params": [{"name": "start"}, {"name": "end"}, {"name": "to_position"}]}, "core.tracklist.next_track": {"description": "The track that will be played if calling\\n:meth:`mopidy.core.PlaybackController.next()`.\\n\\nFor normal playback this is the next track in the tracklist. If repeat\\nis enabled the next track can loop around the tracklist. When random is\\nenabled this should be a random track, all tracks should be played once\\nbefore the tracklist repeats.\\n\\n.. deprecated:: 3.0\\n    Use :meth:`get_next_tlid` instead.\\n\\n:param tl_track: the reference track\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:rtype: :class:`mopidy.models.TlTrack` or :class:`None`", "params": [{"name": "tl_track"}]}, "core.tracklist.previous_track": {"description": "Returns the track that will be played if calling\\n:meth:`mopidy.core.PlaybackController.previous()`.\\n\\nFor normal playback this is the previous track in the tracklist. If\\nrandom and/or consume is enabled it should return the current track\\ninstead.\\n\\n.. deprecated:: 3.0\\n    Use :meth:`get_previous_tlid` instead.\\n\\n:param tl_track: the reference track\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:rtype: :class:`mopidy.models.TlTrack` or :class:`None`", "params": [{"name": "tl_track"}]}, "core.tracklist.remove": {"description": "Remove the matching tracks from the tracklist.\\n\\nUses :meth:`filter()` to lookup the tracks to remove.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.\\n\\n:param criteria: one or more rules to match by\\n:type criteria: dict, of (string, list) pairs\\n:rtype: list of :class:`mopidy.models.TlTrack` that were removed", "params": [{"name": "criteria"}]}, "core.tracklist.set_consume": {"description": "Set consume mode.\\n\\n:class:`True`\\n    Tracks are removed from the tracklist when they have been played.\\n:class:`False`\\n    Tracks are not removed from the tracklist.", "params": [{"name": "value"}]}, "core.tracklist.set_random": {"description": "Set random mode.\\n\\n:class:`True`\\n    Tracks are selected at random from the tracklist.\\n:class:`False`\\n    Tracks are played in the order of the tracklist.", "params": [{"name": "value"}]}, "core.tracklist.set_repeat": {"description": "Set repeat mode.\\n\\nTo repeat a single track, set both ``repeat`` and ``single``.\\n\\n:class:`True`\\n    The tracklist is played repeatedly.\\n:class:`False`\\n    The tracklist is played once.", "params": [{"name": "value"}]}, "core.tracklist.set_single": {"description": "Set single mode.\\n\\n:class:`True`\\n    Playback is stopped after current song, unless in ``repeat`` mode.\\n:class:`False`\\n    Playback continues after current song.", "params": [{"name": "value"}]}, "core.tracklist.shuffle": {"description": "Shuffles the entire tracklist. If ``start`` and ``end`` is given only\\nshuffles the slice ``[start:end]``.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.\\n\\n:param start: position of first track to shuffle\\n:type start: int or :class:`None`\\n:param end: position after last track to shuffle\\n:type end: int or :class:`None`", "params": [{"name": "start", "default": null}, {"name": "end", "default": null}]}, "core.tracklist.slice": {"description": "Returns a slice of the tracklist, limited by the given start and end\\npositions.\\n\\n:param start: position of first track to include in slice\\n:type start: int\\n:param end: position after last track to include in slice\\n:type end: int\\n:rtype: :class:`mopidy.models.TlTrack`", "params": [{"name": "start"}, {"name": "end"}]}}}'
okt 23 23:27:00 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:00,818 [8268:HttpServer] mopidy.http.handlers
okt 23 23:27:00 Desktop-Ubuntu mopidy[8268]:   Received WebSocket message from 127.0.0.1: '{"method":"core.describe","jsonrpc":"2.0","id":0}'
okt 23 23:27:00 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:00,814 [8268:HttpServer] mopidy.http.handlers
okt 23 23:27:00 Desktop-Ubuntu mopidy[8268]:   {'method': 'connection_added', 'params': {'connection': {'connection_id': 'BFXBXSDGLGDC', 'ip': '127.0.0.1', 'created': '2022-10-23 23:27:00'}}}
okt 23 23:27:00 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:00,684 [8268:HttpServer] mopidy_iris.core
okt 23 23:27:00 Desktop-Ubuntu mopidy[8268]:   <mopidy_iris.handlers.WebsocketHandler object at 0x7f4e800e5000>
okt 23 23:27:00 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:00,684 [8268:HttpServer] mopidy_iris.core
okt 23 23:27:00 Desktop-Ubuntu mopidy[8268]:   Connection added
okt 23 23:27:00 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:00,684 [8268:HttpServer] mopidy_iris.core
okt 23 23:27:00 Desktop-Ubuntu mopidy[8268]:   101 GET /iris/ws/ (127.0.0.1) 0.44ms
okt 23 23:27:00 Desktop-Ubuntu mopidy[8268]: INFO     2022-10-23 23:27:00,684 [8268:HttpServer] tornado.access
okt 23 23:27:00 Desktop-Ubuntu mopidy[8268]:   New WebSocket connection from 127.0.0.1
okt 23 23:27:00 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:27:00,672 [8268:HttpServer] mopidy.http.handlers
okt 23 23:27:00 Desktop-Ubuntu mopidy[8268]:   101 GET /mopidy/ws/ (127.0.0.1) 19.43ms
okt 23 23:27:00 Desktop-Ubuntu mopidy[8268]: INFO     2022-10-23 23:27:00,672 [8268:HttpServer] tornado.access
okt 23 23:27:00 Desktop-Ubuntu mopidy[8268]:   304 GET /iris/manifest.json (127.0.0.1) 0.65ms
okt 23 23:27:00 Desktop-Ubuntu mopidy[8268]: INFO     2022-10-23 23:27:00,565 [8268:HttpServer] tornado.access
okt 23 23:27:00 Desktop-Ubuntu mopidy[8268]:   304 GET /iris/playlist/bTN1OkV4YW1wbGUlMjBQbGF5bGlzdC5tM3U4/null (127.0.0.1) 0.79ms
okt 23 23:27:00 Desktop-Ubuntu mopidy[8268]: INFO     2022-10-23 23:27:00,298 [8268:HttpServer] tornado.access
okt 23 23:26:59 Desktop-Ubuntu mopidy[8268]:   200 GET /iris/app.min.js?v=1666559547 (127.0.0.1) 10.79ms
okt 23 23:26:59 Desktop-Ubuntu mopidy[8268]: INFO     2022-10-23 23:26:59,521 [8268:HttpServer] tornado.access
okt 23 23:26:59 Desktop-Ubuntu mopidy[8268]:   200 GET /iris/app.min.css?v=1666559547 (127.0.0.1) 5.09ms
okt 23 23:26:59 Desktop-Ubuntu mopidy[8268]: INFO     2022-10-23 23:26:59,509 [8268:HttpServer] tornado.access
okt 23 23:26:59 Desktop-Ubuntu mopidy[8268]:   200 GET /iris/assets/app-icon.svg (127.0.0.1) 0.72ms
okt 23 23:26:59 Desktop-Ubuntu mopidy[8268]: INFO     2022-10-23 23:26:59,289 [8268:HttpServer] tornado.access
okt 23 23:26:59 Desktop-Ubuntu mopidy[8268]:   200 GET /iris/playlist/bTN1OkV4YW1wbGUlMjBQbGF5bGlzdC5tM3U4/Example%20Playlist (127.0.0.1) 5.92ms
okt 23 23:26:59 Desktop-Ubuntu mopidy[8268]: INFO     2022-10-23 23:26:59,252 [8268:HttpServer] tornado.access
okt 23 23:26:53 Desktop-Ubuntu mopidy[8268]:   Zeroconf service 'Mopidy HTTP server on Desktop-Ubuntu' (_mopidy-http._tcp at []:6680): Published
okt 23 23:26:53 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:26:53,904 [8268:HttpFrontend-11 (_actor_loop)] mopidy.zeroconf
okt 23 23:26:53 Desktop-Ubuntu mopidy[8268]:   Zeroconf service 'Mopidy HTTP server on Desktop-Ubuntu' (_http._tcp at []:6680): Published
okt 23 23:26:53 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:26:53,901 [8268:HttpFrontend-11 (_actor_loop)] mopidy.zeroconf
okt 23 23:26:53 Desktop-Ubuntu mopidy[8268]:     '/': <class 'tornado.web.RedirectHandler'>
okt 23 23:26:53 Desktop-Ubuntu mopidy[8268]:     '/mopidy/': <class 'mopidy.http.handlers.ClientListHandler'>
okt 23 23:26:53 Desktop-Ubuntu mopidy[8268]:     '/mopidy/(.+)': <class 'mopidy.http.handlers.StaticFileHandler'>
okt 23 23:26:53 Desktop-Ubuntu mopidy[8268]:     '/mopidy/rpc': <class 'mopidy.http.handlers.JsonRpcHandler'>
okt 23 23:26:53 Desktop-Ubuntu mopidy[8268]:     '/mopidy/ws/?': <class 'mopidy.http.handlers.WebSocketHandler'>
okt 23 23:26:53 Desktop-Ubuntu mopidy[8268]:     '/mopidy': <class 'mopidy.http.handlers.AddSlashHandler'>
okt 23 23:26:53 Desktop-Ubuntu mopidy[8268]:     '/iris/(.*)': <class 'mopidy_iris.handlers.ReactRouterHandler'>
okt 23 23:26:53 Desktop-Ubuntu mopidy[8268]:     '/iris/((.*)(?:css|js|json|map)$)': <class 'tornado.web.StaticFileHandler'>
okt 23 23:26:53 Desktop-Ubuntu mopidy[8268]:     '/iris/assets/(.*)': <class 'tornado.web.StaticFileHandler'>
okt 23 23:26:53 Desktop-Ubuntu mopidy[8268]:     '/iris/ws/?': <class 'mopidy_iris.handlers.WebsocketHandler'>
okt 23 23:26:53 Desktop-Ubuntu mopidy[8268]:     '/iris/http/([^/]*)': <class 'mopidy_iris.handlers.HttpHandler'>
okt 23 23:26:53 Desktop-Ubuntu mopidy[8268]:     '/iris': <class 'mopidy.http.handlers.AddSlashHandler'>
okt 23 23:26:53 Desktop-Ubuntu mopidy[8268]:     '/youtube/(.*\\.(?:webm|m4a|mp3|ogg))': <class 'mopidy_youtube.web.AudioHandler'>
okt 23 23:26:53 Desktop-Ubuntu mopidy[8268]:     '/youtube/(.*\\.jpg)': <class 'mopidy_youtube.web.ImageHandler'>
okt 23 23:26:53 Desktop-Ubuntu mopidy[8268]:     '/youtube/(index.html|image.html)?': <class 'mopidy_youtube.web.IndexHandler'>
okt 23 23:26:53 Desktop-Ubuntu mopidy[8268]:     '/youtube': <class 'mopidy.http.handlers.AddSlashHandler'>
okt 23 23:26:53 Desktop-Ubuntu mopidy[8268]:   HTTP routes from extensions:
okt 23 23:26:53 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:26:53,897 [8268:HttpServer] mopidy.http.actor
okt 23 23:26:53 Desktop-Ubuntu mopidy[8268]:   Default webclient is mopidy
okt 23 23:26:53 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:26:53,896 [8268:HttpServer] mopidy.http.actor
okt 23 23:26:53 Desktop-Ubuntu mopidy[8268]:   Loaded HTTP extension: mopidy
okt 23 23:26:53 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:26:53,895 [8268:HttpServer] mopidy.http.actor
okt 23 23:26:53 Desktop-Ubuntu mopidy[8268]:   Loaded HTTP extension: iris
okt 23 23:26:53 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:26:53,895 [8268:HttpServer] mopidy.http.actor
okt 23 23:26:53 Desktop-Ubuntu mopidy[8268]:   Loaded HTTP extension: youtube
okt 23 23:26:53 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:26:53,895 [8268:HttpServer] mopidy.http.actor
okt 23 23:26:53 Desktop-Ubuntu mopidy[8268]:   Starting GLib mainloop
okt 23 23:26:53 Desktop-Ubuntu mopidy[8268]: INFO     2022-10-23 23:26:53,891 [8268:MainThread] mopidy.commands
okt 23 23:26:53 Desktop-Ubuntu mopidy[8268]:   Using selector: EpollSelector
okt 23 23:26:53 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:26:53,890 [8268:HttpServer] asyncio
okt 23 23:26:53 Desktop-Ubuntu mopidy[8268]:   HttpFrontend took 1ms
okt 23 23:26:53 Desktop-Ubuntu mopidy[8268]: TRACE    2022-10-23 23:26:53,890 [8268:MainThread] mopidy.internal.timer
okt 23 23:26:53 Desktop-Ubuntu mopidy[8268]:   HTTP server running at [::ffff:127.0.0.1]:6680
okt 23 23:26:53 Desktop-Ubuntu mopidy[8268]: INFO     2022-10-23 23:26:53,889 [8268:HttpFrontend-11 (_actor_loop)] mopidy.http.actor
okt 23 23:26:53 Desktop-Ubuntu mopidy[8268]:   Starting HttpFrontend (urn:uuid:5aee4f16-80ac-4468-8788-a03b8a3741c5)
okt 23 23:26:53 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:26:53,889 [8268:MainThread] pykka
okt 23 23:26:53 Desktop-Ubuntu mopidy[8268]:   Registered HttpFrontend (urn:uuid:5aee4f16-80ac-4468-8788-a03b8a3741c5)
okt 23 23:26:53 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:26:53,889 [8268:MainThread] pykka
okt 23 23:26:53 Desktop-Ubuntu mopidy[8268]:   Starting HTTP server
okt 23 23:26:53 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:26:53,889 [8268:MainThread] mopidy.http.actor
okt 23 23:26:53 Desktop-Ubuntu mopidy[8268]:   IrisFrontend took 0ms
okt 23 23:26:53 Desktop-Ubuntu mopidy[8268]: TRACE    2022-10-23 23:26:53,888 [8268:MainThread] mopidy.internal.timer
okt 23 23:26:53 Desktop-Ubuntu mopidy[8268]:   Starting Iris 3.64.1
okt 23 23:26:53 Desktop-Ubuntu mopidy[8268]: INFO     2022-10-23 23:26:53,888 [8268:IrisFrontend-9 (_actor_loop)] mopidy_iris.core
okt 23 23:26:53 Desktop-Ubuntu mopidy[8268]:   Starting IrisFrontend (urn:uuid:44da2706-cb95-4fe4-b235-c7834da3e175)
okt 23 23:26:53 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:26:53,888 [8268:MainThread] pykka
okt 23 23:26:53 Desktop-Ubuntu mopidy[8268]:   Registered IrisFrontend (urn:uuid:44da2706-cb95-4fe4-b235-c7834da3e175)
okt 23 23:26:53 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:26:53,888 [8268:MainThread] pykka
okt 23 23:26:53 Desktop-Ubuntu mopidy[8268]:   YouTubeCoreListener took 0ms
okt 23 23:26:53 Desktop-Ubuntu mopidy[8268]: TRACE    2022-10-23 23:26:53,888 [8268:MainThread] mopidy.internal.timer
okt 23 23:26:53 Desktop-Ubuntu mopidy[8268]:   Starting YouTubeCoreListener (urn:uuid:cdd2678f-3006-450f-981e-320bcc490f9e)
okt 23 23:26:53 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:26:53,887 [8268:MainThread] pykka
okt 23 23:26:53 Desktop-Ubuntu mopidy[8268]:   Registered YouTubeCoreListener (urn:uuid:cdd2678f-3006-450f-981e-320bcc490f9e)
okt 23 23:26:53 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:26:53,887 [8268:MainThread] pykka
okt 23 23:26:53 Desktop-Ubuntu mopidy[8268]:   YouTubeAutoplayer took 0ms
okt 23 23:26:53 Desktop-Ubuntu mopidy[8268]: TRACE    2022-10-23 23:26:53,887 [8268:MainThread] mopidy.internal.timer
okt 23 23:26:53 Desktop-Ubuntu mopidy[8268]:   Starting YouTubeAutoplayer (urn:uuid:d2173c96-a38c-43b5-a7b0-aa9cbf387847)
okt 23 23:26:53 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:26:53,887 [8268:MainThread] pykka
okt 23 23:26:53 Desktop-Ubuntu mopidy[8268]:   Registered YouTubeAutoplayer (urn:uuid:d2173c96-a38c-43b5-a7b0-aa9cbf387847)
okt 23 23:26:53 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:26:53,887 [8268:MainThread] pykka
okt 23 23:26:53 Desktop-Ubuntu mopidy[8268]:   Starting Mopidy frontends: YouTubeAutoplayer, YouTubeCoreListener, IrisFrontend, HttpFrontend
okt 23 23:26:53 Desktop-Ubuntu mopidy[8268]: INFO     2022-10-23 23:26:53,887 [8268:MainThread] mopidy.commands
okt 23 23:26:53 Desktop-Ubuntu mopidy[8268]:   Starting Core (urn:uuid:45c2c637-835d-46f9-b849-efaafd370902)
okt 23 23:26:53 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:26:53,882 [8268:MainThread] pykka
okt 23 23:26:53 Desktop-Ubuntu mopidy[8268]:   Registered Core (urn:uuid:45c2c637-835d-46f9-b849-efaafd370902)
okt 23 23:26:53 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:26:53,882 [8268:MainThread] pykka
okt 23 23:26:53 Desktop-Ubuntu mopidy[8268]:   Starting Mopidy core
okt 23 23:26:53 Desktop-Ubuntu mopidy[8268]: INFO     2022-10-23 23:26:53,880 [8268:MainThread] mopidy.commands
okt 23 23:26:53 Desktop-Ubuntu mopidy[8268]:   StreamBackend took 6ms
okt 23 23:26:53 Desktop-Ubuntu mopidy[8268]: TRACE    2022-10-23 23:26:53,878 [8268:MainThread] mopidy.internal.timer
okt 23 23:26:53 Desktop-Ubuntu mopidy[8268]:   Starting StreamBackend (urn:uuid:f9b15e5c-ed4c-46b2-a284-17147e407121)
okt 23 23:26:53 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:26:53,875 [8268:MainThread] pykka
okt 23 23:26:53 Desktop-Ubuntu mopidy[8268]:   Registered StreamBackend (urn:uuid:f9b15e5c-ed4c-46b2-a284-17147e407121)
okt 23 23:26:53 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:26:53,875 [8268:MainThread] pykka
okt 23 23:26:53 Desktop-Ubuntu mopidy[8268]:   Audio output set to "pulsesink server=127.0.0.1"
okt 23 23:26:53 Desktop-Ubuntu mopidy[8268]: INFO     2022-10-23 23:26:53,874 [8268:Audio-2 (_actor_loop)] mopidy.audio.actor
okt 23 23:26:53 Desktop-Ubuntu mopidy[8268]:   M3UBackend took 1ms
okt 23 23:26:53 Desktop-Ubuntu mopidy[8268]: TRACE    2022-10-23 23:26:53,872 [8268:MainThread] mopidy.internal.timer
okt 23 23:26:53 Desktop-Ubuntu mopidy[8268]:   Starting M3UBackend (urn:uuid:51ec7035-e71d-4f1e-92c2-b04d1da2b856)
okt 23 23:26:53 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:26:53,871 [8268:MainThread] pykka
okt 23 23:26:53 Desktop-Ubuntu mopidy[8268]:   Registered M3UBackend (urn:uuid:51ec7035-e71d-4f1e-92c2-b04d1da2b856)
okt 23 23:26:53 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:26:53,871 [8268:MainThread] pykka
okt 23 23:26:53 Desktop-Ubuntu mopidy[8268]:   FileBackend took 2ms
okt 23 23:26:53 Desktop-Ubuntu mopidy[8268]: TRACE    2022-10-23 23:26:53,870 [8268:MainThread] mopidy.internal.timer
okt 23 23:26:53 Desktop-Ubuntu mopidy[8268]:   Starting FileBackend (urn:uuid:b5d29787-8902-4145-b307-34682f2a1d44)
okt 23 23:26:53 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:26:53,868 [8268:MainThread] pykka
okt 23 23:26:53 Desktop-Ubuntu mopidy[8268]:   Registered FileBackend (urn:uuid:b5d29787-8902-4145-b307-34682f2a1d44)
okt 23 23:26:53 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:26:53,868 [8268:MainThread] pykka
okt 23 23:26:53 Desktop-Ubuntu mopidy[8268]:   Failed expanding path ($XDG_MUSIC_DIR) from file/media_dirs config value.
okt 23 23:26:53 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:26:53,867 [8268:MainThread] mopidy.file.library
okt 23 23:26:53 Desktop-Ubuntu mopidy[8268]: ModuleNotFoundError: No module named 'ytmusicapi'
okt 23 23:26:53 Desktop-Ubuntu mopidy[8268]:     from ytmusicapi import YTMusic
okt 23 23:26:53 Desktop-Ubuntu mopidy[8268]:   File "/usr/local/lib/python3.10/dist-packages/mopidy_youtube/apis/youtube_music.py", line 7, in <module>
okt 23 23:26:53 Desktop-Ubuntu mopidy[8268]:     from mopidy_youtube.apis import youtube_music
okt 23 23:26:53 Desktop-Ubuntu mopidy[8268]:   File "/usr/local/lib/python3.10/dist-packages/mopidy_youtube/backend.py", line 84, in __init__
okt 23 23:26:53 Desktop-Ubuntu mopidy[8268]:     obj = cls(*args, **kwargs)
okt 23 23:26:53 Desktop-Ubuntu mopidy[8268]:   File "/usr/lib/python3/dist-packages/pykka/_actor.py", line 91, in start
okt 23 23:26:53 Desktop-Ubuntu mopidy[8268]:     backend = backend_class.start(
okt 23 23:26:53 Desktop-Ubuntu mopidy[8268]:   File "/usr/lib/python3/dist-packages/mopidy/commands.py", line 412, in start_backends
okt 23 23:26:53 Desktop-Ubuntu mopidy[8268]:     yield
okt 23 23:26:53 Desktop-Ubuntu mopidy[8268]:   File "/usr/lib/python3/dist-packages/mopidy/commands.py", line 248, in _actor_error_handling
okt 23 23:26:53 Desktop-Ubuntu mopidy[8268]: Traceback (most recent call last):
okt 23 23:26:53 Desktop-Ubuntu mopidy[8268]:   Got un-handled exception from YouTubeBackend
okt 23 23:26:53 Desktop-Ubuntu mopidy[8268]: ERROR    2022-10-23 23:26:53,866 [8268:MainThread] mopidy.commands
okt 23 23:26:53 Desktop-Ubuntu mopidy[8268]:   Starting Mopidy backends: YouTubeBackend, FileBackend, M3UBackend, StreamBackend
okt 23 23:26:53 Desktop-Ubuntu mopidy[8268]: INFO     2022-10-23 23:26:53,865 [8268:MainThread] mopidy.commands
okt 23 23:26:53 Desktop-Ubuntu mopidy[8268]:   Starting Audio (urn:uuid:10711aa7-9480-4da1-98e7-17d46e15e1d1)
okt 23 23:26:53 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:26:53,864 [8268:MainThread] pykka
okt 23 23:26:53 Desktop-Ubuntu mopidy[8268]:   Registered Audio (urn:uuid:10711aa7-9480-4da1-98e7-17d46e15e1d1)
okt 23 23:26:53 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:26:53,864 [8268:MainThread] pykka
okt 23 23:26:53 Desktop-Ubuntu mopidy[8268]:   Starting Mopidy audio
okt 23 23:26:53 Desktop-Ubuntu mopidy[8268]: INFO     2022-10-23 23:26:53,864 [8268:MainThread] mopidy.commands
okt 23 23:26:53 Desktop-Ubuntu mopidy[8268]:   Mixer volume left unchanged
okt 23 23:26:53 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:26:53,863 [8268:MainThread] mopidy.commands
okt 23 23:26:53 Desktop-Ubuntu mopidy[8268]:   Starting SoftwareMixer (urn:uuid:a3f9667d-3efa-4fb5-ab50-449dc0311f7e)
okt 23 23:26:53 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:26:53,862 [8268:MainThread] pykka
okt 23 23:26:53 Desktop-Ubuntu mopidy[8268]:   Registered SoftwareMixer (urn:uuid:a3f9667d-3efa-4fb5-ab50-449dc0311f7e)
okt 23 23:26:53 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:26:53,862 [8268:MainThread] pykka
okt 23 23:26:53 Desktop-Ubuntu mopidy[8268]:   Starting Mopidy mixer: SoftwareMixer
okt 23 23:26:53 Desktop-Ubuntu mopidy[8268]: INFO     2022-10-23 23:26:53,862 [8268:MainThread] mopidy.commands
okt 23 23:26:53 Desktop-Ubuntu mopidy[8268]:   Available Mopidy mixers: SoftwareMixer
okt 23 23:26:53 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:26:53,862 [8268:MainThread] mopidy.commands
okt 23 23:26:53 Desktop-Ubuntu mopidy[8268]:   Disabled extensions: soundcloud
okt 23 23:26:53 Desktop-Ubuntu mopidy[8268]: INFO     2022-10-23 23:26:53,782 [8268:MainThread] mopidy.__main__
okt 23 23:26:53 Desktop-Ubuntu mopidy[8268]:   Enabled extensions: youtube, iris, http, softwaremixer, stream, m3u, file
okt 23 23:26:53 Desktop-Ubuntu mopidy[8268]: INFO     2022-10-23 23:26:53,782 [8268:MainThread] mopidy.__main__
okt 23 23:26:53 Desktop-Ubuntu mopidy[8268]:   Validating extension: stream
okt 23 23:26:53 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:26:53,782 [8268:MainThread] mopidy.ext
okt 23 23:26:53 Desktop-Ubuntu mopidy[8268]:   Validating extension: softwaremixer
okt 23 23:26:53 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:26:53,782 [8268:MainThread] mopidy.ext
okt 23 23:26:53 Desktop-Ubuntu mopidy[8268]:   Validating extension: m3u
okt 23 23:26:53 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:26:53,782 [8268:MainThread] mopidy.ext
okt 23 23:26:53 Desktop-Ubuntu mopidy[8268]:   Validating extension: http
okt 23 23:26:53 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:26:53,718 [8268:MainThread] mopidy.ext
okt 23 23:26:53 Desktop-Ubuntu mopidy[8268]:   Validating extension: file
okt 23 23:26:53 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:26:53,718 [8268:MainThread] mopidy.ext
okt 23 23:26:53 Desktop-Ubuntu mopidy[8268]:   Validating extension: iris
okt 23 23:26:53 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:26:53,709 [8268:MainThread] mopidy.ext
okt 23 23:26:53 Desktop-Ubuntu mopidy[8268]:   Validating extension: soundcloud
okt 23 23:26:53 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:26:53,683 [8268:MainThread] mopidy.ext
okt 23 23:26:53 Desktop-Ubuntu mopidy[8268]:   Validating extension: youtube
okt 23 23:26:53 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:26:53,631 [8268:MainThread] mopidy.ext
okt 23 23:26:53 Desktop-Ubuntu mopidy[8268]:   Ignoring config section 'jukebox' because no matching extension was found
okt 23 23:26:53 Desktop-Ubuntu mopidy[8268]: WARNING  2022-10-23 23:26:53,630 [8268:MainThread] mopidy.config
okt 23 23:26:53 Desktop-Ubuntu mopidy[8268]:   Ignoring config section 'local' because no matching extension was found
okt 23 23:26:53 Desktop-Ubuntu mopidy[8268]: WARNING  2022-10-23 23:26:53,630 [8268:MainThread] mopidy.config
okt 23 23:26:53 Desktop-Ubuntu mopidy[8268]:   Ignoring config section 'ytmusic' because no matching extension was found
okt 23 23:26:53 Desktop-Ubuntu mopidy[8268]: WARNING  2022-10-23 23:26:53,630 [8268:MainThread] mopidy.config
okt 23 23:26:53 Desktop-Ubuntu mopidy[8268]:   Loading config from command line options
okt 23 23:26:53 Desktop-Ubuntu mopidy[8268]: INFO     2022-10-23 23:26:53,627 [8268:MainThread] mopidy.config
okt 23 23:26:53 Desktop-Ubuntu mopidy[8268]:   Loading config from file:///etc/mopidy/mopidy.conf
okt 23 23:26:53 Desktop-Ubuntu mopidy[8268]: INFO     2022-10-23 23:26:53,626 [8268:MainThread] mopidy.config
okt 23 23:26:53 Desktop-Ubuntu mopidy[8268]:   Loading config from file:///usr/share/mopidy/conf.d/mopidy.conf
okt 23 23:26:53 Desktop-Ubuntu mopidy[8268]: INFO     2022-10-23 23:26:53,626 [8268:MainThread] mopidy.config
okt 23 23:26:53 Desktop-Ubuntu mopidy[8268]:   Loading config from builtin defaults
okt 23 23:26:53 Desktop-Ubuntu mopidy[8268]: INFO     2022-10-23 23:26:53,625 [8268:MainThread] mopidy.config
okt 23 23:26:53 Desktop-Ubuntu mopidy[8268]:   Fetching passwords from your keyring failed. Any passwords stored in the keyring will not be available. (org.freedesktop.DBus.Error.NotSupported: Unable to autolaunch a dbus-daemon without a $DISPLAY for X11)
okt 23 23:26:53 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:26:53,624 [8268:MainThread] mopidy.config.keyring
okt 23 23:26:53 Desktop-Ubuntu mopidy[8268]:   Discovered extensions: youtube, soundcloud, iris, file, http, m3u, softwaremixer, stream
okt 23 23:26:53 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:26:53,623 [8268:MainThread] mopidy.ext
okt 23 23:26:53 Desktop-Ubuntu mopidy[8268]:   Loaded extension: Mopidy-Stream 3.3.0
okt 23 23:26:53 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:26:53,619 [8268:MainThread] mopidy.ext
okt 23 23:26:53 Desktop-Ubuntu mopidy[8268]:   Loading entry point: stream = mopidy.stream:Extension
okt 23 23:26:53 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:26:53,619 [8268:MainThread] mopidy.ext
okt 23 23:26:53 Desktop-Ubuntu mopidy[8268]:   Loaded extension: Mopidy-SoftwareMixer 3.3.0
okt 23 23:26:53 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:26:53,619 [8268:MainThread] mopidy.ext
okt 23 23:26:53 Desktop-Ubuntu mopidy[8268]:   Loading entry point: softwaremixer = mopidy.softwaremixer:Extension
okt 23 23:26:53 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:26:53,619 [8268:MainThread] mopidy.ext
okt 23 23:26:53 Desktop-Ubuntu mopidy[8268]:   Loaded extension: Mopidy-M3U 3.3.0
okt 23 23:26:53 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:26:53,619 [8268:MainThread] mopidy.ext
okt 23 23:26:53 Desktop-Ubuntu mopidy[8268]:   Loading entry point: m3u = mopidy.m3u:Extension
okt 23 23:26:53 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:26:53,618 [8268:MainThread] mopidy.ext
okt 23 23:26:53 Desktop-Ubuntu mopidy[8268]:   Loaded extension: Mopidy-HTTP 3.3.0
okt 23 23:26:53 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:26:53,618 [8268:MainThread] mopidy.ext
okt 23 23:26:53 Desktop-Ubuntu mopidy[8268]:   Loading entry point: http = mopidy.http:Extension
okt 23 23:26:53 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:26:53,618 [8268:MainThread] mopidy.ext
okt 23 23:26:53 Desktop-Ubuntu mopidy[8268]:   Loaded extension: Mopidy-File 3.3.0
okt 23 23:26:53 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:26:53,618 [8268:MainThread] mopidy.ext
okt 23 23:26:53 Desktop-Ubuntu mopidy[8268]:   Loading entry point: file = mopidy.file:Extension
okt 23 23:26:53 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:26:53,617 [8268:MainThread] mopidy.ext
okt 23 23:26:53 Desktop-Ubuntu mopidy[8268]:   Loaded extension: Mopidy-Iris 3.64.1
okt 23 23:26:53 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:26:53,615 [8268:MainThread] mopidy.ext
okt 23 23:26:53 Desktop-Ubuntu mopidy[8268]:   Loading entry point: iris = mopidy_iris:Extension
okt 23 23:26:53 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:26:53,615 [8268:MainThread] mopidy.ext
okt 23 23:26:53 Desktop-Ubuntu mopidy[8268]:   Loaded extension: Mopidy-SoundCloud 3.0.1
okt 23 23:26:53 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:26:53,614 [8268:MainThread] mopidy.ext
okt 23 23:26:53 Desktop-Ubuntu mopidy[8268]:   Loading entry point: soundcloud = mopidy_soundcloud:Extension
okt 23 23:26:53 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:26:53,613 [8268:MainThread] mopidy.ext
okt 23 23:26:53 Desktop-Ubuntu mopidy[8268]:   Loaded extension: Mopidy-YouTube 3.6.1
okt 23 23:26:53 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:26:53,613 [8268:MainThread] mopidy.ext
okt 23 23:26:53 Desktop-Ubuntu mopidy[8268]:   Loading entry point: youtube = mopidy_youtube:Extension
okt 23 23:26:53 Desktop-Ubuntu mopidy[8268]: DEBUG    2022-10-23 23:26:53,612 [8268:MainThread] mopidy.ext
okt 23 23:26:53 Desktop-Ubuntu mopidy[8268]:   Starting Mopidy 3.3.0
okt 23 23:26:53 Desktop-Ubuntu mopidy[8268]: INFO     2022-10-23 23:26:53,609 [8268:MainThread] mopidy.__main__
okt 23 23:26:53 Desktop-Ubuntu systemd[1]: Started Mopidy music server.
okt 23 23:26:53 Desktop-Ubuntu systemd[1]: Starting Mopidy music server...
okt 23 23:23:29 Desktop-Ubuntu systemd[1]: Stopped Mopidy music server.
okt 23 23:23:29 Desktop-Ubuntu systemd[1]: mopidy.service: Deactivated successfully.
okt 23 23:23:29 Desktop-Ubuntu mopidy[7481]:   All actors stopped.
okt 23 23:23:29 Desktop-Ubuntu mopidy[7481]: DEBUG    2022-10-23 23:23:29,540 [7481:MainThread] mopidy.internal.process
okt 23 23:23:29 Desktop-Ubuntu mopidy[7481]:   Stopped SoftwareMixer (urn:uuid:b289ca0a-8513-4cbc-acef-5a99839a9eda)
okt 23 23:23:29 Desktop-Ubuntu mopidy[7481]: DEBUG    2022-10-23 23:23:29,540 [7481:SoftwareMixer-1 (_actor_loop)] pykka
okt 23 23:23:29 Desktop-Ubuntu mopidy[7481]:   Unregistered SoftwareMixer (urn:uuid:b289ca0a-8513-4cbc-acef-5a99839a9eda)
okt 23 23:23:29 Desktop-Ubuntu mopidy[7481]: DEBUG    2022-10-23 23:23:29,540 [7481:SoftwareMixer-1 (_actor_loop)] pykka
okt 23 23:23:29 Desktop-Ubuntu mopidy[7481]:   Stopping 1 instance(s) of SoftwareMixer
okt 23 23:23:29 Desktop-Ubuntu mopidy[7481]: DEBUG    2022-10-23 23:23:29,540 [7481:MainThread] mopidy.internal.process
okt 23 23:23:29 Desktop-Ubuntu mopidy[7481]:   Stopping Mopidy mixer
okt 23 23:23:29 Desktop-Ubuntu mopidy[7481]: INFO     2022-10-23 23:23:29,540 [7481:MainThread] mopidy.commands
okt 23 23:23:29 Desktop-Ubuntu mopidy[7481]:   Stopped Audio (urn:uuid:c5c5521d-23af-4681-97c5-5066e9d986b5)
okt 23 23:23:29 Desktop-Ubuntu mopidy[7481]: DEBUG    2022-10-23 23:23:29,539 [7481:Audio-2 (_actor_loop)] pykka
okt 23 23:23:29 Desktop-Ubuntu mopidy[7481]:   Unregistered Audio (urn:uuid:c5c5521d-23af-4681-97c5-5066e9d986b5)
okt 23 23:23:29 Desktop-Ubuntu mopidy[7481]: DEBUG    2022-10-23 23:23:29,539 [7481:Audio-2 (_actor_loop)] pykka
okt 23 23:23:29 Desktop-Ubuntu mopidy[7481]:   Stopping 1 instance(s) of Audio
okt 23 23:23:29 Desktop-Ubuntu mopidy[7481]: DEBUG    2022-10-23 23:23:29,539 [7481:MainThread] mopidy.internal.process
okt 23 23:23:29 Desktop-Ubuntu mopidy[7481]:   Stopping Mopidy audio
okt 23 23:23:29 Desktop-Ubuntu mopidy[7481]: INFO     2022-10-23 23:23:29,539 [7481:MainThread] mopidy.commands
okt 23 23:23:29 Desktop-Ubuntu mopidy[7481]:   Stopped StreamBackend (urn:uuid:98947922-7457-404b-9c12-f007c063e109)
okt 23 23:23:29 Desktop-Ubuntu mopidy[7481]: DEBUG    2022-10-23 23:23:29,539 [7481:StreamBackend-5 (_actor_loop)] pykka
okt 23 23:23:29 Desktop-Ubuntu mopidy[7481]:   Unregistered StreamBackend (urn:uuid:98947922-7457-404b-9c12-f007c063e109)
okt 23 23:23:29 Desktop-Ubuntu mopidy[7481]: DEBUG    2022-10-23 23:23:29,539 [7481:StreamBackend-5 (_actor_loop)] pykka
okt 23 23:23:29 Desktop-Ubuntu mopidy[7481]:   Stopping 1 instance(s) of StreamBackend
okt 23 23:23:29 Desktop-Ubuntu mopidy[7481]: DEBUG    2022-10-23 23:23:29,538 [7481:MainThread] mopidy.internal.process
okt 23 23:23:29 Desktop-Ubuntu mopidy[7481]:   Stopped M3UBackend (urn:uuid:ec2c3712-f19f-4f9e-8a4d-2e47046e81de)
okt 23 23:23:29 Desktop-Ubuntu mopidy[7481]: DEBUG    2022-10-23 23:23:29,538 [7481:M3UBackend-4 (_actor_loop)] pykka
okt 23 23:23:29 Desktop-Ubuntu mopidy[7481]:   Unregistered M3UBackend (urn:uuid:ec2c3712-f19f-4f9e-8a4d-2e47046e81de)
okt 23 23:23:29 Desktop-Ubuntu mopidy[7481]: DEBUG    2022-10-23 23:23:29,538 [7481:M3UBackend-4 (_actor_loop)] pykka
okt 23 23:23:29 Desktop-Ubuntu mopidy[7481]:   Stopping 1 instance(s) of M3UBackend
okt 23 23:23:29 Desktop-Ubuntu mopidy[7481]: DEBUG    2022-10-23 23:23:29,538 [7481:MainThread] mopidy.internal.process
okt 23 23:23:29 Desktop-Ubuntu mopidy[7481]:   Stopped FileBackend (urn:uuid:c9860275-5bef-4b2a-bf71-9cdcafda6e0b)
okt 23 23:23:29 Desktop-Ubuntu mopidy[7481]: DEBUG    2022-10-23 23:23:29,538 [7481:FileBackend-3 (_actor_loop)] pykka
okt 23 23:23:29 Desktop-Ubuntu mopidy[7481]:   Unregistered FileBackend (urn:uuid:c9860275-5bef-4b2a-bf71-9cdcafda6e0b)
okt 23 23:23:29 Desktop-Ubuntu mopidy[7481]: DEBUG    2022-10-23 23:23:29,538 [7481:FileBackend-3 (_actor_loop)] pykka
okt 23 23:23:29 Desktop-Ubuntu mopidy[7481]:   Stopping 1 instance(s) of FileBackend
okt 23 23:23:29 Desktop-Ubuntu mopidy[7481]: DEBUG    2022-10-23 23:23:29,537 [7481:MainThread] mopidy.internal.process
okt 23 23:23:29 Desktop-Ubuntu mopidy[7481]:   Stopping 0 instance(s) of YouTubeBackend
okt 23 23:23:29 Desktop-Ubuntu mopidy[7481]: DEBUG    2022-10-23 23:23:29,537 [7481:MainThread] mopidy.internal.process
okt 23 23:23:29 Desktop-Ubuntu mopidy[7481]:   Stopping Mopidy backends
okt 23 23:23:29 Desktop-Ubuntu mopidy[7481]: INFO     2022-10-23 23:23:29,537 [7481:MainThread] mopidy.commands
okt 23 23:23:29 Desktop-Ubuntu mopidy[7481]:   Stopped Core (urn:uuid:7cf166a9-3ed2-4de0-adda-0a6f17890cbb)
okt 23 23:23:29 Desktop-Ubuntu mopidy[7481]: DEBUG    2022-10-23 23:23:29,537 [7481:Core-6 (_actor_loop)] pykka
okt 23 23:23:29 Desktop-Ubuntu mopidy[7481]:   Unregistered Core (urn:uuid:7cf166a9-3ed2-4de0-adda-0a6f17890cbb)
okt 23 23:23:29 Desktop-Ubuntu mopidy[7481]: DEBUG    2022-10-23 23:23:29,537 [7481:Core-6 (_actor_loop)] pykka
okt 23 23:23:29 Desktop-Ubuntu mopidy[7481]:   Stopping 1 instance(s) of Core
okt 23 23:23:29 Desktop-Ubuntu mopidy[7481]: DEBUG    2022-10-23 23:23:29,537 [7481:MainThread] mopidy.internal.process
okt 23 23:23:29 Desktop-Ubuntu mopidy[7481]:   Stopped HTTP server
okt 23 23:23:29 Desktop-Ubuntu mopidy[7481]: DEBUG    2022-10-23 23:23:29,536 [7481:HttpServer] mopidy.http.actor
okt 23 23:23:29 Desktop-Ubuntu mopidy[7481]:   Stopping Mopidy core
okt 23 23:23:29 Desktop-Ubuntu mopidy[7481]: INFO     2022-10-23 23:23:29,536 [7481:MainThread] mopidy.commands
okt 23 23:23:29 Desktop-Ubuntu mopidy[7481]:   Stopping HTTP server
okt 23 23:23:29 Desktop-Ubuntu mopidy[7481]: DEBUG    2022-10-23 23:23:29,536 [7481:HttpFrontend-11 (_actor_loop)] mopidy.http.actor
okt 23 23:23:29 Desktop-Ubuntu mopidy[7481]:   Zeroconf service 'Mopidy HTTP server on Desktop-Ubuntu' (_mopidy-http._tcp at []:6680): Unpublished
okt 23 23:23:29 Desktop-Ubuntu mopidy[7481]: DEBUG    2022-10-23 23:23:29,536 [7481:HttpFrontend-11 (_actor_loop)] mopidy.zeroconf
okt 23 23:23:29 Desktop-Ubuntu mopidy[7481]:   Zeroconf service 'Mopidy HTTP server on Desktop-Ubuntu' (_http._tcp at []:6680): Unpublished
okt 23 23:23:29 Desktop-Ubuntu mopidy[7481]: DEBUG    2022-10-23 23:23:29,535 [7481:HttpFrontend-11 (_actor_loop)] mopidy.zeroconf
okt 23 23:23:29 Desktop-Ubuntu mopidy[7481]:   Stopped HttpFrontend (urn:uuid:5bd8ba1b-0f9b-4a76-9e7c-20233d1ca683)
okt 23 23:23:29 Desktop-Ubuntu mopidy[7481]: DEBUG    2022-10-23 23:23:29,534 [7481:HttpFrontend-11 (_actor_loop)] pykka
okt 23 23:23:29 Desktop-Ubuntu mopidy[7481]:   Unregistered HttpFrontend (urn:uuid:5bd8ba1b-0f9b-4a76-9e7c-20233d1ca683)
okt 23 23:23:29 Desktop-Ubuntu mopidy[7481]: DEBUG    2022-10-23 23:23:29,534 [7481:HttpFrontend-11 (_actor_loop)] pykka
okt 23 23:23:29 Desktop-Ubuntu mopidy[7481]:   Stopping 1 instance(s) of HttpFrontend
okt 23 23:23:29 Desktop-Ubuntu mopidy[7481]: DEBUG    2022-10-23 23:23:29,534 [7481:MainThread] mopidy.internal.process
okt 23 23:23:29 Desktop-Ubuntu mopidy[7481]:   Stopping Iris
okt 23 23:23:29 Desktop-Ubuntu mopidy[7481]: INFO     2022-10-23 23:23:29,534 [7481:IrisFrontend-9 (_actor_loop)] mopidy_iris.core
okt 23 23:23:29 Desktop-Ubuntu mopidy[7481]:   Stopped IrisFrontend (urn:uuid:f242df1c-4f92-4051-af90-25b13905b4f1)
okt 23 23:23:29 Desktop-Ubuntu mopidy[7481]: DEBUG    2022-10-23 23:23:29,534 [7481:IrisFrontend-9 (_actor_loop)] pykka
okt 23 23:23:29 Desktop-Ubuntu mopidy[7481]:   Unregistered IrisFrontend (urn:uuid:f242df1c-4f92-4051-af90-25b13905b4f1)
okt 23 23:23:29 Desktop-Ubuntu mopidy[7481]: DEBUG    2022-10-23 23:23:29,534 [7481:IrisFrontend-9 (_actor_loop)] pykka
okt 23 23:23:29 Desktop-Ubuntu mopidy[7481]:   Stopping 1 instance(s) of IrisFrontend
okt 23 23:23:29 Desktop-Ubuntu mopidy[7481]: DEBUG    2022-10-23 23:23:29,534 [7481:MainThread] mopidy.internal.process
okt 23 23:23:29 Desktop-Ubuntu mopidy[7481]:   Stopped YouTubeCoreListener (urn:uuid:c52d37b7-1dda-4304-86fa-409f044f0d41)
okt 23 23:23:29 Desktop-Ubuntu mopidy[7481]: DEBUG    2022-10-23 23:23:29,534 [7481:YouTubeCoreListener-8 (_actor_loop)] pykka
okt 23 23:23:29 Desktop-Ubuntu mopidy[7481]:   Unregistered YouTubeCoreListener (urn:uuid:c52d37b7-1dda-4304-86fa-409f044f0d41)
okt 23 23:23:29 Desktop-Ubuntu mopidy[7481]: DEBUG    2022-10-23 23:23:29,533 [7481:YouTubeCoreListener-8 (_actor_loop)] pykka
okt 23 23:23:29 Desktop-Ubuntu mopidy[7481]:   Stopping 1 instance(s) of YouTubeCoreListener
okt 23 23:23:29 Desktop-Ubuntu mopidy[7481]: DEBUG    2022-10-23 23:23:29,533 [7481:MainThread] mopidy.internal.process
okt 23 23:23:29 Desktop-Ubuntu mopidy[7481]:   Stopped YouTubeAutoplayer (urn:uuid:e8374f53-c66d-400d-8415-74610c666ac0)
okt 23 23:23:29 Desktop-Ubuntu mopidy[7481]: DEBUG    2022-10-23 23:23:29,533 [7481:YouTubeAutoplayer-7 (_actor_loop)] pykka
okt 23 23:23:29 Desktop-Ubuntu mopidy[7481]:   Unregistered YouTubeAutoplayer (urn:uuid:e8374f53-c66d-400d-8415-74610c666ac0)
okt 23 23:23:29 Desktop-Ubuntu mopidy[7481]: DEBUG    2022-10-23 23:23:29,533 [7481:YouTubeAutoplayer-7 (_actor_loop)] pykka
okt 23 23:23:29 Desktop-Ubuntu mopidy[7481]:   Stopping 1 instance(s) of YouTubeAutoplayer
okt 23 23:23:29 Desktop-Ubuntu mopidy[7481]: DEBUG    2022-10-23 23:23:29,533 [7481:MainThread] mopidy.internal.process
okt 23 23:23:29 Desktop-Ubuntu mopidy[7481]:   Stopping Mopidy frontends
okt 23 23:23:29 Desktop-Ubuntu mopidy[7481]: INFO     2022-10-23 23:23:29,533 [7481:MainThread] mopidy.commands
okt 23 23:23:29 Desktop-Ubuntu mopidy[7481]:   GLib mainloop got SIGTERM. Exiting...
okt 23 23:23:29 Desktop-Ubuntu mopidy[7481]: INFO     2022-10-23 23:23:29,532 [7481:MainThread] mopidy.commands
okt 23 23:23:29 Desktop-Ubuntu systemd[1]: Stopping Mopidy music server...
okt 23 23:23:18 Desktop-Ubuntu mopidy[7481]:   {'id': 166656019872627, 'jsonrpc': '2.0', 'method': 'get_version', 'result': {'version': {'current': '3.64.1', 'latest': '3.64.1', 'is_root': False, 'upgrade_available': False}}, 'recipient': 'V1YQ5WEW8KJW'}
okt 23 23:23:18 Desktop-Ubuntu mopidy[7481]: DEBUG    2022-10-23 23:23:18,856 [7481:HttpServer] mopidy_iris.core
okt 23 23:23:18 Desktop-Ubuntu mopidy[7481]:   Iris websocket message received: {"jsonrpc":"2.0","id":166656019872627,"method":"get_version"}
okt 23 23:23:18 Desktop-Ubuntu mopidy[7481]: DEBUG    2022-10-23 23:23:18,727 [7481:HttpServer] mopidy_iris.handlers
okt 23 23:23:18 Desktop-Ubuntu mopidy[7481]:   304 GET /iris/assets/favicon_paused.png (127.0.0.1) 0.67ms
okt 23 23:23:18 Desktop-Ubuntu mopidy[7481]: INFO     2022-10-23 23:23:18,502 [7481:HttpServer] tornado.access
okt 23 23:23:18 Desktop-Ubuntu mopidy[7481]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 11, "result": null}'
okt 23 23:23:18 Desktop-Ubuntu mopidy[7481]: DEBUG    2022-10-23 23:23:18,291 [7481:HttpServer] mopidy.http.handlers
okt 23 23:23:18 Desktop-Ubuntu mopidy[7481]:   Received WebSocket message from 127.0.0.1: '{"method":"core.playback.get_stream_title","params":{},"jsonrpc":"2.0","id":11}'
okt 23 23:23:18 Desktop-Ubuntu mopidy[7481]: DEBUG    2022-10-23 23:23:18,291 [7481:HttpServer] mopidy.http.handlers
okt 23 23:23:18 Desktop-Ubuntu mopidy[7481]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 10, "result": ["file", "http", "https", "m3u", "rtsp"]}'
okt 23 23:23:18 Desktop-Ubuntu mopidy[7481]: DEBUG    2022-10-23 23:23:18,290 [7481:HttpServer] mopidy.http.handlers
okt 23 23:23:18 Desktop-Ubuntu mopidy[7481]:   Received WebSocket message from 127.0.0.1: '{"method":"core.get_uri_schemes","params":{},"jsonrpc":"2.0","id":10}'
okt 23 23:23:18 Desktop-Ubuntu mopidy[7481]: DEBUG    2022-10-23 23:23:18,289 [7481:HttpServer] mopidy.http.handlers
okt 23 23:23:18 Desktop-Ubuntu mopidy[7481]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 9, "result": 0}'
okt 23 23:23:18 Desktop-Ubuntu mopidy[7481]: DEBUG    2022-10-23 23:23:18,288 [7481:HttpServer] mopidy.http.handlers
okt 23 23:23:18 Desktop-Ubuntu mopidy[7481]:   Received WebSocket message from 127.0.0.1: '{"method":"core.playback.get_time_position","params":{},"jsonrpc":"2.0","id":9}'
okt 23 23:23:18 Desktop-Ubuntu mopidy[7481]: DEBUG    2022-10-23 23:23:18,288 [7481:HttpServer] mopidy.http.handlers
okt 23 23:23:18 Desktop-Ubuntu mopidy[7481]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 8, "result": []}'
okt 23 23:23:18 Desktop-Ubuntu mopidy[7481]: DEBUG    2022-10-23 23:23:18,287 [7481:HttpServer] mopidy.http.handlers
okt 23 23:23:18 Desktop-Ubuntu mopidy[7481]:   Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_tl_tracks","params":{},"jsonrpc":"2.0","id":8}'
okt 23 23:23:18 Desktop-Ubuntu mopidy[7481]: DEBUG    2022-10-23 23:23:18,287 [7481:HttpServer] mopidy.http.handlers
okt 23 23:23:18 Desktop-Ubuntu mopidy[7481]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 7, "result": false}'
okt 23 23:23:18 Desktop-Ubuntu mopidy[7481]: DEBUG    2022-10-23 23:23:18,287 [7481:HttpServer] mopidy.http.handlers
okt 23 23:23:18 Desktop-Ubuntu mopidy[7481]:   Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_repeat","params":{},"jsonrpc":"2.0","id":7}'
okt 23 23:23:18 Desktop-Ubuntu mopidy[7481]: DEBUG    2022-10-23 23:23:18,287 [7481:HttpServer] mopidy.http.handlers
okt 23 23:23:18 Desktop-Ubuntu mopidy[7481]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 6, "result": false}'
okt 23 23:23:18 Desktop-Ubuntu mopidy[7481]: DEBUG    2022-10-23 23:23:18,285 [7481:HttpServer] mopidy.http.handlers
okt 23 23:23:18 Desktop-Ubuntu mopidy[7481]:   Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_random","params":{},"jsonrpc":"2.0","id":6}'
okt 23 23:23:18 Desktop-Ubuntu mopidy[7481]: DEBUG    2022-10-23 23:23:18,285 [7481:HttpServer] mopidy.http.handlers
okt 23 23:23:18 Desktop-Ubuntu mopidy[7481]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 5, "result": false}'
okt 23 23:23:18 Desktop-Ubuntu mopidy[7481]: DEBUG    2022-10-23 23:23:18,285 [7481:HttpServer] mopidy.http.handlers
okt 23 23:23:18 Desktop-Ubuntu mopidy[7481]:   Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_consume","params":{},"jsonrpc":"2.0","id":5}'
okt 23 23:23:18 Desktop-Ubuntu mopidy[7481]: DEBUG    2022-10-23 23:23:18,284 [7481:HttpServer] mopidy.http.handlers
okt 23 23:23:18 Desktop-Ubuntu mopidy[7481]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 4, "result": false}'
okt 23 23:23:18 Desktop-Ubuntu mopidy[7481]: DEBUG    2022-10-23 23:23:18,284 [7481:HttpServer] mopidy.http.handlers
okt 23 23:23:18 Desktop-Ubuntu mopidy[7481]:   Received WebSocket message from 127.0.0.1: '{"method":"core.mixer.get_mute","params":{},"jsonrpc":"2.0","id":4}'
okt 23 23:23:18 Desktop-Ubuntu mopidy[7481]: DEBUG    2022-10-23 23:23:18,284 [7481:HttpServer] mopidy.http.handlers
okt 23 23:23:18 Desktop-Ubuntu mopidy[7481]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 3, "result": 100}'
okt 23 23:23:18 Desktop-Ubuntu mopidy[7481]: DEBUG    2022-10-23 23:23:18,283 [7481:HttpServer] mopidy.http.handlers
okt 23 23:23:18 Desktop-Ubuntu mopidy[7481]:   Received WebSocket message from 127.0.0.1: '{"method":"core.mixer.get_volume","params":{},"jsonrpc":"2.0","id":3}'
okt 23 23:23:18 Desktop-Ubuntu mopidy[7481]: DEBUG    2022-10-23 23:23:18,282 [7481:HttpServer] mopidy.http.handlers
okt 23 23:23:18 Desktop-Ubuntu mopidy[7481]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 2, "result": "stopped"}'
okt 23 23:23:18 Desktop-Ubuntu mopidy[7481]: DEBUG    2022-10-23 23:23:18,282 [7481:HttpServer] mopidy.http.handlers
okt 23 23:23:18 Desktop-Ubuntu mopidy[7481]:   Received WebSocket message from 127.0.0.1: '{"method":"core.playback.get_state","params":{},"jsonrpc":"2.0","id":2}'
okt 23 23:23:18 Desktop-Ubuntu mopidy[7481]: DEBUG    2022-10-23 23:23:18,282 [7481:HttpServer] mopidy.http.handlers
okt 23 23:23:18 Desktop-Ubuntu mopidy[7481]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 1, "result": null}'
okt 23 23:23:18 Desktop-Ubuntu mopidy[7481]: DEBUG    2022-10-23 23:23:18,282 [7481:HttpServer] mopidy.http.handlers
okt 23 23:23:18 Desktop-Ubuntu mopidy[7481]:   Received WebSocket message from 127.0.0.1: '{"method":"core.playback.get_current_tl_track","params":{},"jsonrpc":"2.0","id":1}'
okt 23 23:23:18 Desktop-Ubuntu mopidy[7481]: DEBUG    2022-10-23 23:23:18,281 [7481:HttpServer] mopidy.http.handlers
okt 23 23:23:18 Desktop-Ubuntu mopidy[7481]:   {'id': 166656019822595, 'jsonrpc': '2.0', 'method': 'get_queue_metadata', 'result': {'queue_metadata': {}}, 'recipient': 'V1YQ5WEW8KJW'}
okt 23 23:23:18 Desktop-Ubuntu mopidy[7481]: DEBUG    2022-10-23 23:23:18,226 [7481:HttpServer] mopidy_iris.core
okt 23 23:23:18 Desktop-Ubuntu mopidy[7481]:   Iris websocket message received: {"jsonrpc":"2.0","id":166656019822595,"method":"get_queue_metadata"}
okt 23 23:23:18 Desktop-Ubuntu mopidy[7481]: DEBUG    2022-10-23 23:23:18,226 [7481:HttpServer] mopidy_iris.handlers
okt 23 23:23:18 Desktop-Ubuntu mopidy[7481]:   {'id': 166656019822495, 'jsonrpc': '2.0', 'method': 'get_pinned', 'result': {'pinned': []}, 'recipient': 'V1YQ5WEW8KJW'}
okt 23 23:23:18 Desktop-Ubuntu mopidy[7481]: DEBUG    2022-10-23 23:23:18,226 [7481:HttpServer] mopidy_iris.core
okt 23 23:23:18 Desktop-Ubuntu mopidy[7481]:   Iris websocket message received: {"jsonrpc":"2.0","id":166656019822495,"method":"get_pinned"}
okt 23 23:23:18 Desktop-Ubuntu mopidy[7481]: DEBUG    2022-10-23 23:23:18,225 [7481:HttpServer] mopidy_iris.handlers
okt 23 23:23:18 Desktop-Ubuntu mopidy[7481]:   {'id': 166656019822397, 'jsonrpc': '2.0', 'method': 'get_commands', 'result': {'commands': {}}, 'recipient': 'V1YQ5WEW8KJW'}
okt 23 23:23:18 Desktop-Ubuntu mopidy[7481]: DEBUG    2022-10-23 23:23:18,225 [7481:HttpServer] mopidy_iris.core
okt 23 23:23:18 Desktop-Ubuntu mopidy[7481]:   Iris websocket message received: {"jsonrpc":"2.0","id":166656019822397,"method":"get_commands"}
okt 23 23:23:18 Desktop-Ubuntu mopidy[7481]: DEBUG    2022-10-23 23:23:18,225 [7481:HttpServer] mopidy_iris.handlers
okt 23 23:23:18 Desktop-Ubuntu mopidy[7481]:   {'id': 166656019822315, 'jsonrpc': '2.0', 'method': 'get_radio', 'result': {'radio': {'enabled': 0, 'seed_artists': [], 'seed_genres': [], 'seed_tracks': [], 'results': []}}, 'recipient': 'V1YQ5WEW8KJW'}
okt 23 23:23:18 Desktop-Ubuntu mopidy[7481]: DEBUG    2022-10-23 23:23:18,225 [7481:HttpServer] mopidy_iris.core
okt 23 23:23:18 Desktop-Ubuntu mopidy[7481]:   Iris websocket message received: {"jsonrpc":"2.0","id":166656019822315,"method":"get_radio"}
okt 23 23:23:18 Desktop-Ubuntu mopidy[7481]: DEBUG    2022-10-23 23:23:18,225 [7481:HttpServer] mopidy_iris.handlers
okt 23 23:23:18 Desktop-Ubuntu mopidy[7481]:   {'id': 16665601982222, 'jsonrpc': '2.0', 'method': 'get_shared_config', 'result': {'shared_config': {}}, 'recipient': 'V1YQ5WEW8KJW'}
okt 23 23:23:18 Desktop-Ubuntu mopidy[7481]: DEBUG    2022-10-23 23:23:18,224 [7481:HttpServer] mopidy_iris.core
okt 23 23:23:18 Desktop-Ubuntu mopidy[7481]:   Iris websocket message received: {"jsonrpc":"2.0","id":16665601982222,"method":"get_shared_config"}
okt 23 23:23:18 Desktop-Ubuntu mopidy[7481]: DEBUG    2022-10-23 23:23:18,224 [7481:HttpServer] mopidy_iris.handlers
okt 23 23:23:18 Desktop-Ubuntu mopidy[7481]:   {'id': 166656019822123, 'jsonrpc': '2.0', 'method': 'get_config', 'result': {'config': {'is_root': False, 'spotify_username': False, 'country': 'NZ', 'locale': 'en_NZ', 'snapcast_enabled': True, 'snapcast_host': 'localhost', 'snapcast_port': '1780', 'snapcast_ssl': False, 'snapcast_stream': 'Default', 'spotify_authorization_url': 'https://jamesbarnsley.co.nz/iris/auth_spotify.php', 'lastfm_authorization_url': 'https://jamesbarnsley.co.nz/iris/auth_lastfm.php', 'genius_authorization_url': 'https://jamesbarnsley.co.nz/iris/auth_genius.php', 'shared_config': {}}}, 'recipient': 'V1YQ5WEW8KJW'}
okt 23 23:23:18 Desktop-Ubuntu mopidy[7481]: DEBUG    2022-10-23 23:23:18,224 [7481:HttpServer] mopidy_iris.core
okt 23 23:23:18 Desktop-Ubuntu mopidy[7481]:   Iris websocket message received: {"jsonrpc":"2.0","id":166656019822123,"method":"get_config"}
okt 23 23:23:18 Desktop-Ubuntu mopidy[7481]: DEBUG    2022-10-23 23:23:18,224 [7481:HttpServer] mopidy_iris.handlers
okt 23 23:23:18 Desktop-Ubuntu mopidy[7481]:   {'id': 16665601982208, 'jsonrpc': '2.0', 'method': 'update_connection', 'result': {'connection': {'connection_id': 'V1YQ5WEW8KJW', 'ip': '127.0.0.1', 'created': '2022-10-23 23:23:18', 'username': 166637467060576, 'client_id': 166637467060628}}, 'recipient': 'V1YQ5WEW8KJW'}
okt 23 23:23:18 Desktop-Ubuntu mopidy[7481]: DEBUG    2022-10-23 23:23:18,223 [7481:HttpServer] mopidy_iris.core
okt 23 23:23:18 Desktop-Ubuntu mopidy[7481]:   {'method': 'connection_changed', 'params': {'connection': {'connection_id': 'V1YQ5WEW8KJW', 'ip': '127.0.0.1', 'created': '2022-10-23 23:23:18', 'username': 166637467060576, 'client_id': 166637467060628}}}
okt 23 23:23:18 Desktop-Ubuntu mopidy[7481]: DEBUG    2022-10-23 23:23:18,223 [7481:HttpServer] mopidy_iris.core
okt 23 23:23:18 Desktop-Ubuntu mopidy[7481]:   Iris websocket message received: {"jsonrpc":"2.0","id":16665601982208,"method":"update_connection","params":{"username":166637467060576,"client_id":166637467060628}}
okt 23 23:23:18 Desktop-Ubuntu mopidy[7481]: DEBUG    2022-10-23 23:23:18,223 [7481:HttpServer] mopidy_iris.handlers
okt 23 23:23:18 Desktop-Ubuntu mopidy[7481]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 0, "result": {"core.get_uri_schemes": {"description": "Get list of URI schemes we can handle", "params": []}, "core.get_version": {"description": "Get version of the Mopidy core API", "params": []}, "core.history.get_history": {"description": "Get the track history.\\n\\nThe timestamps are milliseconds since epoch.\\n\\n:returns: the track history\\n:rtype: list of (timestamp, :class:`mopidy.models.Ref`) tuples", "params": []}, "core.history.get_length": {"description": "Get the number of tracks in the history.\\n\\n:returns: the history length\\n:rtype: int", "params": []}, "core.library.browse": {"description": "Browse directories and tracks at the given ``uri``.\\n\\n``uri`` is a string which represents some directory belonging to a\\nbackend. To get the intial root directories for backends pass\\n:class:`None` as the URI.\\n\\nReturns a list of :class:`mopidy.models.Ref` objects for the\\ndirectories and tracks at the given ``uri``.\\n\\nThe :class:`~mopidy.models.Ref` objects representing tracks keep the\\ntrack\'s original URI. A matching pair of objects can look like this::\\n\\n    Track(uri=\'dummy:/foo.mp3\', name=\'foo\', artists=..., album=...)\\n    Ref.track(uri=\'dummy:/foo.mp3\', name=\'foo\')\\n\\nThe :class:`~mopidy.models.Ref` objects representing directories have\\nbackend specific URIs. These are opaque values, so no one but the\\nbackend that created them should try and derive any meaning from them.\\nThe only valid exception to this is checking the scheme, as it is used\\nto route browse requests to the correct backend.\\n\\nFor example, the dummy library\'s ``/bar`` directory could be returned\\nlike this::\\n\\n    Ref.directory(uri=\'dummy:directory:/bar\', name=\'bar\')\\n\\n:param string uri: URI to browse\\n:rtype: list of :class:`mopidy.models.Ref`\\n\\n.. versionadded:: 0.18", "params": [{"name": "uri"}]}, "core.library.get_distinct": {"description": "List distinct values for a given field from the library.\\n\\nThis has mainly been added to support the list commands the MPD\\nprotocol supports in a more sane fashion. Other frontends are not\\nrecommended to use this method.\\n\\n:param string field: Any one of ``uri``, ``track_name``, ``album``,\\n    ``artist``, ``albumartist``, ``composer``, ``performer``,\\n    ``track_no``, ``genre``, ``date``, ``comment``, ``disc_no``,\\n    ``musicbrainz_albumid``, ``musicbrainz_artistid``, or\\n    ``musicbrainz_trackid``.\\n:param dict query: Query to use for limiting results, see\\n    :meth:`search` for details about the query format.\\n:rtype: set of values corresponding to the requested field type.\\n\\n.. versionadded:: 1.0", "params": [{"name": "field"}, {"name": "query", "default": null}]}, "core.library.get_images": {"description": "Lookup the images for the given URIs\\n\\nBackends can use this to return image URIs for any URI they know about\\nbe it tracks, albums, playlists. The lookup result is a dictionary\\nmapping the provided URIs to lists of images.\\n\\nUnknown URIs or URIs the corresponding backend couldn\'t find anything\\nfor will simply return an empty list for that URI.\\n\\n:param uris: list of URIs to find images for\\n:type uris: list of string\\n:rtype: {uri: tuple of :class:`mopidy.models.Image`}\\n\\n.. versionadded:: 1.0", "params": [{"name": "uris"}]}, "core.library.lookup": {"description": "Lookup the given URIs.\\n\\nIf the URI expands to multiple tracks, the returned list will contain\\nthem all.\\n\\n:param uris: track URIs\\n:type uris: list of string\\n:rtype: {uri: list of :class:`mopidy.models.Track`}", "params": [{"name": "uris"}]}, "core.library.refresh": {"description": "Refresh library. Limit to URI and below if an URI is given.\\n\\n:param uri: directory or track URI\\n:type uri: string", "params": [{"name": "uri", "default": null}]}, "core.library.search": {"description": "Search the library for tracks where ``field`` contains ``values``.\\n\\n``field`` can be one of ``uri``, ``track_name``, ``album``, ``artist``,\\n``albumartist``, ``composer``, ``performer``, ``track_no``, ``genre``,\\n``date``, ``comment``, ``disc_no``, ``musicbrainz_albumid``,\\n``musicbrainz_artistid``, ``musicbrainz_trackid`` or ``any``.\\n\\nIf ``uris`` is given, the search is limited to results from within the\\nURI roots. For example passing ``uris=[\'file:\']`` will limit the search\\nto the local backend.\\n\\nExamples::\\n\\n    # Returns results matching \'a\' in any backend\\n    search({\'any\': [\'a\']})\\n\\n    # Returns results matching artist \'xyz\' in any backend\\n    search({\'artist\': [\'xyz\']})\\n\\n    # Returns results matching \'a\' and \'b\' and artist \'xyz\' in any\\n    # backend\\n    search({\'any\': [\'a\', \'b\'], \'artist\': [\'xyz\']})\\n\\n    # Returns results matching \'a\' if within the given URI roots\\n    # \\"file:///media/music\\" and \\"spotify:\\"\\n    search({\'any\': [\'a\']}, uris=[\'file:///media/music\', \'spotify:\'])\\n\\n    # Returns results matching artist \'xyz\' and \'abc\' in any backend\\n    search({\'artist\': [\'xyz\', \'abc\']})\\n\\n:param query: one or more queries to search for\\n:type query: dict\\n:param uris: zero or more URI roots to limit the search to\\n:type uris: list of string or :class:`None`\\n:param exact: if the search should use exact matching\\n:type exact: :class:`bool`\\n:rtype: list of :class:`mopidy.models.SearchResult`\\n\\n.. versionadded:: 1.0\\n    The ``exact`` keyword argument.", "params": [{"name": "query"}, {"name": "uris", "default": null}, {"name": "exact", "default": false}]}, "core.mixer.get_mute": {"description": "Get mute state.\\n\\n:class:`True` if muted, :class:`False` unmuted, :class:`None` if\\nunknown.", "params": []}, "core.mixer.get_volume": {"description": "Get the volume.\\n\\nInteger in range [0..100] or :class:`None` if unknown.\\n\\nThe volume scale is linear.", "params": []}, "core.mixer.set_mute": {"description": "Set mute state.\\n\\n:class:`True` to mute, :class:`False` to unmute.\\n\\nReturns :class:`True` if call is successful, otherwise :class:`False`.", "params": [{"name": "mute"}]}, "core.mixer.set_volume": {"description": "Set the volume.\\n\\nThe volume is defined as an integer in range [0..100].\\n\\nThe volume scale is linear.\\n\\nReturns :class:`True` if call is successful, otherwise :class:`False`.", "params": [{"name": "volume"}]}, "core.playback.get_current_tl_track": {"description": "Get the currently playing or selected track.\\n\\nReturns a :class:`mopidy.models.TlTrack` or :class:`None`.", "params": []}, "core.playback.get_current_tlid": {"description": "Get the currently playing or selected TLID.\\n\\nExtracted from :meth:`get_current_tl_track` for convenience.\\n\\nReturns a :class:`int` or :class:`None`.\\n\\n.. versionadded:: 1.1", "params": []}, "core.playback.get_current_track": {"description": "Get the currently playing or selected track.\\n\\nExtracted from :meth:`get_current_tl_track` for convenience.\\n\\nReturns a :class:`mopidy.models.Track` or :class:`None`.", "params": []}, "core.playback.get_state": {"description": "Get The playback state.", "params": []}, "core.playback.get_stream_title": {"description": "Get the current stream title or :class:`None`.", "params": []}, "core.playback.get_time_position": {"description": "Get time position in milliseconds.", "params": []}, "core.playback.next": {"description": "Change to the next track.\\n\\nThe current playback state will be kept. If it was playing, playing\\nwill continue. If it was paused, it will still be paused, etc.", "params": []}, "core.playback.pause": {"description": "Pause playback.", "params": []}, "core.playback.play": {"description": "Play the given track, or if the given tl_track and tlid is\\n:class:`None`, play the currently active track.\\n\\nNote that the track **must** already be in the tracklist.\\n\\n.. deprecated:: 3.0\\n    The ``tl_track`` argument. Use ``tlid`` instead.\\n\\n:param tl_track: track to play\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:param tlid: TLID of the track to play\\n:type tlid: :class:`int` or :class:`None`", "params": [{"name": "tl_track", "default": null}, {"name": "tlid", "default": null}]}, "core.playback.previous": {"description": "Change to the previous track.\\n\\nThe current playback state will be kept. If it was playing, playing\\nwill continue. If it was paused, it will still be paused, etc.", "params": []}, "core.playback.resume": {"description": "If paused, resume playing the current track.", "params": []}, "core.playback.seek": {"description": "Seeks to time position given in milliseconds.\\n\\n:param time_position: time position in milliseconds\\n:type time_position: int\\n:rtype: :class:`True` if successful, else :class:`False`", "params": [{"name": "time_position"}]}, "core.playback.set_state": {"description": "Set the playback state.\\n\\nMust be :attr:`PLAYING`, :attr:`PAUSED`, or :attr:`STOPPED`.\\n\\nPossible states and transitions:\\n\\n.. digraph:: state_transitions\\n\\n    \\"STOPPED\\" -> \\"PLAYING\\" [ label=\\"play\\" ]\\n    \\"STOPPED\\" -> \\"PAUSED\\" [ label=\\"pause\\" ]\\n    \\"PLAYING\\" -> \\"STOPPED\\" [ label=\\"stop\\" ]\\n    \\"PLAYING\\" -> \\"PAUSED\\" [ label=\\"pause\\" ]\\n    \\"PLAYING\\" -> \\"PLAYING\\" [ label=\\"play\\" ]\\n    \\"PAUSED\\" -> \\"PLAYING\\" [ label=\\"resume\\" ]\\n    \\"PAUSED\\" -> \\"STOPPED\\" [ label=\\"stop\\" ]", "params": [{"name": "new_state"}]}, "core.playback.stop": {"description": "Stop playing.", "params": []}, "core.playlists.as_list": {"description": "Get a list of the currently available playlists.\\n\\nReturns a list of :class:`~mopidy.models.Ref` objects referring to the\\nplaylists. In other words, no information about the playlists\' content\\nis given.\\n\\n:rtype: list of :class:`mopidy.models.Ref`\\n\\n.. versionadded:: 1.0", "params": []}, "core.playlists.create": {"description": "Create a new playlist.\\n\\nIf ``uri_scheme`` matches an URI scheme handled by a current backend,\\nthat backend is asked to create the playlist. If ``uri_scheme`` is\\n:class:`None` or doesn\'t match a current backend, the first backend is\\nasked to create the playlist.\\n\\nAll new playlists must be created by calling this method, and **not**\\nby creating new instances of :class:`mopidy.models.Playlist`.\\n\\n:param name: name of the new playlist\\n:type name: string\\n:param uri_scheme: use the backend matching the URI scheme\\n:type uri_scheme: string\\n:rtype: :class:`mopidy.models.Playlist` or :class:`None`", "params": [{"name": "name"}, {"name": "uri_scheme", "default": null}]}, "core.playlists.delete": {"description": "Delete playlist identified by the URI.\\n\\nIf the URI doesn\'t match the URI schemes handled by the current\\nbackends, nothing happens.\\n\\nReturns :class:`True` if deleted, :class:`False` otherwise.\\n\\n:param uri: URI of the playlist to delete\\n:type uri: string\\n:rtype: :class:`bool`\\n\\n.. versionchanged:: 2.2\\n    Return type defined.", "params": [{"name": "uri"}]}, "core.playlists.get_items": {"description": "Get the items in a playlist specified by ``uri``.\\n\\nReturns a list of :class:`~mopidy.models.Ref` objects referring to the\\nplaylist\'s items.\\n\\nIf a playlist with the given ``uri`` doesn\'t exist, it returns\\n:class:`None`.\\n\\n:rtype: list of :class:`mopidy.models.Ref`, or :class:`None`\\n\\n.. versionadded:: 1.0", "params": [{"name": "uri"}]}, "core.playlists.get_uri_schemes": {"description": "Get the list of URI schemes that support playlists.\\n\\n:rtype: list of string\\n\\n.. versionadded:: 2.0", "params": []}, "core.playlists.lookup": {"description": "Lookup playlist with given URI in both the set of playlists and in any\\nother playlist sources. Returns :class:`None` if not found.\\n\\n:param uri: playlist URI\\n:type uri: string\\n:rtype: :class:`mopidy.models.Playlist` or :class:`None`", "params": [{"name": "uri"}]}, "core.playlists.refresh": {"description": "Refresh the playlists in :attr:`playlists`.\\n\\nIf ``uri_scheme`` is :class:`None`, all backends are asked to refresh.\\nIf ``uri_scheme`` is an URI scheme handled by a backend, only that\\nbackend is asked to refresh. If ``uri_scheme`` doesn\'t match any\\ncurrent backend, nothing happens.\\n\\n:param uri_scheme: limit to the backend matching the URI scheme\\n:type uri_scheme: string", "params": [{"name": "uri_scheme", "default": null}]}, "core.playlists.save": {"description": "Save the playlist.\\n\\nFor a playlist to be saveable, it must have the ``uri`` attribute set.\\nYou must not set the ``uri`` atribute yourself, but use playlist\\nobjects returned by :meth:`create` or retrieved from :attr:`playlists`,\\nwhich will always give you saveable playlists.\\n\\nThe method returns the saved playlist. The return playlist may differ\\nfrom the saved playlist. E.g. if the playlist name was changed, the\\nreturned playlist may have a different URI. The caller of this method\\nmust throw away the playlist sent to this method, and use the\\nreturned playlist instead.\\n\\nIf the playlist\'s URI isn\'t set or doesn\'t match the URI scheme of a\\ncurrent backend, nothing is done and :class:`None` is returned.\\n\\n:param playlist: the playlist\\n:type playlist: :class:`mopidy.models.Playlist`\\n:rtype: :class:`mopidy.models.Playlist` or :class:`None`", "params": [{"name": "playlist"}]}, "core.tracklist.add": {"description": "Add tracks to the tracklist.\\n\\nIf ``uris`` is given instead of ``tracks``, the URIs are\\nlooked up in the library and the resulting tracks are added to the\\ntracklist.\\n\\nIf ``at_position`` is given, the tracks are inserted at the given\\nposition in the tracklist. If ``at_position`` is not given, the tracks\\nare appended to the end of the tracklist.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.\\n\\n:param tracks: tracks to add\\n:type tracks: list of :class:`mopidy.models.Track` or :class:`None`\\n:param at_position: position in tracklist to add tracks\\n:type at_position: int or :class:`None`\\n:param uris: list of URIs for tracks to add\\n:type uris: list of string or :class:`None`\\n:rtype: list of :class:`mopidy.models.TlTrack`\\n\\n.. versionadded:: 1.0\\n    The ``uris`` argument.\\n\\n.. deprecated:: 1.0\\n    The ``tracks`` argument. Use ``uris``.", "params": [{"name": "tracks", "default": null}, {"name": "at_position", "default": null}, {"name": "uris", "default": null}]}, "core.tracklist.clear": {"description": "Clear the tracklist.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.", "params": []}, "core.tracklist.eot_track": {"description": "The track that will be played after the given track.\\n\\nNot necessarily the same track as :meth:`next_track`.\\n\\n.. deprecated:: 3.0\\n    Use :meth:`get_eot_tlid` instead.\\n\\n:param tl_track: the reference track\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:rtype: :class:`mopidy.models.TlTrack` or :class:`None`", "params": [{"name": "tl_track"}]}, "core.tracklist.filter": {"description": "Filter the tracklist by the given criteria.\\n\\nEach rule in the criteria consists of a model field and a list of\\nvalues to compare it against. If the model field matches any of the\\nvalues, it may be returned.\\n\\nOnly tracks that match all the given criteria are returned.\\n\\nExamples::\\n\\n    # Returns tracks with TLIDs 1, 2, 3, or 4 (tracklist ID)\\n    filter({\'tlid\': [1, 2, 3, 4]})\\n\\n    # Returns track with URIs \'xyz\' or \'abc\'\\n    filter({\'uri\': [\'xyz\', \'abc\']})\\n\\n    # Returns track with a matching TLIDs (1, 3 or 6) and a\\n    # matching URI (\'xyz\' or \'abc\')\\n    filter({\'tlid\': [1, 3, 6], \'uri\': [\'xyz\', \'abc\']})\\n\\n:param criteria: one or more rules to match by\\n:type criteria: dict, of (string, list) pairs\\n:rtype: list of :class:`mopidy.models.TlTrack`", "params": [{"name": "criteria"}]}, "core.tracklist.get_consume": {"description": "Get consume mode.\\n\\n:class:`True`\\n    Tracks are removed from the tracklist when they have been played.\\n:class:`False`\\n    Tracks are not removed from the tracklist.", "params": []}, "core.tracklist.get_eot_tlid": {"description": "The TLID of the track that will be played after the current track.\\n\\nNot necessarily the same TLID as returned by :meth:`get_next_tlid`.\\n\\n:rtype: :class:`int` or :class:`None`\\n\\n.. versionadded:: 1.1", "params": []}, "core.tracklist.get_length": {"description": "Get length of the tracklist.", "params": []}, "core.tracklist.get_next_tlid": {"description": "The tlid of the track that will be played if calling\\n:meth:`mopidy.core.PlaybackController.next()`.\\n\\nFor normal playback this is the next track in the tracklist. If repeat\\nis enabled the next track can loop around the tracklist. When random is\\nenabled this should be a random track, all tracks should be played once\\nbefore the tracklist repeats.\\n\\n:rtype: :class:`int` or :class:`None`\\n\\n.. versionadded:: 1.1", "params": []}, "core.tracklist.get_previous_tlid": {"description": "Returns the TLID of the track that will be played if calling\\n:meth:`mopidy.core.PlaybackController.previous()`.\\n\\nFor normal playback this is the previous track in the tracklist. If\\nrandom and/or consume is enabled it should return the current track\\ninstead.\\n\\n:rtype: :class:`int` or :class:`None`\\n\\n.. versionadded:: 1.1", "params": []}, "core.tracklist.get_random": {"description": "Get random mode.\\n\\n:class:`True`\\n    Tracks are selected at random from the tracklist.\\n:class:`False`\\n    Tracks are played in the order of the tracklist.", "params": []}, "core.tracklist.get_repeat": {"description": "Get repeat mode.\\n\\n:class:`True`\\n    The tracklist is played repeatedly.\\n:class:`False`\\n    The tracklist is played once.", "params": []}, "core.tracklist.get_single": {"description": "Get single mode.\\n\\n:class:`True`\\n    Playback is stopped after current song, unless in ``repeat`` mode.\\n:class:`False`\\n    Playback continues after current song.", "params": []}, "core.tracklist.get_tl_tracks": {"description": "Get tracklist as list of :class:`mopidy.models.TlTrack`.", "params": []}, "core.tracklist.get_tracks": {"description": "Get tracklist as list of :class:`mopidy.models.Track`.", "params": []}, "core.tracklist.get_version": {"description": "Get the tracklist version.\\n\\nInteger which is increased every time the tracklist is changed. Is not\\nreset before Mopidy is restarted.", "params": []}, "core.tracklist.index": {"description": "The position of the given track in the tracklist.\\n\\nIf neither *tl_track* or *tlid* is given we return the index of\\nthe currently playing track.\\n\\n:param tl_track: the track to find the index of\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:param tlid: TLID of the track to find the index of\\n:type tlid: :class:`int` or :class:`None`\\n:rtype: :class:`int` or :class:`None`\\n\\n.. versionadded:: 1.1\\n    The *tlid* parameter", "params": [{"name": "tl_track", "default": null}, {"name": "tlid", "default": null}]}, "core.tracklist.move": {"description": "Move the tracks in the slice ``[start:end]`` to ``to_position``.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.\\n\\n:param start: position of first track to move\\n:type start: int\\n:param end: position after last track to move\\n:type end: int\\n:param to_position: new position for the tracks\\n:type to_position: int", "params": [{"name": "start"}, {"name": "end"}, {"name": "to_position"}]}, "core.tracklist.next_track": {"description": "The track that will be played if calling\\n:meth:`mopidy.core.PlaybackController.next()`.\\n\\nFor normal playback this is the next track in the tracklist. If repeat\\nis enabled the next track can loop around the tracklist. When random is\\nenabled this should be a random track, all tracks should be played once\\nbefore the tracklist repeats.\\n\\n.. deprecated:: 3.0\\n    Use :meth:`get_next_tlid` instead.\\n\\n:param tl_track: the reference track\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:rtype: :class:`mopidy.models.TlTrack` or :class:`None`", "params": [{"name": "tl_track"}]}, "core.tracklist.previous_track": {"description": "Returns the track that will be played if calling\\n:meth:`mopidy.core.PlaybackController.previous()`.\\n\\nFor normal playback this is the previous track in the tracklist. If\\nrandom and/or consume is enabled it should return the current track\\ninstead.\\n\\n.. deprecated:: 3.0\\n    Use :meth:`get_previous_tlid` instead.\\n\\n:param tl_track: the reference track\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:rtype: :class:`mopidy.models.TlTrack` or :class:`None`", "params": [{"name": "tl_track"}]}, "core.tracklist.remove": {"description": "Remove the matching tracks from the tracklist.\\n\\nUses :meth:`filter()` to lookup the tracks to remove.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.\\n\\n:param criteria: one or more rules to match by\\n:type criteria: dict, of (string, list) pairs\\n:rtype: list of :class:`mopidy.models.TlTrack` that were removed", "params": [{"name": "criteria"}]}, "core.tracklist.set_consume": {"description": "Set consume mode.\\n\\n:class:`True`\\n    Tracks are removed from the tracklist when they have been played.\\n:class:`False`\\n    Tracks are not removed from the tracklist.", "params": [{"name": "value"}]}, "core.tracklist.set_random": {"description": "Set random mode.\\n\\n:class:`True`\\n    Tracks are selected at random from the tracklist.\\n:class:`False`\\n    Tracks are played in the order of the tracklist.", "params": [{"name": "value"}]}, "core.tracklist.set_repeat": {"description": "Set repeat mode.\\n\\nTo repeat a single track, set both ``repeat`` and ``single``.\\n\\n:class:`True`\\n    The tracklist is played repeatedly.\\n:class:`False`\\n    The tracklist is played once.", "params": [{"name": "value"}]}, "core.tracklist.set_single": {"description": "Set single mode.\\n\\n:class:`True`\\n    Playback is stopped after current song, unless in ``repeat`` mode.\\n:class:`False`\\n    Playback continues after current song.", "params": [{"name": "value"}]}, "core.tracklist.shuffle": {"description": "Shuffles the entire tracklist. If ``start`` and ``end`` is given only\\nshuffles the slice ``[start:end]``.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.\\n\\n:param start: position of first track to shuffle\\n:type start: int or :class:`None`\\n:param end: position after last track to shuffle\\n:type end: int or :class:`None`", "params": [{"name": "start", "default": null}, {"name": "end", "default": null}]}, "core.tracklist.slice": {"description": "Returns a slice of the tracklist, limited by the given start and end\\npositions.\\n\\n:param start: position of first track to include in slice\\n:type start: int\\n:param end: position after last track to include in slice\\n:type end: int\\n:rtype: :class:`mopidy.models.TlTrack`", "params": [{"name": "start"}, {"name": "end"}]}}}'
okt 23 23:23:18 Desktop-Ubuntu mopidy[7481]: DEBUG    2022-10-23 23:23:18,222 [7481:HttpServer] mopidy.http.handlers
okt 23 23:23:18 Desktop-Ubuntu mopidy[7481]:   Received WebSocket message from 127.0.0.1: '{"method":"core.describe","jsonrpc":"2.0","id":0}'
okt 23 23:23:18 Desktop-Ubuntu mopidy[7481]: DEBUG    2022-10-23 23:23:18,218 [7481:HttpServer] mopidy.http.handlers
okt 23 23:23:18 Desktop-Ubuntu mopidy[7481]:   {'method': 'connection_added', 'params': {'connection': {'connection_id': 'V1YQ5WEW8KJW', 'ip': '127.0.0.1', 'created': '2022-10-23 23:23:18'}}}
okt 23 23:23:18 Desktop-Ubuntu mopidy[7481]: DEBUG    2022-10-23 23:23:18,162 [7481:HttpServer] mopidy_iris.core
okt 23 23:23:18 Desktop-Ubuntu mopidy[7481]:   <mopidy_iris.handlers.WebsocketHandler object at 0x7fb530769e40>
okt 23 23:23:18 Desktop-Ubuntu mopidy[7481]: DEBUG    2022-10-23 23:23:18,162 [7481:HttpServer] mopidy_iris.core
okt 23 23:23:18 Desktop-Ubuntu mopidy[7481]:   Connection added
okt 23 23:23:18 Desktop-Ubuntu mopidy[7481]: DEBUG    2022-10-23 23:23:18,162 [7481:HttpServer] mopidy_iris.core
okt 23 23:23:18 Desktop-Ubuntu mopidy[7481]:   101 GET /iris/ws/ (127.0.0.1) 0.50ms
okt 23 23:23:18 Desktop-Ubuntu mopidy[7481]: INFO     2022-10-23 23:23:18,161 [7481:HttpServer] tornado.access
okt 23 23:23:18 Desktop-Ubuntu mopidy[7481]:   New WebSocket connection from 127.0.0.1
okt 23 23:23:18 Desktop-Ubuntu mopidy[7481]: DEBUG    2022-10-23 23:23:18,150 [7481:HttpServer] mopidy.http.handlers
okt 23 23:23:18 Desktop-Ubuntu mopidy[7481]:   101 GET /mopidy/ws/ (127.0.0.1) 0.59ms
okt 23 23:23:18 Desktop-Ubuntu mopidy[7481]: INFO     2022-10-23 23:23:18,149 [7481:HttpServer] tornado.access
okt 23 23:23:18 Desktop-Ubuntu mopidy[7481]:   304 GET /iris/assets/app-icon_192.png (127.0.0.1) 0.68ms
okt 23 23:23:18 Desktop-Ubuntu mopidy[7481]: INFO     2022-10-23 23:23:18,096 [7481:HttpServer] tornado.access
okt 23 23:23:17 Desktop-Ubuntu mopidy[7481]:   304 GET /iris/manifest.json (127.0.0.1) 0.48ms
okt 23 23:23:17 Desktop-Ubuntu mopidy[7481]: INFO     2022-10-23 23:23:17,980 [7481:HttpServer] tornado.access
okt 23 23:23:17 Desktop-Ubuntu mopidy[7481]:   200 GET /iris/assets/favicon.png (127.0.0.1) 0.74ms
okt 23 23:23:17 Desktop-Ubuntu mopidy[7481]: INFO     2022-10-23 23:23:17,978 [7481:HttpServer] tornado.access
okt 23 23:23:17 Desktop-Ubuntu mopidy[7481]:   200 GET /iris/playlist/bTN1OkV4YW1wbGUlMjBQbGF5bGlzdC5tM3U4/null (127.0.0.1) 0.68ms
okt 23 23:23:17 Desktop-Ubuntu mopidy[7481]: INFO     2022-10-23 23:23:17,849 [7481:HttpServer] tornado.access
okt 23 23:23:17 Desktop-Ubuntu mopidy[7481]:   200 GET /iris/app.min.js?v=1666559547 (127.0.0.1) 11.11ms
okt 23 23:23:17 Desktop-Ubuntu mopidy[7481]: INFO     2022-10-23 23:23:17,100 [7481:HttpServer] tornado.access
okt 23 23:23:17 Desktop-Ubuntu mopidy[7481]:   200 GET /iris/app.min.css?v=1666559547 (127.0.0.1) 5.33ms
okt 23 23:23:17 Desktop-Ubuntu mopidy[7481]: INFO     2022-10-23 23:23:17,089 [7481:HttpServer] tornado.access
okt 23 23:23:16 Desktop-Ubuntu mopidy[7481]:   200 GET /iris/assets/app-icon.svg (127.0.0.1) 0.71ms
okt 23 23:23:16 Desktop-Ubuntu mopidy[7481]: INFO     2022-10-23 23:23:16,892 [7481:HttpServer] tornado.access
okt 23 23:23:16 Desktop-Ubuntu mopidy[7481]:   Closed WebSocket connection from 127.0.0.1
okt 23 23:23:16 Desktop-Ubuntu mopidy[7481]: DEBUG    2022-10-23 23:23:16,851 [7481:HttpServer] mopidy.http.handlers
okt 23 23:23:16 Desktop-Ubuntu mopidy[7481]:   {'method': 'connection_removed', 'params': {'connection': {'connection_id': '8XR75EFJ5CQP', 'ip': '127.0.0.1', 'created': '2022-10-23 23:22:12', 'username': 166637467060576, 'client_id': 166637467060628}}}
okt 23 23:23:16 Desktop-Ubuntu mopidy[7481]: DEBUG    2022-10-23 23:23:16,850 [7481:HttpServer] mopidy_iris.core
okt 23 23:23:16 Desktop-Ubuntu mopidy[7481]:   200 GET /iris/playlist/bTN1OkV4YW1wbGUlMjBQbGF5bGlzdC5tM3U4/Example%20Playlist (127.0.0.1) 1.00ms
okt 23 23:23:16 Desktop-Ubuntu mopidy[7481]: INFO     2022-10-23 23:23:16,835 [7481:HttpServer] tornado.access
okt 23 23:23:16 Desktop-Ubuntu mopidy[7481]:   304 GET /iris/assets/silence.mp3 (127.0.0.1) 5.69ms
okt 23 23:23:16 Desktop-Ubuntu mopidy[7481]: INFO     2022-10-23 23:23:16,335 [7481:HttpServer] tornado.access
okt 23 23:22:16 Desktop-Ubuntu mopidy[7481]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 23, "result": null}'
okt 23 23:22:16 Desktop-Ubuntu mopidy[7481]: DEBUG    2022-10-23 23:22:16,203 [7481:HttpServer] mopidy.http.handlers
okt 23 23:22:16 Desktop-Ubuntu mopidy[7481]:   Received WebSocket message from 127.0.0.1: '{"method":"core.playback.get_stream_title","params":{},"jsonrpc":"2.0","id":23}'
okt 23 23:22:16 Desktop-Ubuntu mopidy[7481]: DEBUG    2022-10-23 23:22:16,202 [7481:HttpServer] mopidy.http.handlers
okt 23 23:22:16 Desktop-Ubuntu mopidy[7481]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 22, "result": ["file", "http", "https", "m3u", "rtsp"]}'
okt 23 23:22:16 Desktop-Ubuntu mopidy[7481]: DEBUG    2022-10-23 23:22:16,202 [7481:HttpServer] mopidy.http.handlers
okt 23 23:22:16 Desktop-Ubuntu mopidy[7481]:   Received WebSocket message from 127.0.0.1: '{"method":"core.get_uri_schemes","params":{},"jsonrpc":"2.0","id":22}'
okt 23 23:22:16 Desktop-Ubuntu mopidy[7481]: DEBUG    2022-10-23 23:22:16,201 [7481:HttpServer] mopidy.http.handlers
okt 23 23:22:16 Desktop-Ubuntu mopidy[7481]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 21, "result": 0}'
okt 23 23:22:16 Desktop-Ubuntu mopidy[7481]: DEBUG    2022-10-23 23:22:16,201 [7481:HttpServer] mopidy.http.handlers
okt 23 23:22:16 Desktop-Ubuntu mopidy[7481]:   Received WebSocket message from 127.0.0.1: '{"method":"core.playback.get_time_position","params":{},"jsonrpc":"2.0","id":21}'
okt 23 23:22:16 Desktop-Ubuntu mopidy[7481]: DEBUG    2022-10-23 23:22:16,201 [7481:HttpServer] mopidy.http.handlers
okt 23 23:22:16 Desktop-Ubuntu mopidy[7481]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 20, "result": []}'
okt 23 23:22:16 Desktop-Ubuntu mopidy[7481]: DEBUG    2022-10-23 23:22:16,200 [7481:HttpServer] mopidy.http.handlers
okt 23 23:22:16 Desktop-Ubuntu mopidy[7481]:   Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_tl_tracks","params":{},"jsonrpc":"2.0","id":20}'
okt 23 23:22:16 Desktop-Ubuntu mopidy[7481]: DEBUG    2022-10-23 23:22:16,200 [7481:HttpServer] mopidy.http.handlers
okt 23 23:22:16 Desktop-Ubuntu mopidy[7481]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 19, "result": false}'
okt 23 23:22:16 Desktop-Ubuntu mopidy[7481]: DEBUG    2022-10-23 23:22:16,200 [7481:HttpServer] mopidy.http.handlers
okt 23 23:22:16 Desktop-Ubuntu mopidy[7481]:   Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_repeat","params":{},"jsonrpc":"2.0","id":19}'
okt 23 23:22:16 Desktop-Ubuntu mopidy[7481]: DEBUG    2022-10-23 23:22:16,200 [7481:HttpServer] mopidy.http.handlers
okt 23 23:22:16 Desktop-Ubuntu mopidy[7481]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 18, "result": false}'
okt 23 23:22:16 Desktop-Ubuntu mopidy[7481]: DEBUG    2022-10-23 23:22:16,199 [7481:HttpServer] mopidy.http.handlers
okt 23 23:22:16 Desktop-Ubuntu mopidy[7481]:   Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_random","params":{},"jsonrpc":"2.0","id":18}'
okt 23 23:22:16 Desktop-Ubuntu mopidy[7481]: DEBUG    2022-10-23 23:22:16,199 [7481:HttpServer] mopidy.http.handlers
okt 23 23:22:16 Desktop-Ubuntu mopidy[7481]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 17, "result": false}'
okt 23 23:22:16 Desktop-Ubuntu mopidy[7481]: DEBUG    2022-10-23 23:22:16,199 [7481:HttpServer] mopidy.http.handlers
okt 23 23:22:16 Desktop-Ubuntu mopidy[7481]:   Received WebSocket message from 127.0.0.1: '{"method":"core.tracklist.get_consume","params":{},"jsonrpc":"2.0","id":17}'
okt 23 23:22:16 Desktop-Ubuntu mopidy[7481]: DEBUG    2022-10-23 23:22:16,198 [7481:HttpServer] mopidy.http.handlers
okt 23 23:22:16 Desktop-Ubuntu mopidy[7481]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 16, "result": false}'
okt 23 23:22:16 Desktop-Ubuntu mopidy[7481]: DEBUG    2022-10-23 23:22:16,198 [7481:HttpServer] mopidy.http.handlers
okt 23 23:22:16 Desktop-Ubuntu mopidy[7481]:   Received WebSocket message from 127.0.0.1: '{"method":"core.mixer.get_mute","params":{},"jsonrpc":"2.0","id":16}'
okt 23 23:22:16 Desktop-Ubuntu mopidy[7481]: DEBUG    2022-10-23 23:22:16,198 [7481:HttpServer] mopidy.http.handlers
okt 23 23:22:16 Desktop-Ubuntu mopidy[7481]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 15, "result": 100}'
okt 23 23:22:16 Desktop-Ubuntu mopidy[7481]: DEBUG    2022-10-23 23:22:16,198 [7481:HttpServer] mopidy.http.handlers
okt 23 23:22:16 Desktop-Ubuntu mopidy[7481]:   Received WebSocket message from 127.0.0.1: '{"method":"core.mixer.get_volume","params":{},"jsonrpc":"2.0","id":15}'
okt 23 23:22:16 Desktop-Ubuntu mopidy[7481]: DEBUG    2022-10-23 23:22:16,197 [7481:HttpServer] mopidy.http.handlers
okt 23 23:22:16 Desktop-Ubuntu mopidy[7481]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 14, "result": "stopped"}'
okt 23 23:22:16 Desktop-Ubuntu mopidy[7481]: DEBUG    2022-10-23 23:22:16,197 [7481:HttpServer] mopidy.http.handlers
okt 23 23:22:16 Desktop-Ubuntu mopidy[7481]:   Received WebSocket message from 127.0.0.1: '{"method":"core.playback.get_state","params":{},"jsonrpc":"2.0","id":14}'
okt 23 23:22:16 Desktop-Ubuntu mopidy[7481]: DEBUG    2022-10-23 23:22:16,196 [7481:HttpServer] mopidy.http.handlers
okt 23 23:22:16 Desktop-Ubuntu mopidy[7481]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 13, "result": null}'
okt 23 23:22:16 Desktop-Ubuntu mopidy[7481]: DEBUG    2022-10-23 23:22:16,196 [7481:HttpServer] mopidy.http.handlers
okt 23 23:22:16 Desktop-Ubuntu mopidy[7481]:   Received WebSocket message from 127.0.0.1: '{"method":"core.playback.get_current_tl_track","params":{},"jsonrpc":"2.0","id":13}'
okt 23 23:22:16 Desktop-Ubuntu mopidy[7481]: DEBUG    2022-10-23 23:22:16,196 [7481:HttpServer] mopidy.http.handlers
okt 23 23:22:16 Desktop-Ubuntu mopidy[7481]:   Sent WebSocket message to 127.0.0.1: '{"jsonrpc": "2.0", "id": 12, "result": {"core.get_uri_schemes": {"description": "Get list of URI schemes we can handle", "params": []}, "core.get_version": {"description": "Get version of the Mopidy core API", "params": []}, "core.history.get_history": {"description": "Get the track history.\\n\\nThe timestamps are milliseconds since epoch.\\n\\n:returns: the track history\\n:rtype: list of (timestamp, :class:`mopidy.models.Ref`) tuples", "params": []}, "core.history.get_length": {"description": "Get the number of tracks in the history.\\n\\n:returns: the history length\\n:rtype: int", "params": []}, "core.library.browse": {"description": "Browse directories and tracks at the given ``uri``.\\n\\n``uri`` is a string which represents some directory belonging to a\\nbackend. To get the intial root directories for backends pass\\n:class:`None` as the URI.\\n\\nReturns a list of :class:`mopidy.models.Ref` objects for the\\ndirectories and tracks at the given ``uri``.\\n\\nThe :class:`~mopidy.models.Ref` objects representing tracks keep the\\ntrack\'s original URI. A matching pair of objects can look like this::\\n\\n    Track(uri=\'dummy:/foo.mp3\', name=\'foo\', artists=..., album=...)\\n    Ref.track(uri=\'dummy:/foo.mp3\', name=\'foo\')\\n\\nThe :class:`~mopidy.models.Ref` objects representing directories have\\nbackend specific URIs. These are opaque values, so no one but the\\nbackend that created them should try and derive any meaning from them.\\nThe only valid exception to this is checking the scheme, as it is used\\nto route browse requests to the correct backend.\\n\\nFor example, the dummy library\'s ``/bar`` directory could be returned\\nlike this::\\n\\n    Ref.directory(uri=\'dummy:directory:/bar\', name=\'bar\')\\n\\n:param string uri: URI to browse\\n:rtype: list of :class:`mopidy.models.Ref`\\n\\n.. versionadded:: 0.18", "params": [{"name": "uri"}]}, "core.library.get_distinct": {"description": "List distinct values for a given field from the library.\\n\\nThis has mainly been added to support the list commands the MPD\\nprotocol supports in a more sane fashion. Other frontends are not\\nrecommended to use this method.\\n\\n:param string field: Any one of ``uri``, ``track_name``, ``album``,\\n    ``artist``, ``albumartist``, ``composer``, ``performer``,\\n    ``track_no``, ``genre``, ``date``, ``comment``, ``disc_no``,\\n    ``musicbrainz_albumid``, ``musicbrainz_artistid``, or\\n    ``musicbrainz_trackid``.\\n:param dict query: Query to use for limiting results, see\\n    :meth:`search` for details about the query format.\\n:rtype: set of values corresponding to the requested field type.\\n\\n.. versionadded:: 1.0", "params": [{"name": "field"}, {"name": "query", "default": null}]}, "core.library.get_images": {"description": "Lookup the images for the given URIs\\n\\nBackends can use this to return image URIs for any URI they know about\\nbe it tracks, albums, playlists. The lookup result is a dictionary\\nmapping the provided URIs to lists of images.\\n\\nUnknown URIs or URIs the corresponding backend couldn\'t find anything\\nfor will simply return an empty list for that URI.\\n\\n:param uris: list of URIs to find images for\\n:type uris: list of string\\n:rtype: {uri: tuple of :class:`mopidy.models.Image`}\\n\\n.. versionadded:: 1.0", "params": [{"name": "uris"}]}, "core.library.lookup": {"description": "Lookup the given URIs.\\n\\nIf the URI expands to multiple tracks, the returned list will contain\\nthem all.\\n\\n:param uris: track URIs\\n:type uris: list of string\\n:rtype: {uri: list of :class:`mopidy.models.Track`}", "params": [{"name": "uris"}]}, "core.library.refresh": {"description": "Refresh library. Limit to URI and below if an URI is given.\\n\\n:param uri: directory or track URI\\n:type uri: string", "params": [{"name": "uri", "default": null}]}, "core.library.search": {"description": "Search the library for tracks where ``field`` contains ``values``.\\n\\n``field`` can be one of ``uri``, ``track_name``, ``album``, ``artist``,\\n``albumartist``, ``composer``, ``performer``, ``track_no``, ``genre``,\\n``date``, ``comment``, ``disc_no``, ``musicbrainz_albumid``,\\n``musicbrainz_artistid``, ``musicbrainz_trackid`` or ``any``.\\n\\nIf ``uris`` is given, the search is limited to results from within the\\nURI roots. For example passing ``uris=[\'file:\']`` will limit the search\\nto the local backend.\\n\\nExamples::\\n\\n    # Returns results matching \'a\' in any backend\\n    search({\'any\': [\'a\']})\\n\\n    # Returns results matching artist \'xyz\' in any backend\\n    search({\'artist\': [\'xyz\']})\\n\\n    # Returns results matching \'a\' and \'b\' and artist \'xyz\' in any\\n    # backend\\n    search({\'any\': [\'a\', \'b\'], \'artist\': [\'xyz\']})\\n\\n    # Returns results matching \'a\' if within the given URI roots\\n    # \\"file:///media/music\\" and \\"spotify:\\"\\n    search({\'any\': [\'a\']}, uris=[\'file:///media/music\', \'spotify:\'])\\n\\n    # Returns results matching artist \'xyz\' and \'abc\' in any backend\\n    search({\'artist\': [\'xyz\', \'abc\']})\\n\\n:param query: one or more queries to search for\\n:type query: dict\\n:param uris: zero or more URI roots to limit the search to\\n:type uris: list of string or :class:`None`\\n:param exact: if the search should use exact matching\\n:type exact: :class:`bool`\\n:rtype: list of :class:`mopidy.models.SearchResult`\\n\\n.. versionadded:: 1.0\\n    The ``exact`` keyword argument.", "params": [{"name": "query"}, {"name": "uris", "default": null}, {"name": "exact", "default": false}]}, "core.mixer.get_mute": {"description": "Get mute state.\\n\\n:class:`True` if muted, :class:`False` unmuted, :class:`None` if\\nunknown.", "params": []}, "core.mixer.get_volume": {"description": "Get the volume.\\n\\nInteger in range [0..100] or :class:`None` if unknown.\\n\\nThe volume scale is linear.", "params": []}, "core.mixer.set_mute": {"description": "Set mute state.\\n\\n:class:`True` to mute, :class:`False` to unmute.\\n\\nReturns :class:`True` if call is successful, otherwise :class:`False`.", "params": [{"name": "mute"}]}, "core.mixer.set_volume": {"description": "Set the volume.\\n\\nThe volume is defined as an integer in range [0..100].\\n\\nThe volume scale is linear.\\n\\nReturns :class:`True` if call is successful, otherwise :class:`False`.", "params": [{"name": "volume"}]}, "core.playback.get_current_tl_track": {"description": "Get the currently playing or selected track.\\n\\nReturns a :class:`mopidy.models.TlTrack` or :class:`None`.", "params": []}, "core.playback.get_current_tlid": {"description": "Get the currently playing or selected TLID.\\n\\nExtracted from :meth:`get_current_tl_track` for convenience.\\n\\nReturns a :class:`int` or :class:`None`.\\n\\n.. versionadded:: 1.1", "params": []}, "core.playback.get_current_track": {"description": "Get the currently playing or selected track.\\n\\nExtracted from :meth:`get_current_tl_track` for convenience.\\n\\nReturns a :class:`mopidy.models.Track` or :class:`None`.", "params": []}, "core.playback.get_state": {"description": "Get The playback state.", "params": []}, "core.playback.get_stream_title": {"description": "Get the current stream title or :class:`None`.", "params": []}, "core.playback.get_time_position": {"description": "Get time position in milliseconds.", "params": []}, "core.playback.next": {"description": "Change to the next track.\\n\\nThe current playback state will be kept. If it was playing, playing\\nwill continue. If it was paused, it will still be paused, etc.", "params": []}, "core.playback.pause": {"description": "Pause playback.", "params": []}, "core.playback.play": {"description": "Play the given track, or if the given tl_track and tlid is\\n:class:`None`, play the currently active track.\\n\\nNote that the track **must** already be in the tracklist.\\n\\n.. deprecated:: 3.0\\n    The ``tl_track`` argument. Use ``tlid`` instead.\\n\\n:param tl_track: track to play\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:param tlid: TLID of the track to play\\n:type tlid: :class:`int` or :class:`None`", "params": [{"name": "tl_track", "default": null}, {"name": "tlid", "default": null}]}, "core.playback.previous": {"description": "Change to the previous track.\\n\\nThe current playback state will be kept. If it was playing, playing\\nwill continue. If it was paused, it will still be paused, etc.", "params": []}, "core.playback.resume": {"description": "If paused, resume playing the current track.", "params": []}, "core.playback.seek": {"description": "Seeks to time position given in milliseconds.\\n\\n:param time_position: time position in milliseconds\\n:type time_position: int\\n:rtype: :class:`True` if successful, else :class:`False`", "params": [{"name": "time_position"}]}, "core.playback.set_state": {"description": "Set the playback state.\\n\\nMust be :attr:`PLAYING`, :attr:`PAUSED`, or :attr:`STOPPED`.\\n\\nPossible states and transitions:\\n\\n.. digraph:: state_transitions\\n\\n    \\"STOPPED\\" -> \\"PLAYING\\" [ label=\\"play\\" ]\\n    \\"STOPPED\\" -> \\"PAUSED\\" [ label=\\"pause\\" ]\\n    \\"PLAYING\\" -> \\"STOPPED\\" [ label=\\"stop\\" ]\\n    \\"PLAYING\\" -> \\"PAUSED\\" [ label=\\"pause\\" ]\\n    \\"PLAYING\\" -> \\"PLAYING\\" [ label=\\"play\\" ]\\n    \\"PAUSED\\" -> \\"PLAYING\\" [ label=\\"resume\\" ]\\n    \\"PAUSED\\" -> \\"STOPPED\\" [ label=\\"stop\\" ]", "params": [{"name": "new_state"}]}, "core.playback.stop": {"description": "Stop playing.", "params": []}, "core.playlists.as_list": {"description": "Get a list of the currently available playlists.\\n\\nReturns a list of :class:`~mopidy.models.Ref` objects referring to the\\nplaylists. In other words, no information about the playlists\' content\\nis given.\\n\\n:rtype: list of :class:`mopidy.models.Ref`\\n\\n.. versionadded:: 1.0", "params": []}, "core.playlists.create": {"description": "Create a new playlist.\\n\\nIf ``uri_scheme`` matches an URI scheme handled by a current backend,\\nthat backend is asked to create the playlist. If ``uri_scheme`` is\\n:class:`None` or doesn\'t match a current backend, the first backend is\\nasked to create the playlist.\\n\\nAll new playlists must be created by calling this method, and **not**\\nby creating new instances of :class:`mopidy.models.Playlist`.\\n\\n:param name: name of the new playlist\\n:type name: string\\n:param uri_scheme: use the backend matching the URI scheme\\n:type uri_scheme: string\\n:rtype: :class:`mopidy.models.Playlist` or :class:`None`", "params": [{"name": "name"}, {"name": "uri_scheme", "default": null}]}, "core.playlists.delete": {"description": "Delete playlist identified by the URI.\\n\\nIf the URI doesn\'t match the URI schemes handled by the current\\nbackends, nothing happens.\\n\\nReturns :class:`True` if deleted, :class:`False` otherwise.\\n\\n:param uri: URI of the playlist to delete\\n:type uri: string\\n:rtype: :class:`bool`\\n\\n.. versionchanged:: 2.2\\n    Return type defined.", "params": [{"name": "uri"}]}, "core.playlists.get_items": {"description": "Get the items in a playlist specified by ``uri``.\\n\\nReturns a list of :class:`~mopidy.models.Ref` objects referring to the\\nplaylist\'s items.\\n\\nIf a playlist with the given ``uri`` doesn\'t exist, it returns\\n:class:`None`.\\n\\n:rtype: list of :class:`mopidy.models.Ref`, or :class:`None`\\n\\n.. versionadded:: 1.0", "params": [{"name": "uri"}]}, "core.playlists.get_uri_schemes": {"description": "Get the list of URI schemes that support playlists.\\n\\n:rtype: list of string\\n\\n.. versionadded:: 2.0", "params": []}, "core.playlists.lookup": {"description": "Lookup playlist with given URI in both the set of playlists and in any\\nother playlist sources. Returns :class:`None` if not found.\\n\\n:param uri: playlist URI\\n:type uri: string\\n:rtype: :class:`mopidy.models.Playlist` or :class:`None`", "params": [{"name": "uri"}]}, "core.playlists.refresh": {"description": "Refresh the playlists in :attr:`playlists`.\\n\\nIf ``uri_scheme`` is :class:`None`, all backends are asked to refresh.\\nIf ``uri_scheme`` is an URI scheme handled by a backend, only that\\nbackend is asked to refresh. If ``uri_scheme`` doesn\'t match any\\ncurrent backend, nothing happens.\\n\\n:param uri_scheme: limit to the backend matching the URI scheme\\n:type uri_scheme: string", "params": [{"name": "uri_scheme", "default": null}]}, "core.playlists.save": {"description": "Save the playlist.\\n\\nFor a playlist to be saveable, it must have the ``uri`` attribute set.\\nYou must not set the ``uri`` atribute yourself, but use playlist\\nobjects returned by :meth:`create` or retrieved from :attr:`playlists`,\\nwhich will always give you saveable playlists.\\n\\nThe method returns the saved playlist. The return playlist may differ\\nfrom the saved playlist. E.g. if the playlist name was changed, the\\nreturned playlist may have a different URI. The caller of this method\\nmust throw away the playlist sent to this method, and use the\\nreturned playlist instead.\\n\\nIf the playlist\'s URI isn\'t set or doesn\'t match the URI scheme of a\\ncurrent backend, nothing is done and :class:`None` is returned.\\n\\n:param playlist: the playlist\\n:type playlist: :class:`mopidy.models.Playlist`\\n:rtype: :class:`mopidy.models.Playlist` or :class:`None`", "params": [{"name": "playlist"}]}, "core.tracklist.add": {"description": "Add tracks to the tracklist.\\n\\nIf ``uris`` is given instead of ``tracks``, the URIs are\\nlooked up in the library and the resulting tracks are added to the\\ntracklist.\\n\\nIf ``at_position`` is given, the tracks are inserted at the given\\nposition in the tracklist. If ``at_position`` is not given, the tracks\\nare appended to the end of the tracklist.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.\\n\\n:param tracks: tracks to add\\n:type tracks: list of :class:`mopidy.models.Track` or :class:`None`\\n:param at_position: position in tracklist to add tracks\\n:type at_position: int or :class:`None`\\n:param uris: list of URIs for tracks to add\\n:type uris: list of string or :class:`None`\\n:rtype: list of :class:`mopidy.models.TlTrack`\\n\\n.. versionadded:: 1.0\\n    The ``uris`` argument.\\n\\n.. deprecated:: 1.0\\n    The ``tracks`` argument. Use ``uris``.", "params": [{"name": "tracks", "default": null}, {"name": "at_position", "default": null}, {"name": "uris", "default": null}]}, "core.tracklist.clear": {"description": "Clear the tracklist.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.", "params": []}, "core.tracklist.eot_track": {"description": "The track that will be played after the given track.\\n\\nNot necessarily the same track as :meth:`next_track`.\\n\\n.. deprecated:: 3.0\\n    Use :meth:`get_eot_tlid` instead.\\n\\n:param tl_track: the reference track\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:rtype: :class:`mopidy.models.TlTrack` or :class:`None`", "params": [{"name": "tl_track"}]}, "core.tracklist.filter": {"description": "Filter the tracklist by the given criteria.\\n\\nEach rule in the criteria consists of a model field and a list of\\nvalues to compare it against. If the model field matches any of the\\nvalues, it may be returned.\\n\\nOnly tracks that match all the given criteria are returned.\\n\\nExamples::\\n\\n    # Returns tracks with TLIDs 1, 2, 3, or 4 (tracklist ID)\\n    filter({\'tlid\': [1, 2, 3, 4]})\\n\\n    # Returns track with URIs \'xyz\' or \'abc\'\\n    filter({\'uri\': [\'xyz\', \'abc\']})\\n\\n    # Returns track with a matching TLIDs (1, 3 or 6) and a\\n    # matching URI (\'xyz\' or \'abc\')\\n    filter({\'tlid\': [1, 3, 6], \'uri\': [\'xyz\', \'abc\']})\\n\\n:param criteria: one or more rules to match by\\n:type criteria: dict, of (string, list) pairs\\n:rtype: list of :class:`mopidy.models.TlTrack`", "params": [{"name": "criteria"}]}, "core.tracklist.get_consume": {"description": "Get consume mode.\\n\\n:class:`True`\\n    Tracks are removed from the tracklist when they have been played.\\n:class:`False`\\n    Tracks are not removed from the tracklist.", "params": []}, "core.tracklist.get_eot_tlid": {"description": "The TLID of the track that will be played after the current track.\\n\\nNot necessarily the same TLID as returned by :meth:`get_next_tlid`.\\n\\n:rtype: :class:`int` or :class:`None`\\n\\n.. versionadded:: 1.1", "params": []}, "core.tracklist.get_length": {"description": "Get length of the tracklist.", "params": []}, "core.tracklist.get_next_tlid": {"description": "The tlid of the track that will be played if calling\\n:meth:`mopidy.core.PlaybackController.next()`.\\n\\nFor normal playback this is the next track in the tracklist. If repeat\\nis enabled the next track can loop around the tracklist. When random is\\nenabled this should be a random track, all tracks should be played once\\nbefore the tracklist repeats.\\n\\n:rtype: :class:`int` or :class:`None`\\n\\n.. versionadded:: 1.1", "params": []}, "core.tracklist.get_previous_tlid": {"description": "Returns the TLID of the track that will be played if calling\\n:meth:`mopidy.core.PlaybackController.previous()`.\\n\\nFor normal playback this is the previous track in the tracklist. If\\nrandom and/or consume is enabled it should return the current track\\ninstead.\\n\\n:rtype: :class:`int` or :class:`None`\\n\\n.. versionadded:: 1.1", "params": []}, "core.tracklist.get_random": {"description": "Get random mode.\\n\\n:class:`True`\\n    Tracks are selected at random from the tracklist.\\n:class:`False`\\n    Tracks are played in the order of the tracklist.", "params": []}, "core.tracklist.get_repeat": {"description": "Get repeat mode.\\n\\n:class:`True`\\n    The tracklist is played repeatedly.\\n:class:`False`\\n    The tracklist is played once.", "params": []}, "core.tracklist.get_single": {"description": "Get single mode.\\n\\n:class:`True`\\n    Playback is stopped after current song, unless in ``repeat`` mode.\\n:class:`False`\\n    Playback continues after current song.", "params": []}, "core.tracklist.get_tl_tracks": {"description": "Get tracklist as list of :class:`mopidy.models.TlTrack`.", "params": []}, "core.tracklist.get_tracks": {"description": "Get tracklist as list of :class:`mopidy.models.Track`.", "params": []}, "core.tracklist.get_version": {"description": "Get the tracklist version.\\n\\nInteger which is increased every time the tracklist is changed. Is not\\nreset before Mopidy is restarted.", "params": []}, "core.tracklist.index": {"description": "The position of the given track in the tracklist.\\n\\nIf neither *tl_track* or *tlid* is given we return the index of\\nthe currently playing track.\\n\\n:param tl_track: the track to find the index of\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:param tlid: TLID of the track to find the index of\\n:type tlid: :class:`int` or :class:`None`\\n:rtype: :class:`int` or :class:`None`\\n\\n.. versionadded:: 1.1\\n    The *tlid* parameter", "params": [{"name": "tl_track", "default": null}, {"name": "tlid", "default": null}]}, "core.tracklist.move": {"description": "Move the tracks in the slice ``[start:end]`` to ``to_position``.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.\\n\\n:param start: position of first track to move\\n:type start: int\\n:param end: position after last track to move\\n:type end: int\\n:param to_position: new position for the tracks\\n:type to_position: int", "params": [{"name": "start"}, {"name": "end"}, {"name": "to_position"}]}, "core.tracklist.next_track": {"description": "The track that will be played if calling\\n:meth:`mopidy.core.PlaybackController.next()`.\\n\\nFor normal playback this is the next track in the tracklist. If repeat\\nis enabled the next track can loop around the tracklist. When random is\\nenabled this should be a random track, all tracks should be played once\\nbefore the tracklist repeats.\\n\\n.. deprecated:: 3.0\\n    Use :meth:`get_next_tlid` instead.\\n\\n:param tl_track: the reference track\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:rtype: :class:`mopidy.models.TlTrack` or :class:`None`", "params": [{"name": "tl_track"}]}, "core.tracklist.previous_track": {"description": "Returns the track that will be played if calling\\n:meth:`mopidy.core.PlaybackController.previous()`.\\n\\nFor normal playback this is the previous track in the tracklist. If\\nrandom and/or consume is enabled it should return the current track\\ninstead.\\n\\n.. deprecated:: 3.0\\n    Use :meth:`get_previous_tlid` instead.\\n\\n:param tl_track: the reference track\\n:type tl_track: :class:`mopidy.models.TlTrack` or :class:`None`\\n:rtype: :class:`mopidy.models.TlTrack` or :class:`None`", "params": [{"name": "tl_track"}]}, "core.tracklist.remove": {"description": "Remove the matching tracks from the tracklist.\\n\\nUses :meth:`filter()` to lookup the tracks to remove.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.\\n\\n:param criteria: one or more rules to match by\\n:type criteria: dict, of (string, list) pairs\\n:rtype: list of :class:`mopidy.models.TlTrack` that were removed", "params": [{"name": "criteria"}]}, "core.tracklist.set_consume": {"description": "Set consume mode.\\n\\n:class:`True`\\n    Tracks are removed from the tracklist when they have been played.\\n:class:`False`\\n    Tracks are not removed from the tracklist.", "params": [{"name": "value"}]}, "core.tracklist.set_random": {"description": "Set random mode.\\n\\n:class:`True`\\n    Tracks are selected at random from the tracklist.\\n:class:`False`\\n    Tracks are played in the order of the tracklist.", "params": [{"name": "value"}]}, "core.tracklist.set_repeat": {"description": "Set repeat mode.\\n\\nTo repeat a single track, set both ``repeat`` and ``single``.\\n\\n:class:`True`\\n    The tracklist is played repeatedly.\\n:class:`False`\\n    The tracklist is played once.", "params": [{"name": "value"}]}, "core.tracklist.set_single": {"description": "Set single mode.\\n\\n:class:`True`\\n    Playback is stopped after current song, unless in ``repeat`` mode.\\n:class:`False`\\n    Playback continues after current song.", "params": [{"name": "value"}]}, "core.tracklist.shuffle": {"description": "Shuffles the entire tracklist. If ``start`` and ``end`` is given only\\nshuffles the slice ``[start:end]``.\\n\\nTriggers the :meth:`mopidy.core.CoreListener.tracklist_changed` event.\\n\\n:param start: position of first track to shuffle\\n:type start: int or :class:`None`\\n:param end: position after last track to shuffle\\n:type end: int or :class:`None`", "params": [{"name": "start", "default": null}, {"name": "end", "default": null}]}, "core.tracklist.slice": {"description": "Returns a slice of the tracklist, limited by the given start and end\\npositions.\\n\\n:param start: position of first track to include in slice\\n:type start: int\\n:param end: position after last track to include in slice\\n:type end: int\\n:rtype: :class:`mopidy.models.TlTrack`", "params": [{"name": "start"}, {"name": "end"}]}}}'
okt 23 23:22:16 Desktop-Ubuntu mopidy[7481]: DEBUG    2022-10-23 23:22:16,189 [7481:HttpServer] mopidy.http.handlers
okt 23 23:22:16 Desktop-Ubuntu mopidy[7481]:   Received WebSocket message from 127.0.0.1: '{"method":"core.describe","jsonrpc":"2.0","id":12}'
okt 23 23:22:16 Desktop-Ubuntu mopidy[7481]: DEBUG    2022-10-23 23:22:16,185 [7481:HttpServer] mopidy.http.handlers
okt 23 23:22:16 Desktop-Ubuntu mopidy[7481]:   New WebSocket connection from 127.0.0.1
okt 23 23:22:16 Desktop-Ubuntu mopidy[7481]: DEBUG    2022-10-23 23:22:16,183 [7481:HttpServer] mopidy.http.handlers
okt 23 23:22:16 Desktop-Ubuntu mopidy[7481]:   101 GET /mopidy/ws/ (127.0.0.1) 18.78ms
okt 23 23:22:16 Desktop-Ubuntu mopidy[7481]: INFO     2022-10-23 23:22:16,182 [7481:HttpServer] tornado.access
okt 23 23:22:13 Desktop-Ubuntu mopidy[7481]:   {'id': 166656013326825, 'jsonrpc': '2.0', 'method': 'get_version', 'result': {'version': {'current': '3.64.1', 'latest': '3.64.1', 'is_root': False, 'upgrade_available': False}}, 'recipient': '8XR75EFJ5CQP'}
okt 23 23:22:13 Desktop-Ubuntu mopidy[7481]: DEBUG    2022-10-23 23:22:13,404 [7481:HttpServer] mopidy_iris.core
okt 23 23:22:13 Desktop-Ubuntu mopidy[7481]:   Iris websocket message received: {"jsonrpc":"2.0","id":166656013326825,"method":"get_version"}
okt 23 23:22:13 Desktop-Ubuntu mopidy[7481]: DEBUG    2022-10-23 23:22:13,268 [7481:HttpServer] mopidy_iris.handlers
okt 23 23:22:12 Desktop-Ubuntu mopidy[7481]:   {'id': 166656013276757, 'jsonrpc': '2.0', 'method': 'get_queue_metadata', 'result': {'queue_metadata': {}}, 'recipient': '8XR75EFJ5CQP'}
okt 23 23:22:12 Desktop-Ubuntu mopidy[7481]: DEBUG    2022-10-23 23:22:12,769 [7481:HttpServer] mopidy_iris.core
okt 23 23:22:12 Desktop-Ubuntu mopidy[7481]:   Iris websocket message received: {"jsonrpc":"2.0","id":166656013276757,"method":"get_queue_metadata"}
okt 23 23:22:12 Desktop-Ubuntu mopidy[7481]: DEBUG    2022-10-23 23:22:12,769 [7481:HttpServer] mopidy_iris.handlers
okt 23 23:22:12 Desktop-Ubuntu mopidy[7481]:   {'id': 166656013276654, 'jsonrpc': '2.0', 'method': 'get_pinned', 'result': {'pinned': []}, 'recipient': '8XR75EFJ5CQP'}
okt 23 23:22:12 Desktop-Ubuntu mopidy[7481]: DEBUG    2022-10-23 23:22:12,769 [7481:HttpServer] mopidy_iris.core
okt 23 23:22:12 Desktop-Ubuntu mopidy[7481]:   Iris websocket message received: {"jsonrpc":"2.0","id":166656013276654,"method":"get_pinned"}
okt 23 23:22:12 Desktop-Ubuntu mopidy[7481]: DEBUG    2022-10-23 23:22:12,769 [7481:HttpServer] mopidy_iris.handlers
okt 23 23:22:12 Desktop-Ubuntu mopidy[7481]:   {'id': 166656013276535, 'jsonrpc': '2.0', 'method': 'get_commands', 'result': {'commands': {}}, 'recipient': '8XR75EFJ5CQP'}
okt 23 23:22:12 Desktop-Ubuntu mopidy[7481]: DEBUG    2022-10-23 23:22:12,768 [7481:HttpServer] mopidy_iris.core
okt 23 23:22:12 Desktop-Ubuntu mopidy[7481]:   Iris websocket message received: {"jsonrpc":"2.0","id":166656013276535,"method":"get_commands"}
okt 23 23:22:12 Desktop-Ubuntu mopidy[7481]: DEBUG    2022-10-23 23:22:12,768 [7481:HttpServer] mopidy_iris.handlers
okt 23 23:22:12 Desktop-Ubuntu mopidy[7481]:   {'id': 166656013276552, 'jsonrpc': '2.0', 'method': 'get_radio', 'result': {'radio': {'enabled': 0, 'seed_artists': [], 'seed_genres': [], 'seed_tracks': [], 'results': []}}, 'recipient': '8XR75EFJ5CQP'}
okt 23 23:22:12 Desktop-Ubuntu mopidy[7481]: DEBUG    2022-10-23 23:22:12,768 [7481:HttpServer] mopidy_iris.core
okt 23 23:22:12 Desktop-Ubuntu mopidy[7481]:   Iris websocket message received: {"jsonrpc":"2.0","id":166656013276552,"method":"get_radio"}
okt 23 23:22:12 Desktop-Ubuntu mopidy[7481]: DEBUG    2022-10-23 23:22:12,768 [7481:HttpServer] mopidy_iris.handlers
okt 23 23:22:12 Desktop-Ubuntu mopidy[7481]:   {'id': 166656013276416, 'jsonrpc': '2.0', 'method': 'get_shared_config', 'result': {'shared_config': {}}, 'recipient': '8XR75EFJ5CQP'}
okt 23 23:22:12 Desktop-Ubuntu mopidy[7481]: DEBUG    2022-10-23 23:22:12,768 [7481:HttpServer] mopidy_iris.core
okt 23 23:22:12 Desktop-Ubuntu mopidy[7481]:   Iris websocket message received: {"jsonrpc":"2.0","id":166656013276416,"method":"get_shared_config"}
okt 23 23:22:12 Desktop-Ubuntu mopidy[7481]: DEBUG    2022-10-23 23:22:12,768 [7481:HttpServer] mopidy_iris.handlers
okt 23 23:22:12 Desktop-Ubuntu mopidy[7481]:   {'id': 166656013276485, 'jsonrpc': '2.0', 'method': 'get_config', 'result': {'config': {'is_root': False, 'spotify_username': False, 'country': 'NZ', 'locale': 'en_NZ', 'snapcast_enabled': True, 'snapcast_host': 'localhost', 'snapcast_port': '1780', 'snapcast_ssl': False, 'snapcast_stream': 'Default', 'spotify_authorization_url': 'https://jamesbarnsley.co.nz/iris/auth_spotify.php', 'lastfm_authorization_url': 'https://jamesbarnsley.co.nz/iris/auth_lastfm.php', 'genius_authorization_url': 'https://jamesbarnsley.co.nz/iris/auth_genius.php', 'shared_config': {}}}, 'recipient': '8XR75EFJ5CQP'}
okt 23 23:22:12 Desktop-Ubuntu mopidy[7481]: DEBUG    2022-10-23 23:22:12,767 [7481:HttpServer] mopidy_iris.core
okt 23 23:22:12 Desktop-Ubuntu mopidy[7481]:   Iris websocket message received: {"jsonrpc":"2.0","id":166656013276485,"method":"get_config"}
okt 23 23:22:12 Desktop-Ubuntu mopidy[7481]: DEBUG    2022-10-23 23:22:12,767 [7481:HttpServer] mopidy_iris.handlers
okt 23 23:22:12 Desktop-Ubuntu mopidy[7481]:   {'id': 166656013276352, 'jsonrpc': '2.0', 'method': 'update_connection', 'result': {'connection': {'connection_id': '8XR75EFJ5CQP', 'ip': '127.0.0.1', 'created': '2022-10-23 23:22:12', 'username': 166637467060576, 'client_id': 166637467060628}}, 'recipient': '8XR75EFJ5CQP'}
okt 23 23:22:12 Desktop-Ubuntu mopidy[7481]: DEBUG    2022-10-23 23:22:12,767 [7481:HttpServer] mopidy_iris.core
okt 23 23:22:12 Desktop-Ubuntu mopidy[7481]:   {'method': 'connection_changed', 'params': {'connection': {'connection_id': '8XR75EFJ5CQP', 'ip': '127.0.0.1', 'created': '2022-10-23 23:22:12', 'username': 166637467060576, 'client_id': 166637467060628}}}
okt 23 23:22:12 Desktop-Ubuntu mopidy[7481]: DEBUG    2022-10-23 23:22:12,767 [7481:HttpServer] mopidy_iris.core
okt 23 23:22:12 Desktop-Ubuntu mopidy[7481]:   Iris websocket message received: {"jsonrpc":"2.0","id":166656013276352,"method":"update_connection","params":{"username":166637467060576,"client_id":166637467060628}}
okt 23 23:22:12 Desktop-Ubuntu mopidy[7481]: DEBUG    2022-10-23 23:22:12,766 [7481:HttpServer] mopidy_iris.handlers
okt 23 23:22:12 Desktop-Ubuntu mopidy[7481]:   {'method': 'connection_added', 'params': {'connection': {'connection_id': '8XR75EFJ5CQP', 'ip': '127.0.0.1', 'created': '2022-10-23 23:22:12'}}}
okt 23 23:22:12 Desktop-Ubuntu mopidy[7481]: DEBUG    2022-10-23 23:22:12,752 [7481:HttpServer] mopidy_iris.core
okt 23 23:22:12 Desktop-Ubuntu mopidy[7481]:   <mopidy_iris.handlers.WebsocketHandler object at 0x7fb5395655a0>
okt 23 23:22:12 Desktop-Ubuntu mopidy[7481]: DEBUG    2022-10-23 23:22:12,752 [7481:HttpServer] mopidy_iris.core
okt 23 23:22:12 Desktop-Ubuntu mopidy[7481]:   Connection added
okt 23 23:22:12 Desktop-Ubuntu mopidy[7481]: DEBUG    2022-10-23 23:22:12,752 [7481:HttpServer] mopidy_iris.core
okt 23 23:22:12 Desktop-Ubuntu mopidy[7481]:   101 GET /iris/ws/ (127.0.0.1) 0.62ms
okt 23 23:22:12 Desktop-Ubuntu mopidy[7481]: INFO     2022-10-23 23:22:12,751 [7481:HttpServer] tornado.access
okt 23 23:22:12 Desktop-Ubuntu mopidy[7481]:     '/': <class 'tornado.web.RedirectHandler'>
okt 23 23:22:12 Desktop-Ubuntu mopidy[7481]:     '/mopidy/': <class 'mopidy.http.handlers.ClientListHandler'>
okt 23 23:22:12 Desktop-Ubuntu mopidy[7481]:     '/mopidy/(.+)': <class 'mopidy.http.handlers.StaticFileHandler'>
okt 23 23:22:12 Desktop-Ubuntu mopidy[7481]:     '/mopidy/rpc': <class 'mopidy.http.handlers.JsonRpcHandler'>
okt 23 23:22:12 Desktop-Ubuntu mopidy[7481]:     '/mopidy/ws/?': <class 'mopidy.http.handlers.WebSocketHandler'>
okt 23 23:22:12 Desktop-Ubuntu mopidy[7481]:     '/mopidy': <class 'mopidy.http.handlers.AddSlashHandler'>
okt 23 23:22:12 Desktop-Ubuntu mopidy[7481]:     '/iris/(.*)': <class 'mopidy_iris.handlers.ReactRouterHandler'>
okt 23 23:22:12 Desktop-Ubuntu mopidy[7481]:     '/iris/((.*)(?:css|js|json|map)$)': <class 'tornado.web.StaticFileHandler'>
okt 23 23:22:12 Desktop-Ubuntu mopidy[7481]:     '/iris/assets/(.*)': <class 'tornado.web.StaticFileHandler'>
okt 23 23:22:12 Desktop-Ubuntu mopidy[7481]:     '/iris/ws/?': <class 'mopidy_iris.handlers.WebsocketHandler'>
okt 23 23:22:12 Desktop-Ubuntu mopidy[7481]:     '/iris/http/([^/]*)': <class 'mopidy_iris.handlers.HttpHandler'>
okt 23 23:22:12 Desktop-Ubuntu mopidy[7481]:     '/iris': <class 'mopidy.http.handlers.AddSlashHandler'>
okt 23 23:22:12 Desktop-Ubuntu mopidy[7481]:     '/youtube/(.*\\.(?:webm|m4a|mp3|ogg))': <class 'mopidy_youtube.web.AudioHandler'>
okt 23 23:22:12 Desktop-Ubuntu mopidy[7481]:     '/youtube/(.*\\.jpg)': <class 'mopidy_youtube.web.ImageHandler'>
okt 23 23:22:12 Desktop-Ubuntu mopidy[7481]:     '/youtube/(index.html|image.html)?': <class 'mopidy_youtube.web.IndexHandler'>
okt 23 23:22:12 Desktop-Ubuntu mopidy[7481]:     '/youtube': <class 'mopidy.http.handlers.AddSlashHandler'>
okt 23 23:22:12 Desktop-Ubuntu mopidy[7481]:   HTTP routes from extensions:
okt 23 23:22:12 Desktop-Ubuntu mopidy[7481]: DEBUG    2022-10-23 23:22:12,202 [7481:HttpServer] mopidy.http.actor
okt 23 23:22:12 Desktop-Ubuntu mopidy[7481]:   Default webclient is mopidy
okt 23 23:22:12 Desktop-Ubuntu mopidy[7481]: DEBUG    2022-10-23 23:22:12,202 [7481:HttpServer] mopidy.http.actor
okt 23 23:22:12 Desktop-Ubuntu mopidy[7481]:   Loaded HTTP extension: mopidy
okt 23 23:22:12 Desktop-Ubuntu mopidy[7481]: DEBUG    2022-10-23 23:22:12,202 [7481:HttpServer] mopidy.http.actor
okt 23 23:22:12 Desktop-Ubuntu mopidy[7481]:   Loaded HTTP extension: iris
okt 23 23:22:12 Desktop-Ubuntu mopidy[7481]: DEBUG    2022-10-23 23:22:12,202 [7481:HttpServer] mopidy.http.actor
okt 23 23:22:12 Desktop-Ubuntu mopidy[7481]:   Loaded HTTP extension: youtube
okt 23 23:22:12 Desktop-Ubuntu mopidy[7481]: DEBUG    2022-10-23 23:22:12,201 [7481:HttpServer] mopidy.http.actor
okt 23 23:22:12 Desktop-Ubuntu mopidy[7481]:   Creating dir file:///var/cache/mopidy/youtube
okt 23 23:22:12 Desktop-Ubuntu mopidy[7481]: INFO     2022-10-23 23:22:12,201 [7481:HttpServer] mopidy.internal.path
okt 23 23:22:12 Desktop-Ubuntu mopidy[7481]:   Zeroconf service 'Mopidy HTTP server on Desktop-Ubuntu' (_mopidy-http._tcp at []:6680): Published
okt 23 23:22:12 Desktop-Ubuntu mopidy[7481]: DEBUG    2022-10-23 23:22:12,197 [7481:HttpFrontend-11 (_actor_loop)] mopidy.zeroconf
okt 23 23:22:12 Desktop-Ubuntu mopidy[7481]:   Zeroconf service 'Mopidy HTTP server on Desktop-Ubuntu' (_http._tcp at []:6680): Published
okt 23 23:22:12 Desktop-Ubuntu mopidy[7481]: DEBUG    2022-10-23 23:22:12,195 [7481:HttpFrontend-11 (_actor_loop)] mopidy.zeroconf
okt 23 23:22:12 Desktop-Ubuntu mopidy[7481]:   Using selector: EpollSelector
okt 23 23:22:12 Desktop-Ubuntu mopidy[7481]: DEBUG    2022-10-23 23:22:12,187 [7481:HttpServer] asyncio
okt 23 23:22:12 Desktop-Ubuntu mopidy[7481]:   Creating dir file:///var/lib/mopidy/iris
okt 23 23:22:12 Desktop-Ubuntu mopidy[7481]: INFO     2022-10-23 23:22:12,186 [7481:IrisFrontend-9 (_actor_loop)] mopidy.internal.path
okt 23 23:22:12 Desktop-Ubuntu mopidy[7481]:   Starting GLib mainloop
okt 23 23:22:12 Desktop-Ubuntu mopidy[7481]: INFO     2022-10-23 23:22:12,186 [7481:MainThread] mopidy.commands
okt 23 23:22:12 Desktop-Ubuntu mopidy[7481]:   HttpFrontend took 0ms
okt 23 23:22:12 Desktop-Ubuntu mopidy[7481]: TRACE    2022-10-23 23:22:12,186 [7481:MainThread] mopidy.internal.timer
okt 23 23:22:12 Desktop-Ubuntu mopidy[7481]:   HTTP server running at [::ffff:127.0.0.1]:6680
okt 23 23:22:12 Desktop-Ubuntu mopidy[7481]: INFO     2022-10-23 23:22:12,186 [7481:HttpFrontend-11 (_actor_loop)] mopidy.http.actor
okt 23 23:22:12 Desktop-Ubuntu mopidy[7481]:   Starting HttpFrontend (urn:uuid:5bd8ba1b-0f9b-4a76-9e7c-20233d1ca683)
okt 23 23:22:12 Desktop-Ubuntu mopidy[7481]: DEBUG    2022-10-23 23:22:12,185 [7481:MainThread] pykka
okt 23 23:22:12 Desktop-Ubuntu mopidy[7481]:   Registered HttpFrontend (urn:uuid:5bd8ba1b-0f9b-4a76-9e7c-20233d1ca683)
okt 23 23:22:12 Desktop-Ubuntu mopidy[7481]: DEBUG    2022-10-23 23:22:12,185 [7481:MainThread] pykka
okt 23 23:22:12 Desktop-Ubuntu mopidy[7481]:   Starting HTTP server
okt 23 23:22:12 Desktop-Ubuntu mopidy[7481]: DEBUG    2022-10-23 23:22:12,185 [7481:MainThread] mopidy.http.actor
okt 23 23:22:12 Desktop-Ubuntu mopidy[7481]:   IrisFrontend took 1ms
okt 23 23:22:12 Desktop-Ubuntu mopidy[7481]: TRACE    2022-10-23 23:22:12,185 [7481:MainThread] mopidy.internal.timer
okt 23 23:22:12 Desktop-Ubuntu mopidy[7481]:   Starting Iris 3.64.1
okt 23 23:22:12 Desktop-Ubuntu mopidy[7481]: INFO     2022-10-23 23:22:12,185 [7481:IrisFrontend-9 (_actor_loop)] mopidy_iris.core
okt 23 23:22:12 Desktop-Ubuntu mopidy[7481]:   Starting IrisFrontend (urn:uuid:f242df1c-4f92-4051-af90-25b13905b4f1)
okt 23 23:22:12 Desktop-Ubuntu mopidy[7481]: DEBUG    2022-10-23 23:22:12,184 [7481:MainThread] pykka
okt 23 23:22:12 Desktop-Ubuntu mopidy[7481]:   Registered IrisFrontend (urn:uuid:f242df1c-4f92-4051-af90-25b13905b4f1)
okt 23 23:22:12 Desktop-Ubuntu mopidy[7481]: DEBUG    2022-10-23 23:22:12,184 [7481:MainThread] pykka
okt 23 23:22:12 Desktop-Ubuntu mopidy[7481]:   YouTubeCoreListener took 0ms
okt 23 23:22:12 Desktop-Ubuntu mopidy[7481]: TRACE    2022-10-23 23:22:12,183 [7481:MainThread] mopidy.internal.timer
okt 23 23:22:12 Desktop-Ubuntu mopidy[7481]:   Starting YouTubeCoreListener (urn:uuid:c52d37b7-1dda-4304-86fa-409f044f0d41)
okt 23 23:22:12 Desktop-Ubuntu mopidy[7481]: DEBUG    2022-10-23 23:22:12,183 [7481:MainThread] pykka
okt 23 23:22:12 Desktop-Ubuntu mopidy[7481]:   Registered YouTubeCoreListener (urn:uuid:c52d37b7-1dda-4304-86fa-409f044f0d41)
okt 23 23:22:12 Desktop-Ubuntu mopidy[7481]: DEBUG    2022-10-23 23:22:12,183 [7481:MainThread] pykka
okt 23 23:22:12 Desktop-Ubuntu mopidy[7481]:   YouTubeAutoplayer took 0ms
okt 23 23:22:12 Desktop-Ubuntu mopidy[7481]: TRACE    2022-10-23 23:22:12,183 [7481:MainThread] mopidy.internal.timer
okt 23 23:22:12 Desktop-Ubuntu mopidy[7481]:   Starting YouTubeAutoplayer (urn:uuid:e8374f53-c66d-400d-8415-74610c666ac0)
okt 23 23:22:12 Desktop-Ubuntu mopidy[7481]: DEBUG    2022-10-23 23:22:12,182 [7481:MainThread] pykka
okt 23 23:22:12 Desktop-Ubuntu mopidy[7481]:   Registered YouTubeAutoplayer (urn:uuid:e8374f53-c66d-400d-8415-74610c666ac0)
okt 23 23:22:12 Desktop-Ubuntu mopidy[7481]: DEBUG    2022-10-23 23:22:12,182 [7481:MainThread] pykka
okt 23 23:22:12 Desktop-Ubuntu mopidy[7481]:   Starting Mopidy frontends: YouTubeAutoplayer, YouTubeCoreListener, IrisFrontend, HttpFrontend
okt 23 23:22:12 Desktop-Ubuntu mopidy[7481]: INFO     2022-10-23 23:22:12,182 [7481:MainThread] mopidy.commands
okt 23 23:22:12 Desktop-Ubuntu mopidy[7481]:   Starting Core (urn:uuid:7cf166a9-3ed2-4de0-adda-0a6f17890cbb)
okt 23 23:22:12 Desktop-Ubuntu mopidy[7481]: DEBUG    2022-10-23 23:22:12,178 [7481:MainThread] pykka
okt 23 23:22:12 Desktop-Ubuntu mopidy[7481]:   Registered Core (urn:uuid:7cf166a9-3ed2-4de0-adda-0a6f17890cbb)
okt 23 23:22:12 Desktop-Ubuntu mopidy[7481]: DEBUG    2022-10-23 23:22:12,178 [7481:MainThread] pykka
okt 23 23:22:12 Desktop-Ubuntu mopidy[7481]:   Starting Mopidy core
okt 23 23:22:12 Desktop-Ubuntu mopidy[7481]: INFO     2022-10-23 23:22:12,176 [7481:MainThread] mopidy.commands
okt 23 23:22:12 Desktop-Ubuntu mopidy[7481]:   StreamBackend took 6ms
okt 23 23:22:12 Desktop-Ubuntu mopidy[7481]: TRACE    2022-10-23 23:22:12,175 [7481:MainThread] mopidy.internal.timer
okt 23 23:22:12 Desktop-Ubuntu mopidy[7481]:   Starting StreamBackend (urn:uuid:98947922-7457-404b-9c12-f007c063e109)
okt 23 23:22:12 Desktop-Ubuntu mopidy[7481]: DEBUG    2022-10-23 23:22:12,173 [7481:MainThread] pykka
okt 23 23:22:12 Desktop-Ubuntu mopidy[7481]:   Registered StreamBackend (urn:uuid:98947922-7457-404b-9c12-f007c063e109)
okt 23 23:22:12 Desktop-Ubuntu mopidy[7481]: DEBUG    2022-10-23 23:22:12,173 [7481:MainThread] pykka
okt 23 23:22:12 Desktop-Ubuntu mopidy[7481]:   M3UBackend took 1ms
okt 23 23:22:12 Desktop-Ubuntu mopidy[7481]: TRACE    2022-10-23 23:22:12,169 [7481:MainThread] mopidy.internal.timer
okt 23 23:22:12 Desktop-Ubuntu mopidy[7481]:   Starting M3UBackend (urn:uuid:ec2c3712-f19f-4f9e-8a4d-2e47046e81de)
okt 23 23:22:12 Desktop-Ubuntu mopidy[7481]: DEBUG    2022-10-23 23:22:12,168 [7481:MainThread] pykka
okt 23 23:22:12 Desktop-Ubuntu mopidy[7481]:   Registered M3UBackend (urn:uuid:ec2c3712-f19f-4f9e-8a4d-2e47046e81de)
okt 23 23:22:12 Desktop-Ubuntu mopidy[7481]: DEBUG    2022-10-23 23:22:12,168 [7481:MainThread] pykka
okt 23 23:22:12 Desktop-Ubuntu mopidy[7481]:   FileBackend took 3ms
okt 23 23:22:12 Desktop-Ubuntu mopidy[7481]: TRACE    2022-10-23 23:22:12,167 [7481:MainThread] mopidy.internal.timer
okt 23 23:22:12 Desktop-Ubuntu mopidy[7481]:   Starting FileBackend (urn:uuid:c9860275-5bef-4b2a-bf71-9cdcafda6e0b)
okt 23 23:22:12 Desktop-Ubuntu mopidy[7481]: DEBUG    2022-10-23 23:22:12,165 [7481:MainThread] pykka
okt 23 23:22:12 Desktop-Ubuntu mopidy[7481]:   Registered FileBackend (urn:uuid:c9860275-5bef-4b2a-bf71-9cdcafda6e0b)
okt 23 23:22:12 Desktop-Ubuntu mopidy[7481]: DEBUG    2022-10-23 23:22:12,165 [7481:MainThread] pykka
okt 23 23:22:12 Desktop-Ubuntu mopidy[7481]:   Failed expanding path ($XDG_MUSIC_DIR) from file/media_dirs config value.
okt 23 23:22:12 Desktop-Ubuntu mopidy[7481]: DEBUG    2022-10-23 23:22:12,164 [7481:MainThread] mopidy.file.library
okt 23 23:22:12 Desktop-Ubuntu mopidy[7481]:   Audio output set to "pulsesink server=127.0.0.1"
okt 23 23:22:12 Desktop-Ubuntu mopidy[7481]: INFO     2022-10-23 23:22:12,125 [7481:Audio-2 (_actor_loop)] mopidy.audio.actor
okt 23 23:22:12 Desktop-Ubuntu mopidy[7481]: ModuleNotFoundError: No module named 'ytmusicapi'
okt 23 23:22:12 Desktop-Ubuntu mopidy[7481]:     from ytmusicapi import YTMusic
okt 23 23:22:12 Desktop-Ubuntu mopidy[7481]:   File "/usr/local/lib/python3.10/dist-packages/mopidy_youtube/apis/youtube_music.py", line 7, in <module>
okt 23 23:22:12 Desktop-Ubuntu mopidy[7481]:     from mopidy_youtube.apis import youtube_music
okt 23 23:22:12 Desktop-Ubuntu mopidy[7481]:   File "/usr/local/lib/python3.10/dist-packages/mopidy_youtube/backend.py", line 84, in __init__
okt 23 23:22:12 Desktop-Ubuntu mopidy[7481]:     obj = cls(*args, **kwargs)
okt 23 23:22:12 Desktop-Ubuntu mopidy[7481]:   File "/usr/lib/python3/dist-packages/pykka/_actor.py", line 91, in start
okt 23 23:22:12 Desktop-Ubuntu mopidy[7481]:     backend = backend_class.start(
okt 23 23:22:12 Desktop-Ubuntu mopidy[7481]:   File "/usr/lib/python3/dist-packages/mopidy/commands.py", line 412, in start_backends
okt 23 23:22:12 Desktop-Ubuntu mopidy[7481]:     yield
okt 23 23:22:12 Desktop-Ubuntu mopidy[7481]:   File "/usr/lib/python3/dist-packages/mopidy/commands.py", line 248, in _actor_error_handling
okt 23 23:22:12 Desktop-Ubuntu mopidy[7481]: Traceback (most recent call last):
okt 23 23:22:12 Desktop-Ubuntu mopidy[7481]:   Got un-handled exception from YouTubeBackend
okt 23 23:22:12 Desktop-Ubuntu mopidy[7481]: ERROR    2022-10-23 23:22:12,015 [7481:MainThread] mopidy.commands
okt 23 23:22:12 Desktop-Ubuntu mopidy[7481]:   Starting Mopidy backends: YouTubeBackend, FileBackend, M3UBackend, StreamBackend
okt 23 23:22:12 Desktop-Ubuntu mopidy[7481]: INFO     2022-10-23 23:22:12,015 [7481:MainThread] mopidy.commands
okt 23 23:22:12 Desktop-Ubuntu mopidy[7481]:   Starting Audio (urn:uuid:c5c5521d-23af-4681-97c5-5066e9d986b5)
okt 23 23:22:12 Desktop-Ubuntu mopidy[7481]: DEBUG    2022-10-23 23:22:12,014 [7481:MainThread] pykka
okt 23 23:22:12 Desktop-Ubuntu mopidy[7481]:   Registered Audio (urn:uuid:c5c5521d-23af-4681-97c5-5066e9d986b5)
okt 23 23:22:12 Desktop-Ubuntu mopidy[7481]: DEBUG    2022-10-23 23:22:12,014 [7481:MainThread] pykka
okt 23 23:22:12 Desktop-Ubuntu mopidy[7481]:   Starting Mopidy audio
okt 23 23:22:12 Desktop-Ubuntu mopidy[7481]: INFO     2022-10-23 23:22:12,013 [7481:MainThread] mopidy.commands
okt 23 23:22:12 Desktop-Ubuntu mopidy[7481]:   Mixer volume left unchanged
okt 23 23:22:12 Desktop-Ubuntu mopidy[7481]: DEBUG    2022-10-23 23:22:12,013 [7481:MainThread] mopidy.commands
okt 23 23:22:12 Desktop-Ubuntu mopidy[7481]:   Starting SoftwareMixer (urn:uuid:b289ca0a-8513-4cbc-acef-5a99839a9eda)
okt 23 23:22:12 Desktop-Ubuntu mopidy[7481]: DEBUG    2022-10-23 23:22:12,012 [7481:MainThread] pykka
okt 23 23:22:12 Desktop-Ubuntu mopidy[7481]:   Registered SoftwareMixer (urn:uuid:b289ca0a-8513-4cbc-acef-5a99839a9eda)
okt 23 23:22:12 Desktop-Ubuntu mopidy[7481]: DEBUG    2022-10-23 23:22:12,012 [7481:MainThread] pykka
okt 23 23:22:12 Desktop-Ubuntu mopidy[7481]:   Starting Mopidy mixer: SoftwareMixer
okt 23 23:22:12 Desktop-Ubuntu mopidy[7481]: INFO     2022-10-23 23:22:12,012 [7481:MainThread] mopidy.commands
okt 23 23:22:12 Desktop-Ubuntu mopidy[7481]:   Available Mopidy mixers: SoftwareMixer
okt 23 23:22:12 Desktop-Ubuntu mopidy[7481]: DEBUG    2022-10-23 23:22:12,012 [7481:MainThread] mopidy.commands
okt 23 23:22:11 Desktop-Ubuntu mopidy[7481]:   Disabled extensions: soundcloud
okt 23 23:22:11 Desktop-Ubuntu mopidy[7481]: INFO     2022-10-23 23:22:11,931 [7481:MainThread] mopidy.__main__
okt 23 23:22:11 Desktop-Ubuntu mopidy[7481]:   Enabled extensions: softwaremixer, stream, m3u, http, file, youtube, iris
okt 23 23:22:11 Desktop-Ubuntu mopidy[7481]: INFO     2022-10-23 23:22:11,931 [7481:MainThread] mopidy.__main__
okt 23 23:22:11 Desktop-Ubuntu mopidy[7481]:   Validating extension: stream
okt 23 23:22:11 Desktop-Ubuntu mopidy[7481]: DEBUG    2022-10-23 23:22:11,931 [7481:MainThread] mopidy.ext
okt 23 23:22:11 Desktop-Ubuntu mopidy[7481]:   Validating extension: softwaremixer
okt 23 23:22:11 Desktop-Ubuntu mopidy[7481]: DEBUG    2022-10-23 23:22:11,931 [7481:MainThread] mopidy.ext
okt 23 23:22:11 Desktop-Ubuntu mopidy[7481]:   Validating extension: m3u
okt 23 23:22:11 Desktop-Ubuntu mopidy[7481]: DEBUG    2022-10-23 23:22:11,931 [7481:MainThread] mopidy.ext
okt 23 23:22:11 Desktop-Ubuntu mopidy[7481]:   Validating extension: http
okt 23 23:22:11 Desktop-Ubuntu mopidy[7481]: DEBUG    2022-10-23 23:22:11,864 [7481:MainThread] mopidy.ext
okt 23 23:22:11 Desktop-Ubuntu mopidy[7481]:   Validating extension: file
okt 23 23:22:11 Desktop-Ubuntu mopidy[7481]: DEBUG    2022-10-23 23:22:11,863 [7481:MainThread] mopidy.ext
okt 23 23:22:11 Desktop-Ubuntu mopidy[7481]:   Validating extension: iris
okt 23 23:22:11 Desktop-Ubuntu mopidy[7481]: DEBUG    2022-10-23 23:22:11,854 [7481:MainThread] mopidy.ext
okt 23 23:22:11 Desktop-Ubuntu mopidy[7481]:   Validating extension: soundcloud
okt 23 23:22:11 Desktop-Ubuntu mopidy[7481]: DEBUG    2022-10-23 23:22:11,829 [7481:MainThread] mopidy.ext
okt 23 23:22:11 Desktop-Ubuntu mopidy[7481]:   Validating extension: youtube
okt 23 23:22:11 Desktop-Ubuntu mopidy[7481]: DEBUG    2022-10-23 23:22:11,777 [7481:MainThread] mopidy.ext
okt 23 23:22:11 Desktop-Ubuntu mopidy[7481]:   Ignoring config section 'local' because no matching extension was found
okt 23 23:22:11 Desktop-Ubuntu mopidy[7481]: WARNING  2022-10-23 23:22:11,776 [7481:MainThread] mopidy.config
okt 23 23:22:11 Desktop-Ubuntu mopidy[7481]:   Ignoring config section 'jukebox' because no matching extension was found
okt 23 23:22:11 Desktop-Ubuntu mopidy[7481]: WARNING  2022-10-23 23:22:11,776 [7481:MainThread] mopidy.config
okt 23 23:22:11 Desktop-Ubuntu mopidy[7481]:   Ignoring config section 'ytmusic' because no matching extension was found
okt 23 23:22:11 Desktop-Ubuntu mopidy[7481]: WARNING  2022-10-23 23:22:11,776 [7481:MainThread] mopidy.config
okt 23 23:22:11 Desktop-Ubuntu mopidy[7481]:   Loading config from command line options
okt 23 23:22:11 Desktop-Ubuntu mopidy[7481]: INFO     2022-10-23 23:22:11,773 [7481:MainThread] mopidy.config
okt 23 23:22:11 Desktop-Ubuntu mopidy[7481]:   Loading config from file:///etc/mopidy/mopidy.conf
okt 23 23:22:11 Desktop-Ubuntu mopidy[7481]: INFO     2022-10-23 23:22:11,772 [7481:MainThread] mopidy.config
okt 23 23:22:11 Desktop-Ubuntu mopidy[7481]:   Loading config from file:///usr/share/mopidy/conf.d/mopidy.conf
okt 23 23:22:11 Desktop-Ubuntu mopidy[7481]: INFO     2022-10-23 23:22:11,772 [7481:MainThread] mopidy.config
okt 23 23:22:11 Desktop-Ubuntu mopidy[7481]:   Loading config from builtin defaults
okt 23 23:22:11 Desktop-Ubuntu mopidy[7481]: INFO     2022-10-23 23:22:11,770 [7481:MainThread] mopidy.config
okt 23 23:22:11 Desktop-Ubuntu mopidy[7481]:   Fetching passwords from your keyring failed. Any passwords stored in the keyring will not be available. (org.freedesktop.DBus.Error.NotSupported: Unable to autolaunch a dbus-daemon without a $DISPLAY for X11)
okt 23 23:22:11 Desktop-Ubuntu mopidy[7481]: DEBUG    2022-10-23 23:22:11,770 [7481:MainThread] mopidy.config.keyring
okt 23 23:22:11 Desktop-Ubuntu mopidy[7481]:   Discovered extensions: youtube, soundcloud, iris, file, http, m3u, softwaremixer, stream
okt 23 23:22:11 Desktop-Ubuntu mopidy[7481]: DEBUG    2022-10-23 23:22:11,768 [7481:MainThread] mopidy.ext
okt 23 23:22:11 Desktop-Ubuntu mopidy[7481]:   Loaded extension: Mopidy-Stream 3.3.0
okt 23 23:22:11 Desktop-Ubuntu mopidy[7481]: DEBUG    2022-10-23 23:22:11,765 [7481:MainThread] mopidy.ext
okt 23 23:22:11 Desktop-Ubuntu mopidy[7481]:   Loading entry point: stream = mopidy.stream:Extension
okt 23 23:22:11 Desktop-Ubuntu mopidy[7481]: DEBUG    2022-10-23 23:22:11,765 [7481:MainThread] mopidy.ext
okt 23 23:22:11 Desktop-Ubuntu mopidy[7481]:   Loaded extension: Mopidy-SoftwareMixer 3.3.0
okt 23 23:22:11 Desktop-Ubuntu mopidy[7481]: DEBUG    2022-10-23 23:22:11,765 [7481:MainThread] mopidy.ext
okt 23 23:22:11 Desktop-Ubuntu mopidy[7481]:   Loading entry point: softwaremixer = mopidy.softwaremixer:Extension
okt 23 23:22:11 Desktop-Ubuntu mopidy[7481]: DEBUG    2022-10-23 23:22:11,764 [7481:MainThread] mopidy.ext
okt 23 23:22:11 Desktop-Ubuntu mopidy[7481]:   Loaded extension: Mopidy-M3U 3.3.0
okt 23 23:22:11 Desktop-Ubuntu mopidy[7481]: DEBUG    2022-10-23 23:22:11,764 [7481:MainThread] mopidy.ext
okt 23 23:22:11 Desktop-Ubuntu mopidy[7481]:   Loading entry point: m3u = mopidy.m3u:Extension
okt 23 23:22:11 Desktop-Ubuntu mopidy[7481]: DEBUG    2022-10-23 23:22:11,764 [7481:MainThread] mopidy.ext
okt 23 23:22:11 Desktop-Ubuntu mopidy[7481]:   Loaded extension: Mopidy-HTTP 3.3.0
okt 23 23:22:11 Desktop-Ubuntu mopidy[7481]: DEBUG    2022-10-23 23:22:11,764 [7481:MainThread] mopidy.ext
okt 23 23:22:11 Desktop-Ubuntu mopidy[7481]:   Loading entry point: http = mopidy.http:Extension
okt 23 23:22:11 Desktop-Ubuntu mopidy[7481]: DEBUG    2022-10-23 23:22:11,763 [7481:MainThread] mopidy.ext
okt 23 23:22:11 Desktop-Ubuntu mopidy[7481]:   Loaded extension: Mopidy-File 3.3.0
okt 23 23:22:11 Desktop-Ubuntu mopidy[7481]: DEBUG    2022-10-23 23:22:11,763 [7481:MainThread] mopidy.ext
okt 23 23:22:11 Desktop-Ubuntu mopidy[7481]:   Loading entry point: file = mopidy.file:Extension
okt 23 23:22:11 Desktop-Ubuntu mopidy[7481]: DEBUG    2022-10-23 23:22:11,763 [7481:MainThread] mopidy.ext
okt 23 23:22:11 Desktop-Ubuntu mopidy[7481]:   Loaded extension: Mopidy-Iris 3.64.1
okt 23 23:22:11 Desktop-Ubuntu mopidy[7481]: DEBUG    2022-10-23 23:22:11,761 [7481:MainThread] mopidy.ext
okt 23 23:22:11 Desktop-Ubuntu mopidy[7481]:   Loading entry point: iris = mopidy_iris:Extension
okt 23 23:22:11 Desktop-Ubuntu mopidy[7481]: DEBUG    2022-10-23 23:22:11,760 [7481:MainThread] mopidy.ext
okt 23 23:22:11 Desktop-Ubuntu mopidy[7481]:   Loaded extension: Mopidy-SoundCloud 3.0.1
okt 23 23:22:11 Desktop-Ubuntu mopidy[7481]: DEBUG    2022-10-23 23:22:11,760 [7481:MainThread] mopidy.ext
okt 23 23:22:11 Desktop-Ubuntu mopidy[7481]:   Loading entry point: soundcloud = mopidy_soundcloud:Extension
okt 23 23:22:11 Desktop-Ubuntu mopidy[7481]: DEBUG    2022-10-23 23:22:11,759 [7481:MainThread] mopidy.ext
okt 23 23:22:11 Desktop-Ubuntu mopidy[7481]:   Loaded extension: Mopidy-YouTube 3.6.1
okt 23 23:22:11 Desktop-Ubuntu mopidy[7481]: DEBUG    2022-10-23 23:22:11,758 [7481:MainThread] mopidy.ext
okt 23 23:22:11 Desktop-Ubuntu mopidy[7481]:   Loading entry point: youtube = mopidy_youtube:Extension
okt 23 23:22:11 Desktop-Ubuntu mopidy[7481]: DEBUG    2022-10-23 23:22:11,757 [7481:MainThread] mopidy.ext
okt 23 23:22:11 Desktop-Ubuntu mopidy[7481]:   Starting Mopidy 3.3.0
okt 23 23:22:11 Desktop-Ubuntu mopidy[7481]: INFO     2022-10-23 23:22:11,755 [7481:MainThread] mopidy.__main__
okt 23 23:22:11 Desktop-Ubuntu systemd[1]: Started Mopidy music server.
okt 23 23:22:11 Desktop-Ubuntu systemd[1]: Starting Mopidy music server...
okt 23 23:17:40 Desktop-Ubuntu systemd[1]: mopidy.service: Deactivated successfully.
okt 23 23:17:40 Desktop-Ubuntu mopidy[7222]:   All actors stopped.
okt 23 23:17:40 Desktop-Ubuntu mopidy[7222]: DEBUG    2022-10-23 23:17:40,602 [7222:MainThread] mopidy.internal.process
okt 23 23:17:40 Desktop-Ubuntu mopidy[7222]:   Stopped SoftwareMixer (urn:uuid:eea9bd46-0086-4535-8b35-9a6839205422)
okt 23 23:17:40 Desktop-Ubuntu mopidy[7222]: DEBUG    2022-10-23 23:17:40,602 [7222:SoftwareMixer-1 (_actor_loop)] pykka
okt 23 23:17:40 Desktop-Ubuntu mopidy[7222]:   Unregistered SoftwareMixer (urn:uuid:eea9bd46-0086-4535-8b35-9a6839205422)
okt 23 23:17:40 Desktop-Ubuntu mopidy[7222]: DEBUG    2022-10-23 23:17:40,602 [7222:SoftwareMixer-1 (_actor_loop)] pykka
okt 23 23:17:40 Desktop-Ubuntu mopidy[7222]:   Stopping 1 instance(s) of SoftwareMixer
okt 23 23:17:40 Desktop-Ubuntu mopidy[7222]: DEBUG    2022-10-23 23:17:40,601 [7222:MainThread] mopidy.internal.process
okt 23 23:17:40 Desktop-Ubuntu mopidy[7222]:   Stopping Mopidy mixer
okt 23 23:17:40 Desktop-Ubuntu mopidy[7222]: INFO     2022-10-23 23:17:40,601 [7222:MainThread] mopidy.commands
okt 23 23:17:40 Desktop-Ubuntu mopidy[7222]:   Stopped Audio (urn:uuid:389170fd-beed-497b-90c0-858c66d218ab)
okt 23 23:17:40 Desktop-Ubuntu mopidy[7222]: DEBUG    2022-10-23 23:17:40,601 [7222:Audio-2 (_actor_loop)] pykka
okt 23 23:17:40 Desktop-Ubuntu mopidy[7222]:   Unregistered Audio (urn:uuid:389170fd-beed-497b-90c0-858c66d218ab)
okt 23 23:17:40 Desktop-Ubuntu mopidy[7222]: DEBUG    2022-10-23 23:17:40,601 [7222:Audio-2 (_actor_loop)] pykka
okt 23 23:17:40 Desktop-Ubuntu mopidy[7222]:   Stopping 1 instance(s) of Audio
okt 23 23:17:40 Desktop-Ubuntu mopidy[7222]: DEBUG    2022-10-23 23:17:40,601 [7222:MainThread] mopidy.internal.process
okt 23 23:17:40 Desktop-Ubuntu mopidy[7222]:   Stopping Mopidy audio
okt 23 23:17:40 Desktop-Ubuntu mopidy[7222]: INFO     2022-10-23 23:17:40,601 [7222:MainThread] mopidy.commands
okt 23 23:17:40 Desktop-Ubuntu mopidy[7222]:   Stopping 0 instance(s) of StreamBackend
okt 23 23:17:40 Desktop-Ubuntu mopidy[7222]: DEBUG    2022-10-23 23:17:40,601 [7222:MainThread] mopidy.internal.process
okt 23 23:17:40 Desktop-Ubuntu mopidy[7222]:   Stopping 0 instance(s) of M3UBackend
okt 23 23:17:40 Desktop-Ubuntu mopidy[7222]: DEBUG    2022-10-23 23:17:40,600 [7222:MainThread] mopidy.internal.process
okt 23 23:17:40 Desktop-Ubuntu mopidy[7222]:   Stopped FileBackend (urn:uuid:2b56b341-1bdb-4f74-97f9-2e96bd4db6f2)
okt 23 23:17:40 Desktop-Ubuntu mopidy[7222]: DEBUG    2022-10-23 23:17:40,600 [7222:FileBackend-4 (_actor_loop)] pykka
okt 23 23:17:40 Desktop-Ubuntu mopidy[7222]:   Unregistered FileBackend (urn:uuid:2b56b341-1bdb-4f74-97f9-2e96bd4db6f2)
okt 23 23:17:40 Desktop-Ubuntu mopidy[7222]: DEBUG    2022-10-23 23:17:40,600 [7222:FileBackend-4 (_actor_loop)] pykka
okt 23 23:17:40 Desktop-Ubuntu mopidy[7222]:   Stopping 1 instance(s) of FileBackend
okt 23 23:17:40 Desktop-Ubuntu mopidy[7222]: DEBUG    2022-10-23 23:17:40,600 [7222:MainThread] mopidy.internal.process
okt 23 23:17:40 Desktop-Ubuntu mopidy[7222]:   Stopped YouTubeBackend (urn:uuid:73b9a645-ad18-47fe-919f-48ee8c928dd3)
okt 23 23:17:40 Desktop-Ubuntu mopidy[7222]: DEBUG    2022-10-23 23:17:40,600 [7222:YouTubeBackend-3 (_actor_loop)] pykka
okt 23 23:17:40 Desktop-Ubuntu mopidy[7222]:   Unregistered YouTubeBackend (urn:uuid:73b9a645-ad18-47fe-919f-48ee8c928dd3)
okt 23 23:17:40 Desktop-Ubuntu mopidy[7222]: DEBUG    2022-10-23 23:17:40,600 [7222:YouTubeBackend-3 (_actor_loop)] pykka
okt 23 23:17:40 Desktop-Ubuntu mopidy[7222]:   Stopping 1 instance(s) of YouTubeBackend
okt 23 23:17:40 Desktop-Ubuntu mopidy[7222]: DEBUG    2022-10-23 23:17:40,600 [7222:MainThread] mopidy.internal.process
okt 23 23:17:40 Desktop-Ubuntu mopidy[7222]:   Stopping Mopidy backends
okt 23 23:17:40 Desktop-Ubuntu mopidy[7222]: INFO     2022-10-23 23:17:40,600 [7222:MainThread] mopidy.commands
okt 23 23:17:40 Desktop-Ubuntu mopidy[7222]:   Stopping 0 instance(s) of Core
okt 23 23:17:40 Desktop-Ubuntu mopidy[7222]: DEBUG    2022-10-23 23:17:40,600 [7222:MainThread] mopidy.internal.process
okt 23 23:17:40 Desktop-Ubuntu mopidy[7222]:   Stopping Mopidy core
okt 23 23:17:40 Desktop-Ubuntu mopidy[7222]: INFO     2022-10-23 23:17:40,599 [7222:MainThread] mopidy.commands
okt 23 23:17:40 Desktop-Ubuntu mopidy[7222]:   Stopping 0 instance(s) of HttpFrontend
okt 23 23:17:40 Desktop-Ubuntu mopidy[7222]: DEBUG    2022-10-23 23:17:40,599 [7222:MainThread] mopidy.internal.process
okt 23 23:17:40 Desktop-Ubuntu mopidy[7222]:   Stopping 0 instance(s) of IrisFrontend
okt 23 23:17:40 Desktop-Ubuntu mopidy[7222]: DEBUG    2022-10-23 23:17:40,599 [7222:MainThread] mopidy.internal.process
okt 23 23:17:40 Desktop-Ubuntu mopidy[7222]:   Stopping 0 instance(s) of YouTubeCoreListener
okt 23 23:17:40 Desktop-Ubuntu mopidy[7222]: DEBUG    2022-10-23 23:17:40,599 [7222:MainThread] mopidy.internal.process
okt 23 23:17:40 Desktop-Ubuntu mopidy[7222]:   Stopping 0 instance(s) of YouTubeAutoplayer
okt 23 23:17:40 Desktop-Ubuntu mopidy[7222]: DEBUG    2022-10-23 23:17:40,599 [7222:MainThread] mopidy.internal.process
okt 23 23:17:40 Desktop-Ubuntu mopidy[7222]:   Stopping Mopidy frontends
okt 23 23:17:40 Desktop-Ubuntu mopidy[7222]: INFO     2022-10-23 23:17:40,599 [7222:MainThread] mopidy.commands
okt 23 23:17:40 Desktop-Ubuntu mopidy[7222]:   Interrupted. Exiting...
okt 23 23:17:40 Desktop-Ubuntu mopidy[7222]: INFO     2022-10-23 23:17:40,599 [7222:MainThread] mopidy.commands
okt 23 23:17:40 Desktop-Ubuntu mopidy[7222]:   Interrupted main
okt 23 23:17:40 Desktop-Ubuntu mopidy[7222]: DEBUG    2022-10-23 23:17:40,584 [7222:Audio-2 (_actor_loop)] mopidy.internal.process
okt 23 23:17:40 Desktop-Ubuntu mopidy[7222]:   Interrupting main...
okt 23 23:17:40 Desktop-Ubuntu mopidy[7222]: DEBUG    2022-10-23 23:17:40,584 [7222:Audio-2 (_actor_loop)] mopidy.internal.process
okt 23 23:17:40 Desktop-Ubuntu mopidy[7222]:   Failed to create audio output "pulsink server=127.0.0.1": gst_parse_error: no element "pulsink" (1)
okt 23 23:17:40 Desktop-Ubuntu mopidy[7222]: ERROR    2022-10-23 23:17:40,584 [7222:Audio-2 (_actor_loop)] mopidy.audio.actor
okt 23 23:17:40 Desktop-Ubuntu mopidy[7222]:   FileBackend took 2ms
okt 23 23:17:40 Desktop-Ubuntu mopidy[7222]: TRACE    2022-10-23 23:17:40,583 [7222:MainThread] mopidy.internal.timer
okt 23 23:17:40 Desktop-Ubuntu mopidy[7222]:   Starting FileBackend (urn:uuid:2b56b341-1bdb-4f74-97f9-2e96bd4db6f2)
okt 23 23:17:40 Desktop-Ubuntu mopidy[7222]: DEBUG    2022-10-23 23:17:40,581 [7222:MainThread] pykka
okt 23 23:17:40 Desktop-Ubuntu mopidy[7222]:   Registered FileBackend (urn:uuid:2b56b341-1bdb-4f74-97f9-2e96bd4db6f2)
okt 23 23:17:40 Desktop-Ubuntu mopidy[7222]: DEBUG    2022-10-23 23:17:40,581 [7222:MainThread] pykka
okt 23 23:17:40 Desktop-Ubuntu mopidy[7222]:   Failed expanding path ($XDG_MUSIC_DIR) from file/media_dirs config value.
okt 23 23:17:40 Desktop-Ubuntu mopidy[7222]: DEBUG    2022-10-23 23:17:40,580 [7222:MainThread] mopidy.file.library
okt 23 23:17:40 Desktop-Ubuntu mopidy[7222]:   YouTubeBackend took 2ms
okt 23 23:17:40 Desktop-Ubuntu mopidy[7222]: TRACE    2022-10-23 23:17:40,579 [7222:MainThread] mopidy.internal.timer
okt 23 23:17:40 Desktop-Ubuntu mopidy[7222]:   using jAPI
okt 23 23:17:40 Desktop-Ubuntu mopidy[7222]: INFO     2022-10-23 23:17:40,579 [7222:YouTubeBackend-3 (_actor_loop)] mopidy_youtube
okt 23 23:17:40 Desktop-Ubuntu mopidy[7222]:   file caching not enabled
okt 23 23:17:40 Desktop-Ubuntu mopidy[7222]: INFO     2022-10-23 23:17:40,576 [7222:YouTubeBackend-3 (_actor_loop)] mopidy_youtube
okt 23 23:17:40 Desktop-Ubuntu mopidy[7222]:   Starting YouTubeBackend (urn:uuid:73b9a645-ad18-47fe-919f-48ee8c928dd3)
okt 23 23:17:40 Desktop-Ubuntu mopidy[7222]: DEBUG    2022-10-23 23:17:40,576 [7222:MainThread] pykka
okt 23 23:17:40 Desktop-Ubuntu mopidy[7222]:   Registered YouTubeBackend (urn:uuid:73b9a645-ad18-47fe-919f-48ee8c928dd3)
okt 23 23:17:40 Desktop-Ubuntu mopidy[7222]: DEBUG    2022-10-23 23:17:40,576 [7222:MainThread] pykka
okt 23 23:17:40 Desktop-Ubuntu mopidy[7222]:   Starting Mopidy backends: YouTubeBackend, FileBackend, M3UBackend, StreamBackend
okt 23 23:17:40 Desktop-Ubuntu mopidy[7222]: INFO     2022-10-23 23:17:40,576 [7222:MainThread] mopidy.commands
okt 23 23:17:40 Desktop-Ubuntu mopidy[7222]:   Starting Audio (urn:uuid:389170fd-beed-497b-90c0-858c66d218ab)
okt 23 23:17:40 Desktop-Ubuntu mopidy[7222]: DEBUG    2022-10-23 23:17:40,574 [7222:MainThread] pykka
okt 23 23:17:40 Desktop-Ubuntu mopidy[7222]:   Registered Audio (urn:uuid:389170fd-beed-497b-90c0-858c66d218ab)
okt 23 23:17:40 Desktop-Ubuntu mopidy[7222]: DEBUG    2022-10-23 23:17:40,574 [7222:MainThread] pykka
okt 23 23:17:40 Desktop-Ubuntu mopidy[7222]:   Starting Mopidy audio
okt 23 23:17:40 Desktop-Ubuntu mopidy[7222]: INFO     2022-10-23 23:17:40,573 [7222:MainThread] mopidy.commands
okt 23 23:17:40 Desktop-Ubuntu mopidy[7222]:   Mixer volume left unchanged
okt 23 23:17:40 Desktop-Ubuntu mopidy[7222]: DEBUG    2022-10-23 23:17:40,573 [7222:MainThread] mopidy.commands
okt 23 23:17:40 Desktop-Ubuntu mopidy[7222]:   Starting SoftwareMixer (urn:uuid:eea9bd46-0086-4535-8b35-9a6839205422)
okt 23 23:17:40 Desktop-Ubuntu mopidy[7222]: DEBUG    2022-10-23 23:17:40,572 [7222:MainThread] pykka
okt 23 23:17:40 Desktop-Ubuntu mopidy[7222]:   Registered SoftwareMixer (urn:uuid:eea9bd46-0086-4535-8b35-9a6839205422)
okt 23 23:17:40 Desktop-Ubuntu mopidy[7222]: DEBUG    2022-10-23 23:17:40,572 [7222:MainThread] pykka
okt 23 23:17:40 Desktop-Ubuntu mopidy[7222]:   Starting Mopidy mixer: SoftwareMixer
okt 23 23:17:40 Desktop-Ubuntu mopidy[7222]: INFO     2022-10-23 23:17:40,572 [7222:MainThread] mopidy.commands
okt 23 23:17:40 Desktop-Ubuntu mopidy[7222]:   Available Mopidy mixers: SoftwareMixer
okt 23 23:17:40 Desktop-Ubuntu mopidy[7222]: DEBUG    2022-10-23 23:17:40,572 [7222:MainThread] mopidy.commands
okt 23 23:17:40 Desktop-Ubuntu mopidy[7222]:   Please fix the extension configuration errors or disable the extensions to silence these messages.
okt 23 23:17:40 Desktop-Ubuntu mopidy[7222]: WARNING  2022-10-23 23:17:40,490 [7222:MainThread] mopidy.__main__
okt 23 23:17:40 Desktop-Ubuntu mopidy[7222]:     soundcloud/auth_token must be set.
okt 23 23:17:40 Desktop-Ubuntu mopidy[7222]: WARNING  2022-10-23 23:17:40,490 [7222:MainThread] mopidy.__main__
okt 23 23:17:40 Desktop-Ubuntu mopidy[7222]:   Found soundcloud configuration errors. The extension has been automatically disabled:
okt 23 23:17:40 Desktop-Ubuntu mopidy[7222]: WARNING  2022-10-23 23:17:40,490 [7222:MainThread] mopidy.__main__
okt 23 23:17:40 Desktop-Ubuntu mopidy[7222]:   Disabled extensions: soundcloud
okt 23 23:17:40 Desktop-Ubuntu mopidy[7222]: INFO     2022-10-23 23:17:40,490 [7222:MainThread] mopidy.__main__
okt 23 23:17:40 Desktop-Ubuntu mopidy[7222]:   Enabled extensions: http, youtube, file, iris, stream, softwaremixer, m3u
okt 23 23:17:40 Desktop-Ubuntu mopidy[7222]: INFO     2022-10-23 23:17:40,490 [7222:MainThread] mopidy.__main__
okt 23 23:17:40 Desktop-Ubuntu mopidy[7222]:   Validating extension: stream
okt 23 23:17:40 Desktop-Ubuntu mopidy[7222]: DEBUG    2022-10-23 23:17:40,490 [7222:MainThread] mopidy.ext
okt 23 23:17:40 Desktop-Ubuntu mopidy[7222]:   Validating extension: softwaremixer
okt 23 23:17:40 Desktop-Ubuntu mopidy[7222]: DEBUG    2022-10-23 23:17:40,490 [7222:MainThread] mopidy.ext
okt 23 23:17:40 Desktop-Ubuntu mopidy[7222]:   Validating extension: m3u
okt 23 23:17:40 Desktop-Ubuntu mopidy[7222]: DEBUG    2022-10-23 23:17:40,490 [7222:MainThread] mopidy.ext
okt 23 23:17:40 Desktop-Ubuntu mopidy[7222]:   Validating extension: http
okt 23 23:17:40 Desktop-Ubuntu mopidy[7222]: DEBUG    2022-10-23 23:17:40,426 [7222:MainThread] mopidy.ext
okt 23 23:17:40 Desktop-Ubuntu mopidy[7222]:   Validating extension: file
okt 23 23:17:40 Desktop-Ubuntu mopidy[7222]: DEBUG    2022-10-23 23:17:40,426 [7222:MainThread] mopidy.ext
okt 23 23:17:40 Desktop-Ubuntu mopidy[7222]:   Validating extension: iris
okt 23 23:17:40 Desktop-Ubuntu mopidy[7222]: DEBUG    2022-10-23 23:17:40,417 [7222:MainThread] mopidy.ext
okt 23 23:17:40 Desktop-Ubuntu mopidy[7222]:   Validating extension: soundcloud
okt 23 23:17:40 Desktop-Ubuntu mopidy[7222]: DEBUG    2022-10-23 23:17:40,390 [7222:MainThread] mopidy.ext
okt 23 23:17:40 Desktop-Ubuntu mopidy[7222]:   Validating extension: youtube
okt 23 23:17:40 Desktop-Ubuntu mopidy[7222]: DEBUG    2022-10-23 23:17:40,338 [7222:MainThread] mopidy.ext
okt 23 23:17:40 Desktop-Ubuntu mopidy[7222]:   Loading config from command line options
okt 23 23:17:40 Desktop-Ubuntu mopidy[7222]: INFO     2022-10-23 23:17:40,333 [7222:MainThread] mopidy.config
okt 23 23:17:40 Desktop-Ubuntu mopidy[7222]:   Loading config from file:///etc/mopidy/mopidy.conf
okt 23 23:17:40 Desktop-Ubuntu mopidy[7222]: INFO     2022-10-23 23:17:40,333 [7222:MainThread] mopidy.config
okt 23 23:17:40 Desktop-Ubuntu mopidy[7222]:   Loading config from file:///usr/share/mopidy/conf.d/mopidy.conf
okt 23 23:17:40 Desktop-Ubuntu mopidy[7222]: INFO     2022-10-23 23:17:40,333 [7222:MainThread] mopidy.config
okt 23 23:17:40 Desktop-Ubuntu mopidy[7222]:   Loading config from builtin defaults
okt 23 23:17:40 Desktop-Ubuntu mopidy[7222]: INFO     2022-10-23 23:17:40,331 [7222:MainThread] mopidy.config
okt 23 23:17:40 Desktop-Ubuntu mopidy[7222]:   Fetching passwords from your keyring failed. Any passwords stored in the keyring will not be available. (org.freedesktop.DBus.Error.NotSupported: Unable to autolaunch a dbus-daemon without a $DISPLAY for X11)
okt 23 23:17:40 Desktop-Ubuntu mopidy[7222]: DEBUG    2022-10-23 23:17:40,331 [7222:MainThread] mopidy.config.keyring
okt 23 23:17:40 Desktop-Ubuntu mopidy[7222]:   Discovered extensions: youtube, soundcloud, iris, file, http, m3u, softwaremixer, stream
okt 23 23:17:40 Desktop-Ubuntu mopidy[7222]: DEBUG    2022-10-23 23:17:40,330 [7222:MainThread] mopidy.ext
okt 23 23:17:40 Desktop-Ubuntu mopidy[7222]:   Loaded extension: Mopidy-Stream 3.3.0
okt 23 23:17:40 Desktop-Ubuntu mopidy[7222]: DEBUG    2022-10-23 23:17:40,326 [7222:MainThread] mopidy.ext
okt 23 23:17:40 Desktop-Ubuntu mopidy[7222]:   Loading entry point: stream = mopidy.stream:Extension
okt 23 23:17:40 Desktop-Ubuntu mopidy[7222]: DEBUG    2022-10-23 23:17:40,326 [7222:MainThread] mopidy.ext
okt 23 23:17:40 Desktop-Ubuntu mopidy[7222]:   Loaded extension: Mopidy-SoftwareMixer 3.3.0
okt 23 23:17:40 Desktop-Ubuntu mopidy[7222]: DEBUG    2022-10-23 23:17:40,326 [7222:MainThread] mopidy.ext
okt 23 23:17:40 Desktop-Ubuntu mopidy[7222]:   Loading entry point: softwaremixer = mopidy.softwaremixer:Extension
okt 23 23:17:40 Desktop-Ubuntu mopidy[7222]: DEBUG    2022-10-23 23:17:40,325 [7222:MainThread] mopidy.ext
okt 23 23:17:40 Desktop-Ubuntu mopidy[7222]:   Loaded extension: Mopidy-M3U 3.3.0
okt 23 23:17:40 Desktop-Ubuntu mopidy[7222]: DEBUG    2022-10-23 23:17:40,325 [7222:MainThread] mopidy.ext
okt 23 23:17:40 Desktop-Ubuntu mopidy[7222]:   Loading entry point: m3u = mopidy.m3u:Extension
okt 23 23:17:40 Desktop-Ubuntu mopidy[7222]: DEBUG    2022-10-23 23:17:40,325 [7222:MainThread] mopidy.ext
okt 23 23:17:40 Desktop-Ubuntu mopidy[7222]:   Loaded extension: Mopidy-HTTP 3.3.0
okt 23 23:17:40 Desktop-Ubuntu mopidy[7222]: DEBUG    2022-10-23 23:17:40,325 [7222:MainThread] mopidy.ext
okt 23 23:17:40 Desktop-Ubuntu mopidy[7222]:   Loading entry point: http = mopidy.http:Extension
okt 23 23:17:40 Desktop-Ubuntu mopidy[7222]: DEBUG    2022-10-23 23:17:40,325 [7222:MainThread] mopidy.ext
okt 23 23:17:40 Desktop-Ubuntu mopidy[7222]:   Loaded extension: Mopidy-File 3.3.0
okt 23 23:17:40 Desktop-Ubuntu mopidy[7222]: DEBUG    2022-10-23 23:17:40,325 [7222:MainThread] mopidy.ext
okt 23 23:17:40 Desktop-Ubuntu mopidy[7222]:   Loading entry point: file = mopidy.file:Extension
okt 23 23:17:40 Desktop-Ubuntu mopidy[7222]: DEBUG    2022-10-23 23:17:40,324 [7222:MainThread] mopidy.ext
okt 23 23:17:40 Desktop-Ubuntu mopidy[7222]:   Loaded extension: Mopidy-Iris 3.64.1
okt 23 23:17:40 Desktop-Ubuntu mopidy[7222]: DEBUG    2022-10-23 23:17:40,322 [7222:MainThread] mopidy.ext
okt 23 23:17:40 Desktop-Ubuntu mopidy[7222]:   Loading entry point: iris = mopidy_iris:Extension
okt 23 23:17:40 Desktop-Ubuntu mopidy[7222]: DEBUG    2022-10-23 23:17:40,322 [7222:MainThread] mopidy.ext
okt 23 23:17:40 Desktop-Ubuntu mopidy[7222]:   Loaded extension: Mopidy-SoundCloud 3.0.1
okt 23 23:17:40 Desktop-Ubuntu mopidy[7222]: DEBUG    2022-10-23 23:17:40,321 [7222:MainThread] mopidy.ext
okt 23 23:17:40 Desktop-Ubuntu mopidy[7222]:   Loading entry point: soundcloud = mopidy_soundcloud:Extension
okt 23 23:17:40 Desktop-Ubuntu mopidy[7222]: DEBUG    2022-10-23 23:17:40,320 [7222:MainThread] mopidy.ext
okt 23 23:17:40 Desktop-Ubuntu mopidy[7222]:   Loaded extension: Mopidy-YouTube 3.6.1
okt 23 23:17:40 Desktop-Ubuntu mopidy[7222]: DEBUG    2022-10-23 23:17:40,320 [7222:MainThread] mopidy.ext
okt 23 23:17:40 Desktop-Ubuntu mopidy[7222]:   Loading entry point: youtube = mopidy_youtube:Extension
okt 23 23:17:40 Desktop-Ubuntu mopidy[7222]: DEBUG    2022-10-23 23:17:40,319 [7222:MainThread] mopidy.ext
okt 23 23:17:40 Desktop-Ubuntu mopidy[7222]:   Starting Mopidy 3.3.0
okt 23 23:17:40 Desktop-Ubuntu mopidy[7222]: INFO     2022-10-23 23:17:40,316 [7222:MainThread] mopidy.__main__
okt 23 23:17:40 Desktop-Ubuntu systemd[1]: Started Mopidy music server.
okt 23 23:17:40 Desktop-Ubuntu systemd[1]: Starting Mopidy music server...
okt 23 23:16:00 Desktop-Ubuntu systemd[1]: mopidy.service: Deactivated successfully.
okt 23 23:16:00 Desktop-Ubuntu mopidy[7050]:   All actors stopped.
okt 23 23:16:00 Desktop-Ubuntu mopidy[7050]: DEBUG    2022-10-23 23:16:00,931 [7050:MainThread] mopidy.internal.process
okt 23 23:16:00 Desktop-Ubuntu mopidy[7050]:   Stopped SoftwareMixer (urn:uuid:fb1fff70-3d7d-47ed-b6f8-bc72a3836bd6)
okt 23 23:16:00 Desktop-Ubuntu mopidy[7050]: DEBUG    2022-10-23 23:16:00,931 [7050:SoftwareMixer-1 (_actor_loop)] pykka
okt 23 23:16:00 Desktop-Ubuntu mopidy[7050]:   Unregistered SoftwareMixer (urn:uuid:fb1fff70-3d7d-47ed-b6f8-bc72a3836bd6)
okt 23 23:16:00 Desktop-Ubuntu mopidy[7050]: DEBUG    2022-10-23 23:16:00,931 [7050:SoftwareMixer-1 (_actor_loop)] pykka
okt 23 23:16:00 Desktop-Ubuntu mopidy[7050]:   Stopping 1 instance(s) of SoftwareMixer
okt 23 23:16:00 Desktop-Ubuntu mopidy[7050]: DEBUG    2022-10-23 23:16:00,931 [7050:MainThread] mopidy.internal.process
okt 23 23:16:00 Desktop-Ubuntu mopidy[7050]:   Stopping Mopidy mixer
okt 23 23:16:00 Desktop-Ubuntu mopidy[7050]: INFO     2022-10-23 23:16:00,931 [7050:MainThread] mopidy.commands
okt 23 23:16:00 Desktop-Ubuntu mopidy[7050]:   Stopped Audio (urn:uuid:08a16f2d-63fb-4e56-a61d-9dc39127598b)
okt 23 23:16:00 Desktop-Ubuntu mopidy[7050]: DEBUG    2022-10-23 23:16:00,930 [7050:Audio-2 (_actor_loop)] pykka
okt 23 23:16:00 Desktop-Ubuntu mopidy[7050]:   Unregistered Audio (urn:uuid:08a16f2d-63fb-4e56-a61d-9dc39127598b)
okt 23 23:16:00 Desktop-Ubuntu mopidy[7050]: DEBUG    2022-10-23 23:16:00,930 [7050:Audio-2 (_actor_loop)] pykka
okt 23 23:16:00 Desktop-Ubuntu mopidy[7050]:   Stopping 1 instance(s) of Audio
okt 23 23:16:00 Desktop-Ubuntu mopidy[7050]: DEBUG    2022-10-23 23:16:00,929 [7050:MainThread] mopidy.internal.process
okt 23 23:16:00 Desktop-Ubuntu mopidy[7050]:   Stopping Mopidy audio
okt 23 23:16:00 Desktop-Ubuntu mopidy[7050]: INFO     2022-10-23 23:16:00,928 [7050:MainThread] mopidy.commands
okt 23 23:16:00 Desktop-Ubuntu mopidy[7050]:   Stopping 0 instance(s) of StreamBackend
okt 23 23:16:00 Desktop-Ubuntu mopidy[7050]: DEBUG    2022-10-23 23:16:00,928 [7050:MainThread] mopidy.internal.process
okt 23 23:16:00 Desktop-Ubuntu mopidy[7050]:   Stopping 0 instance(s) of M3UBackend
okt 23 23:16:00 Desktop-Ubuntu mopidy[7050]: DEBUG    2022-10-23 23:16:00,928 [7050:MainThread] mopidy.internal.process
okt 23 23:16:00 Desktop-Ubuntu mopidy[7050]:   Stopping 0 instance(s) of FileBackend
okt 23 23:16:00 Desktop-Ubuntu mopidy[7050]: DEBUG    2022-10-23 23:16:00,928 [7050:MainThread] mopidy.internal.process
okt 23 23:16:00 Desktop-Ubuntu mopidy[7050]:   Stopped YouTubeBackend (urn:uuid:b2d2e7ba-0143-4a02-aaf4-459d3cca8c96)
okt 23 23:16:00 Desktop-Ubuntu mopidy[7050]: DEBUG    2022-10-23 23:16:00,928 [7050:YouTubeBackend-3 (_actor_loop)] pykka
okt 23 23:16:00 Desktop-Ubuntu mopidy[7050]:   Unregistered YouTubeBackend (urn:uuid:b2d2e7ba-0143-4a02-aaf4-459d3cca8c96)
okt 23 23:16:00 Desktop-Ubuntu mopidy[7050]: DEBUG    2022-10-23 23:16:00,928 [7050:YouTubeBackend-3 (_actor_loop)] pykka
okt 23 23:16:00 Desktop-Ubuntu mopidy[7050]:   Stopping 1 instance(s) of YouTubeBackend
okt 23 23:16:00 Desktop-Ubuntu mopidy[7050]: DEBUG    2022-10-23 23:16:00,928 [7050:MainThread] mopidy.internal.process
okt 23 23:16:00 Desktop-Ubuntu mopidy[7050]:   Stopping Mopidy backends
okt 23 23:16:00 Desktop-Ubuntu mopidy[7050]: INFO     2022-10-23 23:16:00,928 [7050:MainThread] mopidy.commands
okt 23 23:16:00 Desktop-Ubuntu mopidy[7050]:   Stopping 0 instance(s) of Core
okt 23 23:16:00 Desktop-Ubuntu mopidy[7050]: DEBUG    2022-10-23 23:16:00,927 [7050:MainThread] mopidy.internal.process
okt 23 23:16:00 Desktop-Ubuntu mopidy[7050]:   Stopping Mopidy core
okt 23 23:16:00 Desktop-Ubuntu mopidy[7050]: INFO     2022-10-23 23:16:00,927 [7050:MainThread] mopidy.commands
okt 23 23:16:00 Desktop-Ubuntu mopidy[7050]:   Stopping 0 instance(s) of HttpFrontend
okt 23 23:16:00 Desktop-Ubuntu mopidy[7050]: DEBUG    2022-10-23 23:16:00,927 [7050:MainThread] mopidy.internal.process
okt 23 23:16:00 Desktop-Ubuntu mopidy[7050]:   Stopping 0 instance(s) of IrisFrontend
okt 23 23:16:00 Desktop-Ubuntu mopidy[7050]: DEBUG    2022-10-23 23:16:00,927 [7050:MainThread] mopidy.internal.process
okt 23 23:16:00 Desktop-Ubuntu mopidy[7050]:   Stopping 0 instance(s) of YouTubeCoreListener
okt 23 23:16:00 Desktop-Ubuntu mopidy[7050]: DEBUG    2022-10-23 23:16:00,926 [7050:MainThread] mopidy.internal.process
okt 23 23:16:00 Desktop-Ubuntu mopidy[7050]:   Stopping 0 instance(s) of YouTubeAutoplayer
okt 23 23:16:00 Desktop-Ubuntu mopidy[7050]: DEBUG    2022-10-23 23:16:00,926 [7050:MainThread] mopidy.internal.process
okt 23 23:16:00 Desktop-Ubuntu mopidy[7050]:   Stopping Mopidy frontends
okt 23 23:16:00 Desktop-Ubuntu mopidy[7050]: INFO     2022-10-23 23:16:00,926 [7050:MainThread] mopidy.commands
okt 23 23:16:00 Desktop-Ubuntu mopidy[7050]:   Interrupted. Exiting...
okt 23 23:16:00 Desktop-Ubuntu mopidy[7050]: INFO     2022-10-23 23:16:00,926 [7050:MainThread] mopidy.commands
okt 23 23:16:00 Desktop-Ubuntu mopidy[7050]:   Interrupted main
okt 23 23:16:00 Desktop-Ubuntu mopidy[7050]: DEBUG    2022-10-23 23:16:00,926 [7050:Audio-2 (_actor_loop)] mopidy.internal.process
okt 23 23:16:00 Desktop-Ubuntu mopidy[7050]:   Interrupting main...
okt 23 23:16:00 Desktop-Ubuntu mopidy[7050]: DEBUG    2022-10-23 23:16:00,925 [7050:Audio-2 (_actor_loop)] mopidy.internal.process
okt 23 23:16:00 Desktop-Ubuntu mopidy[7050]:   Failed expanding path ($XDG_MUSIC_DIR) from file/media_dirs config value.
okt 23 23:16:00 Desktop-Ubuntu mopidy[7050]: DEBUG    2022-10-23 23:16:00,925 [7050:MainThread] mopidy.file.library
okt 23 23:16:00 Desktop-Ubuntu mopidy[7050]:   Failed to create audio output "pulsink server=127.0.0.1": gst_parse_error: no element "pulsink" (1)
okt 23 23:16:00 Desktop-Ubuntu mopidy[7050]: ERROR    2022-10-23 23:16:00,925 [7050:Audio-2 (_actor_loop)] mopidy.audio.actor
okt 23 23:16:00 Desktop-Ubuntu mopidy[7050]:   using jAPI
okt 23 23:16:00 Desktop-Ubuntu mopidy[7050]: INFO     2022-10-23 23:16:00,924 [7050:YouTubeBackend-3 (_actor_loop)] mopidy_youtube
okt 23 23:16:00 Desktop-Ubuntu mopidy[7050]:   YouTubeBackend took 4ms
okt 23 23:16:00 Desktop-Ubuntu mopidy[7050]: TRACE    2022-10-23 23:16:00,924 [7050:MainThread] mopidy.internal.timer
okt 23 23:16:00 Desktop-Ubuntu mopidy[7050]:   file caching not enabled
okt 23 23:16:00 Desktop-Ubuntu mopidy[7050]: INFO     2022-10-23 23:16:00,922 [7050:YouTubeBackend-3 (_actor_loop)] mopidy_youtube
okt 23 23:16:00 Desktop-Ubuntu mopidy[7050]:   Starting YouTubeBackend (urn:uuid:b2d2e7ba-0143-4a02-aaf4-459d3cca8c96)
okt 23 23:16:00 Desktop-Ubuntu mopidy[7050]: DEBUG    2022-10-23 23:16:00,920 [7050:MainThread] pykka
okt 23 23:16:00 Desktop-Ubuntu mopidy[7050]:   Registered YouTubeBackend (urn:uuid:b2d2e7ba-0143-4a02-aaf4-459d3cca8c96)
okt 23 23:16:00 Desktop-Ubuntu mopidy[7050]: DEBUG    2022-10-23 23:16:00,920 [7050:MainThread] pykka
okt 23 23:16:00 Desktop-Ubuntu mopidy[7050]:   Starting Mopidy backends: YouTubeBackend, FileBackend, M3UBackend, StreamBackend
okt 23 23:16:00 Desktop-Ubuntu mopidy[7050]: INFO     2022-10-23 23:16:00,920 [7050:MainThread] mopidy.commands
okt 23 23:16:00 Desktop-Ubuntu mopidy[7050]:   Starting Audio (urn:uuid:08a16f2d-63fb-4e56-a61d-9dc39127598b)
okt 23 23:16:00 Desktop-Ubuntu mopidy[7050]: DEBUG    2022-10-23 23:16:00,919 [7050:MainThread] pykka
okt 23 23:16:00 Desktop-Ubuntu mopidy[7050]:   Registered Audio (urn:uuid:08a16f2d-63fb-4e56-a61d-9dc39127598b)
okt 23 23:16:00 Desktop-Ubuntu mopidy[7050]: DEBUG    2022-10-23 23:16:00,919 [7050:MainThread] pykka
okt 23 23:16:00 Desktop-Ubuntu mopidy[7050]:   Starting Mopidy audio
okt 23 23:16:00 Desktop-Ubuntu mopidy[7050]: INFO     2022-10-23 23:16:00,918 [7050:MainThread] mopidy.commands
okt 23 23:16:00 Desktop-Ubuntu mopidy[7050]:   Mixer volume left unchanged
okt 23 23:16:00 Desktop-Ubuntu mopidy[7050]: DEBUG    2022-10-23 23:16:00,918 [7050:MainThread] mopidy.commands
okt 23 23:16:00 Desktop-Ubuntu mopidy[7050]:   Starting SoftwareMixer (urn:uuid:fb1fff70-3d7d-47ed-b6f8-bc72a3836bd6)
okt 23 23:16:00 Desktop-Ubuntu mopidy[7050]: DEBUG    2022-10-23 23:16:00,917 [7050:MainThread] pykka
okt 23 23:16:00 Desktop-Ubuntu mopidy[7050]:   Registered SoftwareMixer (urn:uuid:fb1fff70-3d7d-47ed-b6f8-bc72a3836bd6)
okt 23 23:16:00 Desktop-Ubuntu mopidy[7050]: DEBUG    2022-10-23 23:16:00,917 [7050:MainThread] pykka
okt 23 23:16:00 Desktop-Ubuntu mopidy[7050]:   Starting Mopidy mixer: SoftwareMixer
okt 23 23:16:00 Desktop-Ubuntu mopidy[7050]: INFO     2022-10-23 23:16:00,917 [7050:MainThread] mopidy.commands
okt 23 23:16:00 Desktop-Ubuntu mopidy[7050]:   Available Mopidy mixers: SoftwareMixer
okt 23 23:16:00 Desktop-Ubuntu mopidy[7050]: DEBUG    2022-10-23 23:16:00,917 [7050:MainThread] mopidy.commands
okt 23 23:16:00 Desktop-Ubuntu mopidy[7050]:   Please fix the extension configuration errors or disable the extensions to silence these messages.
okt 23 23:16:00 Desktop-Ubuntu mopidy[7050]: WARNING  2022-10-23 23:16:00,837 [7050:MainThread] mopidy.__main__
okt 23 23:16:00 Desktop-Ubuntu mopidy[7050]:     soundcloud/auth_token must be set.
okt 23 23:16:00 Desktop-Ubuntu mopidy[7050]: WARNING  2022-10-23 23:16:00,837 [7050:MainThread] mopidy.__main__
okt 23 23:16:00 Desktop-Ubuntu mopidy[7050]:   Found soundcloud configuration errors. The extension has been automatically disabled:
okt 23 23:16:00 Desktop-Ubuntu mopidy[7050]: WARNING  2022-10-23 23:16:00,837 [7050:MainThread] mopidy.__main__
okt 23 23:16:00 Desktop-Ubuntu mopidy[7050]:   Disabled extensions: soundcloud
okt 23 23:16:00 Desktop-Ubuntu mopidy[7050]: INFO     2022-10-23 23:16:00,837 [7050:MainThread] mopidy.__main__
okt 23 23:16:00 Desktop-Ubuntu mopidy[7050]:   Enabled extensions: file, youtube, iris, http, softwaremixer, stream, m3u
okt 23 23:16:00 Desktop-Ubuntu mopidy[7050]: INFO     2022-10-23 23:16:00,836 [7050:MainThread] mopidy.__main__
okt 23 23:16:00 Desktop-Ubuntu mopidy[7050]:   Validating extension: stream
okt 23 23:16:00 Desktop-Ubuntu mopidy[7050]: DEBUG    2022-10-23 23:16:00,836 [7050:MainThread] mopidy.ext
okt 23 23:16:00 Desktop-Ubuntu mopidy[7050]:   Validating extension: softwaremixer
okt 23 23:16:00 Desktop-Ubuntu mopidy[7050]: DEBUG    2022-10-23 23:16:00,836 [7050:MainThread] mopidy.ext
okt 23 23:16:00 Desktop-Ubuntu mopidy[7050]:   Validating extension: m3u
okt 23 23:16:00 Desktop-Ubuntu mopidy[7050]: DEBUG    2022-10-23 23:16:00,836 [7050:MainThread] mopidy.ext
okt 23 23:16:00 Desktop-Ubuntu mopidy[7050]:   Validating extension: http
okt 23 23:16:00 Desktop-Ubuntu mopidy[7050]: DEBUG    2022-10-23 23:16:00,771 [7050:MainThread] mopidy.ext
okt 23 23:16:00 Desktop-Ubuntu mopidy[7050]:   Validating extension: file
okt 23 23:16:00 Desktop-Ubuntu mopidy[7050]: DEBUG    2022-10-23 23:16:00,771 [7050:MainThread] mopidy.ext
okt 23 23:16:00 Desktop-Ubuntu mopidy[7050]:   Validating extension: iris
okt 23 23:16:00 Desktop-Ubuntu mopidy[7050]: DEBUG    2022-10-23 23:16:00,762 [7050:MainThread] mopidy.ext
okt 23 23:16:00 Desktop-Ubuntu mopidy[7050]:   Validating extension: soundcloud
okt 23 23:16:00 Desktop-Ubuntu mopidy[7050]: DEBUG    2022-10-23 23:16:00,736 [7050:MainThread] mopidy.ext
okt 23 23:16:00 Desktop-Ubuntu mopidy[7050]:   Validating extension: youtube
okt 23 23:16:00 Desktop-Ubuntu mopidy[7050]: DEBUG    2022-10-23 23:16:00,685 [7050:MainThread] mopidy.ext
okt 23 23:16:00 Desktop-Ubuntu mopidy[7050]:   Loading config from command line options
okt 23 23:16:00 Desktop-Ubuntu mopidy[7050]: INFO     2022-10-23 23:16:00,680 [7050:MainThread] mopidy.config
okt 23 23:16:00 Desktop-Ubuntu mopidy[7050]:   Loading config from file:///etc/mopidy/mopidy.conf
okt 23 23:16:00 Desktop-Ubuntu mopidy[7050]: INFO     2022-10-23 23:16:00,680 [7050:MainThread] mopidy.config
okt 23 23:16:00 Desktop-Ubuntu mopidy[7050]:   Loading config from file:///usr/share/mopidy/conf.d/mopidy.conf
okt 23 23:16:00 Desktop-Ubuntu mopidy[7050]: INFO     2022-10-23 23:16:00,634 [7050:MainThread] mopidy.config
okt 23 23:16:00 Desktop-Ubuntu mopidy[7050]:   Loading config from builtin defaults
okt 23 23:16:00 Desktop-Ubuntu mopidy[7050]: INFO     2022-10-23 23:16:00,609 [7050:MainThread] mopidy.config
okt 23 23:16:00 Desktop-Ubuntu mopidy[7050]:   Fetching passwords from your keyring failed. Any passwords stored in the keyring will not be available. (org.freedesktop.DBus.Error.NotSupported: Unable to autolaunch a dbus-daemon without a $DISPLAY for X11)
okt 23 23:16:00 Desktop-Ubuntu mopidy[7050]: DEBUG    2022-10-23 23:16:00,608 [7050:MainThread] mopidy.config.keyring
okt 23 23:16:00 Desktop-Ubuntu mopidy[7050]:   Discovered extensions: youtube, soundcloud, iris, file, http, m3u, softwaremixer, stream
okt 23 23:16:00 Desktop-Ubuntu mopidy[7050]: DEBUG    2022-10-23 23:16:00,607 [7050:MainThread] mopidy.ext
okt 23 23:16:00 Desktop-Ubuntu mopidy[7050]:   Loaded extension: Mopidy-Stream 3.3.0
okt 23 23:16:00 Desktop-Ubuntu mopidy[7050]: DEBUG    2022-10-23 23:16:00,603 [7050:MainThread] mopidy.ext
okt 23 23:16:00 Desktop-Ubuntu mopidy[7050]:   Loading entry point: stream = mopidy.stream:Extension
okt 23 23:16:00 Desktop-Ubuntu mopidy[7050]: DEBUG    2022-10-23 23:16:00,603 [7050:MainThread] mopidy.ext
okt 23 23:16:00 Desktop-Ubuntu mopidy[7050]:   Loaded extension: Mopidy-SoftwareMixer 3.3.0
okt 23 23:16:00 Desktop-Ubuntu mopidy[7050]: DEBUG    2022-10-23 23:16:00,603 [7050:MainThread] mopidy.ext
okt 23 23:16:00 Desktop-Ubuntu mopidy[7050]:   Loading entry point: softwaremixer = mopidy.softwaremixer:Extension
okt 23 23:16:00 Desktop-Ubuntu mopidy[7050]: DEBUG    2022-10-23 23:16:00,603 [7050:MainThread] mopidy.ext
okt 23 23:16:00 Desktop-Ubuntu mopidy[7050]:   Loaded extension: Mopidy-M3U 3.3.0
okt 23 23:16:00 Desktop-Ubuntu mopidy[7050]: DEBUG    2022-10-23 23:16:00,602 [7050:MainThread] mopidy.ext
okt 23 23:16:00 Desktop-Ubuntu mopidy[7050]:   Loading entry point: m3u = mopidy.m3u:Extension
okt 23 23:16:00 Desktop-Ubuntu mopidy[7050]: DEBUG    2022-10-23 23:16:00,602 [7050:MainThread] mopidy.ext
okt 23 23:16:00 Desktop-Ubuntu mopidy[7050]:   Loaded extension: Mopidy-HTTP 3.3.0
okt 23 23:16:00 Desktop-Ubuntu mopidy[7050]: DEBUG    2022-10-23 23:16:00,602 [7050:MainThread] mopidy.ext
okt 23 23:16:00 Desktop-Ubuntu mopidy[7050]:   Loading entry point: http = mopidy.http:Extension
okt 23 23:16:00 Desktop-Ubuntu mopidy[7050]: DEBUG    2022-10-23 23:16:00,602 [7050:MainThread] mopidy.ext
okt 23 23:16:00 Desktop-Ubuntu mopidy[7050]:   Loaded extension: Mopidy-File 3.3.0
okt 23 23:16:00 Desktop-Ubuntu mopidy[7050]: DEBUG    2022-10-23 23:16:00,602 [7050:MainThread] mopidy.ext
okt 23 23:16:00 Desktop-Ubuntu mopidy[7050]:   Loading entry point: file = mopidy.file:Extension
okt 23 23:16:00 Desktop-Ubuntu mopidy[7050]: DEBUG    2022-10-23 23:16:00,601 [7050:MainThread] mopidy.ext
okt 23 23:16:00 Desktop-Ubuntu mopidy[7050]:   Loaded extension: Mopidy-Iris 3.64.1
okt 23 23:16:00 Desktop-Ubuntu mopidy[7050]: DEBUG    2022-10-23 23:16:00,599 [7050:MainThread] mopidy.ext
okt 23 23:16:00 Desktop-Ubuntu mopidy[7050]:   Loading entry point: iris = mopidy_iris:Extension
okt 23 23:16:00 Desktop-Ubuntu mopidy[7050]: DEBUG    2022-10-23 23:16:00,599 [7050:MainThread] mopidy.ext
okt 23 23:16:00 Desktop-Ubuntu mopidy[7050]:   Loaded extension: Mopidy-SoundCloud 3.0.1
okt 23 23:16:00 Desktop-Ubuntu mopidy[7050]: DEBUG    2022-10-23 23:16:00,598 [7050:MainThread] mopidy.ext
okt 23 23:16:00 Desktop-Ubuntu mopidy[7050]:   Loading entry point: soundcloud = mopidy_soundcloud:Extension
okt 23 23:16:00 Desktop-Ubuntu mopidy[7050]: DEBUG    2022-10-23 23:16:00,597 [7050:MainThread] mopidy.ext
okt 23 23:16:00 Desktop-Ubuntu mopidy[7050]:   Loaded extension: Mopidy-YouTube 3.6.1
okt 23 23:16:00 Desktop-Ubuntu mopidy[7050]: DEBUG    2022-10-23 23:16:00,597 [7050:MainThread] mopidy.ext
okt 23 23:16:00 Desktop-Ubuntu mopidy[7050]:   Loading entry point: youtube = mopidy_youtube:Extension
okt 23 23:16:00 Desktop-Ubuntu mopidy[7050]: DEBUG    2022-10-23 23:16:00,595 [7050:MainThread] mopidy.ext
okt 23 23:16:00 Desktop-Ubuntu mopidy[7050]:   Starting Mopidy 3.3.0
okt 23 23:16:00 Desktop-Ubuntu mopidy[7050]: INFO     2022-10-23 23:16:00,593 [7050:MainThread] mopidy.__main__
okt 23 23:15:59 Desktop-Ubuntu systemd[1]: Started Mopidy music server.
okt 23 23:15:59 Desktop-Ubuntu systemd[1]: Starting Mopidy music server...
-- Boot 3d4a85103b9e4643b43212d01bcc93dc --
okt 09 22:53:46 Desktop-Ubuntu systemd[1]: Stopped Mopidy music server.
okt 09 22:53:46 Desktop-Ubuntu systemd[1]: mopidy.service: Failed with result 'timeout'.
okt 09 22:53:46 Desktop-Ubuntu systemd[1]: mopidy.service: Main process exited, code=killed, status=9/KILL
okt 09 22:53:46 Desktop-Ubuntu systemd[1]: mopidy.service: Killing process 8268 (n/a) with signal SIGKILL.
okt 09 22:53:46 Desktop-Ubuntu systemd[1]: mopidy.service: Killing process 8267 (n/a) with signal SIGKILL.
okt 09 22:53:46 Desktop-Ubuntu systemd[1]: mopidy.service: Killing process 8266 (mopidy) with signal SIGKILL.
okt 09 22:53:46 Desktop-Ubuntu systemd[1]: mopidy.service: Killing process 8265 (gmain) with signal SIGKILL.
okt 09 22:53:46 Desktop-Ubuntu systemd[1]: mopidy.service: Killing process 8262 (mopidy) with signal SIGKILL.
okt 09 22:53:46 Desktop-Ubuntu systemd[1]: mopidy.service: State 'stop-sigterm' timed out. Killing.
okt 09 22:52:15 Desktop-Ubuntu systemd[1]: Stopping Mopidy music server...
okt 09 15:28:24 Desktop-Ubuntu mopidy[8262]:   Stopping 1 instance(s) of FileBackend
okt 09 15:28:24 Desktop-Ubuntu mopidy[8262]: DEBUG    2022-10-09 15:28:24,718 [8262:MainThread] mopidy.internal.process
okt 09 15:28:24 Desktop-Ubuntu mopidy[8262]:   Stopping Mopidy backends
okt 09 15:28:24 Desktop-Ubuntu mopidy[8262]: INFO     2022-10-09 15:28:24,718 [8262:MainThread] mopidy.commands
okt 09 15:28:24 Desktop-Ubuntu mopidy[8262]:   Stopping 0 instance(s) of Core
okt 09 15:28:24 Desktop-Ubuntu mopidy[8262]: DEBUG    2022-10-09 15:28:24,718 [8262:MainThread] mopidy.internal.process
okt 09 15:28:24 Desktop-Ubuntu mopidy[8262]:   Stopping Mopidy core
okt 09 15:28:24 Desktop-Ubuntu mopidy[8262]: INFO     2022-10-09 15:28:24,718 [8262:MainThread] mopidy.commands
okt 09 15:28:24 Desktop-Ubuntu mopidy[8262]:   Stopping 0 instance(s) of HttpFrontend
okt 09 15:28:24 Desktop-Ubuntu mopidy[8262]: DEBUG    2022-10-09 15:28:24,718 [8262:MainThread] mopidy.internal.process
okt 09 15:28:24 Desktop-Ubuntu mopidy[8262]:   Stopping 0 instance(s) of QueueManagerFrontend
okt 09 15:28:24 Desktop-Ubuntu mopidy[8262]: DEBUG    2022-10-09 15:28:24,718 [8262:MainThread] mopidy.internal.process
okt 09 15:28:24 Desktop-Ubuntu mopidy[8262]:   Stopping Mopidy frontends
okt 09 15:28:24 Desktop-Ubuntu mopidy[8262]: INFO     2022-10-09 15:28:24,718 [8262:MainThread] mopidy.commands
okt 09 15:28:24 Desktop-Ubuntu mopidy[8262]:   Interrupted. Exiting...
okt 09 15:28:24 Desktop-Ubuntu mopidy[8262]: INFO     2022-10-09 15:28:24,717 [8262:MainThread] mopidy.commands
okt 09 15:28:24 Desktop-Ubuntu mopidy[8262]:   Interrupting main...
okt 09 15:28:24 Desktop-Ubuntu mopidy[8262]: DEBUG    2022-10-09 15:28:24,717 [8262:Audio-2 (_actor_loop)] mopidy.internal.process
okt 09 15:28:24 Desktop-Ubuntu mopidy[8262]:   Registered M3UBackend (urn:uuid:1c479e6f-4d56-44e1-9f45-e803b1f5ca5a)
okt 09 15:28:24 Desktop-Ubuntu mopidy[8262]: DEBUG    2022-10-09 15:28:24,717 [8262:MainThread] pykka
okt 09 15:28:24 Desktop-Ubuntu mopidy[8262]:   Failed to create audio output "pulsink server=127.0.0.1": gst_parse_error: no element "pulsink" (1)
okt 09 15:28:24 Desktop-Ubuntu mopidy[8262]: ERROR    2022-10-09 15:28:24,717 [8262:Audio-2 (_actor_loop)] mopidy.audio.actor
okt 09 15:28:24 Desktop-Ubuntu mopidy[8262]:   Creating dir file:///var/lib/mopidy/.local/share/mopidy/m3u
okt 09 15:28:24 Desktop-Ubuntu mopidy[8262]: INFO     2022-10-09 15:28:24,717 [8262:MainThread] mopidy.internal.path
okt 09 15:28:24 Desktop-Ubuntu mopidy[8262]:   FileBackend took 3ms
okt 09 15:28:24 Desktop-Ubuntu mopidy[8262]: TRACE    2022-10-09 15:28:24,716 [8262:MainThread] mopidy.internal.timer
okt 09 15:28:24 Desktop-Ubuntu mopidy[8262]:   Starting FileBackend (urn:uuid:3792d07b-2f7e-496b-9b9a-dbc29d69043d)
okt 09 15:28:24 Desktop-Ubuntu mopidy[8262]: DEBUG    2022-10-09 15:28:24,713 [8262:MainThread] pykka
okt 09 15:28:24 Desktop-Ubuntu mopidy[8262]:   Registered FileBackend (urn:uuid:3792d07b-2f7e-496b-9b9a-dbc29d69043d)
okt 09 15:28:24 Desktop-Ubuntu mopidy[8262]: DEBUG    2022-10-09 15:28:24,713 [8262:MainThread] pykka
okt 09 15:28:24 Desktop-Ubuntu mopidy[8262]:   Failed expanding path ($XDG_MUSIC_DIR) from file/media_dirs config value.
okt 09 15:28:24 Desktop-Ubuntu mopidy[8262]: DEBUG    2022-10-09 15:28:24,712 [8262:MainThread] mopidy.file.library
okt 09 15:28:24 Desktop-Ubuntu mopidy[8262]:   Starting Mopidy backends: FileBackend, M3UBackend, StreamBackend
okt 09 15:28:24 Desktop-Ubuntu mopidy[8262]: INFO     2022-10-09 15:28:24,712 [8262:MainThread] mopidy.commands
okt 09 15:28:24 Desktop-Ubuntu mopidy[8262]:   Starting Audio (urn:uuid:42c6cf27-b010-45af-9d48-24188b47d802)
okt 09 15:28:24 Desktop-Ubuntu mopidy[8262]: DEBUG    2022-10-09 15:28:24,711 [8262:MainThread] pykka
okt 09 15:28:24 Desktop-Ubuntu mopidy[8262]:   Registered Audio (urn:uuid:42c6cf27-b010-45af-9d48-24188b47d802)
okt 09 15:28:24 Desktop-Ubuntu mopidy[8262]: DEBUG    2022-10-09 15:28:24,711 [8262:MainThread] pykka
okt 09 15:28:24 Desktop-Ubuntu mopidy[8262]:   Starting Mopidy audio
okt 09 15:28:24 Desktop-Ubuntu mopidy[8262]: INFO     2022-10-09 15:28:24,711 [8262:MainThread] mopidy.commands
okt 09 15:28:24 Desktop-Ubuntu mopidy[8262]:   Mixer volume left unchanged
okt 09 15:28:24 Desktop-Ubuntu mopidy[8262]: DEBUG    2022-10-09 15:28:24,711 [8262:MainThread] mopidy.commands
okt 09 15:28:24 Desktop-Ubuntu mopidy[8262]:   Starting SoftwareMixer (urn:uuid:6ec39ac7-9c5e-4e90-a3d3-56601e9a4478)
okt 09 15:28:24 Desktop-Ubuntu mopidy[8262]: DEBUG    2022-10-09 15:28:24,710 [8262:MainThread] pykka
okt 09 15:28:24 Desktop-Ubuntu mopidy[8262]:   Registered SoftwareMixer (urn:uuid:6ec39ac7-9c5e-4e90-a3d3-56601e9a4478)
okt 09 15:28:24 Desktop-Ubuntu mopidy[8262]: DEBUG    2022-10-09 15:28:24,710 [8262:MainThread] pykka
okt 09 15:28:24 Desktop-Ubuntu mopidy[8262]:   Starting Mopidy mixer: SoftwareMixer
okt 09 15:28:24 Desktop-Ubuntu mopidy[8262]: INFO     2022-10-09 15:28:24,709 [8262:MainThread] mopidy.commands
okt 09 15:28:24 Desktop-Ubuntu mopidy[8262]:   Available Mopidy mixers: SoftwareMixer
okt 09 15:28:24 Desktop-Ubuntu mopidy[8262]: DEBUG    2022-10-09 15:28:24,709 [8262:MainThread] mopidy.commands
okt 09 15:28:24 Desktop-Ubuntu mopidy[8262]:   Setup Mopify
okt 09 15:28:24 Desktop-Ubuntu mopidy[8262]: INFO     2022-10-09 15:28:24,632 [8262:MainThread] mopify
okt 09 15:28:24 Desktop-Ubuntu mopidy[8262]:   Please fix the extension configuration errors or disable the extensions to silence these messages.
okt 09 15:28:24 Desktop-Ubuntu mopidy[8262]: WARNING  2022-10-09 15:28:24,632 [8262:MainThread] mopidy.__main__
okt 09 15:28:24 Desktop-Ubuntu mopidy[8262]:     spotify/client_secret must be set.
okt 09 15:28:24 Desktop-Ubuntu mopidy[8262]: WARNING  2022-10-09 15:28:24,632 [8262:MainThread] mopidy.__main__
okt 09 15:28:24 Desktop-Ubuntu mopidy[8262]:     spotify/client_id must be set.
okt 09 15:28:24 Desktop-Ubuntu mopidy[8262]: WARNING  2022-10-09 15:28:24,632 [8262:MainThread] mopidy.__main__
okt 09 15:28:24 Desktop-Ubuntu mopidy[8262]:     spotify/password must be set.
okt 09 15:28:24 Desktop-Ubuntu mopidy[8262]: WARNING  2022-10-09 15:28:24,632 [8262:MainThread] mopidy.__main__
okt 09 15:28:24 Desktop-Ubuntu mopidy[8262]:     spotify/username must be set.
okt 09 15:28:24 Desktop-Ubuntu mopidy[8262]: WARNING  2022-10-09 15:28:24,632 [8262:MainThread] mopidy.__main__
okt 09 15:28:24 Desktop-Ubuntu mopidy[8262]:   Found spotify configuration errors. The extension has been automatically disabled:
okt 09 15:28:24 Desktop-Ubuntu mopidy[8262]: WARNING  2022-10-09 15:28:24,632 [8262:MainThread] mopidy.__main__
okt 09 15:28:24 Desktop-Ubuntu mopidy[8262]:   Disabled extensions: spotify
okt 09 15:28:24 Desktop-Ubuntu mopidy[8262]: INFO     2022-10-09 15:28:24,632 [8262:MainThread] mopidy.__main__
okt 09 15:28:24 Desktop-Ubuntu mopidy[8262]:   Enabled extensions: stream, file, m3u, mopify, http, softwaremixer
okt 09 15:28:24 Desktop-Ubuntu mopidy[8262]: INFO     2022-10-09 15:28:24,631 [8262:MainThread] mopidy.__main__
okt 09 15:28:24 Desktop-Ubuntu mopidy[8262]:   Validating extension: stream
okt 09 15:28:24 Desktop-Ubuntu mopidy[8262]: DEBUG    2022-10-09 15:28:24,631 [8262:MainThread] mopidy.ext
okt 09 15:28:24 Desktop-Ubuntu mopidy[8262]:   Validating extension: softwaremixer
okt 09 15:28:24 Desktop-Ubuntu mopidy[8262]: DEBUG    2022-10-09 15:28:24,631 [8262:MainThread] mopidy.ext
okt 09 15:28:24 Desktop-Ubuntu mopidy[8262]:   Validating extension: m3u
okt 09 15:28:24 Desktop-Ubuntu mopidy[8262]: DEBUG    2022-10-09 15:28:24,631 [8262:MainThread] mopidy.ext
okt 09 15:28:24 Desktop-Ubuntu mopidy[8262]:   Validating extension: http
okt 09 15:28:24 Desktop-Ubuntu mopidy[8262]: DEBUG    2022-10-09 15:28:24,631 [8262:MainThread] mopidy.ext
okt 09 15:28:24 Desktop-Ubuntu mopidy[8262]:   Validating extension: file
okt 09 15:28:24 Desktop-Ubuntu mopidy[8262]: DEBUG    2022-10-09 15:28:24,631 [8262:MainThread] mopidy.ext
okt 09 15:28:24 Desktop-Ubuntu mopidy[8262]:   Validating extension: spotify
okt 09 15:28:24 Desktop-Ubuntu mopidy[8262]: DEBUG    2022-10-09 15:28:24,624 [8262:MainThread] mopidy.ext
okt 09 15:28:24 Desktop-Ubuntu mopidy[8262]:   Validating extension: mopify
okt 09 15:28:24 Desktop-Ubuntu mopidy[8262]: DEBUG    2022-10-09 15:28:24,621 [8262:MainThread] mopidy.ext
okt 09 15:28:24 Desktop-Ubuntu mopidy[8262]:   Loading config from command line options
okt 09 15:28:24 Desktop-Ubuntu mopidy[8262]: INFO     2022-10-09 15:28:24,618 [8262:MainThread] mopidy.config
okt 09 15:28:24 Desktop-Ubuntu mopidy[8262]:   Loading config from file:///etc/mopidy/mopidy.conf
okt 09 15:28:24 Desktop-Ubuntu mopidy[8262]: INFO     2022-10-09 15:28:24,617 [8262:MainThread] mopidy.config
okt 09 15:28:24 Desktop-Ubuntu mopidy[8262]:   Loading config from file:///usr/share/mopidy/conf.d/mopidy.conf
okt 09 15:28:24 Desktop-Ubuntu mopidy[8262]: INFO     2022-10-09 15:28:24,617 [8262:MainThread] mopidy.config
okt 09 15:28:24 Desktop-Ubuntu mopidy[8262]:   Loading config from builtin defaults
okt 09 15:28:24 Desktop-Ubuntu mopidy[8262]: INFO     2022-10-09 15:28:24,616 [8262:MainThread] mopidy.config
okt 09 15:28:24 Desktop-Ubuntu mopidy[8262]:   Fetching passwords from your keyring failed. Any passwords stored in the keyring will not be available. (org.freedesktop.DBus.Error.NotSupported: Unable to autolaunch a dbus-daemon without a $DISPLAY for X11)
okt 09 15:28:24 Desktop-Ubuntu mopidy[8262]: DEBUG    2022-10-09 15:28:24,616 [8262:MainThread] mopidy.config.keyring
okt 09 15:28:24 Desktop-Ubuntu mopidy[8262]:   Discovered extensions: mopify, spotify, file, http, m3u, softwaremixer, stream
okt 09 15:28:24 Desktop-Ubuntu mopidy[8262]: DEBUG    2022-10-09 15:28:24,614 [8262:MainThread] mopidy.ext
okt 09 15:28:24 Desktop-Ubuntu mopidy[8262]:   Loaded extension: Mopidy-Stream 3.3.0
okt 09 15:28:24 Desktop-Ubuntu mopidy[8262]: DEBUG    2022-10-09 15:28:24,611 [8262:MainThread] mopidy.ext
okt 09 15:28:24 Desktop-Ubuntu mopidy[8262]:   Loading entry point: stream = mopidy.stream:Extension
okt 09 15:28:24 Desktop-Ubuntu mopidy[8262]: DEBUG    2022-10-09 15:28:24,610 [8262:MainThread] mopidy.ext
okt 09 15:28:24 Desktop-Ubuntu mopidy[8262]:   Loaded extension: Mopidy-SoftwareMixer 3.3.0
okt 09 15:28:24 Desktop-Ubuntu mopidy[8262]: DEBUG    2022-10-09 15:28:24,610 [8262:MainThread] mopidy.ext
okt 09 15:28:24 Desktop-Ubuntu mopidy[8262]:   Loading entry point: softwaremixer = mopidy.softwaremixer:Extension
okt 09 15:28:24 Desktop-Ubuntu mopidy[8262]: DEBUG    2022-10-09 15:28:24,610 [8262:MainThread] mopidy.ext
okt 09 15:28:24 Desktop-Ubuntu mopidy[8262]:   Loaded extension: Mopidy-M3U 3.3.0
okt 09 15:28:24 Desktop-Ubuntu mopidy[8262]: DEBUG    2022-10-09 15:28:24,610 [8262:MainThread] mopidy.ext
okt 09 15:28:24 Desktop-Ubuntu mopidy[8262]:   Loading entry point: m3u = mopidy.m3u:Extension
okt 09 15:28:24 Desktop-Ubuntu mopidy[8262]: DEBUG    2022-10-09 15:28:24,610 [8262:MainThread] mopidy.ext
okt 09 15:28:24 Desktop-Ubuntu mopidy[8262]:   Loaded extension: Mopidy-HTTP 3.3.0
okt 09 15:28:24 Desktop-Ubuntu mopidy[8262]: DEBUG    2022-10-09 15:28:24,610 [8262:MainThread] mopidy.ext
okt 09 15:28:24 Desktop-Ubuntu mopidy[8262]:   Loading entry point: http = mopidy.http:Extension
okt 09 15:28:24 Desktop-Ubuntu mopidy[8262]: DEBUG    2022-10-09 15:28:24,609 [8262:MainThread] mopidy.ext
okt 09 15:28:24 Desktop-Ubuntu mopidy[8262]:   Loaded extension: Mopidy-File 3.3.0
okt 09 15:28:24 Desktop-Ubuntu mopidy[8262]: DEBUG    2022-10-09 15:28:24,609 [8262:MainThread] mopidy.ext
okt 09 15:28:24 Desktop-Ubuntu mopidy[8262]:   Loading entry point: file = mopidy.file:Extension
okt 09 15:28:24 Desktop-Ubuntu mopidy[8262]: DEBUG    2022-10-09 15:28:24,609 [8262:MainThread] mopidy.ext
okt 09 15:28:24 Desktop-Ubuntu mopidy[8262]:   Loaded extension: Mopidy-Spotify 4.1.1
okt 09 15:28:24 Desktop-Ubuntu mopidy[8262]: DEBUG    2022-10-09 15:28:24,608 [8262:MainThread] mopidy.ext
okt 09 15:28:24 Desktop-Ubuntu mopidy[8262]:   Loading entry point: spotify = mopidy_spotify:Extension
okt 09 15:28:24 Desktop-Ubuntu mopidy[8262]: DEBUG    2022-10-09 15:28:24,607 [8262:MainThread] mopidy.ext
okt 09 15:28:24 Desktop-Ubuntu mopidy[8262]:   Loaded extension: Mopidy-Mopify 1.7.3
okt 09 15:28:24 Desktop-Ubuntu mopidy[8262]: DEBUG    2022-10-09 15:28:24,605 [8262:MainThread] mopidy.ext
okt 09 15:28:24 Desktop-Ubuntu mopidy[8262]:   Loading entry point: mopify = mopidy_mopify:MopifyExtension
okt 09 15:28:24 Desktop-Ubuntu mopidy[8262]: DEBUG    2022-10-09 15:28:24,532 [8262:MainThread] mopidy.ext
okt 09 15:28:24 Desktop-Ubuntu mopidy[8262]:   Starting Mopidy 3.3.0
okt 09 15:28:24 Desktop-Ubuntu mopidy[8262]: INFO     2022-10-09 15:28:24,530 [8262:MainThread] mopidy.__main__
okt 09 15:28:24 Desktop-Ubuntu systemd[1]: Started Mopidy music server.
okt 09 15:28:24 Desktop-Ubuntu systemd[1]: Starting Mopidy music server...
okt 09 14:11:48 Desktop-Ubuntu systemd[1]: mopidy.service: Deactivated successfully.
okt 09 14:11:48 Desktop-Ubuntu mopidy[957]:   All actors stopped.
okt 09 14:11:48 Desktop-Ubuntu mopidy[957]: DEBUG    2022-10-09 14:11:48,016 [957:MainThread] mopidy.internal.process
okt 09 14:11:48 Desktop-Ubuntu mopidy[957]:   Stopped SoftwareMixer (urn:uuid:54a5e4ff-7dcb-436d-b8df-7bc6573f0518)
okt 09 14:11:48 Desktop-Ubuntu mopidy[957]: DEBUG    2022-10-09 14:11:48,015 [957:SoftwareMixer-1 (_actor_loop)] pykka
okt 09 14:11:48 Desktop-Ubuntu mopidy[957]:   Unregistered SoftwareMixer (urn:uuid:54a5e4ff-7dcb-436d-b8df-7bc6573f0518)
okt 09 14:11:48 Desktop-Ubuntu mopidy[957]: DEBUG    2022-10-09 14:11:48,015 [957:SoftwareMixer-1 (_actor_loop)] pykka
okt 09 14:11:48 Desktop-Ubuntu mopidy[957]:   Stopping 1 instance(s) of SoftwareMixer
okt 09 14:11:48 Desktop-Ubuntu mopidy[957]: DEBUG    2022-10-09 14:11:48,015 [957:MainThread] mopidy.internal.process
okt 09 14:11:48 Desktop-Ubuntu mopidy[957]:   Stopping Mopidy mixer
okt 09 14:11:48 Desktop-Ubuntu mopidy[957]: INFO     2022-10-09 14:11:48,015 [957:MainThread] mopidy.commands
okt 09 14:11:48 Desktop-Ubuntu mopidy[957]:   Stopped Audio (urn:uuid:cff8744f-91f0-49d2-8eff-4ad87ca271fb)
okt 09 14:11:48 Desktop-Ubuntu mopidy[957]: DEBUG    2022-10-09 14:11:48,015 [957:Audio-2 (_actor_loop)] pykka
okt 09 14:11:48 Desktop-Ubuntu mopidy[957]:   Unregistered Audio (urn:uuid:cff8744f-91f0-49d2-8eff-4ad87ca271fb)
okt 09 14:11:48 Desktop-Ubuntu mopidy[957]: DEBUG    2022-10-09 14:11:48,015 [957:Audio-2 (_actor_loop)] pykka
okt 09 14:11:48 Desktop-Ubuntu mopidy[957]:   Stopping 1 instance(s) of Audio
okt 09 14:11:48 Desktop-Ubuntu mopidy[957]: DEBUG    2022-10-09 14:11:48,014 [957:MainThread] mopidy.internal.process
okt 09 14:11:48 Desktop-Ubuntu mopidy[957]:   Stopping Mopidy audio
okt 09 14:11:48 Desktop-Ubuntu mopidy[957]: INFO     2022-10-09 14:11:48,014 [957:MainThread] mopidy.commands
okt 09 14:11:48 Desktop-Ubuntu mopidy[957]:   Stopping 0 instance(s) of StreamBackend
okt 09 14:11:48 Desktop-Ubuntu mopidy[957]: DEBUG    2022-10-09 14:11:48,014 [957:MainThread] mopidy.internal.process
okt 09 14:11:48 Desktop-Ubuntu mopidy[957]:   Stopping 0 instance(s) of M3UBackend
okt 09 14:11:48 Desktop-Ubuntu mopidy[957]: DEBUG    2022-10-09 14:11:48,014 [957:MainThread] mopidy.internal.process
okt 09 14:11:48 Desktop-Ubuntu mopidy[957]:   Stopped FileBackend (urn:uuid:70cb0961-cc05-4e5b-9f87-ab824a3d1a02)
okt 09 14:11:48 Desktop-Ubuntu mopidy[957]: DEBUG    2022-10-09 14:11:48,014 [957:FileBackend-3 (_actor_loop)] pykka
okt 09 14:11:48 Desktop-Ubuntu mopidy[957]:   Unregistered FileBackend (urn:uuid:70cb0961-cc05-4e5b-9f87-ab824a3d1a02)
okt 09 14:11:48 Desktop-Ubuntu mopidy[957]: DEBUG    2022-10-09 14:11:48,014 [957:FileBackend-3 (_actor_loop)] pykka
okt 09 14:11:48 Desktop-Ubuntu mopidy[957]:   Stopping 1 instance(s) of FileBackend
okt 09 14:11:48 Desktop-Ubuntu mopidy[957]: DEBUG    2022-10-09 14:11:48,014 [957:MainThread] mopidy.internal.process
okt 09 14:11:48 Desktop-Ubuntu mopidy[957]:   Stopping Mopidy backends
okt 09 14:11:48 Desktop-Ubuntu mopidy[957]: INFO     2022-10-09 14:11:48,014 [957:MainThread] mopidy.commands
okt 09 14:11:48 Desktop-Ubuntu mopidy[957]:   Stopping 0 instance(s) of Core
okt 09 14:11:48 Desktop-Ubuntu mopidy[957]: DEBUG    2022-10-09 14:11:48,014 [957:MainThread] mopidy.internal.process
okt 09 14:11:48 Desktop-Ubuntu mopidy[957]:   Stopping Mopidy core
okt 09 14:11:48 Desktop-Ubuntu mopidy[957]: INFO     2022-10-09 14:11:48,014 [957:MainThread] mopidy.commands
okt 09 14:11:48 Desktop-Ubuntu mopidy[957]:   Stopping 0 instance(s) of HttpFrontend
okt 09 14:11:48 Desktop-Ubuntu mopidy[957]: DEBUG    2022-10-09 14:11:48,013 [957:MainThread] mopidy.internal.process
okt 09 14:11:48 Desktop-Ubuntu mopidy[957]:   Stopping Mopidy frontends
okt 09 14:11:48 Desktop-Ubuntu mopidy[957]: INFO     2022-10-09 14:11:48,013 [957:MainThread] mopidy.commands
okt 09 14:11:48 Desktop-Ubuntu mopidy[957]:   Interrupted. Exiting...
okt 09 14:11:48 Desktop-Ubuntu mopidy[957]: INFO     2022-10-09 14:11:48,013 [957:MainThread] mopidy.commands
okt 09 14:11:47 Desktop-Ubuntu mopidy[957]:   Interrupted main
okt 09 14:11:47 Desktop-Ubuntu mopidy[957]: DEBUG    2022-10-09 14:11:47,775 [957:Audio-2 (_actor_loop)] mopidy.internal.process
okt 09 14:11:47 Desktop-Ubuntu mopidy[957]:   Interrupting main...
okt 09 14:11:47 Desktop-Ubuntu mopidy[957]: DEBUG    2022-10-09 14:11:47,775 [957:Audio-2 (_actor_loop)] mopidy.internal.process
okt 09 14:11:47 Desktop-Ubuntu mopidy[957]:   Failed to create audio output "pulsink server=127.0.0.1": gst_parse_error: no element "pulsink" (1)
okt 09 14:11:47 Desktop-Ubuntu mopidy[957]: ERROR    2022-10-09 14:11:47,774 [957:Audio-2 (_actor_loop)] mopidy.audio.actor
okt 09 14:11:47 Desktop-Ubuntu mopidy[957]:   FileBackend took 3ms
okt 09 14:11:47 Desktop-Ubuntu mopidy[957]: TRACE    2022-10-09 14:11:47,774 [957:MainThread] mopidy.internal.timer
okt 09 14:11:47 Desktop-Ubuntu mopidy[957]:   Starting FileBackend (urn:uuid:70cb0961-cc05-4e5b-9f87-ab824a3d1a02)
okt 09 14:11:47 Desktop-Ubuntu mopidy[957]: DEBUG    2022-10-09 14:11:47,771 [957:MainThread] pykka
okt 09 14:11:47 Desktop-Ubuntu mopidy[957]:   Registered FileBackend (urn:uuid:70cb0961-cc05-4e5b-9f87-ab824a3d1a02)
okt 09 14:11:47 Desktop-Ubuntu mopidy[957]: DEBUG    2022-10-09 14:11:47,771 [957:MainThread] pykka
okt 09 14:11:47 Desktop-Ubuntu mopidy[957]:   Failed expanding path ($XDG_MUSIC_DIR) from file/media_dirs config value.
okt 09 14:11:47 Desktop-Ubuntu mopidy[957]: DEBUG    2022-10-09 14:11:47,770 [957:MainThread] mopidy.file.library
okt 09 14:11:47 Desktop-Ubuntu mopidy[957]:   Starting Mopidy backends: FileBackend, M3UBackend, StreamBackend
okt 09 14:11:47 Desktop-Ubuntu mopidy[957]: INFO     2022-10-09 14:11:47,770 [957:MainThread] mopidy.commands
okt 09 14:11:47 Desktop-Ubuntu mopidy[957]:   Starting Audio (urn:uuid:cff8744f-91f0-49d2-8eff-4ad87ca271fb)
okt 09 14:11:47 Desktop-Ubuntu mopidy[957]: DEBUG    2022-10-09 14:11:47,769 [957:MainThread] pykka
okt 09 14:11:47 Desktop-Ubuntu mopidy[957]:   Registered Audio (urn:uuid:cff8744f-91f0-49d2-8eff-4ad87ca271fb)
okt 09 14:11:47 Desktop-Ubuntu mopidy[957]: DEBUG    2022-10-09 14:11:47,769 [957:MainThread] pykka
okt 09 14:11:47 Desktop-Ubuntu mopidy[957]:   Starting Mopidy audio
okt 09 14:11:47 Desktop-Ubuntu mopidy[957]: INFO     2022-10-09 14:11:47,768 [957:MainThread] mopidy.commands
okt 09 14:11:47 Desktop-Ubuntu mopidy[957]:   Mixer volume left unchanged
okt 09 14:11:47 Desktop-Ubuntu mopidy[957]: DEBUG    2022-10-09 14:11:47,768 [957:MainThread] mopidy.commands
okt 09 14:11:47 Desktop-Ubuntu mopidy[957]:   Starting SoftwareMixer (urn:uuid:54a5e4ff-7dcb-436d-b8df-7bc6573f0518)
okt 09 14:11:47 Desktop-Ubuntu mopidy[957]: DEBUG    2022-10-09 14:11:47,767 [957:MainThread] pykka
okt 09 14:11:47 Desktop-Ubuntu mopidy[957]:   Registered SoftwareMixer (urn:uuid:54a5e4ff-7dcb-436d-b8df-7bc6573f0518)
okt 09 14:11:47 Desktop-Ubuntu mopidy[957]: DEBUG    2022-10-09 14:11:47,767 [957:MainThread] pykka
okt 09 14:11:47 Desktop-Ubuntu mopidy[957]:   Starting Mopidy mixer: SoftwareMixer
okt 09 14:11:47 Desktop-Ubuntu mopidy[957]: INFO     2022-10-09 14:11:47,767 [957:MainThread] mopidy.commands
okt 09 14:11:47 Desktop-Ubuntu mopidy[957]:   Available Mopidy mixers: SoftwareMixer
okt 09 14:11:47 Desktop-Ubuntu mopidy[957]: DEBUG    2022-10-09 14:11:47,767 [957:MainThread] mopidy.commands
okt 09 14:11:41 Desktop-Ubuntu mopidy[957]:   Disabled extensions: none
okt 09 14:11:41 Desktop-Ubuntu mopidy[957]: INFO     2022-10-09 14:11:41,868 [957:MainThread] mopidy.__main__
okt 09 14:11:41 Desktop-Ubuntu mopidy[957]:   Enabled extensions: file, http, softwaremixer, m3u, stream
okt 09 14:11:41 Desktop-Ubuntu mopidy[957]: INFO     2022-10-09 14:11:41,868 [957:MainThread] mopidy.__main__
okt 09 14:11:41 Desktop-Ubuntu mopidy[957]:   Validating extension: stream
okt 09 14:11:41 Desktop-Ubuntu mopidy[957]: DEBUG    2022-10-09 14:11:41,868 [957:MainThread] mopidy.ext
okt 09 14:11:41 Desktop-Ubuntu mopidy[957]:   Validating extension: softwaremixer
okt 09 14:11:41 Desktop-Ubuntu mopidy[957]: DEBUG    2022-10-09 14:11:41,868 [957:MainThread] mopidy.ext
okt 09 14:11:41 Desktop-Ubuntu mopidy[957]:   Validating extension: m3u
okt 09 14:11:41 Desktop-Ubuntu mopidy[957]: DEBUG    2022-10-09 14:11:41,867 [957:MainThread] mopidy.ext
okt 09 14:11:37 Desktop-Ubuntu mopidy[957]:   Validating extension: http
okt 09 14:11:37 Desktop-Ubuntu mopidy[957]: DEBUG    2022-10-09 14:11:37,372 [957:MainThread] mopidy.ext
okt 09 14:11:37 Desktop-Ubuntu mopidy[957]:   Validating extension: file
okt 09 14:11:37 Desktop-Ubuntu mopidy[957]: DEBUG    2022-10-09 14:11:37,372 [957:MainThread] mopidy.ext
okt 09 14:11:37 Desktop-Ubuntu mopidy[957]:   Loading config from command line options
okt 09 14:11:37 Desktop-Ubuntu mopidy[957]: INFO     2022-10-09 14:11:37,064 [957:MainThread] mopidy.config
okt 09 14:11:37 Desktop-Ubuntu mopidy[957]:   Loading config from file:///etc/mopidy/mopidy.conf
okt 09 14:11:37 Desktop-Ubuntu mopidy[957]: INFO     2022-10-09 14:11:36,983 [957:MainThread] mopidy.config
okt 09 14:11:37 Desktop-Ubuntu mopidy[957]:   Loading config from file:///usr/share/mopidy/conf.d/mopidy.conf
okt 09 14:11:37 Desktop-Ubuntu mopidy[957]: INFO     2022-10-09 14:11:36,871 [957:MainThread] mopidy.config
okt 09 14:11:37 Desktop-Ubuntu mopidy[957]:   Loading config from builtin defaults
okt 09 14:11:37 Desktop-Ubuntu mopidy[957]: INFO     2022-10-09 14:11:36,817 [957:MainThread] mopidy.config
okt 09 14:11:37 Desktop-Ubuntu mopidy[957]:   Fetching passwords from your keyring failed. Any passwords stored in the keyring will not be available. (org.freedesktop.DBus.Error.NotSupported: Unable to autolaunch a dbus-daemon without a $DISPLAY for X11)
okt 09 14:11:37 Desktop-Ubuntu mopidy[957]: DEBUG    2022-10-09 14:11:36,817 [957:MainThread] mopidy.config.keyring
okt 09 14:11:37 Desktop-Ubuntu mopidy[957]:   Discovered extensions: file, http, m3u, softwaremixer, stream
okt 09 14:11:37 Desktop-Ubuntu mopidy[957]: DEBUG    2022-10-09 14:11:36,717 [957:MainThread] mopidy.ext
okt 09 14:11:37 Desktop-Ubuntu mopidy[957]:   Loaded extension: Mopidy-Stream 3.3.0
okt 09 14:11:37 Desktop-Ubuntu mopidy[957]: DEBUG    2022-10-09 14:11:36,370 [957:MainThread] mopidy.ext
okt 09 14:11:37 Desktop-Ubuntu mopidy[957]:   Loading entry point: stream = mopidy.stream:Extension
okt 09 14:11:37 Desktop-Ubuntu mopidy[957]: DEBUG    2022-10-09 14:11:36,368 [957:MainThread] mopidy.ext
okt 09 14:11:37 Desktop-Ubuntu mopidy[957]:   Loaded extension: Mopidy-SoftwareMixer 3.3.0
okt 09 14:11:37 Desktop-Ubuntu mopidy[957]: DEBUG    2022-10-09 14:11:36,368 [957:MainThread] mopidy.ext
okt 09 14:11:37 Desktop-Ubuntu mopidy[957]:   Loading entry point: softwaremixer = mopidy.softwaremixer:Extension
okt 09 14:11:37 Desktop-Ubuntu mopidy[957]: DEBUG    2022-10-09 14:11:36,366 [957:MainThread] mopidy.ext
okt 09 14:11:37 Desktop-Ubuntu mopidy[957]:   Loaded extension: Mopidy-M3U 3.3.0
okt 09 14:11:37 Desktop-Ubuntu mopidy[957]: DEBUG    2022-10-09 14:11:36,366 [957:MainThread] mopidy.ext
okt 09 14:11:37 Desktop-Ubuntu mopidy[957]:   Loading entry point: m3u = mopidy.m3u:Extension
okt 09 14:11:37 Desktop-Ubuntu mopidy[957]: DEBUG    2022-10-09 14:11:36,256 [957:MainThread] mopidy.ext
okt 09 14:11:37 Desktop-Ubuntu mopidy[957]:   Loaded extension: Mopidy-HTTP 3.3.0
okt 09 14:11:37 Desktop-Ubuntu mopidy[957]: DEBUG    2022-10-09 14:11:36,256 [957:MainThread] mopidy.ext
okt 09 14:11:37 Desktop-Ubuntu mopidy[957]:   Loading entry point: http = mopidy.http:Extension
okt 09 14:11:37 Desktop-Ubuntu mopidy[957]: DEBUG    2022-10-09 14:11:36,149 [957:MainThread] mopidy.ext
okt 09 14:11:37 Desktop-Ubuntu mopidy[957]:   Loaded extension: Mopidy-File 3.3.0
okt 09 14:11:37 Desktop-Ubuntu mopidy[957]: DEBUG    2022-10-09 14:11:36,149 [957:MainThread] mopidy.ext
okt 09 14:11:37 Desktop-Ubuntu mopidy[957]:   Loading entry point: file = mopidy.file:Extension
okt 09 14:11:37 Desktop-Ubuntu mopidy[957]: DEBUG    2022-10-09 14:11:35,913 [957:MainThread] mopidy.ext
okt 09 14:11:37 Desktop-Ubuntu mopidy[957]:   Starting Mopidy 3.3.0
okt 09 14:11:37 Desktop-Ubuntu mopidy[957]: INFO     2022-10-09 14:11:35,483 [957:MainThread] mopidy.__main__
okt 09 14:11:00 Desktop-Ubuntu systemd[1]: Started Mopidy music server.
okt 09 14:11:00 Desktop-Ubuntu systemd[1]: Starting Mopidy music server...
-- Boot 0e95ebfdf81f42c2803f482a236ce2f3 --
okt 09 12:45:18 Desktop-Ubuntu systemd[1]: mopidy.service: Succeeded.
okt 09 12:45:18 Desktop-Ubuntu mopidy[918]:   All actors stopped.
okt 09 12:45:18 Desktop-Ubuntu mopidy[918]: DEBUG    2022-10-09 12:45:18,229 [918:MainThread] mopidy.internal.process
okt 09 12:45:18 Desktop-Ubuntu mopidy[918]:   Stopped SoftwareMixer (urn:uuid:56bfcf5b-4c86-4630-b375-e009de666ef0)
okt 09 12:45:18 Desktop-Ubuntu mopidy[918]: DEBUG    2022-10-09 12:45:18,228 [918:SoftwareMixer-1] pykka
okt 09 12:45:18 Desktop-Ubuntu mopidy[918]:   Unregistered SoftwareMixer (urn:uuid:56bfcf5b-4c86-4630-b375-e009de666ef0)
okt 09 12:45:18 Desktop-Ubuntu mopidy[918]: DEBUG    2022-10-09 12:45:18,228 [918:SoftwareMixer-1] pykka
okt 09 12:45:18 Desktop-Ubuntu mopidy[918]:   Stopping 1 instance(s) of SoftwareMixer
okt 09 12:45:18 Desktop-Ubuntu mopidy[918]: DEBUG    2022-10-09 12:45:18,228 [918:MainThread] mopidy.internal.process
okt 09 12:45:18 Desktop-Ubuntu mopidy[918]:   Stopping Mopidy mixer
okt 09 12:45:18 Desktop-Ubuntu mopidy[918]: INFO     2022-10-09 12:45:18,228 [918:MainThread] mopidy.commands
okt 09 12:45:18 Desktop-Ubuntu mopidy[918]:   Stopped Audio (urn:uuid:e8d67fd7-050e-457d-92c7-57099391c1d4)
okt 09 12:45:18 Desktop-Ubuntu mopidy[918]: DEBUG    2022-10-09 12:45:18,228 [918:Audio-2] pykka
okt 09 12:45:18 Desktop-Ubuntu mopidy[918]:   Unregistered Audio (urn:uuid:e8d67fd7-050e-457d-92c7-57099391c1d4)
okt 09 12:45:18 Desktop-Ubuntu mopidy[918]: DEBUG    2022-10-09 12:45:18,227 [918:Audio-2] pykka
okt 09 12:45:18 Desktop-Ubuntu mopidy[918]:   Stopping 1 instance(s) of Audio
okt 09 12:45:18 Desktop-Ubuntu mopidy[918]: DEBUG    2022-10-09 12:45:18,227 [918:MainThread] mopidy.internal.process
okt 09 12:45:18 Desktop-Ubuntu mopidy[918]:   Stopping Mopidy audio
okt 09 12:45:18 Desktop-Ubuntu mopidy[918]: INFO     2022-10-09 12:45:18,227 [918:MainThread] mopidy.commands
okt 09 12:45:18 Desktop-Ubuntu mopidy[918]:   Stopping 0 instance(s) of StreamBackend
okt 09 12:45:18 Desktop-Ubuntu mopidy[918]: DEBUG    2022-10-09 12:45:18,227 [918:MainThread] mopidy.internal.process
okt 09 12:45:18 Desktop-Ubuntu mopidy[918]:   Stopping 0 instance(s) of M3UBackend
okt 09 12:45:18 Desktop-Ubuntu mopidy[918]: DEBUG    2022-10-09 12:45:18,227 [918:MainThread] mopidy.internal.process
okt 09 12:45:18 Desktop-Ubuntu mopidy[918]:   Stopped FileBackend (urn:uuid:44a525be-8dde-4f7f-83d1-a78002755ae3)
okt 09 12:45:18 Desktop-Ubuntu mopidy[918]: DEBUG    2022-10-09 12:45:18,227 [918:FileBackend-3] pykka
okt 09 12:45:18 Desktop-Ubuntu mopidy[918]:   Unregistered FileBackend (urn:uuid:44a525be-8dde-4f7f-83d1-a78002755ae3)
okt 09 12:45:18 Desktop-Ubuntu mopidy[918]: DEBUG    2022-10-09 12:45:18,227 [918:FileBackend-3] pykka
okt 09 12:45:18 Desktop-Ubuntu mopidy[918]:   Stopping 1 instance(s) of FileBackend
okt 09 12:45:18 Desktop-Ubuntu mopidy[918]: DEBUG    2022-10-09 12:45:18,226 [918:MainThread] mopidy.internal.process
okt 09 12:45:18 Desktop-Ubuntu mopidy[918]:   Stopping Mopidy backends
okt 09 12:45:18 Desktop-Ubuntu mopidy[918]: INFO     2022-10-09 12:45:18,226 [918:MainThread] mopidy.commands
okt 09 12:45:18 Desktop-Ubuntu mopidy[918]:   Stopping 0 instance(s) of Core
okt 09 12:45:18 Desktop-Ubuntu mopidy[918]: DEBUG    2022-10-09 12:45:18,226 [918:MainThread] mopidy.internal.process
okt 09 12:45:18 Desktop-Ubuntu mopidy[918]:   Stopping Mopidy core
okt 09 12:45:18 Desktop-Ubuntu mopidy[918]: INFO     2022-10-09 12:45:18,226 [918:MainThread] mopidy.commands
okt 09 12:45:18 Desktop-Ubuntu mopidy[918]:   Stopping 0 instance(s) of HttpFrontend
okt 09 12:45:18 Desktop-Ubuntu mopidy[918]: DEBUG    2022-10-09 12:45:18,226 [918:MainThread] mopidy.internal.process
okt 09 12:45:18 Desktop-Ubuntu mopidy[918]:   Stopping Mopidy frontends
okt 09 12:45:18 Desktop-Ubuntu mopidy[918]: INFO     2022-10-09 12:45:18,226 [918:MainThread] mopidy.commands
okt 09 12:45:18 Desktop-Ubuntu mopidy[918]:   Interrupted. Exiting...
okt 09 12:45:18 Desktop-Ubuntu mopidy[918]: INFO     2022-10-09 12:45:18,226 [918:MainThread] mopidy.commands
okt 09 12:45:18 Desktop-Ubuntu mopidy[918]:   Interrupted main
okt 09 12:45:18 Desktop-Ubuntu mopidy[918]: DEBUG    2022-10-09 12:45:18,010 [918:Audio-2] mopidy.internal.process
okt 09 12:45:18 Desktop-Ubuntu mopidy[918]:   Interrupting main...
okt 09 12:45:18 Desktop-Ubuntu mopidy[918]: DEBUG    2022-10-09 12:45:18,010 [918:Audio-2] mopidy.internal.process
okt 09 12:45:18 Desktop-Ubuntu mopidy[918]:   Failed to create audio output "pulsink server=127.0.0.1": gst_parse_error: no element "pulsink" (1)
okt 09 12:45:18 Desktop-Ubuntu mopidy[918]: ERROR    2022-10-09 12:45:18,010 [918:Audio-2] mopidy.audio.actor
okt 09 12:45:17 Desktop-Ubuntu mopidy[918]:   FileBackend took 3ms
okt 09 12:45:17 Desktop-Ubuntu mopidy[918]: TRACE    2022-10-09 12:45:17,798 [918:MainThread] mopidy.internal.timer
okt 09 12:45:17 Desktop-Ubuntu mopidy[918]:   Starting FileBackend (urn:uuid:44a525be-8dde-4f7f-83d1-a78002755ae3)
okt 09 12:45:17 Desktop-Ubuntu mopidy[918]: DEBUG    2022-10-09 12:45:17,796 [918:MainThread] pykka
okt 09 12:45:17 Desktop-Ubuntu mopidy[918]:   Registered FileBackend (urn:uuid:44a525be-8dde-4f7f-83d1-a78002755ae3)
okt 09 12:45:17 Desktop-Ubuntu mopidy[918]: DEBUG    2022-10-09 12:45:17,796 [918:MainThread] pykka
okt 09 12:45:17 Desktop-Ubuntu mopidy[918]:   Failed expanding path ($XDG_MUSIC_DIR) from file/media_dirs config value.
okt 09 12:45:17 Desktop-Ubuntu mopidy[918]: DEBUG    2022-10-09 12:45:17,795 [918:MainThread] mopidy.file.library
okt 09 12:45:17 Desktop-Ubuntu mopidy[918]:   Starting Mopidy backends: FileBackend, M3UBackend, StreamBackend
okt 09 12:45:17 Desktop-Ubuntu mopidy[918]: INFO     2022-10-09 12:45:17,795 [918:MainThread] mopidy.commands
okt 09 12:45:17 Desktop-Ubuntu mopidy[918]:   Starting Audio (urn:uuid:e8d67fd7-050e-457d-92c7-57099391c1d4)
okt 09 12:45:17 Desktop-Ubuntu mopidy[918]: DEBUG    2022-10-09 12:45:17,794 [918:MainThread] pykka
okt 09 12:45:17 Desktop-Ubuntu mopidy[918]:   Registered Audio (urn:uuid:e8d67fd7-050e-457d-92c7-57099391c1d4)
okt 09 12:45:17 Desktop-Ubuntu mopidy[918]: DEBUG    2022-10-09 12:45:17,794 [918:MainThread] pykka
okt 09 12:45:17 Desktop-Ubuntu mopidy[918]:   Starting Mopidy audio
okt 09 12:45:17 Desktop-Ubuntu mopidy[918]: INFO     2022-10-09 12:45:17,794 [918:MainThread] mopidy.commands
okt 09 12:45:17 Desktop-Ubuntu mopidy[918]:   Mixer volume left unchanged
okt 09 12:45:17 Desktop-Ubuntu mopidy[918]: DEBUG    2022-10-09 12:45:17,794 [918:MainThread] mopidy.commands
okt 09 12:45:17 Desktop-Ubuntu mopidy[918]:   Starting SoftwareMixer (urn:uuid:56bfcf5b-4c86-4630-b375-e009de666ef0)
okt 09 12:45:17 Desktop-Ubuntu mopidy[918]: DEBUG    2022-10-09 12:45:17,793 [918:MainThread] pykka
okt 09 12:45:17 Desktop-Ubuntu mopidy[918]:   Registered SoftwareMixer (urn:uuid:56bfcf5b-4c86-4630-b375-e009de666ef0)
okt 09 12:45:17 Desktop-Ubuntu mopidy[918]: DEBUG    2022-10-09 12:45:17,793 [918:MainThread] pykka
okt 09 12:45:17 Desktop-Ubuntu mopidy[918]:   Starting Mopidy mixer: SoftwareMixer
okt 09 12:45:17 Desktop-Ubuntu mopidy[918]: INFO     2022-10-09 12:45:17,792 [918:MainThread] mopidy.commands
okt 09 12:45:17 Desktop-Ubuntu mopidy[918]:   Available Mopidy mixers: SoftwareMixer
okt 09 12:45:17 Desktop-Ubuntu mopidy[918]: DEBUG    2022-10-09 12:45:17,792 [918:MainThread] mopidy.commands
okt 09 12:45:17 Desktop-Ubuntu mopidy[918]:   Disabled extensions: none
okt 09 12:45:17 Desktop-Ubuntu mopidy[918]: INFO     2022-10-09 12:45:17,485 [918:MainThread] mopidy.__main__
okt 09 12:45:17 Desktop-Ubuntu mopidy[918]:   Enabled extensions: softwaremixer, http, stream, file, m3u
okt 09 12:45:17 Desktop-Ubuntu mopidy[918]: INFO     2022-10-09 12:45:17,485 [918:MainThread] mopidy.__main__
okt 09 12:45:17 Desktop-Ubuntu mopidy[918]:   Validating extension: stream
okt 09 12:45:17 Desktop-Ubuntu mopidy[918]: DEBUG    2022-10-09 12:45:17,485 [918:MainThread] mopidy.ext
okt 09 12:45:17 Desktop-Ubuntu mopidy[918]:   Validating extension: softwaremixer
okt 09 12:45:17 Desktop-Ubuntu mopidy[918]: DEBUG    2022-10-09 12:45:17,485 [918:MainThread] mopidy.ext
okt 09 12:45:17 Desktop-Ubuntu mopidy[918]:   Validating extension: m3u
okt 09 12:45:17 Desktop-Ubuntu mopidy[918]: DEBUG    2022-10-09 12:45:17,485 [918:MainThread] mopidy.ext
okt 09 12:45:14 Desktop-Ubuntu mopidy[918]:   Validating extension: http
okt 09 12:45:14 Desktop-Ubuntu mopidy[918]: DEBUG    2022-10-09 12:45:14,057 [918:MainThread] mopidy.ext
okt 09 12:45:14 Desktop-Ubuntu mopidy[918]:   Validating extension: file
okt 09 12:45:14 Desktop-Ubuntu mopidy[918]: DEBUG    2022-10-09 12:45:14,057 [918:MainThread] mopidy.ext
okt 09 12:45:14 Desktop-Ubuntu mopidy[918]:   Loading config from command line options
okt 09 12:45:14 Desktop-Ubuntu mopidy[918]: INFO     2022-10-09 12:45:14,017 [918:MainThread] mopidy.config
okt 09 12:45:14 Desktop-Ubuntu mopidy[918]:   Loading config from file:///etc/mopidy/mopidy.conf
okt 09 12:45:14 Desktop-Ubuntu mopidy[918]: INFO     2022-10-09 12:45:13,551 [918:MainThread] mopidy.config
okt 09 12:45:14 Desktop-Ubuntu mopidy[918]:   Loading config from file:///usr/share/mopidy/conf.d/mopidy.conf
okt 09 12:45:14 Desktop-Ubuntu mopidy[918]: INFO     2022-10-09 12:45:13,479 [918:MainThread] mopidy.config
okt 09 12:45:14 Desktop-Ubuntu mopidy[918]:   Loading config from builtin defaults
okt 09 12:45:14 Desktop-Ubuntu mopidy[918]: INFO     2022-10-09 12:45:13,442 [918:MainThread] mopidy.config
okt 09 12:45:14 Desktop-Ubuntu mopidy[918]:   Fetching passwords from your keyring failed. Any passwords stored in the keyring will not be available. (org.freedesktop.DBus.Error.NotSupported: Unable to autolaunch a dbus-daemon without a $DISPLAY for X11)
okt 09 12:45:14 Desktop-Ubuntu mopidy[918]: DEBUG    2022-10-09 12:45:13,442 [918:MainThread] mopidy.config.keyring
okt 09 12:45:14 Desktop-Ubuntu mopidy[918]:   Discovered extensions: file, http, m3u, softwaremixer, stream
okt 09 12:45:14 Desktop-Ubuntu mopidy[918]: DEBUG    2022-10-09 12:45:13,393 [918:MainThread] mopidy.ext
okt 09 12:45:14 Desktop-Ubuntu mopidy[918]:   Loaded extension: Mopidy-Stream 3.3.0
okt 09 12:45:14 Desktop-Ubuntu mopidy[918]: DEBUG    2022-10-09 12:45:13,243 [918:MainThread] mopidy.ext
okt 09 12:45:14 Desktop-Ubuntu mopidy[918]:   Loading entry point: stream = mopidy.stream:Extension
okt 09 12:45:14 Desktop-Ubuntu mopidy[918]: DEBUG    2022-10-09 12:45:13,241 [918:MainThread] mopidy.ext
okt 09 12:45:14 Desktop-Ubuntu mopidy[918]:   Loaded extension: Mopidy-SoftwareMixer 3.3.0
okt 09 12:45:14 Desktop-Ubuntu mopidy[918]: DEBUG    2022-10-09 12:45:13,241 [918:MainThread] mopidy.ext
okt 09 12:45:14 Desktop-Ubuntu mopidy[918]:   Loading entry point: softwaremixer = mopidy.softwaremixer:Extension
okt 09 12:45:14 Desktop-Ubuntu mopidy[918]: DEBUG    2022-10-09 12:45:13,194 [918:MainThread] mopidy.ext
okt 09 12:45:14 Desktop-Ubuntu mopidy[918]:   Loaded extension: Mopidy-M3U 3.3.0
okt 09 12:45:14 Desktop-Ubuntu mopidy[918]: DEBUG    2022-10-09 12:45:13,194 [918:MainThread] mopidy.ext
okt 09 12:45:14 Desktop-Ubuntu mopidy[918]:   Loading entry point: m3u = mopidy.m3u:Extension
okt 09 12:45:14 Desktop-Ubuntu mopidy[918]: DEBUG    2022-10-09 12:45:13,188 [918:MainThread] mopidy.ext
okt 09 12:45:14 Desktop-Ubuntu mopidy[918]:   Loaded extension: Mopidy-HTTP 3.3.0
okt 09 12:45:14 Desktop-Ubuntu mopidy[918]: DEBUG    2022-10-09 12:45:13,188 [918:MainThread] mopidy.ext
okt 09 12:45:14 Desktop-Ubuntu mopidy[918]:   Loading entry point: http = mopidy.http:Extension
okt 09 12:45:14 Desktop-Ubuntu mopidy[918]: DEBUG    2022-10-09 12:45:12,851 [918:MainThread] mopidy.ext
okt 09 12:45:14 Desktop-Ubuntu mopidy[918]:   Loaded extension: Mopidy-File 3.3.0
okt 09 12:45:14 Desktop-Ubuntu mopidy[918]: DEBUG    2022-10-09 12:45:12,851 [918:MainThread] mopidy.ext
okt 09 12:45:14 Desktop-Ubuntu mopidy[918]:   Loading entry point: file = mopidy.file:Extension
okt 09 12:45:14 Desktop-Ubuntu mopidy[918]: DEBUG    2022-10-09 12:45:11,930 [918:MainThread] mopidy.ext
okt 09 12:45:14 Desktop-Ubuntu mopidy[918]:   Starting Mopidy 3.3.0
okt 09 12:45:14 Desktop-Ubuntu mopidy[918]: INFO     2022-10-09 12:45:10,241 [918:MainThread] mopidy.__main__
okt 09 12:44:56 Desktop-Ubuntu systemd[1]: Started Mopidy music server.
okt 09 12:44:56 Desktop-Ubuntu systemd[1]: Starting Mopidy music server...
-- Boot 909b5afc3e5b4ff3b9bd37aabab7a22f --
okt 08 23:07:58 Desktop-Ubuntu systemd[1]: mopidy.service: Succeeded.
okt 08 23:07:58 Desktop-Ubuntu mopidy[4785]: INFO     [MainThread] mopidy.commands Stopping Mopidy mixer
okt 08 23:07:58 Desktop-Ubuntu mopidy[4785]: INFO     [MainThread] mopidy.commands Stopping Mopidy audio
okt 08 23:07:58 Desktop-Ubuntu mopidy[4785]: INFO     [MainThread] mopidy.commands Stopping Mopidy backends
okt 08 23:07:58 Desktop-Ubuntu mopidy[4785]: INFO     [MainThread] mopidy.commands Stopping Mopidy core
okt 08 23:07:58 Desktop-Ubuntu mopidy[4785]: INFO     [MainThread] mopidy.commands Stopping Mopidy frontends
okt 08 23:07:58 Desktop-Ubuntu mopidy[4785]: INFO     [MainThread] mopidy.commands Interrupted. Exiting...
okt 08 23:07:58 Desktop-Ubuntu mopidy[4785]: ERROR    [Audio-2] mopidy.audio.actor Failed to create audio output "pulseink server=127.0.0.1": gst_parse_error: no element "pulseink" (1)
okt 08 23:07:58 Desktop-Ubuntu mopidy[4785]: INFO     [MainThread] mopidy.commands Starting Mopidy backends: FileBackend, M3UBackend, StreamBackend
okt 08 23:07:58 Desktop-Ubuntu mopidy[4785]: INFO     [MainThread] mopidy.commands Starting Mopidy audio
okt 08 23:07:58 Desktop-Ubuntu mopidy[4785]: INFO     [MainThread] mopidy.commands Starting Mopidy mixer: SoftwareMixer
okt 08 23:07:58 Desktop-Ubuntu mopidy[4785]: INFO     [MainThread] mopidy.__main__ Disabled extensions: none
okt 08 23:07:58 Desktop-Ubuntu mopidy[4785]: INFO     [MainThread] mopidy.__main__ Enabled extensions: softwaremixer, http, file, m3u, stream
okt 08 23:07:58 Desktop-Ubuntu mopidy[4785]: INFO     [MainThread] mopidy.config Loading config from command line options
okt 08 23:07:58 Desktop-Ubuntu mopidy[4785]: INFO     [MainThread] mopidy.config Loading config from file:///etc/mopidy/mopidy.conf
okt 08 23:07:58 Desktop-Ubuntu mopidy[4785]: INFO     [MainThread] mopidy.config Loading config from file:///usr/share/mopidy/conf.d/mopidy.conf
okt 08 23:07:58 Desktop-Ubuntu mopidy[4785]: INFO     [MainThread] mopidy.config Loading config from builtin defaults
okt 08 23:07:58 Desktop-Ubuntu mopidy[4785]: INFO     [MainThread] mopidy.__main__ Starting Mopidy 3.3.0
okt 08 23:07:57 Desktop-Ubuntu systemd[1]: Started Mopidy music server.
okt 08 23:07:57 Desktop-Ubuntu systemd[1]: Starting Mopidy music server...
okt 08 23:07:57 Desktop-Ubuntu systemd[1]: Stopped Mopidy music server.
okt 08 23:07:57 Desktop-Ubuntu systemd[1]: mopidy.service: Succeeded.
okt 08 23:07:57 Desktop-Ubuntu mopidy[4443]: INFO     [MainThread] mopidy.commands Stopping Mopidy mixer
okt 08 23:07:57 Desktop-Ubuntu mopidy[4443]: INFO     [MainThread] mopidy.commands Stopping Mopidy audio
okt 08 23:07:57 Desktop-Ubuntu mopidy[4443]: INFO     [MainThread] mopidy.commands Stopping Mopidy backends
okt 08 23:07:57 Desktop-Ubuntu mopidy[4443]: INFO     [MainThread] mopidy.commands Stopping Mopidy core
okt 08 23:07:57 Desktop-Ubuntu mopidy[4443]: INFO     [MainThread] mopidy.commands Stopping Mopidy frontends
okt 08 23:07:57 Desktop-Ubuntu mopidy[4443]: INFO     [MainThread] mopidy.commands GLib mainloop got SIGTERM. Exiting...
okt 08 23:07:57 Desktop-Ubuntu systemd[1]: Stopping Mopidy music server...
okt 08 23:02:37 Desktop-Ubuntu mopidy[4443]: INFO     [HttpServer] mopidy.internal.path Creating dir file:///var/lib/mopidy/http
okt 08 23:02:37 Desktop-Ubuntu mopidy[4443]: INFO     [MainThread] mopidy.commands Starting GLib mainloop
okt 08 23:02:37 Desktop-Ubuntu mopidy[4443]: INFO     [HttpFrontend-8] mopidy.http.actor HTTP server running at [::ffff:127.0.0.1]:6680
okt 08 23:02:37 Desktop-Ubuntu mopidy[4443]: INFO     [MainThread] mopidy.commands Starting Mopidy frontends: HttpFrontend
okt 08 23:02:37 Desktop-Ubuntu mopidy[4443]: INFO     [MainThread] mopidy.commands Starting Mopidy core
okt 08 23:02:37 Desktop-Ubuntu mopidy[4443]: INFO     [Audio-2] mopidy.audio.actor Audio output set to "autoaudiosink"
okt 08 23:02:37 Desktop-Ubuntu mopidy[4443]: INFO     [MainThread] mopidy.commands Starting Mopidy backends: FileBackend, M3UBackend, StreamBackend
okt 08 23:02:37 Desktop-Ubuntu mopidy[4443]: INFO     [MainThread] mopidy.commands Starting Mopidy audio
okt 08 23:02:37 Desktop-Ubuntu mopidy[4443]: INFO     [MainThread] mopidy.commands Starting Mopidy mixer: SoftwareMixer
okt 08 23:02:37 Desktop-Ubuntu mopidy[4443]: INFO     [MainThread] mopidy.__main__ Disabled extensions: none
okt 08 23:02:37 Desktop-Ubuntu mopidy[4443]: INFO     [MainThread] mopidy.__main__ Enabled extensions: http, stream, m3u, softwaremixer, file
okt 08 23:02:37 Desktop-Ubuntu mopidy[4443]: INFO     [MainThread] mopidy.config Loading config from command line options
okt 08 23:02:37 Desktop-Ubuntu mopidy[4443]: INFO     [MainThread] mopidy.config Loading config from file:///etc/mopidy/mopidy.conf
okt 08 23:02:37 Desktop-Ubuntu mopidy[4443]: INFO     [MainThread] mopidy.config Loading config from file:///usr/share/mopidy/conf.d/mopidy.conf
okt 08 23:02:37 Desktop-Ubuntu mopidy[4443]: INFO     [MainThread] mopidy.config Loading config from builtin defaults
okt 08 23:02:37 Desktop-Ubuntu mopidy[4443]: INFO     [MainThread] mopidy.__main__ Starting Mopidy 3.3.0
okt 08 23:02:36 Desktop-Ubuntu systemd[1]: Started Mopidy music server.
okt 08 23:02:36 Desktop-Ubuntu systemd[1]: Starting Mopidy music server...
